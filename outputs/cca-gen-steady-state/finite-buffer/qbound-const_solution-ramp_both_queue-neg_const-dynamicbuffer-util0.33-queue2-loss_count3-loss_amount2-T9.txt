[08/30 16:25:17]  --------------------------------------------------------------------------------
[08/30 16:25:17]  Iteration: 1 (0 solution, 0 counterexamples)
[08/30 16:25:17]  Generator returned sat in 0.005079 secs.
[08/30 16:25:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:17]  Improved gap from 68.1 to 100
[08/30 16:25:17]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/30 16:25:17]  Verifer returned sat in 0.341872 secs.
[08/30 16:25:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0       -32187.1       -32187.4   32187.3     -32187.1       0.1     -32187.4        0.0      0.3             0.2       4.0             -32187.4                -1.0            -1
1       -32087.0       -32187.3   32187.3     -32087.0     100.4     -32187.3        0.1    100.2             0.2       2.0             -32187.4                 0.0         False
2       -32087.0       -32087.2   32187.3     -32087.0     100.1     -32087.2        0.1      0.1           -99.8       2.0             -32087.1                 0.0         False
3       -31987.1       -31987.3   32187.3     -31987.1     100.0     -31987.3        0.1      0.1           -99.9       1.0             -31987.2                 0.0         False
4       -31387.0       -31887.0   32187.3     -31387.0     600.2     -31887.0      400.1     99.9             0.2       1.0             -31987.2                 0.0         False
5       -29685.9       -31787.0   32187.3     -29685.9    1801.0     -31787.0     2001.2     99.9             0.2       1.0             -31987.2                 0.0         False
6       -25583.4       -31687.1   32187.3     -25583.4    4202.4     -31687.1     6003.7    100.0             0.2       2.0             -31987.2                 0.0         False
7       -16678.2       -31587.0   32187.3     -16678.2    9005.2     -31587.0    14808.9     99.9             0.2       1.0             -31987.2                 0.0         False
8         1832.3       -31487.0   32187.3       1832.3   18610.4     -31487.0    33219.4     99.9             0.2       1.0             -31987.2                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=328193/10, 
, buffer=1/5.[0m
[08/30 16:25:18]  --------------------------------------------------------------------------------
[08/30 16:25:18]  Iteration: 2 (0 solution, 1 counterexamples)
[08/30 16:25:18]  Generator returned sat in 0.038741 secs.
[08/30 16:25:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:18]  Improved gap from 0.00125 to 100
[08/30 16:25:18]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/30 16:25:18]  Verifer returned sat in 0.435783 secs.
[08/30 16:25:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0    -32586.9845    -32587.0845  32287.08275  -32586.9845    0.0005  -32587.0845     0.0990    0.0010          0.0005       3.0          -32587.0845                -1.0            -1
1    -32586.9845    -32587.0840  32287.08275  -32586.9845    0.0005  -32587.0840     0.0990    0.0005        -99.9995       2.0          -32587.0845                 0.0         False
2    -32386.9845    -32487.0840  32287.08275  -32386.9845  200.0005  -32487.0840     0.0990  100.0005          0.0005       1.0          -32587.0845                 0.0         False
3    -32386.9845    -32387.0840  32287.08275  -32386.9845  100.0000  -32387.0840     0.0990    0.0005        -99.9995       2.0          -32387.0835                 0.0         False
4    -31986.9840    -32187.0920  32287.08275  -31986.9840  400.0010  -32187.0920   200.0990    0.0090          0.0010       1.0          -32387.0835                 0.0         False
5    -31986.9830    -32187.0825  32287.08275  -31986.9830    0.0100  -32187.0825   200.0990    0.0005        -99.9980       1.0          -32187.0820                 0.0         False
6    -31386.9805    -32025.0840  32287.08275  -31386.9805  600.0030  -32025.0840   600.1025   38.0010          0.0010       1.0          -32187.0820                 0.0         False
7    -31386.9805    -31987.0840  32287.08275  -31386.9805    0.0100  -31987.0840   600.1025    0.0010        -99.9990       2.0          -31987.0830                 0.0         False
8    -30986.9655    -31787.0920  32287.08275  -30986.9655  400.0160  -31787.0920   800.1175    0.0090          0.0010       1.0          -31987.0830                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=1200037/2000, 
, buffer=1/1000.[0m
[08/30 16:25:19]  --------------------------------------------------------------------------------
[08/30 16:25:19]  Iteration: 3 (0 solution, 2 counterexamples)
[08/30 16:25:19]  Generator returned sat in 0.053724 secs.
[08/30 16:25:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:20]  Improved gap from 0.00125 to 100
[08/30 16:25:21]  Improved number of small numbers from 73 to 80 out of a max of 114
[08/30 16:25:21]  Verifer returned sat in 1.336736 secs.
[08/30 16:25:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33036.933105  -33036.933833  32387.101917 -33036.933105    0.000977 -33036.933833   0.000000    0.000728      -99.999272       4.0        -33036.933833                -1.0            -1
1  -32736.933833  -32936.933833  32387.101917 -32736.933833  300.000000 -32936.933833   0.000000  200.000000      100.000000       1.0        -33036.933833                 1.0         False
2  -32736.933833  -32736.933838  32387.101917 -32736.933833  199.999023 -32736.933838   0.000000    0.000005        0.000000       2.0        -32736.933833                 0.0         False
3  -32686.933838  -32736.933833  32387.101917 -32686.933838   50.000000 -32736.933833   0.000000   49.999995      -50.000005       3.0        -32686.933838                 1.0         False
4  -32536.933833  -32603.598833  32387.101917 -32536.933833  200.000000 -32603.598833   0.000000   66.665000        0.000000       1.0        -32686.933838                 1.0         False
5  -32136.931333  -32536.932861  32387.101917 -32136.931333  466.667500 -32536.932861   0.000833  400.000695      300.001667       1.0        -32686.933838                 0.0         False
6  -32136.931333  -32336.938833  32387.101917 -32136.931333    0.010000 -32336.938833   0.000833  200.006667      200.001667       2.0        -32136.932167                 0.0         False
7  -32136.930500  -32236.933833  32387.101917 -32136.930500  200.007500 -32236.933833   0.000833  100.002500      100.002500       3.0        -32136.932167                 1.0         False
8  -31853.593000  -32236.932861  32387.101917 -31853.593000  383.340000 -32236.932861   0.000833  383.339028      283.340000       4.0        -32136.932167                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=1/1200, 
, buffer=180001/600.[0m
[08/30 16:25:21]  --------------------------------------------------------------------------------
[08/30 16:25:21]  Iteration: 4 (0 solution, 3 counterexamples)
[08/30 16:25:21]  Generator returned sat in 0.129123 secs.
[08/30 16:25:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:22]  Improved number of small numbers from 58 to 69 out of a max of 113
[08/30 16:25:22]  Verifer returned sat in 0.919139 secs.
[08/30 16:25:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33136.134033  -33136.333984  32586.501917 -33136.134033     100.1 -33136.333984        0.0   0.199951        0.199800       9.0        -33136.333984                -1.0            -1
1  -33036.333984  -33136.333833  32586.501917 -33036.333984     100.0 -33136.333833        0.0  99.999849       -0.000151       2.0        -33036.333984                 1.0         False
2  -32936.033833  -32936.333833  32586.501917 -32936.033833     200.3 -32936.333833        0.1   0.200000        0.200000       1.0        -33036.333984                 1.0         False
3  -32835.933833  -32836.333833  32586.501917 -32835.933833     100.3 -32836.333833        0.2   0.200000        0.200000       1.0        -32836.133833                 0.0         False
4  -32635.533833  -32836.033833  32586.501917 -32635.533833     200.6 -32836.033833      100.6  99.900000        0.200000       1.0        -32836.133833                 0.0         False
5  -32334.233833  -32736.033833  32586.501917 -32334.233833     401.2 -32736.033833      301.9  99.900000        0.200000       1.0        -32836.133833                 0.0         False
6  -31631.733833  -32636.033833  32586.501917 -31631.733833     802.4 -32636.033833      904.4  99.900000        0.200000       1.0        -32836.133833                 0.0         False
7  -30126.833833  -32536.033833  32586.501917 -30126.833833    1604.8 -32536.033833     2309.3  99.900000        0.200000       1.0        -32836.133833                 0.0         False
8  -27017.133833  -32436.033936  32586.501917 -27017.133833    3209.6 -32436.033936     5319.0  99.900102        0.200000       1.0        -32836.133833                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=26092/5, 
, buffer=1/5.[0m
[08/30 16:25:23]  --------------------------------------------------------------------------------
[08/30 16:25:23]  Iteration: 5 (0 solution, 4 counterexamples)
[08/30 16:25:23]  Generator returned sat in 0.071139 secs.
[08/30 16:25:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:24]  Improved number of small numbers from 77 to 85 out of a max of 113
[08/30 16:25:24]  Verifer returned sat in 0.728735 secs.
[08/30 16:25:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32934.237793  -33234.241333  32485.003167 -32934.237793  300.002441 -33234.241333    0.00000  300.00354       300.00354       2.0        -33234.241333                -1.0            -1
1  -32934.237793  -33234.241333  32485.003167 -32934.237793  300.002441 -33234.241333    0.00000  300.00354       200.00354       2.0        -33234.241333                 0.0         False
2  -32734.236333  -33034.241333  32485.003167 -32734.236333  500.005000 -33034.241333    0.00125  300.00375       300.00375       3.0        -33234.241333                 0.0         False
3  -32734.236333  -32934.260083  32485.003167 -32734.236333   50.019375 -32934.260083    0.00125  200.02250       200.00375       4.0        -32734.237583                 0.0         False
4  -32534.238833  -32934.241333  32485.003167 -32534.238833  400.020000 -32934.241333    0.00125  400.00125       300.00125       5.0        -32734.237583                 0.0         False
5  -32534.238833  -32784.251333  32485.003167 -32534.238833    0.010000 -32784.251333    0.00125  250.01125       200.00125       4.0        -32534.240083                 1.0         False
6  -32534.238833  -32734.237793  32485.003167 -32534.238833  250.010000 -32734.237793    0.00125  199.99771       100.00125       5.0        -32534.240083                 0.0         False
7  -32534.238833  -32534.241333  32485.003167 -32534.238833    0.010000 -32534.241333    0.00125    0.00125         0.00125       4.0        -32534.240083                 1.0         False
8  -32134.220083  -32534.239014  32485.003167 -32134.220083  400.020000 -32534.239014    0.01750  400.00143       300.00375       1.0        -32534.240083                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=13/800, 
, buffer=240003/800.[0m
[08/30 16:25:25]  --------------------------------------------------------------------------------
[08/30 16:25:25]  Iteration: 6 (0 solution, 5 counterexamples)
[08/30 16:25:25]  Generator returned sat in 0.084390 secs.
[08/30 16:25:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:25]  Improved gap from 0.0003125 to 100
[08/30 16:25:26]  Improved number of small numbers from 94 to 96 out of a max of 114
[08/30 16:25:26]  Verifer returned sat in 0.765580 secs.
[08/30 16:25:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32867.558105  -33234.236333  32485.003167 -32867.558105     0.002500 -33234.236333    0.000000  366.678228      266.678228       2.0        -33234.236333                -1.0            -1
1  -32867.558105  -33034.236572  32485.003167 -32867.558105     0.002500 -33034.236572    0.000000  166.678467      166.678228       2.0        -33234.236333                 0.0         False
2  -32834.239014  -32934.236333  32485.003167 -32834.239014   199.997559 -32934.236333    0.000000   99.997320       99.997320       3.0        -33234.236333                 0.0         False
3  -32834.236333  -32867.555500  32485.003167 -32834.236333   100.000000 -32867.555500    0.000000   33.319167        0.000000       2.0        -32834.236333                 0.0         False
4  -32300.874667  -32834.233833  32485.003167 -32300.874667   566.680833 -32834.233833    0.002500  533.356667      433.359167       1.0        -32834.236333                 0.0         False
5  -32300.874667  -32734.236333  32485.003167 -32300.874667     0.010000 -32734.236333    0.002500  433.359167      333.359167       2.0        -32300.877167                 0.0         False
6  -32300.874667  -32634.236333  32485.003167 -32300.874667   200.020000 -32634.236333    0.002500  333.359167      233.359167       3.0        -32300.877167                 0.0         False
7  -32000.874667  -32534.236333  32485.003167 -32000.874667   633.359167 -32534.236333    0.002500  533.359167      433.359167       4.0        -32300.877167                 0.0         False
8  -30984.200083  -32434.236333  32485.003167 -30984.200083  1550.033750 -32434.236333  916.677083  533.359167      433.359167       5.0        -32300.877167                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=2200019/2400, 
, buffer=520031/1200.[0m
[08/30 16:25:26]  --------------------------------------------------------------------------------
[08/30 16:25:26]  Iteration: 7 (0 solution, 6 counterexamples)
[08/30 16:25:26]  Generator returned sat in 0.032239 secs.
[08/30 16:25:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:27]  Improved number of small numbers from 77 to 89 out of a max of 113
[08/30 16:25:27]  Verifer returned sat in 0.824218 secs.
[08/30 16:25:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34690.915039  -34790.913818  32684.998047 -34690.915039     0.000488 -34790.913818     0.000000    99.998779       99.998291       7.0        -34790.913818                -1.0            -1
1  -34690.913818  -34690.914199  32684.998291 -34690.913818   100.000000 -34690.914199     0.000000     0.000381       -0.000244       1.0        -34790.913818                 1.0         False
2  -32400.874512  -34590.913574  32684.998291 -32400.874512  2290.039688 -34590.913574     0.000625  2190.038437     2190.038437       1.0        -34790.913818                 0.0         False
3  -32300.873887  -34535.914199  32684.998291 -32300.873887  2290.039062 -34535.914199     0.001250  2235.039062     2190.038437       2.0        -32300.875137                 0.0         False
4  -32300.873887  -34490.913574  32684.998291 -32300.873887     0.010000 -34490.913574     0.001250  2190.038437     2090.038437       3.0        -32300.875137                 1.0         False
5  -32300.873887  -34390.913574  32684.998291 -32300.873887   400.016250 -34390.913574     0.001250  2090.038437     1990.038438       4.0        -32300.875137                 1.0         False
6  -32300.873887  -34290.913574  32684.998291 -32300.873887  1000.024375 -34290.913574     0.001250  1990.038438     1890.038438       5.0        -32300.875137                 1.0         False
7  -32300.873887  -34090.913574  32684.998291 -32300.873887  1990.037812 -34090.913574     0.001250  1790.038438     1790.038438       6.0        -32300.875137                 1.0         False
8  -30305.855605  -33990.913574  32684.998291 -30305.855605  3785.056719 -33990.913574  1495.019531  2190.038437     2190.038437       7.0        -32300.875137                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=9568117/6400, 
, buffer=7008123/3200.[0m
[08/30 16:25:28]  --------------------------------------------------------------------------------
[08/30 16:25:28]  Iteration: 8 (0 solution, 7 counterexamples)
[08/30 16:25:28]  Generator returned sat in 0.118637 secs.
[08/30 16:25:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:29]  Improved number of small numbers from 58 to 97 out of a max of 113
[08/30 16:25:29]  Verifer returned sat in 0.996232 secs.
[08/30 16:25:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34390.927246  -34790.927490  32884.997559 -34390.927246    0.000977 -34790.927490        0.0  400.000244      400.000244       3.0        -34790.927490                -1.0            -1
1  -34390.927246  -34690.927490  32884.997559 -34390.927246    0.000977 -34690.927490        0.0  300.000244      300.000244       3.0        -34790.927490                 0.0         False
2  -34390.926514  -34690.926419  32884.997559 -34390.926514  300.000977 -34690.926419        0.0  299.999906      200.000977       4.0        -34790.927490                 0.0         False
3  -34390.926514  -34590.927246  32884.997559 -34390.926514    0.010742 -34590.927246        0.0  200.000732      100.000977       5.0        -34390.926514                 0.0         False
4  -34390.926514  -34390.935586  32884.997559 -34390.926514    0.010000 -34390.935586        0.0    0.009072        0.000977       6.0        -34390.926514                 0.0         False
5  -34390.925586  -34390.927253  32884.997559 -34390.925586    0.010000 -34390.927253        0.0    0.001667      -99.998096       7.0        -34390.926514                 0.0         False
6  -33790.908919  -34190.927490  32884.997559 -33790.908919  600.018333 -34190.927490        0.0  400.018571      400.018571       1.0        -34390.926514                 1.0         False
7  -33790.908919  -34190.926270  32884.997559 -33790.908919    0.010000 -34190.926270        0.0  400.017350      300.018571       2.0        -33790.908919                 0.0         False
8  -33790.908919  -34090.927246  32884.997559 -33790.908919    0.010000 -34090.927246        0.0  300.018327      200.018571       3.0        -33790.908919                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=819239/2048.[0m
[08/30 16:25:30]  --------------------------------------------------------------------------------
[08/30 16:25:30]  Iteration: 9 (0 solution, 8 counterexamples)
[08/30 16:25:30]  Generator returned sat in 0.156699 secs.
[08/30 16:25:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:31]  Improved number of small numbers from 68 to 76 out of a max of 113
[08/30 16:25:31]  Verifer returned sat in 1.053749 secs.
[08/30 16:25:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34090.915996  -34590.917236  32884.997559 -34090.915996    0.001465 -34590.917236        0.0  500.001240      500.000000       7.0        -34590.917236                -1.0            -1
1  -34090.915996  -34590.915996  32884.997559 -34090.915996  499.999756 -34590.915996        0.0  500.000000      400.000000       6.0        -34590.917236                 0.0         False
2  -34090.915996  -34490.915996  32884.997559 -34090.915996  499.998779 -34490.915996        0.0  400.000000      300.000000       6.0        -34090.915996                 0.0         False
3  -34090.915996  -34390.915996  32884.997559 -34090.915996    0.001250 -34390.915996        0.0  300.000000      200.000000       7.0        -34090.915996                 0.0         False
4  -34090.915996  -34257.590163  32884.997559 -34090.915996    0.010000 -34257.590163        0.0  166.674167      100.000000       8.0        -34090.915996                 0.0         False
5  -34090.915996  -34124.259329  32884.997559 -34090.915996  166.672917 -34124.259329        0.0   33.343333        0.000000       9.0        -34090.915996                 1.0         False
6  -33774.258079  -34090.915996  32884.997559 -33774.258079  350.001250 -34090.915996        0.0  316.657917      216.657917       9.0        -34090.915996                 1.0         False
7  -33590.914746  -33990.915771  32884.997559 -33590.914746  500.001250 -33990.915771        0.0  400.001025      300.001250       2.0        -34090.915996                 1.0         False
8  -33590.914746  -33790.916016  32884.997559 -33590.914746    0.010000 -33790.916016        0.0  200.001270      200.001250       3.0        -33590.914746                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=500.[0m
[08/30 16:25:32]  --------------------------------------------------------------------------------
[08/30 16:25:32]  Iteration: 10 (0 solution, 9 counterexamples)
[08/30 16:25:33]  Generator returned sat in 0.461649 secs.
[08/30 16:25:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:33]  Improved number of small numbers from 112 to 113 out of a max of 113
[08/30 16:25:33]  Verifer returned sat in 0.258462 secs.
[08/30 16:25:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34491.016016  -34491.215820  32884.997314 -34491.016016    0.099854 -34491.215820    0.000000   0.199805        0.199805       2.0        -34491.215820                -1.0            -1
1  -34391.216064  -34491.215820  32884.997559 -34391.216064   99.999756 -34491.215820    0.000000  99.999756        0.000000       2.0        -34491.215820                 0.0         False
2  -34291.216064  -34291.216064  32884.997559 -34291.216064  199.999756 -34291.216064    0.000000   0.000000        0.000000       1.0        -34491.215820                 0.0         False
3  -34091.316162  -34191.216064  32884.997559 -34091.316162  199.899902 -34191.216064   99.699951   0.199951        0.199951       1.0        -34191.016113                 0.0         False
4  -33891.616211  -34190.815918  32884.997559 -33891.616211  199.899902 -34190.815918  199.399902  99.799805        0.199951       1.0        -34191.016113                 0.0         False
5  -33791.516113  -34090.815918  32884.997559 -33791.516113  199.899902 -34090.815918  199.500000  99.799805        0.199951       1.0        -34191.016113                 0.0         False
6  -33691.416016  -33891.216064  32884.997559 -33691.416016  199.899902 -33891.216064  199.600098   0.199951        0.199951       1.0        -34191.016113                 0.0         False
7  -33491.716064  -33890.815918  32884.997559 -33491.716064  199.899902 -33890.815918  299.300049  99.799805        0.199951       1.0        -34191.016113                 0.0         False
8  -33391.615967  -33790.916260  32884.997559 -33391.615967  199.899902 -33790.916260  299.400146  99.900146        0.199951       1.0        -34191.016113                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=409601/4096, 
, buffer=819/4096.[0m
[08/30 16:25:34]  --------------------------------------------------------------------------------
[08/30 16:25:34]  Iteration: 11 (0 solution, 10 counterexamples)
[08/30 16:25:34]  Generator returned sat in 0.590785 secs.
[08/30 16:25:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:35]  Improved gap from 0.1 to 7.8125
[08/30 16:25:35]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/30 16:25:35]  Verifer returned sat in 0.724209 secs.
[08/30 16:25:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33945.080811  -34020.085938  32884.997314 -33945.080811  250.007324 -34020.085938        0.0   75.005127       75.002686       1.0        -34020.085938                -1.0            -1
1  -33770.080811  -34020.083496  32884.997314 -33770.080811  250.005127 -34020.083496       75.0  175.002686       75.002686       2.0        -33845.080811                 0.0         False
2  -33695.081055  -33895.083496  32884.997314 -33695.081055  250.002441 -33895.083496       75.0  125.002441       50.002441       2.0        -33770.081055                 1.0         False
3  -33570.083496  -33770.078516  32884.997314 -33570.083496  250.000000 -33770.078516       75.0  124.995020       75.000000       1.0        -33645.083496                 1.0         False
4  -33570.078516  -33645.081055  32884.997314 -33570.078516  125.000000 -33645.081055       75.0    0.002539      -24.995020       1.0        -33645.078516                 0.0         False
5  -33507.581055  -33606.016113  32947.492432 -33507.581055   62.500000 -33606.016113       75.0   23.435059       -0.002441       1.0        -33582.581055                 0.0         False
6  -33499.766113  -33582.578613  33039.679932 -33499.766113   31.250000 -33582.578613       75.0    7.812500        0.000000       1.0        -33574.766113                 0.0         False
7  -33491.953613  -33574.766113  33131.867432 -33491.953613   15.625000 -33574.766113       75.0    7.812500        0.000000       2.0        -33566.953613                 0.0         False
8  -33491.953613  -33566.953613  33206.872314 -33491.953613    0.010000 -33566.953613       75.0    0.000000      -24.995117       2.0        -33566.953613                 1.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=307211/4096.[0m
[08/30 16:25:36]  --------------------------------------------------------------------------------
[08/30 16:25:36]  Iteration: 12 (0 solution, 11 counterexamples)
[08/30 16:25:36]  Generator returned sat in 0.203395 secs.
[08/30 16:25:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:37]  Improved gap from 0.0 to 100
[08/30 16:25:38]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/30 16:25:38]  Verifer returned sat in 1.387304 secs.
[08/30 16:25:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33798.990967  -33799.190811  32884.997314 -33798.990967    0.100098 -33799.190811        0.0   0.199844        0.199844       1.0        -33799.190811                -1.0            -1
1  -33699.090811  -33716.790811  32884.997314 -33699.090811  100.100000 -33716.790811        0.0  17.700000        0.100000       1.0        -33799.190811                 0.0         False
2  -33599.090811  -33616.490811  32884.997314 -33599.090811  117.700000 -33616.490811        0.0  17.400000        0.100000       1.0        -33799.190811                 0.0         False
3  -33469.990811  -33506.390811  32884.997314 -33469.990811  146.500000 -33506.390811       29.0   7.400000        0.200000       1.0        -33799.190811                 0.0         False
4  -33330.990811  -33438.190811  32884.997314 -33330.990811  146.400000 -33438.190811       68.0  39.200000        0.200000       1.0        -33398.990811                 0.0         False
5  -33230.890811  -33338.090811  32884.997314 -33230.890811  139.300000 -33338.090811       68.1  39.100000        0.200000       1.0        -33298.990811                 0.0         False
6  -33130.790811  -33234.724144  32884.997314 -33130.790811  139.200000 -33234.724144       68.2  35.733333        0.200000       1.0        -33198.990811                 0.0         False
7  -33030.690811  -33145.390811  32884.997314 -33030.690811  135.833333 -33145.390811       68.3  46.400000        0.200000       1.0        -33098.990811                 0.0         False
8  -32930.690811  -33098.890625  32884.997314 -32930.690811  146.400000 -33098.890625       68.3  99.899814        0.200000       1.0        -33098.990811                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=3/10, 
, buffer=1/5.[0m
[08/30 16:25:38]  --------------------------------------------------------------------------------
[08/30 16:25:38]  Iteration: 13 (0 solution, 12 counterexamples)
[08/30 16:25:40]  Generator returned sat in 1.358703 secs.
[08/30 16:25:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:41]  Improved gap from 0.0 to 9.375
[08/30 16:25:41]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/30 16:25:41]  Verifer returned sat in 1.150494 secs.
[08/30 16:25:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34136.605713  -34136.608398  32931.864990 -34136.605713    0.002500 -34136.608398   0.000000    0.002686      -99.997070       2.0        -34136.608398                -1.0            -1
1  -33699.103516  -34036.608154  32931.864990 -33699.103516  437.504883 -34036.608154   0.002441  337.502197      237.502686       1.0        -34136.608398                 0.0         False
2  -33599.100830  -33936.608398  32931.864990 -33599.100830  437.504883 -33936.608398   0.005127  337.502441      237.502686       2.0        -34136.608398                 0.0         False
3  -33599.100830  -33836.608398  32931.864990 -33599.100830  300.000000 -33836.608398   0.005127  237.502441      137.502686       3.0        -33599.105957                 0.0         False
4  -33599.100830  -33674.108398  32931.864990 -33599.100830  150.000000 -33674.108398   0.005127   75.002441       37.502686       3.0        -33599.105957                 1.0         False
5  -33599.100830  -33636.608398  32994.362305 -33599.100830   75.000000 -33636.608398   0.005127   37.502441        0.000000       4.0        -33599.105957                 1.0         False
6  -33599.100830  -33599.105957  33084.987305 -33599.100830   37.500000 -33599.105957   0.005127    0.000000       -9.375000       5.0        -33599.105957                 1.0         False
7  -33580.350830  -33589.730957  33175.612305 -33580.350830   18.750000 -33589.730957   0.005127    9.375000        0.000000       1.0        -33580.355957                 1.0         False
8  -33580.350830  -33580.355957  33175.612305 -33580.350830    0.010000 -33580.355957   0.005127    0.000000     -100.000000       2.0        -33580.355957                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=972811/4096.[0m
[08/30 16:25:42]  --------------------------------------------------------------------------------
[08/30 16:25:42]  Iteration: 14 (0 solution, 13 counterexamples)
[08/30 16:25:44]  Generator returned sat in 1.359353 secs.
[08/30 16:25:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:44]  Improved gap from 0.0 to 23.4375
[08/30 16:25:44]  Improved number of small numbers from 54 to 114 out of a max of 114
[08/30 16:25:44]  Verifer returned sat in 0.449252 secs.
[08/30 16:25:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33692.852783  -33692.854004  32588.110352 -33692.852783  100.003418 -33692.854004   0.000000    0.001221        0.001221       2.0        -33692.854004                -1.0            -1
1  -33592.850342  -33692.854004  32588.110352 -33592.850342  100.003662 -33692.854004   0.002441  100.001221        0.001221       2.0        -33692.854004                 1.0         False
2  -33492.849854  -33492.854004  32588.110352 -33492.849854  200.001709 -33492.854004   0.002930    0.001221        0.001221       1.0        -33692.854004                 1.0         False
3  -33445.976074  -33445.979492  32617.798096 -33445.976074   46.875000 -33445.979492   0.002930    0.000488      -23.437256       1.0        -33445.979004                 0.0         False
4  -33399.101562  -33417.293213  32689.112061 -33399.101562   46.875000 -33417.293213   0.002930   18.188721       -5.248779       1.0        -33445.979004                 0.0         False
5  -33370.415283  -33393.855713  32765.674316 -33370.415283   46.875000 -33393.855713   0.002930   23.437500       -0.000244       1.0        -33445.979004                 0.0         False
6  -33346.977783  -33370.417725  32842.236572 -33346.977783   46.875000 -33370.417725   0.002930   23.437012       -0.000488       1.0        -33445.979004                 0.0         False
7  -33323.539795  -33346.980225  32918.798828 -33323.539795   46.875000 -33346.980225   0.002930   23.437500       -0.000244       1.0        -33445.979004                 0.0         False
8  -33300.102295  -33318.293701  32918.799072 -33300.102295   46.875000 -33318.293701   0.002930   18.188477      -76.562500       1.0        -33445.979004                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=5/4096.[0m
[08/30 16:25:45]  --------------------------------------------------------------------------------
[08/30 16:25:45]  Iteration: 15 (0 solution, 14 counterexamples)
[08/30 16:25:45]  Generator returned sat in 0.070235 secs.
[08/30 16:25:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:45]  Improved gap from 0.000625 to 0
[08/30 16:25:46]  Improved number of small numbers from 107 to 108 out of a max of 114
[08/30 16:25:46]  Verifer returned sat in 0.362100 secs.
[08/30 16:25:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33599.123047  -33899.122070  32694.378535 -33599.123047    0.000732 -33899.122070   0.000000  299.999023      199.999141       1.0        -33899.122070                -1.0            -1
1  -33599.123047  -33699.122187  32694.378535 -33599.123047    0.000732 -33699.122187   0.000000   99.999141       99.999141       2.0        -33899.122070                 0.0         False
2  -33399.110938  -33599.122314  32694.378535 -33399.110938  300.011250 -33599.122314   0.000625  200.010752      200.010625       1.0        -33899.122070                 1.0          True
3  -33399.110938  -33499.122187  32694.378535 -33399.110938    0.000732 -33499.122187   0.000625  100.010625      100.010625       2.0        -33399.111563                 0.0         False
4  -33399.110938  -33399.123047  32694.378535 -33399.110938    0.010000 -33399.123047   0.000625    0.011484        0.010625       3.0        -33399.111563                 1.0         False
5  -33399.110938  -33399.122070  32794.367910 -33399.110938    0.010000 -33399.122070   0.000625    0.010508        0.000000       4.0        -33399.111563                 1.0         False
6  -33399.110938  -33399.111563  32894.367676 -33399.110938    0.010000 -33399.111563   0.000625    0.000000       -0.000234       5.0        -33399.111563                 1.0         False
7  -33399.100937  -33399.102188  32994.357666 -33399.100937    0.010000 -33399.102188   0.000625    0.000625       -0.000244       1.0        -33399.111563                 1.0         False
8  -33399.091562  -33399.101074  32994.357666 -33399.091562    0.010000 -33399.101074   0.000625    0.008887      -99.990869       1.0        -33399.111563                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=320017/1600.[0m
[08/30 16:25:46]  --------------------------------------------------------------------------------
[08/30 16:25:46]  Iteration: 16 (0 solution, 15 counterexamples)
[08/30 16:25:47]  Generator returned sat in 0.592979 secs.
[08/30 16:25:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:48]  Improved number of small numbers from 59 to 106 out of a max of 113
[08/30 16:25:48]  Verifer returned sat in 1.030182 secs.
[08/30 16:25:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33599.110596  -34099.110107  32894.366455 -33599.110596  500.002441 -34099.110107   0.000000  499.999512      399.999512       7.0        -34099.110107                -1.0            -1
1  -33599.107666  -33899.112695  32894.366455 -33599.107666  500.002441 -33899.112695   0.000000  300.005029      300.002441       6.0        -34099.110107                 0.0         False
2  -33399.110820  -33799.110107  32894.366455 -33399.110820  500.001875 -33799.110107   0.000000  399.999287      399.999287       7.0        -33399.110820                 0.0         False
3  -33299.108887  -33799.109619  32894.366455 -33299.108887  500.001221 -33799.109619   0.000488  500.000244      400.000732       8.0        -33299.109375                 0.0         False
4  -33299.108887  -33699.108945  32894.366455 -33299.108887    0.010000 -33699.108945   0.000488  399.999570      300.000732       9.0        -33299.109375                 0.0         False
5  -33299.108887  -33599.110107  32894.366455 -33299.108887  300.020625 -33599.110107   0.000488  300.000732      200.000732       5.0        -33299.109375                 1.0         False
6  -33299.108887  -33399.110107  32894.366455 -33299.108887  300.000000 -33399.110107   0.000488  100.000732      100.000732       4.0        -33299.109375                 0.0         False
7  -32799.110352  -33299.110107  32894.366455 -32799.110352  599.999268 -33299.110107  99.999023  400.000732      400.000732       5.0        -33299.109375                 0.0         False
8  -32799.110352  -33299.109131  32894.366455 -32799.110352    0.010000 -33299.109131  99.999023  399.999756      300.000732       2.0        -32899.109375                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=204797/2048, 
, buffer=1638403/4096.[0m
[08/30 16:25:49]  --------------------------------------------------------------------------------
[08/30 16:25:49]  Iteration: 17 (0 solution, 16 counterexamples)
[08/30 16:25:51]  Generator returned sat in 1.537903 secs.
[08/30 16:25:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:52]  Improved gap from 0.1 to 100
[08/30 16:25:52]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/30 16:25:52]  Verifer returned sat in 0.733820 secs.
[08/30 16:25:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34198.452637  -34198.552734  33093.608643 -34198.452637  100.700195 -34198.552734    0.000000    0.100098       -0.100098       8.0        -34198.552734                -1.0            -1
1  -34097.952881  -34198.352539  33093.608643 -34097.952881  100.599854 -34198.352539    0.099854  100.299805        0.299805       1.0        -34098.052734                 1.0         False
2  -34097.652832  -34098.352539  33093.608643 -34097.652832  100.599854 -34098.352539    0.099854    0.599854      -99.400146       2.0        -34098.052734                 0.0         False
3  -33898.252930  -33998.352539  33093.608643 -33898.252930  199.999756 -33998.352539    0.099854   99.999756       -0.000244       1.0        -34098.052734                 0.0         False
4  -33798.052490  -33798.352539  33093.608643 -33798.052490  200.200195 -33798.352539    0.099854    0.200195        0.200195       1.0        -34098.052734                 0.0         False
5  -33398.252686  -33698.352783  33093.608643 -33398.252686  400.000000 -33698.352783  299.800049    0.300049        0.299805       1.0        -34098.052734                 0.0         False
6  -33198.552734  -33598.352783  33093.608643 -33198.552734  200.000000 -33598.352783  399.500000    0.300049        0.299805       1.0        -33598.052734                 0.0         False
7  -33098.852783  -33498.452637  33093.608643 -33098.852783  100.000000 -33498.452637  399.500000    0.099854       -0.000244       1.0        -33498.352783                 0.0         False
8  -32799.052734  -33498.352539  33093.608643 -32799.052734  299.899902 -33498.352539  599.000000  100.299805        0.299805       1.0        -33498.352783                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=2453095/4096, 
, buffer=307/1024.[0m
[08/30 16:25:52]  --------------------------------------------------------------------------------
[08/30 16:25:52]  Iteration: 18 (0 solution, 17 counterexamples)
[08/30 16:25:53]  Generator returned sat in 0.099437 secs.
[08/30 16:25:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:53]  Improved gap from 0.0004166666666666667 to 100
[08/30 16:25:54]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/30 16:25:54]  Verifer returned sat in 1.171564 secs.
[08/30 16:25:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33698.551270  -33698.568984  33093.318005 -33698.551270  100.000833 -33698.568984    0.000000    0.017715        0.008965       9.0        -33698.568984                -1.0            -1
1  -33598.568151  -33598.568568  33093.318005 -33598.568151  100.000833 -33598.568568    0.000000    0.000417       -0.007917       1.0        -33698.568984                 1.0         False
2  -33498.560234  -33598.560234  33093.318005 -33498.560234  100.008333 -33598.560234    0.000000  100.000000        0.000000       1.0        -33698.568984                 0.0         False
3  -33498.560234  -33498.560234  33093.318005 -33498.560234    0.000417 -33498.560234    0.000000    0.000000     -100.000000       2.0        -33498.560234                 0.0         False
4  -33298.551484  -33398.560234  33093.318005 -33298.551484  200.008750 -33398.560234    0.000000  100.008750        0.008750       1.0        -33498.560234                 0.0         False
5  -33198.551901  -33198.560234  33093.318005 -33198.551901  200.008333 -33198.560234    0.000000    0.008333        0.008333       1.0        -33198.551901                 0.0         False
6  -32798.560234  -33098.560234  33093.318005 -32798.560234  400.000000 -33098.560234  299.990833    0.009167        0.009167       1.0        -33198.551901                 0.0         False
7  -32798.559401  -33098.550651  33093.318005 -32798.559401    0.010000 -33098.550651  299.990833    0.000417      -99.990000       1.0        -33098.550234                 0.0         False
8  -32498.550234  -32998.560059  33093.318005 -32498.550234  300.009583 -32998.560059  400.000833  100.008991        0.009167       1.0        -33098.550234                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=480001/1200, 
, buffer=11/1200.[0m
[08/30 16:25:55]  --------------------------------------------------------------------------------
[08/30 16:25:55]  Iteration: 19 (0 solution, 18 counterexamples)
[08/30 16:25:56]  Generator returned sat in 0.563178 secs.
[08/30 16:25:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:25:57]  Improved gap from 0.0003333333333333333 to 100
[08/30 16:25:57]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/30 16:25:57]  Verifer returned sat in 1.355579 secs.
[08/30 16:25:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33365.260986  -33465.262179  32860.016199 -33365.260986    0.001250 -33465.262179        0.0  100.001192       99.997442       9.0        -33465.262179                -1.0            -1
1  -33265.259679  -33365.259766  32860.016199 -33265.259679  200.002500 -33365.259766        0.0  100.000087       99.998750       1.0        -33465.262179                 1.0         False
2  -33165.258301  -33365.258429  32860.016199 -33165.258301  200.001465 -33365.258429        0.0  200.000128      100.000128       2.0        -33165.258301                 0.0         False
3  -33165.258301  -33265.258429  32860.016199 -33165.258301    0.001250 -33265.258429        0.0  100.000128        0.000128       2.0        -33165.258301                 0.0         False
4  -32965.251554  -33165.258429  32860.016199 -32965.251554  300.006875 -33165.258429        0.0  200.006875      100.006875       3.0        -33165.258301                 0.0         False
5  -32965.251554  -32965.258429  32860.016199 -32965.251554    0.010000 -32965.258429        0.0    0.006875        0.006875       2.0        -32965.251554                 1.0         False
6  -32365.248429  -32965.257080  32860.016199 -32365.248429  600.010000 -32965.257080        0.0  600.008651      500.010000       3.0        -32965.251554                 0.0         False
7  -32365.248429  -32845.258929  32860.016199 -32365.248429    0.010000 -32845.258929        0.0  480.010500      400.010000       2.0        -32365.248429                 1.0         False
8  -32365.248429  -32765.258301  32860.016199 -32365.248429  480.009250 -32765.258301        0.0  400.009872      300.010000       3.0        -32365.248429                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=400009/800.[0m
[08/30 16:25:58]  --------------------------------------------------------------------------------
[08/30 16:25:58]  Iteration: 20 (0 solution, 19 counterexamples)
[08/30 16:25:59]  Generator returned sat in 0.537220 secs.
[08/30 16:25:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:01]  Improved gap from 0.0 to 23.4375
[08/30 16:26:02]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/30 16:26:02]  Verifer returned sat in 2.488684 secs.
[08/30 16:26:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32169.214355  -32216.099262  32783.453699 -32169.214355    0.001250 -32216.099262    0.00000  46.884907        0.002407       1.0        -32216.099262                -1.0            -1
1  -32069.215512  -32069.216797  32783.453699 -32069.215512  146.883750 -32069.216797    0.00000   0.001285        0.001250       1.0        -32216.099262                 0.0         False
2  -31977.767090  -31977.767179  32783.453699 -31977.767090   91.449707 -31977.767179    0.00000   0.000089       -8.550328       1.0        -31977.767090                 0.0         False
3  -31945.779262  -31969.216762  32860.016199 -31945.779262   31.987917 -31969.216762    0.00000  23.437500        0.000000       1.0        -31945.779262                 0.0         False
4  -31845.775512  -31845.779262  32860.016199 -31845.775512  123.441250 -31845.779262    0.00125   0.002500        0.002500       1.0        -31945.779262                 0.0         False
5  -31845.768012  -31845.775512  32936.574949 -31845.768012    0.010000 -31845.775512    0.00125   0.006250      -23.431250       1.0        -31845.769262                 0.0         False
6  -31779.778429  -31822.338012  32994.015381 -31779.778429   65.995833 -31822.338012    0.00125  42.558333       -0.001235       1.0        -31845.769262                 0.0         False
7  -31748.897387  -31779.778429  33063.135498 -31748.897387   73.439375 -31779.778429    0.00125  30.879792       -0.000076       1.0        -31845.769262                 0.0         False
8  -31746.776762  -31746.780512  33137.579834 -31746.776762   33.000417 -31746.780512    0.00125   0.002500      -23.435115       1.0        -31746.778012                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=0, 
, buffer=1/400.[0m
[08/30 16:26:02]  --------------------------------------------------------------------------------
[08/30 16:26:02]  Iteration: 21 (0 solution, 20 counterexamples)
[08/30 16:26:04]  Generator returned sat in 1.203569 secs.
[08/30 16:26:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:04]  Improved gap from 0.010625 to 100
[08/30 16:26:05]  Improved number of small numbers from 67 to 108 out of a max of 114
[08/30 16:26:05]  Verifer returned sat in 0.910539 secs.
[08/30 16:26:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32169.214355  -32569.221680  33083.45874 -32169.214355  100.010833 -32569.221680        0.0  400.007324      300.007324       1.0        -32569.221680                -1.0            -1
1  -32169.214355  -32469.208984  33083.45874 -32169.214355  100.010000 -32469.208984        0.0  299.994629      200.007324       2.0        -32169.214355                 0.0         False
2  -32169.214355  -32269.221924  33083.45874 -32169.214355  100.009277 -32269.221924        0.0  100.007568      100.007324       3.0        -32169.214355                 1.0         False
3  -32169.213379  -32169.221855  33083.45874 -32169.213379  100.008545 -32169.221855        0.0    0.008477        0.008301       4.0        -32169.213379                 1.0         False
4  -32169.211855  -32169.212646  33083.45874 -32169.211855    0.010000 -32169.212646        0.0    0.000791      -99.990176       1.0        -32169.211855                 1.0         False
5  -31569.219971  -32002.554932  33083.45874 -31569.219971  599.992676 -32002.554932        0.0  433.334961      400.001709       1.0        -32169.211855                 0.0         False
6  -31469.220947  -31869.222900  33083.45874 -31469.220947  533.333984 -31869.222900        0.0  400.001953      400.000732       2.0        -31469.220947                 0.0         False
7  -31469.220947  -31869.221680  33083.45874 -31469.220947    0.010000 -31869.221680        0.0  400.000732      300.000732       3.0        -31469.220947                 1.0         False
8  -31469.220947  -31669.221924  33083.45874 -31469.220947    0.010000 -31669.221924        0.0  200.000977      200.000732       4.0        -31469.220947                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1638407/4096.[0m
[08/30 16:26:06]  --------------------------------------------------------------------------------
[08/30 16:26:06]  Iteration: 22 (0 solution, 21 counterexamples)
[08/30 16:26:07]  Generator returned sat in 0.930389 secs.
[08/30 16:26:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:08]  Improved gap from 0.0 to 100
[08/30 16:26:09]  Improved number of small numbers from 68 to 83 out of a max of 114
[08/30 16:26:09]  Verifer returned sat in 1.211888 secs.
[08/30 16:26:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32302.455078  -32502.454834  33083.45874 -32302.455078     0.050049 -32502.454834        0.0   199.999756       99.999833       7.0        -32502.454834                -1.0            -1
1  -32302.455078  -32402.454834  33083.45874 -32302.455078   187.718506 -32402.454834        0.0    99.999756       -0.000167       3.0        -32502.454834                 1.0         False
2  -32214.786133  -32214.836161  33083.45874 -32214.786133   187.668701 -32214.836161        0.0     0.050028      -12.331222       1.0        -32214.786133                 1.0          True
3  -32177.342411  -32177.392411  33083.45874 -32177.342411    37.493750 -32177.392411        0.0     0.050000      -74.887500       1.0        -32177.342411                 0.0         False
4  -32102.404911  -32102.454911  33083.45874 -32102.404911    74.987500 -32102.454911        0.0     0.050000      -99.950000       1.0        -32177.342411                 0.0         False
5  -31952.479911  -32002.454911  33083.45874 -31952.479911   149.975000 -32002.454911        0.0    49.975000      -50.025000       1.0        -32177.342411                 0.0         False
6  -31702.504911  -31902.304911  33083.45874 -31702.504911   299.950000 -31902.304911        0.0   199.800000       99.950000       1.0        -32177.342411                 0.0         False
7  -31302.404911  -31702.454911  33083.45874 -31302.404911   599.900000 -31702.454911        0.0   400.050000      400.050000       1.0        -32177.342411                 0.0         False
8  -30502.654911  -31602.455078  33083.45874 -30502.654911  1199.800000 -31602.455078        0.0  1099.800167     1099.800000       2.0        -32177.342411                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=2252493/2048.[0m
[08/30 16:26:09]  --------------------------------------------------------------------------------
[08/30 16:26:09]  Iteration: 23 (0 solution, 22 counterexamples)
[08/30 16:26:11]  Generator returned sat in 0.983849 secs.
[08/30 16:26:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:12]  Improved gap from 0.0 to 26.5625
[08/30 16:26:13]  Improved number of small numbers from 59 to 82 out of a max of 114
[08/30 16:26:13]  Verifer returned sat in 1.607538 secs.
[08/30 16:26:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32359.049805  -32467.079911  33140.051270 -32359.049805    0.002686 -32467.079911        0.0  108.030106       99.997636       2.0        -32467.079911                -1.0            -1
1  -32177.349911  -32377.349854  33140.051270 -32177.349911  289.730000 -32377.349854        0.0  199.999942      181.697529       2.0        -32467.079911                 0.0         False
2  -32177.347168  -32359.047363  33140.051270 -32177.347168  200.002686 -32359.047363        0.0  181.700195       81.700272       2.0        -32177.347168                 0.0         False
3  -32159.047363  -32177.349911  33140.051270 -32159.047363  200.000000 -32177.349911        0.0   18.302548        0.000077       3.0        -32159.047363                 0.0         False
4  -32032.484911  -32059.049805  33140.051270 -32032.484911  144.865000 -32059.049805        0.0   26.564894       26.562529       1.0        -32032.484911                 1.0         False
5  -32032.484911  -32059.047411  33213.488740 -32032.484911    0.010000 -32059.047411        0.0   26.562500        0.000000       2.0        -32032.484911                 0.0         False
6  -32032.484911  -32032.484911  33267.618896 -32032.484911    0.010000 -32032.484911        0.0    0.000000      -45.869844       3.0        -32032.484911                 0.0         False
7  -31960.052411  -31986.614990  33341.056240 -31960.052411   72.432500 -31986.614990        0.0   26.562579        0.000000       1.0        -32032.484911                 1.0         False
8  -31960.052411  -31960.052411  33414.493652 -31960.052411    0.010000 -31960.052411        0.0    0.000000      -26.562588       2.0        -31960.052411                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=744243/4096.[0m
[08/30 16:26:13]  --------------------------------------------------------------------------------
[08/30 16:26:13]  Iteration: 24 (0 solution, 23 counterexamples)
[08/30 16:26:16]  Generator returned sat in 2.381043 secs.
[08/30 16:26:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:17]  Improved gap from 0.0 to 100
[08/30 16:26:18]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/30 16:26:18]  Verifer returned sat in 1.386101 secs.
[08/30 16:26:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32460.949707  -32560.849911  33140.05127 -32460.949707   383.6000 -32560.849911        0.0   99.900204       99.900204       1.0        -32560.849911                -1.0            -1
1  -32177.349911  -32460.849911  33140.05127 -32177.349911   383.5000 -32460.849911        0.1  283.400000      283.400000       1.0        -32177.449911                 0.0         False
2  -32077.249911  -32360.949707  33140.05127 -32077.249911   383.5000 -32360.949707        0.2  283.499796      283.400000       2.0        -32177.449911                 0.0         False
3  -32077.249911  -32360.849911  33140.05127 -32077.249911     2.0875 -32360.849911        0.2  283.400000      183.400000       3.0        -32077.449911                 1.0         False
4  -32077.249911  -32170.849911  33140.05127 -32077.249911     4.1750 -32170.849911        0.2   93.400000       83.400000       3.0        -32077.449911                 1.0         False
5  -32077.249911  -32077.449911  33140.05127 -32077.249911     8.3500 -32077.449911        0.2    0.000000      -16.600000       4.0        -32077.449911                 1.0         False
6  -32060.549911  -32060.849911  33140.05127 -32060.549911    16.7000 -32060.849911        0.2    0.100000      -99.900000       1.0        -32077.449911                 1.0         False
7  -31577.249911  -31860.849911  33140.05127 -31577.249911   483.4000 -31860.849911        0.2  283.400000      283.400000       1.0        -32077.449911                 0.0         False
8  -30428.849911  -31760.850098  33140.05127 -30428.849911  1431.8000 -31760.850098     1048.6  283.400187      283.400000       2.0        -32077.449911                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=5242/5, 
, buffer=1417/5.[0m
[08/30 16:26:18]  --------------------------------------------------------------------------------
[08/30 16:26:18]  Iteration: 25 (0 solution, 24 counterexamples)
[08/30 16:26:22]  Generator returned sat in 2.865018 secs.
[08/30 16:26:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:23]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/30 16:26:23]  Verifer returned sat in 1.034189 secs.
[08/30 16:26:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32877.129883  -33577.129883  33140.05127 -32877.129883   700.100000 -33577.129883   0.000000  700.000000      700.000000       7.0        -33577.129883                -1.0            -1
1  -32877.080078  -33477.229980  33140.05127 -32877.080078   700.049805 -33477.229980   0.000000  600.149902      600.049805       7.0        -32877.080078                 0.0         False
2  -32477.379883  -33377.129883  33140.05127 -32477.379883   999.850098 -33377.129883   0.050049  899.699951      899.699951       8.0        -32877.080078                 0.0         False
3  -32477.379883  -33277.129883  33140.05127 -32477.379883   849.599854 -33277.129883   0.050049  799.699951      799.699951       9.0        -32477.429932                 0.0         False
4  -32277.479980  -33277.129883  33140.05127 -32277.479980   999.599854 -33277.129883   0.050049  999.599854      899.599854       9.0        -32477.429932                 1.0         False
5  -32177.429932  -33177.129883  33140.05127 -32177.429932  1099.649902 -33177.129883   0.050049  999.649902      899.649902       8.0        -32477.429932                 1.0         False
6  -32177.429932  -32977.279785  33140.05127 -32177.429932   649.824951 -32977.279785   0.050049  799.799805      799.649902       9.0        -32177.479980                 0.0         False
7  -32177.429932  -32877.129883  33140.05127 -32177.429932   799.750000 -32877.129883   0.050049  699.649902      699.649902       9.0        -32177.479980                 1.0         False
8  -31877.329834  -32877.030029  33140.05127 -31877.329834   999.750000 -32877.030029   0.100098  999.600098      899.699951       7.0        -32177.479980                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=205/4096, 
, buffer=3685171/4096.[0m
[08/30 16:26:24]  --------------------------------------------------------------------------------
[08/30 16:26:24]  Iteration: 26 (0 solution, 25 counterexamples)
[08/30 16:26:27]  Generator returned sat in 2.956048 secs.
[08/30 16:26:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:28]  Improved gap from 0.0 to 100
[08/30 16:26:28]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/30 16:26:28]  Verifer returned sat in 0.574465 secs.
[08/30 16:26:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32877.280029  -33567.279785  33030.201172 -32877.280029     0.049805 -33567.279785    0.000000  689.999756      589.999756       5.0        -33567.279785                -1.0            -1
1  -32777.229980  -33467.279785  33030.201172 -32777.229980   790.049805 -33467.279785    0.050049  689.999756      589.999756       3.0        -33567.279785                 0.0         False
2  -32777.229980  -33267.280029  33030.201172 -32777.229980   689.950195 -33267.280029    0.050049  490.000000      489.999756       4.0        -32777.280029                 0.0         False
3  -31687.229980  -33167.280029  33030.201172 -31687.229980  1580.000000 -33167.280029  890.050049  590.000000      589.999756       5.0        -32777.280029                 0.0         False
4  -31487.229980  -33067.279785  33030.201172 -31487.229980   790.000000 -33067.279785  990.050049  589.999756      589.999756       6.0        -32477.280029                 0.0         False
5  -31487.229980  -33067.230225  33030.201172 -31487.229980   395.000000 -33067.230225  990.050049  589.950195      489.999756       7.0        -32477.280029                 0.0         False
6  -31287.180176  -32867.329834  33030.201172 -31287.180176   790.000000 -32867.329834  990.099854  590.049805      589.999756       6.0        -32477.280029                 1.0         False
7  -31287.180176  -32867.279785  33030.201172 -31287.180176   395.000000 -32867.279785  990.099854  589.999756      489.999756       7.0        -32277.280029                 0.0         False
8  -31087.179932  -32667.280029  33030.201172 -31087.179932   790.000000 -32667.280029  990.100098  590.000000      589.999756       6.0        -32277.280029                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=205/4096, 
, buffer=2416639/4096.[0m
[08/30 16:26:29]  --------------------------------------------------------------------------------
[08/30 16:26:29]  Iteration: 27 (0 solution, 26 counterexamples)
[08/30 16:26:31]  Generator returned sat in 2.051242 secs.
[08/30 16:26:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:34]  Verifer returned unsat in 2.368179 secs.
[08/30 16:26:34]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:34]  --------------------------------------------------------------------------------
[08/30 16:26:34]  Iteration: 28 (1 solution, 26 counterexamples)
[08/30 16:26:35]  Generator returned sat in 0.128431 secs.
[08/30 16:26:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:36]  Verifer returned unsat in 1.472814 secs.
[08/30 16:26:36]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:36]  --------------------------------------------------------------------------------
[08/30 16:26:36]  Iteration: 29 (2 solution, 26 counterexamples)
[08/30 16:26:37]  Generator returned sat in 0.148079 secs.
[08/30 16:26:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:39]  Improved number of small numbers from 58 to 90 out of a max of 113
[08/30 16:26:39]  Verifer returned sat in 1.563886 secs.
[08/30 16:26:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33793.560547  -33793.660420  33328.731172 -33793.560547     0.099854 -33793.660420        0.0     0.099873      -99.900127       2.0        -33793.660420                -1.0            -1
1  -32893.760420  -33693.660400  33328.731172 -32893.760420   899.900000 -33693.660400        0.0   799.899980      699.900000       1.0        -33793.660420                 0.0         False
2  -31893.160645  -33593.660400  33328.731172 -31893.160645  1800.499756 -33593.660400        0.0  1700.499756     1600.499775       2.0        -33793.660420                 0.0         False
3  -31893.160645  -33393.660420  33328.731172 -31893.160645   948.044444 -33393.660420        0.0  1500.499775     1500.499775       3.0        -31893.160645                 0.0         False
4  -31893.160645  -33300.660400  33328.731172 -31893.160645   674.022222 -33300.660400        0.0  1407.499756     1400.499775       4.0        -31893.160645                 0.0         False
5  -31893.160645  -33193.660645  33328.731172 -31893.160645   533.511111 -33193.660645        0.0  1300.500000     1300.499775       5.0        -31893.160645                 0.0         False
6  -31893.160645  -33093.660645  33328.731172 -31893.160645   800.266667 -33093.660645        0.0  1200.500000     1200.499775       6.0        -31893.160645                 1.0         False
7  -31893.160645  -33093.660420  33328.731172 -31893.160645  1200.400000 -33093.660420        0.0  1200.499775     1100.499775       7.0        -31893.160645                 1.0         False
8  -31293.060420  -32893.660645  33328.731172 -31293.060420  1800.600000 -32893.660645        0.0  1600.600225     1600.600000       7.0        -31893.160645                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=3278029/2048.[0m
[08/30 16:26:40]  --------------------------------------------------------------------------------
[08/30 16:26:40]  Iteration: 30 (2 solution, 27 counterexamples)
[08/30 16:26:41]  Generator returned sat in 0.965235 secs.
[08/30 16:26:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:42]  Improved gap from 0.0 to 100
[08/30 16:26:42]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/30 16:26:42]  Verifer returned sat in 0.980646 secs.
[08/30 16:26:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32694.360596  -33294.360352  32829.431152 -32694.360596    0.049805 -33294.360352        0.0  599.999756      500.000000       5.0        -33294.360352                -1.0            -1
1  -32694.360596  -33194.360596  32829.431152 -32694.360596  177.822021 -33194.360596        0.0  500.000000      400.000000       5.0        -33294.360352                 0.0         False
2  -32694.360596  -33094.360596  32829.431152 -32694.360596  177.822222 -33094.360596        0.0  400.000000      300.000000       6.0        -33294.360352                 0.0         False
3  -32694.360596  -32938.715820  32829.431152 -32694.360596  177.822222 -32938.715820        0.0  244.355225      200.000000       7.0        -33294.360352                 0.0         False
4  -32694.360596  -32894.360596  32829.431152 -32694.360596  177.822266 -32894.360596        0.0  200.000000      100.000000       8.0        -33294.360352                 0.0         False
5  -32627.627197  -32694.360596  32829.431152 -32627.627197  266.733398 -32694.360596        0.0   66.733398       66.733398       9.0        -33294.360352                 1.0          True
6  -32294.260498  -32694.310547  32829.431152 -32294.260498  400.100098 -32694.310547        0.0  400.050049      300.100098       2.0        -33294.360352                 1.0          True
7  -32294.260498  -32494.360596  32829.431152 -32294.260498  122.202637 -32494.360596        0.0  200.100098      200.100098       2.0        -32294.260498                 0.0         False
8  -32294.260498  -32494.260498  32829.431152 -32294.260498  200.000000 -32494.260498        0.0  200.000000      100.100098       3.0        -32294.260498                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=500.[0m
[08/30 16:26:43]  --------------------------------------------------------------------------------
[08/30 16:26:43]  Iteration: 31 (2 solution, 28 counterexamples)
[08/30 16:26:44]  Generator returned sat in 0.440945 secs.
[08/30 16:26:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:45]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/30 16:26:45]  Verifer returned sat in 0.142198 secs.
[08/30 16:26:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -32694.360596  -33294.360352  32829.431152 -32694.360596    0.049805 -33294.360352        0.0  599.999756      500.000000       6.0        -33294.360352                -1.0            -1
1  -32694.360596  -33194.360596  32829.431152 -32694.360596  177.822021 -33194.360596        0.0  500.000000      400.000000       6.0        -33294.360352                 0.0         False
2  -32694.360596  -33094.360596  32829.431152 -32694.360596  177.822222 -33094.360596        0.0  400.000000      300.000000       7.0        -33294.360352                 0.0         False
3  -32694.360596  -32938.715820  32829.431152 -32694.360596  177.822222 -32938.715820        0.0  244.355225      200.000000       8.0        -33294.360352                 0.0         False
4  -32694.360596  -32894.360596  32829.431152 -32694.360596  177.822266 -32894.360596        0.0  200.000000      100.000000       9.0        -33294.360352                 0.0         False
5  -32627.627197  -32694.360596  32829.431152 -32627.627197  266.733398 -32694.360596        0.0   66.733398       66.733398       9.0        -33294.360352                 1.0          True
6  -32294.260498  -32694.310547  32829.431152 -32294.260498  400.100098 -32694.310547        0.0  400.050049      300.100098       2.0        -33294.360352                 1.0          True
7  -32294.260498  -32494.360596  32829.431152 -32294.260498  122.202637 -32494.360596        0.0  200.100098      200.100098       2.0        -32294.260498                 0.0         False
8  -32294.260498  -32494.260498  32829.431152 -32294.260498  200.000000 -32494.260498        0.0  200.000000      100.100098       3.0        -32294.260498                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=500.[0m
[08/30 16:26:45]  --------------------------------------------------------------------------------
[08/30 16:26:45]  Iteration: 32 (2 solution, 29 counterexamples)
[08/30 16:26:52]  Generator returned sat in 5.770577 secs.
[08/30 16:26:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:54]  Improved gap from 0.0 to 23.4375
[08/30 16:26:54]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/30 16:26:54]  Verifer returned sat in 2.132448 secs.
[08/30 16:26:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33551.735840  -33613.354736  32786.806152 -33551.735840    0.002686 -33613.354736        0.0  61.618896       57.375000       2.0        -33613.354736                -1.0            -1
1  -33551.735840  -33609.110840  32829.431152 -33551.735840    0.001250 -33609.110840        0.0  57.375000        0.000000       2.0        -33551.735840                 0.0         False
2  -33394.362061  -33451.736084  32829.431152 -33394.362061  214.748779 -33451.736084        0.0  57.374023       57.373779       1.0        -33551.735840                 0.0         False
3  -33394.362061  -33451.734619  32872.057373 -33394.362061   57.372559 -33451.734619        0.0  57.372559        0.000000       2.0        -33394.362061                 0.0         False
4  -33370.924561  -33394.362061  32948.619873 -33370.924561   80.810059 -33394.362061        0.0  23.437500        0.000000       3.0        -33394.362061                 0.0         False
5  -33370.924561  -33370.924561  33025.182373 -33370.924561    0.010000 -33370.924561        0.0   0.000000      -23.437500       2.0        -33370.924561                 1.0         False
6  -33330.518799  -33347.487061  33101.744873 -33330.518799   40.405762 -33347.487061        0.0  16.968262       -6.469238       1.0        -33370.924561                 0.0         False
7  -33295.363281  -33324.049561  33173.058594 -33295.363281   52.123779 -33324.049561        0.0  28.686279        0.000000       1.0        -33370.924561                 0.0         False
8  -33288.893311  -33295.363281  33249.621094 -33288.893311   35.156250 -33295.363281        0.0   6.469971      -16.967529       2.0        -33288.893311                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=459/8.[0m
[08/30 16:26:55]  --------------------------------------------------------------------------------
[08/30 16:26:55]  Iteration: 33 (2 solution, 30 counterexamples)
[08/30 16:26:59]  Generator returned sat in 3.121290 secs.
[08/30 16:26:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:26:59]  Improved gap from 0.0 to 100
[08/30 16:27:00]  Improved number of small numbers from 68 to 97 out of a max of 114
[08/30 16:27:00]  Verifer returned sat in 1.168180 secs.
[08/30 16:27:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -33661.097412  -34061.097656  33249.621094 -33661.097412    0.050000 -34061.097656       0.00  400.000244      400.000204       1.0        -34061.097656                -1.0            -1
1  -33661.097412  -33961.097656  33249.621094 -33661.097412    0.050049 -33961.097656       0.00  300.000244      300.000204       2.0        -34061.097656                 0.0         False
2  -33661.097412  -33861.097656  33249.621094 -33661.097412    0.050049 -33861.097656       0.00  200.000244      200.000204       3.0        -34061.097656                 1.0          True
3  -33661.097412  -33838.984619  33249.621094 -33661.097412  118.558025 -33838.984619       0.00  177.887207      100.000204       4.0        -34061.097656                 1.0          True
4  -33661.097412  -33661.097616  33249.621094 -33661.097412  177.837037 -33661.097616       0.00    0.000204        0.000204       5.0        -34061.097656                 1.0          True
5  -33394.342061  -33661.097616  33249.621094 -33394.342061  266.755556 -33661.097616       0.00  266.755556      166.755556       5.0        -34061.097656                 1.0          True
6  -33260.964283  -33561.097616  33249.621094 -33260.964283  400.133333 -33561.097616       0.00  300.133333      200.133333       2.0        -34061.097656                 1.0         False
7  -32960.897616  -33361.097616  33249.621094 -32960.897616  600.200000 -33361.097616       0.00  400.200000      400.200000       2.0        -34061.097656                 1.0          True
8  -32460.797616  -33261.097656  33249.621094 -32460.797616  900.300000 -33261.097656     400.05  400.250040      400.250000       3.0        -34061.097656                 1.0          True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=8001/20, 
, buffer=1601/4.[0m
[08/30 16:27:00]  --------------------------------------------------------------------------------
[08/30 16:27:00]  Iteration: 34 (2 solution, 31 counterexamples)
[08/30 16:27:03]  Generator returned sat in 1.552426 secs.
[08/30 16:27:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:03]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/30 16:27:03]  Verifer returned sat in 0.280336 secs.
[08/30 16:27:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34161.097656  -34961.097656  33249.621094 -34161.097656     799.9 -34961.097656        0.0    800.0           700.0       6.0        -34961.097656                -1.0            -1
1  -34161.097656  -34861.097656  33249.621094 -34161.097656     799.9 -34861.097656        0.0    700.0           600.0       7.0        -34961.097656                 0.0         False
2  -33960.997656  -34661.197656  33249.621094 -33960.997656     900.1 -34661.197656        0.1    700.1           700.0       8.0        -34961.097656                 0.0         False
3  -33060.897656  -34661.097656  33249.621094 -33060.897656    1600.2 -34661.097656      800.2    800.0           700.0       8.0        -34961.097656                 1.0          True
4  -33060.797656  -34461.297656  33249.621094 -33060.797656     800.1 -34461.297656      800.2    600.3           600.1       9.0        -33860.997656                 1.0          True
5  -32860.997656  -34461.097656  33249.621094 -32860.997656     800.1 -34461.097656      800.2    799.9           699.9       9.0        -33860.997656                 1.0         False
6  -32860.797656  -34261.297656  33249.621094 -32860.797656     800.1 -34261.297656      800.2    600.3           600.1       9.0        -33860.997656                 1.0         False
7  -32660.997656  -34161.097656  33249.621094 -32660.997656     800.1 -34161.097656      800.2    699.9           699.9       9.0        -33860.997656                 1.0         False
8  -32560.797656  -34061.097656  33249.621094 -32560.797656     800.1 -34061.097656      800.3    700.0           700.0       7.0        -33860.997656                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=1/10, 
, buffer=700.[0m
[08/30 16:27:04]  --------------------------------------------------------------------------------
[08/30 16:27:04]  Iteration: 35 (2 solution, 32 counterexamples)
[08/30 16:27:08]  Generator returned sat in 3.530873 secs.
[08/30 16:27:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:10]  Verifer returned unsat in 1.272329 secs.
[08/30 16:27:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:10]  --------------------------------------------------------------------------------
[08/30 16:27:10]  Iteration: 36 (3 solution, 32 counterexamples)
[08/30 16:27:11]  Generator returned sat in 0.247491 secs.
[08/30 16:27:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:15]  Verifer returned unsat in 3.858091 secs.
[08/30 16:27:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:15]  --------------------------------------------------------------------------------
[08/30 16:27:15]  Iteration: 37 (4 solution, 32 counterexamples)
[08/30 16:27:16]  Generator returned sat in 0.246042 secs.
[08/30 16:27:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:19]  Improved gap from 0.0 to 23.4375
[08/30 16:27:19]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/30 16:27:19]  Verifer returned sat in 3.205763 secs.
[08/30 16:27:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35938.744873  -36038.609131  33096.586914 -35938.744873  100.000000 -36038.609131        0.0  99.864258       99.864258       9.0        -36038.609131                -1.0            -1
1  -35938.654297  -35938.699463  33096.586914 -35938.654297   99.954834 -35938.699463        0.0   0.045166       -0.045166       1.0        -35938.654297                 1.0         False
2  -35915.080811  -35938.609131  33173.058594 -35915.080811   23.618652 -35938.609131        0.0  23.528320        0.000000       1.0        -35915.080811                 0.0         False
3  -35915.080811  -35915.080811  33249.621094 -35915.080811   23.482813 -35915.080811        0.0   0.000000      -23.437500       2.0        -35915.080811                 0.0         False
4  -35853.316650  -35881.958740  33311.294434 -35853.316650   61.764160 -35881.958740        0.0  28.642090        0.000000       1.0        -35915.080811                 0.0         False
5  -35853.316650  -35853.316650  33387.856934 -35853.316650   28.370361 -35853.316650        0.0   0.000000      -23.437500       2.0        -35853.316650                 0.0         False
6  -35810.670410  -35829.879150  33464.419434 -35810.670410   42.646240 -35829.879150        0.0  19.208740       -4.228760       1.0        -35853.316650                 0.0         False
7  -35787.278320  -35806.441650  33540.981934 -35787.278320   42.600830 -35806.441650        0.0  19.163330       -4.274170       1.0        -35787.278320                 0.0         False
8  -35768.683105  -35783.004150  33540.981934 -35768.683105   37.758545 -35783.004150        0.0  14.321045      -85.678955       1.0        -35768.683105                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=102261/1024.[0m
[08/30 16:27:20]  --------------------------------------------------------------------------------
[08/30 16:27:20]  Iteration: 38 (4 solution, 33 counterexamples)
[08/30 16:27:22]  Generator returned sat in 1.307596 secs.
[08/30 16:27:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:24]  Improved number of small numbers from 58 to 62 out of a max of 113
[08/30 16:27:24]  Verifer returned sat in 1.919527 secs.
[08/30 16:27:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35837.261654  -36437.273320  33345.271104 -35837.261654    0.000833 -36437.273320   0.000000  600.011667      600.008333       5.0        -36437.273320                -1.0            -1
1  -35837.261654  -36437.269987  33345.271104 -35837.261654  600.010833 -36437.269987   0.000000  600.008333      500.008333       5.0        -36437.273320                 0.0         False
2  -35837.259987  -36337.269987  33345.271104 -35837.259987  600.010000 -36337.269987   0.000000  500.010000      400.010000       6.0        -35837.259987                 0.0         False
3  -35837.259987  -36237.269987  33345.271104 -35837.259987  400.033333 -36237.269987   0.000000  400.010000      300.010000       7.0        -35837.259987                 0.0         False
4  -35837.259987  -36137.269987  33345.271104 -35837.259987  300.018333 -36137.269987   0.000000  300.010000      200.010000       8.0        -35837.259987                 0.0         False
5  -35837.259987  -35937.269987  33345.271104 -35837.259987  300.009167 -35937.269987   0.000000  100.010000      100.010000       9.0        -35837.259987                 0.0         False
6  -35237.260820  -35837.270020  33345.271104 -35237.260820  700.009167 -35837.270020   0.000833  600.008366      600.008333       8.0        -35837.259987                 1.0         False
7  -35237.260820  -35837.261654  33345.271104 -35237.260820    0.010000 -35837.261654   0.000833  600.000000      500.008333       9.0        -35237.261654                 0.0         False
8  -35237.260820  -35637.270020  33345.271104 -35237.260820  300.018333 -35637.270020   0.000833  400.008366      400.008333       3.0        -35237.261654                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=1/1200, 
, buffer=72001/120.[0m
[08/30 16:27:25]  --------------------------------------------------------------------------------
[08/30 16:27:25]  Iteration: 39 (4 solution, 34 counterexamples)
[08/30 16:27:28]  Generator returned sat in 2.161133 secs.
[08/30 16:27:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:29]  Improved gap from 0.0028846153846153848 to 100
[08/30 16:27:29]  Improved number of small numbers from 81 to 114 out of a max of 114
[08/30 16:27:29]  Verifer returned sat in 0.987211 secs.
[08/30 16:27:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -36437.257324  -36537.258789  33345.27124 -36437.257324    0.001465 -36537.258789    0.000000  100.001465      100.000244       9.0        -36537.258789                -1.0            -1
1  -36437.256348  -36537.257568  33345.27124 -36437.256348  100.002441 -36537.257568    0.000000  100.001221        0.001221       9.0        -36537.258789                 1.0         False
2  -36337.257568  -36437.257324  33345.27124 -36337.257568  200.000000 -36437.257324    0.000000   99.999756        0.000000       9.0        -36537.258789                 1.0          True
3  -36137.254883  -36337.257568  33345.27124 -36137.254883  300.002441 -36337.257568    0.000000  200.002686      100.002686       2.0        -36537.258789                 1.0          True
4  -36137.254883  -36137.257568  33345.27124 -36137.254883  200.001221 -36137.257568    0.000000    0.002686        0.002686       2.0        -36137.254883                 1.0          True
5  -35737.257568  -36137.253662  33345.27124 -35737.257568  400.000000 -36137.253662  199.996094  200.000000      100.003906       1.0        -36137.254883                 1.0         False
6  -35737.257568  -36037.255615  33345.27124 -35737.257568    0.010000 -36037.255615  199.996094  100.001953        0.003906       2.0        -35937.253662                 0.0         False
7  -35537.257568  -35837.257568  33345.27124 -35537.257568  300.001953 -35837.257568  199.996094  100.003906      100.003906       1.0        -35937.253662                 1.0         False
8  -35187.258545  -35737.257568  33345.27124 -35187.258545  450.002930 -35737.257568  449.995117  100.003906      100.003906       2.0        -35937.253662                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=460795/1024, 
, buffer=25601/256.[0m
[08/30 16:27:30]  --------------------------------------------------------------------------------
[08/30 16:27:30]  Iteration: 40 (4 solution, 35 counterexamples)
[08/30 16:27:32]  Generator returned sat in 0.592942 secs.
[08/30 16:27:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:35]  Improved gap from 0.0005555555555555556 to 23.4375
[08/30 16:27:35]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/30 16:27:35]  Verifer returned sat in 3.383678 secs.
[08/30 16:27:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -36081.757324  -36081.957520  32817.433594 -36081.757324   0.100000 -36081.957520        0.0   0.200195        0.199951       8.0        -36081.957520                -1.0            -1
1  -36081.757324  -36081.857422  32892.896240 -36081.757324   0.100098 -36081.857422        0.0   0.100098      -24.337402       2.0        -36081.957520                 1.0         False
2  -36032.582520  -36057.219727  32968.058838 -36032.582520  49.274902 -36057.219727        0.0  24.637207        0.000000       1.0        -36081.957520                 1.0          True
3  -36032.482178  -36032.582520  33043.621094 -36032.482178  24.737549 -36032.582520        0.0   0.100342      -24.337402       2.0        -36032.482178                 0.0         False
4  -35983.207520  -36007.544922  33118.583740 -35983.207520  49.375000 -36007.544922        0.0  24.337402       -0.100098       1.0        -36032.482178                 1.0         False
5  -35970.388672  -35983.107422  33194.146240 -35970.388672  37.156250 -35983.107422        0.0  12.718750      -11.718750       1.0        -35970.388672                 0.0         False
6  -35946.051270  -35958.669922  33269.708740 -35946.051270  37.056152 -35958.669922        0.0  12.618652      -11.818848       1.0        -35946.051270                 0.0         False
7  -35921.713623  -35934.232422  33345.270996 -35921.713623  36.956299 -35934.232422        0.0  12.518799      -11.918945       1.0        -35921.713623                 0.0         False
8  -35897.576172  -35908.645020  33345.271240 -35897.576172  36.656250 -35908.645020        0.0  11.068848      -87.781250       1.0        -35897.576172                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=1/5.[0m
[08/30 16:27:36]  --------------------------------------------------------------------------------
[08/30 16:27:36]  Iteration: 41 (4 solution, 36 counterexamples)
[08/30 16:27:39]  Generator returned sat in 2.551099 secs.
[08/30 16:27:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:45]  Improved gap from 0.0 to 26.5625
[08/30 16:27:46]  Improved number of small numbers from 69 to 75 out of a max of 114
[08/30 16:27:46]  Verifer returned sat in 6.308953 secs.
[08/30 16:27:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35608.314824  -36008.314824  33118.583740 -35608.314824    0.001465 -36008.314824        0.0  400.000000      400.000000       3.0        -36008.314824                -1.0            -1
1  -35581.753574  -36008.312324  33118.583740 -35581.753574  426.561250 -36008.312324        0.0  426.558750      326.561250       3.0        -36008.314824                 0.0         False
2  -35581.752324  -35808.314941  33118.583740 -35581.752324  426.560000 -35808.314941        0.0  226.562617      226.562500       4.0        -35581.752324                 0.0         False
3  -35581.752324  -35723.941074  33118.583740 -35581.752324    0.001250 -35723.941074        0.0  142.188750      126.562500       5.0        -35581.752324                 0.0         False
4  -35581.752324  -35608.314824  33118.583740 -35581.752324  142.187500 -35608.314824        0.0   26.562500       26.562500       6.0        -35581.752324                 0.0         False
5  -35581.752324  -35608.314824  33192.021240 -35581.752324    0.010000 -35608.314824        0.0   26.562500        0.000000       6.0        -35581.752324                 1.0         False
6  -35581.752324  -35581.752324  33265.458740 -35581.752324    0.010000 -35581.752324        0.0    0.000000      -26.562500       5.0        -35581.752324                 1.0         False
7  -35510.652949  -35555.189824  33320.920654 -35510.652949   71.099375 -35555.189824        0.0   44.536875       -0.001211       1.0        -35581.752324                 0.0         False
8  -35493.077637  -35510.651611  33320.920654 -35493.077637   62.112187 -35510.651611        0.0   17.573975      -82.425898       1.0        -35493.077637                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=400.[0m
[08/30 16:27:46]  --------------------------------------------------------------------------------
[08/30 16:27:46]  Iteration: 42 (4 solution, 37 counterexamples)
[08/30 16:27:48]  Generator returned sat in 0.708674 secs.
[08/30 16:27:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:53]  Verifer returned unsat in 4.996566 secs.
[08/30 16:27:53]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:27:53]  --------------------------------------------------------------------------------
[08/30 16:27:53]  Iteration: 43 (5 solution, 37 counterexamples)
[08/30 16:27:55]  Generator returned sat in 0.299130 secs.
[08/30 16:27:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:28:06]  Improved gap from 0.0 to 26.5625
[08/30 16:28:07]  Improved number of small numbers from 59 to 73 out of a max of 114
[08/30 16:28:07]  Verifer returned sat in 12.318869 secs.
[08/30 16:28:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35308.329824  -35708.329824  32818.598740 -35308.329824    0.002441 -35708.329824        0.0  400.000000      400.000000       5.0        -35708.329824                -1.0            -1
1  -35308.329824  -35608.329834  32818.598740 -35308.329824    0.002686 -35608.329834        0.0  300.000010      300.000000       5.0        -35708.329824                 0.0         False
2  -35308.327393  -35508.329834  32818.598740 -35308.327393  300.002441 -35508.329834        0.0  200.002441      200.002432       5.0        -35708.329824                 0.0         False
3  -35308.327393  -35426.622324  32818.598740 -35308.327393    8.002500 -35426.622324        0.0  118.294932      100.002432       6.0        -35308.327393                 0.0         False
4  -35281.767324  -35308.329824  32818.598740 -35281.767324  144.855000 -35308.329824        0.0   26.562500       26.562500       7.0        -35308.327393                 0.0         False
5  -35281.767324  -35308.329824  32892.036240 -35281.767324    0.010000 -35308.329824        0.0   26.562500        0.000000       7.0        -35281.767324                 1.0         False
6  -35281.767324  -35281.767324  32965.473740 -35281.767324    0.010000 -35281.767324        0.0    0.000000      -26.562500       3.0        -35281.767324                 1.0         False
7  -35209.334824  -35255.204824  33019.601318 -35209.334824   72.432500 -35255.204824        0.0   45.870000       -0.002422       1.0        -35281.767324                 0.0         False
8  -35192.426074  -35209.332275  33093.038574 -35192.426074   62.778750 -35209.332275        0.0   16.906201       -9.656416       1.0        -35192.426074                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=400.[0m
[08/30 16:28:08]  --------------------------------------------------------------------------------
[08/30 16:28:08]  Iteration: 44 (5 solution, 38 counterexamples)
[08/30 16:28:10]  Generator returned sat in 1.439738 secs.
[08/30 16:28:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:28:11]  Improved gap from 0.0 to 100
[08/30 16:28:12]  Improved number of small numbers from 82 to 114 out of a max of 114
[08/30 16:28:12]  Verifer returned sat in 1.247162 secs.
[08/30 16:28:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35409.434814  -36109.484619  33019.601318 -35409.434814    0.050000 -36109.484619   0.000000  700.049805      600.049805       9.0        -36109.484619                -1.0            -1
1  -35309.384766  -35909.484619  33019.601318 -35309.384766  800.099854 -35909.484619   0.050049  600.049805      600.049805       9.0        -36109.484619                 1.0         False
2  -35209.334717  -35809.484863  33019.601318 -35209.334717  700.099854 -35809.484863   0.100098  600.050049      600.049805       9.0        -35209.434814                 1.0          True
3  -35209.334717  -35709.534668  33019.601318 -35209.334717  500.049805 -35709.534668   0.100098  500.099854      500.049805       9.0        -35209.434814                 1.0         False
4  -35209.334717  -35709.484619  33019.601318 -35209.334717  500.049805 -35709.484619   0.100098  500.049805      400.049805       8.0        -35209.434814                 1.0         False
5  -35209.334717  -35509.484619  33019.601318 -35209.334717  500.049805 -35509.484619   0.100098  300.049805      300.049805       8.0        -35209.434814                 1.0         False
6  -35009.334717  -35409.484863  33019.601318 -35009.334717  500.049805 -35409.484863   0.100098  400.050049      400.049805       8.0        -35209.434814                 1.0         False
7  -34909.334961  -35309.484619  33019.601318 -34909.334961  500.049805 -35309.484619   0.100098  400.049561      400.049561       7.0        -35209.434814                 1.0         False
8  -34809.334717  -35309.484619  33019.601318 -34809.334717  500.049805 -35309.484619   0.100098  500.049805      400.049805       7.0        -35209.434814                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=614451/1024.[0m
[08/30 16:28:12]  --------------------------------------------------------------------------------
[08/30 16:28:12]  Iteration: 45 (5 solution, 39 counterexamples)
[08/30 16:28:20]  Generator returned sat in 7.031777 secs.
[08/30 16:28:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:28:36]  Improved gap from 0.0008333333333333334 to 26.5625
[08/30 16:28:36]  Improved number of small numbers from 103 to 107 out of a max of 114
[08/30 16:28:36]  Verifer returned sat in 15.492913 secs.
[08/30 16:28:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35309.384766  -35709.384766  32719.501221 -35309.384766    0.002686 -35709.384766        0.0  400.000000      400.000000       6.0        -35709.384766                -1.0            -1
1  -35309.384766  -35609.385010  32719.501221 -35309.384766    7.992500 -35609.385010        0.0  300.000244      300.000000       6.0        -35709.384766                 0.0         False
2  -35309.384766  -35509.385010  32719.501221 -35309.384766    7.990234 -35509.385010        0.0  200.000244      200.000000       7.0        -35309.384766                 0.0         False
3  -35309.384766  -35427.672266  32719.501221 -35309.384766    7.987500 -35427.672266        0.0  118.287500      100.000000       8.0        -35309.384766                 0.0         False
4  -35282.822266  -35309.387266  32719.501221 -35282.822266  144.850000 -35309.387266        0.0   26.565000       26.562500       9.0        -35309.384766                 0.0         False
5  -35282.822266  -35309.384766  32792.938721 -35282.822266    0.010000 -35309.384766        0.0   26.562500        0.000000       9.0        -35282.822266                 1.0         False
6  -35282.822266  -35282.822266  32866.376221 -35282.822266    0.010000 -35282.822266        0.0    0.000000      -26.562500       3.0        -35282.822266                 1.0         False
7  -35210.392266  -35256.259766  32920.506592 -35210.392266   72.430000 -35256.259766        0.0   45.867500       -0.002129       1.0        -35282.822266                 0.0         False
8  -35193.481016  -35210.389648  32920.506592 -35193.481016   62.778750 -35210.389648        0.0   16.908633      -83.090879       1.0        -35193.481016                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=400.[0m
[08/30 16:28:37]  --------------------------------------------------------------------------------
[08/30 16:28:37]  Iteration: 46 (5 solution, 40 counterexamples)
[08/30 16:28:45]  Generator returned sat in 6.906697 secs.
[08/30 16:28:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:28:45]  Improved gap from 0.00125 to 100
[08/30 16:28:46]  Improved number of small numbers from 94 to 110 out of a max of 114
[08/30 16:28:46]  Verifer returned sat in 0.638541 secs.
[08/30 16:28:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35609.487549  -35709.387451  32819.684082 -35609.487549  449.850098 -35709.387451        0.0   99.899902       99.899902       6.0        -35709.387451                -1.0            -1
1  -35259.637695  -35609.387451  32819.684082 -35259.637695  449.749756 -35609.387451        0.0  349.749756      349.749756       1.0        -35259.637695                 1.0         False
2  -35109.387451  -35509.487305  32819.684082 -35109.387451  500.000000 -35509.487305        0.0  400.099854      400.000000       2.0        -35259.637695                 0.0         False
3  -35109.387451  -35509.387451  32819.684082 -35109.387451   18.756250 -35509.387451        0.0  400.000000      300.000000       3.0        -35109.387451                 0.0         False
4  -35109.387451  -35309.387451  32819.684082 -35109.387451   37.512500 -35309.387451        0.0  200.000000      200.000000       4.0        -35109.387451                 1.0         False
5  -35109.387451  -35259.537354  32819.684082 -35109.387451   75.025000 -35259.537354        0.0  150.149902      100.000000       4.0        -35109.387451                 1.0         False
6  -35109.387451  -35109.387451  32819.684082 -35109.387451  150.050000 -35109.387451        0.0    0.000000        0.000000       5.0        -35109.387451                 1.0         False
7  -34809.287451  -35109.387451  32819.684082 -34809.287451  300.100000 -35109.387451        0.0  300.100000      200.100000       5.0        -35109.387451                 1.0         False
8  -34509.187451  -34909.387695  32819.684082 -34509.187451  600.200000 -34909.387695        0.1  400.100244      400.100000       2.0        -35109.387451                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=1/10, 
, buffer=4001/10.[0m
[08/30 16:28:46]  --------------------------------------------------------------------------------
[08/30 16:28:46]  Iteration: 47 (5 solution, 41 counterexamples)
[08/30 16:28:49]  Generator returned sat in 1.691893 secs.
[08/30 16:28:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:28:50]  Improved gap from 0.0 to 100
[08/30 16:28:50]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/30 16:28:50]  Verifer returned sat in 1.227761 secs.
[08/30 16:28:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34808.527344  -35608.527344  32618.82373 -34808.527344    0.049805 -35608.527344   0.000000  800.000000      700.000000       7.0        -35608.527344                -1.0            -1
1  -34808.527344  -35508.527344  32618.82373 -34808.527344    0.049805 -35508.527344   0.000000  700.000000      600.000000       7.0        -35608.527344                 0.0         False
2  -34808.527344  -35408.527344  32618.82373 -34808.527344    0.050000 -35408.527344   0.000000  600.000000      500.000000       8.0        -35608.527344                 0.0         False
3  -34608.477539  -35308.527344  32618.82373 -34608.477539  800.049805 -35308.527344   0.000000  700.049805      600.049805       9.0        -35608.527344                 1.0          True
4  -34508.477539  -35108.627441  32618.82373 -34508.477539  800.049805 -35108.627441   0.000000  600.149902      600.049805       9.0        -35608.527344                 1.0          True
5  -34308.577637  -35008.577393  32618.82373 -34308.577637  800.049805 -35008.577393   0.000000  699.999756      699.949707       9.0        -35608.527344                 1.0          True
6  -34208.527588  -34908.627441  32618.82373 -34208.527588  800.049805 -34908.627441   0.000000  700.099854      699.999756       9.0        -35608.527344                 1.0          True
7  -34108.577637  -34808.527344  32618.82373 -34108.577637  800.049805 -34808.527344   0.000000  699.949707      699.949707       9.0        -35608.527344                 1.0          True
8  -34008.477539  -34708.527588  32618.82373 -34008.477539  800.049805 -34708.527588   0.049805  700.000244      700.000000       6.0        -35608.527344                 1.0          True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=51/1024, 
, buffer=700.[0m
[08/30 16:28:51]  --------------------------------------------------------------------------------
[08/30 16:28:51]  Iteration: 48 (5 solution, 42 counterexamples)
[08/30 16:28:54]  Generator returned sat in 1.393340 secs.
[08/30 16:28:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:28:54]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/30 16:28:54]  Verifer returned sat in 0.255514 secs.
[08/30 16:28:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34808.527344  -35508.527344  32618.82373 -34808.527344      0.049805 -35508.527344        0.0   700.000000      600.000000       7.0        -35508.527344                -1.0            -1
1  -34808.527344  -35408.527344  32618.82373 -34808.527344      0.049805 -35408.527344        0.0   600.000000      500.000000       7.0        -35508.527344                 1.0         False
2  -34808.527344  -35208.527344  32618.82373 -34808.527344      0.050000 -35208.527344        0.0   400.000000      400.000000       8.0        -35508.527344                 1.0          True
3  -34708.527344  -35208.502441  32618.82373 -34708.527344    500.000000 -35208.502441        0.0   499.975098      400.000000       9.0        -35508.527344                 1.0          True
4  -34208.502441  -35108.527344  32618.82373 -34208.502441   1000.000000 -35108.527344        0.0   900.024902      800.024902       9.0        -35508.527344                 1.0          True
5  -33108.527344  -35008.527344  32618.82373 -33108.527344   2000.000000 -35008.527344        0.0  1900.000000     1800.000000       9.0        -35508.527344                 1.0          True
6  -31008.527344  -34808.552246  32618.82373 -31008.527344   4000.000000 -34808.552246        0.0  3800.024902     3800.000000       9.0        -35508.527344                 1.0          True
7  -26808.552246  -34808.527344  32618.82373 -26808.552246   8000.000000 -34808.527344        0.0  7999.975098     7899.975098       9.0        -35508.527344                 1.0          True
8  -18808.527344  -34708.527344  32618.82373 -18808.527344  16000.000000 -34708.527344     7900.0  8000.000000     7900.000000       6.0        -35508.527344                 1.0          True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=7900, 
, buffer=7900.[0m
[08/30 16:28:55]  --------------------------------------------------------------------------------
[08/30 16:28:55]  Iteration: 49 (5 solution, 43 counterexamples)
[08/30 16:28:59]  Generator returned sat in 3.159426 secs.
[08/30 16:28:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:29:03]  Improved gap from 0.0 to 21.875
[08/30 16:29:03]  Improved number of small numbers from 100 to 104 out of a max of 114
[08/30 16:29:03]  Verifer returned sat in 4.153055 secs.
[08/30 16:29:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34730.052344  -35130.052344  32618.823730 -34730.052344    0.050049 -35130.052344        0.0  400.000000       400.00000       7.0        -35130.052344                -1.0            -1
1  -34730.002344  -35030.052344  32618.823730 -34730.002344  400.050000 -35030.052344        0.0  300.050000       300.05000       7.0        -35130.052344                 0.0         False
2  -34708.177344  -34930.052490  32618.823730 -34708.177344  321.875000 -34930.052490        0.0  221.875146       221.87500       8.0        -34708.177344                 0.0         False
3  -34708.177344  -34830.052344  32618.823730 -34708.177344  121.320000 -34830.052344        0.0  121.875000       121.87500       9.0        -34708.177344                 0.0         False
4  -34708.177344  -34738.557344  32618.823730 -34708.177344   60.660000 -34738.557344        0.0   30.380000        21.87500       9.0        -34708.177344                 1.0         False
5  -34708.177344  -34730.052344  32696.948730 -34708.177344   30.330000 -34730.052344        0.0   21.875000         0.00000       9.0        -34708.177344                 1.0         False
6  -34708.177344  -34708.177344  32775.073730 -34708.177344   15.165000 -34708.177344        0.0    0.000000       -21.87500       5.0        -34708.177344                 1.0         False
7  -34639.657344  -34685.757344  32828.428711 -34639.657344   68.520000 -34685.757344        0.0   46.100000        -0.00002       1.0        -34708.177344                 0.0         False
8  -34625.097344  -34639.607422  32828.428711 -34625.097344   60.660000 -34639.607422        0.0   14.510078       -85.44002       1.0        -34625.097344                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=400.[0m
[08/30 16:29:04]  --------------------------------------------------------------------------------
[08/30 16:29:04]  Iteration: 50 (5 solution, 44 counterexamples)
[08/30 16:29:17]  Generator returned sat in 11.287533 secs.
[08/30 16:29:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:29:18]  Improved gap from 0.0008333333333333334 to 0
[08/30 16:29:19]  Improved number of small numbers from 75 to 91 out of a max of 114
[08/30 16:29:19]  Verifer returned sat in 2.354144 secs.
[08/30 16:29:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34730.002344  -34730.004150  32496.954346 -34730.002344    0.000732 -34730.004150    0.000000    0.001807        0.001449       4.0        -34730.004150                -1.0            -1
1  -34730.002344  -34730.003174  32596.952897 -34730.002344    0.001667 -34730.003174    0.000000    0.000830        0.000000       4.0        -34730.004150                 0.0         False
2  -34630.001709  -34730.002344  32596.952897 -34630.001709  100.001465 -34730.002344    0.000000  100.000635        0.000635       3.0        -34730.004150                 0.0         False
3  -34334.049010  -34627.976510  32596.952897 -34334.049010  395.953333 -34627.976510  195.951667   97.975833        0.001667       1.0        -34730.004150                 0.0         False
4  -34234.048177  -34528.987344  32596.952897 -34234.048177  197.976667 -34528.987344  195.952500   98.986667        0.001667       1.0        -34430.000677                 0.0         False
5  -34234.046510  -34429.999844  32696.948730 -34234.046510   98.988333 -34429.999844  195.952500    0.000833       -0.000833       1.0        -34429.999010                 0.0         False
6  -34234.037344  -34429.998177  32796.940186 -34234.037344    0.010000 -34429.998177  195.952500    0.008333       -0.000212       1.0        -34429.989844                 0.0         False
7  -34234.035677  -34429.989010  32896.938721 -34234.035677    0.010000 -34429.989010  195.952500    0.000833       -0.000010       1.0        -34429.989844                 0.0         False
8  -34234.026510  -34429.988037  32996.929443 -34234.026510    0.010000 -34429.988037  195.952500    0.009027       -0.000120       1.0        -34429.989844                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=1/600.[0m
[08/30 16:29:20]  --------------------------------------------------------------------------------
[08/30 16:29:20]  Iteration: 51 (5 solution, 45 counterexamples)
[08/30 16:29:22]  Generator returned sat in 1.248153 secs.
[08/30 16:29:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:29:23]  Improved gap from 0.0 to 0
[08/30 16:29:24]  Improved number of small numbers from 77 to 104 out of a max of 114
[08/30 16:29:24]  Verifer returned sat in 1.214458 secs.
[08/30 16:29:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34730.002441  -34830.002344  32596.952881 -34730.002441    0.001465 -34830.002344        0.0   99.999902       99.999756       2.0        -34830.002344                -1.0            -1
1  -34730.002441  -34830.002197  32596.953125 -34730.002441    0.001667 -34830.002197        0.0   99.999756        0.000000       2.0        -34830.002344                 0.0         False
2  -34630.002197  -34630.003906  32596.953125 -34630.002197  200.000000 -34630.003906        0.0    0.001709        0.000244       1.0        -34830.002344                 0.0         False
3  -34430.000732  -34530.002441  32596.953125 -34430.000732  200.003174 -34530.002441        0.0  100.001709      100.001709       1.0        -34830.002344                 0.0         False
4  -34430.000732  -34430.012207  32596.953125 -34430.000732    0.010000 -34430.012207        0.0    0.011475        0.001709       2.0        -34430.000732                 0.0         False
5  -34430.000732  -34430.002344  32696.951172 -34430.000732    0.010000 -34430.002344        0.0    0.001611       -0.000244       3.0        -34430.000732                 0.0         False
6  -34429.992344  -34429.999010  32796.942871 -34429.992344    0.010000 -34429.999010        0.0    0.006667       -0.000156       1.0        -34430.000732                 0.0         False
7  -34429.989010  -34429.990677  32896.939453 -34429.989010    0.010000 -34429.990677        0.0    0.001667       -0.000241       1.0        -34430.000732                 0.0         False
8  -34429.980677  -34429.980713  32996.929443 -34429.980677    0.010000 -34429.980713        0.0    0.000036       -0.001917       1.0        -34430.000732                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=204807/2048.[0m
[08/30 16:29:24]  --------------------------------------------------------------------------------
[08/30 16:29:24]  Iteration: 52 (5 solution, 46 counterexamples)
[08/30 16:29:31]  Generator returned sat in 5.600506 secs.
[08/30 16:29:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:29:32]  Improved gap from 0.0 to 100
[08/30 16:29:33]  Improved number of small numbers from 60 to 91 out of a max of 114
[08/30 16:29:33]  Verifer returned sat in 1.380611 secs.
[08/30 16:29:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34627.882568  -34761.115723  32428.066406 -34627.882568  266.733398 -34761.115723        0.0  133.233154       33.233154       3.0        -34761.115723                -1.0            -1
1  -34494.482178  -34627.782344  32428.066406 -34494.482178  266.633545 -34627.782344        0.0  133.300166       66.633545       1.0        -34494.482178                 1.0         False
2  -34461.215677  -34494.382344  32428.066406 -34461.215677  166.566667 -34494.382344        0.0   33.166667       -0.099954       1.0        -34461.215677                 0.0         False
3  -34361.115677  -34461.115677  32428.066406 -34361.115677  133.266667 -34461.115677        0.0  100.000000        0.000046       1.0        -34361.115677                 0.0         False
4  -34261.215677  -34361.115677  32428.066406 -34261.215677  199.900000 -34361.115677        0.0   99.900000       -0.099954       2.0        -34361.115677                 0.0         False
5  -34227.782344  -34261.115723  32428.066406 -34227.782344  133.333333 -34261.115723        0.0   33.333379      -66.666621       1.0        -34227.782344                 1.0         False
6  -34061.115723  -34161.115479  32428.066406 -34061.115723  200.000000 -34161.115479        0.0   99.999756        0.000000       1.0        -34227.782344                 0.0         False
7  -33861.115479  -33961.115723  32428.066406 -33861.115479  300.000000 -33961.115723        0.0  100.000244      100.000244       1.0        -34227.782344                 0.0         False
8  -33511.115723  -33911.215576  32428.066406 -33511.115723  450.000000 -33911.215576        0.0  400.099854      350.000000       2.0        -34227.782344                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1434009/4096.[0m
[08/30 16:29:33]  --------------------------------------------------------------------------------
[08/30 16:29:33]  Iteration: 53 (5 solution, 47 counterexamples)
[08/30 16:29:41]  Generator returned sat in 5.737165 secs.
[08/30 16:29:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:29:41]  Improved gap from 0.0 to 100
[08/30 16:29:42]  Improved number of small numbers from 80 to 95 out of a max of 114
[08/30 16:29:42]  Verifer returned sat in 1.452212 secs.
[08/30 16:29:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35094.468018  -35261.103636  32461.424316 -35094.468018  166.638428 -35261.103636    0.00000  166.635618       99.998535       2.0        -35261.103636                -1.0            -1
1  -35094.466553  -35094.466553  32461.424316 -35094.466553  166.637083 -35094.466553    0.00000    0.000000        0.000000       1.0        -35094.466553                 1.0         False
2  -34994.472900  -34994.474053  32461.424316 -34994.472900   99.993652 -34994.474053    0.00000    0.001152       -0.006348       1.0        -34994.472900                 0.0         False
3  -34994.465303  -34994.466553  32461.424316 -34994.465303    0.008750 -34994.466553    0.00000    0.001250      -99.998750       1.0        -34994.465303                 0.0         False
4  -34861.134886  -34894.466553  32461.424316 -34861.134886  133.331667 -34894.466553    0.00000   33.331667      -66.668333       1.0        -34994.465303                 0.0         False
5  -34594.469053  -34694.466553  32461.424316 -34594.469053  299.997500 -34694.466553    0.00000   99.997500       99.997500       1.0        -34994.465303                 0.0         False
6  -34094.466553  -34594.466553  32461.424316 -34094.466553  600.000000 -34594.466553  400.00125   99.998750       99.998750       1.0        -34994.465303                 0.0         False
7  -34094.466553  -34594.466553  32461.424316 -34094.466553    0.010000 -34594.466553  400.00125   99.998750       -0.001250       1.0        -34494.467803                 0.0         False
8  -34044.450303  -34494.466553  32461.424316 -34044.450303  150.015000 -34494.466553  400.00125   50.015000      -49.985000       1.0        -34494.467803                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=320001/800, 
, buffer=79999/800.[0m
[08/30 16:29:43]  --------------------------------------------------------------------------------
[08/30 16:29:43]  Iteration: 54 (5 solution, 48 counterexamples)
[08/30 16:29:46]  Generator returned sat in 1.388638 secs.
[08/30 16:29:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:29:46]  Improved gap from 0.0004166666666666667 to 100
[08/30 16:29:47]  Improved number of small numbers from 68 to 83 out of a max of 114
[08/30 16:29:47]  Verifer returned sat in 1.162251 secs.
[08/30 16:29:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35153.483398  -35276.750488  32461.424316 -35153.483398    0.200000 -35276.750488    0.00000  123.267090      123.266904       1.0        -35276.750488                -1.0            -1
1  -35153.483398  -35176.750488  32461.424316 -35153.483398    0.100000 -35176.750488    0.00000   23.267090       23.266904       2.0        -35153.483398                 0.0         False
2  -35076.850342  -35153.383636  32461.424316 -35076.850342   99.900146 -35153.383636    0.00000   76.533294       -0.100039       1.0        -35153.483398                 1.0         False
3  -35076.650303  -35076.750303  32461.424316 -35076.650303   76.733333 -35076.750303    0.00000    0.100000      -99.900000       1.0        -35076.650303                 0.0         False
4  -34961.650303  -34976.750303  32461.424316 -34961.650303  115.100000 -34976.750303    0.00000   15.100000      -84.900000       1.0        -35076.650303                 0.0         False
5  -34804.100303  -34876.750303  32461.424316 -34804.100303  172.650000 -34876.750303    0.00000   72.650000      -27.350000       1.0        -35076.650303                 0.0         False
6  -34617.775303  -34776.750303  32461.424316 -34617.775303  258.975000 -34776.750303    0.00000  158.975000       58.975000       1.0        -35076.650303                 0.0         False
7  -34388.287803  -34576.750303  32461.424316 -34388.287803  388.462500 -34576.750303    0.00000  188.462500      188.462500       1.0        -35076.650303                 0.0         False
8  -33994.056553  -34476.750488  32461.424316 -33994.056553  582.693750 -34476.750488   82.59375  400.100186      400.100000       2.0        -35076.650303                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=2643/32, 
, buffer=4001/10.[0m
[08/30 16:29:48]  --------------------------------------------------------------------------------
[08/30 16:29:48]  Iteration: 55 (5 solution, 49 counterexamples)
[08/30 16:29:54]  Generator returned sat in 4.829469 secs.
[08/30 16:29:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:29:55]  Improved gap from 0.0 to 0
[08/30 16:29:56]  Improved number of small numbers from 59 to 94 out of a max of 114
[08/30 16:29:56]  Verifer returned sat in 2.145628 secs.
[08/30 16:29:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35417.770264  -35517.771973  32359.880127 -35417.770264    0.001465 -35517.771973        0.0  100.001709        0.003418       5.0        -35517.771973                -1.0            -1
1  -35417.770264  -35417.771973  32459.876709 -35417.770264    0.001465 -35417.771973        0.0    0.001709        0.000000       4.0        -35517.771973                 1.0         False
2  -35417.770264  -35417.770264  32559.876709 -35417.770264    0.001465 -35417.770264        0.0    0.000000        0.000000       3.0        -35517.771973                 1.0          True
3  -35417.768555  -35417.770264  32559.876953 -35417.768555    0.001709 -35417.770264        0.0    0.001709      -99.998047       3.0        -35517.771973                 1.0          True
4  -35317.768555  -35317.770303  32659.873535 -35317.768555  100.001709 -35317.770303        0.0    0.001748       -0.001465       1.0        -35517.771973                 1.0         False
5  -35317.760303  -35317.766969  32759.866699 -35317.760303    0.010000 -35317.766969        0.0    0.006667       -0.000049       1.0        -35317.760303                 0.0         False
6  -35317.756969  -35317.758636  32859.856934 -35317.756969    0.010000 -35317.758636        0.0    0.001667       -0.006481       1.0        -35317.760303                 0.0         False
7  -35317.748636  -35317.750303  32959.848389 -35317.748636    0.010000 -35317.750303        0.0    0.001667       -0.006693       1.0        -35317.760303                 0.0         False
8  -35317.740303  -35317.741943  32959.848633 -35317.740303    0.010000 -35317.741943        0.0    0.001641      -99.998115       1.0        -35317.760303                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=7/2048.[0m
[08/30 16:29:57]  --------------------------------------------------------------------------------
[08/30 16:29:57]  Iteration: 56 (5 solution, 50 counterexamples)
[08/30 16:30:01]  Generator returned sat in 2.961493 secs.
[08/30 16:30:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:30:04]  Improved gap from 0.0 to 31.25
[08/30 16:30:05]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/30 16:30:05]  Verifer returned sat in 3.671711 secs.
[08/30 16:30:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35733.389648  -35867.765889  32756.749209 -35733.389648  200.001221 -35867.765889    0.00000  134.376240        34.37624       2.0        -35867.765889                -1.0            -1
1  -35667.765889  -35733.388184  32756.749209 -35667.765889  200.000000 -35733.388184    0.00000   65.622295         0.00000       1.0        -35667.765889                 0.0         False
2  -35567.764648  -35567.765889  32756.749209 -35567.764648  165.623535 -35567.765889    0.00000    0.001240         0.00124       1.0        -35567.764648                 0.0         False
3  -35536.513389  -35567.763389  32825.496709 -35536.513389   31.252500 -35567.763389    0.00000   31.250000         0.00000       1.0        -35536.513389                 0.0         False
4  -35402.135889  -35438.630889  32825.496709 -35402.135889  165.627500 -35438.630889    0.00125   36.493750        34.37625       1.0        -35536.513389                 0.0         False
5  -35402.135889  -35436.513389  32891.120459 -35402.135889    0.010000 -35436.513389    0.00125   34.376250         0.00000       2.0        -35402.137139                 0.0         False
6  -35370.880889  -35402.137139  32959.865459 -35370.880889   65.631250 -35402.137139    0.00125   31.255000         0.00000       3.0        -35402.137139                 0.0         False
7  -35370.880889  -35370.882139  33028.615459 -35370.880889    0.010000 -35370.882139    0.00125    0.000000       -31.25000       2.0        -35370.882139                 1.0         False
8  -35337.001514  -35339.632080  33097.365234 -35337.001514   33.879375 -35339.632080    0.00125    2.629316       -28.62085       1.0        -35370.882139                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=27501/800.[0m
[08/30 16:30:06]  --------------------------------------------------------------------------------
[08/30 16:30:06]  Iteration: 57 (5 solution, 51 counterexamples)
[08/30 16:30:10]  Generator returned sat in 2.672575 secs.
[08/30 16:30:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:30:16]  Improved gap from 0.0 to 18.75
[08/30 16:30:16]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/30 16:30:16]  Verifer returned sat in 5.840526 secs.
[08/30 16:30:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35057.398438  -35059.057373  32581.746826 -35057.398438  18.754883 -35059.057373        0.0   1.658936       -0.002441       9.0        -35059.057373                -1.0            -1
1  -35040.304932  -35057.395752  32662.996582 -35040.304932  18.752441 -35057.395752        0.0  17.090820       -1.659180       1.0        -35040.304932                 1.0         False
2  -35038.643311  -35038.645752  32744.246582 -35038.643311  18.752441 -35038.645752        0.0   0.002441      -18.747559       1.0        -35040.304932                 0.0         False
3  -35019.893311  -35019.895752  32825.496582 -35019.893311  18.752441 -35019.895752        0.0   0.002441      -18.747559       1.0        -35040.304932                 0.0         False
4  -34990.938721  -35001.145752  32902.746826 -34990.938721  28.957031 -35001.145752        0.0  10.207031      -12.542725       1.0        -35040.304932                 0.0         False
5  -34958.542236  -34978.395752  32982.890869 -34958.542236  42.603516 -34978.395752        0.0  19.853516       -0.002197       1.0        -35040.304932                 0.0         False
6  -34926.968994  -34958.539795  33051.319824 -34926.968994  51.426758 -34958.539795        0.0  31.570801        0.000000       1.0        -35040.304932                 0.0         False
7  -34902.148438  -34926.968994  33126.499268 -34902.148438  56.391357 -34926.968994        0.0  24.820557        0.000000       2.0        -35040.304932                 0.0         False
8  -34902.148438  -34902.148438  33207.749023 -34902.148438   0.010000 -34902.148438        0.0   0.000000      -18.750244       2.0        -34902.148438                 1.0          True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=21/4096.[0m
[08/30 16:30:17]  --------------------------------------------------------------------------------
[08/30 16:30:17]  Iteration: 58 (5 solution, 52 counterexamples)
[08/30 16:30:26]  Generator returned sat in 7.365244 secs.
[08/30 16:30:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:30:26]  Improved number of small numbers from 104 to 104 out of a max of 113
[08/30 16:30:26]  Verifer returned sat in 0.558319 secs.
[08/30 16:30:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -35402.153437  -35502.153437  33026.504268 -35402.153437  200.00250 -35502.153437    0.00000  100.0000          100.00       1.0        -35502.153437                -1.0            -1
1  -35302.153437  -35502.153437  33026.504268 -35302.153437  200.00000 -35502.153437    0.00000  200.0000          100.00       1.0        -35302.153437                 0.0         False
2  -35302.153437  -35302.153437  33026.504268 -35302.153437  199.99750 -35302.153437    0.00000    0.0000            0.00       2.0        -35302.153437                 0.0         False
3  -35202.153437  -35302.153437  33026.504268 -35202.153437  100.00000 -35302.153437    0.00000  100.0000            0.00       2.0        -35202.153437                 0.0         False
4  -35002.153437  -35202.150938  33026.504268 -35002.153437  300.00000 -35202.150938    0.00000  199.9975          100.00       1.0        -35202.153437                 0.0         False
5  -34452.149688  -35002.153437  33026.504268 -34452.149688  750.00125 -35002.153437  450.00375  100.0000          100.00       2.0        -35202.153437                 0.0         False
6  -34452.149688  -35002.153437  33026.504268 -34452.149688    0.01000 -35002.153437  450.00375  100.0000            0.00       2.0        -34902.153437                 0.0         False
7  -34402.129687  -34852.135938  33026.504268 -34402.129687  150.02000 -34852.135938  450.00375    0.0025          -49.98       1.0        -34902.153437                 0.0         False
8  -33927.084687  -34802.153437  33026.504268 -33927.084687  475.04750 -34802.153437  675.06875  200.0000          100.00       1.0        -34902.153437                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=108011/160, 
, buffer=100.[0m
[08/30 16:30:27]  --------------------------------------------------------------------------------
[08/30 16:30:27]  Iteration: 59 (5 solution, 53 counterexamples)
[08/30 16:30:32]  Generator returned sat in 3.844554 secs.
[08/30 16:30:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:30:37]  Improved gap from 0.0 to 26.5625
[08/30 16:30:37]  Improved number of small numbers from 104 to 105 out of a max of 114
[08/30 16:30:37]  Verifer returned sat in 4.559170 secs.
[08/30 16:30:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34569.429932  -34751.132187  32276.486523 -34569.429932  381.706055 -34751.132187    0.00000  181.702256      181.702256       5.0        -34751.132187                -1.0            -1
1  -34369.427187  -34751.132187  32276.486523 -34369.427187  381.705000 -34751.132187  100.00250  281.702500      181.702500       5.0        -34469.429688                 1.0         False
2  -34269.425937  -34551.132187  32276.486523 -34269.425937  381.703750 -34551.132187  100.00375  181.702500      181.702500       2.0        -34369.429688                 1.0         False
3  -34269.425937  -34469.429688  32276.486523 -34269.425937    8.017500 -34469.429688  100.00375  100.000000       81.702500       3.0        -34369.429688                 0.0         False
4  -34224.565938  -34351.133545  32276.486523 -34224.565938  144.860000 -34351.133545  100.00375   26.563857       26.562500       1.0        -34369.429688                 1.0         False
5  -34224.565938  -34351.132187  32349.924023 -34224.565938    0.010000 -34351.132187  100.00375   26.562500        0.000000       2.0        -34324.569687                 0.0         False
6  -34224.565938  -34324.569687  32423.361523 -34224.565938    0.010000 -34324.569687  100.00375    0.000000      -26.562500       3.0        -34324.569687                 0.0         False
7  -34152.130937  -34298.007080  32477.489023 -34152.130937   72.435000 -34298.007080  100.00375   45.872393        0.000000       1.0        -34324.569687                 1.0         False
8  -34152.130937  -34252.134688  32477.489258 -34152.130937    0.010000 -34252.134688  100.00375    0.000000      -99.999766       2.0        -34252.134688                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=72681/400.[0m
[08/30 16:30:38]  --------------------------------------------------------------------------------
[08/30 16:30:38]  Iteration: 60 (5 solution, 54 counterexamples)
[08/30 16:30:46]  Generator returned sat in 6.765732 secs.
[08/30 16:30:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:30:52]  Improved gap from 0.0 to 26.5625
[08/30 16:30:53]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/30 16:30:53]  Verifer returned sat in 6.676731 secs.
[08/30 16:30:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34068.409746  -34468.407246  32276.486523 -34068.409746    0.002686 -34468.407246        0.0  399.997500      399.997500       4.0        -34468.407246                -1.0            -1
1  -34068.407246  -34468.407227  32276.486523 -34068.407246  400.000000 -34468.407227        0.0  399.999980      300.000000       4.0        -34468.407246                 0.0         False
2  -34068.407227  -34268.407471  32276.486523 -34068.407227  400.000000 -34268.407471        0.0  200.000244      200.000020       3.0        -34468.407246                 0.0         False
3  -34068.407227  -34186.694746  32276.486523 -34068.407227    7.987500 -34186.694746        0.0  118.287520      100.000020       4.0        -34068.407227                 0.0         False
4  -34041.844746  -34068.409746  32276.486523 -34041.844746  144.850000 -34068.409746        0.0   26.565000       26.562500       5.0        -34068.407227                 0.0         False
5  -34041.844746  -34068.407246  32349.924023 -34041.844746    0.010000 -34068.407246        0.0   26.562500        0.000000       5.0        -34041.844746                 1.0         False
6  -34041.844746  -34041.844746  32423.361328 -34041.844746    0.010000 -34041.844746        0.0    0.000000      -26.562695       3.0        -34041.844746                 1.0         False
7  -33969.414746  -34008.844746  32477.491699 -33969.414746   72.430000 -34008.844746        0.0   39.430000       -0.002324       1.0        -34041.844746                 0.0         False
8  -33942.847246  -33969.412109  32477.491699 -33942.847246   65.997500 -33969.412109        0.0   26.564863      -73.434824       1.0        -33942.847246                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=819195/2048.[0m
[08/30 16:30:54]  --------------------------------------------------------------------------------
[08/30 16:30:54]  Iteration: 61 (5 solution, 55 counterexamples)
[08/30 16:30:59]  Generator returned sat in 3.285584 secs.
[08/30 16:30:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:31:11]  Improved gap from 0.0 to 20.3125
[08/30 16:31:12]  Improved number of small numbers from 64 to 73 out of a max of 114
[08/30 16:31:12]  Verifer returned sat in 12.970688 secs.
[08/30 16:31:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34358.640381  -34378.954102  32187.032227 -34358.640381    0.001465 -34378.954102        0.0  20.313721       20.312568       5.0        -34378.954102                -1.0            -1
1  -34358.640381  -34378.952852  32266.719629 -34358.640381    0.001465 -34378.952852        0.0  20.312471       -0.000029       3.0        -34378.954102                 1.0         False
2  -34218.795352  -34258.641602  32266.719629 -34218.795352  160.157500 -34258.641602        0.0  39.846250       39.845000       1.0        -34378.954102                 1.0          True
3  -34218.795352  -34258.640352  32326.874629 -34218.795352    0.001250 -34258.640352        0.0  39.845000        0.000000       2.0        -34218.795352                 0.0         False
4  -34198.482852  -34218.795352  32406.562129 -34198.482852   60.157500 -34218.795352        0.0  20.312500        0.000000       3.0        -34218.795352                 0.0         False
5  -34198.482852  -34198.482852  32486.249629 -34198.482852    0.010000 -34198.482852        0.0   0.000000      -20.312500       2.0        -34198.482852                 1.0         False
6  -34168.398477  -34178.170352  32565.937129 -34168.398477   30.084375 -34178.170352        0.0   9.771875      -10.540625       1.0        -34198.482852                 0.0         False
7  -34122.893164  -34157.857852  32627.875977 -34122.893164   55.277187 -34157.857852        0.0  34.964687       -3.096465       1.0        -34198.482852                 0.0         False
8  -34099.750508  -34119.796631  32707.563232 -34099.750508   58.107344 -34119.796631        0.0  20.046123       -0.266553       1.0        -34198.482852                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=31877/800.[0m
[08/30 16:31:12]  --------------------------------------------------------------------------------
[08/30 16:31:12]  Iteration: 62 (5 solution, 56 counterexamples)
[08/30 16:31:19]  Generator returned sat in 5.218453 secs.
[08/30 16:31:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:31:22]  Improved gap from 0.0 to 31.25
[08/30 16:31:23]  Improved number of small numbers from 64 to 68 out of a max of 114
[08/30 16:31:23]  Verifer returned sat in 3.413469 secs.
[08/30 16:31:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34608.409668  -34670.938685  32356.381532 -34608.409668    0.000732 -34670.938685   0.000000   62.529017        0.009017       6.0        -34670.938685                -1.0            -1
1  -34508.408685  -34608.409518  32356.381532 -34508.408685  162.530000 -34608.409518   0.000833  100.000000        0.009167       1.0        -34670.938685                 1.0         False
2  -34408.407852  -34409.152296  32356.381532 -34408.407852  200.000833 -34409.152296   0.001667    0.742778        0.009167       1.0        -34670.938685                 0.0         False
3  -34408.407852  -34408.418685  32425.131532 -34408.407852    0.000977 -34408.418685   0.001667    0.009167      -31.240833       2.0        -34408.409518                 0.0         False
4  -34277.157018  -34277.168685  32425.131532 -34277.157018  131.260000 -34277.168685   0.002500    0.009167        0.009167       1.0        -34408.409518                 1.0         False
5  -34277.156185  -34277.159518  32490.375977 -34277.156185    0.010000 -34277.159518   0.002500    0.000833      -34.745556       2.0        -34277.158685                 0.0         False
6  -34211.160629  -34242.413129  32559.125977 -34211.160629   65.996389 -34242.413129   0.002500   31.250000        0.000000       1.0        -34277.158685                 1.0         False
7  -34211.160629  -34211.163129  32627.875732 -34211.160629    0.010000 -34211.163129   0.002500    0.000000      -31.250244       2.0        -34211.163129                 0.0         False
8  -34178.157852  -34178.169434  32627.875732 -34178.157852   33.002778 -34178.169434   0.002500    0.009082      -98.247466       1.0        -34211.163129                 1.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=11/1200.[0m
[08/30 16:31:23]  --------------------------------------------------------------------------------
[08/30 16:31:23]  Iteration: 63 (5 solution, 57 counterexamples)
[08/30 16:31:31]  Generator returned sat in 5.898383 secs.
[08/30 16:31:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:31:38]  Improved gap from 0.0 to 26.5625
[08/30 16:31:38]  Improved number of small numbers from 77 to 86 out of a max of 114
[08/30 16:31:38]  Verifer returned sat in 7.228324 secs.
[08/30 16:31:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34651.144206  -34677.704206  32425.667053 -34651.144206  400.000000 -34677.704206        0.0   26.560000       26.560000       6.0        -34677.704206                -1.0            -1
1  -34277.706706  -34651.141602  32425.667053 -34277.706706  399.997500 -34651.141602        0.0  373.434896      299.997500       1.0        -34277.706706                 1.0         False
2  -34251.144043  -34477.704346  32425.667053 -34251.144043  399.997559 -34477.704346        0.0  226.560303      226.560163       2.0        -34277.706706                 0.0         False
3  -34251.144043  -34395.991706  32425.667053 -34251.144043    7.987500 -34395.991706        0.0  144.847663      126.560163       3.0        -34251.144043                 0.0         False
4  -34251.141706  -34277.706706  32425.667053 -34251.141706  144.850000 -34277.706706        0.0   26.565000       26.562500       4.0        -34251.144043                 0.0         False
5  -34251.141706  -34277.704206  32499.104553 -34251.141706    0.010000 -34277.704206        0.0   26.562500        0.000000       4.0        -34251.141706                 1.0         False
6  -34251.141706  -34251.141706  32572.541992 -34251.141706    0.010000 -34251.141706        0.0    0.000000      -26.562561       3.0        -34251.141706                 1.0         False
7  -34178.711706  -34218.141706  32626.672119 -34178.711706   72.430000 -34218.141706        0.0   39.430000       -0.002434       1.0        -34251.141706                 0.0         False
8  -34152.144206  -34178.708984  32700.106934 -34152.144206   65.997500 -34178.708984        0.0   26.564779       -0.000119       1.0        -34152.144206                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=1228799/4096.[0m
[08/30 16:31:39]  --------------------------------------------------------------------------------
[08/30 16:31:39]  Iteration: 64 (5 solution, 58 counterexamples)
[08/30 16:31:49]  Generator returned sat in 8.649501 secs.
[08/30 16:31:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:31:50]  Improved gap from 0.0 to 100
[08/30 16:31:51]  Improved number of small numbers from 62 to 83 out of a max of 114
[08/30 16:31:51]  Verifer returned sat in 1.268375 secs.
[08/30 16:31:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34751.153076  -34751.153846  32499.114693 -34751.153076  399.999756 -34751.153846        0.0    0.000770       -0.001230       5.0        -34751.153846                -1.0            -1
1  -34651.151846  -34751.151611  32499.114693 -34651.151846  100.002000 -34751.151611        0.0   99.999766        0.000000       1.0        -34651.151846                 1.0         False
2  -34651.151611  -34651.151611  32499.114693 -34651.151611  100.000000 -34651.151611        0.0    0.000000      -99.999766       1.0        -34651.151611                 0.0         False
3  -34351.147705  -34551.151846  32499.114693 -34351.147705  300.003906 -34551.151846        0.0  200.004141      100.004141       1.0        -34651.151611                 0.0         False
4  -34251.148846  -34351.151855  32499.114693 -34251.148846  300.003000 -34351.151855        0.0  100.003010      100.003000       2.0        -34251.148846                 0.0         False
5  -34251.148846  -34251.151846  32499.114693 -34251.148846    0.010000 -34251.151846        0.0    0.003000        0.003000       2.0        -34251.148846                 1.0         False
6  -34251.141846  -34251.142846  32499.114693 -34251.141846    0.010000 -34251.142846        0.0    0.001000      -99.990000       1.0        -34251.148846                 1.0         False
7  -33801.129346  -34051.151855  32499.114693 -33801.129346  450.013500 -34051.151855        0.0  250.022510      250.022500       1.0        -34251.148846                 0.0         False
8  -33601.151855  -34001.153076  32499.114693 -33601.151855  450.000000 -34001.153076        0.0  400.001221      349.999990       2.0        -33601.151855                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1433605/4096.[0m
[08/30 16:31:51]  --------------------------------------------------------------------------------
[08/30 16:31:51]  Iteration: 65 (5 solution, 59 counterexamples)
[08/30 16:32:01]  Generator returned sat in 7.543078 secs.
[08/30 16:32:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:32:01]  Improved gap from 0.0125 to 100
[08/30 16:32:02]  Improved number of small numbers from 59 to 70 out of a max of 114
[08/30 16:32:02]  Verifer returned sat in 1.459232 secs.
[08/30 16:32:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34151.142090  -34251.142090  32579.106079 -34151.142090     0.003418 -34251.142090    0.000000  100.000000       99.999766       5.0        -34251.142090                -1.0            -1
1  -34151.142090  -34251.100189  32579.106079 -34151.142090     0.001709 -34251.100189    0.000000   99.958099       -0.000234       5.0        -34151.142090                 1.0         False
2  -33951.143522  -34051.141855  32579.106079 -33951.143522   299.956667 -34051.141855    0.000000   99.998333       99.998333       1.0        -34151.142090                 1.0         False
3  -33951.143522  -33951.145189  32579.106079 -33951.143522     0.011667 -33951.145189    0.000000    0.001667       -0.001667       2.0        -33951.143522                 0.0         False
4  -33951.135189  -33951.141855  32579.106079 -33951.135189     0.010000 -33951.141855    0.000000    0.006667      -99.993333       1.0        -33951.135189                 1.0         False
5  -33801.142689  -33851.141855  32579.106079 -33801.142689   149.999167 -33851.141855    0.000000   49.999167      -50.000833       1.0        -33951.135189                 0.0         False
6  -33451.143522  -33651.141855  32579.106079 -33451.143522   399.998333 -33651.141855    0.000000  199.998333      199.998333       1.0        -33951.135189                 0.0         False
7  -32701.143522  -33651.141855  32579.106079 -32701.143522   949.998333 -33651.141855    0.000000  949.998333      849.998333       1.0        -33951.135189                 0.0         False
8  -31601.145189  -33451.142090  32579.106079 -31601.145189  2049.996667 -33451.142090  999.996667  850.000234      850.000000       2.0        -33951.135189                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=299999/300, 
, buffer=850.[0m
[08/30 16:32:03]  --------------------------------------------------------------------------------
[08/30 16:32:03]  Iteration: 66 (5 solution, 60 counterexamples)
[08/30 16:32:16]  Generator returned sat in 11.358999 secs.
[08/30 16:32:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:32:23]  Improved gap from 0.0 to 26.5625
[08/30 16:32:23]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/30 16:32:23]  Verifer returned sat in 7.150999 secs.
[08/30 16:32:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -34901.089590  -35301.089590  32579.106079 -34901.089590    0.002500 -35301.089590        0.0  400.000000      400.000000       7.0        -35301.089590                -1.0            -1
1  -34901.089590  -35301.086914  32579.106079 -34901.089590    0.002686 -35301.086914        0.0  399.997324      300.000000       5.0        -35301.089590                 0.0         False
2  -34874.529541  -35101.089600  32579.106079 -34874.529541  426.557373 -35101.089600        0.0  226.560059      226.560049       6.0        -35301.089590                 0.0         False
3  -34874.529541  -35019.377090  32579.106079 -34874.529541    7.987500 -35019.377090        0.0  144.847549      126.560049       7.0        -34874.529541                 0.0         False
4  -34874.527090  -34901.092090  32579.106079 -34874.527090  144.850000 -34901.092090        0.0   26.565000       26.562500       8.0        -34874.529541                 0.0         False
5  -34874.527090  -34901.089590  32652.543579 -34874.527090    0.010000 -34901.089590        0.0   26.562500        0.000000       9.0        -34874.527090                 1.0         False
6  -34874.527090  -34874.527090  32725.980957 -34874.527090    0.010000 -34874.527090        0.0    0.000000      -26.562622       3.0        -34874.527090                 1.0         False
7  -34802.097090  -34841.527090  32780.111084 -34802.097090   72.430000 -34841.527090        0.0   39.430000       -0.002495       1.0        -34874.527090                 0.0         False
8  -34775.529590  -34802.094482  32780.111084 -34775.529590   65.997500 -34802.094482        0.0   26.564893      -73.434995       1.0        -34775.529590                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=400.[0m
[08/30 16:32:24]  --------------------------------------------------------------------------------
[08/30 16:32:24]  Iteration: 67 (5 solution, 61 counterexamples)
[08/30 16:32:32]  Generator returned sat in 5.562499 secs.
[08/30 16:32:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:32:33]  Improved number of small numbers from 32 to 113 out of a max of 113
[08/30 16:32:33]  Verifer returned sat in 1.036080 secs.
[08/30 16:32:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -38967.919434  -39841.567139  32380.041016 -38967.919434     0.050049 -39841.567139  73.547607   800.100098      799.949951       8.0        -39841.567139                -1.0            -1
1  -35001.069580  -39741.416992  32380.041016 -35001.069580  4766.949951 -39741.416992  73.547607  4666.799805     4666.799805       7.0        -39841.567139                 0.0         False
2  -34900.969482  -39641.467285  32380.041016 -34900.969482  4766.899902 -39641.467285  73.597656  4666.900146     4666.849854       7.0        -34974.567139                 0.0         False
3  -34900.969482  -39641.416992  32380.041016 -34900.969482   200.249756 -39641.416992  73.597656  4666.849854     4566.849854       8.0        -34974.567139                 0.0         False
4  -34900.969482  -39541.416992  32380.041016 -34900.969482   200.199951 -39541.416992  73.597656  4566.849854     4466.849854       9.0        -34974.567139                 0.0         False
5  -34900.969482  -39441.416992  32380.041016 -34900.969482   500.399902 -39441.416992  73.597656  4466.849854     4366.849854       9.0        -34974.567139                 1.0         False
6  -34900.969482  -39341.416992  32380.041016 -34900.969482  1100.824951 -39341.416992  73.597656  4366.849854     4266.849854       9.0        -34974.567139                 1.0         False
7  -34900.969482  -39232.416992  32380.041016 -34900.969482  2351.649902 -39232.416992  73.597656  4257.849854     4166.849854       9.0        -34974.567139                 1.0         False
8  -34301.019531  -39041.416992  32380.041016 -34301.019531  4857.799805 -39041.416992  73.597656  4666.799805     4666.799805       8.0        -34974.567139                 1.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=19115417/4096.[0m
[08/30 16:32:33]  --------------------------------------------------------------------------------
[08/30 16:32:33]  Iteration: 68 (5 solution, 62 counterexamples)
[08/30 16:32:42]  Generator returned sat in 6.999950 secs.
[08/30 16:32:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:32:50]  Improved gap from 0.0 to 21.875
[08/30 16:32:50]  Improved number of small numbers from 96 to 105 out of a max of 114
[08/30 16:32:50]  Verifer returned sat in 8.097635 secs.
[08/30 16:32:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -39746.907471  -40046.604492  32170.547363 -39746.907471    0.100098 -40046.604492        0.0  299.697021      299.697021       2.0        -40046.604492                -1.0            -1
1  -39647.007812  -40041.013916  32170.547363 -39647.007812  399.596680 -40041.013916        0.0  394.006104      299.596680       2.0        -40046.604492                 0.0         False
2  -39641.416992  -39846.604736  32170.547363 -39641.416992  399.596924 -39846.604736        0.0  205.187744      205.187500       3.0        -40046.604492                 0.0         False
3  -39641.416992  -39746.907617  32170.547363 -39641.416992  120.675000 -39746.907617        0.0  105.490625      105.187500       4.0        -39641.416992                 0.0         False
4  -39641.416992  -39654.898242  32170.547363 -39641.416992   60.337500 -39654.898242        0.0   13.481250        5.187500       4.0        -39641.416992                 1.0         False
5  -39624.729492  -39646.604492  32248.672363 -39624.729492   30.168750 -39646.604492        0.0   21.875000        0.000000       4.0        -39624.729492                 1.0         False
6  -39624.729492  -39624.729492  32326.797363 -39624.729492   15.084375 -39624.729492        0.0    0.000000      -21.875000       2.0        -39624.729492                 1.0         False
7  -39556.098242  -39602.854492  32380.041016 -39556.098242   68.631250 -39602.854492        0.0   46.756250       -0.000098       1.0        -39624.729492                 0.0         False
8  -39542.516992  -39555.998047  32380.041016 -39542.516992   60.337500 -39555.998047        0.0   13.481055      -86.418848       1.0        -39542.516992                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=1227559/4096.[0m
[08/30 16:32:51]  --------------------------------------------------------------------------------
[08/30 16:32:51]  Iteration: 69 (5 solution, 63 counterexamples)
[08/30 16:32:59]  Generator returned sat in 6.060524 secs.
[08/30 16:32:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:32:59]  Improved gap from 0.00035714285714285714 to 100
[08/30 16:33:00]  Improved number of small numbers from 60 to 71 out of a max of 114
[08/30 16:33:00]  Verifer returned sat in 1.007745 secs.
[08/30 16:33:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -39946.605713  -40046.606934  32070.549766 -39946.605713    0.00250 -40046.606934    0.00000  100.001221        0.001279       9.0        -40046.606934                -1.0            -1
1  -39946.605713  -39946.606992  32070.549766 -39946.605713    0.00125 -39946.606992    0.00000    0.001279      -99.998721       3.0        -39946.605713                 1.0         False
2  -39746.603242  -39746.606992  32070.549766 -39746.603242  200.00375 -39746.606992    0.00125    0.002500        0.002500       1.0        -39946.605713                 1.0         False
3  -39646.601992  -39646.606992  32070.549766 -39646.601992  100.00375 -39646.606992    0.00250    0.002500        0.002500       1.0        -39646.604492                 0.0         False
4  -39646.594492  -39646.598242  32070.549766 -39646.594492    0.01000 -39646.598242    0.00250    0.001250      -99.990000       1.0        -39646.596992                 0.0         False
5  -39346.586992  -39446.606992  32070.549766 -39346.586992  300.00875 -39446.606992  100.01750    0.002500        0.002500       1.0        -39646.596992                 0.0         False
6  -39346.579492  -39446.606992  32070.549766 -39346.579492    0.01000 -39446.606992  100.01750    0.010000      -99.990000       1.0        -39446.596992                 0.0         False
7  -39146.589492  -39246.608242  32070.549766 -39146.589492  200.00000 -39246.608242  100.01750    0.001250        0.000000       1.0        -39446.596992                 0.0         False
8  -38746.600742  -39246.605713  32070.549766 -38746.600742  399.99000 -39246.605713  400.00375  100.001221        0.002500       1.0        -39446.596992                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=320001/800, 
, buffer=1/400.[0m
[08/30 16:33:01]  --------------------------------------------------------------------------------
[08/30 16:33:01]  Iteration: 70 (5 solution, 64 counterexamples)
[08/30 16:33:07]  Generator returned sat in 4.489159 secs.
[08/30 16:33:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:33:12]  Improved gap from 0.0007142857142857143 to 21.875
[08/30 16:33:12]  Improved number of small numbers from 93 to 107 out of a max of 114
[08/30 16:33:12]  Verifer returned sat in 4.811455 secs.
[08/30 16:33:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -39168.529541  -39568.479492  32070.549561 -39168.529541    0.050000 -39568.479492        0.0  399.949951      399.949951       3.0        -39568.479492                -1.0            -1
1  -39163.291992  -39568.479492  32070.549561 -39163.291992  405.187500 -39568.479492        0.0  405.187500      305.187500       3.0        -39568.479492                 0.0         False
2  -39163.291992  -39368.479736  32070.549561 -39163.291992  121.480225 -39368.479736        0.0  205.187744      205.187500       4.0        -39163.291992                 0.0         False
3  -39163.291992  -39268.479492  32070.549561 -39163.291992  121.480000 -39268.479492        0.0  105.187500      105.187500       5.0        -39163.291992                 0.0         False
4  -39163.291992  -39176.974492  32070.549561 -39163.291992   60.740000 -39176.974492        0.0   13.682500        5.187500       6.0        -39163.291992                 1.0         False
5  -39146.604492  -39168.479492  32148.674561 -39146.604492   30.370000 -39168.479492        0.0   21.875000        0.000000       5.0        -39146.604492                 1.0         False
6  -39146.604492  -39146.604492  32226.799561 -39146.604492   15.185000 -39146.604492        0.0    0.000000      -21.875000       2.0        -39146.604492                 1.0         False
7  -39078.074492  -39124.729492  32280.094971 -39078.074492   68.530000 -39124.729492        0.0   46.655000       -0.049590       1.0        -39146.604492                 0.0         False
8  -39064.341992  -39078.024414  32280.094971 -39064.341992   60.387500 -39078.024414        0.0   13.682422      -86.317090       1.0        -39064.341992                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=409549/1024.[0m
[08/30 16:33:13]  --------------------------------------------------------------------------------
[08/30 16:33:13]  Iteration: 71 (5 solution, 65 counterexamples)
[08/30 16:33:19]  Generator returned sat in 4.395493 secs.
[08/30 16:33:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:33:20]  Improved gap from 0.0 to 100
[08/30 16:33:21]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/30 16:33:21]  Verifer returned sat in 1.683125 secs.
[08/30 16:33:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -39046.389893  -39146.339600  31548.41001 -39046.389893  149.749756 -39146.339600       0.00   99.949707       -0.050156       3.0        -39146.339600                -1.0            -1
1  -38996.589600  -39046.339736  31548.41001 -38996.589600  149.750000 -39046.339736       0.00   49.750137      -50.249863       1.0        -39146.339600                 1.0         False
2  -38896.639736  -38896.689736  31548.41001 -38896.639736  149.700000 -38896.689736       0.00    0.050000      -50.300000       1.0        -38896.639736                 0.0         False
3  -38696.089736  -38746.339736  31548.41001 -38696.089736  200.600000 -38746.339736       0.05   50.200000       50.200000       1.0        -38896.639736                 0.0         False
4  -38645.989736  -38646.339736  31548.41001 -38645.989736  100.300000 -38646.339736       0.05    0.300000        0.300000       1.0        -38646.039736                 0.0         False
5  -38345.989736  -38546.339736  31548.41001 -38345.989736  300.300000 -38546.339736     150.15   50.200000       50.200000       1.0        -38646.039736                 0.0         False
6  -38246.039736  -38546.339736  31548.41001 -38246.039736  150.150000 -38546.339736     150.15  150.150000       50.150000       1.0        -38396.189736                 0.0         False
7  -38146.039736  -38346.339736  31548.41001 -38146.039736  250.150000 -38346.339736     150.15   50.150000       50.150000       1.0        -38396.189736                 0.0         False
8  -37796.039736  -38246.339844  31548.41001 -37796.039736  400.150000 -38246.339844     400.10   50.200107       50.200000       1.0        -38396.189736                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=8001/20, 
, buffer=251/5.[0m
[08/30 16:33:22]  --------------------------------------------------------------------------------
[08/30 16:33:22]  Iteration: 72 (5 solution, 66 counterexamples)
[08/30 16:33:29]  Generator returned sat in 5.031286 secs.
[08/30 16:33:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:33:29]  Improved gap from 0.1 to 100
[08/30 16:33:30]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/30 16:33:30]  Verifer returned sat in 1.424287 secs.
[08/30 16:33:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -39270.689697  -39321.089736  31548.41001 -39270.689697    0.100098 -39321.089736        0.0   50.400039        0.100039       9.0        -39321.089736                -1.0            -1
1  -39270.689697  -39270.789736  31548.41001 -39270.689697    0.100098 -39270.789736        0.0    0.100039      -99.899961       3.0        -39321.089736                 1.0         False
2  -39020.889736  -39070.789736  31548.41001 -39020.889736  249.900000 -39070.789736        0.0   49.900000       49.900000       1.0        -39321.089736                 1.0          True
3  -38920.589736  -39020.889736  31548.41001 -38920.589736  150.200000 -39020.889736        0.0  100.300000       50.200000       2.0        -38920.589736                 0.0         False
4  -38870.789736  -38970.789736  31548.41001 -38870.789736  150.100000 -38970.789736        0.0  100.000000        0.000000       2.0        -38870.789736                 1.0         False
5  -38820.789736  -38820.889736  31548.41001 -38820.789736  150.000000 -38820.889736        0.0    0.100000      -50.000000       1.0        -38820.789736                 1.0         False
6  -38495.989736  -38670.789736  31548.41001 -38495.989736  324.900000 -38670.789736        0.0  174.800000      174.800000       1.0        -38820.789736                 0.0         False
7  -38158.239736  -38670.789736  31548.41001 -38158.239736  512.550000 -38670.789736        0.0  512.550000      412.550000       1.0        -38820.789736                 0.0         False
8  -38114.514736  -38470.789795  31548.41001 -38114.514736  556.275000 -38470.789795        0.0  356.275059      356.275000       2.0        -38820.789736                 0.0         False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=845107/2048.[0m
[08/30 16:33:31]  --------------------------------------------------------------------------------
[08/30 16:33:31]  Iteration: 73 (5 solution, 67 counterexamples)
[08/30 16:33:38]  Generator returned sat in 5.425529 secs.
[08/30 16:33:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:33:42]  Verifer returned unsat in 3.685787 secs.
[08/30 16:33:42]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:33:42]  --------------------------------------------------------------------------------
[08/30 16:33:42]  Iteration: 74 (6 solution, 67 counterexamples)
[08/30 16:33:54]  Generator returned sat in 9.839081 secs.
[08/30 16:33:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:33:56]  Improved gap from 0.000625 to 23.4375
[08/30 16:33:56]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/30 16:33:56]  Verifer returned sat in 1.929701 secs.
[08/30 16:33:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -41086.355713  -41156.567871  31498.547607 -41086.355713  47.275000 -41156.567871        0.0  70.212158       23.537354       5.0        -41156.567871                -1.0            -1
1  -41086.355713  -41109.893066  31574.910156 -41086.355713  47.275000 -41109.893066        0.0  23.537354       -0.100098       3.0        -41156.567871                 1.0         False
2  -41062.718018  -41086.255371  31651.272705 -41062.718018  47.175049 -41086.255371        0.0  23.537354       -0.099854       1.0        -41062.718018                 1.0          True
3  -41039.280518  -41062.618164  31727.635010 -41039.280518  46.974854 -41062.618164        0.0  23.337646       -0.300049       1.0        -41039.280518                 0.0         False
4  -41015.643311  -41038.980469  31804.197510 -41015.643311  46.974854 -41038.980469        0.0  23.337158       -0.100342       1.0        -41039.280518                 0.0         False
5  -41003.524170  -41015.542969  31880.760010 -41003.524170  35.456299 -41015.542969        0.0  12.018799      -11.418701       1.0        -41003.524170                 0.0         False
6  -40980.186768  -40992.105469  31957.322510 -40980.186768  35.356201 -40992.105469        0.0  11.918701      -11.518799       1.0        -40980.186768                 0.0         False
7  -40956.849121  -40968.667969  32033.885010 -40956.849121  35.256348 -40968.667969        0.0  11.818848      -11.618652       1.0        -40956.849121                 0.0         False
8  -40933.511719  -40945.230469  32033.885010 -40933.511719  35.156250 -40945.230469        0.0  11.718750      -88.281250       1.0        -40933.511719                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=48205/2048.[0m
[08/30 16:33:57]  --------------------------------------------------------------------------------
[08/30 16:33:57]  Iteration: 75 (6 solution, 68 counterexamples)
[08/30 16:34:08]  Generator returned sat in 9.356325 secs.
[08/30 16:34:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:34:10]  Improved number of small numbers from 60 to 113 out of a max of 113
[08/30 16:34:10]  Verifer returned sat in 1.805664 secs.
[08/30 16:34:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -41242.345703  -41691.795654  31830.209961 -41242.345703    0.099854 -41691.795654        0.0  449.449951      449.449951       7.0        -41691.795654                -1.0            -1
1  -41242.345703  -41591.795654  31830.209961 -41242.345703  449.449951 -41591.795654        0.0  349.449951      349.449951       7.0        -41691.795654                 0.0         False
2  -41242.345703  -41491.795654  31830.209961 -41242.345703   49.450000 -41491.795654        0.0  249.449951      249.449951       8.0        -41242.345703                 0.0         False
3  -41242.345703  -41391.795654  31830.209961 -41242.345703   49.350098 -41391.795654        0.0  149.449951      149.449951       9.0        -41242.345703                 0.0         False
4  -41242.345703  -41291.895508  31830.209961 -41242.345703   49.350098 -41291.895508        0.0   49.549805       49.449951       9.0        -41242.345703                 1.0         False
5  -41242.345703  -41291.795654  31880.760010 -41242.345703   49.350098 -41291.795654        0.0   49.449951        0.000000       9.0        -41242.345703                 1.0         False
6  -41242.345703  -41242.345703  31980.760010 -41242.345703   49.350098 -41242.345703        0.0    0.000000        0.000000       9.0        -41242.345703                 1.0         False
7  -41192.995605  -41242.345703  32031.409912 -41192.995605   49.350098 -41242.345703        0.0   49.350098        0.000000       9.0        -41242.345703                 1.0         False
8  -41192.995605  -41192.995605  32131.409912 -41192.995605   49.350098 -41192.995605        0.0    0.000000        0.000000       2.0        -41242.345703                 1.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=8989/20.[0m
[08/30 16:34:11]  --------------------------------------------------------------------------------
[08/30 16:34:11]  Iteration: 76 (6 solution, 69 counterexamples)
[08/30 16:34:20]  Generator returned sat in 7.445545 secs.
[08/30 16:34:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:34:23]  Improved gap from 0.0 to 15.625
[08/30 16:34:24]  Improved number of small numbers from 108 to 111 out of a max of 114
[08/30 16:34:24]  Verifer returned sat in 2.994631 secs.
[08/30 16:34:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -41383.970947  -41384.070703  31522.484863 -41383.970947   0.100098 -41384.070703        0.0   0.099756        0.099609       7.0        -41384.070703                -1.0            -1
1  -41368.345703  -41383.870703  31606.660010 -41368.345703  15.725000 -41383.870703        0.0  15.525000       -0.100000       1.0        -41384.070703                 1.0         False
2  -41344.708203  -41368.245703  31683.122510 -41344.708203  39.162500 -41368.245703        0.0  23.537500        0.000000       1.0        -41384.070703                 0.0         False
3  -41344.708203  -41344.708203  31767.497314 -41344.708203  23.437256 -41344.708203        0.0   0.000000      -15.625195       2.0        -41344.708203                 0.0         False
4  -41305.345703  -41325.420654  31843.760010 -41305.345703  39.362500 -41325.420654        0.0  20.074951        0.000000       1.0        -41344.708203                 1.0         False
5  -41305.345703  -41305.345703  31896.385010 -41305.345703  19.681250 -41305.345703        0.0   0.000000      -47.375000       2.0        -41305.345703                 0.0         False
6  -41242.445703  -41257.970703  31980.760010 -41242.445703  62.900000 -41257.970703        0.0  15.525000       -0.100000       1.0        -41305.345703                 1.0         False
7  -41226.520703  -41242.345703  32064.935010 -41226.520703  31.450000 -41242.345703        0.0  15.825000        0.000000       1.0        -41226.520703                 0.0         False
8  -41226.520703  -41226.520703  32149.309814 -41226.520703  15.725000 -41226.520703        0.0   0.000000      -15.625195       2.0        -41226.520703                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=205/1024.[0m
[08/30 16:34:24]  --------------------------------------------------------------------------------
[08/30 16:34:24]  Iteration: 77 (6 solution, 70 counterexamples)
[08/30 16:34:34]  Generator returned sat in 7.640914 secs.
[08/30 16:34:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:34:41]  Improved gap from 0.0 to 31.25
[08/30 16:34:42]  Improved number of small numbers from 63 to 72 out of a max of 114
[08/30 16:34:42]  Verifer returned sat in 7.454676 secs.
[08/30 16:34:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -41484.070068  -41546.576289  31622.486846 -41484.070068  162.50625 -41546.576289    0.00000  62.506221        0.002471       7.0        -41546.576289                -1.0            -1
1  -41384.071289  -41384.072539  31622.486846 -41384.071289  162.50500 -41384.072539    0.00000   0.001250        0.001250       1.0        -41384.071289                 1.0         False
2  -41284.068789  -41284.072539  31622.486846 -41284.068789  100.00375 -41284.072539    0.00125   0.002500        0.002500       1.0        -41284.070039                 0.0         False
3  -41284.068789  -41284.070039  31691.234346 -41284.068789    0.00125 -41284.070039    0.00125   0.000000      -31.250000       2.0        -41284.070039                 0.0         False
4  -41152.815039  -41152.826289  31691.234346 -41152.815039  131.25375 -41152.826289    0.00250   0.008750        0.002500       1.0        -41284.070039                 1.0         False
5  -41152.813789  -41152.820039  31756.853271 -41152.813789    0.01000 -41152.820039    0.00250   0.003750      -34.377324       2.0        -41152.816289                 0.0         False
6  -41087.186289  -41118.438965  31825.603096 -41087.186289   65.63125 -41118.438965    0.00250  31.250176        0.000000       1.0        -41152.816289                 1.0         False
7  -41087.186289  -41087.188789  31894.353027 -41087.186289    0.01000 -41087.188789    0.00250   0.000000      -31.250068       2.0        -41087.188789                 0.0         False
8  -41054.362539  -41054.373779  31894.353271 -41054.362539   32.82375 -41054.373779    0.00250   0.008740      -98.426074       1.0        -41087.188789                 1.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=1/400.[0m
[08/30 16:34:42]  --------------------------------------------------------------------------------
[08/30 16:34:42]  Iteration: 78 (6 solution, 71 counterexamples)
[08/30 16:34:49]  Generator returned sat in 4.293541 secs.
[08/30 16:34:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:34:56]  Improved gap from 0.0 to 31.25
[08/30 16:34:57]  Improved number of small numbers from 63 to 69 out of a max of 114
[08/30 16:34:57]  Verifer returned sat in 7.951109 secs.
[08/30 16:34:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -40102.656738  -40202.654414  31628.828027 -40102.656738  204.232422 -40202.654414     0.0000   99.997676       -0.002324       8.0        -40202.654414                -1.0            -1
1  -39998.424414  -40102.654414  31628.828027 -39998.424414  204.230000 -40102.654414     0.0000  104.230000        4.230000       1.0        -39998.424414                 1.0         False
2  -39898.424414  -39902.654414  31628.828027 -39898.424414  204.230000 -39902.654414     0.0000    4.230000        4.230000       1.0        -39998.424414                 0.0         False
3  -39898.424414  -39898.424414  31693.348027 -39898.424414    4.227500 -39898.424414     0.0000    0.000000      -31.250000       2.0        -39898.424414                 0.0         False
4  -39744.195664  -39767.176914  31693.348027 -39744.195664  154.228750 -39767.176914     0.0025   22.978750       22.976250       1.0        -39898.424414                 1.0         False
5  -39744.195664  -39767.174414  31759.478027 -39744.195664    0.010000 -39767.174414     0.0025   22.976250      -10.893750       2.0        -39744.198164                 0.0         False
6  -39699.426914  -39733.304199  31825.603027 -39699.426914   67.745000 -39733.304199     0.0025   33.874785        0.000000       1.0        -39744.198164                 1.0         False
7  -39699.426914  -39699.429414  31894.353027 -39699.426914   33.872500 -39699.429414     0.0025    0.000000      -31.250000       2.0        -39699.429414                 0.0         False
8  -39648.616914  -39668.179199  31894.353027 -39648.616914   50.810000 -39668.179199     0.0025   19.559785      -80.440000       1.0        -39699.429414                 1.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=18381/800.[0m
[08/30 16:34:57]  --------------------------------------------------------------------------------
[08/30 16:34:57]  Iteration: 79 (6 solution, 72 counterexamples)
[08/30 16:35:06]  Generator returned sat in 5.865746 secs.
[08/30 16:35:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:06]  Improved gap from 49.920625 to 100
[08/30 16:35:07]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/30 16:35:07]  Verifer returned sat in 1.157610 secs.
[08/30 16:35:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -40506.633545  -40506.634202  31825.603027 -40506.633545  100.004167 -40506.634202    0.000000    0.000658       -0.001009       8.0        -40506.634202                -1.0            -1
1  -40406.630036  -40506.632536  31825.603027 -40406.630036  100.004167 -40506.632536    0.000000  100.002500        0.002500       1.0        -40506.634202                 1.0         False
2  -40406.630036  -40406.632536  31825.603027 -40406.630036  100.001465 -40406.632536    0.000000    0.002500      -99.997500       2.0        -40406.630036                 0.0         False
3  -40306.631702  -40306.632536  31825.603027 -40306.631702  100.000833 -40306.632536    0.000000    0.000833      -99.999167       1.0        -40306.631702                 1.0         False
4  -40106.630869  -40131.675661  31825.603027 -40106.630869  200.001667 -40131.675661    0.000000   25.044792        0.001667       1.0        -40306.631702                 0.0         False
5  -39744.195557  -40006.632536  31825.603027 -39744.195557  387.480104 -40006.632536  262.433646    0.003333        0.003333       1.0        -40306.631702                 0.0         False
6  -39744.188890  -40006.623369  31825.603027 -39744.188890    0.010000 -40006.623369  262.433646    0.000833      -99.990000       1.0        -40006.622536                 0.0         False
7  -39594.175140  -39856.609619  31825.603027 -39594.175140  150.014583 -39856.609619  262.433646    0.000833      -49.976250       1.0        -40006.622536                 0.0         False
8  -39306.628369  -39806.632324  31825.603027 -39306.628369  287.547604 -39806.632324  400.000833  100.003122        0.003333       1.0        -40006.622536                 0.0         False
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=480001/1200, 
, buffer=1/300.[0m
[08/30 16:35:07]  --------------------------------------------------------------------------------
[08/30 16:35:07]  Iteration: 80 (6 solution, 73 counterexamples)
[08/30 16:35:20]  Generator returned sat in 9.961449 secs.
[08/30 16:35:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:23]  Improved gap from 0.001 to 23.4375
[08/30 16:35:24]  Improved number of small numbers from 77 to 80 out of a max of 114
[08/30 16:35:24]  Verifer returned sat in 3.765586 secs.
[08/30 16:35:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -40077.547363  -40077.747119  31825.603027 -40077.547363   0.100098 -40077.747119        0.0   0.199756        0.199756       5.0        -40077.747119                -1.0            -1
1  -40003.834619  -40028.272119  31851.690527 -40003.834619  73.912500 -40028.272119        0.0  24.437500        0.000000       1.0        -40077.747119                 1.0         False
2  -39979.397119  -40003.834619  31927.253027 -39979.397119  48.875000 -40003.834619        0.0  24.437500        0.000000       2.0        -39979.397119                 0.0         False
3  -39930.122119  -39979.397119  31977.978027 -39930.122119  73.712500 -39979.397119        0.0  49.275000        0.000000       2.0        -39979.397119                 1.0         False
4  -39930.122119  -39930.122119  32053.540527 -39930.122119  49.175000 -39930.122119        0.0   0.000000      -24.437500       2.0        -39930.122119                 1.0         False
5  -39881.047119  -39905.684570  32128.903027 -39881.047119  49.075000 -39905.684570        0.0  24.637451        0.000000       1.0        -39881.047119                 1.0         False
6  -39881.047119  -39881.047119  32204.465576 -39881.047119  24.537500 -39881.047119        0.0   0.000000      -24.437451       2.0        -39881.047119                 0.0         False
7  -39831.872119  -39856.609619  32279.728027 -39831.872119  49.175000 -39856.609619        0.0  24.737500        0.000000       1.0        -39881.047119                 1.0         False
8  -39831.872119  -39831.872119  32279.728027 -39831.872119  24.587500 -39831.872119        0.0   0.000000     -100.000000       2.0        -39831.872119                 0.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1/5.[0m
[08/30 16:35:24]  --------------------------------------------------------------------------------
[08/30 16:35:24]  Iteration: 81 (6 solution, 74 counterexamples)
[08/30 16:35:32]  Generator returned sat in 5.169833 secs.
[08/30 16:35:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:41]  Improved gap from 0.0 to 23.4375
[08/30 16:35:42]  Improved number of small numbers from 59 to 70 out of a max of 114
[08/30 16:35:42]  Verifer returned sat in 10.450190 secs.
[08/30 16:35:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease
0  -39947.629395  -39947.729619  31845.340332 -39947.629395   0.100098 -39947.729619        0.0   0.100225        0.100029       7.0        -39947.729619                -1.0            -1
1  -39900.321286  -39924.092119  31897.832275 -39900.321286  47.408333 -39924.092119        0.0  23.770833       -0.099919       1.0        -39947.729619                 1.0         False
2  -39876.783786  -39900.221286  31974.394694 -39876.783786  47.308333 -39900.221286        0.0  23.437500        0.000000       1.0        -39876.783786                 0.0         False
3  -39876.783786  -39876.783786  32050.924072 -39876.783786  23.337500 -39876.783786        0.0   0.000000      -23.470622       2.0        -39876.783786                 0.0         False
4  -39829.642119  -39853.312952  32127.253027 -39829.642119  47.141667 -39853.312952        0.0  23.670833        0.000000       1.0        -39876.783786                 1.0         False
5  -39829.642119  -39829.642119  32203.815527 -39829.642119  23.570833 -39829.642119        0.0   0.000000      -23.437500       2.0        -39829.642119                 0.0         False
6  -39782.567119  -39806.204590  32280.178027 -39782.567119  47.075000 -39806.204590        0.0  23.637471        0.000000       1.0        -39829.642119                 1.0         False
7  -39782.567119  -39782.567119  32356.740479 -39782.567119  23.537500 -39782.567119        0.0   0.000000      -23.437549       2.0        -39782.567119                 0.0         False
8  -39735.425452  -39759.096191  32433.036133 -39735.425452  47.141667 -39759.096191        0.0  23.670739       -0.000228       1.0        -39782.567119                 1.0         False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=205/1024.[0m
[08/30 16:35:43]  --------------------------------------------------------------------------------
[08/30 16:35:43]  Iteration: 82 (6 solution, 75 counterexamples)
[08/30 16:35:45]  Generator returned unsat in 0.204283 secs.
[08/30 16:35:45]  [96mNo more solutions found[0m
[08/30 16:35:45]  Final solutions:
[08/30 16:35:45]  0: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:45]  1: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:45]  2: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:45]  3: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:45]  4: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:45]  5: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 16:35:45]  Took 629.053195 secs.
