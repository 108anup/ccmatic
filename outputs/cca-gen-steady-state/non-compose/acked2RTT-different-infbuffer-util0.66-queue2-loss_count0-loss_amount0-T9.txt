[09/28 12:23:47]  --------------------------------------------------------------------------------
[09/28 12:23:47]  Iteration: 1 (0 solution, 0 counterexamples)
[09/28 12:23:47]  Generator returned sat in 0.004255 secs.
[09/28 12:23:47]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:23:48]  Improved gap from 0.0 to 100
[09/28 12:23:48]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:23:48]  Verifer returned sat in 0.815250 secs.
[09/28 12:23:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0      328.52500         228.65    -0.125    328.52500    0.12500       228.65        0.0   99.87500        99.87500       9.0              228.650                -1.0                -1
1      328.52500         328.40    -0.125    328.52500    0.12500       328.40        0.0    0.12500        -0.12500       9.0              228.650                 1.0             False
2      328.65000         328.65    -0.125    328.65000    0.25000       328.65        0.0    0.00000      -100.00000       1.0              228.650                 1.0              True
3      428.65000         428.65    -0.125    428.65000  100.00000       428.65        0.0    0.00000      -100.00000       1.0              228.650                 0.0             False
4      680.15000         628.65    -0.125    680.15000  251.50000       628.65        0.0   51.50000        51.50000       1.0              228.650                 0.0             False
5     1355.40000         628.65    -0.125   1355.40000  726.75000       628.65        0.0  726.75000       626.75000       1.0              228.650                 0.0             False
6     1393.02500         728.65    -0.125   1393.02500  764.37500       728.65        0.0  664.37500       564.37500       2.0              228.650                 0.0             False
7     1393.02500         850.65    -0.125   1393.02500  583.18750       850.65        0.0  542.37500       464.37500       3.0             1393.025                 0.0             False
8     1587.24375        1028.65    -0.125   1587.24375  736.59375      1028.65        0.0  558.59375       558.59375       4.0             1393.025                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:48]  --------------------------------------------------------------------------------
[09/28 12:23:48]  Iteration: 2 (0 solution, 1 counterexamples)
[09/28 12:23:48]  Generator returned sat in 0.030584 secs.
[09/28 12:23:48]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:23:48]  Improved gap from 0.0 to 100
[09/28 12:23:49]  Improved number of small numbers from 107 to 109 out of a max of 111
[09/28 12:23:49]  Verifer returned sat in 0.288868 secs.
[09/28 12:23:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     328.524902     -71.475098 -0.125488   328.524902    0.062256   -71.475098        0.0  400.000000      399.999756       7.0           -71.475098                -1.0                -1
1     328.524902      28.525146 -0.125488   328.524902    0.062256    28.525146        0.0  299.999756      299.999756       6.0           -71.475098                 1.0             False
2     328.524902     128.524902 -0.125488   328.524902    0.062256   128.524902        0.0  200.000000      199.999756       7.0           -71.475098                 1.0              True
3     328.524902     208.966813 -0.125488   328.524902    4.905208   208.966813        0.0  119.558089       99.999756       6.0           -71.475098                 1.0              True
4     328.524902     328.524902 -0.125488   328.524902  100.031250   328.524902        0.0    0.000000       -0.000244       6.0           -71.475098                 1.0              True
5     628.587402     328.525146 -0.125488   628.587402  300.062500   328.525146        0.0  300.062256      200.062256       1.0           -71.475098                 1.0              True
6     628.587402     448.125000 -0.125488   628.587402  180.337500   448.125000        0.0  180.462402      100.062256       2.0           628.587402                 0.0             False
7     628.587402     628.525146 -0.125488   628.587402  180.400146   628.525146        0.0    0.062256        0.062256       3.0           628.587402                 0.0             False
8    1079.525146     628.587402 -0.125488  1079.525146  451.000000   628.587402        0.0  450.937744      351.000000       4.0           628.587402                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:49]  --------------------------------------------------------------------------------
[09/28 12:23:49]  Iteration: 3 (0 solution, 2 counterexamples)
[09/28 12:23:49]  Generator returned sat in 0.084051 secs.
[09/28 12:23:49]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:23:50]  Improved number of small numbers from 64 to 91 out of a max of 110
[09/28 12:23:50]  Verifer returned sat in 0.865038 secs.
[09/28 12:23:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     191.515381    -608.453369 -0.125488   191.515381    0.031006  -608.453369        0.0  799.968750      799.968568       5.0          -608.453369                -1.0                -1
1     191.515381    -508.453187 -0.125488   191.515381    0.031250  -508.453187        0.0  699.968568      699.968568       6.0          -608.453369                 0.0             False
2     191.515381    -408.453187 -0.125488   191.515381    0.031250  -408.453187        0.0  599.968568      599.968568       7.0          -608.453369                 1.0              True
3     191.515381    -395.727492 -0.125488   191.515381    0.031250  -395.727492        0.0  587.242873      499.968568       7.0          -608.453369                 1.0              True
4     191.515381    -308.453187 -0.125488   191.515381  170.104167  -308.453187        0.0  499.968568      399.968568       7.0          -608.453369                 1.0              True
5     191.515381    -208.453187 -0.125488   191.515381  236.052083  -208.453187        0.0  399.968568      299.968568       8.0          -608.453369                 1.0              True
6     191.515381    -108.453187 -0.125488   191.515381  399.937500  -108.453187        0.0  299.968568      199.968568       8.0          -608.453369                 1.0              True
7     392.515563      91.546813 -0.125488   392.515563  500.968750    91.546813        0.0  300.968750      300.968750       8.0          -608.453369                 1.0              True
8     793.031188     191.546631 -0.125488   793.031188  701.484375   191.546631        0.0  601.484557      601.484375       2.0          -608.453369                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:51]  --------------------------------------------------------------------------------
[09/28 12:23:51]  Iteration: 4 (0 solution, 3 counterexamples)
[09/28 12:23:51]  Generator returned sat in 0.022185 secs.
[09/28 12:23:51]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:23:51]  Improved gap from 0.0 to 100
[09/28 12:23:51]  Improved number of small numbers from 47 to 111 out of a max of 111
[09/28 12:23:51]  Verifer returned sat in 0.324584 secs.
[09/28 12:23:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     291.474365    -408.494385 -0.125488   291.474365    0.031006  -408.494385        0.0  699.968750      699.968750       2.0          -408.494385                -1.0                -1
1     291.474365    -308.494629 -0.125488   291.474365    0.031006  -308.494629        0.0  599.968994      599.968750       2.0          -408.494385                 0.0             False
2     291.474365    -208.494385 -0.125488   291.474365    0.031006  -208.494385        0.0  499.968750      499.968750       3.0          -408.494385                 0.0             False
3     291.474365    -108.494385 -0.125488   291.474365    0.031250  -108.494385        0.0  399.968750      399.968750       4.0          -408.494385                 0.0             False
4     291.474365     -33.374756 -0.125488   291.474365    1.031250   -33.374756        0.0  324.849121      299.968750       5.0          -408.494385                 0.0             False
5     291.474365      21.432861 -0.125488   291.474365    2.031250    21.432861        0.0  270.041504      199.968750       6.0          -408.494385                 0.0             False
6     291.474365      96.552490 -0.125488   291.474365  194.890869    96.552490        0.0  194.921875       99.968750       7.0          -408.494385                 1.0              True
7     291.474365     291.474365 -0.125488   291.474365  194.890869   291.474365        0.0    0.000000       -0.031250       8.0          -408.494385                 1.0              True
8     696.536621     291.505615 -0.125488   696.536621  405.062256   291.505615        0.0  405.031006      305.031006       1.0          -408.494385                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:52]  --------------------------------------------------------------------------------
[09/28 12:23:52]  Iteration: 5 (0 solution, 4 counterexamples)
[09/28 12:23:52]  Generator returned sat in 0.092145 secs.
[09/28 12:23:52]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:23:54]  Improved gap from 0.01 to 53.125
[09/28 12:23:54]  Improved number of small numbers from 54 to 111 out of a max of 111
[09/28 12:23:54]  Verifer returned sat in 2.017776 secs.
[09/28 12:23:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -148.474854    -448.599365   73.124268  -148.474854  300.124756  -448.599365        0.0  300.124512      200.124512       8.0          -448.599365                -1.0                -1
1    -148.474854    -248.599365   73.124268  -148.474854  300.062256  -248.599365        0.0  100.124512      100.124512       2.0          -148.474854                 0.0             False
2      51.400635    -248.537354   73.124268    51.400635  300.000000  -248.537354        0.0  299.937988      200.000000       3.0            51.400635                 0.0             False
3      51.400635     -50.162109   73.124268    51.400635   58.125000   -50.162109        0.0  101.562744      100.000000       2.0            51.400635                 0.0             False
4      51.400635     -48.599365   73.124268    51.400635   57.125000   -48.599365        0.0  100.000000        0.000000       3.0            51.400635                 0.0             False
5      51.400635      51.400635  117.999512    51.400635   56.125000    51.400635        0.0    0.000000      -55.124756       4.0            51.400635                 0.0             False
6     106.525635     106.525635  163.874512   106.525635   55.125000   106.525635        0.0    0.000000      -54.124756       1.0           106.525635                 0.0             False
7     160.650635     160.650635  210.749268   160.650635   54.125000   160.650635        0.0    0.000000      -53.125000       1.0           160.650635                 0.0             False
8     213.775635     213.775635  210.749268   213.775635   53.125000   213.775635        0.0    0.000000     -100.000000       1.0           213.775635                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:54]  --------------------------------------------------------------------------------
[09/28 12:23:54]  Iteration: 6 (0 solution, 5 counterexamples)
[09/28 12:23:55]  Generator returned sat in 0.162580 secs.
[09/28 12:23:55]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:23:55]  Improved gap from 0.01 to 100
[09/28 12:23:55]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:23:55]  Verifer returned sat in 0.388796 secs.
[09/28 12:23:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     600.403076      51.400635  173.116699   600.403076    0.002500    51.400635        0.0  549.002441           549.0       3.0            51.400635                -1.0                -1
1     600.403076      51.403320  173.116699   600.403076    0.002686    51.403320        0.0  548.999756           449.0       3.0            51.400635                 0.0             False
2     600.403076     184.736572  173.116699   600.403076    0.002686   184.736572        0.0  415.666504           349.0       4.0            51.400635                 0.0             False
3     600.403076     251.403076  173.116699   600.403076    0.010000   251.403076        0.0  349.000000           249.0       5.0            51.400635                 0.0             False
4     600.403076     351.403076  173.116699   600.403076    0.010000   351.403076        0.0  249.000000           149.0       6.0            51.400635                 0.0             False
5     600.403076     551.403076  173.116699   600.403076  248.999756   551.403076        0.0   49.000000            49.0       7.0            51.400635                 1.0              True
6    1000.403076     551.405518  173.116699  1000.403076  449.000000   551.405518        0.0  448.997559           349.0       7.0            51.400635                 1.0              True
7    1000.403076     651.403320  173.116699  1000.403076  299.003662   651.403320        0.0  348.999756           249.0       2.0          1000.403076                 1.0              True
8    1000.403076     751.403076  173.116699  1000.403076    0.010000   751.403076        0.0  249.000000           149.0       3.0          1000.403076                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:56]  --------------------------------------------------------------------------------
[09/28 12:23:56]  Iteration: 7 (0 solution, 6 counterexamples)
[09/28 12:23:56]  Generator returned sat in 0.067468 secs.
[09/28 12:23:56]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:23:56]  Improved number of small numbers from 92 to 106 out of a max of 110
[09/28 12:23:56]  Verifer returned sat in 0.392518 secs.
[09/28 12:23:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     651.400635     -48.596924  173.116699   651.400635    0.009766   -48.596924        0.0  699.997559      699.997314       6.0           -48.596924                -1.0                -1
1     651.400635      51.403076  173.116699   651.400635    0.009766    51.403076        0.0  599.997559      599.997314       6.0           -48.596924                 0.0             False
2     651.400635      67.084570  173.116699   651.400635    0.009766    67.084570        0.0  584.316064      499.997314       7.0           -48.596924                 0.0             False
3     651.400635     251.400820  173.116699   651.400635    0.010000   251.400820        0.0  399.999814      399.997314       8.0           -48.596924                 0.0             False
4     651.400635     251.403320  173.116699   651.400635    0.010000   251.403320        0.0  399.997314      299.997314       9.0           -48.596924                 0.0             False
5     651.400635     351.403320  173.116699   651.400635  275.498125   351.403320        0.0  299.997314      199.997314       9.0           -48.596924                 1.0              True
6    1051.403320     551.403320  173.116699  1051.403320  700.000000   551.403320        0.0  500.000000      500.000000       8.0           -48.596924                 1.0              True
7    1051.403320     651.403076  173.116699  1051.403320    0.010000   651.403076        0.0  400.000244      400.000000       2.0          1051.403320                 0.0             False
8    1051.403320     651.405762  173.116699  1051.403320    0.010000   651.405762        0.0  399.997559      300.000000       3.0          1051.403320                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:57]  --------------------------------------------------------------------------------
[09/28 12:23:57]  Iteration: 8 (0 solution, 7 counterexamples)
[09/28 12:23:57]  Generator returned sat in 0.019472 secs.
[09/28 12:23:57]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:23:58]  Improved number of small numbers from 62 to 96 out of a max of 110
[09/28 12:23:58]  Verifer returned sat in 0.690317 secs.
[09/28 12:23:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     370.609131    -129.390625  173.116455   370.609131    0.009766  -129.390625        0.0  499.999756      499.999756       6.0          -129.390625                -1.0                -1
1     370.609131     -29.390625  173.116455   370.609131    0.009766   -29.390625        0.0  399.999756      399.999756       6.0          -129.390625                 0.0             False
2     370.609131      70.609375  173.116455   370.609131    0.009766    70.609375        0.0  299.999756      299.999756       7.0          -129.390625                 0.0             False
3     370.609131     170.609273  173.116455   370.609131    0.010000   170.609273        0.0  199.999857      199.999756       8.0          -129.390625                 0.0             False
4     370.609131     170.619141  173.116455   370.609131    0.010000   170.619141        0.0  199.989990       99.999756       9.0          -129.390625                 0.0             False
5     370.609131     351.403320  173.116455   370.609131  149.024648   351.403320        0.0   19.205811       -0.000244       9.0          -129.390625                 1.0              True
6     770.619039     370.609375  173.116455   770.619039  419.215719   370.609375        0.0  400.009664      300.009664       1.0          -129.390625                 1.0              True
7     770.619039     570.599609  173.116455   770.619039    0.010000   570.599609        0.0  200.019430      200.009664       2.0           770.619039                 0.0             False
8     770.619039     570.609375  173.116455   770.619039    0.010000   570.609375        0.0  200.009664      100.009664       3.0           770.619039                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:23:58]  --------------------------------------------------------------------------------
[09/28 12:23:58]  Iteration: 9 (0 solution, 8 counterexamples)
[09/28 12:23:58]  Generator returned sat in 0.039572 secs.
[09/28 12:23:58]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:23:59]  Improved gap from 0.0 to 0
[09/28 12:23:59]  Improved number of small numbers from 62 to 95 out of a max of 111
[09/28 12:23:59]  Verifer returned sat in 0.626793 secs.
[09/28 12:23:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     270.601562    -129.390869  173.116455   270.601562  0.002441  -129.390869        0.0  399.992432      399.992432       7.0          -129.390869                -1.0                -1
1     270.601562     -29.390869  173.116455   270.601562  0.002500   -29.390869        0.0  299.992432      299.992432       3.0          -129.390869                 1.0             False
2     270.601562      70.609131  173.116455   270.601562  0.002686    70.609131        0.0  199.992432      199.992432       4.0          -129.390869                 0.0             False
3     270.601562     170.609131  173.116455   270.601562  0.012500   170.609131        0.0   99.992432       99.992432       5.0          -129.390869                 0.0             False
4     270.601562     270.599273  173.116455   270.601562  0.010000   270.599273        0.0    0.002289       -0.007568       6.0           270.601562                 1.0              True
5     270.609273     270.609273  273.116211   270.609273  0.010000   270.609273        0.0    0.000000       -0.000102       1.0           270.601562                 1.0             False
6     270.619273     270.619273  373.096680   270.619273  0.010000   270.619273        0.0    0.000000       -0.009633       1.0           270.601562                 0.0             False
7     270.629273     270.629273  473.086670   270.629273  0.010000   270.629273        0.0    0.000000       -0.009643       1.0           270.601562                 0.0             False
8     270.639273     270.639160  473.086670   270.639273  0.010000   270.639160        0.0    0.000113      -99.999643       1.0           270.601562                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:00]  --------------------------------------------------------------------------------
[09/28 12:24:00]  Iteration: 10 (0 solution, 9 counterexamples)
[09/28 12:24:00]  Generator returned sat in 0.370151 secs.
[09/28 12:24:00]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:03]  Improved gap from 0.0 to 53.125
[09/28 12:24:04]  Improved number of small numbers from 56 to 78 out of a max of 111
[09/28 12:24:04]  Verifer returned sat in 3.484321 secs.
[09/28 12:24:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     430.663330      30.665771  267.088141   430.663330    0.002441    30.665771        0.0  399.997559      399.997331       5.0            30.665771                -1.0                -1
1     430.663330     119.170999  267.088141   430.663330    0.002500   119.170999        0.0  311.492331      299.997331       3.0            30.665771                 0.0             False
2     430.663330     130.666016  267.088141   430.663330  104.498333   130.666016        0.0  299.997314      199.997331       4.0            30.665771                 0.0             False
3     430.663330     326.167666  267.088141   430.663330  104.498333   326.167666        0.0  104.495664       99.997331       5.0            30.665771                 0.0             False
4     430.665999     379.665166  267.088141   430.665999  104.498333   379.665166        0.0   51.000833        0.000000       6.0            30.665771                 0.0             False
5     430.665999     430.665999  313.839111   430.665999    0.010000   430.665999        0.0    0.000000      -53.249029       2.0           430.665999                 1.0              True
6     483.915166     483.915166  360.713974   483.915166   53.249167   483.915166        0.0    0.000000      -53.125000       1.0           430.665999                 0.0             False
7     537.040166     537.040166  407.588867   537.040166   53.125000   537.040166        0.0    0.000000      -53.125107       1.0           537.040166                 0.0             False
8     591.227249     590.165283  407.588867   591.227249   54.187083   590.165283        0.0    1.061966      -98.938023       1.0           537.040166                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:04]  --------------------------------------------------------------------------------
[09/28 12:24:04]  Iteration: 11 (0 solution, 10 counterexamples)
[09/28 12:24:05]  Generator returned sat in 0.479780 secs.
[09/28 12:24:05]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:24:05]  Improved gap from 0.0 to 100
[09/28 12:24:06]  Improved number of small numbers from 49 to 88 out of a max of 111
[09/28 12:24:06]  Verifer returned sat in 0.930633 secs.
[09/28 12:24:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     530.541992    -169.519775  313.839111   530.541992  267.415771  -169.519775        0.0  700.061768      700.061662       5.0          -169.519775                -1.0                -1
1     530.541992     -69.519775  313.839111   530.541992  267.415771   -69.519775        0.0  600.061768      600.061662       5.0          -169.519775                 0.0             False
2     530.541992      30.418457  313.839111   530.541992  267.415771    30.418457        0.0  500.123535      500.061662       6.0          -169.519775                 0.0             False
3     530.541992      30.480469  313.839111   530.541992  267.415853    30.480469        0.0  500.061523      400.061662       7.0          -169.519775                 0.0             False
4     530.541992     130.480469  313.839111   530.541992  267.415853   130.480469        0.0  400.061523      300.061662       8.0          -169.519775                 0.0             False
5     530.604248     330.480330  313.839111   530.604248  400.123779   330.480330        0.0  200.123918      200.123918       9.0          -169.519775                 1.0              True
6     929.665999     430.480330  313.839111   929.665999  599.185669   430.480330        0.0  499.185669      499.185669       8.0          -169.519775                 1.0              True
7    1328.258834     430.480330  313.839111  1328.258834  897.778503   430.480330        0.0  897.778503      797.778503       8.0          -169.519775                 1.0              True
8    1328.258834     530.604004  313.839111  1328.258834  897.778503   530.604004        0.0  797.654830      697.778503       4.0          -169.519775                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:06]  --------------------------------------------------------------------------------
[09/28 12:24:06]  Iteration: 12 (0 solution, 11 counterexamples)
[09/28 12:24:07]  Generator returned sat in 0.313533 secs.
[09/28 12:24:07]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:24:07]  Improved gap from 0.0 to 100
[09/28 12:24:08]  Improved number of small numbers from 49 to 78 out of a max of 111
[09/28 12:24:08]  Verifer returned sat in 1.043782 secs.
[09/28 12:24:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     230.619476    -269.349609  313.839111   230.619476    0.030762  -269.349609        0.0  499.969086      499.968842       9.0          -269.349609                -1.0                -1
1     230.619476    -169.349579  313.839111   230.619476    0.030762  -169.349579        0.0  399.969055      399.968842       6.0          -269.349609                 1.0             False
2     230.619476    -137.574463  313.839111   230.619476    0.030762  -137.574463        0.0  368.193939      299.968842       7.0          -269.349609                 0.0             False
3     230.619476     -36.662282  313.839111   230.619476    0.031006   -36.662282        0.0  267.281759      199.968842       8.0          -269.349609                 0.0             False
4     230.619476     129.727783  313.839111   230.619476  199.030945   129.727783        0.0  100.891693       99.968842       9.0          -269.349609                 1.0              True
5     530.681152     230.619476  313.839111   530.681152  400.953369   230.619476        0.0  300.061676      300.030518       9.0          -269.349609                 1.0              True
6     631.542114     230.650635  313.839111   631.542114  400.922638   230.650635        0.0  400.891479      300.891479       2.0           631.542114                 1.0              True
7     631.542114     430.650421  313.839111   631.542114   99.922852   430.650421        0.0  200.891693      200.891479       3.0           631.542114                 0.0             False
8     631.542114     530.650391  313.839111   631.542114  199.030945   530.650391        0.0  100.891724      100.891479       4.0           631.542114                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:09]  --------------------------------------------------------------------------------
[09/28 12:24:09]  Iteration: 13 (0 solution, 12 counterexamples)
[09/28 12:24:09]  Generator returned sat in 0.031977 secs.
[09/28 12:24:09]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:24:09]  Improved gap from 0.0618896484375 to 100
[09/28 12:24:10]  Improved number of small numbers from 49 to 111 out of a max of 111
[09/28 12:24:10]  Verifer returned sat in 0.495921 secs.
[09/28 12:24:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -189.090332    -669.515137  313.838867  -189.090332  180.362793  -669.515137        0.0  480.424805      480.424805       5.0          -669.515137                -1.0                -1
1    -189.090332    -650.877930  313.838867  -189.090332  180.362793  -650.877930        0.0  461.787598      380.424805       5.0          -669.515137                 0.0             False
2    -189.090332    -550.877930  313.838867  -189.090332  180.362793  -550.877930        0.0  361.787598      280.424805       5.0          -669.515137                 0.0             False
3    -189.090332    -469.515137  313.838867  -189.090332  180.362793  -469.515137        0.0  280.424805      180.424805       6.0          -669.515137                 0.0             False
4    -189.090332    -369.514893  313.838867  -189.090332  180.362793  -369.514893        0.0  180.424561       80.424805       7.0          -669.515137                 0.0             False
5    -189.090332    -189.090332  313.838867  -189.090332  180.363037  -189.090332        0.0    0.000000      -19.575195       8.0          -669.515137                 0.0             False
6     230.546875    -169.515137  313.838867   230.546875  419.637207  -169.515137        0.0  400.062012      300.062012       1.0          -669.515137                 1.0              True
7     230.546875      10.847656  313.838867   230.546875  198.999756    10.847656        0.0  219.699219      200.062012       2.0           230.546875                 0.0             False
8     230.546875      50.122070  313.838867   230.546875  198.937988    50.122070        0.0  180.424805      100.062012       3.0           230.546875                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:10]  --------------------------------------------------------------------------------
[09/28 12:24:10]  Iteration: 14 (0 solution, 13 counterexamples)
[09/28 12:24:10]  Generator returned sat in 0.067195 secs.
[09/28 12:24:10]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:24:11]  Improved gap from 1.0 to 15.625
[09/28 12:24:11]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:24:11]  Verifer returned sat in 0.969899 secs.
[09/28 12:24:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -201.656494    -303.656494  313.838867  -201.656494    0.061768  -303.656494        0.0  102.000000       82.313232       2.0          -303.656494                -1.0                -1
1    -201.594727    -201.594727  313.838867  -201.594727  102.061768  -201.594727        0.0    0.000000      -17.625000       1.0          -303.656494                 0.0             False
2     -99.594727     -99.594727  313.838867   -99.594727  102.000000   -99.594727        0.0    0.000000      -15.625000       1.0           -99.594727                 0.0             False
3     -83.969727     -83.969727  398.213867   -83.969727   15.625000   -83.969727        0.0    0.000000      -15.625000       1.0           -83.969727                 0.0             False
4      32.655273     -52.657959  398.213867    32.655273  116.625000   -52.657959        0.0   85.313232        1.000000       1.0           -83.969727                 0.0             False
5      32.655273      32.655273  481.588867    32.655273   45.936768    32.655273        0.0    0.000000      -15.625000       2.0            32.655273                 0.0             False
6     148.280273      48.280273  481.588867   148.280273  115.625000    48.280273        0.0  100.000000        0.000000       1.0            32.655273                 0.0             False
7     148.280273     148.280273  565.963867   148.280273   99.938232   148.280273        0.0    0.000000      -15.625000       2.0           148.280273                 0.0             False
8     262.905273     179.968506  565.963867   262.905273  114.625000   179.968506        0.0   82.936768       -1.000000       1.0           148.280273                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:12]  --------------------------------------------------------------------------------
[09/28 12:24:12]  Iteration: 15 (0 solution, 14 counterexamples)
[09/28 12:24:13]  Generator returned sat in 1.096585 secs.
[09/28 12:24:13]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:14]  Improved gap from 0.0 to 100
[09/28 12:24:15]  Improved number of small numbers from 51 to 97 out of a max of 111
[09/28 12:24:15]  Verifer returned sat in 1.018481 secs.
[09/28 12:24:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1183.440186   -1283.440186  313.838623 -1183.440186   99.999756 -1283.440186        0.0  100.000000        0.000000       2.0         -1283.440186                -1.0                -1
1   -1183.440186   -1183.440186  313.838623 -1183.440186   99.938477 -1183.440186        0.0    0.000000     -100.000000       2.0         -1183.440186                 0.0             False
2    -285.255371   -1083.440186  313.838623  -285.255371  898.184814 -1083.440186        0.0  798.184814      698.184814       1.0         -1183.440186                 0.0             False
3    -285.255371    -883.440430  313.838623  -285.255371   77.036699  -883.440430        0.0  598.185059      598.184814       2.0          -285.255371                 0.0             False
4    -285.255371    -783.440430  313.838623  -285.255371  116.555049  -783.440430        0.0  498.185059      498.184814       3.0          -285.255371                 0.0             False
5    -285.255371    -683.501953  313.838623  -285.255371  175.832574  -683.501953        0.0  398.246582      398.184814       4.0          -285.255371                 0.0             False
6    -285.255371    -683.440186  313.838623  -285.255371  264.748861  -683.440186        0.0  398.184814      298.184814       5.0          -285.255371                 0.0             False
7    -285.255371    -483.440257  313.838623  -285.255371  398.123291  -483.440257        0.0  198.184886      198.184814       6.0          -285.255371                 0.0             False
8     114.744680    -483.378662  313.838623   114.744680  598.184937  -483.378662        0.0  598.123342      498.184865       7.0          -285.255371                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:15]  --------------------------------------------------------------------------------
[09/28 12:24:15]  Iteration: 16 (0 solution, 15 counterexamples)
[09/28 12:24:16]  Generator returned sat in 0.115326 secs.
[09/28 12:24:16]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:24:16]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:24:16]  Verifer returned sat in 0.146995 secs.
[09/28 12:24:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1185.439941   -1285.439941  315.838379 -1185.439941  100.000000 -1285.439941        0.0  100.000000         0.00000       2.0         -1285.439941                -1.0                -1
1   -1185.439941   -1185.439941  315.838379 -1185.439941   99.938477 -1185.439941        0.0    0.000000      -100.00000       2.0         -1185.439941                 0.0             False
2    -285.255371   -1085.439941  315.838379  -285.255371  900.184570 -1085.439941        0.0  800.184570       700.18457       1.0         -1185.439941                 0.0             False
3    -285.255371    -885.439941  315.838379  -285.255371   79.036651  -885.439941        0.0  600.184570       600.18457       2.0          -285.255371                 0.0             False
4    -285.255371    -785.439941  315.838379  -285.255371  118.554977  -785.439941        0.0  500.184570       500.18457       3.0          -285.255371                 0.0             False
5    -285.255371    -685.501465  315.838379  -285.255371  177.832465  -685.501465        0.0  400.246094       400.18457       4.0          -285.255371                 0.0             False
6    -285.255371    -685.439941  315.838379  -285.255371  266.748698  -685.439941        0.0  400.184570       300.18457       5.0          -285.255371                 0.0             False
7    -285.255371    -485.439941  315.838379  -285.255371  400.123047  -485.439941        0.0  200.184570       200.18457       6.0          -285.255371                 0.0             False
8     114.744629    -485.378418  315.838379   114.744629  600.184570  -485.378418        0.0  600.123047       500.18457       7.0          -285.255371                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:16]  --------------------------------------------------------------------------------
[09/28 12:24:16]  Iteration: 17 (0 solution, 16 counterexamples)
[09/28 12:24:19]  Generator returned sat in 1.889580 secs.
[09/28 12:24:19]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:21]  Improved gap from 0.0 to 50.0
[09/28 12:24:21]  Improved number of small numbers from 106 to 106 out of a max of 111
[09/28 12:24:21]  Verifer returned sat in 2.292238 secs.
[09/28 12:24:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -886.501465   -1185.439941  315.838379  -886.501465  101.123047 -1185.439941        0.0  298.938477      198.938477       1.0         -1185.439941                -1.0                -1
1    -886.501465    -985.439941  315.838379  -886.501465  101.123047  -985.439941        0.0   98.938477       98.938477       2.0         -1185.439941                 0.0             False
2    -884.378418    -886.439941  315.838379  -884.378418  101.061523  -886.439941        0.0    2.061523        1.061523       1.0          -884.378418                 1.0              True
3    -785.378418    -785.439941  315.838379  -785.378418  101.061523  -785.439941        0.0    0.061523        0.061523       1.0          -884.378418                 0.0             False
4    -684.439941    -752.398926  315.838379  -684.439941  101.000000  -752.398926        0.0   67.958984        1.000000       1.0          -684.439941                 0.0             False
5    -684.378418    -684.378418  363.246094  -684.378418   68.020508  -684.378418        0.0    0.000000      -51.530762       1.0          -684.378418                 0.0             False
6    -632.847656    -632.847656  402.470459  -632.847656   51.530762  -632.847656        0.0    0.000000      -60.775635       1.0          -632.847656                 0.0             False
7    -572.072021    -572.072021  451.899902  -572.072021   60.775635  -572.072021        0.0    0.000000      -50.570557       1.0          -632.847656                 0.0             False
8    -514.918823    -521.501465  451.899902  -514.918823   57.153198  -521.501465        0.0    6.582642      -93.417358       1.0          -514.918823                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:21]  --------------------------------------------------------------------------------
[09/28 12:24:21]  Iteration: 18 (0 solution, 17 counterexamples)
[09/28 12:24:22]  Generator returned sat in 0.210751 secs.
[09/28 12:24:22]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:22]  Verifer returned unsat in 0.343073 secs.
[09/28 12:24:22]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:22]  --------------------------------------------------------------------------------
[09/28 12:24:22]  Iteration: 19 (1 solution, 17 counterexamples)
[09/28 12:24:23]  Generator returned sat in 0.041141 secs.
[09/28 12:24:23]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:24]  Improved gap from 0.0 to 0
[09/28 12:24:24]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:24:24]  Verifer returned sat in 1.263402 secs.
[09/28 12:24:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -772.378418    -872.439941  174.245850  -772.378418    0.030762  -872.439941        0.0  100.061523      100.061523       1.0          -872.439941                -1.0                -1
1    -772.378418    -772.439941  174.245850  -772.378418    0.030762  -772.439941        0.0    0.061523        0.061523       2.0          -872.439941                 0.0             False
2    -772.378418    -772.439941  174.245850  -772.378418    0.030762  -772.439941        0.0    0.061523      -99.938477       2.0          -872.439941                 1.0              True
3    -667.439941    -667.439941  269.245850  -667.439941  105.000000  -667.439941        0.0    0.000000        0.000000       1.0          -872.439941                 1.0             False
4    -561.439941    -667.439941  269.245850  -561.439941  106.000000  -667.439941        0.0  106.000000        6.000000       1.0          -872.439941                 0.0             False
5    -561.439941    -561.439941  363.245850  -561.439941  106.000000  -561.439941        0.0    0.000000        0.000000       2.0          -872.439941                 0.0             False
6    -508.439941    -508.439941  405.276611  -508.439941   53.000000  -508.439941        0.0    0.000000       -4.969238       1.0          -508.439941                 1.0              True
7    -348.439941    -456.439941  405.276611  -348.439941  160.000000  -456.439941        0.0  108.000000       55.030762       1.0          -508.439941                 0.0             False
8    -348.439941    -403.470703  405.276611  -348.439941  106.000000  -403.470703        0.0   55.030762      -44.969238       2.0          -348.439941                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:25]  --------------------------------------------------------------------------------
[09/28 12:24:25]  Iteration: 20 (1 solution, 18 counterexamples)
[09/28 12:24:26]  Generator returned sat in 0.272623 secs.
[09/28 12:24:26]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:29]  Improved gap from 0.0 to 20.3125
[09/28 12:24:30]  Improved number of small numbers from 80 to 99 out of a max of 111
[09/28 12:24:30]  Verifer returned sat in 4.095484 secs.
[09/28 12:24:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -625.297852    -725.300537  190.560791  -625.297852    0.002441  -725.300537        0.0  100.002686      100.002627       1.0          -725.300537                -1.0                -1
1    -625.297852    -625.300537  190.560791  -625.297852    0.002686  -625.300537        0.0    0.002686        0.002627       2.0          -725.300537                 0.0             False
2    -625.297852    -625.297852  269.245850  -625.297852    0.001250  -625.297852        0.0    0.000000      -21.312314       3.0          -625.297852                 1.0              True
3    -503.985352    -505.988037  269.245850  -503.985352  121.312500  -505.988037        0.0    2.002686        0.000186       1.0          -625.297852                 1.0             False
4    -384.675537    -503.985537  269.245850  -384.675537  121.312500  -503.985537        0.0  119.310000       19.310000       2.0          -625.297852                 0.0             False
5    -384.675537    -384.675537  329.623350  -384.675537    0.010000  -384.675537        0.0    0.000000      -20.312500       2.0          -384.675537                 1.0              True
6    -323.014287    -364.363037  329.623350  -323.014287   61.661250  -364.363037        0.0   41.348750      -58.651250       1.0          -384.675537                 1.0             False
7    -262.721162    -262.721162  407.668945  -262.721162  101.641875  -262.721162        0.0    0.000000      -20.312529       1.0          -384.675537                 0.0             False
8    -149.923037    -242.408447  407.668945  -149.923037  112.798125  -242.408447        0.0   92.485410       -7.514404       1.0          -384.675537                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:30]  --------------------------------------------------------------------------------
[09/28 12:24:30]  Iteration: 21 (1 solution, 19 counterexamples)
[09/28 12:24:31]  Generator returned sat in 0.214644 secs.
[09/28 12:24:31]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:31]  Improved gap from 0.0 to 100
[09/28 12:24:31]  Improved number of small numbers from 64 to 111 out of a max of 111
[09/28 12:24:31]  Verifer returned sat in 0.339445 secs.
[09/28 12:24:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -842.347412    -942.408691  407.668701  -842.347412   99.999756  -942.408691        0.0  100.061279      100.061035       1.0          -942.408691                -1.0                -1
1    -842.347412    -842.408691  407.668701  -842.347412  100.000000  -842.408691        0.0    0.061279        0.061035       2.0          -942.408691                 0.0             False
2    -245.224365    -842.408447  407.668701  -245.224365  597.184326  -842.408447        0.0  597.184082      497.184082       3.0          -942.408691                 1.0              True
3    -245.224365    -642.470215  407.668701  -245.224365  395.122559  -642.470215        0.0  397.245850      397.184082       2.0          -245.224365                 1.0              True
4    -245.224365    -642.408447  407.668701  -245.224365  396.122559  -642.408447        0.0  397.184082      297.184082       3.0          -245.224365                 1.0             False
5    -245.224365    -542.408447  407.668701  -245.224365  397.122559  -542.408447        0.0  297.184082      197.184082       4.0          -245.224365                 1.0             False
6    -144.285889    -342.408447  407.668701  -144.285889  398.122559  -342.408447        0.0  198.122559      198.122559       5.0          -245.224365                 1.0             False
7      56.714111    -242.408447  407.668701    56.714111  399.122559  -242.408447        0.0  299.122559      299.122559       2.0          -245.224365                 1.0             False
8     157.714111    -242.347168  407.668701   157.714111  400.122559  -242.347168        0.0  400.061279      300.122559       3.0          -245.224365                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:32]  --------------------------------------------------------------------------------
[09/28 12:24:32]  Iteration: 22 (1 solution, 20 counterexamples)
[09/28 12:24:33]  Generator returned sat in 1.062595 secs.
[09/28 12:24:33]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:24:34]  Improved number of small numbers from 96 to 102 out of a max of 110
[09/28 12:24:34]  Verifer returned sat in 0.317573 secs.
[09/28 12:24:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -442.408447    -942.408447  407.668457  -442.408447    0.001221  -942.408447        0.0  500.000000        500.0000       2.0          -942.408447                -1.0                -1
1    -442.408447    -842.408447  407.668457  -442.408447    0.001250  -842.408447        0.0  400.000000        400.0000       2.0          -942.408447                 0.0             False
2    -442.408447    -837.414551  407.668457  -442.408447    0.001250  -837.414551        0.0  395.006104        300.0000       3.0          -942.408447                 0.0             False
3    -442.408447    -742.408447  407.668457  -442.408447    0.001250  -742.408447        0.0  300.000000        200.0000       4.0          -942.408447                 0.0             False
4    -442.408447    -640.414551  407.668457  -442.408447    0.010000  -640.414551        0.0  198.006104        100.0000       5.0          -942.408447                 0.0             False
5    -442.408447    -442.408447  407.668457  -442.408447  198.005000  -442.408447        0.0    0.000000          0.0000       6.0          -942.408447                 1.0              True
6     -42.405947    -442.406982  407.668457   -42.405947  400.002500  -442.406982        0.0  400.001035        300.0025       1.0          -942.408447                 1.0              True
7     -42.405947    -342.408447  407.668457   -42.405947    0.010000  -342.408447        0.0  300.002500        200.0025       2.0           -42.405947                 0.0             False
8     -42.405947    -242.408447  407.668457   -42.405947    0.010000  -242.408447        0.0  200.002500        100.0025       3.0           -42.405947                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:34]  --------------------------------------------------------------------------------
[09/28 12:24:34]  Iteration: 23 (1 solution, 21 counterexamples)
[09/28 12:24:35]  Generator returned sat in 0.073898 secs.
[09/28 12:24:35]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:24:35]  Improved gap from 0.0 to 100
[09/28 12:24:36]  Improved number of small numbers from 69 to 89 out of a max of 111
[09/28 12:24:36]  Verifer returned sat in 0.816239 secs.
[09/28 12:24:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -242.438965    -942.408447  407.668213  -242.438965    0.030518  -942.408447        0.0  699.969482      699.969482       3.0          -942.408447                -1.0                -1
1    -242.438965    -842.408447  407.668213  -242.438965    0.030518  -842.408447        0.0  599.969482      599.969482       4.0          -942.408447                 0.0             False
2    -242.438965    -742.408447  407.668213  -242.438965    0.030518  -742.408447        0.0  499.969482      499.969482       4.0          -942.408447                 0.0             False
3    -242.438965    -642.408447  407.668213  -242.438965    0.030640  -642.408447        0.0  399.969482      399.969482       5.0          -942.408447                 0.0             False
4    -242.438965    -642.377808  407.668213  -242.438965  200.015320  -642.377808        0.0  399.938843      299.969482       6.0          -942.408447                 1.0              True
5    -242.438965    -542.389297  407.668213  -242.438965  200.038300  -542.389297        0.0  299.950333      199.969482       6.0          -942.408447                 1.0              True
6    -242.438965    -342.408447  407.668213  -242.438965  200.038300  -342.408447        0.0   99.969482       99.969482       7.0          -942.408447                 1.0              True
7      57.580063    -242.439087  407.668213    57.580063  399.988510  -242.439087        0.0  300.019150      299.988510       8.0          -942.408447                 1.0              True
8     257.505379    -242.408447  407.668213   257.505379  499.944466  -242.408447        0.0  499.913826      399.913826       2.0          -942.408447                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:36]  --------------------------------------------------------------------------------
[09/28 12:24:36]  Iteration: 24 (1 solution, 22 counterexamples)
[09/28 12:24:37]  Generator returned sat in 0.481917 secs.
[09/28 12:24:37]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:38]  Improved gap from 1.0 to 0
[09/28 12:24:38]  Improved number of small numbers from 72 to 111 out of a max of 111
[09/28 12:24:38]  Verifer returned sat in 0.511876 secs.
[09/28 12:24:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -246.531006    -646.469727  407.668213  -246.531006    0.061035  -646.469727        0.0  399.938721      399.938721       7.0          -646.469727                -1.0                -1
1    -246.531006    -546.469727  407.668213  -246.531006  200.061035  -546.469727        0.0  299.938721      299.938721       3.0          -646.469727                 1.0             False
2    -246.531006    -546.469482  407.668213  -246.531006  200.061035  -546.469482        0.0  299.938477      199.938721       4.0          -646.469727                 0.0             False
3    -246.531006    -346.469727  407.668213  -246.531006  200.061035  -346.469727        0.0   99.938721       99.938721       5.0          -646.469727                 0.0             False
4    -147.408691    -246.469727  407.668213  -147.408691  199.061035  -246.469727        0.0   99.061035       99.061035       1.0          -147.408691                 1.0              True
5    -147.408691    -147.469727  407.668213  -147.408691    1.000000  -147.469727        0.0    0.061035       -0.938965       2.0          -147.408691                 0.0             False
6    -146.469727    -146.469727  506.668213  -146.469727    1.000000  -146.469727        0.0    0.000000       -1.000000       1.0          -147.408691                 0.0             False
7    -145.469727    -145.469727  606.667969  -145.469727    1.000000  -145.469727        0.0    0.000000       -0.000244       1.0          -147.408691                 0.0             False
8    -144.469727    -144.469727  606.667969  -144.469727    1.000000  -144.469727        0.0    0.000000      -99.000244       1.0          -147.408691                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:38]  --------------------------------------------------------------------------------
[09/28 12:24:38]  Iteration: 25 (1 solution, 23 counterexamples)
[09/28 12:24:39]  Generator returned sat in 0.253604 secs.
[09/28 12:24:39]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:40]  Improved gap from 0.0 to 0
[09/28 12:24:40]  Improved number of small numbers from 74 to 89 out of a max of 111
[09/28 12:24:40]  Verifer returned sat in 0.786328 secs.
[09/28 12:24:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -246.531006    -646.523682  308.667969  -246.531006  0.002686  -646.523682        0.0  399.992676      399.992676       5.0          -646.523682                -1.0                -1
1    -246.531006    -546.523682  308.667969  -246.531006  0.999756  -546.523682        0.0  299.992676      299.992676       5.0          -646.523682                 1.0             False
2    -246.531006    -446.523682  308.667969  -246.531006  0.999756  -446.523682        0.0  199.992676      199.992676       6.0          -646.523682                 1.0              True
3    -246.531006    -446.523682  308.667969  -246.531006  1.000000  -446.523682        0.0  199.992676       99.992676       6.0          -646.523682                 1.0              True
4    -246.531006    -246.533506  308.667969  -246.531006  1.000000  -246.533506        0.0    0.002500       -0.007324       6.0          -646.523682                 1.0             False
5    -246.523506    -246.523506  408.667725  -246.523506  0.010000  -246.523506        0.0    0.000000       -0.000068       1.0          -246.523506                 1.0              True
6    -245.523506    -245.523506  507.667725  -245.523506  1.000000  -245.523506        0.0    0.000000       -0.000068       1.0          -246.523506                 0.0             False
7    -244.523506    -244.523506  606.667725  -244.523506  1.000000  -244.523506        0.0    0.000000       -0.000068       1.0          -246.523506                 0.0             False
8    -243.523506    -243.523506  705.660400  -243.523506  1.000000  -243.523506        0.0    0.000000       -0.007393       1.0          -246.523506                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:41]  --------------------------------------------------------------------------------
[09/28 12:24:41]  Iteration: 26 (1 solution, 24 counterexamples)
[09/28 12:24:43]  Generator returned sat in 1.169863 secs.
[09/28 12:24:43]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:43]  Improved gap from 0.0 to 0
[09/28 12:24:44]  Improved number of small numbers from 67 to 84 out of a max of 111
[09/28 12:24:44]  Verifer returned sat in 1.156344 secs.
[09/28 12:24:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0      61.501465    -201.486084  308.667969    61.501465    0.002500  -201.486084        0.0  262.987549      262.987471       5.0          -201.486084                -1.0                -1
1      61.501465    -101.486006  308.667969    61.501465    0.002686  -101.486006        0.0  162.987471      162.987471       5.0          -201.486084                 1.0             False
2      61.501465    -101.486006  308.667969    61.501465    0.001465  -101.486006        0.0  162.987471       62.987471       5.0            61.501465                 1.0              True
3      61.502744      61.502744  345.679219    61.502744  162.988750    61.502744        0.0    0.000000        0.000000       1.0            61.501465                 1.0             False
4     225.491494      61.502744  345.679219   225.491494  163.988750    61.502744        0.0  163.988750       63.988750       1.0            61.501465                 0.0             False
5     225.491494     225.491494  381.690430   225.491494  163.988750   225.491494        0.0    0.000000       -0.000039       2.0            61.501465                 0.0             False
6     225.501494     225.501494  481.680420   225.501494    0.010000   225.501494        0.0    0.000000       -0.000049       1.0           225.501494                 1.0              True
7     390.500244     307.495244  481.680420   390.500244  164.998750   307.495244        0.0   83.005000       64.998701       1.0           225.501494                 0.0             False
8     390.500244     325.501709  481.680420   390.500244   83.003750   325.501709        0.0   64.998535      -35.001299       2.0           390.500244                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:44]  --------------------------------------------------------------------------------
[09/28 12:24:44]  Iteration: 27 (1 solution, 25 counterexamples)
[09/28 12:24:45]  Generator returned sat in 0.299427 secs.
[09/28 12:24:45]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:46]  Improved gap from 0.0 to 100
[09/28 12:24:46]  Improved number of small numbers from 55 to 111 out of a max of 111
[09/28 12:24:46]  Verifer returned sat in 1.019774 secs.
[09/28 12:24:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1624.005127   -2301.187744  481.68042 -1624.005127     0.030273 -2301.187744        0.0   677.182617      677.182617       7.0         -2301.187744                -1.0                -1
1   -1624.005127   -2201.187744  481.68042 -1624.005127     0.030273 -2201.187744        0.0   577.182617      577.182617       7.0         -2301.187744                 0.0             False
2   -1624.005127   -2101.218018  481.68042 -1624.005127     0.030273 -2101.218018        0.0   477.212891      477.182617       8.0         -2301.187744                 0.0             False
3   -1624.005127   -2101.187500  481.68042 -1624.005127     0.030273 -2101.187500        0.0   477.182373      377.182617       9.0         -2301.187744                 0.0             False
4   -1624.005127   -1964.187500  481.68042 -1624.005127   101.060791 -1964.187500        0.0   340.182373      277.182617       9.0         -2301.187744                 1.0              True
5   -1624.005127   -1901.187744  481.68042 -1624.005127   340.152100 -1901.187744        0.0   277.182617      177.182617       9.0         -2301.187744                 1.0              True
6   -1019.883789   -1801.187500  481.68042 -1019.883789   881.303955 -1801.187500        0.0   781.303711      681.303955       9.0         -2301.187744                 1.0              True
7     125.420410   -1624.005371  481.68042   125.420410  1926.607910 -1624.005371        0.0  1749.425781     1726.608154       9.0         -2301.187744                 1.0              True
8    2507.392822   -1501.187744  481.68042  2507.392822  4131.398193 -1501.187744        0.0  4008.580566     4008.580566       3.0         -2301.187744                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:47]  --------------------------------------------------------------------------------
[09/28 12:24:47]  Iteration: 28 (1 solution, 26 counterexamples)
[09/28 12:24:48]  Generator returned sat in 0.224001 secs.
[09/28 12:24:48]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:49]  Improved gap from 0.0 to 20.3125
[09/28 12:24:49]  Improved number of small numbers from 86 to 111 out of a max of 111
[09/28 12:24:49]  Verifer returned sat in 1.538717 secs.
[09/28 12:24:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1723.545166   -2128.486563  481.680420 -1723.545166    0.060791 -2128.486563        0.0  404.941396      404.941162       9.0         -2128.486563                -1.0                -1
1   -1723.545166   -2037.490234  481.680420 -1723.545166  205.001709 -2037.490234        0.0  313.945068      304.941162       7.0         -2128.486563                 1.0             False
2   -1723.545166   -1928.486572  481.680420 -1723.545166  205.001709 -1928.486572        0.0  204.941406      204.941162       8.0         -2128.486563                 0.0             False
3   -1723.484863   -1833.488281  481.680420 -1723.484863  205.001709 -1833.488281        0.0  110.003418      105.001465       9.0         -2128.486563                 0.0             False
4   -1628.486328   -1780.986572  481.680420 -1628.486328  205.001953 -1780.986572        0.0  152.500244      100.000000       9.0         -2128.486563                 1.0              True
5   -1628.486328   -1703.797119  481.680420 -1628.486328  148.500000 -1703.797119        0.0   75.310791        0.000000       2.0         -1628.486328                 1.0              True
6   -1628.486328   -1628.486328  561.367676 -1628.486328   75.250000 -1628.486328        0.0    0.000000      -20.312744       3.0         -1628.486328                 0.0             False
7   -1589.861328   -1589.861328  622.742920 -1589.861328   38.625000 -1589.861328        0.0    0.000000      -20.312500       1.0         -1589.861328                 0.0             False
8   -1569.548828   -1569.548828  622.742920 -1569.548828   20.312500 -1569.548828        0.0    0.000000     -100.000000       1.0         -1569.548828                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:50]  --------------------------------------------------------------------------------
[09/28 12:24:50]  Iteration: 29 (1 solution, 27 counterexamples)
[09/28 12:24:51]  Generator returned sat in 0.111717 secs.
[09/28 12:24:51]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:53]  Improved gap from 20.3125 to 21.875
[09/28 12:24:53]  Improved number of small numbers from 55 to 111 out of a max of 111
[09/28 12:24:53]  Verifer returned sat in 2.523838 secs.
[09/28 12:24:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -985.214844   -1485.154053  442.242676  -985.214844    0.060791 -1485.154053        0.0  499.939209      499.939209       7.0         -1485.154053                -1.0                -1
1    -985.214844   -1385.661377  442.242676  -985.214844    0.060791 -1385.661377        0.0  400.446533      399.939209       7.0         -1485.154053                 0.0             False
2    -985.214844   -1307.275635  442.242676  -985.214844  200.192871 -1307.275635        0.0  322.060791      299.939209       8.0         -1485.154053                 0.0             False
3    -985.214844   -1185.468506  442.242676  -985.214844  200.192871 -1185.468506        0.0  200.253662      199.939209       9.0         -1485.154053                 0.0             False
4    -985.214844   -1146.275635  442.242676  -985.214844  200.192871 -1146.275635        0.0  161.060791       99.939209       9.0         -1485.154053                 1.0              True
5    -985.214844   -1066.654053  442.242676  -985.214844  161.000000 -1066.654053        0.0   81.439209       -0.060791       6.0          -985.214844                 1.0              True
6    -985.154053    -985.154053  500.492920  -985.154053   81.500000  -985.154053        0.0    0.000000      -41.749756       1.0          -985.154053                 0.0             False
7    -943.404053    -943.404053  578.617676  -943.404053   41.750000  -943.404053        0.0    0.000000      -21.875000       1.0          -943.404053                 0.0             False
8    -921.529053    -921.529053  578.617920  -921.529053   21.875000  -921.529053        0.0    0.000000      -99.999756       1.0          -921.529053                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:54]  --------------------------------------------------------------------------------
[09/28 12:24:54]  Iteration: 30 (1 solution, 28 counterexamples)
[09/28 12:24:55]  Generator returned sat in 0.395286 secs.
[09/28 12:24:55]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:56]  Improved gap from 0.0 to 0
[09/28 12:24:56]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:24:56]  Verifer returned sat in 1.056341 secs.
[09/28 12:24:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -455.230225    -855.230469  529.799561  -455.230225    0.060303  -855.230469        0.0  400.000244      400.000244       7.0          -855.230469                -1.0                -1
1    -455.230225    -755.230469  529.799561  -455.230225    0.060303  -755.230469        0.0  300.000244      300.000244       8.0          -855.230469                 0.0             False
2    -455.230225    -755.230225  529.799561  -455.230225    0.060547  -755.230225        0.0  300.000000      200.000244       9.0          -855.230469                 0.0             False
3    -455.230225    -555.230469  529.799561  -455.230225  200.999756  -555.230469        0.0  100.000244      100.000244       9.0          -855.230469                 1.0              True
4    -354.230469    -524.760498  529.799561  -354.230469  201.000000  -524.760498        0.0  170.530029      101.000000       9.0          -855.230469                 1.0              True
5    -293.290771    -455.230469  529.799561  -293.290771  231.469727  -455.230469        0.0  161.939697       61.939697       9.0          -855.230469                 1.0              True
6    -293.290771    -293.290771  567.859863  -293.290771  101.000000  -293.290771        0.0    0.000000        0.000000       2.0          -293.290771                 1.0              True
7    -292.290771    -292.290771  665.860107  -292.290771    1.000000  -292.290771        0.0    0.000000       -0.999756       1.0          -292.290771                 0.0             False
8    -291.290771    -291.291016  665.860107  -291.290771    1.000000  -291.291016        0.0    0.000244      -99.999756       1.0          -292.290771                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:57]  --------------------------------------------------------------------------------
[09/28 12:24:57]  Iteration: 31 (1 solution, 29 counterexamples)
[09/28 12:24:58]  Generator returned sat in 0.153321 secs.
[09/28 12:24:58]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:24:59]  Improved gap from 1.0 to 0
[09/28 12:24:59]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:24:59]  Verifer returned sat in 1.157027 secs.
[09/28 12:24:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -309.823242    -808.792969   882.452881  -309.823242    0.030273  -808.792969        0.0  498.969727      398.969727       7.0          -808.792969                -1.0                -1
1    -309.823242    -608.792969   882.452881  -309.823242    0.030273  -608.792969        0.0  298.969727      298.969727       8.0          -808.792969                 0.0             False
2    -309.823242    -608.792969   882.452881  -309.823242    0.030273  -608.792969        0.0  298.969727      198.969727       8.0          -808.792969                 0.0             False
3    -309.823242    -458.808105   882.452881  -309.823242    0.030273  -458.808105        0.0  148.984863       98.969727       9.0          -808.792969                 0.0             False
4    -308.823242    -309.792969   882.452881  -308.823242  149.984863  -309.792969        0.0    0.969727       -0.030273       1.0          -808.792969                 1.0              True
5    -308.792969    -308.792969   981.452881  -308.792969    1.000000  -308.792969        0.0    0.000000       -1.000000       1.0          -308.792969                 0.0             False
6    -307.792969    -307.792969  1080.452881  -307.792969    1.000000  -307.792969        0.0    0.000000       -1.000000       1.0          -308.792969                 0.0             False
7    -306.792969    -306.792969  1179.452881  -306.792969    1.000000  -306.792969        0.0    0.000000       -1.000000       1.0          -308.792969                 0.0             False
8    -305.792969    -305.792969  1179.452881  -305.792969    1.000000  -305.792969        0.0    0.000000     -100.000000       1.0          -308.792969                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:24:59]  --------------------------------------------------------------------------------
[09/28 12:24:59]  Iteration: 32 (1 solution, 30 counterexamples)
[09/28 12:25:01]  Generator returned sat in 0.300699 secs.
[09/28 12:25:01]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:06]  Improved gap from 2.12109375 to 17.1875
[09/28 12:25:06]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:25:06]  Verifer returned sat in 5.384745 secs.
[09/28 12:25:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1227.691650   -1432.967285  1606.626953 -1227.691650    0.060303 -1432.967285        0.0  205.275635      205.275391       8.0         -1432.967285                -1.0                -1
1   -1227.691650   -1344.121338  1606.626953 -1227.691650    0.060303 -1344.121338        0.0  116.429688      105.275391       7.0         -1432.967285                 0.0             False
2   -1227.691650   -1232.967041  1606.626953 -1227.691650    0.060547 -1232.967041        0.0    5.275391        5.275391       8.0         -1432.967285                 0.0             False
3   -1227.691650   -1227.691650  1683.921875 -1227.691650    5.214600 -1227.691650        0.0    0.000000      -17.429688       9.0         -1432.967285                 0.0             False
4   -1110.261963   -1191.013916  1683.921875 -1110.261963  117.429688 -1191.013916        0.0   80.751953        0.000000       1.0         -1432.967285                 1.0              True
5   -1110.261963   -1110.261963  1766.734375 -1110.261963   80.691406 -1110.261963        0.0    0.000000      -17.187500       2.0         -1110.261963                 0.0             False
6   -1010.201416   -1093.074463  1766.734375 -1010.201416  100.060547 -1093.074463        0.0   82.873047      -17.126953       1.0         -1110.261963                 0.0             False
7    -993.074463    -993.074463  1849.546875  -993.074463  100.000000  -993.074463        0.0    0.000000      -17.187500       1.0          -993.074463                 0.0             False
8    -883.480713    -964.232666  1849.546875  -883.480713  109.593750  -964.232666        0.0   80.751953       -7.593750       1.0          -993.074463                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:07]  --------------------------------------------------------------------------------
[09/28 12:25:07]  Iteration: 33 (1 solution, 31 counterexamples)
[09/28 12:25:09]  Generator returned sat in 2.050613 secs.
[09/28 12:25:09]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:25:12]  Improved gap from 0.0 to 51.5625
[09/28 12:25:12]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:25:12]  Verifer returned sat in 2.269789 secs.
[09/28 12:25:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -158.952393    -495.019775  1491.750488  -158.952393    0.002441  -495.019775        0.0  336.067383      336.067383       9.0          -495.019775                -1.0                -1
1    -158.952393    -404.394775  1491.750488  -158.952393    0.002441  -404.394775        0.0  245.442383      236.067383       2.0          -495.019775                 1.0             False
2    -158.952393    -395.019531  1491.750488  -158.952393  103.125000  -395.019531        0.0  236.067139      136.067383       3.0          -495.019775                 0.0             False
3    -158.952393    -198.144775  1491.750488  -158.952393  103.125000  -198.144775        0.0   39.192383       36.067383       4.0          -495.019775                 0.0             False
4     -95.019775    -158.952393  1491.750488   -95.019775  103.125000  -158.952393        0.0   63.932617        0.000000       5.0          -495.019775                 0.0             False
5     -95.019775     -95.019775  1540.187988   -95.019775    0.010000   -95.019775        0.0    0.000000      -51.562500       2.0           -95.019775                 1.0              True
6     -43.457275     -43.457275  1588.625488   -43.457275   51.562500   -43.457275        0.0    0.000000      -51.562500       1.0           -95.019775                 0.0             False
7      14.290283      14.290283  1630.877930    14.290283   57.747559    14.290283        0.0    0.000000      -51.562500       1.0           -95.019775                 0.0             False
8      68.945312      65.853027  1630.877930    68.945312   54.655029    65.853027        0.0    3.092285      -96.907471       1.0            68.945312                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:12]  --------------------------------------------------------------------------------
[09/28 12:25:12]  Iteration: 34 (1 solution, 32 counterexamples)
[09/28 12:25:13]  Generator returned sat in 0.343194 secs.
[09/28 12:25:14]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:25:16]  Improved gap from 0.0 to 51.5625
[09/28 12:25:17]  Improved number of small numbers from 53 to 78 out of a max of 111
[09/28 12:25:17]  Verifer returned sat in 3.184032 secs.
[09/28 12:25:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -358.979980    -510.738525  1507.469238  -358.979980   0.030029  -510.738525        0.0  151.758545      151.758545       2.0          -510.738525                -1.0                -1
1    -358.979980    -410.738586  1507.469238  -358.979980   0.030029  -410.738586        0.0   51.758606       51.758545       2.0          -510.738525                 0.0             False
2    -358.979980    -358.995178  1507.469238  -358.979980   0.015137  -358.995178        0.0    0.015198      -48.241455       3.0          -358.979980                 0.0             False
3    -307.492981    -307.492981  1552.661133  -307.492981  51.502197  -307.492981        0.0    0.000000      -51.562561       1.0          -358.979980                 1.0             False
4    -255.870178    -255.870178  1601.038391  -255.870178  51.622803  -255.870178        0.0    0.000000      -51.562500       1.0          -358.979980                 0.0             False
5    -204.307678    -204.307678  1649.475830  -204.307678  51.562500  -204.307678        0.0    0.000000      -51.562561       1.0          -204.307678                 0.0             False
6    -152.715027    -152.715027  1697.883057  -152.715027  51.592651  -152.715027        0.0    0.000000      -51.562683       1.0          -204.307678                 0.0             False
7    -101.137451    -101.137451  1746.305420  -101.137451  51.577576  -101.137451        0.0    0.000000      -51.562744       1.0          -101.137451                 0.0             False
8     -49.552338     -49.552338  1746.305420   -49.552338  51.585114   -49.552338        0.0    0.000000      -99.977631       1.0          -101.137451                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:17]  --------------------------------------------------------------------------------
[09/28 12:25:17]  Iteration: 35 (1 solution, 33 counterexamples)
[09/28 12:25:19]  Generator returned sat in 0.652356 secs.
[09/28 12:25:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:25:20]  Improved gap from 0.0 to 15.625
[09/28 12:25:20]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:25:20]  Verifer returned sat in 1.266845 secs.
[09/28 12:25:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -368.349854    -468.470703  1365.201416  -368.349854  100.060059  -468.470703        0.0  100.120850         0.12085       2.0          -468.470703                -1.0                -1
1    -368.349854    -368.410156  1365.201416  -368.349854  100.060059  -368.410156        0.0    0.060303       -99.87915       2.0          -468.470703                 0.0             False
2    -268.410156    -268.410156  1449.515869  -268.410156  100.000000  -268.410156        0.0    0.000000       -15.62500       1.0          -268.410156                 0.0             False
3    -252.785156    -252.785156  1533.890869  -252.785156   15.625000  -252.785156        0.0    0.000000       -15.62500       1.0          -252.785156                 0.0             False
4    -137.160156    -221.474854  1533.890869  -137.160156  115.625000  -221.474854        0.0   84.314697         0.00000       1.0          -252.785156                 0.0             False
5    -137.160156    -137.160156  1618.265869  -137.160156   46.935303  -137.160156        0.0    0.000000       -15.62500       2.0          -137.160156                 0.0             False
6     -21.535156    -121.535156  1618.265869   -21.535156  115.625000  -121.535156        0.0  100.000000         0.00000       1.0          -137.160156                 0.0             False
7     -21.535156     -21.535156  1702.640869   -21.535156   99.939697   -21.535156        0.0    0.000000       -15.62500       2.0           -21.535156                 0.0             False
8      94.089844       9.775146  1702.640869    94.089844  115.625000     9.775146        0.0   84.314697         0.00000       1.0           -21.535156                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:21]  --------------------------------------------------------------------------------
[09/28 12:25:21]  Iteration: 36 (1 solution, 34 counterexamples)
[09/28 12:25:22]  Generator returned sat in 0.780124 secs.
[09/28 12:25:22]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:25:23]  Improved gap from 0.01 to 10.9375
[09/28 12:25:23]  Improved number of small numbers from 90 to 111 out of a max of 111
[09/28 12:25:23]  Verifer returned sat in 0.413006 secs.
[09/28 12:25:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -549.220703    -749.190186  1645.921143  -549.220703    0.060059  -749.190186        0.0  199.969482       99.969727       2.0          -749.190186                -1.0                -1
1    -549.220703    -549.250732  1645.921143  -549.220703    0.030273  -549.250732        0.0    0.030029       -0.030273       2.0          -549.220703                 0.0             False
2    -137.160156    -549.190186  1645.921143  -137.160156  412.090576  -549.190186        0.0  412.030029      312.030273       1.0          -549.220703                 0.0             False
3    -137.160156    -349.190430  1645.921143  -137.160156  412.000000  -349.190430        0.0  212.030273      212.030273       2.0          -137.160156                 0.0             False
4    -137.160156    -249.220459  1645.921143  -137.160156  205.000000  -249.220459        0.0  112.060303      112.030273       3.0          -137.160156                 0.0             False
5    -137.160156    -249.190430  1645.921143  -137.160156  101.500000  -249.190430        0.0  112.030273       12.030273       4.0          -137.160156                 1.0             False
6    -137.160156    -137.160156  1710.015869  -137.160156   49.750000  -137.160156        0.0    0.000000      -23.875000       5.0          -137.160156                 1.0             False
7    -113.285156    -113.285156  1799.078369  -113.285156   23.875000  -113.285156        0.0    0.000000      -10.937500       1.0          -113.285156                 1.0             False
8    -102.347656    -102.347656  1799.078369  -102.347656   10.937500  -102.347656        0.0    0.000000     -100.000000       1.0          -102.347656                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:23]  --------------------------------------------------------------------------------
[09/28 12:25:23]  Iteration: 37 (1 solution, 35 counterexamples)
[09/28 12:25:24]  Generator returned sat in 0.244998 secs.
[09/28 12:25:24]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:25:25]  Improved gap from 0.0 to 0
[09/28 12:25:25]  Improved number of small numbers from 61 to 85 out of a max of 111
[09/28 12:25:25]  Verifer returned sat in 0.953228 secs.
[09/28 12:25:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     -16.340088    -316.342529  1313.070869   -16.340088    0.002441  -316.342529        0.0  300.002441      300.000068       2.0          -316.342529                -1.0                -1
1     -16.340088    -316.340088  1313.070869   -16.340088    0.002686  -316.340088        0.0  300.000000      200.000068       2.0          -316.342529                 0.0             False
2     -16.340088    -214.342529  1313.070869   -16.340088    0.002686  -214.342529        0.0  198.002441      100.000068       3.0          -316.342529                 0.0             False
3     -16.340088     -16.340156  1313.070869   -16.340088  198.000000   -16.340156        0.0    0.000068        0.000068       4.0          -316.342529                 1.0              True
4      83.659844     -16.337646  1313.070869    83.659844  100.000000   -16.337646        0.0   99.997490        0.000000       1.0            83.659844                 1.0              True
5      83.659844      83.659844  1413.061035    83.659844    0.010000    83.659844        0.0    0.000000       -0.009834       2.0            83.659844                 0.0             False
6      83.669844      83.669844  1513.051025    83.669844    0.010000    83.669844        0.0    0.000000       -0.009844       1.0            83.659844                 0.0             False
7      83.679844      83.679844  1613.050781    83.679844    0.010000    83.679844        0.0    0.000000       -0.000088       1.0            83.659844                 0.0             False
8      83.689844      83.689844  1613.050781    83.689844    0.010000    83.689844        0.0    0.000000      -99.990088       1.0            83.659844                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:26]  --------------------------------------------------------------------------------
[09/28 12:25:26]  Iteration: 38 (1 solution, 36 counterexamples)
[09/28 12:25:28]  Generator returned sat in 0.798368 secs.
[09/28 12:25:28]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:32]  Improved gap from 0.0 to 26.5625
[09/28 12:25:33]  Improved number of small numbers from 56 to 75 out of a max of 111
[09/28 12:25:33]  Verifer returned sat in 4.822755 secs.
[09/28 12:25:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1242.375732   -1642.373291  1545.015117 -1242.375732    0.002441 -1642.373291        0.0  399.997559      399.997422       4.0         -1642.373291                -1.0                -1
1   -1242.375732   -1542.373154  1545.015117 -1242.375732    0.002500 -1542.373154        0.0  299.997422      299.997422       4.0         -1642.373291                 0.0             False
2   -1242.375732   -1442.373291  1545.015117 -1242.375732    0.002686 -1442.373291        0.0  199.997559      199.997422       5.0         -1642.373291                 0.0             False
3   -1242.375732   -1353.245654  1545.015117 -1242.375732   30.617500 -1353.245654        0.0  110.869922       99.997422       6.0         -1642.373291                 0.0             False
4   -1242.373154   -1324.636404  1545.015117 -1242.373154  110.872500 -1324.636404        0.0   82.263250        0.000000       7.0         -1642.373291                 0.0             False
5   -1242.373154   -1242.373154  1618.452617 -1242.373154    0.010000 -1242.373154        0.0    0.000000      -26.562500       2.0         -1242.373154                 1.0              True
6   -1185.931904   -1204.899654  1618.452617 -1185.931904   56.441250 -1204.899654        0.0   18.967750      -70.121250       1.0         -1242.373154                 0.0             False
7   -1115.810654   -1115.810654  1691.890117 -1115.810654   89.089000 -1115.810654        0.0    0.000000      -26.562500       1.0         -1242.373154                 0.0             False
8   -1006.984904   -1089.248047  1691.890117 -1006.984904  108.825750 -1089.248047        0.0   82.263143      -17.736750       1.0         -1242.373154                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:33]  --------------------------------------------------------------------------------
[09/28 12:25:33]  Iteration: 39 (1 solution, 37 counterexamples)
[09/28 12:25:34]  Generator returned sat in 0.338532 secs.
[09/28 12:25:34]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:35]  Verifer returned unsat in 0.263146 secs.
[09/28 12:25:35]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:35]  --------------------------------------------------------------------------------
[09/28 12:25:35]  Iteration: 40 (2 solution, 37 counterexamples)
[09/28 12:25:36]  Generator returned sat in 0.330495 secs.
[09/28 12:25:36]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:37]  Improved number of small numbers from 100 to 110 out of a max of 110
[09/28 12:25:37]  Verifer returned sat in 0.483540 secs.
[09/28 12:25:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     -42.345703   -1343.375732  1246.017822   -42.345703     0.030029 -1343.375732        0.0  1301.030029     1301.030029       5.0         -1343.375732                -1.0                -1
1     -42.345703   -1243.375732  1246.017822   -42.345703     0.030029 -1243.375732        0.0  1201.030029     1201.030029       5.0         -1343.375732                 0.0             False
2     -42.345703   -1143.406006  1246.017822   -42.345703     0.030029 -1143.406006        0.0  1101.060303     1101.030029       6.0         -1343.375732                 0.0             False
3     -42.345703   -1143.375732  1246.017822   -42.345703     0.030029 -1143.375732        0.0  1101.030029     1001.030029       7.0         -1343.375732                 0.0             False
4     -42.345703   -1043.375732  1246.017822   -42.345703   101.000000 -1043.375732        0.0  1001.030029      901.030029       8.0         -1343.375732                 0.0             False
5     -42.345703    -843.406006  1246.017822   -42.345703   201.000000  -843.406006        0.0   801.060303      801.030029       9.0         -1343.375732                 1.0              True
6     -42.345703    -843.375732  1246.017822   -42.345703   401.000000  -843.375732        0.0   801.030029      701.030029       9.0         -1343.375732                 1.0              True
7     -42.345703    -643.375732  1246.017822   -42.345703   801.000000  -643.375732        0.0   601.030029      601.030029       8.0         -1343.375732                 1.0              True
8     957.624268    -643.375732  1246.017822   957.624268  1601.000000  -643.375732        0.0  1601.000000     1501.000000       8.0         -1343.375732                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:37]  --------------------------------------------------------------------------------
[09/28 12:25:37]  Iteration: 41 (2 solution, 38 counterexamples)
[09/28 12:25:39]  Generator returned sat in 0.356409 secs.
[09/28 12:25:39]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:39]  Improved gap from 0.0 to 14.0625
[09/28 12:25:39]  Improved number of small numbers from 92 to 111 out of a max of 111
[09/28 12:25:39]  Verifer returned sat in 0.775088 secs.
[09/28 12:25:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     804.654297     404.654297  1246.017822   804.654297    0.030029   404.654297        0.0  400.000000      400.000000       6.0           404.654297                -1.0                -1
1     804.654297     504.007812  1246.017822   804.654297    0.030029   504.007812        0.0  300.646484      300.000000       6.0           404.654297                 0.0             False
2     804.654297     504.654297  1246.017822   804.654297    0.030029   504.654297        0.0  300.000000      200.000000       7.0           404.654297                 0.0             False
3     804.654297     704.654297  1246.017822   804.654297    0.030029   704.654297        0.0  100.000000      100.000000       8.0           404.654297                 0.0             False
4     804.654297     705.300781  1246.017822   804.654297   99.323242   705.300781        0.0   99.353516        0.000000       9.0           404.654297                 1.0              True
5     804.654297     804.654297  1331.955078   804.654297   99.323242   804.654297        0.0    0.000000      -14.062744       9.0           404.654297                 1.0              True
6     853.654297     853.654297  1382.047852   853.654297   49.000000   853.654297        0.0    0.000000      -14.969971       1.0           853.654297                 1.0              True
7    1003.007812     902.977539  1382.047852  1003.007812  149.353516   902.977539        0.0  100.030273       34.383545       1.0           853.654297                 0.0             False
8    1003.007812     968.624268  1382.047852  1003.007812   99.323242   968.624268        0.0   34.383545      -65.616455       2.0          1003.007812                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:40]  --------------------------------------------------------------------------------
[09/28 12:25:40]  Iteration: 42 (2 solution, 39 counterexamples)
[09/28 12:25:41]  Generator returned sat in 0.173089 secs.
[09/28 12:25:41]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:43]  Improved gap from 11.4849853515625 to 10.9375
[09/28 12:25:43]  Improved number of small numbers from 61 to 111 out of a max of 111
[09/28 12:25:43]  Verifer returned sat in 1.784648 secs.
[09/28 12:25:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    3949.719727    3548.325195  1246.017822  3949.719727    0.059082  3548.325195        0.0  401.394531      401.335449       6.0          3548.325195                -1.0                -1
1    3949.719727    3648.325195  1246.017822  3949.719727    0.059326  3648.325195        0.0  301.394531      301.335449       6.0          3548.325195                 0.0             False
2    3949.719727    3648.384277  1246.017822  3949.719727    0.059326  3648.384277        0.0  301.335449      201.335449       7.0          3548.325195                 0.0             False
3    3949.719727    3848.384277  1246.017822  3949.719727  101.029541  3848.384277        0.0  101.335449      101.335449       8.0          3548.325195                 0.0             False
4    3949.719727    3848.443359  1246.017822  3949.719727  101.029541  3848.443359        0.0  101.276367        1.335449       9.0          3548.325195                 1.0              True
5    3949.719727    3949.719727  1333.744629  3949.719727  101.029541  3949.719727        0.0    0.000000      -10.937744       9.0          3548.325195                 1.0              True
6    4001.387451    4001.387451  1382.077148  4001.387451   51.667725  4001.387451        0.0    0.000000      -10.937500       1.0          4001.387451                 1.0              True
7    4155.331543    4012.324951  1382.077148  4155.331543  153.944092  4012.324951        0.0  143.006592       43.006592       1.0          4001.387451                 0.0             False
8    4155.331543    4112.324951  1382.077148  4155.331543   63.605225  4112.324951        0.0   43.006592      -56.993408       2.0          4155.331543                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:43]  --------------------------------------------------------------------------------
[09/28 12:25:43]  Iteration: 43 (2 solution, 40 counterexamples)
[09/28 12:25:45]  Generator returned sat in 0.855643 secs.
[09/28 12:25:45]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:47]  Improved gap from 0.0 to 18.75
[09/28 12:25:47]  Improved number of small numbers from 53 to 111 out of a max of 111
[09/28 12:25:47]  Verifer returned sat in 1.659101 secs.
[09/28 12:25:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    3806.104736    3306.164307  1326.367676  3806.104736   0.059814  3306.164307        0.0  499.94043       499.94043       2.0          3306.164307                -1.0                -1
1    3806.104736    3397.164307  1326.367676  3806.104736   0.060059  3397.164307        0.0  408.94043       399.94043       2.0          3306.164307                 0.0             False
2    3806.104736    3506.164307  1326.367676  3806.104736  98.999756  3506.164307        0.0  299.94043       299.94043       3.0          3306.164307                 0.0             False
3    3806.104736    3597.164307  1326.367676  3806.104736  98.999756  3597.164307        0.0  208.94043       199.94043       4.0          3306.164307                 0.0             False
4    3806.104736    3706.164307  1326.367676  3806.104736  99.000000  3706.164307        0.0   99.94043        99.94043       5.0          3306.164307                 1.0              True
5    3806.104736    3737.164307  1326.367676  3806.104736  99.000000  3737.164307        0.0   68.94043        -0.05957       6.0          3306.164307                 1.0              True
6    3806.164307    3806.164307  1407.617676  3806.164307  69.000000  3806.164307        0.0    0.00000       -18.75000       1.0          3806.164307                 1.0              True
7    3841.664307    3841.664307  1472.117676  3841.664307  35.500000  3841.664307        0.0    0.00000       -18.75000       1.0          3841.664307                 0.0             False
8    3860.414307    3860.414307  1472.117676  3860.414307  18.750000  3860.414307        0.0    0.00000      -100.00000       1.0          3860.414307                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:48]  --------------------------------------------------------------------------------
[09/28 12:25:48]  Iteration: 44 (2 solution, 41 counterexamples)
[09/28 12:25:50]  Generator returned sat in 1.238682 secs.
[09/28 12:25:50]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:55]  Improved gap from 0.0 to 26.5625
[09/28 12:25:56]  Improved number of small numbers from 65 to 76 out of a max of 111
[09/28 12:25:56]  Verifer returned sat in 5.710581 secs.
[09/28 12:25:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    4156.160557    3756.160400  1326.367676  4156.160557    0.002686  3756.160400        0.0  400.000156      400.000000       7.0          3756.160400                -1.0                -1
1    4156.160557    3856.160557  1326.367676  4156.160557    0.002686  3856.160557        0.0  300.000000      300.000000       5.0          3756.160400                 0.0             False
2    4156.160557    3956.160400  1326.367676  4156.160557    0.002686  3956.160400        0.0  200.000156      200.000000       6.0          3756.160400                 0.0             False
3    4156.160557    4048.208414  1326.367676  4156.160557   21.851429  4048.208414        0.0  107.952143      100.000000       7.0          3756.160400                 0.0             False
4    4156.160557    4077.693771  1326.367676  4156.160557  107.949643  4077.693771        0.0   78.466786        0.000000       8.0          3756.160400                 0.0             False
5    4156.160557    4156.160557  1399.805176  4156.160557    0.010000  4156.160557        0.0    0.000000      -26.562500       7.0          4156.160557                 1.0              True
6    4211.141628    4195.386271  1399.805176  4211.141628   54.981071  4195.386271        0.0   15.755357      -71.581429       1.0          4156.160557                 0.0             False
7    4282.723057    4282.723057  1473.242432  4282.723057   87.336786  4282.723057        0.0    0.000000      -26.562744       1.0          4156.160557                 0.0             False
8    4390.672699    4312.206055  1473.242432  4390.672699  107.949643  4312.206055        0.0   78.466645      -18.613101       1.0          4156.160557                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:25:56]  --------------------------------------------------------------------------------
[09/28 12:25:56]  Iteration: 45 (2 solution, 42 counterexamples)
[09/28 12:25:59]  Generator returned sat in 1.222403 secs.
[09/28 12:25:59]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:25:59]  Improved gap from 0.0 to 0
[09/28 12:25:59]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:25:59]  Verifer returned sat in 0.617772 secs.
[09/28 12:25:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    4354.160645    3954.160400  1176.242432  4354.160645  0.002441  3954.160400        0.0  400.000244           400.0       3.0          3954.160400                -1.0                -1
1    4354.160645    4054.160400  1176.242432  4354.160645  0.002686  4054.160400        0.0  300.000244           300.0       3.0          3954.160400                 0.0             False
2    4354.160645    4154.160400  1176.242432  4354.160645  1.000000  4154.160400        0.0  200.000244           200.0       4.0          3954.160400                 0.0             False
3    4354.160645    4154.160645  1176.242432  4354.160645  1.000000  4154.160645        0.0  200.000000           100.0       5.0          3954.160400                 0.0             False
4    4354.160645    4254.160645  1176.242432  4354.160645  1.000000  4254.160645        0.0  100.000000             0.0       6.0          3954.160400                 0.0             False
5    4354.160645    4354.160645  1275.242432  4354.160645  0.010000  4354.160645        0.0    0.000000            -1.0       7.0          4354.160645                 1.0              True
6    4355.160645    4355.160645  1374.242432  4355.160645  1.000000  4355.160645        0.0    0.000000            -1.0       1.0          4354.160645                 1.0             False
7    4356.160645    4356.160645  1473.242432  4356.160645  1.000000  4356.160645        0.0    0.000000            -1.0       1.0          4354.160645                 0.0             False
8    4357.160645    4357.160645  1473.242432  4357.160645  1.000000  4357.160645        0.0    0.000000          -100.0       1.0          4354.160645                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:00]  --------------------------------------------------------------------------------
[09/28 12:26:00]  Iteration: 46 (2 solution, 43 counterexamples)
[09/28 12:26:02]  Generator returned sat in 0.888764 secs.
[09/28 12:26:02]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:26:02]  Verifer returned unsat in 0.321569 secs.
[09/28 12:26:02]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:26:02]  --------------------------------------------------------------------------------
[09/28 12:26:02]  Iteration: 47 (3 solution, 43 counterexamples)
[09/28 12:26:05]  Generator returned sat in 1.227514 secs.
[09/28 12:26:05]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:26:05]  Improved gap from 0.0 to 0
[09/28 12:26:05]  Improved number of small numbers from 93 to 111 out of a max of 111
[09/28 12:26:05]  Verifer returned sat in 0.307510 secs.
[09/28 12:26:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5257.220459      4759.1604  1371.361816  5257.220459   0.05957    4759.1604        0.0  498.060059      498.060059       3.0            4759.1604                -1.0                -1
1    5257.220459      4859.1604  1371.361816  5257.220459   0.05957    4859.1604        0.0  398.060059      398.060059       3.0            4759.1604                 1.0             False
2    5257.220459      4959.1604  1371.361816  5257.220459   0.05957    4959.1604        0.0  298.060059      298.060059       4.0            4759.1604                 1.0              True
3    5257.220459      5059.1604  1371.361816  5257.220459   2.00000    5059.1604        0.0  198.060059      198.060059       5.0            4759.1604                 1.0              True
4    5257.220459      5159.1604  1371.361816  5257.220459   2.00000    5159.1604        0.0   98.060059       98.060059       5.0            4759.1604                 1.0              True
5    5257.220459      5257.1604  1371.361816  5257.220459   2.00000    5257.1604        0.0    0.060059       -1.939941       6.0            4759.1604                 1.0              True
6    5259.160400      5259.1604  1471.361572  5259.160400   2.00000    5259.1604        0.0    0.000000       -0.000244       1.0            4759.1604                 1.0              True
7    5260.160400      5260.1604  1570.361816  5260.160400   1.00000    5260.1604        0.0    0.000000        0.000000       1.0            5260.1604                 0.0             False
8    5261.160400      5261.1604  1669.361816  5261.160400   1.00000    5261.1604        0.0    0.000000        0.000000       1.0            5260.1604                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:06]  --------------------------------------------------------------------------------
[09/28 12:26:06]  Iteration: 48 (3 solution, 44 counterexamples)
[09/28 12:26:08]  Generator returned sat in 0.866863 secs.
[09/28 12:26:08]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:26:08]  Improved gap from 0.0 to 0
[09/28 12:26:08]  Improved number of small numbers from 107 to 111 out of a max of 111
[09/28 12:26:08]  Verifer returned sat in 0.399876 secs.
[09/28 12:26:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5158.720459    4858.720215  1272.361816  5158.720459  199.999756  4858.720215        0.0  300.000244      300.000000       3.0          4858.720215                -1.0                -1
1    5158.720459    4858.780273  1272.361816  5158.720459  200.000000  4858.780273        0.0  299.940186      200.000000       3.0          4858.720215                 0.0             False
2    5158.720459    4958.720459  1272.361816  5158.720459  200.000000  4958.720459        0.0  200.000000      100.000000       3.0          4858.720215                 0.0             False
3    5158.720459    5158.720459  1272.361816  5158.720459  200.000000  5158.720459        0.0    0.000000        0.000000       4.0          4858.720215                 0.0             False
4    5258.720459    5257.660889  1272.361816  5258.720459  100.000000  5257.660889        0.0    1.059570        0.000000       1.0          5258.720459                 1.0              True
5    5258.720459    5258.720459  1372.361572  5258.720459    1.000000  5258.720459        0.0    0.000000       -0.000244       2.0          5258.720459                 0.0             False
6    5259.720459    5259.720459  1471.361816  5259.720459    1.000000  5259.720459        0.0    0.000000        0.000000       1.0          5258.720459                 0.0             False
7    5260.720459    5260.720459  1570.361816  5260.720459    1.000000  5260.720459        0.0    0.000000        0.000000       1.0          5258.720459                 0.0             False
8    5261.720459    5261.720459  1669.361572  5261.720459    1.000000  5261.720459        0.0    0.000000       -0.000244       1.0          5258.720459                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:09]  --------------------------------------------------------------------------------
[09/28 12:26:09]  Iteration: 49 (3 solution, 45 counterexamples)
[09/28 12:26:14]  Generator returned sat in 3.883822 secs.
[09/28 12:26:14]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:26:15]  Improved gap from 0.0 to 12.5
[09/28 12:26:15]  Improved number of small numbers from 101 to 111 out of a max of 111
[09/28 12:26:15]  Verifer returned sat in 1.268658 secs.
[09/28 12:26:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5577.940918    5577.910889  1482.809814  5577.940918    0.059570  5577.910889        0.0    0.030029        0.000000       7.0          5577.910889                -1.0                -1
1    5577.940918    5577.940918  1570.309814  5577.940918    0.029785  5577.940918        0.0    0.000000      -12.500000       3.0          5577.940918                 1.0             False
2    6016.911133    5590.440918  1570.309814  6016.911133  438.970215  5590.440918        0.0  426.470215      326.470215       1.0          5577.940918                 1.0             False
3    6016.911133    5790.440674  1570.309814  6016.911133  400.000000  5790.440674        0.0  226.470459      226.470215       2.0          6016.911133                 0.0             False
4    6016.911133    5890.440918  1570.309814  6016.911133  200.000000  5890.440918        0.0  126.470215      126.470215       3.0          6016.911133                 1.0             False
5    6016.911133    5966.881348  1570.309814  6016.911133  100.000000  5966.881348        0.0   50.029785       26.470215       4.0          6016.911133                 1.0             False
6    6016.911133    6016.911133  1631.339600  6016.911133   50.000000  6016.911133        0.0    0.000000      -12.500000       5.0          6016.911133                 1.0             False
7    6041.911133    6041.911133  1706.339600  6041.911133   25.000000  6041.911133        0.0    0.000000      -12.500000       1.0          6041.911133                 1.0             False
8    6054.411133    6054.411133  1706.339600  6054.411133   12.500000  6054.411133        0.0    0.000000     -100.000000       1.0          6054.411133                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:16]  --------------------------------------------------------------------------------
[09/28 12:26:16]  Iteration: 50 (3 solution, 46 counterexamples)
[09/28 12:26:18]  Generator returned sat in 1.672042 secs.
[09/28 12:26:18]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:26:20]  Improved gap from 0.0 to 51.5625
[09/28 12:26:21]  Improved number of small numbers from 57 to 75 out of a max of 111
[09/28 12:26:21]  Verifer returned sat in 2.293765 secs.
[09/28 12:26:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5400.333252    5350.586670  1710.164062  5400.333252  49.770508  5350.586670        0.0  49.746582       49.746582       9.0          5350.586670                -1.0                -1
1    5400.333252    5400.309149  1710.164062  5400.333252  49.746338  5400.309149        0.0   0.024103      -50.253418       2.0          5400.333252                 1.0             False
2    5450.586848    5450.586848  1758.601318  5450.586848  50.277699  5450.586848        0.0   0.000000      -51.562566       1.0          5400.333252                 0.0             False
3    5508.250910    5508.250910  1800.937256  5508.250910  57.664062  5508.250910        0.0   0.000000      -51.562566       1.0          5400.333252                 0.0             False
4    5561.221791    5561.221791  1847.966309  5561.221791  52.970881  5561.221791        0.0   0.000000      -51.562633       1.0          5561.221791                 0.0             False
5    5615.539262    5615.539262  1893.648926  5615.539262  54.317472  5615.539262        0.0   0.000000      -51.562544       1.0          5561.221791                 0.0             False
6    5668.183438    5668.183438  1940.086670  5668.183438  52.644176  5668.183438        0.0   0.000000      -52.480624       1.0          5668.183438                 0.0             False
7    5720.664262    5720.664262  1988.523970  5720.664262  52.480824  5720.664262        0.0   0.000000      -51.562500       1.0          5720.664262                 0.0             False
8    5772.226762    5772.226762  1988.524170  5772.226762  51.562500  5772.226762        0.0   0.000000      -99.999800       1.0          5772.226762                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:21]  --------------------------------------------------------------------------------
[09/28 12:26:21]  Iteration: 51 (3 solution, 47 counterexamples)
[09/28 12:26:23]  Generator returned sat in 0.759448 secs.
[09/28 12:26:23]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:26:30]  Improved gap from 0.0 to 28.125
[09/28 12:26:32]  Improved number of small numbers from 56 to 67 out of a max of 111
[09/28 12:26:32]  Verifer returned sat in 8.283720 secs.
[09/28 12:26:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7105.692136    6705.691895  2748.499822  7105.692136    0.002441  6705.691895        0.0  400.000242       400.00000       6.0          6705.691895                -1.0                -1
1    7105.692136    6805.692136  2748.499822  7105.692136    0.002441  6805.692136        0.0  300.000000       300.00000       3.0          6705.691895                 1.0             False
2    7105.692136    6905.691895  2748.499822  7105.692136    0.002686  6905.691895        0.0  200.000242       200.00000       4.0          6705.691895                 0.0             False
3    7105.692136    6997.944636  2748.499822  7105.692136   25.237500  6997.944636        0.0  107.747500       100.00000       5.0          6705.691895                 0.0             False
4    7105.692136    7016.600886  2748.499822  7105.692136  107.745000  7016.600886        0.0   89.091250         0.00000       6.0          6705.691895                 0.0             False
5    7105.692136    7105.692136  2820.374822  7105.692136    0.010000  7105.692136        0.0    0.000000       -28.12500       7.0          7105.692136                 1.0              True
6    7158.570886    7144.452136  2820.374822  7158.570886   52.878750  7144.452136        0.0   14.118750       -75.24625       1.0          7105.692136                 1.0             False
7    7233.817136    7233.817136  2892.249822  7233.817136   89.365000  7233.817136        0.0    0.000000       -28.12500       1.0          7105.692136                 0.0             False
8    7341.562136    7261.942139  2892.249822  7341.562136  107.745000  7261.942139        0.0   79.619998       -20.38000       1.0          7105.692136                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:32]  --------------------------------------------------------------------------------
[09/28 12:26:32]  Iteration: 52 (3 solution, 48 counterexamples)
[09/28 12:26:37]  Generator returned sat in 3.634879 secs.
[09/28 12:26:37]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:26:41]  Improved gap from 0.0 to 28.125
[09/28 12:26:42]  Improved number of small numbers from 56 to 75 out of a max of 111
[09/28 12:26:42]  Verifer returned sat in 4.900645 secs.
[09/28 12:26:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7042.569824    6722.675781  2731.516072  7042.569824    0.002441  6722.675781        0.0  319.894043      319.893938       7.0          6722.675781                -1.0                -1
1    7042.569824    6822.675886  2731.516072  7042.569824   23.242500  6822.675886        0.0  219.893938      219.893938       2.0          6722.675781                 1.0             False
2    7042.569824    6822.678467  2731.516072  7042.569824   23.242500  6822.678467        0.0  219.891357      119.893938       3.0          6722.675781                 0.0             False
3    7042.569824    7014.928386  2731.516072  7042.569824   23.242500  7014.928386        0.0   27.641438       19.893938       4.0          6722.675781                 0.0             False
4    7122.675886    7042.569636  2731.516072  7122.675886  107.747500  7042.569636        0.0   80.106250        0.000000       5.0          6722.675781                 0.0             False
5    7122.675886    7122.675886  2803.391072  7122.675886    0.010000  7122.675886        0.0    0.000000      -28.125000       2.0          7122.675886                 1.0              True
6    7176.554636    7163.430886  2803.391072  7176.554636   53.878750  7163.430886        0.0   13.123750      -74.246250       1.0          7122.675886                 0.0             False
7    7250.800886    7250.800886  2875.266072  7250.800886   87.370000  7250.800886        0.0    0.000000      -28.125000       1.0          7122.675886                 0.0             False
8    7358.548386    7278.926025  2875.266072  7358.548386  107.747500  7278.926025        0.0   79.622361      -20.377500       1.0          7122.675886                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:43]  --------------------------------------------------------------------------------
[09/28 12:26:43]  Iteration: 53 (3 solution, 49 counterexamples)
[09/28 12:26:48]  Generator returned sat in 3.893244 secs.
[09/28 12:26:48]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:26:49]  Improved number of small numbers from 45 to 96 out of a max of 110
[09/28 12:26:49]  Verifer returned sat in 1.112770 secs.
[09/28 12:26:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7142.569580    6642.569580  2811.622314  7142.569580    0.029785  6642.569580        0.0  500.000000      500.000000       2.0          6642.569580                -1.0                -1
1    7142.569580    6742.569580  2811.622314  7142.569580    0.029785  6742.569580        0.0  400.000000      400.000000       2.0          6642.569580                 0.0             False
2    7142.569580    6839.891602  2811.622314  7142.569580    0.029785  6839.891602        0.0  302.677979      300.000000       3.0          6642.569580                 0.0             False
3    7142.569580    6842.569636  2811.622314  7142.569580    0.029785  6842.569636        0.0  299.999944      200.000000       4.0          6642.569580                 0.0             False
4    7142.569580    7042.569580  2811.622314  7142.569580    1.000000  7042.569580        0.0  100.000000      100.000000       5.0          6642.569580                 0.0             False
5    7244.747559    7142.539973  2811.622314  7244.747559  202.177979  7142.539973        0.0  102.207585      102.177979       6.0          6642.569580                 1.0              True
6    7542.599299    7142.569580  2811.622314  7542.599299  400.059326  7142.569580        0.0  400.029719      300.029719       7.0          6642.569580                 1.0              True
7    7542.599299    7342.569580  2811.622314  7542.599299  299.029663  7342.569580        0.0  200.029719      200.029719       2.0          7542.599299                 1.0              True
8    7542.599299    7342.599365  2811.622314  7542.599299    1.000000  7342.599365        0.0  199.999934      100.029719       3.0          7542.599299                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:26:50]  --------------------------------------------------------------------------------
[09/28 12:26:50]  Iteration: 54 (3 solution, 50 counterexamples)
[09/28 12:26:53]  Generator returned sat in 2.144596 secs.
[09/28 12:26:53]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:26:54]  Verifer returned unsat in 0.306718 secs.
[09/28 12:26:54]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:26:54]  --------------------------------------------------------------------------------
[09/28 12:26:54]  Iteration: 55 (4 solution, 50 counterexamples)
[09/28 12:26:56]  Generator returned sat in 0.598437 secs.
[09/28 12:26:56]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:27:01]  Improved gap from 0.0 to 26.5625
[09/28 12:27:02]  Improved number of small numbers from 57 to 70 out of a max of 111
[09/28 12:27:02]  Verifer returned sat in 6.478589 secs.
[09/28 12:27:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     7642.45958    7242.459473  2211.732559   7642.45958   30.612305  7242.459473        0.0  400.000107      400.000000       2.0          7242.459473                -1.0                -1
1     7642.45958    7342.459580  2211.732559   7642.45958   30.612305  7342.459580        0.0  300.000000      300.000000       2.0          7242.459473                 0.0             False
2     7642.45958    7342.462158  2211.732559   7642.45958   30.612305  7342.462158        0.0  299.997422      200.000000       3.0          7242.459473                 0.0             False
3     7642.45958    7531.587080  2211.732559   7642.45958   30.612500  7531.587080        0.0  110.872500      100.000000       4.0          7242.459473                 0.0             False
4     7642.45958    7547.930830  2211.732559   7642.45958  110.870000  7547.930830        0.0   94.528750        0.000000       5.0          7242.459473                 0.0             False
5     7642.45958    7642.459580  2285.170059   7642.45958    0.010000  7642.459580        0.0    0.000000      -26.562500       6.0          7642.459580                 1.0              True
6     7698.90083    7675.844580  2285.170059   7698.90083   56.441250  7675.844580        0.0   23.056250      -70.121250       1.0          7642.459580                 1.0             False
7     7769.02208    7769.022080  2358.607422   7769.02208   93.177500  7769.022080        0.0    0.000000      -26.562637       1.0          7642.459580                 0.0             False
8     7879.89208    7795.584717  2358.607422   7879.89208  110.870000  7795.584717        0.0   84.307363      -15.692637       1.0          7642.459580                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:03]  --------------------------------------------------------------------------------
[09/28 12:27:03]  Iteration: 56 (4 solution, 51 counterexamples)
[09/28 12:27:05]  Generator returned sat in 1.380927 secs.
[09/28 12:27:06]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:27:06]  Improved gap from 0.0 to 100
[09/28 12:27:06]  Improved number of small numbers from 81 to 111 out of a max of 111
[09/28 12:27:06]  Verifer returned sat in 0.293899 secs.
[09/28 12:27:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7814.491699    7142.461914  2311.729736  7814.491699    0.029541  7142.461914        0.0  672.029785      672.029541       7.0          7142.461914                -1.0                -1
1    7814.491699    7242.462158  2311.729736  7814.491699    0.029541  7242.462158        0.0  572.029541      572.029541       3.0          7142.461914                 0.0             False
2    7814.491699    7342.462158  2311.729736  7814.491699    0.029541  7342.462158        0.0  472.029541      472.029541       4.0          7142.461914                 0.0             False
3    7814.491699    7385.462158  2311.729736  7814.491699    0.029541  7385.462158        0.0  429.029541      372.029541       5.0          7142.461914                 0.0             False
4    7814.491699    7499.461914  2311.729736  7814.491699  144.000000  7499.461914        0.0  315.029785      272.029541       6.0          7142.461914                 0.0             False
5    7814.491699    7542.462158  2311.729736  7814.491699  157.999756  7542.462158        0.0  272.029541      172.029541       7.0          7142.461914                 0.0             False
6    7814.491699    7656.461914  2311.729736  7814.491699  158.000000  7656.461914        0.0  158.029785       72.029541       8.0          7142.461914                 0.0             False
7    7814.491699    7814.491699  2311.729736  7814.491699  158.000000  7814.491699        0.0    0.000000      -27.970459       9.0          7142.461914                 0.0             False
8    8359.550781    7842.462158  2311.729736  8359.550781  545.059082  7842.462158        0.0  517.088623      417.088623       1.0          7142.461914                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:06]  --------------------------------------------------------------------------------
[09/28 12:27:06]  Iteration: 57 (4 solution, 52 counterexamples)
[09/28 12:27:10]  Generator returned sat in 1.822329 secs.
[09/28 12:27:10]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:27:10]  Improved gap from 0.0 to 0
[09/28 12:27:11]  Improved number of small numbers from 58 to 72 out of a max of 111
[09/28 12:27:11]  Verifer returned sat in 1.185084 secs.
[09/28 12:27:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7111.397158    6810.404541  3293.774736  7111.397158    0.009766  6810.404541        0.0  300.992617      300.992500       8.0          6810.404541                -1.0                -1
1    7111.397158    6810.404785  3293.774736  7111.397158    0.010000  6810.404785        0.0  300.992373      200.992500       2.0          6810.404541                 1.0             False
2    7111.397158    6910.404658  3293.774736  7111.397158    0.010000  6910.404658        0.0  200.992500      100.992500       3.0          6810.404541                 0.0             False
3    7111.397158    7110.404541  3293.774736  7111.397158    0.010000  7110.404541        0.0    0.992617        0.992500       4.0          6810.404541                 0.0             False
4    7111.397158    7111.397158  3392.782236  7111.397158    0.010000  7111.397158        0.0    0.000000        0.000000       5.0          6810.404541                 0.0             False
5    7311.389658    7111.399658  3392.782236  7311.389658  199.992500  7111.399658        0.0  199.990000       99.992500       1.0          6810.404541                 1.0              True
6    7311.389658    7311.387158  3392.782236  7311.389658    0.010000  7311.387158        0.0    0.002500       -0.007500       2.0          7311.389658                 0.0             False
7    7311.397158    7311.397158  3492.782227  7311.397158    0.010000  7311.397158        0.0    0.000000       -0.000010       1.0          7311.389658                 0.0             False
8    7311.407158    7311.407158  3492.782471  7311.407158    0.010000  7311.407158        0.0    0.000000      -99.989766       1.0          7311.389658                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:11]  --------------------------------------------------------------------------------
[09/28 12:27:11]  Iteration: 58 (4 solution, 53 counterexamples)
[09/28 12:27:14]  Generator returned sat in 1.012801 secs.
[09/28 12:27:14]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:27:14]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/28 12:27:14]  Verifer returned sat in 0.357515 secs.
[09/28 12:27:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7468.876953    6819.374512  3284.804688  7468.876953    0.002441  6819.374512        0.0  649.502441      649.502441       6.0          6819.374512                -1.0                -1
1    7468.876953    6919.374512  3284.804688  7468.876953    0.002441  6919.374512        0.0  549.502441      549.502441       6.0          6819.374512                 0.0             False
2    7468.876953    7019.374512  3284.804688  7468.876953    0.002441  7019.374512        0.0  449.502441      449.502441       7.0          6819.374512                 0.0             False
3    7468.876953    7119.372070  3284.804688  7468.876953    0.010000  7119.372070        0.0  349.504883      349.502441       8.0          6819.374512                 0.0             False
4    7468.876953    7119.374512  3284.804688  7468.876953    0.010000  7119.374512        0.0  349.502441      249.502441       9.0          6819.374512                 1.0              True
5    7468.876953    7219.374756  3284.804688  7468.876953    0.010000  7219.374756        0.0  249.502197      149.502441       9.0          6819.374512                 1.0              True
6    7468.876953    7419.374512  3284.804688  7468.876953    0.010000  7419.374512        0.0   49.502441       49.502441       7.0          6819.374512                 1.0              True
7    7720.374512    7468.876953  3284.804688  7720.374512  301.000000  7468.876953        0.0  251.497559      201.000000       8.0          6819.374512                 0.0             False
8    7919.376953    7519.374756  3284.804688  7919.376953  450.500000  7519.374756        0.0  400.002197      300.002441       2.0          6819.374512                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:15]  --------------------------------------------------------------------------------
[09/28 12:27:15]  Iteration: 59 (4 solution, 54 counterexamples)
[09/28 12:27:17]  Generator returned sat in 0.722157 secs.
[09/28 12:27:17]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:27:20]  Improved gap from 0.029541015625 to 17.1875
[09/28 12:27:21]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:27:21]  Verifer returned sat in 3.624242 secs.
[09/28 12:27:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7239.187256    7039.010010  3218.179688  7239.187256    0.059082  7039.010010        0.0  200.177246      199.940918       5.0          7039.010010                -1.0                -1
1    7239.187256    7039.246338  3218.179688  7239.187256  200.118164  7039.246338        0.0  199.940918       99.940918       2.0          7039.010010                 0.0             False
2    7239.305420    7239.246338  3218.179688  7239.305420  200.059082  7239.246338        0.0    0.059082        0.059082       1.0          7239.305420                 0.0             False
3    7255.433838    7255.433838  3284.804688  7255.433838   16.187500  7255.433838        0.0    0.000000      -17.187500       1.0          7255.433838                 0.0             False
4    7372.621338    7284.822510  3284.804688  7372.621338  117.187500  7284.822510        0.0   87.798828        0.000000       1.0          7255.433838                 0.0             False
5    7372.621338    7372.621338  3367.617188  7372.621338   82.381836  7372.621338        0.0    0.000000      -17.187500       2.0          7372.621338                 0.0             False
6    7473.406006    7389.808838  3367.617188  7473.406006  100.784668  7389.808838        0.0   83.597168      -16.402832       1.0          7372.621338                 0.0             False
7    7493.694336    7493.694336  3446.544189  7493.694336  103.885498  7493.694336        0.0    0.000000      -17.187500       1.0          7372.621338                 0.0             False
8    7607.173584    7519.374756  3446.544189  7607.173584  113.479248  7519.374756        0.0   87.798828       -3.708252       1.0          7372.621338                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:21]  --------------------------------------------------------------------------------
[09/28 12:27:21]  Iteration: 60 (4 solution, 55 counterexamples)
[09/28 12:27:29]  Generator returned sat in 6.215231 secs.
[09/28 12:27:29]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:27:31]  Improved gap from 8.0625 to 21.875
[09/28 12:27:31]  Improved number of small numbers from 46 to 111 out of a max of 111
[09/28 12:27:31]  Verifer returned sat in 1.923162 secs.
[09/28 12:27:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7841.651855    7341.710693  2639.251709  7841.651855    0.059082  7341.710693        0.0  499.941162      499.941162       6.0          7341.710693                -1.0                -1
1    7841.651855    7440.196777  2639.251709  7841.651855  200.197998  7440.196777        0.0  401.455078      399.941162       6.0          7341.710693                 0.0             False
2    7841.651855    7479.710938  2639.251709  7841.651855  200.197998  7479.710938        0.0  361.940918      299.941162       7.0          7341.710693                 0.0             False
3    7841.651855    7641.394775  2639.251709  7841.651855  200.197998  7641.394775        0.0  200.257080      199.941162       8.0          7341.710693                 0.0             False
4    7841.651855    7641.710938  2639.251709  7841.651855  200.197998  7641.710938        0.0  199.940918       99.941162       9.0          7341.710693                 1.0              True
5    7841.651855    7760.210938  2639.251709  7841.651855  161.000000  7760.210938        0.0   81.440918       -0.058838       6.0          7841.651855                 1.0              True
6    7841.710938    7841.710938  2717.376465  7841.710938   81.500000  7841.710938        0.0    0.000000      -21.875000       1.0          7841.710938                 0.0             False
7    7883.460938    7883.460938  2775.626465  7883.460938   41.750000  7883.460938        0.0    0.000000      -21.875000       1.0          7883.460938                 0.0             False
8    7905.335938    7905.335938  2775.626709  7905.335938   21.875000  7905.335938        0.0    0.000000      -99.999756       1.0          7905.335938                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:31]  --------------------------------------------------------------------------------
[09/28 12:27:31]  Iteration: 61 (4 solution, 56 counterexamples)
[09/28 12:27:34]  Generator returned sat in 1.158823 secs.
[09/28 12:27:34]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:27:35]  Improved gap from 0.0 to 0
[09/28 12:27:35]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:27:35]  Verifer returned sat in 0.552616 secs.
[09/28 12:27:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7741.602783    7242.043945  2738.918213  7741.602783  0.058838  7242.043945        0.0  499.558838      499.558838       4.0          7242.043945                -1.0                -1
1    7741.602783    7342.043945  2738.918213  7741.602783  0.058838  7342.043945        0.0  399.558838      399.558838       4.0          7242.043945                 0.0             False
2    7741.602783    7442.043945  2738.918213  7741.602783  0.058838  7442.043945        0.0  299.558838      299.558838       5.0          7242.043945                 0.0             False
3    7741.602783    7542.043945  2738.918213  7741.602783  1.000000  7542.043945        0.0  199.558838      199.558838       5.0          7242.043945                 0.0             False
4    7741.602783    7642.043945  2738.918213  7741.602783  1.000000  7642.043945        0.0   99.558838       99.558838       6.0          7242.043945                 0.0             False
5    7741.602783    7741.543945  2738.918213  7741.602783  1.000000  7741.543945        0.0    0.058838       -0.441162       7.0          7242.043945                 0.0             False
6    7742.043945    7742.043945  2837.918457  7742.043945  0.500000  7742.043945        0.0    0.000000       -0.999756       1.0          7742.043945                 1.0              True
7    7743.043945    7743.043945  2937.918213  7743.043945  1.000000  7743.043945        0.0    0.000000        0.000000       1.0          7742.043945                 0.0             False
8    7744.043945    7744.043945  2937.918213  7744.043945  1.000000  7744.043945        0.0    0.000000      -99.000000       1.0          7742.043945                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:35]  --------------------------------------------------------------------------------
[09/28 12:27:35]  Iteration: 62 (4 solution, 57 counterexamples)
[09/28 12:27:38]  Generator returned sat in 1.625395 secs.
[09/28 12:27:39]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:27:39]  Improved gap from 0.0 to 100
[09/28 12:27:39]  Improved number of small numbers from 63 to 109 out of a max of 111
[09/28 12:27:39]  Verifer returned sat in 0.794122 secs.
[09/28 12:27:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7806.975098    7156.975342  2738.917969  7806.975098    0.058594  7156.975342        0.0  649.999756      649.999756       1.0          7156.975342                -1.0                -1
1    7806.975098    7256.975342  2738.917969  7806.975098    0.058594  7256.975342        0.0  549.999756      549.999756       2.0          7156.975342                 0.0             False
2    7806.975098    7323.602783  2738.917969  7806.975098  200.058838  7323.602783        0.0  483.372314      449.999756       3.0          7156.975342                 1.0              True
3    7806.975098    7390.347900  2738.917969  7806.975098  200.058838  7390.347900        0.0  416.627197      349.999756       4.0          7156.975342                 1.0              True
4    7806.975098    7456.975342  2738.917969  7806.975098  200.058838  7456.975342        0.0  349.999756      249.999756       5.0          7156.975342                 1.0              True
5    7806.975098    7556.975342  2738.917969  7806.975098  200.058838  7556.975342        0.0  249.999756      149.999756       6.0          7156.975342                 1.0              True
6    7806.975098    7756.975342  2738.917969  7806.975098  249.941162  7756.975342        0.0   49.999756       49.999756       7.0          7156.975342                 1.0              True
7    8206.975342    7806.916504  2738.917969  8206.975342  450.000000  7806.916504        0.0  400.058838      350.000000       8.0          7156.975342                 1.0              True
8    8206.975342    7856.975342  2738.917969  8206.975342  374.911743  7856.975342        0.0  350.000000      250.000000       2.0          8206.975342                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:40]  --------------------------------------------------------------------------------
[09/28 12:27:40]  Iteration: 63 (4 solution, 58 counterexamples)
[09/28 12:27:43]  Generator returned sat in 1.746279 secs.
[09/28 12:27:43]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:27:44]  Improved gap from 0.0 to 0
[09/28 12:27:44]  Improved number of small numbers from 62 to 84 out of a max of 111
[09/28 12:27:44]  Verifer returned sat in 1.271132 secs.
[09/28 12:27:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7190.357422    7090.357422  2738.918213  7190.357422  100.002441  7090.357422        0.0  100.000000       99.999919       2.0          7090.357422                -1.0                -1
1    7190.359863    7190.357422  2738.918213  7190.359863  100.002441  7190.357422        0.0    0.002441        0.002360       2.0          7090.357422                 0.0             False
2    7190.359863    7190.358887  2738.918213  7190.359863    0.001465  7190.358887        0.0    0.000977      -99.997640       2.0          7190.359863                 0.0             False
3    7390.356201    7390.347503  2738.918213  7390.356201  199.997314  7390.347503        0.0    0.008698       -0.001302       1.0          7190.359863                 0.0             False
4    7390.357503    7390.357503  2838.917969  7390.357503    0.010000  7390.357503        0.0    0.000000       -0.000244       1.0          7390.357503                 0.0             False
5    7390.367503    7390.367503  2938.908203  7390.367503    0.010000  7390.367503        0.0    0.000000       -0.000010       1.0          7390.357503                 0.0             False
6    7390.377503    7390.377503  3038.898193  7390.377503    0.010000  7390.377503        0.0    0.000000       -0.000020       1.0          7390.357503                 0.0             False
7    7390.387503    7390.387503  3138.878418  7390.387503    0.010000  7390.387503        0.0    0.000000       -0.009795       1.0          7390.357503                 0.0             False
8    7390.397503    7390.397503  3138.878418  7390.397503    0.010000  7390.397503        0.0    0.000000      -99.999795       1.0          7390.357503                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:45]  --------------------------------------------------------------------------------
[09/28 12:27:45]  Iteration: 64 (4 solution, 59 counterexamples)
[09/28 12:27:48]  Generator returned sat in 1.856553 secs.
[09/28 12:27:48]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:27:50]  Improved gap from 0.0 to 0
[09/28 12:27:50]  Improved number of small numbers from 49 to 111 out of a max of 111
[09/28 12:27:50]  Verifer returned sat in 1.417178 secs.
[09/28 12:27:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9644.938477    9144.938232  684.337402  9644.938477   0.029297  9144.938232        0.0  500.000244      500.000000       8.0          9144.938232                -1.0                -1
1    9644.938477    9244.908691  684.337402  9644.938477   0.029541  9244.908691        0.0  400.029785      400.000000       4.0          9144.938232                 1.0             False
2    9644.938477    9244.938477  684.337402  9644.938477   0.029541  9244.938477        0.0  400.000000      300.000000       5.0          9144.938232                 0.0             False
3    9644.938477    9432.967773  684.337402  9644.938477   0.029541  9432.967773        0.0  211.970703      200.000000       5.0          9144.938232                 0.0             False
4    9644.938477    9544.938477  684.337402  9644.938477   1.000000  9544.938477        0.0  100.000000      100.000000       5.0          9144.938232                 0.0             False
5    9644.938477    9643.908691  684.337402  9644.938477   1.000000  9643.908691        0.0    1.029785        0.000000       6.0          9144.938232                 0.0             False
6    9644.938477    9644.938477  784.337402  9644.938477   1.000000  9644.938477        0.0    0.000000        0.000000       7.0          9144.938232                 0.0             False
7    9695.938477    9695.938477  832.337646  9695.938477  51.000000  9695.938477        0.0    0.000000       -0.999756       1.0          9144.938232                 1.0              True
8    9696.938477    9696.938477  932.337402  9696.938477   1.000000  9696.938477        0.0    0.000000        0.000000       1.0          9696.938477                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:27:50]  --------------------------------------------------------------------------------
[09/28 12:27:50]  Iteration: 65 (4 solution, 60 counterexamples)
[09/28 12:28:00]  Generator returned sat in 7.555399 secs.
[09/28 12:28:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:28:00]  Improved gap from 0.0 to 100
[09/28 12:28:00]  Improved number of small numbers from 85 to 111 out of a max of 111
[09/28 12:28:00]  Verifer returned sat in 0.370360 secs.
[09/28 12:28:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9862.034180    9232.188477  597.087402   9862.034180    0.029297  9232.188477        0.0  629.845703      629.845703       8.0          9232.188477                -1.0                -1
1    9862.034180    9315.092773  597.087402   9862.034180    0.029541  9315.092773        0.0  546.941406      529.845703       4.0          9232.188477                 1.0             False
2    9862.034180    9332.188477  597.087402   9862.034180    0.029541  9332.188477        0.0  529.845703      429.845703       5.0          9232.188477                 1.0              True
3    9862.034180    9444.938477  597.087402   9862.034180    0.029541  9444.938477        0.0  417.095703      329.845703       5.0          9232.188477                 1.0              True
4    9862.034180    9544.938477  597.087402   9862.034180  193.768555  9544.938477        0.0  317.095703      229.845703       5.0          9232.188477                 1.0              True
5    9863.063477    9732.188477  597.087402   9863.063477  318.125000  9732.188477        0.0  130.875000      130.875000       6.0          9232.188477                 1.0              True
6   10162.063477    9832.188477  597.087402  10162.063477  429.875000  9832.188477        0.0  329.875000      329.875000       7.0          9232.188477                 1.0              True
7   10262.063477    9862.034180  597.087402  10262.063477  429.875000  9862.034180        0.0  400.029297      329.875000       8.0          9232.188477                 1.0              True
8   10262.063477    9932.188477  597.087402  10262.063477  193.768555  9932.188477        0.0  329.875000      229.875000       3.0         10262.063477                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:28:01]  --------------------------------------------------------------------------------
[09/28 12:28:01]  Iteration: 66 (4 solution, 61 counterexamples)
[09/28 12:28:06]  Generator returned sat in 3.790665 secs.
[09/28 12:28:06]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:28:07]  Improved gap from 0.0 to 14.0625
[09/28 12:28:07]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:28:07]  Verifer returned sat in 0.670103 secs.
[09/28 12:28:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10618.879883   10020.821289  597.087402  10618.879883    0.058594  10020.821289        0.0  598.058594      498.058594       2.0         10020.821289                -1.0                -1
1   10618.879883   10120.821289  597.087402  10618.879883  398.117188  10120.821289        0.0  498.058594      398.058594       3.0         10020.821289                 0.0             False
2   10618.879883   10220.821289  597.087402  10618.879883  398.058594  10220.821289        0.0  398.058594      298.058594       4.0         10618.879883                 1.0              True
3   10618.879883   10420.821289  597.087402  10618.879883  398.000000  10420.821289        0.0  198.058594      198.058594       5.0         10618.879883                 1.0             False
4   10620.821289   10420.879883  597.087402  10620.821289  200.000000  10420.879883        0.0  199.941406      100.000000       5.0         10620.821289                 1.0             False
5   10620.821289   10569.262695  597.087402  10620.821289  101.000000  10569.262695        0.0   51.558594        0.000000       6.0         10620.821289                 1.0             False
6   10620.821289   10620.821289  670.337402  10620.821289   51.500000  10620.821289        0.0    0.000000      -26.750000       3.0         10620.821289                 1.0             False
7   10647.571289   10647.571289  755.962402  10647.571289   26.750000  10647.571289        0.0    0.000000      -14.375000       1.0         10647.571289                 1.0             False
8   10661.946289   10661.946289  755.962402  10661.946289   14.375000  10661.946289        0.0    0.000000     -100.000000       1.0         10661.946289                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:28:07]  --------------------------------------------------------------------------------
[09/28 12:28:07]  Iteration: 67 (4 solution, 62 counterexamples)
[09/28 12:28:12]  Generator returned sat in 2.705251 secs.
[09/28 12:28:12]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:28:14]  Improved gap from 1.0 to 0
[09/28 12:28:14]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:28:14]  Verifer returned sat in 1.895704 secs.
[09/28 12:28:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11359.016113   10959.016113  597.087402  11359.016113    0.029053  10959.016113        0.0  400.000000      400.000000       6.0         10959.016113                -1.0                -1
1   11359.016113   11059.016113  597.087402  11359.016113    0.029053  11059.016113        0.0  300.000000      300.000000       2.0         10959.016113                 1.0             False
2   11359.016113   11159.016113  597.087402  11359.016113    0.029053  11159.016113        0.0  200.000000      200.000000       3.0         10959.016113                 0.0             False
3   11359.016113   11252.869629  597.087402  11359.016113    0.029297  11252.869629        0.0  106.146484      100.000000       4.0         10959.016113                 1.0              True
4   11359.016113   11259.016113  597.087402  11359.016113   97.941406  11259.016113        0.0  100.000000        0.000000       5.0         10959.016113                 1.0              True
5   11359.016113   11359.016113  693.028564  11359.016113   99.970703  11359.016113        0.0    0.000000       -4.058838       6.0         10959.016113                 1.0              True
6   11463.074707   11463.074707  693.028809  11463.074707  104.058594  11463.074707        0.0    0.000000        0.000000       1.0         10959.016113                 1.0              True
7   11464.074707   11464.074707  792.028564  11464.074707    1.000000  11464.074707        0.0    0.000000       -0.000244       1.0         11464.074707                 0.0             False
8   11465.074707   11465.074707  792.028809  11465.074707    1.000000  11465.074707        0.0    0.000000      -99.000000       1.0         11464.074707                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:28:14]  --------------------------------------------------------------------------------
[09/28 12:28:14]  Iteration: 68 (4 solution, 63 counterexamples)
[09/28 12:28:23]  Generator returned sat in 6.601797 secs.
[09/28 12:28:23]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:28:29]  Improved gap from 0.0 to 28.125
[09/28 12:28:29]  Improved number of small numbers from 65 to 76 out of a max of 111
[09/28 12:28:29]  Verifer returned sat in 6.568738 secs.
[09/28 12:28:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10661.018613   10261.018555  597.087402  10661.018613    0.002500  10261.018555        0.0  400.000059       400.00000       5.0         10261.018555                -1.0                -1
1   10661.018613   10361.018613  597.087402  10661.018613   25.237305  10361.018613        0.0  300.000000       300.00000       5.0         10261.018555                 0.0             False
2   10661.018613   10461.018555  597.087402  10661.018613   25.237305  10461.018555        0.0  200.000059       200.00000       6.0         10261.018555                 0.0             False
3   10661.018613   10553.271113  597.087402  10661.018613   25.237500  10553.271113        0.0  107.747500       100.00000       7.0         10261.018555                 0.0             False
4   10661.018613   10571.927363  597.087402  10661.018613  107.745000  10571.927363        0.0   89.091250         0.00000       8.0         10261.018555                 0.0             False
5   10661.018613   10661.018613  668.962402  10661.018613    0.010000  10661.018613        0.0    0.000000       -28.12500       7.0         10661.018613                 1.0              True
6   10713.897363   10699.778613  668.962402  10713.897363   52.878750  10699.778613        0.0   14.118750       -75.24625       1.0         10661.018613                 0.0             False
7   10789.143613   10789.143613  740.837402  10789.143613   89.365000  10789.143613        0.0    0.000000       -28.12500       1.0         10661.018613                 0.0             False
8   10896.888613   10817.268799  740.837402  10896.888613  107.745000  10817.268799        0.0   79.619814       -20.38000       1.0         10661.018613                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:28:30]  --------------------------------------------------------------------------------
[09/28 12:28:30]  Iteration: 69 (4 solution, 64 counterexamples)
[09/28 12:28:37]  Generator returned sat in 5.110012 secs.
[09/28 12:28:37]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:28:43]  Improved gap from 0.0 to 20.3125
[09/28 12:28:43]  Improved number of small numbers from 60 to 74 out of a max of 111
[09/28 12:28:43]  Verifer returned sat in 6.728887 secs.
[09/28 12:28:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9769.150823    9568.969971  1501.811035   9769.150823    0.020020   9568.969971        0.0  200.180852      200.180664       4.0          9568.969971                -1.0                -1
1    9769.150823    9648.838323  1501.811035   9769.150823    0.020020   9648.838323        0.0  120.312500      100.180664       5.0          9568.969971                 1.0             False
2    9769.150823    9768.970020  1501.811035   9769.150823    0.020264   9768.970020        0.0    0.180804        0.180664       3.0          9568.969971                 1.0              True
3    9769.150823    9769.150823  1581.317871   9769.150823    0.020264   9769.150823        0.0    0.000000      -20.312500       4.0          9568.969971                 0.0             False
4    9889.463323    9797.577162  1581.317871   9889.463323  120.312500   9797.577162        0.0   91.886161        0.000000       1.0          9568.969971                 1.0              True
5    9889.463323    9889.463323  1661.005371   9889.463323   73.459821   9889.463323        0.0    0.000000      -20.312500       2.0          9889.463323                 0.0             False
6    9985.349484    9909.775823  1661.005371   9985.349484   95.886161   9909.775823        0.0   75.573661      -24.426339       1.0          9889.463323                 0.0             False
7   10012.818234   10012.818234  1737.650391  10012.818234  103.042411  10012.818234        0.0    0.000000      -20.312570       1.0          9889.463323                 0.0             False
8   10125.016895   10033.130859  1737.650391  10125.016895  112.198661  10033.130859        0.0   91.886035       -8.113909       1.0          9889.463323                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:28:44]  --------------------------------------------------------------------------------
[09/28 12:28:44]  Iteration: 70 (4 solution, 65 counterexamples)
[09/28 12:28:56]  Generator returned sat in 10.305917 secs.
[09/28 12:28:56]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:29:00]  Improved gap from 0.02923583984375 to 17.1875
[09/28 12:29:00]  Improved number of small numbers from 44 to 111 out of a max of 111
[09/28 12:29:00]  Verifer returned sat in 3.841226 secs.
[09/28 12:29:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9855.296387    9545.609131  1425.172119   9855.296387    0.058350   9545.609131        0.0  309.687256      209.687500       5.0          9545.609131                -1.0                -1
1    9855.296387    9645.608887  1425.172119   9855.296387    0.058594   9645.608887        0.0  209.687500      109.687500       5.0          9545.609131                 1.0             False
2    9855.296387    9837.799805  1425.172119   9855.296387    0.029297   9837.799805        0.0   17.496582        9.687500       3.0          9855.296387                 1.0              True
3    9855.296387    9855.296387  1498.209229   9855.296387   17.467773   9855.296387        0.0    0.000000      -17.275391       4.0          9855.296387                 0.0             False
4    9968.874023    9889.788574  1498.209229   9968.874023  113.577637   9889.788574        0.0   79.085449       -3.697754       1.0          9855.296387                 1.0             False
5    9972.571777    9972.571777  1581.021729   9972.571777   82.783203   9972.571777        0.0    0.000000      -17.187500       1.0          9972.571777                 0.0             False
6   10072.601074    9989.759277  1581.021729  10072.601074  100.029297   9989.759277        0.0   82.841797      -17.158203       1.0          9972.571777                 0.0             False
7   10089.759277   10089.759277  1651.513916  10089.759277  100.000000  10089.759277        0.0    0.000000      -29.507812       1.0         10089.759277                 0.0             False
8   10198.353027   10119.267578  1651.513916  10198.353027  108.593750  10119.267578        0.0   79.085449      -20.914062       1.0         10089.759277                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:29:00]  --------------------------------------------------------------------------------
[09/28 12:29:00]  Iteration: 71 (4 solution, 66 counterexamples)
[09/28 12:29:08]  Generator returned sat in 5.358214 secs.
[09/28 12:29:08]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:29:14]  Improved gap from 17.1875 to 28.125
[09/28 12:29:16]  Improved number of small numbers from 40 to 70 out of a max of 111
[09/28 12:29:16]  Verifer returned sat in 7.807985 secs.
[09/28 12:29:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9909.041748    9509.070557   899.150879   9909.041748    0.029053   9509.070557        0.0  399.971191      399.971123       5.0          9509.070557                -1.0                -1
1    9909.041748    9583.937691   899.150879   9909.041748    0.029053   9583.937691        0.0  325.104057      299.971123       5.0          9509.070557                 0.0             False
2    9909.041748    9609.070801   899.150879   9909.041748    0.029053   9609.070801        0.0  299.970947      199.971123       6.0          9509.070557                 0.0             False
3    9909.041748    9801.349983   899.150879   9909.041748    0.029236   9801.349983        0.0  107.691765       99.971123       7.0          9509.070557                 0.0             False
4    9909.070747    9820.606545   899.150879   9909.070747  107.720764   9820.606545        0.0   88.464203        0.000122       8.0          9509.070557                 0.0             False
5    9909.070747    9909.070747   971.025757   9909.070747    1.000000   9909.070747        0.0    0.000000      -28.125000       2.0          9909.070747                 1.0              True
6    9962.431130    9947.879219   971.025757   9962.431130   53.360382   9947.879219        0.0   14.551910      -74.764618       1.0          9909.070747                 0.0             False
7   10037.195747   10037.195747  1042.900757  10037.195747   89.316528  10037.195747        0.0    0.000000      -28.125000       1.0          9909.070747                 0.0             False
8   10144.916512   10065.320801  1042.900757  10144.916512  107.720764  10065.320801        0.0   79.595711      -20.404236       1.0          9909.070747                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:29:16]  --------------------------------------------------------------------------------
[09/28 12:29:16]  Iteration: 72 (4 solution, 67 counterexamples)
[09/28 12:29:24]  Generator returned sat in 6.241748 secs.
[09/28 12:29:24]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:29:26]  Improved gap from 0.0 to 100
[09/28 12:29:26]  Improved number of small numbers from 101 to 111 out of a max of 111
[09/28 12:29:26]  Verifer returned sat in 1.689819 secs.
[09/28 12:29:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10409.158203    9609.099609  799.121826  10409.158203    0.058350   9609.099609        0.0  800.058594      800.058350       3.0          9609.099609                -1.0                -1
1   10409.158203    9709.099854  799.121826  10409.158203    0.058350   9709.099854        0.0  700.058350      700.058350       4.0          9609.099609                 0.0             False
2   10409.158203    9809.041504  799.121826  10409.158203  497.999756   9809.041504        0.0  600.116699      600.058350       5.0          9609.099609                 0.0             False
3   10409.158203    9809.099854  799.121826  10409.158203  498.000000   9809.099854        0.0  600.058350      500.058350       6.0          9609.099609                 0.0             False
4   10409.158203    9909.099854  799.121826  10409.158203  499.000000   9909.099854        0.0  500.058350      400.058350       7.0          9609.099609                 1.0              True
5   10409.158203   10009.099854  799.121826  10409.158203  500.000000  10009.099854        0.0  400.058350      300.058350       7.0          9609.099609                 1.0              True
6   10510.099854   10109.099854  799.121826  10510.099854  501.000000  10109.099854        0.0  401.000000      301.000000       7.0          9609.099609                 1.0              True
7   10611.099854   10309.099609  799.121826  10611.099854  502.000000  10309.099609        0.0  302.000244      302.000000       8.0          9609.099609                 1.0              True
8   10812.099609   10312.041260  799.121826  10812.099609  503.000000  10312.041260        0.0  500.058350      402.999756       9.0          9609.099609                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:29:26]  --------------------------------------------------------------------------------
[09/28 12:29:26]  Iteration: 73 (4 solution, 68 counterexamples)
[09/28 12:29:29]  Generator returned sat in 0.948820 secs.
[09/28 12:29:29]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:29:36]  Improved gap from 0.0 to 28.125
[09/28 12:29:36]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:29:36]  Verifer returned sat in 7.121869 secs.
[09/28 12:29:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10196.428711    9696.428955  727.246826  10196.428711    0.029053   9696.428955        0.0  499.999756      400.000000       5.0          9696.428955                -1.0                -1
1   10196.428711    9871.353760  727.246826  10196.428711    0.029053   9871.353760        0.0  325.074951      300.000000       4.0          9696.428955                 0.0             False
2   10196.428711    9996.428711  727.246826  10196.428711    0.029053   9996.428711        0.0  200.000000      200.000000       4.0          9696.428955                 0.0             False
3   10196.428711   10088.708008  727.246826  10196.428711    0.029053  10088.708008        0.0  107.720703      100.000000       5.0          9696.428955                 0.0             False
4   10196.428711   10108.139160  727.246826  10196.428711  107.691650  10108.139160        0.0   88.289551        0.000000       6.0          9696.428955                 0.0             False
5   10196.428711   10196.428711  799.121826  10196.428711    1.000000  10196.428711        0.0    0.000000      -28.125000       7.0         10196.428711                 1.0              True
6   10249.789062   10235.295410  799.121826  10249.789062   53.360352  10235.295410        0.0   14.493652      -74.764648       1.0         10196.428711                 1.0             False
7   10324.553711   10324.553711  870.996582  10324.553711   89.258301  10324.553711        0.0    0.000000      -28.125244       1.0         10196.428711                 0.0             False
8   10432.245361   10352.678955  870.996582  10432.245361  107.691650  10352.678955        0.0   79.566406      -20.433594       1.0         10196.428711                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:29:37]  --------------------------------------------------------------------------------
[09/28 12:29:37]  Iteration: 74 (4 solution, 69 counterexamples)
[09/28 12:29:42]  Generator returned sat in 3.192968 secs.
[09/28 12:29:42]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:29:49]  Improved gap from 0.0 to 28.125
[09/28 12:29:49]  Improved number of small numbers from 55 to 111 out of a max of 111
[09/28 12:29:49]  Verifer returned sat in 6.722387 secs.
[09/28 12:29:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9772.140381    9372.140381  727.246826   9772.140381    0.058105  9372.140381        0.0  400.000000      400.000000       5.0          9372.140381                -1.0                -1
1    9772.140381    9472.140381  727.246826   9772.140381   24.958740  9472.140381        0.0  300.000000      300.000000       5.0          9372.140381                 0.0             False
2    9772.140381    9472.140381  727.246826   9772.140381   24.958984  9472.140381        0.0  300.000000      200.000000       5.0          9372.140381                 0.0             False
3    9772.140381    9664.448486  727.246826   9772.140381   24.958984  9664.448486        0.0  107.691895      100.000000       6.0          9372.140381                 0.0             False
4    9772.140381    9684.185059  727.246826   9772.140381  107.633545  9684.185059        0.0   87.955322        0.000000       7.0          9372.140381                 0.0             False
5    9772.140381    9772.140381  799.121826   9772.140381    1.000000  9772.140381        0.0    0.000000      -28.125000       6.0          9772.140381                 1.0              True
6    9825.486328    9811.123291  799.121826   9825.486328   53.345947  9811.123291        0.0   14.363037      -74.779053       1.0          9772.140381                 0.0             False
7    9900.265381    9900.265381  870.996826   9900.265381   89.142090  9900.265381        0.0    0.000000      -28.125000       1.0          9772.140381                 0.0             False
8   10007.898926    9928.390625  870.996826  10007.898926  107.633545  9928.390625        0.0   79.508301      -20.491455       1.0          9772.140381                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:29:49]  --------------------------------------------------------------------------------
[09/28 12:29:49]  Iteration: 75 (4 solution, 70 counterexamples)
[09/28 12:29:56]  Generator returned sat in 5.018211 secs.
[09/28 12:29:56]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:29:57]  Improved gap from 0.0 to 0
[09/28 12:29:57]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:29:57]  Verifer returned sat in 1.089936 secs.
[09/28 12:29:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10853.763184   10440.391357  727.246826  10853.763184    0.057861  10440.391357        0.0  413.371826      413.343018       2.0         10440.391357                -1.0                -1
1   10853.763184   10440.420410  727.246826  10853.763184    0.999756  10440.420410        0.0  413.342773      313.343018       2.0         10440.391357                 0.0             False
2   10853.763184   10540.420166  727.246826  10853.763184    0.999756  10540.420166        0.0  313.343018      213.343018       3.0         10440.391357                 0.0             False
3   10853.763184   10678.449219  727.246826  10853.763184    0.999756  10678.449219        0.0  175.313965      113.343018       4.0         10440.391357                 0.0             False
4   10853.763184   10750.001709  727.246826  10853.763184    1.000000  10750.001709        0.0  103.761475       13.343018       5.0         10440.391357                 0.0             False
5   10853.792480   10853.763184  727.246826  10853.792480  103.790771  10853.763184        0.0    0.029297      -86.627686       6.0         10440.391357                 1.0              True
6   10940.420166   10940.420166  826.246826  10940.420166   86.656982  10940.420166        0.0    0.000000       -1.000000       1.0         10940.420166                 1.0              True
7   10941.420166   10941.420166  925.246826  10941.420166    1.000000  10941.420166        0.0    0.000000       -1.000000       1.0         10941.420166                 0.0             False
8   10942.420166   10942.420166  925.246826  10942.420166    1.000000  10942.420166        0.0    0.000000     -100.000000       1.0         10941.420166                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:29:58]  --------------------------------------------------------------------------------
[09/28 12:29:58]  Iteration: 76 (4 solution, 71 counterexamples)
[09/28 12:30:03]  Generator returned sat in 3.250912 secs.
[09/28 12:30:03]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:30:04]  Improved gap from 0.0 to 0
[09/28 12:30:04]  Improved number of small numbers from 49 to 111 out of a max of 111
[09/28 12:30:04]  Verifer returned sat in 1.079519 secs.
[09/28 12:30:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t   cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11350.616943   10850.097656  317.569336  11350.616943   0.029053  10850.097656  199.990234  300.529053      300.529053       3.0         10850.097656                -1.0                -1
1   11350.616943   10950.097656  317.569336  11350.616943   0.029053  10950.097656  199.990234  200.529053      200.529053       3.0         10850.097656                 0.0             False
2   11350.616943   11050.097656  317.569336  11350.616943   0.029053  11050.097656  199.990234  100.529053      100.529053       4.0         10850.097656                 0.0             False
3   11350.616943   11149.597900  317.569336  11350.616943   0.029053  11149.597900  199.990234    1.028809        0.529053       5.0         10850.097656                 0.0             False
4   11350.616943   11150.597656  317.569336  11350.616943   1.000000  11150.597656  199.990234    0.029053      -99.470947       6.0         10850.097656                 0.0             False
5   11450.087891   11250.097656  417.569092  11450.087891  99.500000  11250.097656  199.990234    0.000000       -0.000244       1.0         10850.097656                 1.0              True
6   11451.087891   11251.097656  516.569336  11451.087891   1.000000  11251.097656  199.990234    0.000000        0.000000       1.0         11251.097656                 0.0             False
7   11452.087891   11252.097656  615.098145  11452.087891   1.000000  11252.097656  199.990234    0.000000       -0.471191       1.0         11251.097656                 0.0             False
8   11453.087891   11253.068848  615.098145  11453.087891   1.000000  11253.068848  199.990234    0.028809      -99.471191       1.0         11251.097656                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:05]  --------------------------------------------------------------------------------
[09/28 12:30:05]  Iteration: 77 (4 solution, 72 counterexamples)
[09/28 12:30:09]  Generator returned sat in 1.787644 secs.
[09/28 12:30:09]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:30:09]  Improved gap from 0.0 to 0
[09/28 12:30:10]  Improved number of small numbers from 55 to 111 out of a max of 111
[09/28 12:30:10]  Verifer returned sat in 1.066819 secs.
[09/28 12:30:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t   cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12351.434082   11850.943848  317.569336  12351.434082   0.057861  11850.943848  199.990234  300.500000      300.500000       8.0         11850.943848                -1.0                -1
1   12351.434082   11950.943848  317.569336  12351.434082  99.557861  11950.943848  199.990234  200.500000      200.500000       8.0         11850.943848                 1.0             False
2   12351.434082   12050.943848  317.569336  12351.434082  99.557861  12050.943848  199.990234  100.500000      100.500000       6.0         11850.943848                 1.0              True
3   12351.434082   12051.501709  317.569336  12351.434082  99.557861  12051.501709  199.990234   99.942139        0.500000       7.0         11850.943848                 0.0             False
4   12351.434082   12151.443848  317.569336  12351.434082  99.557861  12151.443848  199.990234    0.000000      -99.500000       8.0         11850.943848                 1.0              True
5   12450.934082   12250.943848  417.069092  12450.934082  99.500000  12250.943848  199.990234    0.000000       -0.500244       1.0         12250.943848                 1.0              True
6   12451.934082   12251.943848  515.569336  12451.934082   1.000000  12251.943848  199.990234    0.000000       -1.000000       1.0         12251.943848                 0.0             False
7   12452.934082   12252.943848  615.069092  12452.934082   1.000000  12252.943848  199.990234    0.000000       -0.500244       1.0         12251.943848                 0.0             False
8   12453.934082   12253.943848  615.069092  12453.934082   1.000000  12253.943848  199.990234    0.000000      -99.500244       1.0         12251.943848                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:10]  --------------------------------------------------------------------------------
[09/28 12:30:10]  Iteration: 78 (4 solution, 73 counterexamples)
[09/28 12:30:14]  Generator returned sat in 1.602930 secs.
[09/28 12:30:14]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:30:14]  Improved gap from 1.0 to 0
[09/28 12:30:15]  Improved number of small numbers from 56 to 111 out of a max of 111
[09/28 12:30:15]  Verifer returned sat in 0.633177 secs.
[09/28 12:30:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12636.438965   11936.448730  -13.683105  12636.438965      1.00  11936.448730  199.98999  500.000244      500.000000       8.0         11936.448730                -1.0                -1
1   12636.438965   12036.448975  -13.683105  12636.438965      1.00  12036.448975  199.98999  400.000000      400.000000       8.0         11936.448730                 1.0             False
2   12636.438965   12136.448975  -13.683105  12636.438965      1.00  12136.448975  199.98999  300.000000      300.000000       5.0         11936.448730                 1.0              True
3   12636.438965   12236.448730  -13.683105  12636.438965      1.00  12236.448730  199.98999  200.000244      200.000000       5.0         11936.448730                 0.0             False
4   12636.438965   12336.446533  -13.683105  12636.438965      1.00  12336.446533  199.98999  100.002441      100.000000       6.0         11936.448730                 0.0             False
5   12636.438965   12336.448975  -13.683105  12636.438965      1.00  12336.448975  199.98999  100.000000        0.000000       7.0         11936.448730                 0.0             False
6   12636.438965   12436.448975   86.316650  12636.438965      0.01  12436.448975  199.98999    0.000000       -0.000244       8.0         12436.448975                 1.0              True
7   12637.438965   12437.448975  185.316895  12637.438965      1.00  12437.448975  199.98999    0.000000        0.000000       1.0         12436.448975                 1.0             False
8   12638.438965   12437.451416  185.316895  12638.438965      1.00  12437.451416  199.98999    0.997559      -99.000000       1.0         12436.448975                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:15]  --------------------------------------------------------------------------------
[09/28 12:30:15]  Iteration: 79 (4 solution, 74 counterexamples)
[09/28 12:30:19]  Generator returned sat in 2.257275 secs.
[09/28 12:30:19]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:30:20]  Improved gap from 0.0 to 0
[09/28 12:30:21]  Improved number of small numbers from 52 to 111 out of a max of 111
[09/28 12:30:21]  Verifer returned sat in 1.124354 secs.
[09/28 12:30:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13829.057861   13229.039062  -13.683105  13829.057861    0.029053  13229.039062  199.98999  400.028809      400.028809       4.0         13229.039062                -1.0                -1
1   13829.057861   13326.981201  -13.683105  13829.057861    0.029053  13326.981201  199.98999  302.086670      300.028809       5.0         13229.039062                 0.0             False
2   13829.057861   13426.981201  -13.683105  13829.057861    0.029053  13426.981201  199.98999  202.086670      200.028809       6.0         13229.039062                 0.0             False
3   13829.057861   13529.038818  -13.683105  13829.057861    0.029053  13529.038818  199.98999  100.029053      100.028809       7.0         13229.039062                 0.0             False
4   13829.057861   13629.038818  -13.683105  13829.057861  100.028809  13629.038818  199.98999    0.029053        0.028809       8.0         13229.039062                 1.0              True
5   13929.057617   13629.067627  -13.683105  13929.057617  100.028809  13629.067627  199.98999  100.000000        0.028564       8.0         13229.039062                 1.0              True
6   13929.057617   13729.067627   86.288086  13929.057617   49.014404  13729.067627  199.98999    0.000000       -0.000244       2.0         13729.067627                 1.0              True
7   13930.057617   13730.067627  185.287842  13930.057617    1.000000  13730.067627  199.98999    0.000000       -0.000488       1.0         13730.067627                 0.0             False
8   13931.057617   13731.038818  185.287842  13931.057617    1.000000  13731.038818  199.98999    0.028809      -99.000488       1.0         13730.067627                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:21]  --------------------------------------------------------------------------------
[09/28 12:30:21]  Iteration: 80 (4 solution, 75 counterexamples)
[09/28 12:30:26]  Generator returned sat in 2.724219 secs.
[09/28 12:30:26]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:30:28]  Improved gap from 0.0 to 0
[09/28 12:30:28]  Improved number of small numbers from 56 to 111 out of a max of 111
[09/28 12:30:28]  Verifer returned sat in 2.135705 secs.
[09/28 12:30:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13573.405762   12973.415771 -490.412354  13573.405762    0.057373  12973.415771  199.98999  400.000000      400.000000       5.0         12973.415771                -1.0                -1
1   13573.405762   13073.415771 -490.412354  13573.405762    0.057617  13073.415771  199.98999  300.000000      300.000000       5.0         12973.415771                 0.0             False
2   13573.405762   13171.415771 -490.412354  13573.405762    0.057617  13171.415771  199.98999  202.000000      200.000000       6.0         12973.415771                 0.0             False
3   13573.405762   13271.531006 -490.412354  13573.405762    3.884766  13271.531006  199.98999  101.884766      100.000000       7.0         12973.415771                 0.0             False
4   13573.405762   13273.415771 -490.412354  13573.405762  100.000000  13273.415771  199.98999  100.000000        0.000000       8.0         12973.415771                 1.0              True
5   13573.405762   13373.415771 -490.354736  13573.405762  100.000000  13373.415771  199.98999    0.000000      -99.942383       8.0         12973.415771                 1.0              True
6   13673.348145   13473.358154 -390.354980  13673.348145   99.942383  13473.358154  199.98999    0.000000       -0.000244       1.0         13473.358154                 1.0              True
7   13674.348145   13474.358154 -292.354736  13674.348145    1.000000  13474.358154  199.98999    0.000000       -1.000000       1.0         13474.358154                 0.0             False
8   13675.348145   13475.358154 -292.354736  13675.348145    1.000000  13475.358154  199.98999    0.000000     -100.000000       1.0         13474.358154                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:29]  --------------------------------------------------------------------------------
[09/28 12:30:29]  Iteration: 81 (4 solution, 76 counterexamples)
[09/28 12:30:33]  Generator returned sat in 2.091154 secs.
[09/28 12:30:33]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:30:33]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:30:33]  Verifer returned sat in 0.371666 secs.
[09/28 12:30:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13928.434570   13128.376953 -646.315918  13928.434570    0.057617  13128.376953        0.0  800.057617      800.000000       5.0         13128.376953                -1.0                -1
1   13928.434570   13128.434570 -646.315918  13928.434570    0.057617  13128.434570        0.0  800.000000      700.000000       6.0         13128.376953                 0.0             False
2   13928.434570   13228.434570 -646.315918  13928.434570    0.057617  13228.434570        0.0  700.000000      600.000000       7.0         13128.376953                 0.0             False
3   13928.434570   13422.665039 -646.315918  13928.434570  105.000000  13422.665039        0.0  505.769531      500.000000       8.0         13128.376953                 0.0             False
4   13928.434570   13528.434570 -646.315918  13928.434570  251.115234  13528.434570        0.0  400.000000      400.000000       9.0         13128.376953                 1.0              True
5   13928.549805   13528.492188 -646.315918  13928.549805  400.115234  13528.492188        0.0  400.057617      300.115234       9.0         13128.376953                 1.0              True
6   13980.520996   13628.434570 -646.315918  13980.520996  452.028809  13628.434570        0.0  352.086426      252.086426       9.0         13128.376953                 1.0              True
7   14129.463379   13728.434570 -646.315918  14129.463379  501.028809  13728.434570        0.0  401.028809      301.028809       9.0         13128.376953                 1.0              True
8   14328.434570   13828.434570 -646.315918  14328.434570  600.000000  13828.434570        0.0  500.000000      400.000000       9.0         13128.376953                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:34]  --------------------------------------------------------------------------------
[09/28 12:30:34]  Iteration: 82 (4 solution, 77 counterexamples)
[09/28 12:30:40]  Generator returned sat in 4.275506 secs.
[09/28 12:30:40]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)[0m
[09/28 12:30:49]  Improved gap from 0.01 to 18.75
[09/28 12:30:49]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:30:49]  Verifer returned sat in 8.385227 secs.
[09/28 12:30:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13364.606445   13192.165039 -867.536621  13364.606445  172.441406  13192.165039        0.0  172.441406       72.441406       9.0         13192.165039                -1.0                -1
1   13364.606445   13301.088867 -867.536621  13364.606445  172.383789  13301.088867        0.0   63.517578      -27.558594       2.0         13364.606445                 1.0             False
2   13473.415039   13473.415039 -867.536621  13473.415039  172.326172  13473.415039        0.0    0.000000      -18.750000       1.0         13473.415039                 0.0             False
3   13507.001953   13507.001953 -801.123535  13507.001953   33.586914  13507.001953        0.0    0.000000      -18.750000       1.0         13507.001953                 0.0             False
4   13625.751953   13528.434570 -801.123535  13625.751953  118.750000  13528.434570        0.0   97.317383        0.000000       1.0         13507.001953                 0.0             False
5   13625.751953   13625.751953 -719.873535  13625.751953   85.884766  13625.751953        0.0    0.000000      -18.750000       2.0         13625.751953                 0.0             False
6   13727.069336   13644.501953 -719.873535  13727.069336  101.317383  13644.501953        0.0   82.567383      -17.432617       1.0         13625.751953                 0.0             False
7   13752.194336   13752.194336 -646.315918  13752.194336  107.692383  13752.194336        0.0    0.000000      -18.750000       1.0         13625.751953                 0.0             False
8   13868.261719   13770.944336 -646.315918  13868.261719  116.067383  13770.944336        0.0   97.317383       -2.682617       1.0         13625.751953                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:49]  --------------------------------------------------------------------------------
[09/28 12:30:49]  Iteration: 83 (4 solution, 78 counterexamples)
[09/28 12:30:57]  Generator returned sat in 5.690276 secs.
[09/28 12:30:57]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)[0m
[09/28 12:30:57]  Improved gap from 0.0 to 100
[09/28 12:30:57]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:30:57]  Verifer returned sat in 0.337059 secs.
[09/28 12:30:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13364.606445   12464.491211 -39.920654  13364.606445    0.057617  12464.491211        0.0  900.115234      900.057617       9.0         12464.491211                -1.0                -1
1   13364.606445   12464.548828 -39.920654  13364.606445  600.115234  12464.548828        0.0  900.057617      800.057617       4.0         12464.491211                 1.0             False
2   13364.606445   12664.491211 -39.920654  13364.606445  600.115234  12664.491211        0.0  700.115234      700.057617       4.0         12464.491211                 1.0              True
3   13364.606445   12664.548828 -39.920654  13364.606445  600.057617  12664.548828        0.0  700.057617      600.057617       5.0         13364.606445                 1.0              True
4   13364.606445   12764.548828 -39.920654  13364.606445  600.057617  12764.548828        0.0  600.057617      500.057617       6.0         13364.606445                 1.0             False
5   13364.606445   12964.548828 -39.920654  13364.606445  600.057617  12964.548828        0.0  400.057617      400.057617       7.0         13364.606445                 1.0             False
6   13564.606445   12964.548828 -39.920654  13564.606445  600.057617  12964.548828        0.0  600.057617      500.057617       7.0         13364.606445                 1.0             False
7   13564.606445   13164.548828 -39.920654  13564.606445  600.057617  13164.548828        0.0  400.057617      400.057617       8.0         13364.606445                 1.0             False
8   13764.606445   13164.548828 -39.920654  13764.606445  600.057617  13164.548828        0.0  600.057617      500.057617       8.0         13364.606445                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:30:58]  --------------------------------------------------------------------------------
[09/28 12:30:58]  Iteration: 84 (4 solution, 79 counterexamples)
[09/28 12:31:04]  Generator returned sat in 3.457071 secs.
[09/28 12:31:04]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:04]  Improved number of small numbers from 106 to 110 out of a max of 110
[09/28 12:31:04]  Verifer returned sat in 0.344571 secs.
[09/28 12:31:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13165.548584   12314.577393 -39.920898  13165.548584    0.028564  12314.577393  200.028809  650.942383      650.942383       8.0         12314.577393                -1.0                -1
1   13165.548584   12347.968506 -39.920898  13165.548584    0.028564  12347.968506  200.028809  617.551270      550.942383       6.0         12314.577393                 0.0             False
2   13165.548584   12414.577393 -39.920898  13165.548584  201.000000  12414.577393  200.028809  550.942383      450.942383       6.0         12314.577393                 0.0             False
3   13165.548584   12547.968506 -39.920898  13165.548584  201.000000  12547.968506  200.028809  417.551270      350.942383       7.0         12314.577393                 0.0             False
4   13165.548584   12614.577393 -39.920898  13165.548584  201.000000  12614.577393  200.028809  350.942383      250.942383       8.0         12314.577393                 0.0             False
5   13165.548584   12714.577393 -39.920898  13165.548584  201.000000  12714.577393  200.028809  250.942383      150.942383       9.0         12314.577393                 0.0             False
6   13165.548584   12914.577393 -39.920898  13165.548584  250.913330  12914.577393  200.028809   50.942383       50.942383       9.0         12314.577393                 1.0              True
7   13565.606201   12965.548584 -39.920898  13565.606201  451.000000  12965.548584  200.028809  400.028809      351.000000       1.0         12314.577393                 1.0              True
8   13565.606201   13014.577637 -39.920898  13565.606201  251.971191  13014.577637  200.028809  350.999756      251.000000       2.0         13365.577393                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:05]  --------------------------------------------------------------------------------
[09/28 12:31:05]  Iteration: 85 (4 solution, 80 counterexamples)
[09/28 12:31:08]  Generator returned sat in 0.956699 secs.
[09/28 12:31:08]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:08]  Improved number of small numbers from 89 to 103 out of a max of 110
[09/28 12:31:08]  Verifer returned sat in 0.511792 secs.
[09/28 12:31:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13116.534668   12314.577393 -39.921143  13116.534668    0.028564  12314.577393  200.028809  601.928467      601.928467       8.0         12314.577393                -1.0                -1
1   13116.534668   12414.163086 -39.921143  13116.534668    0.028564  12414.163086  200.028809  502.342773      501.928467       6.0         12314.577393                 0.0             False
2   13116.534668   12414.577393 -39.921143  13116.534668  201.000000  12414.577393  200.028809  501.928467      401.928467       6.0         12314.577393                 0.0             False
3   13116.534668   12614.163086 -39.921143  13116.534668  201.000000  12614.163086  200.028809  302.342773      301.928467       7.0         12314.577393                 0.0             False
4   13116.534668   12614.577393 -39.921143  13116.534668  201.000000  12614.577393  200.028809  301.928467      201.928467       8.0         12314.577393                 0.0             False
5   13116.534668   12714.577393 -39.921143  13116.534668  201.000000  12714.577393  200.028809  201.928467      101.928467       9.0         12314.577393                 0.0             False
6   13116.534668   12914.577393 -39.921143  13116.534668  201.914307  12914.577393  200.028809    1.928467        1.928467       9.0         12314.577393                 1.0              True
7   13516.563354   12916.520020 -39.921143  13516.563354  401.957153  12916.520020  200.028809  400.014526      301.957153       1.0         12314.577393                 1.0              True
8   13516.563354   13014.605957 -39.921143  13516.563354  202.942627  13014.605957  200.028809  301.928589      201.957153       2.0         13316.534546                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:09]  --------------------------------------------------------------------------------
[09/28 12:31:09]  Iteration: 86 (4 solution, 81 counterexamples)
[09/28 12:31:17]  Generator returned sat in 5.428685 secs.
[09/28 12:31:17]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:17]  Improved gap from 0.0 to 0
[09/28 12:31:17]  Improved number of small numbers from 60 to 111 out of a max of 111
[09/28 12:31:17]  Verifer returned sat in 0.531080 secs.
[09/28 12:31:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12714.509766   12314.567627 -238.921387  12714.509766  300.086182  12314.567627  200.028564  199.913574       99.913574       7.0         12314.567627                -1.0                -1
1   12814.653564   12514.510010 -238.921387  12814.653564  300.057373  12514.510010  200.028564  100.114990      100.057373       1.0         12614.625000                 1.0             False
2   13014.567383   12614.567627 -238.921387  13014.567383  300.028809  12614.567627  200.028564  199.971191      199.971191       2.0         12814.538818                 0.0             False
3   13114.596191   12714.567383 -238.921387  13114.596191  300.000000  12714.567383  200.028564  200.000244      200.000000       2.0         12914.567627                 0.0             False
4   13114.596191   12814.567383 -238.921387  13114.596191    1.000000  12814.567383  200.028564  100.000244      100.000000       2.0         12914.567627                 0.0             False
5   13114.596191   12913.538818 -238.921387  13114.596191    1.000000  12913.538818  200.028564    1.028809        0.000000       3.0         12914.567627                 0.0             False
6   13114.596191   12914.567627 -139.921387  13114.596191    1.000000  12914.567627  200.028564    0.000000       -1.000000       4.0         12914.567627                 0.0             False
7   13115.596191   12915.567627  -39.921387  13115.596191    1.000000  12915.567627  200.028564    0.000000        0.000000       1.0         12914.567627                 0.0             False
8   13116.596191   12915.595947  -39.921387  13116.596191    1.000000  12915.595947  200.028564    0.971680      -99.000000       1.0         12914.567627                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:18]  --------------------------------------------------------------------------------
[09/28 12:31:18]  Iteration: 87 (4 solution, 82 counterexamples)
[09/28 12:31:22]  Generator returned sat in 2.414205 secs.
[09/28 12:31:23]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:23]  Improved gap from 0.0 to 12.5
[09/28 12:31:24]  Improved number of small numbers from 51 to 111 out of a max of 111
[09/28 12:31:24]  Verifer returned sat in 1.001669 secs.
[09/28 12:31:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13114.134033   12514.105469 -176.930908  13114.134033    0.028564  12514.105469  200.028564  400.000000      400.000000       7.0         12514.105469                -1.0                -1
1   13114.134033   12614.105469 -176.930908  13114.134033    0.028564  12614.105469  200.028564  300.000000      300.000000       2.0         12514.105469                 1.0             False
2   13114.134033   12615.548340 -176.930908  13114.134033    0.028564  12615.548340  200.028564  298.557129      200.000000       3.0         12514.105469                 0.0             False
3   13114.134033   12813.124512 -176.930908  13114.134033    0.028809  12813.124512  200.028564  100.980957      100.000000       4.0         12514.105469                 0.0             False
4   13114.134033   12814.567383 -176.930908  13114.134033   99.509521  12814.567383  200.028564   99.538086        0.000000       5.0         12514.105469                 1.0              True
5   13114.134033   12914.105469 -127.421387  13114.134033   99.509521  12914.105469  200.028564    0.000000      -50.490479       6.0         12514.105469                 1.0              True
6   13164.624512   12964.595947  -39.921387  13164.624512   50.490479  12964.595947  200.028564    0.000000      -12.500000       1.0         12964.595947                 1.0              True
7   13315.653076   12977.095947  -39.921387  13315.653076  151.028564  12977.095947  200.028564  138.528564       38.528564       1.0         12964.595947                 0.0             False
8   13315.653076   13077.096191  -39.921387  13315.653076   63.990479  13077.096191  200.028564   38.528320      -61.471436       2.0         13115.624512                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:24]  --------------------------------------------------------------------------------
[09/28 12:31:24]  Iteration: 88 (4 solution, 83 counterexamples)
[09/28 12:31:28]  Generator returned sat in 1.288218 secs.
[09/28 12:31:28]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:30]  Improved gap from 12.5 to 12.5
[09/28 12:31:30]  Improved number of small numbers from 50 to 111 out of a max of 111
[09/28 12:31:30]  Verifer returned sat in 1.871538 secs.
[09/28 12:31:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12872.175293   12271.194580 -153.484131  12872.175293    0.028564  12271.194580  200.02832  400.952393      400.952148       6.0         12271.194580                -1.0                -1
1   12872.175293   12371.194824 -153.484131  12872.175293    0.028564  12371.194824  200.02832  300.952148      300.952148       7.0         12271.194580                 0.0             False
2   12872.175293   12371.194824 -153.484131  12872.175293    0.028809  12371.194824  200.02832  300.952148      200.952148       7.0         12271.194580                 0.0             False
3   12872.175293   12571.166016 -153.484131  12872.175293    0.028809  12571.166016  200.02832  100.980957      100.952148       8.0         12271.194580                 0.0             False
4   12872.175293   12571.194824 -153.484131  12872.175293   99.985596  12571.194824  200.02832  100.952148        0.952148       9.0         12271.194580                 1.0              True
5   12872.175293   12672.146973  -66.936279  12872.175293  100.000000  12672.146973  200.02832    0.000000      -12.500000       9.0         12271.194580                 1.0              True
6   12922.665771   12722.637451  -17.426758  12922.665771   50.490479  12722.637451  200.02832    0.000000      -12.500000       1.0         12722.637451                 1.0              True
7   13075.108398   12735.137451  -17.426758  13075.108398  152.442627  12735.137451  200.02832  139.942627       39.942627       1.0         12722.637451                 0.0             False
8   13075.108398   12835.137451  -17.426758  13075.108398   63.990479  12835.137451  200.02832   39.942627      -60.057373       2.0         12875.080078                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:30]  --------------------------------------------------------------------------------
[09/28 12:31:30]  Iteration: 89 (4 solution, 84 counterexamples)
[09/28 12:31:35]  Generator returned sat in 2.385561 secs.
[09/28 12:31:35]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:35]  Improved number of small numbers from 96 to 110 out of a max of 110
[09/28 12:31:35]  Verifer returned sat in 0.222079 secs.
[09/28 12:31:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     13071.2229   12271.194336 -153.484131   13071.2229    0.028564  12271.194336  200.028076  600.000488           600.0       7.0         12271.194336                -1.0                -1
1     13071.2229   12371.194824 -153.484131   13071.2229    0.028564  12371.194824  200.028076  500.000000           500.0       7.0         12271.194336                 0.0             False
2     13071.2229   12372.209229 -153.484131   13071.2229    0.028564  12372.209229  200.028076  498.985596           400.0       8.0         12271.194336                 0.0             False
3     13071.2229   12472.208984 -153.484131   13071.2229    0.028564  12472.208984  200.028076  398.985840           300.0       9.0         12271.194336                 0.0             False
4     13071.2229   12571.194824 -153.484131   13071.2229  151.521240  12571.194824  200.028076  300.000000           200.0       8.0         12271.194336                 1.0              True
5     13071.2229   12671.194824 -153.484131   13071.2229  199.985596  12671.194824  200.028076  200.000000           100.0       8.0         12271.194336                 0.0             False
6     13071.2229   12871.194824 -153.484131   13071.2229  199.985840  12871.194824  200.028076    0.000000             0.0       9.0         12271.194336                 0.0             False
7     13521.2229   12871.208984 -153.484131   13521.2229  450.000000  12871.208984  200.028076  449.985840           350.0       1.0         12271.194336                 1.0              True
8     13521.2229   12971.194824 -153.484131   13521.2229  201.014160  12971.194824  200.028076  350.000000           250.0       2.0         13321.194824                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:36]  --------------------------------------------------------------------------------
[09/28 12:31:36]  Iteration: 90 (4 solution, 85 counterexamples)
[09/28 12:31:39]  Generator returned sat in 1.333673 secs.
[09/28 12:31:39]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:40]  Improved number of small numbers from 81 to 110 out of a max of 110
[09/28 12:31:40]  Verifer returned sat in 0.563758 secs.
[09/28 12:31:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13174.792725   12281.402588 -153.484131  13174.792725    0.028564  12281.402588  200.028076  693.362061      693.362061       7.0         12281.402588                -1.0                -1
1   13174.792725   12281.402588 -153.484131  13174.792725    0.028564  12281.402588  200.028076  693.362061      593.362061       7.0         12281.402588                 0.0             False
2   13174.792725   12415.236084 -153.484131  13174.792725    0.028809  12415.236084  200.028076  559.528564      493.362061       8.0         12281.402588                 0.0             False
3   13174.792725   12534.736084 -153.484131  13174.792725    0.028809  12534.736084  200.028076  440.028564      393.362061       8.0         12281.402588                 0.0             False
4   13174.792725   12581.402832 -153.484131  13174.792725  254.333496  12581.402832  200.028076  393.361816      293.362061       9.0         12281.402588                 0.0             False
5   13174.792725   12681.402832 -153.484131  13174.792725  293.333496  12681.402832  200.028076  293.361816      193.362061       9.0         12281.402588                 1.0              True
6   13174.792725   12881.402588 -153.484131  13174.792725  293.333496  12881.402588  200.028076   93.362061       93.362061       9.0         12281.402588                 1.0              True
7   13528.097168   12928.040771 -153.484131  13528.097168  446.666504  12928.040771  200.028076  400.028320      346.666504       9.0         12281.402588                 1.0              True
8   13598.040039   12981.402669 -153.484131  13598.040039  469.971191  12981.402669  200.028076  416.609294      316.609375       2.0         12281.402588                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:41]  --------------------------------------------------------------------------------
[09/28 12:31:41]  Iteration: 91 (4 solution, 86 counterexamples)
[09/28 12:31:44]  Generator returned sat in 1.418289 secs.
[09/28 12:31:44]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:46]  Improved gap from 0.0 to 12.5
[09/28 12:31:46]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:31:46]  Verifer returned sat in 1.533922 secs.
[09/28 12:31:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13325.083252   12925.083252 -153.484131  13325.083252    0.057129  12925.083252        0.0  400.000000      400.000000       7.0         12925.083252                -1.0                -1
1   13325.083252   13025.083252 -153.484131  13325.083252    0.057129  13025.083252        0.0  300.000000      300.000000       7.0         12925.083252                 0.0             False
2   13325.083252   13026.468994 -153.484131  13325.083252    0.057129  13026.468994        0.0  298.614258      200.000000       8.0         12925.083252                 0.0             False
3   13325.083252   13224.121338 -153.484131  13325.083252   99.519043  13224.121338        0.0  100.961914      100.000000       9.0         12925.083252                 0.0             False
4   13325.083252   13225.507080 -153.484131  13325.083252   99.519043  13225.507080        0.0   99.576172        0.000000       9.0         12925.083252                 1.0              True
5   13325.083252   13325.083252 -103.965088  13325.083252   99.519043  13325.083252        0.0    0.000000      -50.480957       9.0         12925.083252                 1.0              True
6   13375.564209   13375.564209  -16.465088  13375.564209   50.480957  13375.564209        0.0    0.000000      -12.500000       1.0         13375.564209                 1.0              True
7   13526.621338   13388.064209  -16.465088  13526.621338  151.057129  13388.064209        0.0  138.557129       38.557129       1.0         13375.564209                 0.0             False
8   13526.621338   13488.064209  -16.465088  13526.621338   63.980957  13488.064209        0.0   38.557129      -61.442871       2.0         13526.621338                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:47]  --------------------------------------------------------------------------------
[09/28 12:31:47]  Iteration: 92 (4 solution, 87 counterexamples)
[09/28 12:31:52]  Generator returned sat in 2.831672 secs.
[09/28 12:31:52]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:53]  Improved gap from 8.500244140625 to 10.9375
[09/28 12:31:53]  Improved number of small numbers from 73 to 111 out of a max of 111
[09/28 12:31:53]  Verifer returned sat in 1.470487 secs.
[09/28 12:31:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14366.101074   13965.029541 -1193.430908  14366.101074    0.028320  13965.029541        0.0  401.071533      401.071289       7.0         13965.029541                -1.0                -1
1   14366.101074   14065.029785 -1193.430908  14366.101074    0.028320  14065.029785        0.0  301.071289      301.071289       8.0         13965.029541                 0.0             False
2   14366.101074   14065.029785 -1193.430908  14366.101074    0.028320  14065.029785        0.0  301.071289      201.071289       8.0         13965.029541                 0.0             False
3   14366.101074   14265.029785 -1193.430908  14366.101074    0.028320  14265.029785        0.0  101.071289      101.071289       9.0         13965.029541                 0.0             False
4   14366.101074   14265.058105 -1193.430908  14366.101074  101.000000  14265.058105        0.0  101.042969        1.071289       9.0         13965.029541                 1.0              True
5   14366.101074   14366.101074 -1105.439697  14366.101074  101.014160  14366.101074        0.0    0.000000      -10.937500       9.0         13965.029541                 1.0              True
6   14417.636719   14417.636719 -1056.975342  14417.636719   51.535645  14417.636719        0.0    0.000000      -10.937500       1.0         14417.636719                 1.0              True
7   14571.215332   14466.101074 -1056.975342  14571.215332  153.578613  14466.101074        0.0  105.114258       42.641113       1.0         14417.636719                 0.0             False
8   14571.215332   14529.001221 -1056.975342  14571.215332  101.000000  14529.001221        0.0   42.214111      -57.358887       2.0         14571.215332                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:31:54]  --------------------------------------------------------------------------------
[09/28 12:31:54]  Iteration: 93 (4 solution, 88 counterexamples)
[09/28 12:31:59]  Generator returned sat in 2.682277 secs.
[09/28 12:31:59]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:31:59]  Improved number of small numbers from 62 to 110 out of a max of 110
[09/28 12:31:59]  Verifer returned sat in 0.490077 secs.
[09/28 12:31:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14467.043945   13767.015381 -1193.430908  14467.043945    0.02832  13767.015381        0.0  700.028564      700.028564       7.0         13767.015381                -1.0                -1
1   14467.043945   13867.015381 -1193.430908  14467.043945    0.02832  13867.015381        0.0  600.028564      600.028564       8.0         13767.015381                 0.0             False
2   14467.043945   13867.015381 -1193.430908  14467.043945    0.02832  13867.015381        0.0  600.028564      500.028564       8.0         13767.015381                 0.0             False
3   14467.043945   14067.015381 -1193.430908  14467.043945    0.02832  14067.015381        0.0  400.028564      400.028564       9.0         13767.015381                 0.0             False
4   14467.043945   14067.015381 -1193.430908  14467.043945  199.01416  14067.015381        0.0  400.028564      300.028564       9.0         13767.015381                 1.0              True
5   14467.043945   14168.515381 -1193.430908  14467.043945  201.00000  14168.515381        0.0  298.528564      200.028564       9.0         13767.015381                 1.0             False
6   14467.043945   14290.015381 -1193.430908  14467.043945  201.00000  14290.015381        0.0  177.028564      100.028564       9.0         13767.015381                 1.0              True
7   14612.515381   14467.015381 -1193.430908  14612.515381  322.50000  14467.015381        0.0  145.500000      145.500000       9.0         13767.015381                 1.0              True
8   14925.765381   14525.736816 -1193.430908  14925.765381  458.75000  14525.736816        0.0  400.028564      358.750000       2.0         13767.015381                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:32:00]  --------------------------------------------------------------------------------
[09/28 12:32:00]  Iteration: 94 (4 solution, 89 counterexamples)
[09/28 12:32:03]  Generator returned sat in 1.077121 secs.
[09/28 12:32:03]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:32:04]  Improved gap from 0.0 to 14.0625
[09/28 12:32:04]  Improved number of small numbers from 87 to 111 out of a max of 111
[09/28 12:32:04]  Verifer returned sat in 0.774827 secs.
[09/28 12:32:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14167.015381   13767.015137 -1193.430908  14167.015381    0.028320  13767.015137        0.0  400.000244      400.000000       7.0         13767.015137                -1.0                -1
1   14167.015381   13867.015381 -1193.430908  14167.015381    0.028320  13867.015381        0.0  300.000000      300.000000       7.0         13767.015137                 0.0             False
2   14167.015381   13867.987061 -1193.430908  14167.015381    0.028564  13867.987061        0.0  299.028320      200.000000       8.0         13767.015137                 0.0             False
3   14167.015381   14067.015381 -1193.430908  14167.015381    0.028564  14067.015381        0.0  100.000000      100.000000       9.0         13767.015137                 0.0             False
4   14167.015381   14067.987061 -1193.430908  14167.015381   99.000000  14067.987061        0.0   99.028320        0.000000       9.0         13767.015137                 1.0              True
5   14167.015381   14167.015381 -1107.493652  14167.015381   99.000000  14167.015381        0.0    0.000000      -14.062744       9.0         13767.015137                 1.0              True
6   14216.015381   14216.015381 -1057.402588  14216.015381   49.000000  14216.015381        0.0    0.000000      -14.971680       1.0         14216.015381                 1.0              True
7   14365.043701   14265.015137 -1057.402588  14365.043701  149.028320  14265.015137        0.0  100.028564       34.056641       1.0         14216.015381                 0.0             False
8   14365.043701   14330.987061 -1057.402588  14365.043701   98.999756  14330.987061        0.0   34.056641      -65.943359       2.0         14365.043701                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:32:05]  --------------------------------------------------------------------------------
[09/28 12:32:05]  Iteration: 95 (4 solution, 90 counterexamples)
[09/28 12:32:07]  Generator returned unsat in 0.090370 secs.
[09/28 12:32:07]  [96mNo more solutions found[0m
[09/28 12:32:07]  Final solutions:
[09/28 12:32:07]  0: [1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:32:07]  1: [1m[92mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:32:07]  2: [1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:32:07]  3: [1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1)[0m
[09/28 12:32:07]  Took 500.908427 secs.
