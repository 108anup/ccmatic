[09/27 16:00:26]  --------------------------------------------------------------------------------
[09/27 16:00:26]  Iteration: 1 (0 solution, 0 counterexamples)
[09/27 16:00:26]  Generator returned sat in 0.004208 secs.
[09/27 16:00:26]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:00:26]  Improved gap from 0.125 to 100
[09/27 16:00:26]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/27 16:00:26]  Verifer returned sat in 0.301160 secs.
[09/27 16:00:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0        127.250         27.250    -27.25      127.250      0.250       27.250        0.0    100.000         100.000       3.0               27.250                -1.0                -1
1        127.250        127.125    -27.25      127.250      0.125      127.125        0.0      0.125           0.000       4.0              127.250                 0.0             False
2       6861.875        198.125    -27.25     6861.875   6734.750      198.125        0.0   6663.750        6634.625       1.0              127.250                 0.0             False
3       6861.875        227.250    -27.25     6861.875      0.125      227.250        0.0   6634.625        6534.625       2.0             6861.875                 0.0             False
4       6861.875        327.250    -27.25     6861.875    401.250      327.250        0.0   6534.625        6434.625       3.0             6861.875                 0.0             False
5       6861.875        427.250    -27.25     6861.875   1203.750      427.250        0.0   6434.625        6334.625       4.0             6861.875                 0.0             False
6       6861.875        527.250    -27.25     6861.875   2866.750      527.250        0.0   6334.625        6234.625       5.0             6861.875                 0.0             False
7       6861.875        727.250    -27.25     6861.875   6334.500      727.250        0.0   6134.625        6134.625       6.0             6861.875                 0.0             False
8      14197.250        827.250    -27.25    14197.250  13470.000      827.250        0.0  13370.000       13370.000       7.0             6861.875                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:26]  --------------------------------------------------------------------------------
[09/27 16:00:26]  Iteration: 2 (0 solution, 1 counterexamples)
[09/27 16:00:27]  Generator returned sat in 0.028500 secs.
[09/27 16:00:27]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:27]  Improved gap from 0.0 to 100
[09/27 16:00:27]  Improved number of small numbers from 64 to 98 out of a max of 110
[09/27 16:00:27]  Verifer returned sat in 0.740165 secs.
[09/27 16:00:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6760.879883    6261.863281 -27.250244  6760.879883    0.001221  6261.863281        0.0  499.016602      499.016357       5.0          6261.863281                -1.0                -1
1    6760.879883    6361.863525 -27.250244  6760.879883    0.001221  6361.863525        0.0  399.016357      399.016357       5.0          6261.863281                 0.0             False
2    6760.879883    6461.863506 -27.250244  6760.879883    0.001221  6461.863506        0.0  299.016377      299.016357       6.0          6261.863281                 0.0             False
3    6760.879883    6561.862061 -27.250244  6760.879883    0.001250  6561.862061        0.0  199.017822      199.016357       7.0          6261.863281                 0.0             False
4    6760.879883    6561.863525 -27.250244  6760.879883    0.010000  6561.863525        0.0  199.016357       99.016357       8.0          6261.863281                 0.0             False
5    6760.879883    6760.879756 -27.250244  6760.879883  199.015000  6760.879756        0.0    0.000127       -0.983643       9.0          6261.863281                 1.0              True
6    7357.418506    6861.863281 -27.250244  7357.418506  596.538750  6861.863281        0.0  495.555225      495.554980       1.0          6261.863281                 1.0              True
7    7357.418506    6961.863281 -27.250244  7357.418506    0.010000  6961.863281        0.0  395.555225      395.554980       2.0          7357.418506                 0.0             False
8    7357.418506    6961.863525 -27.250244  7357.418506    0.010000  6961.863525        0.0  395.554980      295.554980       3.0          7357.418506                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:28]  --------------------------------------------------------------------------------
[09/27 16:00:28]  Iteration: 3 (0 solution, 2 counterexamples)
[09/27 16:00:28]  Generator returned sat in 0.006604 secs.
[09/27 16:00:28]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:28]  Improved gap from 0.00125 to 100
[09/27 16:00:29]  Improved number of small numbers from 55 to 104 out of a max of 110
[09/27 16:00:29]  Verifer returned sat in 0.757005 secs.
[09/27 16:00:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7576.152344    6876.157227 -641.543945  7576.152344    0.009766  6876.157227        0.0  699.995117      699.995117       4.0          6876.157227                -1.0                -1
1    7576.152344    6976.157227 -641.543945  7576.152344    0.010000  6976.157227        0.0  599.995117      599.995117       4.0          6876.157227                 0.0             False
2    7576.152344    7076.157227 -641.543945  7576.152344    0.010000  7076.157227        0.0  499.995117      499.995117       5.0          6876.157227                 0.0             False
3    7576.152344    7175.172256 -641.543945  7576.152344    0.010000  7175.172256        0.0  400.980088      399.995117       6.0          6876.157227                 0.0             False
4    7576.152344    7176.157227 -641.543945  7576.152344    0.010000  7176.157227        0.0  399.995117      299.995117       7.0          6876.157227                 0.0             False
5    7576.152344    7376.152100 -641.543945  7576.152344    0.010000  7376.152100        0.0  200.000244      199.995117       8.0          6876.157227                 0.0             False
6    7576.152344    7376.157256 -641.543945  7576.152344    0.010000  7376.157256        0.0  199.995088       99.995117       9.0          6876.157227                 0.0             False
7    7576.157256    7476.157227 -641.543945  7576.157256  200.000000  7476.157227        0.0  100.000029        0.000029       9.0          6876.157227                 1.0              True
8    8075.157227    7576.157471 -641.543945  8075.157227  599.000000  7576.157471        0.0  498.999756      399.000000       1.0          6876.157227                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:29]  --------------------------------------------------------------------------------
[09/27 16:00:29]  Iteration: 4 (0 solution, 3 counterexamples)
[09/27 16:00:29]  Generator returned sat in 0.026568 secs.
[09/27 16:00:29]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:30]  Improved number of small numbers from 103 to 103 out of a max of 109
[09/27 16:00:30]  Verifer returned sat in 0.255930 secs.
[09/27 16:00:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7676.142334    6876.157227 -641.543945  7676.142334    0.009766  6876.157227        0.0  799.985107      699.990234       4.0          6876.157227                -1.0                -1
1    7676.142334    7076.152100 -641.543945  7676.142334    0.010000  7076.152100        0.0  599.990234      599.990234       4.0          6876.157227                 0.0             False
2    7676.142334    7176.147217 -641.543945  7676.142334    0.010000  7176.147217        0.0  499.995117      499.990234       5.0          6876.157227                 0.0             False
3    7676.142334    7176.152100 -641.543945  7676.142334    0.010000  7176.152100        0.0  499.990234      399.990234       6.0          6876.157227                 0.0             False
4    7676.142334    7372.138154 -641.543945  7676.142334    0.010000  7372.138154        0.0  304.004180      299.990234       7.0          6876.157227                 0.0             False
5    7676.142334    7376.152100 -641.543945  7676.142334    0.010000  7376.152100        0.0  299.990234      199.990234       8.0          6876.157227                 0.0             False
6    7676.142334    7510.138844 -641.543945  7676.142334    0.010000  7510.138844        0.0  166.003490       99.990234       9.0          6876.157227                 0.0             False
7    7676.147217    7676.142334 -641.543945  7676.147217  166.008372  7676.142334        0.0    0.004883       -0.004883       9.0          6876.157227                 1.0              True
8    8076.156982    7676.152100 -641.543945  8076.156982  400.014648  7676.152100        0.0  400.004883      300.004883       1.0          6876.157227                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:30]  --------------------------------------------------------------------------------
[09/27 16:00:30]  Iteration: 5 (0 solution, 4 counterexamples)
[09/27 16:00:30]  Generator returned sat in 0.247041 secs.
[09/27 16:00:30]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:31]  Improved gap from 0.0 to 100
[09/27 16:00:31]  Improved number of small numbers from 64 to 90 out of a max of 110
[09/27 16:00:31]  Verifer returned sat in 0.870527 secs.
[09/27 16:00:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7474.194336    6774.192139 -641.543945  7474.194336    0.002441  6774.192139        0.0  700.002197      600.002354       7.0          6774.192139                -1.0                -1
1    7474.194336    6974.191982 -641.543945  7474.194336    0.002500  6974.191982        0.0  500.002354      500.002354       7.0          6774.192139                 0.0             False
2    7474.194336    7068.201982 -641.543945  7474.194336    0.009766  7068.201982        0.0  405.992354      400.002354       8.0          6774.192139                 0.0             False
3    7474.194336    7074.191982 -641.543945  7474.194336    0.009766  7074.191982        0.0  400.002354      300.002354       9.0          6774.192139                 0.0             False
4    7474.194336    7174.191982 -641.543945  7474.194336    0.010000  7174.191982        0.0  300.002354      200.002354       8.0          6774.192139                 1.0              True
5    7474.194336    7274.191982 -641.543945  7474.194336   99.010000  7274.191982        0.0  200.002354      100.002354       7.0          6774.192139                 0.0             False
6    7475.196982    7474.191982 -641.543945  7475.196982  201.005000  7474.191982        0.0    1.005000        1.005000       8.0          6774.192139                 0.0             False
7    7874.196982    7474.194336 -641.543945  7874.196982  400.005000  7474.194336        0.0  400.002646      300.005000       9.0          6774.192139                 0.0             False
8    7874.196982    7574.192139 -641.543945  7874.196982    0.010000  7574.192139        0.0  300.004844      200.005000       2.0          7874.196982                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:32]  --------------------------------------------------------------------------------
[09/27 16:00:32]  Iteration: 6 (0 solution, 5 counterexamples)
[09/27 16:00:32]  Generator returned sat in 0.138142 secs.
[09/27 16:00:32]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:00:32]  Improved gap from 0.0 to 100
[09/27 16:00:33]  Improved number of small numbers from 106 to 110 out of a max of 110
[09/27 16:00:33]  Verifer returned sat in 0.364171 secs.
[09/27 16:00:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7725.691895    6913.191895 -641.543945  7725.691895    0.062012  6913.191895        0.0    812.5           790.5       3.0          6913.191895                -1.0                -1
1    7725.691895    6974.191895 -641.543945  7725.691895    0.062012  6974.191895        0.0    751.5           690.5       3.0          6913.191895                 0.0             False
2    7725.691895    7074.191895 -641.543945  7725.691895  390.500000  7074.191895        0.0    651.5           590.5       4.0          6913.191895                 0.0             False
3    7725.691895    7174.191895 -641.543945  7725.691895  390.500000  7174.191895        0.0    551.5           490.5       5.0          6913.191895                 0.0             False
4    7725.691895    7235.191895 -641.543945  7725.691895  390.500000  7235.191895        0.0    490.5           390.5       6.0          6913.191895                 1.0              True
5    7725.691895    7335.191895 -641.543945  7725.691895  390.500000  7335.191895        0.0    390.5           290.5       6.0          6913.191895                 1.0              True
6    7725.691895    7435.191895 -641.543945  7725.691895  390.500000  7435.191895        0.0    290.5           190.5       7.0          6913.191895                 1.0              True
7    7825.691895    7630.191895 -641.543945  7825.691895  390.500000  7630.191895        0.0    195.5           190.5       8.0          6913.191895                 1.0              True
8    8221.691895    7731.191895 -641.543945  8221.691895  591.500000  7731.191895        0.0    490.5           486.5       2.0          6913.191895                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:33]  --------------------------------------------------------------------------------
[09/27 16:00:33]  Iteration: 7 (0 solution, 6 counterexamples)
[09/27 16:00:33]  Generator returned sat in 0.060027 secs.
[09/27 16:00:33]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:00:34]  Improved number of small numbers from 68 to 95 out of a max of 109
[09/27 16:00:34]  Verifer returned sat in 0.664772 secs.
[09/27 16:00:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7574.779297    6872.717480 -543.543945  7574.779297    0.062012  6872.717480        0.0  702.061816      702.061768       4.0          6872.717480                -1.0                -1
1    7574.779297    6972.717529 -543.543945  7574.779297  301.999756  6972.717529        0.0  602.061768      602.061768       4.0          6872.717480                 0.0             False
2    7574.779297    7070.717529 -543.543945  7574.779297  301.999756  7070.717529        0.0  504.061768      502.061768       5.0          6872.717480                 0.0             False
3    7574.779297    7074.717480 -543.543945  7574.779297  301.999756  7074.717480        0.0  500.061816      402.061768       6.0          6872.717480                 0.0             False
4    7574.779297    7174.717529 -543.543945  7574.779297  302.000000  7174.717529        0.0  400.061768      302.061768       7.0          6872.717480                 1.0              True
5    7574.779297    7272.717529 -543.543945  7574.779297  302.000000  7272.717529        0.0  302.061768      202.061768       7.0          6872.717480                 1.0              True
6    7574.779297    7435.191895 -543.543945  7574.779297  302.000000  7435.191895        0.0  139.587402      102.061768       7.0          6872.717480                 1.0              True
7    7974.903516    7472.717529 -543.543945  7974.903516  539.711621  7472.717529        0.0  502.185986      402.185986       8.0          6872.717480                 1.0              True
8    7974.903516    7574.841309 -543.543945  7974.903516  446.000000  7574.841309        0.0  400.062207      302.185986       2.0          7974.903516                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:35]  --------------------------------------------------------------------------------
[09/27 16:00:35]  Iteration: 8 (0 solution, 7 counterexamples)
[09/27 16:00:35]  Generator returned sat in 0.070888 secs.
[09/27 16:00:35]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:35]  Improved gap from 0.0008333333333333334 to 0
[09/27 16:00:36]  Improved number of small numbers from 60 to 92 out of a max of 110
[09/27 16:00:36]  Verifer returned sat in 0.878838 secs.
[09/27 16:00:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7472.710938    7172.710693 -543.544189  7472.710938  0.001465  7172.710693        0.0  300.000244      300.000244       4.0          7172.710693                -1.0                -1
1    7472.710938    7172.710938 -543.544189  7472.710938  0.001465  7172.710938        0.0  300.000000      200.000244       4.0          7172.710693                 0.0             False
2    7472.710938    7272.710938 -543.544189  7472.710938  0.001667  7272.710938        0.0  200.000000      100.000244       5.0          7172.710693                 0.0             False
3    7472.710938    7472.700684 -543.544189  7472.710938  0.009766  7472.700684        0.0    0.010254        0.000244       6.0          7172.710693                 0.0             False
4    7472.710938    7472.710863 -443.544434  7472.710938  0.010000  7472.710863        0.0    0.000075        0.000000       5.0          7172.710693                 1.0              True
5    7472.720863    7472.714196 -343.555664  7472.720863  0.010000  7472.714196        0.0    0.006667       -0.001305       1.0          7172.710693                 0.0             False
6    7472.724196    7472.722529 -243.563965  7472.724196  0.010000  7472.722529        0.0    0.001667       -0.006273       1.0          7172.710693                 0.0             False
7    7472.732529    7472.730863 -143.573975  7472.732529  0.010000  7472.730863        0.0    0.001667       -0.007949       1.0          7172.710693                 0.0             False
8    7472.740863    7472.740863 -143.573975  7472.740863  0.010000  7472.740863        0.0    0.000000      -99.999616       1.0          7172.710693                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:36]  --------------------------------------------------------------------------------
[09/27 16:00:36]  Iteration: 9 (0 solution, 8 counterexamples)
[09/27 16:00:37]  Generator returned sat in 0.524772 secs.
[09/27 16:00:37]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:37]  Improved gap from 0.0016666666666666668 to 100
[09/27 16:00:38]  Improved number of small numbers from 46 to 92 out of a max of 110
[09/27 16:00:38]  Verifer returned sat in 0.887320 secs.
[09/27 16:00:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6873.748047    6273.778809  355.387451  6873.748047    0.061768  6273.778809        0.0  599.969238      599.968994       5.0          6273.778809                -1.0                -1
1    6873.748047    6273.779053  355.387451  6873.748047    0.061768  6273.779053        0.0  599.968994      499.968994       4.0          6273.778809                 1.0             False
2    6873.748047    6373.779053  355.387451  6873.748047    0.031006  6373.779053        0.0  499.968994      399.968994       3.0          6873.748047                 1.0              True
3    6873.748047    6473.779053  355.387451  6873.748047  119.916739  6473.779053        0.0  399.968994      299.968994       4.0          6873.748047                 0.0             False
4    6873.748047    6573.779053  355.387451  6873.748047  178.875109  6573.779053        0.0  299.968994      199.968994       5.0          6873.748047                 1.0             False
5    6873.748047    6673.779053  355.387451  6873.748047  267.312663  6673.779053        0.0  199.968994       99.968994       6.0          6873.748047                 1.0             False
6    7073.748047    6873.779038  355.387451  7073.748047  399.968994  6873.779038        0.0  199.969009      199.968994       1.0          6873.748047                 1.0             False
7    7472.732529    6873.810044  355.387451  7472.732529  598.953491  6873.810044        0.0  598.922485      498.953477       2.0          6873.748047                 0.0             False
8    7771.240281    7073.778809  355.387451  7771.240281  897.430237  7073.778809        0.0  697.461472      697.461228       2.0          6873.748047                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:38]  --------------------------------------------------------------------------------
[09/27 16:00:38]  Iteration: 10 (0 solution, 9 counterexamples)
[09/27 16:00:39]  Generator returned sat in 0.093710 secs.
[09/27 16:00:39]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:39]  Improved gap from 0.0 to 100
[09/27 16:00:40]  Improved number of small numbers from 54 to 108 out of a max of 110
[09/27 16:00:40]  Verifer returned sat in 0.871124 secs.
[09/27 16:00:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6094.884033    5994.822021  634.344238  6094.884033    0.061768  5994.822021        0.0  100.062012      100.061768       1.0          5994.822021                -1.0                -1
1    6094.884033    6094.822266  634.344238  6094.884033    0.062012  6094.822266        0.0    0.061768        0.061768       2.0          5994.822021                 0.0             False
2    6897.008057    6094.822266  634.344238  6897.008057  802.185791  6094.822266        0.0  802.185791      702.185791       2.0          5994.822021                 1.0              True
3    6897.008057    6294.822021  634.344238  6897.008057   81.036844  6294.822021        0.0  602.186035      602.185791       2.0          6897.008057                 1.0             False
4    6897.008057    6394.822266  634.344238  6897.008057  120.555266  6394.822266        0.0  502.185791      502.185791       3.0          6897.008057                 1.0             False
5    6897.008057    6494.760254  634.344238  6897.008057  179.832899  6494.760254        0.0  402.247803      402.185791       4.0          6897.008057                 1.0             False
6    6897.008057    6494.822266  634.344238  6897.008057  268.749349  6494.822266        0.0  402.185791      302.185791       5.0          6897.008057                 1.0             False
7    6897.008057    6694.822021  634.344238  6897.008057  402.124023  6694.822021        0.0  202.186035      202.185791       6.0          6897.008057                 1.0             False
8    7297.008057    6794.822021  634.344238  7297.008057  602.186035  6794.822021        0.0  502.186035      502.185791       7.0          6897.008057                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:40]  --------------------------------------------------------------------------------
[09/27 16:00:40]  Iteration: 11 (0 solution, 10 counterexamples)
[09/27 16:00:41]  Generator returned sat in 0.235673 secs.
[09/27 16:00:41]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:41]  Improved gap from 0.0 to 64.0625
[09/27 16:00:41]  Improved number of small numbers from 56 to 110 out of a max of 110
[09/27 16:00:41]  Verifer returned sat in 0.717563 secs.
[09/27 16:00:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6395.100098    6026.975586  602.190674  6395.100098   69.0625  6026.975586        0.0  368.124512      368.124512       3.0          6026.975586                -1.0                -1
1    6395.100098    6126.975586  602.190674  6395.100098   69.0625  6126.975586        0.0  268.124512      268.124512       3.0          6026.975586                 0.0             False
2    6395.100098    6126.975586  602.190674  6395.100098   69.0625  6126.975586        0.0  268.124512      168.124512       3.0          6026.975586                 0.0             False
3    6395.100098    6326.975586  602.190674  6395.100098   69.0625  6326.975586        0.0   68.124512       68.124512       4.0          6026.975586                 0.0             False
4    6395.100098    6331.037598  634.066162  6395.100098   68.0625  6331.037598        0.0   64.062500        0.000000       5.0          6395.100098                 0.0             False
5    6398.100098    6395.100098  670.003662  6398.100098   67.0625  6395.100098        0.0    3.000000      -61.062500       6.0          6398.100098                 0.0             False
6    6461.162598    6459.162598  705.941162  6461.162598   66.0625  6459.162598        0.0    2.000000      -62.062500       1.0          6461.162598                 1.0             False
7    6524.225098    6523.225098  741.878662  6524.225098   65.0625  6523.225098        0.0    1.000000      -63.062500       1.0          6524.225098                 0.0             False
8    6587.287598    6587.287598  741.878906  6587.287598   64.0625  6587.287598        0.0    0.000000      -99.999756       1.0          6587.287598                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:42]  --------------------------------------------------------------------------------
[09/27 16:00:42]  Iteration: 12 (0 solution, 11 counterexamples)
[09/27 16:00:42]  Generator returned sat in 0.166245 secs.
[09/27 16:00:42]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:43]  Improved gap from 0.0016666666666666668 to 1.5625
[09/27 16:00:43]  Improved number of small numbers from 62 to 110 out of a max of 110
[09/27 16:00:43]  Verifer returned sat in 0.675720 secs.
[09/27 16:00:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     6543.86084    6042.298340  545.003662   6543.86084  0.062012  6042.298340        0.0  501.562500        501.5625       5.0           6042.29834                -1.0                -1
1     6543.86084    6042.360596  545.003662   6543.86084  1.999756  6042.360596        0.0  501.500244        401.5625       5.0           6042.29834                 1.0             False
2     6543.86084    6242.298340  545.003662   6543.86084  2.000000  6242.298340        0.0  301.562500        301.5625       5.0           6042.29834                 1.0              True
3     6543.86084    6342.298340  545.003662   6543.86084  2.000000  6342.298340        0.0  201.562500        201.5625       4.0           6042.29834                 1.0              True
4     6543.86084    6442.298340  545.003662   6543.86084  2.000000  6442.298340        0.0  101.562500        101.5625       5.0           6042.29834                 1.0              True
5     6543.86084    6541.860840  545.003662   6543.86084  2.000000  6541.860840        0.0    2.000000          1.5625       6.0           6042.29834                 1.0              True
6     6543.86084    6542.298340  643.441162   6543.86084  2.000000  6542.298340        0.0    1.562500          0.0000       7.0           6042.29834                 1.0              True
7     6544.29834    6543.860840  741.878662   6544.29834  2.000000  6543.860840        0.0    0.437500         -1.1250       8.0           6042.29834                 1.0              True
8     6545.86084    6545.423584  741.878662   6545.86084  2.000000  6545.423584        0.0    0.437256        -99.5625       1.0           6042.29834                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:44]  --------------------------------------------------------------------------------
[09/27 16:00:44]  Iteration: 13 (0 solution, 12 counterexamples)
[09/27 16:00:44]  Generator returned sat in 0.455172 secs.
[09/27 16:00:44]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:46]  Improved gap from 0.0025 to 0
[09/27 16:00:47]  Improved number of small numbers from 56 to 81 out of a max of 110
[09/27 16:00:47]  Verifer returned sat in 2.303251 secs.
[09/27 16:00:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5682.442715    5182.441406  543.442412  5682.442715  0.001221  5182.441406        0.0  500.001309      500.001250       3.0          5182.441406                -1.0                -1
1    5682.442715    5282.441406  543.442412  5682.442715  0.001250  5282.441406        0.0  400.001309      400.001250       3.0          5182.441406                 0.0             False
2    5682.442715    5382.441406  543.442412  5682.442715  0.010000  5382.441406        0.0  300.001309      300.001250       4.0          5182.441406                 0.0             False
3    5682.442715    5418.453857  543.442412  5682.442715  0.010000  5418.453857        0.0  263.988857      200.001250       5.0          5182.441406                 0.0             False
4    5682.442715    5482.441650  543.442412  5682.442715  0.010000  5482.441650        0.0  200.001064      100.001250       6.0          5182.441406                 1.0              True
5    5682.442715    5582.441650  543.442412  5682.442715  0.010000  5582.441650        0.0  100.001064        0.001250       6.0          5182.441406                 1.0              True
6    5682.442715    5682.441465  643.441162  5682.442715  0.010000  5682.441465        0.0    0.001250        0.000000       7.0          5182.441406                 1.0              True
7    5682.451465    5682.442715  743.432373  5682.451465  0.010000  5682.442715        0.0    0.008750       -0.000039       8.0          5182.441406                 1.0              True
8    5682.452715    5682.452637  743.432373  5682.452715  0.010000  5682.452637        0.0    0.000078      -99.998789       1.0          5182.441406                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:47]  --------------------------------------------------------------------------------
[09/27 16:00:47]  Iteration: 14 (0 solution, 13 counterexamples)
[09/27 16:00:48]  Generator returned sat in 0.137808 secs.
[09/27 16:00:48]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:00:48]  Improved gap from 0.0016666666666666668 to 100
[09/27 16:00:48]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/27 16:00:48]  Verifer returned sat in 0.367402 secs.
[09/27 16:00:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5383.389648    4683.389893  543.442383  5383.389648    0.061523  4683.389893        0.0  699.999756      699.999756       6.0          4683.389893                -1.0                -1
1    5383.389648    4783.389893  543.442383  5383.389648  397.123291  4783.389893        0.0  599.999756      599.999756       7.0          4683.389893                 1.0             False
2    5383.389648    4883.389648  543.442383  5383.389648  397.123535  4883.389648        0.0  500.000000      499.999756       5.0          4683.389893                 1.0              True
3    5383.389648    4983.389648  543.442383  5383.389648  397.123535  4983.389648        0.0  400.000000      399.999756       6.0          4683.389893                 0.0             False
4    5383.389648    4984.204590  543.442383  5383.389648  398.123535  4984.204590        0.0  399.185059      299.999756       7.0          4683.389893                 1.0              True
5    5383.389648    5183.328125  543.442383  5383.389648  399.123535  5183.328125        0.0  200.061523      199.999756       7.0          4683.389893                 1.0              True
6    5583.451660    5183.389893  543.442383  5583.451660  400.123535  5183.389893        0.0  400.061768      300.061768       7.0          4683.389893                 1.0              True
7    5584.513428    5383.389648  543.442383  5584.513428  401.123535  5383.389648        0.0  201.123779      201.123535       8.0          4683.389893                 1.0              True
8    5785.513184    5386.327881  543.442383  5785.513184  402.123535  5386.327881        0.0  399.185303      302.123291       3.0          4683.389893                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:49]  --------------------------------------------------------------------------------
[09/27 16:00:49]  Iteration: 15 (0 solution, 14 counterexamples)
[09/27 16:00:49]  Generator returned sat in 0.201680 secs.
[09/27 16:00:49]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:00:50]  Improved gap from 0.0008333333333333334 to 0
[09/27 16:00:50]  Improved number of small numbers from 56 to 89 out of a max of 110
[09/27 16:00:50]  Verifer returned sat in 1.151346 secs.
[09/27 16:00:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    4886.866559    4386.855713   839.976562  4886.866559  0.000732  4386.855713        0.0  500.010846      500.010846       7.0          4386.855713                -1.0                -1
1    4886.866559    4486.854736   839.976562  4886.866559  0.000833  4486.854736        0.0  400.011823      400.010846       7.0          4386.855713                 1.0             False
2    4886.866559    4486.855957   839.976562  4886.866559  0.008545  4486.855957        0.0  400.010602      300.010846       5.0          4386.855713                 1.0              True
3    4886.866559    4622.877197   839.976562  4886.866559  0.008545  4622.877197        0.0  263.989362      200.010846       6.0          4386.855713                 0.0             False
4    4886.866559    4686.855957   839.976562  4886.866559  0.010000  4686.855957        0.0  200.010602      100.010846       7.0          4386.855713                 1.0              True
5    4886.866559    4786.855957   839.976562  4886.866559  0.010000  4786.855957        0.0  100.010602        0.010846       7.0          4386.855713                 1.0              True
6    4886.866559    4886.855957   939.965716  4886.866559  0.010000  4886.855957        0.0    0.010602        0.000000       7.0          4386.855713                 1.0              True
7    4886.866559    4886.866559  1039.955811  4886.866559  0.010000  4886.866559        0.0    0.000000       -0.009906       8.0          4386.855713                 1.0              True
8    4886.876559    4886.876465  1039.955811  4886.876559  0.010000  4886.876465        0.0    0.000094      -99.999906       1.0          4386.855713                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:51]  --------------------------------------------------------------------------------
[09/27 16:00:51]  Iteration: 16 (0 solution, 15 counterexamples)
[09/27 16:00:52]  Generator returned sat in 0.094791 secs.
[09/27 16:00:52]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:00:54]  Improved gap from 0.0 to 45.3125
[09/27 16:00:54]  Improved number of small numbers from 46 to 110 out of a max of 110
[09/27 16:00:54]  Verifer returned sat in 2.230931 secs.
[09/27 16:00:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5058.760986    4685.447510  541.384766  5058.760986    0.031006  4685.447510        0.0  373.313477      373.313477       5.0          4685.447510                -1.0                -1
1    5058.760986    4747.196045  541.384766  5058.760986    0.031006  4747.196045        0.0  311.564941      273.313477       6.0          4685.447510                 0.0             False
2    5058.760986    4794.136719  541.384766  5058.760986    0.031006  4794.136719        0.0  264.624268      173.313477       4.0          4685.447510                 1.0              True
3    5058.760986    4985.416748  541.384766  5058.760986    0.031006  4985.416748        0.0   73.344238       73.313477       5.0          4685.447510                 0.0             False
4    5058.760986    4985.447510  568.071289  5058.760986    1.000000  4985.447510        0.0   73.313477        0.000000       6.0          4685.447510                 0.0             False
5    5104.073242    5058.760986  622.758789  5104.073242  118.625732  5058.760986        0.0   45.312256       -0.000244       7.0          4685.447510                 1.0              True
6    5249.385986    5104.104248  622.758789  5249.385986  190.625000  5104.104248        0.0  145.281738       45.312500       1.0          4685.447510                 1.0              True
7    5249.385986    5204.073486  677.446289  5249.385986    1.000000  5204.073486        0.0   45.312500        0.000000       2.0          5249.385986                 0.0             False
8    5249.385986    5249.385986  732.133789  5249.385986    1.000000  5249.385986        0.0    0.000000      -45.312500       3.0          5249.385986                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:54]  --------------------------------------------------------------------------------
[09/27 16:00:54]  Iteration: 17 (0 solution, 16 counterexamples)
[09/27 16:00:55]  Generator returned sat in 0.167197 secs.
[09/27 16:00:55]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:00:57]  Improved gap from 44.127685546875 to 45.3125
[09/27 16:00:57]  Improved number of small numbers from 49 to 71 out of a max of 110
[09/27 16:00:57]  Verifer returned sat in 2.453181 secs.
[09/27 16:00:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    5918.515437    5545.201904  552.696289  5918.515437    0.031006  5545.201904        0.0  373.313533      373.313354       9.0          5545.201904                -1.0                -1
1    5918.515437    5608.950374  552.696289  5918.515437    0.031006  5608.950374        0.0  309.565063      273.313354       5.0          5545.201904                 1.0             False
2    5918.515437    5655.891292  552.696289  5918.515437    0.031006  5655.891292        0.0  262.624146      173.313354       5.0          5545.201904                 0.0             False
3    5918.515437    5845.171143  552.696289  5918.515437    0.031006  5845.171143        0.0   73.344294       73.313354       6.0          5545.201904                 0.0             False
4    5918.515437    5845.202083  579.382935  5918.515437    1.000000  5845.202083        0.0   73.313354        0.000000       7.0          5545.201904                 0.0             False
5    5963.827937    5918.515437  634.070435  5963.827937  118.625854  5918.515437        0.0   45.312500        0.000000       8.0          5545.201904                 1.0              True
6    6109.140437    6063.797119  634.070435  6109.140437  190.625000  6063.797119        0.0   45.343318       45.312500       1.0          5545.201904                 1.0              True
7    6109.140437    6063.827937  688.757935  6109.140437    1.000000  6063.827937        0.0   45.312500        0.000000       2.0          6109.140437                 0.0             False
8    6109.140437    6109.140437  688.758057  6109.140437    1.000000  6109.140437        0.0    0.000000      -99.999878       3.0          6109.140437                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:00:58]  --------------------------------------------------------------------------------
[09/27 16:00:58]  Iteration: 18 (0 solution, 17 counterexamples)
[09/27 16:00:59]  Generator returned sat in 0.776508 secs.
[09/27 16:00:59]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:00:59]  Improved gap from 0.006666666666666667 to 100
[09/27 16:01:00]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/27 16:01:00]  Verifer returned sat in 0.357338 secs.
[09/27 16:01:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6018.515381    5418.515381  634.070312  6018.515381    0.001221  5418.515381        0.0  600.000000           600.0       3.0          5418.515381                -1.0                -1
1    6018.515381    5518.515381  634.070312  6018.515381    0.001250  5518.515381        0.0  500.000000           500.0       4.0          5418.515381                 0.0             False
2    6018.515381    5618.515381  634.070312  6018.515381    0.001250  5618.515381        0.0  400.000000           400.0       4.0          5418.515381                 1.0              True
3    6018.515381    5618.515381  634.070312  6018.515381    0.001250  5618.515381        0.0  400.000000           300.0       4.0          5418.515381                 1.0              True
4    6018.515381    5818.515381  634.070312  6018.515381    0.010000  5818.515381        0.0  200.000000           200.0       5.0          5418.515381                 1.0             False
5    6119.515381    5918.515381  634.070312  6119.515381  301.000000  5918.515381        0.0  201.000000           201.0       6.0          5418.515381                 1.0              True
6    6219.515381    6018.515381  634.070312  6219.515381  301.000000  6018.515381        0.0  201.000000           201.0       7.0          5418.515381                 1.0              True
7    6419.515381    6019.514160  634.070312  6419.515381  401.000000  6019.514160        0.0  400.001221           301.0       3.0          5418.515381                 1.0              True
8    6419.515381    6118.515381  634.070312  6419.515381    0.010000  6118.515381        0.0  301.000000           201.0       4.0          6419.515381                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:00]  --------------------------------------------------------------------------------
[09/27 16:01:00]  Iteration: 19 (0 solution, 18 counterexamples)
[09/27 16:01:01]  Generator returned sat in 0.708053 secs.
[09/27 16:01:01]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:02]  Improved number of small numbers from 109 to 109 out of a max of 109
[09/27 16:01:02]  Verifer returned sat in 0.194225 secs.
[09/27 16:01:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6118.515381    5418.515381  634.070312  6118.515381    0.030762  5418.515381        0.0  700.000000      700.000000       8.0          5418.515381                -1.0                -1
1    6118.515381    5518.515381  634.070312  6118.515381    0.030762  5518.515381        0.0  600.000000      600.000000       8.0          5418.515381                 0.0             False
2    6118.515381    5618.515381  634.070312  6118.515381    0.030762  5618.515381        0.0  500.000000      500.000000       9.0          5418.515381                 0.0             False
3    6118.515381    5618.515381  634.070312  6118.515381    0.030762  5618.515381        0.0  500.000000      400.000000       9.0          5418.515381                 1.0              True
4    6118.515381    5718.515381  634.070312  6118.515381  100.000000  5718.515381        0.0  400.000000      300.000000       9.0          5418.515381                 1.0             False
5    6118.515381    5918.515381  634.070312  6118.515381  251.000000  5918.515381        0.0  200.000000      200.000000       9.0          5418.515381                 1.0              True
6    6446.015381    5918.546143  634.070312  6446.015381  527.500000  5918.546143        0.0  527.469238      427.500000       9.0          5418.515381                 1.0              True
7    6860.811523    6118.484619  634.070312  6860.811523  942.265381  6118.484619        0.0  742.326904      742.296143       8.0          5418.515381                 1.0              True
8    6860.811523    6118.515381  634.070312  6860.811523  199.984619  6118.515381        0.0  742.296143      642.296143       9.0          6860.811523                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:02]  --------------------------------------------------------------------------------
[09/27 16:01:02]  Iteration: 20 (0 solution, 19 counterexamples)
[09/27 16:01:03]  Generator returned sat in 0.716142 secs.
[09/27 16:01:03]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:05]  Improved gap from 0.0 to 23.4375
[09/27 16:01:06]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:01:06]  Verifer returned sat in 2.288973 secs.
[09/27 16:01:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6242.310059    6006.904297  634.070068  6242.310059    0.030518  6006.904297        0.0  235.405762      223.437500       4.0          6006.904297                -1.0                -1
1    6242.310059    6053.810059  634.070068  6242.310059    0.030518  6053.810059        0.0  188.500000      123.437500       5.0          6006.904297                 0.0             False
2    6242.310059    6218.841797  634.070068  6242.310059    0.030518  6218.841797        0.0   23.468262       23.437500       6.0          6006.904297                 0.0             False
3    6242.310059    6218.872559  710.632568  6242.310059    0.030518  6218.872559        0.0   23.437500        0.000000       7.0          6006.904297                 1.0              True
4    6429.840820    6242.310059  710.632568  6429.840820  210.968262  6242.310059        0.0  187.530762       87.530762       7.0          6006.904297                 1.0              True
5    6429.840820    6342.310059  717.006592  6429.840820  187.500000  6342.310059        0.0   87.530762       -6.095215       2.0          6429.840820                 1.0              True
6    6436.060059    6435.936035  793.568848  6436.060059   93.750000  6435.936035        0.0    0.124023      -23.313721       1.0          6436.060059                 0.0             False
7    6482.811035    6459.404297  870.100830  6482.811035   46.875000  6459.404297        0.0   23.406738       -0.030762       1.0          6482.811035                 0.0             False
8    6482.841797    6482.841797  870.100830  6482.841797   23.437500  6482.841797        0.0    0.000000     -100.000000       1.0          6482.841797                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:06]  --------------------------------------------------------------------------------
[09/27 16:01:06]  Iteration: 21 (0 solution, 20 counterexamples)
[09/27 16:01:07]  Generator returned sat in 0.538629 secs.
[09/27 16:01:07]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:08]  Improved gap from 0.0 to 100
[09/27 16:01:08]  Improved number of small numbers from 66 to 110 out of a max of 110
[09/27 16:01:08]  Verifer returned sat in 0.433937 secs.
[09/27 16:01:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6718.903076    5918.872559  634.070068  6718.903076    0.030518  5918.872559        0.0  800.030518      700.030762       8.0          5918.872559                -1.0                -1
1    6718.903076    6018.872314  634.070068  6718.903076    0.030762  6018.872314        0.0  700.030762      600.030762       3.0          5918.872559                 1.0             False
2    6718.903076    6118.872559  634.070068  6718.903076  400.122803  6118.872559        0.0  600.030518      500.030762       3.0          5918.872559                 0.0             False
3    6718.903076    6318.780518  634.070068  6718.903076  400.092285  6318.780518        0.0  400.122559      400.030762       4.0          6718.903076                 0.0             False
4    6718.903076    6318.872314  634.070068  6718.903076  400.092285  6318.872314        0.0  400.030762      300.030762       5.0          6718.903076                 0.0             False
5    6718.964600    6418.872314  634.070068  6718.964600  400.092285  6418.872314        0.0  300.092285      200.092285       6.0          6718.903076                 0.0             False
6    6818.964600    6518.872314  634.070068  6818.964600  400.092285  6518.872314        0.0  300.092285      200.092285       7.0          6718.903076                 1.0             False
7    6918.964600    6718.872314  634.070068  6918.964600  400.092285  6718.872314        0.0  200.092285      200.092285       8.0          6718.903076                 1.0             False
8    7118.964600    6718.933838  634.070068  7118.964600  400.092285  6718.933838        0.0  400.030762      300.092285       4.0          6718.903076                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:08]  --------------------------------------------------------------------------------
[09/27 16:01:08]  Iteration: 22 (0 solution, 21 counterexamples)
[09/27 16:01:10]  Generator returned sat in 1.342987 secs.
[09/27 16:01:10]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:01:11]  Improved gap from 0.0 to 0
[09/27 16:01:12]  Improved number of small numbers from 63 to 87 out of a max of 110
[09/27 16:01:12]  Verifer returned sat in 1.539005 secs.
[09/27 16:01:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6718.884814    6218.873535  634.070068  6718.884814  0.001221  6218.873535        0.0  500.011279       500.01125       4.0          6218.873535                -1.0                -1
1    6718.884814    6218.875000  634.070068  6718.884814  0.009766  6218.875000        0.0  500.009814       400.01125       5.0          6218.873535                 0.0             False
2    6718.884814    6418.873535  634.070068  6718.884814  0.009766  6418.873535        0.0  300.011279       300.01125       6.0          6218.873535                 0.0             False
3    6718.884814    6454.886230  634.070068  6718.884814  0.010000  6454.886230        0.0  263.998584       200.01125       7.0          6218.873535                 0.0             False
4    6718.884814    6518.873779  634.070068  6718.884814  0.010000  6518.873779        0.0  200.011035       100.01125       8.0          6218.873535                 1.0              True
5    6718.884814    6718.872070  634.070068  6718.884814  0.010000  6718.872070        0.0    0.012744         0.01125       9.0          6218.873535                 1.0              True
6    6718.884814    6718.873779  734.058818  6718.884814  0.010000  6718.873779        0.0    0.011035         0.00000       8.0          6218.873535                 1.0              True
7    6718.884814    6718.884814  834.058818  6718.884814  0.010000  6718.884814        0.0    0.000000         0.00000       9.0          6218.873535                 1.0              True
8    6718.894814    6718.885010  834.058838  6718.894814  0.010000  6718.885010        0.0    0.009805       -99.98998       1.0          6218.873535                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:12]  --------------------------------------------------------------------------------
[09/27 16:01:12]  Iteration: 23 (0 solution, 22 counterexamples)
[09/27 16:01:14]  Generator returned sat in 0.759377 secs.
[09/27 16:01:14]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:01:14]  Improved gap from 0.000625 to 0
[09/27 16:01:15]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:01:15]  Verifer returned sat in 0.926760 secs.
[09/27 16:01:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6812.885986    6811.890625   41.052734  6812.885986  0.001250  6811.890625        0.0  0.995361        0.995117       2.0          6811.890625                -1.0                -1
1    6812.889404    6812.887207  139.060303  6812.889404  0.998779  6812.887207        0.0  0.002197       -0.993896       1.0          6811.890625                 0.0             False
2    6813.885986    6813.883301  239.056641  6813.885986  0.998779  6813.883301        0.0  0.002686       -0.000977       1.0          6811.890625                 0.0             False
3    6814.880615    6813.886963  338.061562  6814.880615  0.997314  6813.886963        0.0  0.993652       -0.001426       1.0          6814.880615                 0.0             False
4    6814.883301    6814.882080  438.058838  6814.883301  0.996338  6814.882080        0.0  0.001221       -0.001465       1.0          6814.883301                 0.0             False
5    6815.876953    6814.884766  537.066650  6815.876953  0.994873  6814.884766        0.0  0.992188        0.000000       1.0          6815.876953                 0.0             False
6    6815.876953    6815.876953  637.052812  6815.876953  0.010000  6815.876953        0.0  0.000000       -0.013838       2.0          6815.876953                 0.0             False
7    6816.866943    6815.890869  736.076660  6816.866943  0.989990  6815.890869        0.0  0.976074        0.000000       1.0          6815.876953                 0.0             False
8    6816.866943    6816.866943  736.076660  6816.866943  0.010000  6816.866943        0.0  0.000000     -100.000000       2.0          6816.866943                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:15]  --------------------------------------------------------------------------------
[09/27 16:01:15]  Iteration: 24 (0 solution, 23 counterexamples)
[09/27 16:01:16]  Generator returned sat in 0.161029 secs.
[09/27 16:01:16]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:16]  Verifer returned unsat in 0.421974 secs.
[09/27 16:01:16]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:16]  --------------------------------------------------------------------------------
[09/27 16:01:16]  Iteration: 25 (1 solution, 23 counterexamples)
[09/27 16:01:17]  Generator returned sat in 0.243006 secs.
[09/27 16:01:17]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:01:17]  Improved gap from 0.0306396484375 to 100
[09/27 16:01:18]  Improved number of small numbers from 40 to 92 out of a max of 110
[09/27 16:01:18]  Verifer returned sat in 0.997771 secs.
[09/27 16:01:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7015.085938    6315.085693  537.857666  7015.085938   60.684814  6315.085693        0.0  700.000244      700.000000       6.0          6315.085693                -1.0                -1
1    7015.085938    6315.085938  537.857666  7015.085938   60.684814  6315.085938        0.0  700.000000      600.000000       6.0          6315.085693                 0.0             False
2    7015.085938    6515.024658  537.857666  7015.085938   60.684814  6515.024658        0.0  500.061279      500.000000       7.0          6315.085693                 0.0             False
3    7015.085938    6515.085938  537.857666  7015.085938   60.684823  6515.085938        0.0  500.000000      400.000000       8.0          6315.085693                 0.0             False
4    7015.085938    6715.085938  537.857666  7015.085938   90.027235  6715.085938        0.0  300.000000      300.000000       9.0          6315.085693                 1.0              True
5    7015.085938    6815.085938  537.857666  7015.085938  134.040853  6815.085938        0.0  200.000000      200.000000       9.0          6315.085693                 1.0              True
6    7015.147217    6915.085879  537.857666  7015.147217  200.061279  6915.085879        0.0  100.061338      100.061279       9.0          6315.085693                 1.0              True
7    7214.177798    7015.085879  537.857666  7214.177798  299.091919  7015.085879        0.0  199.091919      199.091860       9.0          6315.085693                 1.0              True
8    7462.723757    7015.085938  537.857666  7462.723757  447.637878  7015.085938        0.0  447.637820      347.637820       9.0          6315.085693                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:19]  --------------------------------------------------------------------------------
[09/27 16:01:19]  Iteration: 26 (1 solution, 24 counterexamples)
[09/27 16:01:20]  Generator returned sat in 0.602169 secs.
[09/27 16:01:20]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:20]  Improved gap from 0.0016666666666666668 to 0
[09/27 16:01:20]  Improved number of small numbers from 56 to 110 out of a max of 110
[09/27 16:01:20]  Verifer returned sat in 0.372721 secs.
[09/27 16:01:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7015.065674    6615.045654  237.897949  7015.065674  0.999756  6615.045654        0.0  400.020020      400.020020       6.0          6615.045654                -1.0                -1
1    7015.065674    6715.045654  237.897949  7015.065674  0.999756  6715.045654        0.0  300.020020      300.020020       2.0          6615.045654                 1.0             False
2    7015.065674    6815.045654  237.897949  7015.065674  1.000000  6815.045654        0.0  200.020020      200.020020       3.0          6615.045654                 0.0             False
3    7015.065674    6915.041016  237.897949  7015.065674  1.000000  6915.041016        0.0  100.024658      100.020020       4.0          6615.045654                 1.0              True
4    7015.065674    6915.045654  237.897949  7015.065674  1.000000  6915.045654        0.0  100.020020        0.020020       5.0          6615.045654                 1.0              True
5    7015.065674    7015.045898  337.877930  7015.065674  1.000000  7015.045898        0.0    0.019775        0.000000       6.0          6615.045654                 1.0              True
6    7016.045898    7015.065674  436.892822  7016.045898  1.000000  7015.065674        0.0    0.980225       -0.004883       7.0          6615.045654                 1.0              True
7    7016.065674    7016.050781  536.877930  7016.065674  1.000000  7016.050781        0.0    0.014893        0.000000       1.0          6615.045654                 1.0              True
8    7016.065674    7016.065674  536.877930  7016.065674  0.010000  7016.065674        0.0    0.000000     -100.000000       2.0          7016.065674                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:21]  --------------------------------------------------------------------------------
[09/27 16:01:21]  Iteration: 27 (1 solution, 25 counterexamples)
[09/27 16:01:23]  Generator returned sat in 1.538741 secs.
[09/27 16:01:23]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:01:35]  Improved gap from 0.014 to 40.625
[09/27 16:01:36]  Improved number of small numbers from 51 to 59 out of a max of 110
[09/27 16:01:36]  Verifer returned sat in 12.588652 secs.
[09/27 16:01:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7112.188444    6842.001392  150.399740  7112.188444    0.061035  6842.001392        0.0  270.187052      270.187052       3.0          6842.001392                -1.0                -1
1    7112.188444    6842.062500  150.399740  7112.188444   27.003418  6842.062500        0.0  270.125944      170.187052       3.0          6842.001392                 0.0             False
2    7112.188444    7042.001392  150.399740  7112.188444   27.003418  7042.001392        0.0   70.187052       70.187052       4.0          6842.001392                 0.0             False
3    7112.188444    7042.001392  180.212687  7112.188444   27.003581  7042.001392        0.0   70.187052        0.000000       4.0          6842.001392                 1.0              True
4    7154.503182    7112.188444  237.897949  7154.503182  112.501790  7112.188444        0.0   42.314738        0.000000       5.0          6842.001392                 1.0             False
5    7154.503182    7154.503182  297.272949  7154.503182    1.000000  7154.503182        0.0    0.000000      -40.625000       2.0          7154.503182                 1.0              True
6    7210.254077    7195.128182  356.647949  7210.254077   55.750895  7195.128182        0.0   15.125895      -25.499105       1.0          7154.503182                 0.0             False
7    7298.567025    7235.753182  386.460938  7298.567025  103.438843  7235.753182        0.0   62.813843       -7.373169       1.0          7154.503182                 0.0             False
8    7348.254973    7305.940430  386.460938  7348.254973  112.501790  7305.940430        0.0   42.314543      -57.685221       1.0          7154.503182                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:36]  --------------------------------------------------------------------------------
[09/27 16:01:36]  Iteration: 28 (1 solution, 26 counterexamples)
[09/27 16:01:39]  Generator returned sat in 2.209960 secs.
[09/27 16:01:39]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:40]  Improved number of small numbers from 63 to 109 out of a max of 109
[09/27 16:01:40]  Verifer returned sat in 0.609958 secs.
[09/27 16:01:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7462.096924    6862.035889  150.399902  7462.096924    0.061035  6862.035889        0.0  600.061035      600.000000       5.0          6862.035889                -1.0                -1
1    7462.096924    6865.913574  150.399902  7462.096924  200.060791  6865.913574        0.0  596.183350      500.000000       5.0          6862.035889                 0.0             False
2    7462.096924    6962.096924  150.399902  7462.096924  200.060791  6962.096924        0.0  500.000000      400.000000       4.0          6862.035889                 0.0             False
3    7462.096924    7062.096924  150.399902  7462.096924  200.060791  7062.096924        0.0  400.000000      300.000000       4.0          6862.035889                 0.0             False
4    7462.096924    7262.096680  150.399902  7462.096924  200.061035  7262.096680        0.0  200.000244      200.000000       5.0          6862.035889                 0.0             False
5    7658.279785    7360.402100  150.399902  7658.279785  396.183105  7360.402100        0.0  297.877686      296.182861       6.0          6862.035889                 0.0             False
6    7758.646240    7462.096924  150.399902  7758.646240  398.244141  7462.096924        0.0  296.549316      296.549316       7.0          6862.035889                 1.0              True
7    7862.218994    7462.157715  150.399902  7862.218994  400.122070  7462.157715        0.0  400.061279      300.122070       3.0          6862.035889                 1.0              True
8    7862.218994    7662.096680  150.399902  7862.218994  200.061035  7662.096680        0.0  200.122314      200.122070       3.0          7862.218994                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:41]  --------------------------------------------------------------------------------
[09/27 16:01:41]  Iteration: 29 (1 solution, 27 counterexamples)
[09/27 16:01:42]  Generator returned sat in 0.579656 secs.
[09/27 16:01:42]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:01:43]  Improved number of small numbers from 55 to 96 out of a max of 109
[09/27 16:01:43]  Verifer returned sat in 0.838107 secs.
[09/27 16:01:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7957.570312    7357.570099  150.399902  7957.570312    0.030273  7357.570099        0.0  600.000214      600.000000       6.0          7357.570099                -1.0                -1
1    7957.570312    7357.600586  150.399902  7957.570312    0.030273  7357.600586        0.0  599.969727      500.000000       6.0          7357.570099                 0.0             False
2    7957.570312    7457.570312  150.399902  7957.570312    0.030518  7457.570312        0.0  500.000000      400.000000       7.0          7357.570099                 0.0             False
3    7957.570312    7624.903432  150.399902  7957.570312    0.030518  7624.903432        0.0  332.666880      300.000000       8.0          7357.570099                 0.0             False
4    7957.570312    7757.570312  150.399902  7957.570312  132.666667  7757.570312        0.0  200.000000      200.000000       9.0          7357.570099                 0.0             False
5    7957.570312    7857.570068  150.399902  7957.570312  200.000000  7857.570068        0.0  100.000244      100.000000       9.0          7357.570099                 1.0              True
6    8158.570068    7957.539551  150.399902  8158.570068  301.000000  7957.539551        0.0  201.030518      200.999756       9.0          7357.570099                 1.0              True
7    8410.039551    7957.570312  150.399902  8410.039551  452.500000  7957.570312        0.0  452.469238      352.469238       9.0          7357.570099                 1.0              True
8    8637.320312    8057.570312  150.399902  8637.320312  679.750000  8057.570312        0.0  579.750000      479.750000       3.0          7357.570099                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:43]  --------------------------------------------------------------------------------
[09/27 16:01:43]  Iteration: 30 (1 solution, 28 counterexamples)
[09/27 16:01:45]  Generator returned sat in 1.091300 secs.
[09/27 16:01:45]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:46]  Verifer returned unsat in 0.409482 secs.
[09/27 16:01:46]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:46]  --------------------------------------------------------------------------------
[09/27 16:01:46]  Iteration: 31 (2 solution, 28 counterexamples)
[09/27 16:01:47]  Generator returned sat in 0.823232 secs.
[09/27 16:01:47]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:49]  Improved gap from 0.0 to 1.5625
[09/27 16:01:49]  Improved number of small numbers from 56 to 110 out of a max of 110
[09/27 16:01:49]  Verifer returned sat in 2.157161 secs.
[09/27 16:01:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8265.092285    8261.153076 -753.183105  8265.092285  0.060547  8261.153076        0.0  3.939209        3.939209       9.0          8261.153076                -1.0                -1
1    8265.092285    8263.153076 -657.182861  8265.092285  0.060547  8263.153076        0.0  1.939209       -0.060547       3.0          8261.153076                 1.0             False
2    8267.153076    8265.153076 -559.183105  8267.153076  4.000000  8265.153076        0.0  2.000000        0.000000       1.0          8261.153076                 1.0              True
3    8269.153076    8267.153076 -461.183105  8269.153076  4.000000  8267.153076        0.0  2.000000        0.000000       2.0          8261.153076                 0.0             False
4    8271.153076    8269.153076 -363.183105  8271.153076  4.000000  8269.153076        0.0  2.000000        0.000000       2.0          8261.153076                 1.0              True
5    8273.153076    8271.153076 -265.183105  8273.153076  4.000000  8271.153076        0.0  2.000000        0.000000       2.0          8261.153076                 1.0              True
6    8275.153076    8273.153076 -167.183105  8275.153076  4.000000  8273.153076        0.0  2.000000        0.000000       2.0          8261.153076                 1.0              True
7    8277.153076    8275.153076  -69.183105  8277.153076  4.000000  8275.153076        0.0  2.000000        0.000000       2.0          8261.153076                 1.0              True
8    8279.153076    8277.214111  -69.182861  8279.153076  4.000000  8277.214111        0.0  1.938965      -97.999756       1.0          8261.153076                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:50]  --------------------------------------------------------------------------------
[09/27 16:01:50]  Iteration: 32 (2 solution, 29 counterexamples)
[09/27 16:01:51]  Generator returned sat in 0.173532 secs.
[09/27 16:01:51]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:52]  Verifer returned unsat in 0.681114 secs.
[09/27 16:01:52]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:52]  --------------------------------------------------------------------------------
[09/27 16:01:52]  Iteration: 33 (3 solution, 29 counterexamples)
[09/27 16:01:53]  Generator returned sat in 0.396701 secs.
[09/27 16:01:53]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:54]  Improved number of small numbers from 63 to 75 out of a max of 109
[09/27 16:01:54]  Verifer returned sat in 0.792218 secs.
[09/27 16:01:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8971.082275    8271.203867 -657.182861  8971.082275    0.060791  8271.203867        0.0  699.878408      699.878408       7.0          8271.203867                -1.0                -1
1    8971.082275    8370.734263 -657.182861  8971.082275  399.938965  8370.734263        0.0  600.348013      599.878408       7.0          8271.203867                 0.0             False
2    8971.082275    8371.203867 -657.182861  8971.082275  399.938965  8371.203867        0.0  599.878408      499.878408       8.0          8271.203867                 0.0             False
3    8971.082275    8471.673472 -657.182861  8971.082275  399.938965  8471.673472        0.0  499.408804      399.878408       9.0          8271.203867                 0.0             False
4    8971.082275    8571.203867 -657.182861  8971.082275  399.939209  8571.203867        0.0  399.878408      299.878408       9.0          8271.203867                 1.0              True
5    8971.143076    8771.203867 -657.182861  8971.143076  399.939209  8771.203867        0.0  199.939209      199.939209       9.0          8271.203867                 1.0              True
6    9570.203867    8771.264658 -657.182861  9570.203867  799.000000  8771.264658        0.0  798.939209      699.000000       9.0          8271.203867                 1.0              True
7    9570.203867    8971.203867 -657.182861  9570.203867  598.182373  8971.203867        0.0  599.000000      599.000000       2.0          9570.203867                 1.0              True
8    9570.203867    8971.264648 -657.182861  9570.203867  400.000000  8971.264648        0.0  598.939219      499.000000       3.0          9570.203867                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:54]  --------------------------------------------------------------------------------
[09/27 16:01:54]  Iteration: 34 (3 solution, 30 counterexamples)
[09/27 16:01:55]  Generator returned sat in 0.200971 secs.
[09/27 16:01:55]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:56]  Improved number of small numbers from 63 to 99 out of a max of 109
[09/27 16:01:56]  Verifer returned sat in 0.813406 secs.
[09/27 16:01:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8971.082275    8271.203857 -657.182861  8971.082275    0.060791  8271.203857        0.0  699.878418      699.878418       7.0          8271.203857                -1.0                -1
1    8971.082275    8304.577728 -657.182861  8971.082275  300.704590  8304.577728        0.0  666.504548      599.878418       7.0          8271.203857                 0.0             False
2    8971.082275    8371.203857 -657.182861  8971.082275  300.704590  8371.203857        0.0  599.878418      499.878418       8.0          8271.203857                 0.0             False
3    8971.082275    8471.673584 -657.182861  8971.082275  300.704590  8471.673584        0.0  499.408691      399.878418       9.0          8271.203857                 0.0             False
4    8971.082275    8571.203867 -657.182861  8971.082275  300.704590  8571.203867        0.0  399.878408      299.878418       9.0          8271.203857                 1.0              True
5    8971.143076    8771.203857 -657.182861  8971.143076  399.939209  8771.203857        0.0  199.939219      199.939219       9.0          8271.203857                 1.0              True
6    9371.203857    8771.264893 -657.182861  9371.203857  600.000000  8771.264893        0.0  599.938965      500.000000       9.0          8271.203857                 1.0              True
7    9371.203857    8971.188669 -657.182861  9371.203857  449.386963  8971.188669        0.0  400.015188      400.000000       2.0          9371.203857                 1.0              True
8    9371.203857    8971.264648 -657.182861  9371.203857  399.984802  8971.264648        0.0  399.939209      300.000000       3.0          9371.203857                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:57]  --------------------------------------------------------------------------------
[09/27 16:01:57]  Iteration: 35 (3 solution, 31 counterexamples)
[09/27 16:01:58]  Generator returned sat in 0.156273 secs.
[09/27 16:01:58]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:01:58]  Improved number of small numbers from 43 to 109 out of a max of 109
[09/27 16:01:58]  Verifer returned sat in 0.648786 secs.
[09/27 16:01:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8871.244385    8471.244385 -857.223389  8871.244385    0.030273  8471.244385        0.0  400.000000      400.000000       6.0          8471.244385                -1.0                -1
1    8871.244385    8537.173584 -857.223389  8871.244385    0.030273  8537.173584        0.0  334.070801      300.000000       6.0          8471.244385                 0.0             False
2    8871.244385    8571.244385 -857.223389  8871.244385    0.030518  8571.244385        0.0  300.000000      200.000000       7.0          8471.244385                 0.0             False
3    8871.244385    8671.244385 -857.223389  8871.244385    0.030518  8671.244385        0.0  200.000000      100.000000       8.0          8471.244385                 0.0             False
4    8871.244385    8871.214111 -857.223389  8871.244385  200.000000  8871.214111        0.0    0.030273        0.000000       9.0          8471.244385                 0.0             False
5    9371.274902    8871.244385 -857.223389  9371.274902  500.060791  8871.244385        0.0  500.030518      400.030518       9.0          8471.244385                 1.0              True
6    9371.274902    8971.244385 -857.223389  9371.274902  449.000000  8971.244385        0.0  400.030518      300.030518       2.0          9371.274902                 1.0              True
7    9371.274902    9071.244629 -857.223389  9371.274902  300.000000  9071.244629        0.0  300.030273      200.030518       3.0          9371.274902                 0.0             False
8    9371.274902    9271.244385 -857.223389  9371.274902  200.030518  9271.244385        0.0  100.030518      100.030518       4.0          9371.274902                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:01:59]  --------------------------------------------------------------------------------
[09/27 16:01:59]  Iteration: 36 (3 solution, 32 counterexamples)
[09/27 16:02:00]  Generator returned sat in 0.403850 secs.
[09/27 16:02:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:02:01]  Improved gap from 0.0 to 0
[09/27 16:02:01]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/27 16:02:01]  Verifer returned sat in 1.197629 secs.
[09/27 16:02:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9535.153564    8971.214111 -857.223389  9535.153564  0.030273  8971.214111        0.0  563.939453      563.939453       2.0          8971.214111                -1.0                -1
1    9535.153564    9071.214111 -857.223389  9535.153564  0.030273  9071.214111        0.0  463.939453      463.939453       2.0          8971.214111                 0.0             False
2    9535.153564    9171.214111 -857.223389  9535.153564  0.030273  9171.214111        0.0  363.939453      363.939453       3.0          8971.214111                 0.0             False
3    9535.153564    9271.214111 -857.223389  9535.153564  0.030273  9271.214111        0.0  263.939453      263.939453       4.0          8971.214111                 0.0             False
4    9535.153564    9271.244385 -857.223389  9535.153564  1.000000  9271.244385        0.0  263.909180      163.939453       5.0          8971.214111                 1.0              True
5    9535.153564    9371.214111 -857.223389  9535.153564  1.000000  9371.214111        0.0  163.939453       63.939453       6.0          8971.214111                 1.0              True
6    9535.153564    9534.123291 -821.162842  9535.153564  1.000000  9534.123291        0.0    1.030273        0.000000       7.0          8971.214111                 1.0              True
7    9535.153564    9535.153564 -721.162842  9535.153564  1.000000  9535.153564        0.0    0.000000        0.000000       8.0          8971.214111                 1.0              True
8    9536.153564    9535.183838 -622.162842  9536.153564  1.000000  9535.183838        0.0    0.969727        0.000000       1.0          8971.214111                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:02]  --------------------------------------------------------------------------------
[09/27 16:02:02]  Iteration: 37 (3 solution, 33 counterexamples)
[09/27 16:02:05]  Generator returned sat in 1.637918 secs.
[09/27 16:02:05]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:02:13]  Improved gap from 0.0 to 28.125
[09/27 16:02:13]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:02:13]  Verifer returned sat in 8.057965 secs.
[09/27 16:02:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9142.999512    8614.874512 -135.491211  9142.999512    0.060303  8614.874512        0.0  528.125000      528.125000       2.0          8614.874512                -1.0                -1
1    9142.999512    8699.538818 -135.491211  9142.999512  178.833984  8699.538818        0.0  443.460693      428.125000       3.0          8614.874512                 0.0             False
2    9142.999512    8814.874512 -135.491211  9142.999512  178.833984  8814.874512        0.0  328.125000      328.125000       4.0          8614.874512                 1.0              True
3    9142.999512    8907.306152 -135.491211  9142.999512  178.833984  8907.306152        0.0  235.693359      228.125000       4.0          8614.874512                 1.0              True
4    9142.999512    8914.874756 -135.491211  9142.999512  235.632812  8914.874756        0.0  228.124756      128.125000       5.0          8614.874512                 1.0              True
5    9142.999512    9014.874512 -135.491211  9142.999512  225.484375  9014.874512        0.0  128.125000       28.125000       6.0          9142.999512                 1.0              True
6    9142.999512    9114.874512  -63.616211  9142.999512  112.742188  9114.874512        0.0   28.125000        0.000000       7.0          9142.999512                 1.0             False
7    9171.245605    9142.999512    8.137695  9171.245605   56.371094  9142.999512        0.0   28.246094        0.000000       8.0          9171.245605                 1.0             False
8    9171.245605    9171.245605   80.012451  9171.245605   28.185547  9171.245605        0.0    0.000000      -28.125244       2.0          9171.245605                 1.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:13]  --------------------------------------------------------------------------------
[09/27 16:02:13]  Iteration: 38 (3 solution, 34 counterexamples)
[09/27 16:02:15]  Generator returned sat in 1.243912 secs.
[09/27 16:02:15]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:02:17]  Improved gap from 0.060546875 to 57.8125
[09/27 16:02:17]  Improved number of small numbers from 83 to 110 out of a max of 110
[09/27 16:02:17]  Verifer returned sat in 2.000415 secs.
[09/27 16:02:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8783.590332    8783.579102 -177.633301  8783.590332   57.857955  8783.579102        0.0   0.011230        0.011230       2.0          8783.579102                -1.0                -1
1    8841.425781    8783.601562 -135.491211  8841.425781   57.846680  8783.601562        0.0  57.824219       -0.011230       1.0          8841.425781                 0.0             False
2    8899.249512    8841.437012  -93.303711  8899.249512  115.647949  8841.437012        0.0  57.812500        0.000000       1.0          8841.425781                 0.0             False
3    9056.988281    8966.510742  -93.303711  9056.988281  215.551270  8966.510742        0.0  90.477539       57.738770       1.0          8841.425781                 0.0             False
4    9056.988281    8999.249512  -51.116211  9056.988281   90.465820  8999.249512        0.0  57.738770       -0.073730       2.0          9056.988281                 0.0             False
5    9106.073486    9057.062012   -8.928711  9106.073486  106.823975  9057.062012        0.0  49.011475       -8.801025       1.0          9056.988281                 0.0             False
6    9163.874512    9114.874512   33.258789  9163.874512  106.812500  9114.874512        0.0  49.000000       -8.812500       1.0          9163.874512                 0.0             False
7    9188.056396    9172.687012   75.446289  9188.056396   73.181885  9172.687012        0.0  15.369385      -42.443115       1.0          9188.056396                 0.0             False
8    9258.405762    9230.499512   75.446289  9258.405762   85.718750  9230.499512        0.0  27.906250      -72.093750       1.0          9188.056396                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:18]  --------------------------------------------------------------------------------
[09/27 16:02:18]  Iteration: 39 (3 solution, 35 counterexamples)
[09/27 16:02:20]  Generator returned sat in 1.094297 secs.
[09/27 16:02:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:02:24]  Improved gap from 1.6812744140625 to 56.25
[09/27 16:02:24]  Improved number of small numbers from 45 to 110 out of a max of 110
[09/27 16:02:24]  Verifer returned sat in 4.081207 secs.
[09/27 16:02:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9536.803711    9476.295654 -799.478760  9536.803711    0.060547  9476.295654        0.0  60.508057       60.508057       1.0          9476.295654                -1.0                -1
1    9536.803711    9480.493408 -760.047363  9536.803711   56.491455  9480.493408        0.0  56.310303       -0.060547       2.0          9476.295654                 0.0             False
2    9536.924805    9536.864502 -726.676514  9536.924805   56.431396  9536.864502        0.0   0.060303      -66.568604       1.0          9536.924805                 1.0              True
3    9703.433105    9664.553955 -726.676514  9703.433105  166.568604  9664.553955        0.0  38.879150       -0.060303       1.0          9536.924805                 0.0             False
4    9759.683105    9703.493408 -682.926514  9759.683105   95.129150  9703.493408        0.0  56.189697       -0.060303       1.0          9759.683105                 0.0             False
5    9815.993408    9759.743408 -639.176514  9815.993408  112.500000  9759.743408        0.0  56.250000        0.000000       1.0          9759.683105                 0.0             False
6    9872.182861    9815.993408 -595.426514  9872.182861  112.439453  9815.993408        0.0  56.189453       -0.060547       2.0          9872.182861                 0.0             False
7    9892.713135    9872.243408 -551.676758  9892.713135   76.719727  9872.243408        0.0  20.469727      -35.780518       1.0          9892.713135                 1.0             False
8    9957.618408    9928.493652 -551.676514  9957.618408   85.375000  9928.493652        0.0  29.124756      -70.875000       1.0          9892.713135                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:25]  --------------------------------------------------------------------------------
[09/27 16:02:25]  Iteration: 40 (3 solution, 36 counterexamples)
[09/27 16:02:26]  Generator returned sat in 0.383872 secs.
[09/27 16:02:26]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:02:33]  Improved gap from 0.0 to 46.875
[09/27 16:02:33]  Improved number of small numbers from 56 to 110 out of a max of 110
[09/27 16:02:33]  Verifer returned sat in 6.791201 secs.
[09/27 16:02:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9487.697266    9344.673340 -710.836182  9487.697266    0.044434  9344.673340        0.0  143.023926      100.044189       4.0          9344.673340                -1.0                -1
1    9487.697266    9487.652832 -710.836182  9487.697266    0.044434  9487.652832        0.0    0.044434        0.044189       4.0          9344.673340                 1.0             False
2    9534.616699    9487.741699 -657.799805  9534.616699   46.963867  9487.741699        0.0   46.875000        0.000000       1.0          9344.673340                 1.0              True
3    9581.580566    9534.616699 -604.763672  9581.580566   93.838867  9534.616699        0.0   46.963867        0.000000       2.0          9344.673340                 0.0             False
4    9629.588379    9581.580566 -552.771484  9629.588379   94.971680  9581.580566        0.0   48.007812        0.000000       2.0          9344.673340                 1.0              True
5    9629.588379    9629.588379 -499.646729  9629.588379   46.963867  9629.588379        0.0    0.000000      -46.875244       2.0          9629.588379                 1.0              True
6    9724.993652    9678.118652 -448.176758  9724.993652   95.405273  9678.118652        0.0   46.875000        0.000000       1.0          9629.588379                 1.0             False
7    9798.572266    9724.993652 -421.755371  9798.572266  120.453613  9724.993652        0.0   73.578613        0.000000       2.0          9629.588379                 0.0             False
8    9798.572266    9798.572266 -421.755371  9798.572266   71.706543  9798.572266        0.0    0.000000     -100.000000       2.0          9798.572266                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:34]  --------------------------------------------------------------------------------
[09/27 16:02:34]  Iteration: 41 (3 solution, 37 counterexamples)
[09/27 16:02:35]  Generator returned sat in 0.672301 secs.
[09/27 16:02:35]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:02:39]  Improved gap from 0.0301513671875 to 4.6875
[09/27 16:02:39]  Improved number of small numbers from 46 to 110 out of a max of 110
[09/27 16:02:39]  Verifer returned sat in 3.627063 secs.
[09/27 16:02:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9425.517822    9124.375244 -700.076172  9425.517822    0.030029  9124.375244        0.0  301.142578      204.687500       6.0          9124.375244                -1.0                -1
1    9425.517822    9320.830322 -700.076172  9425.517822    0.030029  9320.830322        0.0  104.687500      104.687500       5.0          9124.375244                 0.0             False
2    9425.517822    9420.800049 -700.076172  9425.517822    0.030029  9420.800049        0.0    4.717773        4.687500       6.0          9124.375244                 0.0             False
3    9425.517822    9420.830322 -604.763672  9425.517822    0.030273  9420.830322        0.0    4.687500        0.000000       7.0          9124.375244                 0.0             False
4    9569.057861    9425.517822 -604.763672  9569.057861  148.227539  9425.517822        0.0  143.540039       43.540039       8.0          9124.375244                 1.0              True
5    9569.057861    9525.517822 -548.333740  9569.057861   52.343750  9525.517822        0.0   43.540039       -0.030029       2.0          9569.057861                 1.0              True
6    9605.048584    9569.088135 -484.324463  9605.048584   79.530762  9569.088135        0.0   35.960449       -0.030029       1.0          9569.057861                 0.0             False
7    9683.982422    9605.078613 -463.228271  9683.982422  114.894287  9605.078613        0.0   78.903809        0.000000       1.0          9569.057861                 0.0             False
8    9753.306152    9684.012451 -463.228271  9753.306152  148.227539  9684.012451        0.0   69.293701      -30.676270       1.0          9569.057861                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:39]  --------------------------------------------------------------------------------
[09/27 16:02:39]  Iteration: 42 (3 solution, 38 counterexamples)
[09/27 16:02:41]  Generator returned sat in 0.498312 secs.
[09/27 16:02:41]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:02:42]  Improved number of small numbers from 49 to 109 out of a max of 109
[09/27 16:02:42]  Verifer returned sat in 0.867505 secs.
[09/27 16:02:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9584.014404    9084.014648 -484.324707   9584.014404    0.030029  9084.014648        0.0  499.999756      499.999756       6.0          9084.014648                -1.0                -1
1    9584.014404    9183.984619 -484.324707   9584.014404    0.030273  9183.984619        0.0  400.029785      399.999756       4.0          9084.014648                 0.0             False
2    9584.014404    9184.014648 -484.324707   9584.014404    0.030273  9184.014648        0.0  399.999756      299.999756       4.0          9084.014648                 0.0             False
3    9584.014404    9284.014648 -484.324707   9584.014404    0.030273  9284.014648        0.0  299.999756      199.999756       5.0          9084.014648                 0.0             False
4    9584.014404    9416.312744 -484.324707   9584.014404  101.015137  9416.312744        0.0  167.701660       99.999756       6.0          9084.014648                 0.0             False
5    9584.014404    9582.135254 -484.324707   9584.014404  167.671631  9582.135254        0.0    1.879150       -0.000244       7.0          9084.014648                 0.0             False
6    9980.255859    9684.014648 -484.324707   9980.255859  398.120605  9684.014648        0.0  296.241211      296.241211       1.0          9084.014648                 1.0              True
7   10084.074951    9684.044922 -484.324707  10084.074951  400.060303  9684.044922        0.0  400.030029      300.060303       2.0          9084.014648                 0.0             False
8   10084.074951    9784.014648 -484.324707  10084.074951  334.896240  9784.014648        0.0  300.060303      200.060303       3.0         10084.074951                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:42]  --------------------------------------------------------------------------------
[09/27 16:02:42]  Iteration: 43 (3 solution, 39 counterexamples)
[09/27 16:02:44]  Generator returned sat in 0.633684 secs.
[09/27 16:02:44]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:02:45]  Improved number of small numbers from 68 to 109 out of a max of 109
[09/27 16:02:45]  Verifer returned sat in 1.039313 secs.
[09/27 16:02:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11483.833984   10684.135010 -484.324951  11483.833984    0.060059  10684.135010        0.0  799.698975      699.879395       6.0          10684.13501                -1.0                -1
1   11483.833984   10785.833984 -484.324951  11483.833984  299.819336  10785.833984        0.0  698.000000      599.879395       6.0          10684.13501                 0.0             False
2   11483.833984   10886.135010 -484.324951  11483.833984  299.819336  10886.135010        0.0  597.698975      499.879395       7.0          10684.13501                 0.0             False
3   11483.833984   10983.954590 -484.324951  11483.833984  299.819580  10983.954590        0.0  499.879395      399.879395       8.0          10684.13501                 0.0             False
4   11483.833984   11085.653564 -484.324951  11483.833984  299.819580  11085.653564        0.0  398.180420      299.879395       9.0          10684.13501                 1.0              True
5   11483.833984   11183.954590 -484.324951  11483.833984  299.819580  11183.954590        0.0  299.879395      199.879395       7.0          10684.13501                 1.0              True
6   11483.833984   11383.954590 -484.324951  11483.833984  299.819580  11383.954590        0.0   99.879395       99.879395       8.0          10684.13501                 0.0             False
7   11783.954590   11483.894287 -484.324951  11783.954590  400.000000  11483.894287        0.0  300.060303      300.000000       1.0          10684.13501                 1.0              True
8   11884.014648   11483.954590 -484.324951  11884.014648  400.120361  11483.954590        0.0  400.060059      300.060059       2.0          10684.13501                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:46]  --------------------------------------------------------------------------------
[09/27 16:02:46]  Iteration: 44 (3 solution, 40 counterexamples)
[09/27 16:02:47]  Generator returned sat in 0.637651 secs.
[09/27 16:02:48]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:02:48]  Improved number of small numbers from 109 to 109 out of a max of 109
[09/27 16:02:48]  Verifer returned sat in 0.142578 secs.
[09/27 16:02:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11483.833984   10684.135010 -484.324951  11483.833984    0.060059  10684.135010        0.0  799.698975      699.879395       8.0          10684.13501                -1.0                -1
1   11483.833984   10785.833984 -484.324951  11483.833984  299.819336  10785.833984        0.0  698.000000      599.879395       8.0          10684.13501                 0.0             False
2   11483.833984   10886.135010 -484.324951  11483.833984  299.819336  10886.135010        0.0  597.698975      499.879395       8.0          10684.13501                 0.0             False
3   11483.833984   10983.954590 -484.324951  11483.833984  299.819580  10983.954590        0.0  499.879395      399.879395       9.0          10684.13501                 0.0             False
4   11483.833984   11085.653564 -484.324951  11483.833984  299.819580  11085.653564        0.0  398.180420      299.879395       9.0          10684.13501                 1.0              True
5   11483.833984   11183.954590 -484.324951  11483.833984  299.819580  11183.954590        0.0  299.879395      199.879395       8.0          10684.13501                 1.0              True
6   11483.833984   11383.954590 -484.324951  11483.833984  299.819580  11383.954590        0.0   99.879395       99.879395       9.0          10684.13501                 0.0             False
7   11783.954590   11483.894287 -484.324951  11783.954590  400.000000  11483.894287        0.0  300.060303      300.000000       1.0          10684.13501                 1.0              True
8   11884.014648   11483.954590 -484.324951  11884.014648  400.120361  11483.954590        0.0  400.060059      300.060059       2.0          10684.13501                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:48]  --------------------------------------------------------------------------------
[09/27 16:02:48]  Iteration: 45 (3 solution, 41 counterexamples)
[09/27 16:02:51]  Generator returned sat in 2.072735 secs.
[09/27 16:02:51]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:02:54]  Improved gap from 0.0033333333333333335 to 23.4375
[09/27 16:02:54]  Improved number of small numbers from 52 to 108 out of a max of 110
[09/27 16:02:54]  Verifer returned sat in 2.717415 secs.
[09/27 16:02:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10949.556885   10703.646240 -788.892822  10949.556885  136.960449  10703.646240        0.0  245.910645      237.020264       7.0         10703.646240                -1.0                -1
1   10949.556885   10761.577393 -788.892822  10949.556885  136.960449  10761.577393        0.0  187.979492      137.020264       4.0         10703.646240                 1.0             False
2   10949.556885   10812.536621 -788.892822  10949.556885  136.960449  10812.536621        0.0  137.020264       37.020264       4.0         10703.646240                 1.0              True
3   10949.556885   10920.591309 -725.913086  10949.556885  136.960449  10920.591309        0.0   28.965576        0.000000       4.0         10703.646240                 1.0              True
4   11137.536377   10949.556885 -725.913086  11137.536377  216.945068  10949.556885        0.0  187.979492       87.979492       5.0         10703.646240                 1.0              True
5   11137.536377   11066.984131 -713.892578  11137.536377  187.979492  11066.984131        0.0   70.552246        0.000000       2.0         11137.536377                 1.0              True
6   11160.973877   11137.536621 -637.330322  11160.973877   93.989746  11137.536621        0.0   23.437256       -0.000244       1.0         11160.973877                 0.0             False
7   11184.531494   11160.974121 -560.887695  11184.531494   46.994873  11160.974121        0.0   23.557373        0.000000       1.0         11184.531494                 0.0             False
8   11184.531494   11184.531494 -484.325195  11184.531494   23.497437  11184.531494        0.0    0.000000      -23.437500       2.0         11184.531494                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:02:55]  --------------------------------------------------------------------------------
[09/27 16:02:55]  Iteration: 46 (3 solution, 42 counterexamples)
[09/27 16:02:57]  Generator returned sat in 1.233431 secs.
[09/27 16:02:57]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:03:01]  Verifer returned unsat in 3.597920 secs.
[09/27 16:03:01]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:03:01]  --------------------------------------------------------------------------------
[09/27 16:03:01]  Iteration: 47 (4 solution, 42 counterexamples)
[09/27 16:03:02]  Generator returned sat in 0.364118 secs.
[09/27 16:03:02]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:03:07]  Improved gap from 22.369155883789062 to 23.4375
[09/27 16:03:08]  Improved number of small numbers from 63 to 110 out of a max of 110
[09/27 16:03:08]  Verifer returned sat in 5.302327 secs.
[09/27 16:03:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10658.464600   10368.973877 -453.943115  10658.464600    0.017578  10368.973877        0.0  289.490723      280.877686       4.0         10368.973877                -1.0                -1
1   10658.464600   10477.586670 -453.943115  10658.464600    0.017578  10477.586670        0.0  180.877930      180.877686       4.0         10368.973877                 0.0             False
2   10658.464600   10577.569092 -453.943115  10658.464600    0.017578  10577.569092        0.0   80.895508       80.877686       5.0         10368.973877                 0.0             False
3   10658.464600   10577.586914 -434.820801  10658.464600    0.017822  10577.586914        0.0   80.877686        0.000000       6.0         10368.973877                 0.0             False
4   10681.902344   10658.464600 -358.258545  10681.902344  104.315430  10658.464600        0.0   23.437744        0.000000       7.0         10368.973877                 0.0             False
5   10711.622314   10681.919678 -287.995850  10711.622314   53.157715  10681.919678        0.0   29.702637       -0.017334       1.0         10711.622314                 1.0              True
6   10760.673828   10711.639893 -237.047607  10760.673828   78.754150  10711.639893        0.0   49.033936       -0.017578       1.0         10711.622314                 0.0             False
7   10818.043457   10760.691406 -217.925537  10818.043457  106.403564  10760.691406        0.0   57.352051      -23.525879       1.0         10711.622314                 0.0             False
8   10865.006592   10841.569336 -217.925537  10865.006592  104.315186  10841.569336        0.0   23.437256      -76.562744       1.0         10865.006592                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:03:08]  --------------------------------------------------------------------------------
[09/27 16:03:08]  Iteration: 48 (4 solution, 43 counterexamples)
[09/27 16:03:10]  Generator returned sat in 0.404990 secs.
[09/27 16:03:10]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:03:17]  Improved gap from 23.437744140625 to 23.4375
[09/27 16:03:18]  Improved number of small numbers from 51 to 59 out of a max of 110
[09/27 16:03:18]  Verifer returned sat in 8.087597 secs.
[09/27 16:03:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9856.000792    9575.105490 -453.925499   9856.000792    0.009909   9575.105490        0.0  280.895302      280.895302       7.0          9575.105490                -1.0                -1
1    9856.000792    9575.105713 -453.925499   9856.000792    0.009909   9575.105713        0.0  280.895079      180.895302       5.0          9575.105490                 0.0             False
2    9856.000792    9775.095581 -453.925499   9856.000792    0.010010   9775.095581        0.0   80.905211       80.895302       6.0          9575.105490                 0.0             False
3    9856.000792    9775.105490 -434.820801   9856.000792    8.645787   9775.105490        0.0   80.895302        0.000000       7.0          9575.105490                 0.0             False
4    9879.428383    9856.000792 -358.258301   9879.428383  104.322894   9856.000792        0.0   23.427591       -0.009909       8.0          9575.105490                 0.0             False
5    9909.162239    9879.438292 -288.065918   9909.162239   53.161447   9879.438292        0.0   29.723947       -0.083670       1.0          9909.162239                 1.0              True
6    9958.190371    9909.246011 -237.010498   9958.190371   78.752079   9909.246011        0.0   48.944360       -0.000119       1.0          9909.162239                 0.0             False
7   10015.692311    9958.200279 -217.915527  10015.692311  106.446300   9958.200279        0.0   57.492032      -23.403208       1.0          9909.162239                 0.0             False
8   10062.523173   10039.095703 -217.915527  10062.523173  104.322894  10039.095703        0.0   23.427470      -76.572346       1.0         10062.523173                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:03:19]  --------------------------------------------------------------------------------
[09/27 16:03:19]  Iteration: 49 (4 solution, 44 counterexamples)
[09/27 16:03:20]  Generator returned sat in 0.586703 secs.
[09/27 16:03:21]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:03:26]  Improved gap from 11.630577087402344 to 23.4375
[09/27 16:03:27]  Improved number of small numbers from 55 to 63 out of a max of 110
[09/27 16:03:27]  Verifer returned sat in 6.623082 secs.
[09/27 16:03:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9855.705337    9575.105490 -453.925499   9855.705337    8.054688   9575.105490        0.0  280.599848      280.599848       6.0          9575.105490                -1.0                -1
1    9855.705337    9575.105713 -453.925499   9855.705337    8.054688   9575.105713        0.0  280.599624      180.599848       6.0          9575.105490                 0.0             False
2    9855.705337    9775.095581 -453.925499   9855.705337    8.054688   9775.095581        0.0   80.609756       80.599848       7.0          9575.105490                 0.0             False
3    9855.705337    9775.105490 -434.525346   9855.705337    8.054878   9775.105490        0.0   80.599848        0.000000       8.0          9575.105490                 0.0             False
4    9879.132929    9855.705337 -357.962846   9879.132929  104.027439   9855.705337        0.0   23.427591       -0.009909       9.0          9575.105490                 0.0             False
5    9908.719057    9879.142837 -287.548828   9908.719057   53.013720   9879.142837        0.0   29.576220       -0.009762       1.0          9908.719057                 1.0              True
6    9957.673325    9908.728965 -236.503174   9957.673325   78.530488   9908.728965        0.0   48.944360       -0.009840       1.0          9908.719057                 0.0             False
7   10014.805947    9957.683234 -217.915527  10014.805947  106.076982   9957.683234        0.0   57.122713      -24.289571       1.0          9908.719057                 0.0             False
8   10061.710673   10039.095703 -217.915527  10061.710673  104.027439  10039.095703        0.0   22.614970      -77.384846       1.0         10061.710673                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:03:28]  --------------------------------------------------------------------------------
[09/27 16:03:28]  Iteration: 50 (4 solution, 45 counterexamples)
[09/27 16:03:32]  Generator returned sat in 2.673031 secs.
[09/27 16:03:32]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:03:38]  Improved gap from 0.0008333333333333334 to 39.0625
[09/27 16:03:39]  Improved number of small numbers from 71 to 75 out of a max of 110
[09/27 16:03:39]  Verifer returned sat in 7.293915 secs.
[09/27 16:03:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9217.175078    8741.184245 -434.525346  9217.175078    3.955811  8741.184245        0.0  475.990833      475.990833       7.0          8741.184245                -1.0                -1
1    9217.175078    8841.184245 -434.525346  9217.175078    3.955811  8841.184245        0.0  375.990833      375.990833       5.0          8741.184245                 0.0             False
2    9217.175078    8941.184082 -434.525346  9217.175078    3.955811  8941.184082        0.0  275.990996      275.990833       6.0          8741.184245                 0.0             False
3    9217.175078    9041.181745 -434.525346  9217.175078    3.955833  9041.181745        0.0  175.993333      175.990833       7.0          8741.184245                 0.0             False
4    9217.175078    9041.184245 -434.525346  9217.175078  151.976667  9041.184245        0.0  175.990833       75.990833       8.0          8741.184245                 0.0             False
5    9217.175078    9141.184245 -410.516180  9217.175078  175.988333  9141.184245        0.0   75.990833        0.000000       9.0          8741.184245                 0.0             False
6    9217.175078    9217.175078 -349.578680  9217.175078    0.010000  9217.175078        0.0    0.000000      -39.062500       8.0          9217.175078                 1.0              True
7    9305.176745    9256.237578 -298.520264  9305.176745   88.001667  9256.237578        0.0   48.939167       -0.002417       1.0          9217.175078                 0.0             False
8    9407.765078    9305.179443 -298.520264  9407.765078  151.527500  9305.179443        0.0  102.585635        2.585916       1.0          9217.175078                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:03:40]  --------------------------------------------------------------------------------
[09/27 16:03:40]  Iteration: 51 (4 solution, 46 counterexamples)
[09/27 16:03:44]  Generator returned sat in 3.106497 secs.
[09/27 16:03:44]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:03:47]  Improved gap from 0.0025 to 39.0625
[09/27 16:03:48]  Improved number of small numbers from 59 to 63 out of a max of 110
[09/27 16:03:48]  Verifer returned sat in 4.058262 secs.
[09/27 16:03:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8789.097995    8516.176328 -209.517430  8789.097995    0.002441  8516.176328        0.0  272.921667      272.921667       6.0          8516.176328                -1.0                -1
1    8789.097995    8516.178711 -209.517430  8789.097995    0.002441  8516.178711        0.0  272.919284      172.921667       6.0          8516.176328                 0.0             False
2    8789.097995    8716.173828 -209.517430  8789.097995    0.002500  8716.173828        0.0   72.924167       72.921667       7.0          8516.176328                 0.0             False
3    8789.097995    8716.176328 -182.439096  8789.097995   23.901667  8716.176328        0.0   72.921667        0.000000       8.0          8516.176328                 0.0             False
4    8829.127161    8789.097995 -122.468263  8829.127161  112.950833  8789.097995        0.0   40.029167        0.000000       9.0          8516.176328                 0.0             False
5    8829.127161    8829.127161  -61.530763  8829.127161    0.010000  8829.127161        0.0    0.000000      -39.062500       2.0          8829.127161                 1.0              True
6    8886.608828    8868.189661   -0.593263  8886.608828   57.481667  8868.189661        0.0   18.419167      -20.643333       1.0          8829.127161                 0.0             False
7    8973.937161    8907.252161   26.485107  8973.937161  105.747500  8907.252161        0.0   66.685000       -6.236630       1.0          8829.127161                 0.0             False
8    9020.202995    8980.173828   26.485107  9020.202995  112.950833  8980.173828        0.0   40.029167      -59.970796       1.0          8829.127161                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:03:49]  --------------------------------------------------------------------------------
[09/27 16:03:49]  Iteration: 52 (4 solution, 47 counterexamples)
[09/27 16:03:51]  Generator returned sat in 1.203725 secs.
[09/27 16:03:51]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:04:00]  Improved gap from 0.0 to 18.75
[09/27 16:04:01]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/27 16:04:01]  Verifer returned sat in 10.190499 secs.
[09/27 16:04:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9056.851562    8773.010254 -466.353760  9056.851562    0.054932  8773.010254        0.0  283.841309      283.841309       7.0          8773.010254                -1.0                -1
1    9056.851562    8873.010254 -466.353760  9056.851562    0.054932  8873.010254        0.0  183.841309      183.841309       7.0          8773.010254                 0.0             False
2    9056.851562    8972.955566 -466.353760  9056.851562    0.054932  8972.955566        0.0   83.895996       83.841309       8.0          8773.010254                 0.0             False
3    9056.851562    8973.010254 -450.195068  9056.851562    3.073242  8973.010254        0.0   83.841309        0.000000       8.0          8773.010254                 0.0             False
4    9075.546875    9056.851562 -368.945312  9075.546875  102.536621  9056.851562        0.0   18.695312       -0.054932       9.0          8773.010254                 0.0             False
5    9107.119873    9075.601807 -300.518555  9107.119873   50.268311  9075.601807        0.0   31.518066       -0.055176       1.0          9107.119873                 1.0              True
6    9153.059082    9107.175049 -246.457275  9153.059082   77.457275  9107.175049        0.0   45.884033       -0.054688       1.0          9107.119873                 0.0             False
7    9213.986084    9153.113770 -207.329590  9213.986084  106.811035  9153.113770        0.0   60.872314        0.000000       1.0          9107.119873                 0.0             False
8    9255.650391    9236.955322 -149.049072  9255.650391  102.536621  9236.955322        0.0   18.695068       -0.055176       1.0          9255.650391                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:04:02]  --------------------------------------------------------------------------------
[09/27 16:04:02]  Iteration: 53 (4 solution, 48 counterexamples)
[09/27 16:04:04]  Generator returned sat in 0.409136 secs.
[09/27 16:04:04]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:04:07]  Improved gap from 0.0 to 1.5625
[09/27 16:04:08]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:04:08]  Verifer returned sat in 3.848294 secs.
[09/27 16:04:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8866.356934    8364.327148 -547.049072  8866.356934  0.029541  8364.327148        0.0  502.029785      502.029785       6.0          8364.327148                -1.0                -1
1    8866.356934    8464.326904 -547.049072  8866.356934  0.029541  8464.326904        0.0  402.030029      402.029785       7.0          8364.327148                 0.0             False
2    8866.356934    8564.326904 -547.049072  8866.356934  0.029541  8564.326904        0.0  302.030029      302.029785       8.0          8364.327148                 0.0             False
3    8866.356934    8664.327148 -547.049072  8866.356934  2.000000  8664.327148        0.0  202.029785      202.029785       9.0          8364.327148                 0.0             False
4    8866.356934    8764.327148 -547.049072  8866.356934  2.000000  8764.327148        0.0  102.029785      102.029785       9.0          8364.327148                 1.0              True
5    8866.356934    8864.297119 -547.049072  8866.356934  2.000000  8864.297119        0.0    2.059814        2.029785       9.0          8364.327148                 1.0              True
6    8866.356934    8864.327148 -449.078857  8866.356934  2.000000  8864.327148        0.0    2.029785        0.000000       9.0          8364.327148                 1.0              True
7    8866.356934    8866.356934 -350.641357  8866.356934  2.000000  8866.356934        0.0    0.000000       -1.562500       9.0          8364.327148                 1.0              True
8    8868.356934    8867.919434 -350.641357  8868.356934  2.000000  8867.919434        0.0    0.437500      -99.562500       1.0          8364.327148                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:04:08]  --------------------------------------------------------------------------------
[09/27 16:04:08]  Iteration: 54 (4 solution, 49 counterexamples)
[09/27 16:04:10]  Generator returned sat in 0.598404 secs.
[09/27 16:04:10]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:04:24]  Improved gap from 0.00125 to 15.625
[09/27 16:04:25]  Improved number of small numbers from 55 to 64 out of a max of 110
[09/27 16:04:25]  Verifer returned sat in 14.674835 secs.
[09/27 16:04:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8076.765938    7791.371097 -543.113580  8076.765938    0.039551  7791.371097        0.0  285.394841      285.394841       6.0          7791.371097                -1.0                -1
1    8076.765938    7791.371338 -543.113580  8076.765938    0.039551  7791.371338        0.0  285.394600      185.394841       6.0          7791.371097                 0.0             False
2    8076.765938    7991.331414 -543.113580  8076.765938    0.039683  7991.331414        0.0   85.434524       85.394841       7.0          7791.371097                 0.0             False
3    8076.765938    7991.371097 -528.508421  8076.765938    0.039683  7991.371097        0.0   85.394841        0.000000       8.0          7791.371097                 0.0             False
4    8092.390938    8076.765938 -444.133545  8092.390938  101.019841  8076.765938        0.0   15.625000       -0.000124       9.0          7791.371097                 0.0             False
5    8127.275859    8092.430621 -379.370361  8127.275859   50.509921  8092.430621        0.0   34.845238       -0.352020       1.0          8127.275859                 1.0              True
6    8169.235184    8127.628041 -320.977783  8169.235184   76.804563  8127.628041        0.0   41.607143       -0.000116       1.0          8127.275859                 0.0             False
7    8235.158795    8169.274867 -307.073730  8235.158795  107.530754  8169.274867        0.0   65.883929      -20.172452       1.0          8127.275859                 0.0             False
8    8270.294708    8255.331543 -307.073730  8270.294708  101.019841  8255.331543        0.0   14.963165      -85.036540       1.0          8270.294708                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:04:26]  --------------------------------------------------------------------------------
[09/27 16:04:26]  Iteration: 55 (4 solution, 50 counterexamples)
[09/27 16:04:29]  Generator returned sat in 2.419858 secs.
[09/27 16:04:29]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:04:38]  Improved gap from 0.0025 to 39.0625
[09/27 16:04:39]  Improved number of small numbers from 55 to 64 out of a max of 110
[09/27 16:04:39]  Verifer returned sat in 9.798241 secs.
[09/27 16:04:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8156.218914    7859.393498 -635.039551  8156.218914    0.001221  7859.393498        0.0  296.825417      272.921846       7.0          7859.393498                -1.0                -1
1    8156.218914    7983.296631 -635.039551  8156.218914    0.001221  7983.296631        0.0  172.922283      172.921846       6.0          7859.393498                 0.0             False
2    8156.218914    8083.296831 -635.039551  8156.218914    0.001250  8083.296831        0.0   72.922083       72.921846       6.0          7859.393498                 0.0             False
3    8156.218914    8083.298081 -607.961397  8156.218914    0.001250  8083.298081        0.0   72.920833        0.000000       7.0          7859.393498                 0.0             False
4    8196.250998    8156.218914 -547.993480  8196.250998  112.952917  8156.218914        0.0   40.032083        0.000000       8.0          7859.393498                 0.0             False
5    8196.250998    8196.250998 -487.055980  8196.250998    0.010000  8196.250998        0.0    0.000000      -39.062500       2.0          8196.250998                 1.0              True
6    8253.733081    8235.313498 -426.118480  8253.733081   57.482083  8235.313498        0.0   18.419583      -20.642917       1.0          8196.250998                 0.0             False
7    8341.062248    8274.375998 -392.804932  8341.062248  105.748750  8274.375998        0.0   66.686250       -0.000201       1.0          8196.250998                 0.0             False
8    8387.328914    8347.296875 -392.804932  8387.328914  112.952917  8347.296875        0.0   40.032039      -53.733535       1.0          8196.250998                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:04:40]  --------------------------------------------------------------------------------
[09/27 16:04:40]  Iteration: 56 (4 solution, 51 counterexamples)
[09/27 16:04:46]  Generator returned sat in 5.094949 secs.
[09/27 16:04:46]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:04:53]  Improved gap from 0.0 to 46.875
[09/27 16:04:55]  Improved number of small numbers from 45 to 52 out of a max of 110
[09/27 16:04:55]  Verifer returned sat in 8.185094 secs.
[09/27 16:04:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8083.330592    7893.830592 -598.834473  8083.330592    0.059082  7893.830592        0.0  189.500000      146.875211       1.0          7893.830592                -1.0                -1
1    8083.330592    8019.961289 -598.834473  8083.330592    0.059082  8019.961289        0.0   63.369303       46.875211       2.0          7893.830592                 0.0             False
2    8083.330592    8036.455592 -545.709683  8083.330592   63.310059  8036.455592        0.0   46.875000        0.000000       3.0          7893.830592                 1.0              True
3    8130.205592    8083.330592 -492.584683  8130.205592   93.750000  8083.330592        0.0   46.875000        0.000000       4.0          7893.830592                 1.0              True
4    8177.080592    8130.205592 -439.518799  8177.080592   93.750000  8130.205592        0.0   46.875000       -0.059116       2.0          7893.830592                 1.0              True
5    8184.327744    8177.139919 -386.394043  8184.327744   54.122152  8177.139919        0.0    7.187826      -39.687208       1.0          8184.327744                 1.0              True
6    8275.543157    8225.823295 -337.922248  8275.543157   98.403239  8225.823295        0.0   49.719862        0.000000       1.0          8184.327744                 0.0             False
7    8347.271266    8275.543157 -309.650357  8347.271266  121.447971  8275.543157        0.0   71.728109        0.000000       2.0          8184.327744                 0.0             False
8    8347.271266    8347.271266 -309.650146  8347.271266   71.668783  8347.271266        0.0    0.000000      -99.999789       2.0          8347.271266                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:04:55]  --------------------------------------------------------------------------------
[09/27 16:04:55]  Iteration: 57 (4 solution, 52 counterexamples)
[09/27 16:05:00]  Generator returned sat in 3.174225 secs.
[09/27 16:05:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:05:00]  Improved number of small numbers from 69 to 109 out of a max of 109
[09/27 16:05:00]  Verifer returned sat in 0.653918 secs.
[09/27 16:05:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8677.632080    7980.483398 -1237.921875  8677.632080    0.029541  7980.483398        0.0  697.148682      697.148438       7.0          7980.483398                -1.0                -1
1    8677.632080    8031.454102 -1237.921875  8677.632080    0.029541  8031.454102        0.0  646.177979      597.148438       7.0          7980.483398                 1.0             False
2    8677.632080    8180.483643 -1237.921875  8677.632080    0.029541  8180.483643        0.0  497.148438      497.148438       4.0          7980.483398                 1.0              True
3    8677.632080    8180.483643 -1237.921875  8677.632080    0.029541  8180.483643        0.0  497.148438      397.148438       4.0          7980.483398                 1.0              True
4    8677.632080    8280.483643 -1237.921875  8677.632080  101.014893  8280.483643        0.0  397.148438      297.148438       5.0          7980.483398                 1.0             False
5    8677.632080    8429.542969 -1237.921875  8677.632080  248.029541  8429.542969        0.0  248.089111      197.148438       6.0          7980.483398                 1.0              True
6    8677.632080    8579.602295 -1237.921875  8677.632080  248.059326  8579.602295        0.0   98.029785       97.148438       7.0          7980.483398                 1.0              True
7    8977.720947    8680.483643 -1237.921875  8977.720947  398.118652  8680.483643        0.0  297.237305      297.237305       1.0          7980.483398                 1.0              True
8    9080.542969    8680.513428 -1237.921875  9080.542969  400.059326  8680.513428        0.0  400.029541      300.059326       2.0          7980.483398                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:05:01]  --------------------------------------------------------------------------------
[09/27 16:05:01]  Iteration: 58 (4 solution, 53 counterexamples)
[09/27 16:05:05]  Generator returned sat in 2.888190 secs.
[09/27 16:05:05]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:05:05]  Improved gap from 0.0 to 100
[09/27 16:05:06]  Improved number of small numbers from 100 to 110 out of a max of 110
[09/27 16:05:06]  Verifer returned sat in 0.355195 secs.
[09/27 16:05:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8680.483643    7980.483643 -1237.922119  8680.483643    0.059082  7980.483643        0.0  700.000000      700.000000       5.0          7980.483643                -1.0                -1
1    8680.483643    8080.483398 -1237.922119  8680.483643    0.059082  8080.483398        0.0  600.000244      600.000000       5.0          7980.483643                 0.0             False
2    8680.483643    8180.483643 -1237.922119  8680.483643    0.059082  8180.483643        0.0  500.000000      500.000000       6.0          7980.483643                 0.0             False
3    8680.483643    8280.483643 -1237.922119  8680.483643  395.118164  8280.483643        0.0  400.000000      400.000000       7.0          7980.483643                 0.0             False
4    8680.483643    8283.306152 -1237.922119  8680.483643  396.118164  8283.306152        0.0  397.177490      300.000000       8.0          7980.483643                 1.0              True
5    8680.483643    8380.483643 -1237.922119  8680.483643  397.118164  8380.483643        0.0  300.000000      200.000000       8.0          7980.483643                 1.0              True
6    8778.601807    8480.483643 -1237.922119  8778.601807  398.118164  8480.483643        0.0  298.118164      198.118164       8.0          7980.483643                 1.0              True
7    8879.601807    8680.483643 -1237.922119  8879.601807  399.118164  8680.483643        0.0  199.118164      199.118164       8.0          7980.483643                 1.0              True
8    9080.601807    8680.542725 -1237.922119  9080.601807  400.118164  8680.542725        0.0  400.059082      300.118164       3.0          7980.483643                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:05:06]  --------------------------------------------------------------------------------
[09/27 16:05:06]  Iteration: 59 (4 solution, 54 counterexamples)
[09/27 16:05:13]  Generator returned sat in 5.757788 secs.
[09/27 16:05:13]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:05:19]  Improved gap from 0.0 to 0
[09/27 16:05:19]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/27 16:05:19]  Verifer returned sat in 5.466246 secs.
[09/27 16:05:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9549.819336    9349.789795 -1482.505371  9549.819336    0.029297  9349.789795        0.0  200.029541      200.029541       6.0          9349.789795                -1.0                -1
1    9549.819336    9447.907959 -1482.505371  9549.819336    0.029541  9447.907959        0.0  101.911377      100.029541       6.0          9349.789795                 1.0             False
2    9549.819336    9547.730957 -1482.505371  9549.819336    0.029541  9547.730957        0.0    2.088379        0.029541       7.0          9349.789795                 1.0              True
3    9549.819336    9549.790039 -1382.534912  9549.819336    2.058838  9549.790039        0.0    0.029297        0.000000       7.0          9349.789795                 1.0              True
4    9649.819580    9549.819336 -1382.534912  9649.819580  100.029541  9549.819336        0.0  100.000244        0.000244       5.0          9349.789795                 1.0              True
5    9649.819580    9649.819580 -1282.535156  9649.819580   99.970459  9649.819580        0.0    0.000000        0.000000       2.0          9649.819580                 1.0              True
6    9650.819580    9649.878662 -1183.564453  9650.819580    1.000000  9649.878662        0.0    0.940918       -0.029297       1.0          9650.819580                 0.0             False
7    9650.878662    9650.849121 -1083.594238  9650.878662    1.000000  9650.849121        0.0    0.029541        0.000000       1.0          9650.819580                 0.0             False
8    9651.849121    9650.908203  -984.564697  9651.849121    1.000000  9650.908203        0.0    0.940918        0.000000       1.0          9650.819580                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:05:20]  --------------------------------------------------------------------------------
[09/27 16:05:20]  Iteration: 60 (4 solution, 55 counterexamples)
[09/27 16:05:23]  Generator returned sat in 2.057139 secs.
[09/27 16:05:23]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:05:28]  Improved gap from 0.0 to 39.0625
[09/27 16:05:30]  Improved number of small numbers from 57 to 65 out of a max of 110
[09/27 16:05:30]  Verifer returned sat in 6.379249 secs.
[09/27 16:05:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7255.299072    7216.118498 -1329.763428  7255.299072   39.180420  7216.118498        0.0  39.180574       39.062410       1.0          7216.118498                -1.0                -1
1    7255.299072    7216.236662 -1268.825928  7255.299072   39.180420  7216.236662        0.0  39.062410       -0.000090       2.0          7216.118498                 0.0             False
2    7294.361662    7255.299162 -1207.888428  7294.361662   78.125000  7255.299162        0.0  39.062500        0.000000       1.0          7216.118498                 1.0              True
3    7333.424162    7294.361662 -1146.950928  7333.424162   78.125000  7294.361662        0.0  39.062500        0.000000       2.0          7216.118498                 0.0             False
4    7373.545744    7333.424162 -1087.072510  7373.545744   79.184082  7333.424162        0.0  40.121582        0.000000       2.0          7216.118498                 1.0              True
5    7432.609953    7373.545744 -1046.136719  7432.609953   99.185791  7373.545744        0.0  59.064209        0.000000       2.0          7216.118498                 1.0              True
6    7483.261931    7432.609953  -996.788818  7483.261931  109.716187  7432.609953        0.0  50.651978       -0.000122       2.0          7216.118498                 1.0              True
7    7557.592192    7483.380127  -971.118958  7557.592192  124.982239  7483.380127        0.0  74.212065        0.000000       1.0          7216.118498                 1.0              True
8    7557.592192    7557.592192  -971.118896  7557.592192    1.000000  7557.592192        0.0   0.000000      -99.999939       2.0          7557.592192                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:05:30]  --------------------------------------------------------------------------------
[09/27 16:05:30]  Iteration: 61 (4 solution, 56 counterexamples)
[09/27 16:05:38]  Generator returned sat in 6.335838 secs.
[09/27 16:05:38]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:05:39]  Improved gap from 0.0 to 64.0625
[09/27 16:05:40]  Improved number of small numbers from 44 to 110 out of a max of 110
[09/27 16:05:40]  Verifer returned sat in 1.569786 secs.
[09/27 16:05:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6557.260254    6357.260498 -1110.291260  6557.260254    0.058838  6357.260498        0.0  199.999756      100.000000       6.0          6357.260498                -1.0                -1
1    6557.260254    6557.230957 -1110.291260  6557.260254    0.029541  6557.230957        0.0    0.029297        0.000000       3.0          6557.260254                 1.0             False
2    6829.043457    6557.260498 -1110.291260  6829.043457  271.812500  6557.260498        0.0  271.782959      171.783203       1.0          6557.260254                 1.0             False
3    6829.043457    6757.260254 -1110.291260  6829.043457   72.753418  6757.260254        0.0   71.783203       71.783203       2.0          6829.043457                 0.0             False
4    6829.043457    6757.290039 -1082.074463  6829.043457   71.753418  6757.290039        0.0   71.753418        0.000000       3.0          6829.043457                 1.0             False
5    6829.043457    6829.043457 -1046.136963  6829.043457   70.753418  6829.043457        0.0    0.000000      -64.062500       4.0          6829.043457                 1.0             False
6    6898.796875    6893.105957 -1010.199463  6898.796875   69.753418  6893.105957        0.0    5.690918      -58.371582       1.0          6898.796875                 1.0             False
7    6961.859375    6957.168457  -974.261963  6961.859375   68.753418  6957.168457        0.0    4.690918      -59.371582       1.0          6961.859375                 0.0             False
8    7024.921875    7021.230957  -938.324463  7024.921875   67.753418  7021.230957        0.0    3.690918      -60.371582       1.0          7024.921875                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:05:40]  --------------------------------------------------------------------------------
[09/27 16:05:40]  Iteration: 62 (4 solution, 57 counterexamples)
[09/27 16:05:44]  Generator returned sat in 2.668809 secs.
[09/27 16:05:44]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:05:49]  Improved gap from 0.0 to 0
[09/27 16:05:50]  Improved number of small numbers from 69 to 102 out of a max of 110
[09/27 16:05:50]  Verifer returned sat in 5.214702 secs.
[09/27 16:05:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7129.044922    6829.043213 -1246.051025  7129.044922    0.001465  6829.043213        0.0  300.001709      300.001709       5.0          6829.043213                -1.0                -1
1    7129.044922    6929.043213 -1246.051025  7129.044922    0.001465  6929.043213        0.0  200.001709      200.001709       3.0          6829.043213                 1.0             False
2    7129.044922    7029.041748 -1246.051025  7129.044922    0.001465  7029.041748        0.0  100.003174      100.001709       3.0          6829.043213                 1.0              True
3    7129.044922    7029.043213 -1246.051025  7129.044922    0.001465  7029.043213        0.0  100.001709        0.001709       4.0          6829.043213                 1.0              True
4    7129.044922    7129.043457 -1194.549805  7129.044922   99.000732  7129.043457        0.0    0.001465      -48.497070       5.0          6829.043213                 1.0              True
5    7277.543945    7277.532227 -1194.549805  7277.543945  148.500488  7277.532227        0.0    0.011719        0.001953       1.0          6829.043213                 1.0              True
6    7277.543945    7277.542207 -1094.558105  7277.543945    0.010000  7277.542207        0.0    0.001738       -0.006348       2.0          7277.543945                 0.0             False
7    7277.552207    7277.550540  -994.560059  7277.552207    0.010000  7277.550540        0.0    0.001667       -0.000039       1.0          7277.543945                 0.0             False
8    7277.560540    7277.559082  -994.560059  7277.560540    0.010000  7277.559082        0.0    0.001458      -99.991706       1.0          7277.543945                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:05:50]  --------------------------------------------------------------------------------
[09/27 16:05:50]  Iteration: 63 (4 solution, 58 counterexamples)
[09/27 16:05:54]  Generator returned sat in 2.317219 secs.
[09/27 16:05:54]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:05:57]  Improved gap from 0.00125 to 0
[09/27 16:05:58]  Improved number of small numbers from 56 to 76 out of a max of 110
[09/27 16:05:58]  Verifer returned sat in 3.633382 secs.
[09/27 16:05:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7177.535400    6877.535332 -1294.542900  7177.535400   55.98999  6877.535332        0.0  300.000068      300.000068       3.0          6877.535332                -1.0                -1
1    7177.535400    6977.535332 -1294.542900  7177.535400   55.98999  6977.535332        0.0  200.000068      200.000068       3.0          6877.535332                 0.0             False
2    7177.535400    7077.533936 -1294.542900  7177.535400   55.98999  7077.533936        0.0  100.001465      100.000068       4.0          6877.535332                 0.0             False
3    7177.535400    7077.535332 -1294.542900  7177.535400   55.99000  7077.535332        0.0  100.000068        0.000068       5.0          6877.535332                 1.0              True
4    7205.530332    7177.535332 -1258.529053  7205.530332  127.99500  7177.535332        0.0   27.995000      -35.991152       5.0          6877.535332                 1.0              True
5    7341.532832    7341.520264 -1258.529053  7341.532832  163.99750  7341.520264        0.0    0.012568        0.011348       1.0          6877.535332                 1.0              True
6    7341.532832    7341.521729 -1158.540400  7341.532832    0.01000  7341.521729        0.0    0.011104        0.000000       2.0          7341.532832                 0.0             False
7    7341.532832    7341.532832 -1058.540527  7341.532832    0.01000  7341.532832        0.0    0.000000       -0.000127       3.0          7341.532832                 0.0             False
8    7341.542832    7341.533936 -1058.540283  7341.542832    0.01000  7341.533936        0.0    0.008896      -99.989883       1.0          7341.532832                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:05:58]  --------------------------------------------------------------------------------
[09/27 16:05:58]  Iteration: 64 (4 solution, 59 counterexamples)
[09/27 16:06:01]  Generator returned sat in 0.745813 secs.
[09/27 16:06:01]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:06:05]  Improved gap from 0.0008333333333333334 to 0
[09/27 16:06:06]  Improved number of small numbers from 55 to 102 out of a max of 110
[09/27 16:06:06]  Verifer returned sat in 4.911903 secs.
[09/27 16:06:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7049.703613    6549.693604 -887.502686  7049.703613  0.012500  6549.693604        0.0  500.010010      500.010010       4.0          6549.693604                -1.0                -1
1    7049.703613    6649.693604 -887.502686  7049.703613  0.012695  6649.693604        0.0  400.010010      400.010010       5.0          6549.693604                 1.0             False
2    7049.703613    6749.693604 -887.502686  7049.703613  0.010010  6749.693604        0.0  300.010010      300.010010       6.0          7049.703613                 1.0              True
3    7049.703613    6849.693604 -887.502686  7049.703613  0.010010  6849.693604        0.0  200.010010      200.010010       6.0          7049.703613                 1.0             False
4    7049.703613    6849.693848 -887.502686  7049.703613  0.010000  6849.693848        0.0  200.009766      100.010010       7.0          7049.703613                 1.0             False
5    7049.703613    7049.693604 -887.502686  7049.703613  0.010000  7049.693604        0.0    0.010010        0.010010       8.0          7049.703613                 1.0             False
6    7049.703613    7049.693665 -787.512695  7049.703613  0.010000  7049.693665        0.0    0.009948        0.000000       8.0          7049.703613                 1.0             False
7    7049.703665    7049.703665 -687.522705  7049.703665  0.010000  7049.703665        0.0    0.000000       -0.009958       1.0          7049.703613                 1.0             False
8    7049.713665    7049.713623 -687.522705  7049.713665  0.010000  7049.713623        0.0    0.000042      -99.999958       1.0          7049.703613                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:06:06]  --------------------------------------------------------------------------------
[09/27 16:06:06]  Iteration: 65 (4 solution, 60 counterexamples)
[09/27 16:06:11]  Generator returned sat in 2.875280 secs.
[09/27 16:06:11]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:06:14]  Improved gap from 0.0016666666666666668 to 17.1875
[09/27 16:06:14]  Improved number of small numbers from 44 to 110 out of a max of 110
[09/27 16:06:14]  Verifer returned sat in 3.565437 secs.
[09/27 16:06:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6639.107666    6489.529053 -857.772949  6639.107666    0.058594  6489.529053        0.0  149.578613      119.144043       3.0          6489.529053                -1.0                -1
1    6639.107666    6619.963623 -857.772949  6639.107666   19.084961  6619.963623        0.0   19.144043       19.144043       3.0          6489.529053                 1.0             False
2    6639.107666    6621.920166 -776.916992  6639.107666   19.084961  6621.920166        0.0   17.187500        0.000000       4.0          6489.529053                 1.0              True
3    6656.295166    6639.107666 -694.104492  6656.295166   34.375000  6639.107666        0.0   17.187500        0.000000       5.0          6489.529053                 1.0              True
4    6787.686279    6656.295166 -694.104492  6787.686279  148.578613  6656.295166        0.0  131.391113       31.391113       2.0          6489.529053                 1.0              True
5    6787.686279    6756.295166 -625.554199  6787.686279   35.331543  6756.295166        0.0   31.391113       -0.058594       2.0          6787.686279                 1.0              True
6    6840.148438    6787.745117 -578.016113  6840.148438   83.853271  6787.745117        0.0   52.403320       -0.058350       1.0          6787.686279                 1.0             False
7    6902.990479    6840.207031 -540.858154  6902.990479  115.245361  6840.207031        0.0   62.783447       -0.058350       1.0          6787.686279                 0.0             False
8    6988.785645    6903.048828 -540.858154  6988.785645  148.578613  6903.048828        0.0   85.736816      -14.263184       1.0          6787.686279                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:06:15]  --------------------------------------------------------------------------------
[09/27 16:06:15]  Iteration: 66 (4 solution, 61 counterexamples)
[09/27 16:06:20]  Generator returned sat in 3.726779 secs.
[09/27 16:06:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:06:28]  Improved gap from 10.59912109375 to 17.1875
[09/27 16:06:28]  Improved number of small numbers from 46 to 110 out of a max of 110
[09/27 16:06:28]  Verifer returned sat in 7.648282 secs.
[09/27 16:06:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6833.608398    6685.566895 -1054.289307  6833.608398    0.058594  6685.566895        0.0  148.041504      117.128662       9.0          6685.566895                -1.0                -1
1    6833.608398    6816.479736 -1054.289307  6833.608398    0.058838  6816.479736        0.0   17.128662       17.128662       2.0          6685.566895                 1.0             False
2    6833.667236    6816.479736  -971.476807  6833.667236   17.187500  6816.479736        0.0   17.187500        0.000000       2.0          6685.566895                 1.0              True
3    6850.854736    6833.667236  -888.664307  6850.854736   34.375000  6833.667236        0.0   17.187500        0.000000       2.0          6685.566895                 1.0             False
4    6981.767578    6850.854736  -888.664307  6981.767578  148.100342  6850.854736        0.0  130.912842       30.912842       2.0          6685.566895                 1.0              True
5    6981.767578    6950.854736  -819.635498  6981.767578   34.375000  6950.854736        0.0   30.912842       -0.058350       2.0          6981.767578                 1.0              True
6    7034.229736    6981.826416  -772.039307  7034.229736   83.375000  6981.826416        0.0   52.403320        0.000000       1.0          6981.767578                 1.0             False
7    7096.593506    7034.288330  -735.417969  7096.593506  114.767090  7034.288330        0.0   62.305176       -1.014893       1.0          6981.767578                 0.0             False
8    7182.388672    7097.608643  -735.417969  7182.388672  148.100342  7097.608643        0.0   84.780029      -15.219727       1.0          6981.767578                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:06:29]  --------------------------------------------------------------------------------
[09/27 16:06:29]  Iteration: 67 (4 solution, 62 counterexamples)
[09/27 16:06:32]  Generator returned sat in 1.226069 secs.
[09/27 16:06:32]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:06:33]  Improved gap from 0.0146484375 to 3.125
[09/27 16:06:34]  Improved number of small numbers from 63 to 110 out of a max of 110
[09/27 16:06:34]  Verifer returned sat in 2.028122 secs.
[09/27 16:06:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6892.493164    6750.678955 -1119.741455  6892.493164    0.058594  6750.678955        0.0  141.814209      110.561279       9.0          6750.678955                -1.0                -1
1    6892.493164    6881.931641 -1119.741455  6892.493164    0.058594  6881.931641        0.0   10.561523       10.561279       2.0          6750.678955                 1.0             False
2    6892.493164    6889.368164 -1030.302734  6892.493164    0.058594  6889.368164        0.0    3.125000        0.000000       3.0          6750.678955                 0.0             False
3    6892.493164    6892.493164  -933.427734  6892.493164    3.066162  6892.493164        0.0    0.000000       -3.125000       4.0          6750.678955                 1.0              True
4    7034.307373    6936.205322  -933.427734  7034.307373  141.814209  6936.205322        0.0   98.102051       38.689209       1.0          6750.678955                 1.0              True
5    7034.307373    6995.618164  -872.175781  7034.307373   98.043945  6995.618164        0.0   38.689209       -0.058838       2.0          7034.307373                 0.0             False
6    7097.765137    7034.366211  -835.633301  7097.765137  102.146973  7034.366211        0.0   63.398926       -0.058594       1.0          7034.307373                 0.0             False
7    7156.376221    7097.823730  -794.244141  7156.376221  122.010010  7097.823730        0.0   58.552490       -0.058350       1.0          7034.307373                 0.0             False
8    7239.637939    7156.434814  -794.244141  7239.637939  141.814209  7156.434814        0.0   83.203125      -16.796631       1.0          7034.307373                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:06:34]  --------------------------------------------------------------------------------
[09/27 16:06:34]  Iteration: 68 (4 solution, 63 counterexamples)
[09/27 16:06:37]  Generator returned sat in 1.293081 secs.
[09/27 16:06:37]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:06:49]  Improved gap from 3.125 to 3.125
[09/27 16:06:50]  Improved number of small numbers from 52 to 55 out of a max of 110
[09/27 16:06:50]  Verifer returned sat in 13.017649 secs.
[09/27 16:06:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6635.249977    6492.977418 -1482.109619  6635.249977    0.029053  6492.977418        0.0  142.272559      103.125000       7.0          6492.977418                -1.0                -1
1    6635.249977    6632.124977 -1482.109619  6635.249977    0.029053  6632.124977        0.0    3.125000        3.125000       7.0          6492.977418                 1.0             False
2    6635.249977    6632.124977 -1385.234619  6635.249977    0.029053  6632.124977        0.0    3.125000        0.000000       7.0          6492.977418                 1.0              True
3    6635.249977    6635.249977 -1288.359619  6635.249977    0.029297  6635.249977        0.0    0.000000       -3.125000       7.0          6492.977418                 1.0             False
4    6777.522535    6681.612965 -1288.359619  6777.522535  142.272559  6681.612965        0.0   95.909570       39.147559       1.0          6492.977418                 1.0              True
5    6777.522535    6738.374977 -1227.507178  6777.522535   95.880273  6738.374977        0.0   39.147559        0.000000       2.0          6777.522535                 0.0             False
6    6839.440113    6777.522535 -1189.424805  6839.440113  101.065137  6777.522535        0.0   61.917578       -0.000049       3.0          6777.522535                 0.0             False
7    6899.191383    6839.469410 -1149.205322  6899.191383  121.668848  6839.469410        0.0   59.721973       -0.029297       1.0          6777.522535                 0.0             False
8    6979.232057    6899.220703 -1149.205322  6979.232057  139.762646  6899.220703        0.0   80.011354      -19.988623       1.0          6777.522535                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:06:51]  --------------------------------------------------------------------------------
[09/27 16:06:51]  Iteration: 69 (4 solution, 64 counterexamples)
[09/27 16:06:55]  Generator returned sat in 2.143601 secs.
[09/27 16:06:55]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:06:57]  Improved gap from 0.9854736328125 to 32.8125
[09/27 16:06:57]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:06:57]  Verifer returned sat in 2.063238 secs.
[09/27 16:06:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6789.360840    6756.607178 -1491.367676  6789.360840   32.812256  6756.607178        0.0  32.753662       32.753662       6.0          6756.607178                -1.0                -1
1    6789.419434    6789.361084 -1456.934082  6789.419434   32.812256  6789.361084        0.0   0.058350      -32.754150       1.0          6756.607178                 1.0             False
2    6855.103271    6822.173584 -1389.863770  6855.103271   65.742188  6822.173584        0.0  32.929688        0.000000       1.0          6756.607178                 0.0             False
3    6887.915771    6855.103271 -1322.676270  6887.915771   65.742188  6855.103271        0.0  32.812500        0.000000       2.0          6756.607178                 0.0             False
4    6953.599365    6887.915771 -1288.359863  6953.599365   98.496094  6887.915771        0.0  65.683594        0.000000       2.0          6756.607178                 1.0              True
5    6986.470459    6953.599365 -1221.230957  6986.470459   98.554688  6953.599365        0.0  32.871094        0.000000       2.0          6756.607178                 1.0              True
6    7085.025146    6986.470459 -1219.785645  7085.025146  131.425781  6986.470459        0.0  98.554688        0.000000       2.0          6756.607178                 1.0              True
7    7117.837646    7085.025146 -1152.598145  7117.837646  131.367188  7085.025146        0.0  32.812500        0.000000       2.0          7117.837646                 1.0              True
8    7117.837646    7117.837646 -1085.410645  7117.837646    1.000000  7117.837646        0.0   0.000000      -32.812500       2.0          7117.837646                 1.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:06:57]  --------------------------------------------------------------------------------
[09/27 16:06:57]  Iteration: 70 (4 solution, 65 counterexamples)
[09/27 16:07:00]  Generator returned sat in 1.152176 secs.
[09/27 16:07:00]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:07:02]  Improved gap from 0.0 to 35.9375
[09/27 16:07:02]  Improved number of small numbers from 56 to 110 out of a max of 110
[09/27 16:07:02]  Verifer returned sat in 1.812817 secs.
[09/27 16:07:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6760.069580    6760.040283 -1494.800781  6760.069580    0.029297  6760.040283        0.0   0.029297        0.029297       1.0          6760.040283                -1.0                -1
1    6760.127930    6760.098877 -1430.796875  6760.127930    0.087646  6760.098877        0.0   0.029053      -35.908447       1.0          6760.040283                 0.0             False
2    6850.294189    6802.798096 -1385.054688  6850.294189   90.195312  6802.798096        0.0  47.496094        0.000000       1.0          6760.040283                 0.0             False
3    6893.052002    6850.294189 -1327.812500  6893.052002   90.253906  6850.294189        0.0  42.757812        0.000000       2.0          6760.040283                 0.0             False
4    6940.548096    6893.052002 -1275.308594  6940.548096   90.253906  6893.052002        0.0  47.496094        0.000000       2.0          6760.040283                 1.0              True
5    7026.005127    6940.548096 -1275.308350  7026.005127  132.953125  6940.548096        0.0  85.457031      -14.542725       2.0          6760.040283                 1.0              True
6    7078.298096    7042.389648 -1213.087646  7078.298096  137.750000  7042.389648        0.0  35.908447       -0.029053       1.0          6760.040283                 1.0              True
7    7112.264648    7078.327393 -1149.025391  7112.264648   69.875000  7078.327393        0.0  33.937256       -2.000244       1.0          7112.264648                 0.0             False
8    7114.264893    7114.264893 -1149.025146  7114.264893   35.937500  7114.264893        0.0   0.000000      -99.999756       1.0          7114.264893                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:07:03]  --------------------------------------------------------------------------------
[09/27 16:07:03]  Iteration: 71 (4 solution, 66 counterexamples)
[09/27 16:07:06]  Generator returned sat in 1.280595 secs.
[09/27 16:07:06]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:07:09]  Improved gap from 0.029296875 to 39.0625
[09/27 16:07:09]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/27 16:07:09]  Verifer returned sat in 3.581432 secs.
[09/27 16:07:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    6772.198486    6772.139893 -1506.900391  6772.198486    0.058594  6772.139893        0.0   0.058594        0.058594       4.0          6772.139893                -1.0                -1
1    6772.198486    6772.169189 -1445.992188  6772.198486    0.029297  6772.169189        0.0   0.029297      -39.033203       5.0          6772.198486                 1.0             False
2    6850.294189    6811.231689 -1385.054688  6850.294189   78.125000  6811.231689        0.0  39.062500        0.000000       1.0          6772.198486                 1.0             False
3    6889.385986    6850.294189 -1324.146484  6889.385986   78.154297  6850.294189        0.0  39.091797        0.000000       2.0          6772.198486                 0.0             False
4    6928.448486    6889.385986 -1263.208984  6928.448486   78.154297  6889.385986        0.0  39.062500        0.000000       2.0          6772.198486                 1.0              True
5    6987.071533    6928.448486 -1221.832031  6987.071533   97.685547  6928.448486        0.0  58.623047        0.000000       2.0          6772.198486                 1.0              True
6    7035.899658    6987.071533 -1170.689453  7035.899658  107.451172  6987.071533        0.0  48.828125       -0.029297       2.0          6772.198486                 1.0              True
7    7109.185791    7035.928955 -1143.946289  7109.185791  122.114258  7035.928955        0.0  73.256836        0.000000       1.0          6772.198486                 1.0              True
8    7109.185791    7109.185791 -1143.946289  7109.185791    1.000000  7109.185791        0.0   0.000000     -100.000000       2.0          7109.185791                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:07:10]  --------------------------------------------------------------------------------
[09/27 16:07:10]  Iteration: 72 (4 solution, 67 counterexamples)
[09/27 16:07:15]  Generator returned sat in 2.852689 secs.
[09/27 16:07:15]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:07:28]  Improved gap from 0.02923583984375 to 3.125
[09/27 16:07:29]  Improved number of small numbers from 51 to 64 out of a max of 110
[09/27 16:07:29]  Verifer returned sat in 14.334730 secs.
[09/27 16:07:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    7303.307760    7005.024841 -1834.943502  7303.307760    0.058350  7005.024841        0.0  298.282918      203.125000       4.0          7005.024841                -1.0                -1
1    7303.307760    7200.182760 -1834.943502  7303.307760    0.058594  7200.182760        0.0  103.125000      103.125000       5.0          7005.024841                 1.0             False
2    7303.307760    7298.162618 -1834.943502  7303.307760    0.058594  7298.162618        0.0    5.145142        3.125000       3.0          7005.024841                 1.0              True
3    7303.307760    7300.182760 -1738.068502  7303.307760    5.145020  7300.182760        0.0    3.125000        0.000000       4.0          7005.024841                 1.0              True
4    7448.761719    7303.307760 -1738.068502  7448.761719  148.578959  7303.307760        0.0  145.453959       45.453959       5.0          7005.024841                 1.0              True
5    7448.761719    7403.307760 -1683.522705  7448.761719   52.562500  7403.307760        0.0   45.453959       -0.000244       2.0          7448.761719                 1.0              True
6    7483.161580    7448.820190 -1617.922363  7483.161580   79.853821  7448.820190        0.0   34.341390       -0.000041       1.0          7448.761719                 0.0             False
7    7564.065816    7483.220052 -1598.885254  7564.065816  115.245626  7483.220052        0.0   80.845764       -0.058695       1.0          7448.761719                 0.0             False
8    7631.799011    7564.124512 -1598.885010  7631.799011  148.578959  7564.124512        0.0   67.674500      -32.325256       1.0          7448.761719                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:07:30]  --------------------------------------------------------------------------------
[09/27 16:07:30]  Iteration: 73 (4 solution, 68 counterexamples)
[09/27 16:07:37]  Generator returned sat in 5.144977 secs.
[09/27 16:07:37]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:07:39]  Improved gap from 0.0 to 0
[09/27 16:07:39]  Improved number of small numbers from 78 to 110 out of a max of 110
[09/27 16:07:39]  Verifer returned sat in 2.260160 secs.
[09/27 16:07:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8331.303711    7830.332520 -2052.848389  8331.303711  0.029297  7830.332520        0.0  500.971191      500.970947       4.0           7830.33252                -1.0                -1
1    8331.303711    7930.332764 -2052.848389  8331.303711  0.999756  7930.332764        0.0  400.970947      400.970947       5.0           7830.33252                 0.0             False
2    8331.303711    8030.332764 -2052.848389  8331.303711  1.000000  8030.332764        0.0  300.970947      300.970947       6.0           7830.33252                 1.0              True
3    8331.303711    8130.332764 -2052.848389  8331.303711  1.000000  8130.332764        0.0  200.970947      200.970947       7.0           7830.33252                 1.0              True
4    8331.303711    8230.332520 -2052.848389  8331.303711  1.000000  8230.332520        0.0  100.971191      100.970947       6.0           7830.33252                 1.0              True
5    8331.303711    8330.274414 -2052.848389  8331.303711  1.000000  8330.274414        0.0    1.029297        0.970947       6.0           7830.33252                 1.0              True
6    8331.303711    8330.332764 -1953.819336  8331.303711  1.000000  8330.332764        0.0    0.970947        0.000000       7.0           7830.33252                 1.0              True
7    8331.332764    8331.303711 -1853.877686  8331.332764  1.000000  8331.303711        0.0    0.029053       -0.029297       8.0           7830.33252                 1.0              True
8    8332.303711    8331.362061 -1853.877686  8332.303711  1.000000  8331.362061        0.0    0.941650      -99.058350       1.0           7830.33252                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:07:40]  --------------------------------------------------------------------------------
[09/27 16:07:40]  Iteration: 74 (4 solution, 69 counterexamples)
[09/27 16:07:43]  Generator returned sat in 2.012422 secs.
[09/27 16:07:43]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:07:44]  Improved gap from 0.0 to 0
[09/27 16:07:44]  Improved number of small numbers from 75 to 110 out of a max of 110
[09/27 16:07:44]  Verifer returned sat in 0.969516 secs.
[09/27 16:07:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8731.362061    8230.332520 -2452.848389  8731.362061  0.029053  8230.332520        0.0  501.029541      501.029297       6.0           8230.33252                -1.0                -1
1    8731.362061    8330.332764 -2452.848389  8731.362061  0.029053  8330.332764        0.0  401.029297      401.029297       7.0           8230.33252                 0.0             False
2    8731.362061    8430.332764 -2452.848389  8731.362061  0.029053  8430.332764        0.0  301.029297      301.029297       6.0           8230.33252                 1.0              True
3    8731.362061    8530.332520 -2452.848389  8731.362061  0.029053  8530.332520        0.0  201.029541      201.029297       7.0           8230.33252                 0.0             False
4    8731.362061    8630.332520 -2452.848389  8731.362061  1.000000  8630.332520        0.0  101.029541      101.029297       8.0           8230.33252                 1.0              True
5    8731.362061    8730.303467 -2452.848389  8731.362061  1.000000  8730.303467        0.0    1.058594        1.029297       8.0           8230.33252                 1.0              True
6    8731.362061    8730.332764 -2353.877686  8731.362061  1.000000  8730.332764        0.0    1.029297        0.000000       8.0           8230.33252                 1.0              True
7    8731.362061    8731.362061 -2254.877441  8731.362061  1.000000  8731.362061        0.0    0.000000       -0.999756       8.0           8230.33252                 1.0              True
8    8732.362061    8732.361816 -2254.877441  8732.362061  1.000000  8732.361816        0.0    0.000244      -99.999756       1.0           8230.33252                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:07:45]  --------------------------------------------------------------------------------
[09/27 16:07:45]  Iteration: 75 (4 solution, 70 counterexamples)
[09/27 16:07:49]  Generator returned sat in 1.622488 secs.
[09/27 16:07:49]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:07:57]  Improved gap from 0.999755859375 to 39.0625
[09/27 16:07:58]  Improved number of small numbers from 45 to 51 out of a max of 110
[09/27 16:07:58]  Verifer returned sat in 9.256695 secs.
[09/27 16:07:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11031.656150   10758.332028 -4652.368365  11031.656150    0.057861  10758.332028        0.0  273.324121      273.324121       7.0         10758.332028                -1.0                -1
1   11031.656150   10858.331787 -4652.368365  11031.656150    0.058105  10858.331787        0.0  173.324362      173.324121       7.0         10758.332028                 0.0             False
2   11031.656150   10958.273923 -4652.368365  11031.656150    0.058105  10958.273923        0.0   73.382227       73.324121       7.0         10758.332028                 0.0             False
3   11031.656150   10958.332028 -4625.692486  11031.656150   22.773242  10958.332028        0.0   73.324121        0.000000       7.0         10758.332028                 0.0             False
4   11070.718650   11031.656150 -4564.754986  11070.718650  112.386621  11031.656150        0.0   39.062500        0.000000       8.0         10758.332028                 0.0             False
5   11070.718650   11070.718650 -4503.817486  11070.718650    1.000000  11070.718650        0.0    0.000000      -39.062500       2.0         11070.718650                 1.0              True
6   11128.441013   11109.781150 -4442.879986  11128.441013   57.722363  11109.781150        0.0   18.659863      -20.402637       1.0         11070.718650                 0.0             False
7   11215.366892   11148.843650 -4416.310059  11215.366892  105.585742  11148.843650        0.0   66.523242       -6.906831       1.0         11070.718650                 0.0             False
8   11261.230271   11222.273926 -4416.310059  11261.230271  112.386621  11222.273926        0.0   38.956345      -61.043452       1.0         11070.718650                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:07:58]  --------------------------------------------------------------------------------
[09/27 16:07:58]  Iteration: 76 (4 solution, 71 counterexamples)
[09/27 16:08:05]  Generator returned sat in 4.605231 secs.
[09/27 16:08:05]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:08:11]  Improved gap from 0.0 to 39.0625
[09/27 16:08:12]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:08:12]  Verifer returned sat in 6.513639 secs.
[09/27 16:08:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11012.837158   10739.459961 -4652.315430  11012.837158    0.057861  10739.459961        0.0  273.377197      273.377197       6.0         10739.459961                -1.0                -1
1   11012.837158   10739.518066 -4652.315430  11012.837158    0.058105  10739.518066        0.0  273.319092      173.377197       6.0         10739.459961                 0.0             False
2   11012.837158   10939.136475 -4652.315430  11012.837158    0.058105  10939.136475        0.0   73.700684       73.377197       7.0         10739.459961                 0.0             False
3   11012.837158   10939.459961 -4625.692627  11012.837158   22.879395  10939.459961        0.0   73.377197        0.000000       8.0         10739.459961                 0.0             False
4   11051.899658   11012.837158 -4564.755127  11051.899658  112.439697  11012.837158        0.0   39.062500        0.000000       9.0         10739.459961                 0.0             False
5   11051.899658   11051.899658 -4503.817627  11051.899658    1.000000  11051.899658        0.0    0.000000      -39.062500       2.0         11051.899658                 1.0              True
6   11109.781250   11090.962158 -4442.880127  11109.781250   57.881592  11090.962158        0.0   18.819092      -20.243408       1.0         11051.899658                 0.0             False
7   11196.654053   11130.024658 -4409.509521  11196.654053  105.691895  11130.024658        0.0   66.629395        0.000000       1.0         11051.899658                 0.0             False
8   11242.464355   11203.401855 -4355.319824  11242.464355  112.439697  11203.401855        0.0   39.062500        0.000000       1.0         11051.899658                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:08:12]  --------------------------------------------------------------------------------
[09/27 16:08:12]  Iteration: 77 (4 solution, 72 counterexamples)
[09/27 16:08:15]  Generator returned sat in 1.295573 secs.
[09/27 16:08:15]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:08:17]  Improved number of small numbers from 42 to 109 out of a max of 109
[09/27 16:08:17]  Verifer returned sat in 1.100565 secs.
[09/27 16:08:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10629.998291   10029.998291 -4777.967041  10629.998291    0.057861  10029.998291        0.0  600.000000      500.000000       7.0         10029.998291                -1.0                -1
1   10629.998291   10229.940674 -4777.967041  10629.998291    0.058105  10229.940674        0.0  400.057617      400.000000       7.0         10029.998291                 0.0             False
2   10629.998291   10229.998535 -4777.967041  10629.998291   85.564697  10229.998535        0.0  399.999756      300.000000       8.0         10029.998291                 0.0             False
3   10629.998291   10329.998535 -4777.967041  10629.998291   85.564697  10329.998535        0.0  299.999756      200.000000       7.0         10029.998291                 0.0             False
4   10629.998291   10431.346191 -4777.967041  10629.998291  193.782471  10431.346191        0.0  198.652100      100.000000       8.0         10029.998291                 0.0             False
5   10629.998291   10629.940430 -4777.967041  10629.998291  198.593994  10629.940430        0.0    0.057861        0.000000       9.0         10029.998291                 0.0             False
6   11030.882324   10629.998291 -4777.967041  11030.882324  400.941895  10629.998291        0.0  400.884033      300.884033       9.0         10029.998291                 1.0              True
7   11030.882324   10729.998291 -4777.967041  11030.882324  300.999756  10729.998291        0.0  300.884033      200.884033       2.0         11030.882324                 1.0              True
8   11030.882324   10832.230225 -4777.967041  11030.882324  300.825928  10832.230225        0.0  198.652100      100.884033       3.0         11030.882324                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:08:17]  --------------------------------------------------------------------------------
[09/27 16:08:17]  Iteration: 78 (4 solution, 73 counterexamples)
[09/27 16:08:21]  Generator returned sat in 1.843807 secs.
[09/27 16:08:21]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:08:29]  Improved gap from 0.02899169921875 to 3.125
[09/27 16:08:29]  Improved number of small numbers from 48 to 110 out of a max of 110
[09/27 16:08:29]  Verifer returned sat in 8.179647 secs.
[09/27 16:08:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10487.709717   10191.389893 -4777.967041  10487.709717    0.057861  10191.389893        0.0  296.319824      203.125000       8.0         10191.389893                -1.0                -1
1   10487.709717   10384.584717 -4777.967041  10487.709717    0.058105  10384.584717        0.0  103.125000      103.125000       4.0         10191.389893                 1.0             False
2   10487.709717   10484.526855 -4777.967041  10487.709717    0.058105  10484.526855        0.0    3.182861        3.125000       4.0         10191.389893                 0.0             False
3   10487.709717   10484.584717 -4681.092041  10487.709717    3.125000  10484.584717        0.0    3.125000        0.000000       5.0         10191.389893                 0.0             False
4   10632.182129   10487.709717 -4681.092041  10632.182129  147.597412  10487.709717        0.0  144.472412       44.472412       6.0         10191.389893                 1.0              True
5   10632.182129   10587.709961 -4625.622314  10632.182129   52.562500  10587.709961        0.0   44.472168       -0.057861       2.0         10632.182129                 1.0              True
6   10666.582764   10632.240234 -4560.022705  10666.582764   78.872803  10632.240234        0.0   34.342529       -0.057617       1.0         10632.182129                 0.0             False
7   10746.504395   10666.640381 -4539.886719  10746.504395  114.264160  10666.640381        0.0   79.864014        0.000000       1.0         10632.182129                 0.0             False
8   10814.237793   10746.562500 -4539.886719  10814.237793  147.597412  10746.562500        0.0   67.675293      -32.266602       1.0         10632.182129                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:08:30]  --------------------------------------------------------------------------------
[09/27 16:08:30]  Iteration: 79 (4 solution, 74 counterexamples)
[09/27 16:08:36]  Generator returned sat in 4.722036 secs.
[09/27 16:08:37]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:08:39]  Improved gap from 0.0 to 15.625
[09/27 16:08:39]  Improved number of small numbers from 54 to 110 out of a max of 110
[09/27 16:08:39]  Verifer returned sat in 2.380597 secs.
[09/27 16:08:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11085.599854   10853.041748 -4748.649902  11085.599854    0.999756  10853.041748        0.0  232.558105      232.442139       8.0         10853.041748                -1.0                -1
1   11085.599854   10853.157715 -4748.649902  11085.599854    1.000000  10853.157715        0.0  232.442139      132.442139       6.0         10853.041748                 1.0             False
2   11085.599854   11053.157715 -4748.649902  11085.599854    1.000000  11053.157715        0.0   32.442139       32.442139       4.0         10853.041748                 1.0              True
3   11085.599854   11053.157715 -4681.092041  11085.599854    1.000000  11053.157715        0.0   32.442139        0.000000       4.0         10853.041748                 1.0              True
4   11085.599854   11085.599854 -4596.908936  11085.599854    1.000000  11085.599854        0.0    0.000000      -15.816895       5.0         10853.041748                 1.0             False
5   11317.041992   11101.416748 -4596.908936  11317.041992  231.442139  11101.416748        0.0  215.625244      115.625244       1.0         10853.041748                 1.0              True
6   11317.041992   11201.416748 -4596.908936  11317.041992    1.000000  11201.416748        0.0  115.625244       15.625244       2.0         11317.041992                 0.0             False
7   11317.041992   11301.416748 -4512.534180  11317.041992    1.000000  11301.416748        0.0   15.625244        0.000000       3.0         11317.041992                 0.0             False
8   11317.041992   11317.041992 -4512.533936  11317.041992    1.000000  11317.041992        0.0    0.000000      -99.999756       4.0         11317.041992                 1.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:08:40]  --------------------------------------------------------------------------------
[09/27 16:08:40]  Iteration: 80 (4 solution, 75 counterexamples)
[09/27 16:08:43]  Generator returned sat in 1.294375 secs.
[09/27 16:08:43]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:08:45]  Improved gap from 15.625244140625 to 15.625
[09/27 16:08:45]  Improved number of small numbers from 56 to 110 out of a max of 110
[09/27 16:08:45]  Verifer returned sat in 1.896309 secs.
[09/27 16:08:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11071.156982   10839.791016 -4450.79248  11071.156982    0.999756  10839.791016        0.0  231.365967         231.250       8.0         10839.791016                -1.0                -1
1   11071.156982   10839.906982 -4450.79248  11071.156982    0.999756  10839.906982        0.0  231.250000         131.250       6.0         10839.791016                 1.0             False
2   11071.156982   11039.906982 -4450.79248  11071.156982    0.999756  11039.906982        0.0   31.250000          31.250       4.0         10839.791016                 1.0              True
3   11071.156982   11039.906982 -4382.04248  11071.156982    0.999756  11039.906982        0.0   31.250000           0.000       4.0         10839.791016                 1.0              True
4   11071.156982   11071.156982 -4297.66748  11071.156982    1.000000  11071.156982        0.0    0.000000         -15.625       5.0         10839.791016                 1.0             False
5   11302.406982   11186.781982 -4297.66748  11302.406982  231.250000  11186.781982        0.0  115.625000         115.625       1.0         10839.791016                 1.0              True
6   11302.406982   11186.897949 -4297.66748  11302.406982    1.000000  11186.897949        0.0  115.509033          15.625       2.0         11302.406982                 0.0             False
7   11302.406982   11286.781982 -4213.29248  11302.406982    1.000000  11286.781982        0.0   15.625000           0.000       3.0         11302.406982                 0.0             False
8   11302.406982   11302.406982 -4213.29248  11302.406982    1.000000  11302.406982        0.0    0.000000        -100.000       4.0         11302.406982                 1.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:08:45]  --------------------------------------------------------------------------------
[09/27 16:08:45]  Iteration: 81 (4 solution, 76 counterexamples)
[09/27 16:08:50]  Generator returned sat in 2.729010 secs.
[09/27 16:08:50]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:08:53]  Improved gap from 0.0289306640625 to 35.9375
[09/27 16:08:53]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/27 16:08:53]  Verifer returned sat in 3.121299 secs.
[09/27 16:08:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10959.124512   10959.066650 -4558.153564  10959.124512    0.057861  10959.066650        0.0   0.057861        0.057861       3.0         10959.066650                -1.0                -1
1   11001.652344   10960.066650 -4500.797119  11001.652344   42.585693  10960.066650        0.0  41.585693       -0.057861       1.0         10959.066650                 1.0             False
2   11050.263428   11001.710205 -4449.350342  11050.263428   90.196777  11001.710205        0.0  48.553223        0.000000       1.0         10959.066650                 0.0             False
3   11091.906982   11050.263428 -4390.993896  11091.906982   90.196777  11050.263428        0.0  41.643555        0.000000       2.0         10959.066650                 0.0             False
4   11140.460205   11091.906982 -4339.547119  11140.460205   90.196777  11091.906982        0.0  48.553223        0.000000       2.0         10959.066650                 1.0              True
5   11222.747314   11140.460205 -4339.547119  11222.747314  130.840332  11140.460205        0.0  82.287109      -17.712891       2.0         10959.066650                 1.0              True
6   11278.210205   11242.330566 -4277.354980  11278.210205  137.750000  11242.330566        0.0  35.879639       -0.057861       1.0         10959.066650                 1.0              True
7   11312.205566   11278.268066 -4213.292480  11312.205566   69.875000  11278.268066        0.0  33.937500       -2.000000       1.0         11312.205566                 0.0             False
8   11314.205566   11314.205566 -4213.292480  11314.205566   35.937500  11314.205566        0.0   0.000000     -100.000000       1.0         11314.205566                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:08:54]  --------------------------------------------------------------------------------
[09/27 16:08:54]  Iteration: 82 (4 solution, 77 counterexamples)
[09/27 16:09:00]  Generator returned sat in 4.217168 secs.
[09/27 16:09:00]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:09:01]  Improved gap from 0.02886962890625 to 42.1875
[09/27 16:09:01]  Improved number of small numbers from 83 to 110 out of a max of 110
[09/27 16:09:01]  Verifer returned sat in 0.531603 secs.
[09/27 16:09:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11795.391357   11318.763184 -4339.547119  11795.391357    0.057617  11318.763184        0.0  476.628174      476.628174       8.0         11318.763184                -1.0                -1
1   11795.391357   11418.762939 -4339.547119  11795.391357    0.057617  11418.762939        0.0  376.628418      376.628174       4.0         11318.763184                 1.0             False
2   11795.391357   11473.253418 -4339.547119  11795.391357    0.057617  11473.253418        0.0  322.137939      276.628174       4.0         11318.763184                 0.0             False
3   11795.391357   11618.762939 -4339.547119  11795.391357    0.999756  11618.762939        0.0  176.628418      176.628174       5.0         11318.763184                 0.0             False
4   11795.391357   11718.705322 -4339.547119  11795.391357    1.000000  11718.705322        0.0   76.686035       76.628174       6.0         11318.763184                 0.0             False
5   11795.391357   11718.763184 -4316.175293  11795.391357    1.000000  11718.763184        0.0   76.628174        0.000000       7.0         11318.763184                 0.0             False
6   11840.518066   11795.391357 -4261.302002  11840.518066  121.754883  11795.391357        0.0   45.126709        0.000000       8.0         11318.763184                 1.0              True
7   11882.705566   11840.518066 -4203.489502  11882.705566   87.314209  11840.518066        0.0   42.187500        0.000000       2.0         11882.705566                 1.0              True
8   11882.705566   11882.705566 -4203.489502  11882.705566    1.000000  11882.705566        0.0    0.000000     -100.000000       2.0         11882.705566                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:09:02]  --------------------------------------------------------------------------------
[09/27 16:09:02]  Iteration: 83 (4 solution, 78 counterexamples)
[09/27 16:09:06]  Generator returned sat in 2.134072 secs.
[09/27 16:09:06]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:09:14]  Improved gap from 0.0576171875 to 4.6875
[09/27 16:09:15]  Improved number of small numbers from 49 to 61 out of a max of 110
[09/27 16:09:15]  Verifer returned sat in 8.832629 secs.
[09/27 16:09:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11468.471742   11163.938701 -4722.385762  11468.471742    0.028564  11163.938701        0.0  304.533040      204.687500       2.0         11163.938701                -1.0                -1
1   11468.471742   11363.784242 -4722.385762  11468.471742    0.028564  11363.784242        0.0  104.687500      104.687500       2.0         11163.938701                 0.0             False
2   11468.471742   11463.755615 -4722.385762  11468.471742    0.028564  11463.755615        0.0    4.716126        4.687500       3.0         11163.938701                 0.0             False
3   11468.471742   11463.784242 -4627.073262  11468.471742    0.028564  11463.784242        0.0    4.687500        0.000000       4.0         11163.938701                 1.0              True
4   11612.707012   11468.471742 -4627.073262  11612.707012  148.922770  11468.471742        0.0  144.235270       44.235270       5.0         11163.938701                 1.0              True
5   11612.707012   11568.471924 -4571.337158  11612.707012   51.343750  11568.471924        0.0   44.235088       -0.028626       2.0         11612.707012                 1.0              True
6   11647.501953   11612.735820 -4506.103516  11647.501953   79.030029  11612.735820        0.0   34.766133       -0.000042       1.0         11612.707012                 0.0             False
7   11727.726624   11647.530579 -4486.356934  11727.726624  114.990804  11647.530579        0.0   80.196045       -0.028789       1.0         11612.707012                 0.0             False
8   11795.555400   11727.755615 -4486.356934  11795.555400  148.024821  11727.755615        0.0   67.799785      -32.200013       1.0         11612.707012                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:09:15]  --------------------------------------------------------------------------------
[09/27 16:09:15]  Iteration: 84 (4 solution, 79 counterexamples)
[09/27 16:09:22]  Generator returned sat in 4.461774 secs.
[09/27 16:09:22]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:09:27]  Improved gap from 0.0 to 43.75
[09/27 16:09:27]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/27 16:09:27]  Verifer returned sat in 5.337043 secs.
[09/27 16:09:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11800.555908   11512.103760 -4980.772461  11800.555908    0.057373  11512.103760        0.0  288.452148      278.384766       6.0         11512.103760                -1.0                -1
1   11800.555908   11578.421143 -4980.772461  11800.555908    0.057373  11578.421143        0.0  222.134766      178.384766       7.0         11512.103760                 1.0             False
2   11800.555908   11622.171143 -4980.772461  11800.555908    0.057373  11622.171143        0.0  178.384766       78.384766       4.0         11512.103760                 1.0              True
3   11800.555908   11734.238525 -4959.157227  11800.555908  110.067383  11734.238525        0.0   66.317383        0.000000       4.0         11512.103760                 1.0              True
4   11844.305908   11800.555908 -4902.907227  11844.305908  110.067383  11800.555908        0.0   43.750000        0.000000       5.0         11512.103760                 1.0              True
5   11910.623291   11844.305908 -4869.224609  11910.623291  110.067383  11844.305908        0.0   66.317383        0.000000       2.0         11512.103760                 1.0              True
6   11954.373291   11910.623291 -4812.974854  11954.373291  110.067383  11910.623291        0.0   43.750000       -0.000244       2.0         11512.103760                 1.0              True
7   11997.815674   11954.430908 -4756.782227  11997.815674   87.192383  11954.430908        0.0   43.384766       -0.365234       1.0         11997.815674                 1.0              True
8   11999.027100   11998.180908 -4756.782227  11999.027100   44.596191  11998.180908        0.0    0.846191      -99.153809       1.0         11999.027100                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:09:28]  --------------------------------------------------------------------------------
[09/27 16:09:28]  Iteration: 85 (4 solution, 80 counterexamples)
[09/27 16:09:38]  Generator returned sat in 8.146775 secs.
[09/27 16:09:38]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:09:40]  Improved gap from 0.0 to 0
[09/27 16:09:40]  Improved number of small numbers from 56 to 89 out of a max of 110
[09/27 16:09:40]  Verifer returned sat in 1.826049 secs.
[09/27 16:09:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12222.162393   11722.151123 -5180.752441  12222.162393  0.001221  11722.151123        0.0  500.011270      500.011270       6.0         11722.151123                -1.0                -1
1   12222.162393   11722.151123 -5180.752441  12222.162393  0.001221  11722.151123        0.0  500.011270      400.011270       6.0         11722.151123                 0.0             False
2   12222.162393   11922.151123 -5180.752441  12222.162393  0.001221  11922.151123        0.0  300.011270      300.011270       7.0         11722.151123                 0.0             False
3   12222.162393   11958.173584 -5180.752441  12222.162393  0.001465  11958.173584        0.0  263.988809      200.011270       8.0         11722.151123                 0.0             False
4   12222.162393   12022.151123 -5180.752441  12222.162393  0.010000  12022.151123        0.0  200.011270      100.011270       9.0         11722.151123                 1.0              True
5   12222.162393   12222.149902 -5180.752441  12222.162393  0.010000  12222.149902        0.0    0.012490        0.011270       9.0         11722.151123                 1.0              True
6   12222.162393   12222.151367 -5080.763711  12222.162393  0.010000  12222.151367        0.0    0.011025        0.000000       9.0         11722.151123                 1.0              True
7   12222.162393   12222.162393 -4980.773682  12222.162393  0.010000  12222.162393        0.0    0.000000       -0.009971       9.0         11722.151123                 1.0              True
8   12222.172393   12222.172363 -4880.773926  12222.172393  0.010000  12222.172363        0.0    0.000029       -0.000215       1.0         11722.151123                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:09:41]  --------------------------------------------------------------------------------
[09/27 16:09:41]  Iteration: 86 (4 solution, 81 counterexamples)
[09/27 16:09:45]  Generator returned sat in 1.902054 secs.
[09/27 16:09:45]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:09:46]  Improved gap from 0.000244140625 to 0
[09/27 16:09:47]  Improved number of small numbers from 57 to 89 out of a max of 110
[09/27 16:09:47]  Verifer returned sat in 2.034234 secs.
[09/27 16:09:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11886.656113   11386.644775 -4226.637451  11886.656113  0.001250  11386.644775        0.0  500.011338      500.011230       6.0         11386.644775                -1.0                -1
1   11886.656113   11486.643555 -4226.637451  11886.656113  0.009766  11486.643555        0.0  400.012559      400.011230       7.0         11386.644775                 0.0             False
2   11886.656113   11486.645020 -4226.637451  11886.656113  0.010000  11486.645020        0.0  400.011094      300.011230       8.0         11386.644775                 0.0             False
3   11886.656113   11686.644775 -4226.637451  11886.656113  0.010000  11686.644775        0.0  200.011338      200.011230       9.0         11386.644775                 0.0             False
4   11886.656113   11786.644775 -4226.637451  11886.656113  0.010000  11786.644775        0.0  100.011338      100.011230       9.0         11386.644775                 1.0              True
5   11886.656113   11886.643555 -4226.637451  11886.656113  0.010000  11886.643555        0.0    0.012559        0.011230       9.0         11386.644775                 1.0              True
6   11886.656113   11886.645020 -4126.648682  11886.656113  0.010000  11886.645020        0.0    0.011094        0.000000       9.0         11386.644775                 1.0              True
7   11886.656113   11886.656113 -4026.648926  11886.656113  0.010000  11886.656113        0.0    0.000000       -0.000244       9.0         11386.644775                 1.0              True
8   11886.666113   11886.657227 -3926.658691  11886.666113  0.010000  11886.657227        0.0    0.008887       -0.000010       1.0         11386.644775                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:09:47]  --------------------------------------------------------------------------------
[09/27 16:09:47]  Iteration: 87 (4 solution, 82 counterexamples)
[09/27 16:09:52]  Generator returned sat in 2.470527 secs.
[09/27 16:09:52]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:09:53]  Improved number of small numbers from 63 to 109 out of a max of 109
[09/27 16:09:53]  Verifer returned sat in 0.493828 secs.
[09/27 16:09:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11986.713379   11186.656006 -4026.648682  11986.713379    0.057373  11186.656006        0.0  800.057373      800.057373       9.0         11186.656006                -1.0                -1
1   11986.713379   11286.656006 -4026.648682  11986.713379    0.057373  11286.656006        0.0  700.057373      700.057373       6.0         11186.656006                 1.0             False
2   11986.713379   11386.656006 -4026.648682  11986.713379    0.057373  11386.656006        0.0  600.057373      600.057373       7.0         11186.656006                 0.0             False
3   11986.713379   11486.656006 -4026.648682  11986.713379  495.057373  11486.656006        0.0  500.057373      500.057373       8.0         11186.656006                 0.0             False
4   11986.713379   11489.598877 -4026.648682  11986.713379  496.057373  11489.598877        0.0  497.114502      400.057373       9.0         11186.656006                 1.0              True
5   11986.713379   11586.656006 -4026.648682  11986.713379  497.057373  11586.656006        0.0  400.057373      300.057373       9.0         11186.656006                 1.0              True
6   12084.713379   11686.656006 -4026.648682  12084.713379  498.057373  11686.656006        0.0  398.057373      298.057373       9.0         11186.656006                 1.0              True
7   12185.713379   11886.656006 -4026.648682  12185.713379  499.057373  11886.656006        0.0  299.057373      299.057373       9.0         11186.656006                 1.0              True
8   12386.713379   11889.598877 -4026.648682  12386.713379  500.057373  11889.598877        0.0  497.114502      400.057373       9.0         11186.656006                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:09:53]  --------------------------------------------------------------------------------
[09/27 16:09:53]  Iteration: 88 (4 solution, 83 counterexamples)
[09/27 16:09:57]  Generator returned sat in 1.403277 secs.
[09/27 16:09:57]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:09:57]  Improved number of small numbers from 109 to 109 out of a max of 109
[09/27 16:09:57]  Verifer returned sat in 0.152180 secs.
[09/27 16:09:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11986.713379   11186.656006 -4026.648682  11986.713379    0.057373  11186.656006        0.0  800.057373      800.057373       6.0         11186.656006                -1.0                -1
1   11986.713379   11286.656006 -4026.648682  11986.713379    0.057373  11286.656006        0.0  700.057373      700.057373       7.0         11186.656006                 0.0             False
2   11986.713379   11386.656006 -4026.648682  11986.713379    0.057373  11386.656006        0.0  600.057373      600.057373       8.0         11186.656006                 0.0             False
3   11986.713379   11486.656006 -4026.648682  11986.713379  495.057373  11486.656006        0.0  500.057373      500.057373       9.0         11186.656006                 0.0             False
4   11986.713379   11489.598877 -4026.648682  11986.713379  496.057373  11489.598877        0.0  497.114502      400.057373       9.0         11186.656006                 1.0              True
5   11986.713379   11586.656006 -4026.648682  11986.713379  497.057373  11586.656006        0.0  400.057373      300.057373       9.0         11186.656006                 1.0              True
6   12084.713379   11686.656006 -4026.648682  12084.713379  498.057373  11686.656006        0.0  398.057373      298.057373       9.0         11186.656006                 1.0              True
7   12185.713379   11886.656006 -4026.648682  12185.713379  499.057373  11886.656006        0.0  299.057373      299.057373       9.0         11186.656006                 1.0              True
8   12386.713379   11889.598877 -4026.648682  12386.713379  500.057373  11889.598877        0.0  497.114502      400.057373       9.0         11186.656006                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:09:58]  --------------------------------------------------------------------------------
[09/27 16:09:58]  Iteration: 89 (4 solution, 84 counterexamples)
[09/27 16:10:03]  Generator returned sat in 2.172668 secs.
[09/27 16:10:03]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:10:04]  Improved gap from 0.0 to 0
[09/27 16:10:04]  Improved number of small numbers from 53 to 110 out of a max of 110
[09/27 16:10:04]  Verifer returned sat in 1.120108 secs.
[09/27 16:10:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11561.625244   11060.596680 -4026.648926  11561.625244  0.028564  11060.596680        0.0  501.028564      501.028564       6.0          11060.59668                -1.0                -1
1   11561.625244   11160.596436 -4026.648926  11561.625244  0.028564  11160.596436        0.0  401.028809      401.028564       6.0          11060.59668                 0.0             False
2   11561.625244   11260.596680 -4026.648926  11561.625244  0.028809  11260.596680        0.0  301.028564      301.028564       7.0          11060.59668                 0.0             False
3   11561.625244   11360.596436 -4026.648926  11561.625244  0.028809  11360.596436        0.0  201.028809      201.028564       8.0          11060.59668                 0.0             False
4   11561.625244   11460.596436 -4026.648926  11561.625244  1.000000  11460.596436        0.0  101.028809      101.028564       9.0          11060.59668                 1.0              True
5   11561.625244   11560.567871 -4026.648926  11561.625244  1.000000  11560.567871        0.0    1.057373        1.028564       9.0          11060.59668                 1.0              True
6   11561.625244   11560.596680 -3927.677490  11561.625244  1.000000  11560.596680        0.0    1.028564        0.000000       9.0          11060.59668                 1.0              True
7   11561.625244   11561.625244 -3827.677734  11561.625244  1.000000  11561.625244        0.0    0.000000       -0.000244       9.0          11060.59668                 1.0              True
8   11562.625244   11561.653809 -3728.677490  11562.625244  1.000000  11561.653809        0.0    0.971436        0.000000       1.0          11060.59668                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:10:04]  --------------------------------------------------------------------------------
[09/27 16:10:04]  Iteration: 90 (4 solution, 85 counterexamples)
[09/27 16:10:08]  Generator returned sat in 1.538366 secs.
[09/27 16:10:08]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:10:10]  Improved gap from 0.0 to 0
[09/27 16:10:10]  Improved number of small numbers from 47 to 110 out of a max of 110
[09/27 16:10:10]  Verifer returned sat in 1.986858 secs.
[09/27 16:10:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9726.914795    9225.886230 -4122.571289  9726.914795  0.028564  9225.886230        0.0  501.028564      501.028564       8.0           9225.88623                -1.0                -1
1    9726.914795    9325.886230 -4122.571289  9726.914795  0.028564  9325.886230        0.0  401.028564      401.028564       8.0           9225.88623                 0.0             False
2    9726.914795    9325.886230 -4122.571289  9726.914795  0.028809  9325.886230        0.0  401.028564      301.028564       8.0           9225.88623                 0.0             False
3    9726.914795    9525.886230 -4122.571289  9726.914795  0.028809  9525.886230        0.0  201.028564      201.028564       9.0           9225.88623                 0.0             False
4    9726.914795    9625.886230 -4122.571289  9726.914795  1.000000  9625.886230        0.0  101.028564      101.028564       9.0           9225.88623                 1.0              True
5    9726.914795    9725.857666 -4122.571289  9726.914795  1.000000  9725.857666        0.0    1.057129        1.028564       9.0           9225.88623                 1.0              True
6    9726.914795    9725.886475 -4023.599854  9726.914795  1.000000  9725.886475        0.0    1.028320        0.000000       9.0           9225.88623                 1.0              True
7    9726.914795    9726.914795 -3923.599854  9726.914795  1.000000  9726.914795        0.0    0.000000        0.000000       9.0           9225.88623                 1.0              True
8    9727.914795    9726.943604 -3824.599854  9727.914795  1.000000  9726.943604        0.0    0.971191        0.000000       1.0           9225.88623                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:10:11]  --------------------------------------------------------------------------------
[09/27 16:10:11]  Iteration: 91 (4 solution, 86 counterexamples)
[09/27 16:10:16]  Generator returned sat in 2.726900 secs.
[09/27 16:10:16]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:10:17]  Improved gap from 0.0 to 43.75
[09/27 16:10:17]  Improved number of small numbers from 63 to 110 out of a max of 110
[09/27 16:10:17]  Verifer returned sat in 1.308569 secs.
[09/27 16:10:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10270.483398    9795.226074 -4237.949951  10270.483398    0.999756   9795.226074        0.0  475.257324      475.257324       3.0          9795.226074                -1.0                -1
1   10270.483398    9895.226074 -4237.949951  10270.483398    0.999756   9895.226074        0.0  375.257324      375.257324       3.0          9795.226074                 0.0             False
2   10270.483398    9957.183105 -4237.949951  10270.483398    0.999756   9957.183105        0.0  313.300293      275.257324       4.0          9795.226074                 0.0             False
3   10270.483398   10095.226074 -4237.949951  10270.483398    0.999756  10095.226074        0.0  175.257324      175.257324       5.0          9795.226074                 0.0             False
4   10270.483398   10195.111816 -4237.949951  10270.483398    1.000000  10195.111816        0.0   75.371582       75.257324       6.0          9795.226074                 0.0             False
5   10270.483398   10195.226074 -4213.207275  10270.483398    1.000000  10195.226074        0.0   75.257324        0.000000       7.0          9795.226074                 0.0             False
6   10315.247559   10270.483398 -4158.085938  10315.247559  120.021484  10270.483398        0.0   44.764160       -0.114502       8.0          9795.226074                 1.0              True
7   10359.112061   10315.362061 -4101.835938  10359.112061   88.628662  10315.362061        0.0   43.750000        0.000000       1.0         10359.112061                 1.0              True
8   10359.112061   10359.112061 -4101.835693  10359.112061    1.000000  10359.112061        0.0    0.000000      -99.999756       2.0         10359.112061                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:10:18]  --------------------------------------------------------------------------------
[09/27 16:10:18]  Iteration: 92 (4 solution, 87 counterexamples)
[09/27 16:10:22]  Generator returned sat in 1.814728 secs.
[09/27 16:10:22]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:10:23]  Improved gap from 0.0 to 43.75
[09/27 16:10:23]  Improved number of small numbers from 107 to 110 out of a max of 110
[09/27 16:10:23]  Verifer returned sat in 1.101154 secs.
[09/27 16:10:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10014.999268    9558.877686 -4180.832520  10014.999268    0.028320   9558.877686        0.0  456.121582      456.121338       5.0          9558.877686                -1.0                -1
1   10014.999268    9658.877930 -4180.832520  10014.999268    0.028320   9658.877930        0.0  356.121338      356.121338       5.0          9558.877686                 0.0             False
2   10014.999268    9758.877930 -4180.832520  10014.999268    0.028564   9758.877930        0.0  256.121338      256.121338       4.0          9558.877686                 0.0             False
3   10014.999268    9839.684814 -4180.832520  10014.999268    0.028564   9839.684814        0.0  175.314453      156.121338       5.0          9558.877686                 0.0             False
4   10014.999268    9858.877930 -4180.832520  10014.999268    1.000000   9858.877930        0.0  156.121338       56.121338       6.0          9558.877686                 0.0             False
5   10014.999268    9958.877930 -4136.953857  10014.999268  101.000000   9958.877930        0.0   56.121338        0.000000       7.0          9558.877686                 1.0              True
6   10059.877930   10014.999268 -4081.832520  10059.877930  101.000000  10014.999268        0.0   44.878662        0.000000       7.0          9558.877686                 1.0              True
7   10103.656494   10059.906250 -4025.611084  10103.656494   88.657227  10059.906250        0.0   43.750244        0.000000       1.0         10103.656494                 1.0              True
8   10103.656494   10103.656494 -4025.611084  10103.656494    1.000000  10103.656494        0.0    0.000000     -100.000000       2.0         10103.656494                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:10:24]  --------------------------------------------------------------------------------
[09/27 16:10:24]  Iteration: 93 (4 solution, 88 counterexamples)
[09/27 16:10:33]  Generator returned sat in 6.857596 secs.
[09/27 16:10:33]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:10:39]  Improved gap from 0.02850341796875 to 0
[09/27 16:10:39]  Improved number of small numbers from 49 to 110 out of a max of 110
[09/27 16:10:39]  Verifer returned sat in 5.464540 secs.
[09/27 16:10:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9923.310059    9823.281494 -4180.832520   9923.310059    0.028564   9823.281494        0.0  100.028564      100.028564       5.0          9823.281494                -1.0                -1
1    9923.310059    9823.309814 -4180.832520   9923.310059   99.971436   9823.309814        0.0  100.000244        0.028564       2.0          9823.281494                 1.0             False
2    9923.310059    9923.281738 -4080.861084   9923.310059   99.971436   9923.281738        0.0    0.028320        0.000000       3.0          9823.281494                 0.0             False
3   10025.424072    9923.310059 -4080.861084  10025.424072  102.142334   9923.310059        0.0  102.114014        2.114014       4.0          9823.281494                 1.0              True
4   10025.424072   10025.395508 -3983.917969  10025.424072  102.085449  10025.395508        0.0    0.028564       -0.942871       2.0         10025.424072                 1.0              True
5   10026.395508   10026.367188 -3883.946533  10026.395508    1.000000  10026.367188        0.0    0.028320        0.000000       1.0         10026.395508                 0.0             False
6   10027.367188   10026.424072 -3784.918213  10027.367188    1.000000  10026.424072        0.0    0.943115        0.000000       1.0         10026.395508                 0.0             False
7   10027.424072   10027.395752 -3685.946533  10027.424072    1.000000  10027.395752        0.0    0.028320       -0.971436       1.0         10026.395508                 0.0             False
8   10028.395752   10028.395752 -3685.946533  10028.395752    1.000000  10028.395752        0.0    0.000000      -99.999756       1.0         10026.395508                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:10:39]  --------------------------------------------------------------------------------
[09/27 16:10:39]  Iteration: 94 (4 solution, 89 counterexamples)
[09/27 16:10:46]  Generator returned sat in 4.595584 secs.
[09/27 16:10:47]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:10:54]  Improved gap from 4.552652994791667 to 3.125
[09/27 16:10:55]  Improved number of small numbers from 43 to 56 out of a max of 110
[09/27 16:10:55]  Verifer returned sat in 8.205226 secs.
[09/27 16:10:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9880.511180    9581.424530 -4034.937205   9880.511180    0.028320   9581.424530        0.0  299.086650      203.125000       9.0          9581.424530                -1.0                -1
1    9880.511180    9777.386180 -4034.937205   9880.511180    0.028320   9777.386180        0.0  103.125000      103.125000       9.0          9581.424530                 1.0             False
2    9880.511180    9877.357676 -4034.937205   9880.511180    0.028320   9877.357676        0.0    3.153503        3.125000       6.0          9581.424530                 1.0              True
3    9880.511180    9877.386180 -3938.062205   9880.511180    0.028320   9877.386180        0.0    3.125000        0.000000       7.0          9581.424530                 0.0             False
4   10026.367004    9880.511180 -3938.062205  10026.367004  148.980825   9880.511180        0.0  145.855825       45.855825       8.0          9581.424530                 1.0              True
5   10026.367004    9980.511180 -3883.946533  10026.367004   52.562500   9980.511180        0.0   45.855825       -0.028503       2.0         10026.367004                 1.0              True
6   10059.369181   10026.395508 -3816.920410  10059.369181   78.858002  10026.395508        0.0   32.973674       -0.000203       1.0         10026.367004                 0.0             False
7   10141.329173   10059.397685 -3798.908936  10141.329173  114.933665  10059.397685        0.0   81.931488       -0.028737       1.0         10026.367004                 0.0             False
8   10207.307770   10141.357910 -3764.858887  10207.307770  147.910085  10141.357910        0.0   65.949860       -0.000092       1.0         10026.367004                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:10:55]  --------------------------------------------------------------------------------
[09/27 16:10:55]  Iteration: 95 (4 solution, 90 counterexamples)
[09/27 16:11:07]  Generator returned sat in 9.125254 secs.
[09/27 16:11:07]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:11:09]  Improved number of small numbers from 53 to 71 out of a max of 109
[09/27 16:11:09]  Verifer returned sat in 1.873418 secs.
[09/27 16:11:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10095.533447    9695.533392 -4053.084417  10095.533447    0.056641   9695.533392        0.0  400.000056      400.000056       5.0          9695.533392                -1.0                -1
1   10095.533447    9695.533392 -4053.084417  10095.533447    0.056885   9695.533392        0.0  400.000056      300.000056       5.0          9695.533392                 0.0             False
2   10095.533447    9795.533447 -4053.084417  10095.533447  198.113525   9795.533447        0.0  300.000000      200.000056       6.0          9695.533392                 0.0             False
3   10095.533447    9895.533392 -4053.084417  10095.533447  198.113770   9895.533392        0.0  200.000056      100.000056       7.0          9695.533392                 0.0             False
4   10095.590276   10095.533392 -4053.084417  10095.590276  200.056885  10095.533392        0.0    0.056885        0.056885       8.0          9695.533392                 0.0             False
5   10494.533392   10192.419678 -4053.084417  10494.533392  399.000000  10192.419678        0.0  302.113714      299.000000       1.0          9695.533392                 1.0              True
6   10591.362793   10295.533392 -4053.084417  10591.362793  398.943115  10295.533392        0.0  295.829401      295.829401       2.0         10591.362793                 0.0             False
7   10696.004949   10295.948064 -4053.084417  10696.004949  400.471558  10295.948064        0.0  400.056885      300.471558       3.0         10591.362793                 0.0             False
8   10696.004949   10494.590332 -4053.084417  10696.004949  301.443115  10494.590332        0.0  201.414617      200.471558       3.0         10696.004949                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:11:09]  --------------------------------------------------------------------------------
[09/27 16:11:09]  Iteration: 96 (4 solution, 91 counterexamples)
[09/27 16:11:14]  Generator returned sat in 2.002075 secs.
[09/27 16:11:14]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:11:15]  Improved number of small numbers from 58 to 109 out of a max of 109
[09/27 16:11:15]  Verifer returned sat in 0.772235 secs.
[09/27 16:11:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10617.403076    9917.402832 -4053.084473  10617.403076   93.772217   9917.402832        0.0  700.000244      600.000244       5.0          9917.402832                -1.0                -1
1   10617.403076   10117.402832 -4053.084473  10617.403076   93.772217  10117.402832        0.0  500.000244      500.000244       5.0          9917.402832                 0.0             False
2   10617.403076   10216.459961 -4053.084473  10617.403076   93.772217  10216.459961        0.0  400.943115      400.000244       6.0          9917.402832                 0.0             False
3   10617.403076   10217.402832 -4053.084473  10617.403076   93.772461  10217.402832        0.0  400.000244      300.000244       7.0          9917.402832                 0.0             False
4   10617.403076   10317.402832 -4053.084473  10617.403076  197.886230  10317.402832        0.0  300.000244      200.000244       8.0          9917.402832                 0.0             False
5   10617.403076   10417.403076 -4053.084473  10617.403076  199.943115  10417.403076        0.0  200.000000      100.000244       9.0          9917.402832                 0.0             False
6   10617.403076   10616.630371 -4053.084473  10617.403076  199.943115  10616.630371        0.0    0.772705        0.000244       9.0          9917.402832                 1.0              True
7   11014.857910   10717.402832 -4053.084473  11014.857910  398.227539  10717.402832        0.0  297.455078      297.455078       1.0          9917.402832                 1.0              True
8   11117.516602   10717.459717 -4053.084473  11117.516602  400.113770  10717.459717        0.0  400.056885      300.113770       2.0          9917.402832                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:11:15]  --------------------------------------------------------------------------------
[09/27 16:11:15]  Iteration: 97 (4 solution, 92 counterexamples)
[09/27 16:11:20]  Generator returned sat in 2.293495 secs.
[09/27 16:11:20]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:11:24]  Improved gap from 0.0284423828125 to 3.125
[09/27 16:11:25]  Improved number of small numbers from 55 to 67 out of a max of 110
[09/27 16:11:25]  Verifer returned sat in 4.773360 secs.
[09/27 16:11:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10317.402832   10017.601929 -4055.112915  10317.402832    0.028320  10017.601929        0.0  299.800903      204.552897       6.0         10017.601929                -1.0                -1
1   10317.402832   10212.849935 -4055.112915  10317.402832    0.028320  10212.849935        0.0  104.552897      104.552897       6.0         10017.601929                 0.0             False
2   10317.402832   10312.821493 -4055.112915  10317.402832    0.028320  10312.821493        0.0    4.581340        4.552897       7.0         10017.601929                 0.0             False
3   10317.402832   10312.849935 -3959.665812  10317.402832    0.028320  10312.849935        0.0    4.552897        0.000000       8.0         10017.601929                 0.0             False
4   10461.473938   10317.402832 -3959.665812  10461.473938  148.624003  10317.402832        0.0  144.071106       44.071106       9.0         10017.601929                 1.0              True
5   10461.473938   10417.402832 -3903.765137  10461.473938   53.276449  10417.402832        0.0   44.071106       -0.028219       2.0         10461.473938                 1.0              True
6   10497.331726   10461.502380 -3839.623047  10497.331726   79.928894  10461.502380        0.0   35.829346       -0.028341       1.0         10461.473938                 0.0             False
7   10576.793050   10497.360168 -3819.084473  10576.793050  115.290670  10497.360168        0.0   79.432882       -0.028442       1.0         10461.473938                 0.0             False
8   10645.984172   10576.821533 -3819.084473  10645.984172  148.624003  10576.821533        0.0   69.162638      -30.837321       1.0         10461.473938                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:11:26]  --------------------------------------------------------------------------------
[09/27 16:11:26]  Iteration: 98 (4 solution, 93 counterexamples)
[09/27 16:11:30]  Generator returned sat in 1.942624 secs.
[09/27 16:11:30]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:11:36]  Improved gap from 0.02838134765625 to 3.125
[09/27 16:11:37]  Improved number of small numbers from 39 to 53 out of a max of 110
[09/27 16:11:37]  Verifer returned sat in 6.881411 secs.
[09/27 16:11:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11534.198506   11235.111246 -4055.112915  11534.198506    0.028320  11235.111246        0.0  299.087260      203.125000       8.0         11235.111246                -1.0                -1
1   11534.198506   11431.073506 -4055.112915  11534.198506    0.028320  11431.073506        0.0  103.125000      103.125000       7.0         11235.111246                 0.0             False
2   11534.198506   11531.045125 -4055.112915  11534.198506    0.028564  11531.045125        0.0    3.153381        3.125000       8.0         11235.111246                 0.0             False
3   11534.198506   11531.073506 -3958.237915  11534.198506    0.028564  11531.073506        0.0    3.125000        0.000000       9.0         11235.111246                 0.0             False
4   11680.054636   11534.198506 -3958.237915  11680.054636  148.981130  11534.198506        0.0  145.856130       45.856130       9.0         11235.111246                 1.0              True
5   11680.054636   11634.198506 -3904.122314  11680.054636   52.562500  11634.198506        0.0   45.856130       -0.028269       2.0         11680.054636                 1.0              True
6   11713.056447   11680.083017 -3837.095947  11713.056447   78.857941  11680.083017        0.0   32.973429       -0.000092       1.0         11680.054636                 0.0             False
7   11795.016743   11713.084828 -3819.084473  11795.016743  114.933726  11713.084828        0.0   81.931915       -0.028320       1.0         11680.054636                 0.0             False
8   11860.994852   11795.045166 -3819.084473  11860.994852  147.910024  11795.045166        0.0   65.949686      -34.050212       1.0         11680.054636                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:11:38]  --------------------------------------------------------------------------------
[09/27 16:11:38]  Iteration: 99 (4 solution, 94 counterexamples)
[09/27 16:11:44]  Generator returned sat in 3.644135 secs.
[09/27 16:11:44]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:11:49]  Improved gap from 0.056640625 to 4.6875
[09/27 16:11:50]  Improved number of small numbers from 92 to 97 out of a max of 110
[09/27 16:11:50]  Verifer returned sat in 5.573172 secs.
[09/27 16:11:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11510.266927   11207.530273 -4029.618734  11510.266927    0.028320  11207.530273        0.0  302.736654      204.687500       8.0         11207.530273                -1.0                -1
1   11510.266927   11405.579427 -4029.618734  11510.266927    0.028320  11405.579427        0.0  104.687500      104.687500       8.0         11207.530273                 1.0             False
2   11510.266927   11505.551270 -4029.618734  11510.266927    0.028320  11505.551270        0.0    4.715658        4.687500       4.0         11207.530273                 1.0              True
3   11510.266927   11505.579427 -3934.306234  11510.266927    0.028320  11505.579427        0.0    4.687500        0.000000       5.0         11207.530273                 0.0             False
4   11653.604004   11510.266927 -3934.306234  11653.604004  148.024577  11510.266927        0.0  143.337077       43.337077       6.0         11207.530273                 1.0              True
5   11653.604004   11610.267090 -3877.643555  11653.604004   51.343750  11610.267090        0.0   43.336914       -0.000244       2.0         11653.604004                 1.0              True
6   11689.296875   11654.531738 -3813.336182  11689.296875   79.029785  11654.531738        0.0   34.765137        0.000000       1.0         11653.604004                 0.0             False
7   11769.522786   11689.325033 -3793.590332  11769.522786  114.991048  11689.325033        0.0   80.197754       -0.028239       1.0         11653.604004                 0.0             False
8   11837.349609   11769.551107 -3793.590332  11837.349609  148.024577  11769.551107        0.0   67.798503      -32.201416       1.0         11653.604004                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:11:50]  --------------------------------------------------------------------------------
[09/27 16:11:50]  Iteration: 100 (4 solution, 95 counterexamples)
[09/27 16:11:55]  Generator returned sat in 2.563777 secs.
[09/27 16:11:56]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:12:06]  Improved gap from 4.6875 to 4.6875
[09/27 16:12:07]  Improved number of small numbers from 55 to 67 out of a max of 110
[09/27 16:12:07]  Verifer returned sat in 11.332675 secs.
[09/27 16:12:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10215.717715    9911.866803 -2787.516136  10215.717715    0.056396   9911.866803        0.0  303.850911      204.687500       5.0          9911.866803                -1.0                -1
1   10215.717715   10111.030215 -2787.516136  10215.717715    0.056641  10111.030215        0.0  104.687500      104.687500       5.0          9911.866803                 0.0             False
2   10215.717715   10210.973633 -2787.516136  10215.717715    4.687256  10210.973633        0.0    4.744082        4.687500       6.0          9911.866803                 0.0             False
3   10215.717715   10211.030215 -2692.203636  10215.717715    4.687500  10211.030215        0.0    4.687500        0.000000       7.0          9911.866803                 0.0             False
4   10359.611921   10215.717715 -2692.203636  10359.611921  148.581706  10215.717715        0.0  143.894206       43.894206       8.0          9911.866803                 1.0              True
5   10359.611921   10315.717773 -2636.154297  10359.611921   51.343750  10315.717773        0.0   43.894147       -0.056455       2.0         10359.611921                 1.0              True
6   10394.761719   10359.668561 -2571.304199  10394.761719   79.043945  10359.668561        0.0   35.093158       -0.056559       1.0         10359.611921                 0.0             False
7   10474.509707   10394.818301 -2550.995850  10474.509707  114.841146  10394.818301        0.0   79.691406       -0.000221       1.0         10359.611921                 0.0             False
8   10542.789167   10474.973633 -2519.275146  10542.789167  147.970866  10474.973633        0.0   67.815534       -0.000059       1.0         10359.611921                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:12:07]  --------------------------------------------------------------------------------
[09/27 16:12:07]  Iteration: 101 (4 solution, 96 counterexamples)
[09/27 16:12:14]  Generator returned sat in 3.491741 secs.
[09/27 16:12:14]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:12:16]  Improved gap from 0.02825927734375 to 4.6875
[09/27 16:12:17]  Improved number of small numbers from 44 to 57 out of a max of 110
[09/27 16:12:17]  Verifer returned sat in 3.501938 secs.
[09/27 16:12:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10215.731964    9911.158498 -2787.530385  10215.731964    0.028076   9911.158498        0.0  304.573466      204.687500       7.0          9911.158498                -1.0                -1
1   10215.731964   10111.044464 -2787.530385  10215.731964    0.028076  10111.044464        0.0  104.687500      104.687500       7.0          9911.158498                 0.0             False
2   10215.731964   10211.016205 -2787.530385  10215.731964    0.028076  10211.016205        0.0    4.715759        4.687500       8.0          9911.158498                 0.0             False
3   10215.731964   10211.044464 -2692.217885  10215.731964    0.028076  10211.044464        0.0    4.687500        0.000000       9.0          9911.158498                 0.0             False
4   10359.987447   10215.731964 -2692.217885  10359.987447  148.942983  10215.731964        0.0  144.255483       44.255483       9.0          9911.158498                 1.0              True
5   10359.987447   10315.731964 -2636.501465  10359.987447   51.343750  10315.731964        0.0   44.255483       -0.028097       2.0         10359.987447                 1.0              True
6   10394.761719   10360.015706 -2573.103271  10394.761719   79.029755  10360.015706        0.0   34.746012       -1.855632       1.0         10359.987447                 0.0             False
7   10475.016205   10396.617432 -2551.502197  10475.016205  115.000498  10396.617432        0.0   78.398773       -0.000071       1.0         10359.987447                 0.0             False
8   10545.560415   10475.016357 -2551.501953  10545.560415  148.942983  10475.016357        0.0   70.544057      -29.455617       1.0         10359.987447                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:12:18]  --------------------------------------------------------------------------------
[09/27 16:12:18]  Iteration: 102 (4 solution, 97 counterexamples)
[09/27 16:12:25]  Generator returned sat in 4.645632 secs.
[09/27 16:12:25]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:12:32]  Improved gap from 0.0 to 3.125
[09/27 16:12:33]  Improved number of small numbers from 45 to 110 out of a max of 110
[09/27 16:12:33]  Verifer returned sat in 7.626057 secs.
[09/27 16:12:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10174.376221   10035.818604 -2847.737061  10174.376221    0.056396  10035.818604        0.0  138.557617      103.125244       6.0         10035.818604                -1.0                -1
1   10174.376221   10171.250977 -2847.737061  10174.376221    0.056396  10171.250977        0.0    3.125244        3.125244       6.0         10035.818604                 0.0             False
2   10174.376221   10171.250977 -2750.862305  10174.376221    0.056396  10171.250977        0.0    3.125244        0.000000       6.0         10035.818604                 0.0             False
3   10174.432373   10174.376221 -2653.987305  10174.432373    3.181396  10174.376221        0.0    0.056152       -3.068848       7.0         10035.818604                 0.0             False
4   10312.933838   10219.482910 -2653.987305  10312.933838  138.557617  10219.482910        0.0   93.450928       35.432617       1.0         10035.818604                 1.0              True
5   10312.933838   10277.501221 -2589.476074  10312.933838   93.394775  10277.501221        0.0   35.432617       -0.056152       2.0         10312.933838                 0.0             False
6   10377.323730   10312.990234 -2553.865967  10377.323730   99.822510  10312.990234        0.0   64.333496       -0.056152       1.0         10312.933838                 0.0             False
7   10432.208496   10377.379883 -2514.805664  10432.208496  119.218262  10377.379883        0.0   54.828613       -6.111084       1.0         10312.933838                 0.0             False
8   10515.937500   10438.319824 -2514.805664  10515.937500  138.557617  10438.319824        0.0   77.617676      -22.382080       1.0         10312.933838                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:12:33]  --------------------------------------------------------------------------------
[09/27 16:12:33]  Iteration: 103 (4 solution, 98 counterexamples)
[09/27 16:12:38]  Generator returned sat in 2.078078 secs.
[09/27 16:12:38]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:12:48]  Improved gap from 3.125 to 3.125
[09/27 16:12:50]  Improved number of small numbers from 37 to 51 out of a max of 110
[09/27 16:12:50]  Verifer returned sat in 11.333799 secs.
[09/27 16:12:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10288.019576   10145.144646 -2778.830322  10288.019576    0.056396  10145.144646        0.0  142.874930      103.181084       6.0         10145.144646                -1.0                -1
1   10288.019576   10284.838302 -2778.830322  10288.019576    0.056396  10284.838302        0.0    3.181274        3.181084       6.0         10145.144646                 0.0             False
2   10288.019576   10284.894576 -2682.011406  10288.019576    0.056396  10284.894576        0.0    3.125000        0.000000       7.0         10145.144646                 0.0             False
3   10288.075851   10288.019576 -2585.136406  10288.075851    3.181274  10288.019576        0.0    0.056274       -3.068726       8.0         10145.144646                 0.0             False
4   10430.894507   10325.388525 -2585.136406  10430.894507  142.874930  10325.388525        0.0  105.505981       39.749930       1.0         10145.144646                 1.0              True
5   10430.894507   10391.144576 -2524.886475  10430.894507   91.712577  10391.144576        0.0   39.749930       -0.000138       2.0         10430.894507                 0.0             False
6   10490.125865   10430.950781 -2484.173828  10490.125865   98.981288  10430.950781        0.0   59.175084       -0.056134       1.0         10430.894507                 0.0             False
7   10551.907028   10490.182139 -2445.955078  10551.907028  120.956247  10490.182139        0.0   61.724888       -0.056221       1.0         10430.894507                 0.0             False
8   10633.057069   10551.963379 -2445.955078  10633.057069  142.874930  10551.963379        0.0   81.093691      -18.906179       1.0         10430.894507                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:12:50]  --------------------------------------------------------------------------------
[09/27 16:12:50]  Iteration: 104 (4 solution, 99 counterexamples)
[09/27 16:12:59]  Generator returned sat in 6.226023 secs.
[09/27 16:12:59]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:13:10]  Improved gap from 3.125 to 3.125
[09/27 16:13:11]  Improved number of small numbers from 45 to 51 out of a max of 110
[09/27 16:13:11]  Verifer returned sat in 11.872198 secs.
[09/27 16:13:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10683.547388   10543.990106 -3316.132651  10683.547388    0.055908  10543.990106        0.0  139.557281      103.125000       8.0         10543.990106                -1.0                -1
1   10683.547388   10680.422388 -3316.132651  10683.547388    0.056152  10680.422388        0.0    3.125000        3.125000       8.0         10543.990106                 1.0             False
2   10683.547388   10680.422388 -3219.257651  10683.547388    0.056152  10680.422388        0.0    3.125000        0.000000       8.0         10543.990106                 1.0              True
3   10686.672388   10683.547388 -3122.382651  10686.672388    6.250000  10683.547388        0.0    3.125000        0.000000       9.0         10543.990106                 1.0             False
4   10822.104669   10728.654047 -3122.382651  10822.104669  138.557281  10728.654047        0.0   93.450623       35.432281       1.0         10543.990106                 1.0              True
5   10822.104669   10786.672388 -3057.870850  10822.104669   93.394470  10786.672388        0.0   35.432281       -0.055917       2.0         10822.104669                 0.0             False
6   10886.494623   10822.160822 -3022.260986  10886.494623   99.822235  10822.160822        0.0   64.333801       -0.056100       1.0         10822.104669                 0.0             False
7   10941.378656   10886.550775 -2977.089111  10941.378656  119.217834  10886.550775        0.0   54.827881       -0.000192       1.0         10822.104669                 0.0             False
8   11025.108057   10947.491455 -2977.088867  11025.108057  138.557281  10947.491455        0.0   77.616602      -16.270547       1.0         10822.104669                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:13:12]  --------------------------------------------------------------------------------
[09/27 16:13:12]  Iteration: 105 (4 solution, 100 counterexamples)
[09/27 16:13:18]  Generator returned sat in 3.191454 secs.
[09/27 16:13:18]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:13:24]  Improved gap from 0.0 to 3.125
[09/27 16:13:24]  Improved number of small numbers from 41 to 110 out of a max of 110
[09/27 16:13:24]  Verifer returned sat in 6.419154 secs.
[09/27 16:13:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10375.009521   10233.190918 -3257.917480  10375.009521    0.056152  10233.190918        0.0  141.818604      110.579834       7.0         10233.190918                -1.0                -1
1   10375.009521   10364.429443 -3257.917480  10375.009521    0.056152  10364.429443        0.0   10.580078       10.579834       7.0         10233.190918                 0.0             False
2   10375.009521   10371.884521 -3168.497314  10375.009521    0.056152  10371.884521        0.0    3.125000        0.000000       8.0         10233.190918                 0.0             False
3   10375.065430   10375.009521 -3071.622314  10375.065430    3.180908  10375.009521        0.0    0.055908       -3.069092       9.0         10233.190918                 0.0             False
4   10516.828125   10418.718262 -3071.622314  10516.828125  141.818604  10418.718262        0.0   98.109863       38.693604       1.0         10233.190918                 1.0              True
5   10516.828125   10478.134521 -3010.316162  10516.828125   98.053711  10478.134521        0.0   38.693604       -0.000244       2.0         10516.828125                 0.0             False
6   10580.286377   10516.884033 -2973.774170  10580.286377  102.151855  10516.884033        0.0   63.402344        0.000000       1.0         10516.828125                 0.0             False
7   10638.897217   10580.342285 -2932.441162  10638.897217  122.013184  10580.342285        0.0   58.554932       -0.056152       1.0         10516.828125                 0.0             False
8   10722.160889   10638.953369 -2932.441162  10722.160889  141.818604  10638.953369        0.0   83.207520      -16.792480       1.0         10516.828125                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:13:25]  --------------------------------------------------------------------------------
[09/27 16:13:25]  Iteration: 106 (4 solution, 101 counterexamples)
[09/27 16:13:28]  Generator returned unsat in 0.473181 secs.
[09/27 16:13:28]  [96mNo more solutions found[0m
[09/27 16:13:28]  Final solutions:
[09/27 16:13:28]  0: [1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:13:28]  1: [1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:13:28]  2: [1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:13:28]  3: [1m[92mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:13:28]  Took 782.910457 secs.
