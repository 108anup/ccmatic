[09/28 12:13:24]  --------------------------------------------------------------------------------
[09/28 12:13:24]  Iteration: 1 (0 solution, 0 counterexamples)
[09/28 12:13:24]  Generator returned sat in 0.005508 secs.
[09/28 12:13:24]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:25]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:13:25]  Verifer returned sat in 0.660211 secs.
[09/28 12:13:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0       0.000000   -1426.323785  1426.198785     0.000000     0.125000 -1426.323785   2.101562  1424.222222     1424.097222       7.0         -1426.323785                -1.0                -1
1       0.000000   -1426.198785  1426.198785     0.000000     0.250000 -1426.198785   2.101562  1424.097222     1324.097222       7.0         -1426.323785                 1.0             False
2       0.000000   -1326.198785  1426.198785     0.000000     0.125000 -1326.198785   2.101562  1324.097222     1224.097222       8.0            -2.101562                 1.0              True
3       0.000000   -1203.882812  1426.198785     0.000000     0.125000 -1203.882812   2.101562  1201.781250     1124.097222       9.0            -2.101562                 1.0             False
4       0.000000   -1026.198785  1426.198785     0.000000   445.944444 -1026.198785   2.101562  1024.097222     1024.097222       6.0            -2.101562                 1.0             False
5       0.000000   -1026.198785  1426.198785     0.000000  1023.972222 -1026.198785   2.101562  1024.097222      924.097222       6.0            -2.101562                 1.0             False
6      88.888889    -926.198785  1426.198785    88.888889  1112.986111  -926.198785   2.101562  1012.986111      912.986111       7.0            -2.101562                 1.0             False
7     188.763889    -726.198785  1426.198785   188.763889  1112.861111  -726.198785   2.101562   912.861111      912.861111       8.0           186.662326                 1.0             False
8     433.333333    -726.198785  1426.198785   433.333333  1157.430556  -726.198785   2.101562  1157.430556     1057.430556       8.0           186.662326                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:26]  --------------------------------------------------------------------------------
[09/28 12:13:26]  Iteration: 2 (0 solution, 1 counterexamples)
[09/28 12:13:26]  Generator returned sat in 0.017397 secs.
[09/28 12:13:26]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:13:26]  Improved gap from 0.0 to 0
[09/28 12:13:26]  Improved number of small numbers from 108 to 111 out of a max of 111
[09/28 12:13:26]  Verifer returned sat in 0.361929 secs.
[09/28 12:13:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -100.119873    -402.219238  1426.198730  -100.119873  499.992432  -402.219238   2.101562  299.997803      299.997803       5.0          -402.219238                -1.0                -1
1      99.874756    -302.219238  1426.198730    99.874756  499.992432  -302.219238   2.101562  399.992432      399.992432       5.0          -402.219238                 0.0             False
2      99.874756    -202.219238  1426.198730    99.874756    0.010000  -202.219238   2.101562  299.992432      299.992432       6.0            97.773193                 0.0             False
3      99.874756    -102.219238  1426.198730    99.874756    0.009766  -102.219238   2.101562  199.992432      199.992432       3.0            97.773193                 0.0             False
4      99.874756      -2.219238  1426.198730    99.874756    0.010000    -2.219238   2.101562   99.992432       99.992432       4.0            97.773193                 0.0             False
5      99.874756      97.770938  1426.198730    99.874756    0.010000    97.770938   2.101562    0.002256       -0.007568       5.0            97.773193                 0.0             False
6      99.882500      97.780937  1526.188721    99.882500    0.010000    97.780937   2.101562    0.000000       -0.009834       1.0            97.773193                 0.0             False
7      99.892500      97.790937  1626.178711    99.892500    0.010000    97.790937   2.101562    0.000000       -0.009844       1.0            97.773193                 0.0             False
8      99.902500      97.800938  1726.168701    99.902500    0.010000    97.800938   2.101562    0.000000       -0.009854       1.0            97.773193                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:27]  --------------------------------------------------------------------------------
[09/28 12:13:27]  Iteration: 3 (0 solution, 2 counterexamples)
[09/28 12:13:27]  Generator returned sat in 0.017432 secs.
[09/28 12:13:27]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:27]  Improved number of small numbers from 64 to 88 out of a max of 110
[09/28 12:13:27]  Verifer returned sat in 0.735903 secs.
[09/28 12:13:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0      99.869873    -401.122803  1426.19873    99.869873    0.002441  -401.122803        0.0  500.992676      500.992617       8.0          -401.122803                -1.0                -1
1      99.869873    -301.122744  1426.19873    99.869873    0.002441  -301.122744        0.0  400.992617      400.992617       8.0          -401.122803                 0.0             False
2      99.869873    -201.122803  1426.19873    99.869873    0.009766  -201.122803        0.0  300.992676      300.992617       8.0          -401.122803                 0.0             False
3      99.869873    -195.127744  1426.19873    99.869873    0.009766  -195.127744        0.0  294.997617      200.992617       9.0          -401.122803                 0.0             False
4      99.869873    -101.122744  1426.19873    99.869873    0.010000  -101.122744        0.0  200.992617      100.992617       8.0          -401.122803                 1.0              True
5      99.869873      49.367256  1426.19873    99.869873  101.010000    49.367256        0.0   50.502617        0.992617       9.0          -401.122803                 0.0             False
6      99.872256      99.872256  1426.19873    99.872256   50.505000    99.872256        0.0    0.000000      -99.005000       1.0            99.872256                 1.0              True
7     298.877256     298.877256  1426.19873   298.877256  199.005000   298.877256        0.0    0.000000        0.000000       1.0            99.872256                 0.0             False
8     698.882256     298.879639  1426.19873   698.882256  400.005000   298.879639        0.0  400.002617      300.005000       1.0            99.872256                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:28]  --------------------------------------------------------------------------------
[09/28 12:13:28]  Iteration: 4 (0 solution, 3 counterexamples)
[09/28 12:13:28]  Generator returned sat in 0.011111 secs.
[09/28 12:13:28]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:29]  Improved number of small numbers from 64 to 108 out of a max of 110
[09/28 12:13:29]  Verifer returned sat in 0.876690 secs.
[09/28 12:13:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0      -1.132812    -701.132812  1426.198486    -1.132812    0.002686  -701.132812        0.0  700.000000      700.000000       7.0          -701.132812                -1.0                -1
1      -1.132812    -601.132812  1426.198486    -1.132812    0.010000  -601.132812        0.0  600.000000      600.000000       7.0          -701.132812                 0.0             False
2      -1.132812    -601.132568  1426.198486    -1.132812    0.010000  -601.132568        0.0  599.999756      500.000000       8.0          -701.132812                 0.0             False
3      -1.132812    -498.132568  1426.198486    -1.132812    0.010000  -498.132568        0.0  496.999756      400.000000       9.0          -701.132812                 0.0             False
4      -1.132812    -401.132812  1426.198486    -1.132812    0.010000  -401.132812        0.0  400.000000      300.000000       8.0          -701.132812                 1.0              True
5      -1.132812    -301.132568  1426.198486    -1.132812  101.010000  -301.132568        0.0  299.999756      200.000000       9.0          -701.132812                 0.0             False
6      -1.132812    -201.132803  1426.198486    -1.132812   49.505000  -201.132803        0.0  199.999990      100.000000       8.0            -1.132812                 1.0              True
7      -1.132812      -1.132812  1426.198486    -1.132812  199.004883    -1.132812        0.0    0.000000        0.000000       8.0            -1.132812                 0.0             False
8     398.872070      -1.130371  1426.198486   398.872070  400.004883    -1.130371        0.0  400.002441      300.004883       1.0            -1.132812                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:29]  --------------------------------------------------------------------------------
[09/28 12:13:29]  Iteration: 5 (0 solution, 4 counterexamples)
[09/28 12:13:30]  Generator returned sat in 0.209017 secs.
[09/28 12:13:30]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:30]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:13:30]  Verifer returned sat in 0.242096 secs.
[09/28 12:13:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -298.883789    -800.821533  1525.887207  -298.883789    0.062256  -800.821533        0.0  501.937744      501.937744       7.0          -800.821533                -1.0                -1
1    -298.883789    -700.821533  1525.887207  -298.883789    0.062256  -700.821533        0.0  401.937744      401.937744       8.0          -800.821533                 0.0             False
2    -298.883789    -600.821533  1525.887207  -298.883789    0.062256  -600.821533        0.0  301.937744      301.937744       8.0          -800.821533                 0.0             False
3    -298.883789    -546.446045  1525.887207  -298.883789    2.000000  -546.446045        0.0  247.562256      201.937744       8.0          -800.821533                 0.0             False
4    -298.883789    -500.821533  1525.887207  -298.883789    2.000000  -500.821533        0.0  201.937744      101.937744       7.0          -800.821533                 0.0             False
5    -298.883789    -300.821533  1525.887207  -298.883789    2.000000  -300.821533        0.0    1.937744        1.937744       8.0          -800.821533                 0.0             False
6    -298.821533    -298.883789  1525.887207  -298.821533    2.000000  -298.883789        0.0    0.062256      -98.000000       9.0          -800.821533                 0.0             False
7     199.240723    -200.821533  1525.887207   199.240723  498.124512  -200.821533        0.0  400.062256      300.062256       1.0          -800.821533                 1.0              True
8     199.240723    -100.821533  1525.887207   199.240723  250.062256  -100.821533        0.0  300.062256      200.062256       2.0           199.240723                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:31]  --------------------------------------------------------------------------------
[09/28 12:13:31]  Iteration: 6 (0 solution, 5 counterexamples)
[09/28 12:13:31]  Generator returned sat in 0.133154 secs.
[09/28 12:13:31]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:31]  Improved gap from 0.01 to 100
[09/28 12:13:32]  Improved number of small numbers from 75 to 90 out of a max of 111
[09/28 12:13:32]  Verifer returned sat in 1.023611 secs.
[09/28 12:13:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0      99.178467    -300.814209  1525.886963    99.178467    0.002686  -300.814209        0.0  399.992676        399.9925       7.0          -300.814209                -1.0                -1
1      99.178467    -300.813965  1525.886963    99.178467    0.002686  -300.813965        0.0  399.992432        299.9925       8.0          -300.814209                 1.0             False
2      99.178467    -200.814033  1525.886963    99.178467    0.002686  -200.814033        0.0  299.992500        199.9925       5.0          -300.814209                 1.0              True
3      99.178467    -100.814033  1525.886963    99.178467    0.010000  -100.814033        0.0  199.992500         99.9925       4.0          -300.814209                 1.0              True
4      99.178467      99.175967  1525.886963    99.178467    0.010000    99.175967        0.0    0.002500         -0.0075       5.0          -300.814209                 1.0              True
5      99.185967      99.185967  1525.886963    99.185967    0.010000    99.185967        0.0    0.000000       -100.0000       1.0          -300.814209                 1.0              True
6     250.195967     216.185967  1525.886963   250.195967  151.010000   216.185967        0.0   34.010000        -48.9900       1.0          -300.814209                 0.0             False
7     526.695967     399.185967  1525.886963   526.695967  310.510000   399.185967        0.0  127.510000        127.5100       1.0          -300.814209                 0.0             False
8     860.700967     460.698486  1525.886963   860.700967  461.515000   460.698486        0.0  400.002480        361.5150       2.0          -300.814209                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:32]  --------------------------------------------------------------------------------
[09/28 12:13:32]  Iteration: 7 (0 solution, 6 counterexamples)
[09/28 12:13:33]  Generator returned sat in 0.087691 secs.
[09/28 12:13:33]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:36]  Improved gap from 0.0 to 0
[09/28 12:13:37]  Improved number of small numbers from 59 to 61 out of a max of 111
[09/28 12:13:37]  Verifer returned sat in 4.243938 secs.
[09/28 12:13:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -246.834033    -248.834033  1471.906982  -246.834033    0.002686  -248.834033        0.0    2.0000        0.000020       7.0          -248.834033                -1.0                -1
1    -246.834033    -246.834033  1571.906963  -246.834033    0.002686  -246.834033        0.0    0.0000        0.000000       2.0          -248.834033                 1.0             False
2    -126.831533    -246.834033  1571.906963  -126.831533  120.002500  -246.834033        0.0  120.0025       20.002500       2.0          -248.834033                 1.0              True
3    -126.829033    -126.829033  1651.901963  -126.829033  120.005000  -126.829033        0.0    0.0000        0.000000       1.0          -248.834033                 1.0             False
4      -4.824033    -126.829033  1651.901963    -4.824033  122.005000  -126.829033        0.0  122.0050       22.005000       1.0          -248.834033                 0.0             False
5      -4.824033      -4.824033  1729.896729    -4.824033  122.005000    -4.824033        0.0    0.0000       -0.000234       2.0          -248.834033                 0.0             False
6      -4.814033      -4.814033  1829.886963    -4.814033    0.010000    -4.814033        0.0    0.0000        0.000000       1.0            -4.814033                 1.0              True
7      57.198467      -0.156533  1829.886963    57.198467   62.012500    -0.156533        0.0   57.3550      -37.987500       1.0            -4.814033                 0.0             False
8      95.185967      95.185967  1829.886963    95.185967   95.342500    95.185967        0.0    0.0000     -100.000000       1.0            -4.814033                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:37]  --------------------------------------------------------------------------------
[09/28 12:13:37]  Iteration: 8 (0 solution, 7 counterexamples)
[09/28 12:13:38]  Generator returned sat in 0.020714 secs.
[09/28 12:13:38]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:41]  Improved gap from 0.0 to 0
[09/28 12:13:43]  Improved number of small numbers from 48 to 58 out of a max of 111
[09/28 12:13:43]  Verifer returned sat in 4.932904 secs.
[09/28 12:13:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -343.524658    -486.962297  1660.824829  -343.524658  243.562012  -486.962297        0.0  143.437639       99.937639       6.0          -486.962297                -1.0                -1
1    -243.462297    -343.462297  1660.824829  -243.462297  243.500000  -343.462297        0.0  100.000000      100.000000       1.0          -243.462297                 1.0             False
2    -243.462297    -259.900164  1660.824829  -243.462297   16.375732  -259.900164        0.0   16.437866        0.000000       2.0          -243.462297                 0.0             False
3    -243.462297    -243.462297  1760.824707  -243.462297   16.375732  -243.462297        0.0    0.000000       -0.000122       3.0          -243.462297                 1.0             False
4    -112.524431    -243.400164  1760.824707  -112.524431  130.937866  -243.400164        0.0  130.875732       30.937744       1.0          -243.462297                 1.0             False
5    -112.524431    -112.524431  1829.886963  -112.524431  116.500000  -112.524431        0.0    0.000000        0.000000       2.0          -112.524431                 0.0             False
6      20.413435    -112.524431  1829.886963    20.413435  132.937866  -112.524431        0.0  132.937866       32.937866       2.0          -112.524431                 1.0             False
7      20.413435      20.413435  1896.948975    20.413435  132.937866    20.413435        0.0    0.000000       -0.000122       2.0          -112.524431                 1.0             False
8      85.882368      20.475586  1896.948975    85.882368   65.468933    20.475586        0.0   65.406782      -34.531189       1.0            85.882368                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:43]  --------------------------------------------------------------------------------
[09/28 12:13:43]  Iteration: 9 (0 solution, 8 counterexamples)
[09/28 12:13:43]  Generator returned sat in 0.174874 secs.
[09/28 12:13:44]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:44]  Improved gap from 0.0 to 100
[09/28 12:13:44]  Improved number of small numbers from 44 to 111 out of a max of 111
[09/28 12:13:44]  Verifer returned sat in 0.440188 secs.
[09/28 12:13:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -193.441406    -493.596680  1710.958984  -193.441406    0.031250  -493.596680        0.0  300.155273      300.155273       6.0           -493.59668                -1.0                -1
1    -193.441406    -393.627930  1710.958984  -193.441406    0.031250  -393.627930        0.0  200.186523      200.155273       3.0           -493.59668                 1.0             False
2    -193.441406    -393.596680  1710.958984  -193.441406  200.124023  -393.596680        0.0  200.155273      100.155273       4.0           -493.59668                 0.0             False
3    -193.441406    -292.472412  1710.958984  -193.441406  200.124023  -292.472412        0.0   99.031006        0.155273       5.0           -493.59668                 0.0             False
4    -193.410400    -193.410400  1710.958984  -193.410400   99.062012  -193.410400        0.0    0.000000      -99.813721       1.0           -193.41040                 1.0              True
5       7.807129       6.403320  1710.958984     7.807129  201.217529     6.403320        0.0    1.403809        1.403809       1.0           -193.41040                 0.0             False
6     407.403320       7.372070  1710.958984   407.403320  401.000000     7.372070        0.0  400.031250      301.000000       2.0           -193.41040                 0.0             False
7     407.403320     106.403320  1710.958984   407.403320  300.844482   106.403320        0.0  301.000000      201.000000       2.0            407.40332                 0.0             False
8     407.403320     306.403320  1710.958984   407.403320  300.813721   306.403320        0.0  101.000000      101.000000       3.0            407.40332                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:44]  --------------------------------------------------------------------------------
[09/28 12:13:44]  Iteration: 10 (0 solution, 9 counterexamples)
[09/28 12:13:45]  Generator returned sat in 0.229302 secs.
[09/28 12:13:45]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:46]  Improved gap from 0.0 to 0
[09/28 12:13:46]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:13:46]  Verifer returned sat in 0.990611 secs.
[09/28 12:13:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     498.743164     198.743164  1513.958984   498.743164    0.062012   198.743164        0.0  300.000000      300.000000       4.0           198.743164                -1.0                -1
1     498.743164     298.743164  1513.958984   498.743164    0.062012   298.743164        0.0  200.000000      200.000000       4.0           198.743164                 0.0             False
2     498.743164     298.743164  1513.958984   498.743164    0.062012   298.743164        0.0  200.000000      100.000000       4.0           198.743164                 0.0             False
3     537.805176     437.805176  1513.958984   537.805176  239.062012   437.805176        0.0  100.000000       39.062012       5.0           198.743164                 0.0             False
4     676.867188     498.743164  1513.958984   676.867188  239.062012   498.743164        0.0  178.124023       78.124023       6.0           198.743164                 1.0              True
5     698.743164     698.743164  1513.958984   698.743164  200.000000   698.743164        0.0    0.000000        0.000000       1.0           698.743164                 1.0              True
6     699.743164     699.743164  1611.958984   699.743164    1.000000   699.743164        0.0    0.000000       -1.000000       1.0           699.743164                 0.0             False
7     700.743164     700.743164  1710.958984   700.743164    1.000000   700.743164        0.0    0.000000       -1.000000       1.0           699.743164                 0.0             False
8     701.743164     701.743164  1710.958984   701.743164    1.000000   701.743164        0.0    0.000000     -100.000000       1.0           699.743164                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:46]  --------------------------------------------------------------------------------
[09/28 12:13:46]  Iteration: 11 (0 solution, 10 counterexamples)
[09/28 12:13:47]  Generator returned sat in 0.046480 secs.
[09/28 12:13:47]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:48]  Improved gap from 1.0 to 0
[09/28 12:13:48]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:13:48]  Verifer returned sat in 0.958256 secs.
[09/28 12:13:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1697.930664    1396.899658  315.802490  1697.930664    0.031006  1396.899658        0.0  301.031006      301.031006       2.0          1396.899658                -1.0                -1
1    1697.930664    1434.992676  315.802490  1697.930664    0.031006  1434.992676        0.0  262.937988      201.031006       2.0          1396.899658                 0.0             False
2    1697.930664    1496.899658  315.802490  1697.930664    0.031006  1496.899658        0.0  201.031006      101.031006       3.0          1396.899658                 0.0             False
3    1697.930664    1696.899658  315.802490  1697.930664    0.031006  1696.899658        0.0    1.031006        1.031006       4.0          1396.899658                 0.0             False
4    1697.930664    1697.930664  352.833496  1697.930664    1.000000  1697.930664        0.0    0.000000      -61.937988       5.0          1396.899658                 0.0             False
5    1959.868652    1759.868652  352.833496  1959.868652  261.937988  1759.868652        0.0  200.000000      100.000000       1.0          1396.899658                 1.0              True
6    1959.868652    1859.868652  352.833496  1959.868652    1.000000  1859.868652        0.0  100.000000        0.000000       2.0          1959.868652                 0.0             False
7    1959.868652    1959.868652  452.833496  1959.868652    1.000000  1959.868652        0.0    0.000000        0.000000       3.0          1959.868652                 0.0             False
8    1960.868652    1960.868652  452.833496  1960.868652    1.000000  1960.868652        0.0    0.000000      -99.000000       1.0          1959.868652                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:48]  --------------------------------------------------------------------------------
[09/28 12:13:48]  Iteration: 12 (0 solution, 11 counterexamples)
[09/28 12:13:49]  Generator returned sat in 0.484834 secs.
[09/28 12:13:49]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:13:50]  Improved number of small numbers from 72 to 96 out of a max of 110
[09/28 12:13:50]  Verifer returned sat in 0.590500 secs.
[09/28 12:13:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1596.899170    1396.899414  352.833252  1596.899170  200.000000  1396.899414        0.0  199.999756       99.999756       9.0          1396.899414                -1.0                -1
1    1596.899170    1596.899170  352.833252  1596.899170  199.968994  1596.899170        0.0    0.000000       -0.000244       2.0          1596.899170                 1.0             False
2    2196.961182    1696.899170  352.833252  2196.961182  600.062012  1696.899170        0.0  500.062012      500.061768       1.0          1596.899170                 0.0             False
3    2196.961182    1796.899414  352.833252  2196.961182   12.501934  1796.899414        0.0  400.061768      400.061768       2.0          2196.961182                 0.0             False
4    2196.961182    1796.930176  352.833252  2196.961182   25.003868  1796.930176        0.0  400.031006      300.061768       3.0          2196.961182                 0.0             False
5    2196.961182    1896.899414  352.833252  2196.961182   50.007736  1896.899414        0.0  300.061768      200.061768       4.0          2196.961182                 0.0             False
6    2196.961182    1996.899414  352.833252  2196.961182  100.015472  1996.899414        0.0  200.061768      100.061768       5.0          2196.961182                 0.0             False
7    2196.961182    2196.899414  352.833252  2196.961182  200.030945  2196.899414        0.0    0.061768        0.061768       6.0          2196.961182                 1.0             False
8    2596.961304    2196.899414  352.833252  2596.961304  400.061890  2196.899414        0.0  400.061890      300.061890       6.0          2196.961182                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:50]  --------------------------------------------------------------------------------
[09/28 12:13:50]  Iteration: 13 (0 solution, 12 counterexamples)
[09/28 12:13:51]  Generator returned sat in 0.121422 secs.
[09/28 12:13:51]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:55]  Improved gap from 0.0 to 0
[09/28 12:13:56]  Improved number of small numbers from 80 to 84 out of a max of 111
[09/28 12:13:56]  Verifer returned sat in 5.323814 secs.
[09/28 12:13:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    2042.360352    1741.358477  352.833252  2042.360352    0.001221  1741.358477        0.0  301.001875      301.001875       4.0          1741.358477                -1.0                -1
1    2042.360352    1841.358398  352.833252  2042.360352    0.001221  1841.358398        0.0  201.001953      201.001875       2.0          1741.358477                 0.0             False
2    2042.360352    1941.357227  352.833252  2042.360352    0.001465  1941.357227        0.0  101.003125      101.001875       3.0          1741.358477                 0.0             False
3    2042.360352    1941.358477  352.833252  2042.360352    0.001465  1941.358477        0.0  101.001875        1.001875       4.0          1741.358477                 0.0             False
4    2042.360352    2042.360352  451.821533  2042.360352  101.000732  2042.360352        0.0    0.000000       -0.009844       5.0          1741.358477                 0.0             False
5    2042.370352    2042.370352  500.309814  2042.370352    0.010000  2042.370352        0.0    0.000000      -51.511562       1.0          2042.370352                 1.0              True
6    2093.881914    2093.881914  600.309570  2093.881914   51.511562  2093.881914        0.0    0.000000       -0.000244       1.0          2042.370352                 0.0             False
7    2196.899414    2093.883164  600.309570  2196.899414  103.017500  2093.883164        0.0  103.016250        3.017256       1.0          2042.370352                 0.0             False
8    2196.899414    2196.899414  697.282471  2196.899414   78.270156  2196.899414        0.0    0.000000       -0.009844       2.0          2196.899414                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:57]  --------------------------------------------------------------------------------
[09/28 12:13:57]  Iteration: 14 (0 solution, 13 counterexamples)
[09/28 12:13:57]  Generator returned sat in 0.175561 secs.
[09/28 12:13:57]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:58]  Improved number of small numbers from 90 to 106 out of a max of 110
[09/28 12:13:58]  Verifer returned sat in 0.494488 secs.
[09/28 12:13:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     845.545410     145.668945  1948.522705   845.545410   100.734375   145.668945        0.0   699.876465      699.876465       4.0           145.668945                -1.0                -1
1     845.545410     145.730957  1948.522705   845.545410   100.734375   145.730957        0.0   699.814453      599.876465       2.0           145.668945                 1.0             False
2     845.545410     245.669189  1948.522705   845.545410   100.734375   245.669189        0.0   599.876221      499.876465       3.0           145.668945                 0.0             False
3     845.545410     445.607422  1948.522705   845.545410   100.734558   445.607422        0.0   399.937988      399.876465       4.0           145.668945                 1.0              True
4     845.545410     445.668945  1948.522705   845.545410   200.469116   445.668945        0.0   399.876465      299.876465       5.0           145.668945                 1.0              True
5     845.607178     545.669189  1948.522705   845.607178   399.938232   545.669189        0.0   299.937988      199.938232       6.0           145.668945                 1.0              True
6    1344.545654     645.669189  1948.522705  1344.545654   798.876465   645.669189        0.0   698.876465      598.876709       7.0           145.668945                 1.0              True
7    2242.422119     845.668945  1948.522705  2242.422119  1596.752930   845.668945        0.0  1396.753174     1396.753174       2.0           145.668945                 1.0              True
8    2242.422119     945.668945  1948.522705  2242.422119   201.000000   945.668945        0.0  1296.753174     1296.753174       3.0          2242.422119                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:58]  --------------------------------------------------------------------------------
[09/28 12:13:58]  Iteration: 15 (0 solution, 14 counterexamples)
[09/28 12:13:59]  Generator returned sat in 0.069190 secs.
[09/28 12:13:59]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:13:59]  Improved gap from 1.0 to 100
[09/28 12:13:59]  Improved number of small numbers from 91 to 111 out of a max of 111
[09/28 12:13:59]  Verifer returned sat in 0.302844 secs.
[09/28 12:13:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     609.730713    -490.330811  1948.522217   609.730713     0.061523  -490.330811        0.0  1100.061523     1100.061523       9.0          -490.330811                -1.0                -1
1     609.730713    -390.331055  1948.522217   609.730713    38.437500  -390.331055        0.0  1000.061768     1000.061523       2.0          -490.330811                 1.0             False
2     609.730713    -290.330811  1948.522217   609.730713    38.437500  -290.330811        0.0   900.061523      900.061523       3.0          -490.330811                 0.0             False
3     609.730713    -290.269287  1948.522217   609.730713    38.437500  -290.269287        0.0   900.000000      800.061523       4.0          -490.330811                 1.0              True
4     609.730713    -190.330811  1948.522217   609.730713    75.875000  -190.330811        0.0   800.061523      700.061523       5.0          -490.330811                 1.0              True
5     609.730713     -90.330811  1948.522217   609.730713   150.750000   -90.330811        0.0   700.061523      600.061523       6.0          -490.330811                 1.0              True
6     609.730713       9.669189  1948.522217   609.730713   300.500000     9.669189        0.0   600.061523      500.061523       7.0          -490.330811                 1.0              True
7     609.730713     209.669189  1948.522217   609.730713   600.000000   209.669189        0.0   400.061523      400.061523       8.0          -490.330811                 1.0              True
8    1408.669189     209.669189  1948.522217  1408.669189  1199.000000   209.669189        0.0  1199.000000     1099.000000       8.0          -490.330811                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:13:59]  --------------------------------------------------------------------------------
[09/28 12:13:59]  Iteration: 16 (0 solution, 15 counterexamples)
[09/28 12:14:00]  Generator returned sat in 0.219992 secs.
[09/28 12:14:00]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:00]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:14:00]  Verifer returned sat in 0.132697 secs.
[09/28 12:14:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     609.730713    -490.330811  1948.522217   609.730713    0.061523  -490.330811        0.0  1100.061523     1100.061523       9.0          -490.330811                -1.0                -1
1     609.730713    -390.331055  1948.522217   609.730713   38.437500  -390.331055        0.0  1000.061768     1000.061523       2.0          -490.330811                 1.0             False
2     609.730713    -290.330811  1948.522217   609.730713   38.437500  -290.330811        0.0   900.061523      900.061523       3.0          -490.330811                 0.0             False
3     609.730713    -290.269287  1948.522217   609.730713  118.518519  -290.269287        0.0   900.000000      800.061523       4.0          -490.330811                 1.0              True
4     609.730713    -190.330811  1948.522217   609.730713  177.777778  -190.330811        0.0   800.061523      700.061523       5.0          -490.330811                 1.0              True
5     609.730713     -90.330811  1948.522217   609.730713  266.666667   -90.330811        0.0   700.061523      600.061523       6.0          -490.330811                 1.0              True
6     609.730713       9.669189  1948.522217   609.730713  400.000000     9.669189        0.0   600.061523      500.061523       7.0          -490.330811                 1.0              True
7     609.730713     209.669189  1948.522217   609.730713  600.000000   209.669189        0.0   400.061523      400.061523       8.0          -490.330811                 1.0              True
8    1109.669189     209.669189  1948.522217  1109.669189  900.000000   209.669189        0.0   900.000000      800.000000       8.0          -490.330811                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:01]  --------------------------------------------------------------------------------
[09/28 12:14:01]  Iteration: 17 (0 solution, 16 counterexamples)
[09/28 12:14:01]  Generator returned sat in 0.077612 secs.
[09/28 12:14:01]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:01]  Improved gap from 0.0 to 0
[09/28 12:14:02]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:14:02]  Verifer returned sat in 0.306523 secs.
[09/28 12:14:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     107.668945    -192.331055  1948.522217   107.668945  199.938477  -192.331055        0.0  300.000000      300.000000       9.0          -192.331055                -1.0                -1
1     107.668945     -92.331055  1948.522217   107.668945  199.938477   -92.331055        0.0  200.000000      200.000000       2.0          -192.331055                 1.0             False
2     107.668945       6.545898  1948.522217   107.668945  199.938477     6.545898        0.0  101.123047      100.000000       3.0          -192.331055                 0.0             False
3     206.545898     107.668945  1948.522217   206.545898  200.000000   107.668945        0.0   98.876953       98.876953       4.0          -192.331055                 1.0              True
4     207.668945     206.607422  1948.522217   207.668945  100.000000   206.607422        0.0    1.061523        0.000000       1.0           207.668945                 1.0              True
5     207.668945     207.668945  2047.522217   207.668945    1.000000   207.668945        0.0    0.000000       -1.000000       2.0           207.668945                 0.0             False
6     208.668945     208.668945  2146.522217   208.668945    1.000000   208.668945        0.0    0.000000       -1.000000       1.0           207.668945                 0.0             False
7     209.668945     209.668945  2245.522217   209.668945    1.000000   209.668945        0.0    0.000000       -1.000000       1.0           207.668945                 0.0             False
8     210.668945     210.668945  2245.522217   210.668945    1.000000   210.668945        0.0    0.000000     -100.000000       1.0           207.668945                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:02]  --------------------------------------------------------------------------------
[09/28 12:14:02]  Iteration: 18 (0 solution, 17 counterexamples)
[09/28 12:14:03]  Generator returned sat in 0.072928 secs.
[09/28 12:14:03]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:03]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:14:03]  Verifer returned sat in 0.247552 secs.
[09/28 12:14:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -592.084961    -792.023438  2548.2146  -592.084961  500.000000  -792.023438        0.0  199.938477      199.938477       9.0          -792.023438                -1.0                -1
1    -292.084961    -692.023438  2548.2146  -292.084961  499.938477  -692.023438        0.0  399.938477      399.938477       2.0          -292.084961                 1.0             False
2    -192.900391    -592.084961  2548.2146  -192.900391  499.123047  -592.084961        0.0  399.184570      399.123047       3.0          -192.900391                 0.0             False
3    -192.900391    -592.023438  2548.2146  -192.900391  398.061523  -592.023438        0.0  399.123047      299.123047       3.0          -192.900391                 1.0             False
4    -192.900391    -392.023438  2548.2146  -192.900391  399.061523  -392.023438        0.0  199.123047      199.123047       4.0          -192.900391                 1.0             False
5       8.038086    -392.023438  2548.2146     8.038086  400.061523  -392.023438        0.0  400.061523      300.061523       4.0          -192.900391                 1.0             False
6       9.038086    -292.023438  2548.2146     9.038086  401.061523  -292.023438        0.0  301.061523      201.061523       5.0          -192.900391                 1.0             False
7     110.038086     -92.023438  2548.2146   110.038086  402.061523   -92.023438        0.0  202.061523      202.061523       3.0          -192.900391                 1.0             False
8     311.038086     -92.023438  2548.2146   311.038086  403.061523   -92.023438        0.0  403.061523      303.061523       3.0          -192.900391                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:03]  --------------------------------------------------------------------------------
[09/28 12:14:03]  Iteration: 19 (0 solution, 18 counterexamples)
[09/28 12:14:05]  Generator returned sat in 0.656090 secs.
[09/28 12:14:05]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:05]  Improved number of small numbers from 84 to 110 out of a max of 110
[09/28 12:14:05]  Verifer returned sat in 0.227909 secs.
[09/28 12:14:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -592.084961    -792.023438  2548.214111  -592.084961  600.000000  -792.023438        0.0  199.938477      199.907715       9.0          -792.023438                -1.0                -1
1    -192.031006    -791.000488  2548.214111  -192.031006  599.992432  -791.000488        0.0  598.969482      499.961670       2.0          -192.031006                 1.0             False
2    -191.015869    -691.992676  2548.214111  -191.015869  599.984619  -691.992676        0.0  500.976807      400.976807       3.0          -191.015869                 0.0             False
3    -191.015869    -492.023682  2548.214111  -191.015869  301.000000  -492.023682        0.0  301.007812      300.976807       3.0          -191.015869                 1.0             False
4    -191.015869    -391.992676  2548.214111  -191.015869  300.999756  -391.992676        0.0  200.976807      200.976807       4.0          -191.015869                 1.0             False
5       8.015137    -391.992676  2548.214111     8.015137  400.007812  -391.992676        0.0  400.007812      300.007812       4.0          -191.015869                 1.0             False
6       8.015137    -192.023682  2548.214111     8.015137  301.000000  -192.023682        0.0  200.038818      200.007812       5.0             8.015137                 1.0             False
7     108.976318     -91.992676  2548.214111   108.976318  301.000000   -91.992676        0.0  200.968994      200.968994       3.0             8.015137                 1.0             False
8     209.007324     -91.992676  2548.214111   209.007324  301.000000   -91.992676        0.0  301.000000      201.000000       3.0             8.015137                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:05]  --------------------------------------------------------------------------------
[09/28 12:14:05]  Iteration: 20 (0 solution, 19 counterexamples)
[09/28 12:14:06]  Generator returned sat in 0.410235 secs.
[09/28 12:14:06]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:08]  Improved gap from 0.0 to 0
[09/28 12:14:08]  Improved number of small numbers from 71 to 75 out of a max of 111
[09/28 12:14:08]  Verifer returned sat in 2.157382 secs.
[09/28 12:14:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -192.031006    -493.032881  2300.738174  -192.031006    0.001221  -493.032881        0.0  301.001875      301.001875       9.0          -493.032881                -1.0                -1
1    -192.031006    -393.032959  2300.738174  -192.031006    0.001250  -393.032959        0.0  201.001953      201.001875       6.0          -493.032881                 1.0             False
2    -192.031006    -293.032881  2300.738174  -192.031006    0.001250  -293.032881        0.0  101.001875      101.001875       6.0          -493.032881                 0.0             False
3    -192.031006    -293.032881  2300.738174  -192.031006    0.001250  -293.032881        0.0  101.001875        1.001875       6.0          -493.032881                 0.0             False
4    -192.031006    -192.031006  2399.726318  -192.031006  101.000625  -192.031006        0.0    0.000000       -0.009980       7.0          -493.032881                 0.0             False
5    -192.021006    -192.021006  2499.726074  -192.021006    0.010000  -192.021006        0.0    0.000000       -0.000225       1.0          -192.021006                 1.0              True
6    -140.510068    -140.510068  2548.214111  -140.510068   51.510937  -140.510068        0.0    0.000000       -0.001250       1.0          -192.021006                 0.0             False
7     -37.493193    -140.508818  2548.214111   -37.493193  103.016875  -140.508818        0.0  103.015625        3.015625       1.0          -192.021006                 0.0             False
8     -37.493193     -37.493193  2548.214111   -37.493193   78.269531   -37.493193        0.0    0.000000      -96.984375       2.0           -37.493193                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:09]  --------------------------------------------------------------------------------
[09/28 12:14:09]  Iteration: 21 (0 solution, 20 counterexamples)
[09/28 12:14:10]  Generator returned sat in 0.166255 secs.
[09/28 12:14:10]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:14:18]  Improved gap from 0.0 to 0
[09/28 12:14:19]  Improved number of small numbers from 56 to 70 out of a max of 111
[09/28 12:14:19]  Verifer returned sat in 8.796840 secs.
[09/28 12:14:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     855.872019     855.870850  1348.028076   855.872019     0.001   855.870850        0.0  0.00117        0.000902       3.0           855.870850                -1.0                -1
1     855.872019     855.872019  1448.027100   855.872019     0.001   855.872019        0.0  0.00000       -0.000074       3.0           855.870850                 0.0             False
2     857.864019     857.864019  1546.035156   857.864019     1.992   857.864019        0.0  0.00000       -0.000018       1.0           855.870850                 0.0             False
3     857.874019     857.874019  1646.015381   857.874019     0.010   857.874019        0.0  0.00000       -0.009793       1.0           857.874019                 0.0             False
4     857.884019     857.884019  1746.004395   857.884019     0.010   857.884019        0.0  0.00000       -0.010779       1.0           857.874019                 0.0             False
5     857.895019     857.895019  1846.004150   857.895019     0.011   857.895019        0.0  0.00000       -0.000023       1.0           857.874019                 0.0             False
6     857.905019     857.905019  1945.994141   857.905019     0.010   857.905019        0.0  0.00000       -0.000033       1.0           857.905019                 0.0             False
7     857.915019     857.915019  2045.984131   857.915019     0.010   857.915019        0.0  0.00000       -0.000043       1.0           857.905019                 0.0             False
8     857.925019     857.925019  2045.984131   857.925019     0.010   857.925019        0.0  0.00000      -99.990043       1.0           857.905019                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:19]  --------------------------------------------------------------------------------
[09/28 12:14:19]  Iteration: 22 (0 solution, 21 counterexamples)
[09/28 12:14:20]  Generator returned sat in 0.395716 secs.
[09/28 12:14:20]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:14:24]  Improved gap from 0.0 to 0
[09/28 12:14:25]  Improved number of small numbers from 55 to 62 out of a max of 111
[09/28 12:14:25]  Verifer returned sat in 4.633343 secs.
[09/28 12:14:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     807.854961     507.853086  1696.046084   807.854961    0.001221   507.853086        0.0  300.001875      300.001875       8.0           507.853086                -1.0                -1
1     807.854961     607.853027  1696.046084   807.854961    0.001221   607.853027        0.0  200.001934      200.001875       5.0           507.853086                 1.0             False
2     807.854961     707.851836  1696.046084   807.854961    0.001221   707.851836        0.0  100.003125      100.001875       5.0           507.853086                 0.0             False
3     807.854961     707.853086  1696.046084   807.854961    0.001250   707.853086        0.0  100.001875        0.001875       6.0           507.853086                 0.0             False
4     807.854961     807.854961  1796.044189   807.854961  100.000625   807.854961        0.0    0.000000       -0.000020       7.0           507.853086                 0.0             False
5     807.864961     807.864961  1896.034180   807.864961    0.010000   807.864961        0.0    0.000000       -0.000029       1.0           807.864961                 1.0              True
6     857.876523     857.876523  1946.022461   857.876523   50.011562   857.876523        0.0    0.000000       -0.000186       1.0           807.864961                 0.0             False
7     957.894023     857.877773  1946.022461   957.894023  100.017500   857.877773        0.0  100.016250        0.017314       1.0           807.864961                 0.0             False
8     957.894023     957.894023  2046.005127   957.894023   75.020156   957.894023        0.0    0.000000       -0.000020       2.0           957.894023                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:25]  --------------------------------------------------------------------------------
[09/28 12:14:25]  Iteration: 23 (0 solution, 22 counterexamples)
[09/28 12:14:26]  Generator returned sat in 0.534811 secs.
[09/28 12:14:26]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:14:27]  Improved gap from 0.0 to 100
[09/28 12:14:27]  Improved number of small numbers from 48 to 111 out of a max of 111
[09/28 12:14:27]  Verifer returned sat in 0.478323 secs.
[09/28 12:14:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1606.058105    1207.027344  1696.076904  1606.058105    0.030518  1207.027344        0.0  399.030762      399.030762       4.0          1207.027344                -1.0                -1
1    1606.058105    1272.058105  1696.076904  1606.058105    0.030518  1272.058105        0.0  334.000000      299.030762       4.0          1207.027344                 0.0             False
2    1606.058105    1406.996826  1696.076904  1606.058105    0.030518  1406.996826        0.0  199.061279      199.030762       5.0          1207.027344                 0.0             False
3    1606.058105    1407.027344  1696.076904  1606.058105    0.030518  1407.027344        0.0  199.030762       99.030762       6.0          1207.027344                 0.0             False
4    1606.058105    1606.058105  1696.076904  1606.058105  199.000000  1606.058105        0.0    0.000000       -0.969238       7.0          1207.027344                 0.0             False
5    2107.058105    1706.996826  1696.076904  2107.058105  501.000000  1706.996826        0.0  400.061279      400.030762       1.0          1207.027344                 1.0              True
6    2107.058105    1707.027344  1696.076904  2107.058105  299.000000  1707.027344        0.0  400.030762      300.030762       2.0          2107.058105                 0.0             False
7    2107.058105    1906.058105  1696.076904  2107.058105  299.000000  1906.058105        0.0  201.000000      200.030762       3.0          2107.058105                 0.0             False
8    2205.058105    2007.027344  1696.076904  2205.058105  299.000000  2007.027344        0.0  198.030762      198.030762       4.0          2107.058105                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:27]  --------------------------------------------------------------------------------
[09/28 12:14:27]  Iteration: 24 (0 solution, 23 counterexamples)
[09/28 12:14:28]  Generator returned sat in 0.119224 secs.
[09/28 12:14:28]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:14:29]  Improved number of small numbers from 76 to 110 out of a max of 110
[09/28 12:14:29]  Verifer returned sat in 0.478072 secs.
[09/28 12:14:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1206.088867     806.057861  1696.076904  1206.088867    0.030518   806.057861        0.0  400.031006      400.030762       9.0           806.057861                -1.0                -1
1    1206.088867     806.058105  1696.076904  1206.088867    0.030762   806.058105        0.0  400.030762      300.030762       9.0           806.057861                 1.0             False
2    1206.088867     906.058105  1696.076904  1206.088867    0.030762   906.058105        0.0  300.030762      200.030762       5.0           806.057861                 1.0              True
3    1206.088867    1106.042725  1696.076904  1206.088867    0.030762  1106.042725        0.0  100.046143      100.030762       6.0           806.057861                 0.0             False
4    1405.027588    1206.058105  1696.076904  1405.027588  298.984863  1206.058105        0.0  198.969482      198.969482       7.0           806.057861                 0.0             False
5    1805.058105    1206.088867  1696.076904  1805.058105  599.000000  1206.088867        0.0  598.969238      499.000000       8.0           806.057861                 1.0              True
6    1805.058105    1406.057861  1696.076904  1805.058105  449.046143  1406.057861        0.0  399.000244      399.000000       2.0          1805.058105                 1.0              True
7    1805.058105    1506.042969  1696.076904  1805.058105  299.015137  1506.042969        0.0  299.015137      299.000000       3.0          1805.058105                 0.0             False
8    1805.058105    1506.073242  1696.076904  1805.058105  298.984863  1506.073242        0.0  298.984863      199.000000       4.0          1805.058105                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:29]  --------------------------------------------------------------------------------
[09/28 12:14:29]  Iteration: 25 (0 solution, 24 counterexamples)
[09/28 12:14:30]  Generator returned sat in 0.460120 secs.
[09/28 12:14:30]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:30]  Improved gap from 0.0 to 100
[09/28 12:14:31]  Improved number of small numbers from 81 to 89 out of a max of 111
[09/28 12:14:31]  Verifer returned sat in 0.579895 secs.
[09/28 12:14:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1506.088867     806.088623  1696.07666  1506.088867     0.030762   806.088623        0.0   700.000244      700.000000       9.0           806.088623                -1.0                -1
1    1506.088867     906.058105  1696.07666  1506.088867     0.030762   906.058105        0.0   600.030762      600.000000       5.0           806.088623                 1.0             False
2    1506.088867     906.088867  1696.07666  1506.088867     0.030762   906.088867        0.0   600.000000      500.000000       5.0           806.088623                 0.0             False
3    1506.088867    1106.088867  1696.07666  1506.088867   266.707438  1106.088867        0.0   400.000000      400.000000       6.0           806.088623                 0.0             False
4    1506.150024    1106.119446  1696.07666  1506.150024   400.061157  1106.119446        0.0   400.030579      300.061157       7.0           806.088623                 1.0              True
5    1706.211182    1206.088867  1696.07666  1706.211182   600.091736  1206.088867        0.0   500.122314      400.122314       7.0           806.088623                 1.0              True
6    2106.226471    1306.088867  1696.07666  2106.226471   900.137604  1306.088867        0.0   800.137604      700.137604       7.0           806.088623                 1.0              True
7    2656.295273    1506.088867  1696.07666  2656.295273  1350.206406  1506.088867        0.0  1150.206406     1150.206406       8.0           806.088623                 1.0              True
8    3531.398476    1506.088867  1696.07666  3531.398476  2025.309608  1506.088867        0.0  2025.309608     1925.309608       8.0           806.088623                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:31]  --------------------------------------------------------------------------------
[09/28 12:14:31]  Iteration: 26 (0 solution, 25 counterexamples)
[09/28 12:14:34]  Generator returned sat in 1.482446 secs.
[09/28 12:14:34]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:34]  Improved number of small numbers from 108 to 110 out of a max of 110
[09/28 12:14:34]  Verifer returned sat in 0.246916 secs.
[09/28 12:14:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1506.088867     806.088623  1696.076416   1506.088867     0.030518   806.088623        0.0   700.000244      700.000000       7.0           806.088623                -1.0                -1
1    1506.088867     906.088867  1696.076416   1506.088867     0.030518   906.088867        0.0   600.000000      600.000000       8.0           806.088623                 0.0             False
2    1506.088867    1006.088867  1696.076416   1506.088867     0.030762  1006.088867        0.0   500.000000      500.000000       9.0           806.088623                 0.0             False
3    1506.088867    1106.088623  1696.076416   1506.088867    49.530518  1106.088623        0.0   400.000244      400.000000       9.0           806.088623                 1.0              True
4    1506.149658    1106.119385  1696.076416   1506.149658   400.061035  1106.119385        0.0   400.030273      300.060791       9.0           806.088623                 1.0              True
5    2107.271973    1206.088867  1696.076416   2107.271973  1001.152588  1206.088867        0.0   901.183105      801.183105       9.0           806.088623                 1.0              True
6    3409.394043    1316.088623  1696.076416   3409.394043  2203.305176  1316.088623        0.0  2093.305420     2003.305176       9.0           806.088623                 1.0              True
7    5933.698975    1506.088867  1696.076416   5933.698975  4617.610352  1506.088867        0.0  4427.610107     4427.610107       9.0           806.088623                 1.0              True
8   11142.279053    1506.088867  1696.076416  11142.279053  9636.190186  1506.088867        0.0  9636.190186     9536.190186       9.0           806.088623                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:34]  --------------------------------------------------------------------------------
[09/28 12:14:34]  Iteration: 27 (0 solution, 26 counterexamples)
[09/28 12:14:36]  Generator returned sat in 0.968534 secs.
[09/28 12:14:36]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:37]  Improved gap from 1.0 to 26.5625
[09/28 12:14:38]  Improved number of small numbers from 63 to 111 out of a max of 111
[09/28 12:14:38]  Verifer returned sat in 1.463802 secs.
[09/28 12:14:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1014.463623     960.912598  1626.395996  1014.463623  103.757080   960.912598        0.0   53.551025       53.550781       2.0           960.912598                -1.0                -1
1    1064.669922    1014.524658  1626.395996  1064.669922  103.757324  1014.524658        0.0   50.145264        3.757080       1.0           960.912598                 1.0             False
2    1064.669922    1064.669922  1696.076416  1064.669922   50.084473  1064.669922        0.0    0.000000      -26.562500       2.0          1064.669922                 0.0             False
3    1291.232422    1180.418457  1696.076416  1291.232422  226.562500  1180.418457        0.0  110.813965      100.000000       1.0          1064.669922                 1.0             False
4    1291.232422    1198.289307  1696.076416  1291.232422  110.752930  1198.289307        0.0   92.943115        0.000000       2.0          1291.232422                 0.0             False
5    1291.232422    1291.232422  1769.513672  1291.232422   92.882324  1291.232422        0.0    0.000000      -26.562744       3.0          1291.232422                 1.0             False
6    1405.513672    1338.002930  1769.513672  1405.513672  114.281250  1338.002930        0.0   67.510742      -12.281494       1.0          1291.232422                 1.0             False
7    1417.795166    1417.795166  1842.951172  1417.795166   79.792236  1417.795166        0.0    0.000000      -26.562500       1.0          1417.795166                 0.0             False
8    1528.548096    1444.357666  1842.951172  1528.548096  110.752930  1444.357666        0.0   84.190430      -15.809570       1.0          1417.795166                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:38]  --------------------------------------------------------------------------------
[09/28 12:14:38]  Iteration: 28 (0 solution, 27 counterexamples)
[09/28 12:14:39]  Generator returned sat in 0.446456 secs.
[09/28 12:14:39]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:40]  Improved number of small numbers from 108 to 110 out of a max of 110
[09/28 12:14:40]  Verifer returned sat in 0.230272 secs.
[09/28 12:14:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1405.513672    1005.513428  1696.076416  1405.513672    0.999756  1005.513428        0.0  400.000244      400.000244       5.0          1005.513428                -1.0                -1
1    1405.513672    1072.038086  1696.076416  1405.513672    1.000000  1072.038086        0.0  333.475586      300.000244       5.0          1005.513428                 0.0             False
2    1405.513672    1105.513428  1696.076416  1405.513672    1.000000  1105.513428        0.0  300.000244      200.000244       6.0          1005.513428                 0.0             False
3    1405.513672    1205.513672  1696.076416  1405.513672    1.000000  1205.513672        0.0  200.000000      100.000244       7.0          1005.513428                 0.0             False
4    1405.513672    1405.452637  1696.076416  1405.513672    1.000000  1405.452637        0.0    0.061035        0.000244       8.0          1005.513428                 0.0             False
5    1905.574463    1405.513428  1696.076416  1905.574463  500.121826  1405.513428        0.0  500.061035      400.061035       9.0          1005.513428                 1.0              True
6    1905.574463    1505.513672  1696.076416  1905.574463  450.000000  1505.513672        0.0  400.060791      300.061035       2.0          1905.574463                 1.0              True
7    1905.574463    1605.513672  1696.076416  1905.574463    1.000000  1605.513672        0.0  300.060791      200.061035       3.0          1905.574463                 0.0             False
8    1905.574463    1705.513672  1696.076416  1905.574463    1.000000  1705.513672        0.0  200.060791      100.061035       4.0          1905.574463                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:40]  --------------------------------------------------------------------------------
[09/28 12:14:40]  Iteration: 29 (0 solution, 28 counterexamples)
[09/28 12:14:42]  Generator returned sat in 0.683403 secs.
[09/28 12:14:42]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:42]  Improved number of small numbers from 107 to 107 out of a max of 110
[09/28 12:14:42]  Verifer returned sat in 0.482681 secs.
[09/28 12:14:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1205.513672     872.180339  1696.076416  1205.513672    0.061035   872.180339        0.0  333.333333      266.666667       5.0           872.180339                -1.0                -1
1    1372.180339     938.847005  1696.076416  1372.180339  500.000000   938.847005        0.0  433.333333      333.333333       5.0           872.180339                 1.0             False
2    1438.847005    1038.847005  1696.076416  1438.847005  500.000000  1038.847005        0.0  400.000000      300.000000       3.0           872.180339                 1.0              True
3    1538.847005    1205.513672  1696.076416  1538.847005  500.000000  1205.513672        0.0  333.333333      300.000000       4.0           872.180339                 0.0             False
4    1705.513672    1272.180339  1696.076416  1705.513672  500.000000  1272.180339        0.0  433.333333      366.666667       4.0           872.180339                 1.0              True
5    1772.180339    1372.180339  1696.076416  1772.180339  500.000000  1372.180339        0.0  400.000000      333.333333       5.0           872.180339                 1.0              True
6    1872.180339    1538.847005  1696.076416  1872.180339  500.000000  1538.847005        0.0  333.333333      333.333333       4.0           872.180339                 1.0              True
7    2038.847005    1618.871419  1696.076416  2038.847005  500.000000  1618.871419        0.0  419.975586      400.000000       4.0           872.180339                 1.0              True
8    2138.908040    1705.574707  1696.076416  2138.908040  520.036621  1705.574707        0.0  433.333333      400.061035       4.0           872.180339                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:43]  --------------------------------------------------------------------------------
[09/28 12:14:43]  Iteration: 30 (0 solution, 29 counterexamples)
[09/28 12:14:44]  Generator returned sat in 0.277250 secs.
[09/28 12:14:44]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:44]  Improved gap from 0.0 to 100
[09/28 12:14:45]  Improved number of small numbers from 61 to 107 out of a max of 111
[09/28 12:14:45]  Verifer returned sat in 1.087332 secs.
[09/28 12:14:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1484.375732     884.375732  1696.076416  1484.375732    0.061035   884.375732        0.0  600.000000      599.939209       9.0           884.375732                -1.0                -1
1    1484.375732     884.436523  1696.076416  1484.375732    0.061035   884.436523        0.0  599.939209      499.939209       4.0           884.375732                 1.0             False
2    1484.375732    1084.436523  1696.076416  1484.375732    2.000000  1084.436523        0.0  399.939209      399.939209       4.0           884.375732                 0.0             False
3    1484.375732    1184.436523  1696.076416  1484.375732    2.000000  1184.436523        0.0  299.939209      299.939209       5.0           884.375732                 0.0             False
4    1484.375732    1284.436523  1696.076416  1484.375732    2.000000  1284.436523        0.0  199.939209      199.939209       6.0           884.375732                 0.0             False
5    1884.436523    1284.497559  1696.076416  1884.436523  600.000000  1284.497559        0.0  599.938965      500.000000       7.0           884.375732                 1.0              True
6    1884.436523    1484.436523  1696.076416  1884.436523  300.091553  1484.436523        0.0  400.000000      400.000000       2.0          1884.436523                 1.0              True
7    1884.436523    1584.436523  1696.076416  1884.436523  151.045776  1584.436523        0.0  300.000000      300.000000       3.0          1884.436523                 0.0             False
8    1884.436523    1684.436523  1696.076416  1884.436523   76.522888  1684.436523        0.0  200.000000      200.000000       4.0          1884.436523                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:45]  --------------------------------------------------------------------------------
[09/28 12:14:45]  Iteration: 31 (0 solution, 30 counterexamples)
[09/28 12:14:48]  Generator returned sat in 1.505677 secs.
[09/28 12:14:48]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:49]  Improved gap from 0.0 to 21.875
[09/28 12:14:49]  Improved number of small numbers from 61 to 111 out of a max of 111
[09/28 12:14:49]  Verifer returned sat in 1.087561 secs.
[09/28 12:14:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1445.497559     925.375488  1696.076416  1445.497559    0.061035   925.375488        0.0  520.122070         500.000       8.0           925.375488                -1.0                -1
1    1445.497559     964.436523  1696.076416  1445.497559  161.061035   964.436523        0.0  481.061035         400.000       8.0           925.375488                 0.0             False
2    1445.497559    1145.497314  1696.076416  1445.497559  161.061035  1145.497314        0.0  300.000244         300.000       8.0           925.375488                 0.0             False
3    1445.497559    1245.497559  1696.076416  1445.497559  161.061035  1245.497559        0.0  200.000000         200.000       9.0           925.375488                 0.0             False
4    1445.497559    1284.436523  1696.076416  1445.497559  161.061035  1284.436523        0.0  161.061035         100.000       9.0           925.375488                 1.0              True
5    1445.497559    1363.936279  1696.076416  1445.497559  161.000000  1363.936279        0.0   81.561279           0.000       6.0          1445.497559                 1.0              True
6    1445.497559    1445.497559  1754.326416  1445.497559   81.500000  1445.497559        0.0    0.000000         -41.750       7.0          1445.497559                 0.0             False
7    1487.247559    1487.247559  1832.451416  1487.247559   41.750000  1487.247559        0.0    0.000000         -21.875       1.0          1487.247559                 0.0             False
8    1509.122559    1509.122559  1832.451416  1509.122559   21.875000  1509.122559        0.0    0.000000        -100.000       1.0          1509.122559                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:49]  --------------------------------------------------------------------------------
[09/28 12:14:49]  Iteration: 32 (0 solution, 31 counterexamples)
[09/28 12:14:50]  Generator returned sat in 0.277626 secs.
[09/28 12:14:50]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:51]  Improved gap from 0.0 to 100
[09/28 12:14:51]  Improved number of small numbers from 55 to 81 out of a max of 111
[09/28 12:14:51]  Verifer returned sat in 0.905894 secs.
[09/28 12:14:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1267.959473     368.429031  1696.076416  1267.959473    0.030273   368.429031        0.0  899.530441      899.530441       8.0           368.429031                -1.0                -1
1    1267.959473     435.075394  1696.076416  1267.959473    0.030273   435.075394        0.0  832.884079      799.530441       9.0           368.429031                 0.0             False
2    1267.959473     502.762365  1696.076416  1267.959473    0.030518   502.762365        0.0  765.197108      699.530441       8.0           368.429031                 1.0              True
3    1267.959473     602.762365  1696.076416  1267.959473    0.030518   602.762365        0.0  665.197108      599.530441       9.0           368.429031                 0.0             False
4    1267.959473     669.408727  1696.076416  1267.959473  352.500000   669.408727        0.0  598.550746      499.530441       9.0           368.429031                 1.0              True
5    1267.959473     768.429031  1696.076416  1267.959473  352.500000   768.429031        0.0  499.530441      399.530441       9.0           368.429031                 1.0              True
6    1267.959473     868.429031  1696.076416  1267.959473  399.500000   868.429031        0.0  399.530441      299.530441       9.0           368.429031                 1.0              True
7    1267.959473    1068.429031  1696.076416  1267.959473  399.500000  1068.429031        0.0  199.530441      199.530441       9.0           368.429031                 1.0              True
8    1667.959488    1068.429199  1696.076416  1667.959488  599.530457  1068.429199        0.0  599.530289      499.530457       9.0           368.429031                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:52]  --------------------------------------------------------------------------------
[09/28 12:14:52]  Iteration: 33 (0 solution, 32 counterexamples)
[09/28 12:14:53]  Generator returned sat in 0.438358 secs.
[09/28 12:14:53]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:54]  Improved gap from 0.0 to 14.0625
[09/28 12:14:54]  Improved number of small numbers from 56 to 111 out of a max of 111
[09/28 12:14:54]  Verifer returned sat in 1.299443 secs.
[09/28 12:14:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     737.787109     249.665527  1196.096436   737.787109    0.060547   249.665527        0.0  488.121582      388.121582       9.0           249.665527                -1.0                -1
1     737.787109     349.665527  1196.096436   737.787109  388.121582   349.665527        0.0  388.121582      288.121582       2.0           249.665527                 1.0             False
2     737.787109     460.104736  1196.096436   737.787109  388.060791   460.104736        0.0  277.682373      188.121582       3.0           737.787109                 0.0             False
3     848.104736     649.665283  1196.096436   848.104736  388.000000   649.665283        0.0  198.439453      198.439209       4.0           848.104736                 0.0             False
4     848.104736     749.665527  1196.096436   848.104736  195.000000   749.665527        0.0   98.439209       98.439209       2.0           848.104736                 0.0             False
5     848.165527     799.415527  1196.096436   848.165527   98.500000   799.415527        0.0   48.750000       -1.500000       3.0           848.165527                 0.0             False
6     849.665527     849.665527  1269.971436   849.665527   50.250000   849.665527        0.0    0.000000      -26.125000       1.0           849.665527                 0.0             False
7     875.790527     875.790527  1355.908936   875.790527   26.125000   875.790527        0.0    0.000000      -14.062500       1.0           875.790527                 0.0             False
8     889.853027     889.853027  1355.908936   889.853027   14.062500   889.853027        0.0    0.000000     -100.000000       1.0           889.853027                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:55]  --------------------------------------------------------------------------------
[09/28 12:14:55]  Iteration: 34 (0 solution, 33 counterexamples)
[09/28 12:14:56]  Generator returned sat in 0.413071 secs.
[09/28 12:14:56]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:14:57]  Improved gap from 0.0 to 0
[09/28 12:14:57]  Improved number of small numbers from 55 to 111 out of a max of 111
[09/28 12:14:57]  Verifer returned sat in 0.855579 secs.
[09/28 12:14:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1383.357422     985.296631  560.465332  1383.357422  0.060547   985.296631        0.0  398.060791      398.060791       5.0           985.296631                -1.0                -1
1    1383.357422     985.296875  560.465332  1383.357422  1.999756   985.296875        0.0  398.060547      298.060791       5.0           985.296631                 0.0             False
2    1383.357422    1085.296875  560.465332  1383.357422  1.999756  1085.296875        0.0  298.060547      198.060791       6.0           985.296631                 0.0             False
3    1383.357422    1285.296631  560.465332  1383.357422  2.000000  1285.296631        0.0   98.060791       98.060791       7.0           985.296631                 0.0             False
4    1383.357422    1383.296875  560.465332  1383.357422  2.000000  1383.296875        0.0    0.060547       -1.939209       8.0           985.296631                 1.0              True
5    1385.296875    1385.296875  659.465088  1385.296875  2.000000  1385.296875        0.0    0.000000       -1.000000       1.0           985.296631                 1.0              True
6    1386.296875    1386.296875  758.465088  1386.296875  1.000000  1386.296875        0.0    0.000000       -1.000000       1.0          1386.296875                 0.0             False
7    1387.296875    1387.296875  857.465332  1387.296875  1.000000  1387.296875        0.0    0.000000       -0.999756       1.0          1386.296875                 0.0             False
8    1388.296875    1388.296875  857.465332  1388.296875  1.000000  1388.296875        0.0    0.000000      -99.999756       1.0          1386.296875                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:14:58]  --------------------------------------------------------------------------------
[09/28 12:14:58]  Iteration: 35 (0 solution, 34 counterexamples)
[09/28 12:14:59]  Generator returned sat in 0.408443 secs.
[09/28 12:14:59]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:00]  Improved gap from 0.999755859375 to 0
[09/28 12:15:00]  Improved number of small numbers from 107 to 111 out of a max of 111
[09/28 12:15:00]  Verifer returned sat in 0.843143 secs.
[09/28 12:15:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     988.296875     588.296631  560.464844   988.296875  0.060791   588.296631        0.0  400.000244      400.000000       6.0           588.296631                -1.0                -1
1     988.296875     688.296875  560.464844   988.296875  2.000000   688.296875        0.0  300.000000      300.000000       7.0           588.296631                 0.0             False
2     988.296875     788.296631  560.464844   988.296875  2.000000   788.296631        0.0  200.000244      200.000000       8.0           588.296631                 0.0             False
3     988.296875     888.236084  560.464844   988.296875  2.000000   888.236084        0.0  100.060791      100.000000       9.0           588.296631                 0.0             False
4     988.296875     888.296875  560.464844   988.296875  2.000000   888.296875        0.0  100.000000        0.000000       9.0           588.296631                 1.0              True
5     988.296875     988.296875  659.464844   988.296875  2.000000   988.296875        0.0    0.000000       -1.000000       6.0           588.296631                 1.0              True
6     989.296875     989.296875  758.464844   989.296875  1.000000   989.296875        0.0    0.000000       -1.000000       1.0           989.296875                 0.0             False
7     990.296875     990.296875  857.464844   990.296875  1.000000   990.296875        0.0    0.000000       -1.000000       1.0           989.296875                 0.0             False
8     991.296875     991.296875  857.465088   991.296875  1.000000   991.296875        0.0    0.000000      -99.999756       1.0           989.296875                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:00]  --------------------------------------------------------------------------------
[09/28 12:15:00]  Iteration: 36 (0 solution, 35 counterexamples)
[09/28 12:15:02]  Generator returned sat in 1.089233 secs.
[09/28 12:15:02]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:03]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:15:03]  Verifer returned sat in 0.603594 secs.
[09/28 12:15:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1185.145508     485.145508  858.010254  1185.145508    0.060547   485.145508        0.0  700.000000      700.000000       6.0           485.145508                -1.0                -1
1    1185.145508     585.145508  858.010254  1185.145508  395.121094   585.145508        0.0  600.000000      600.000000       6.0           485.145508                 0.0             False
2    1185.145508     685.145508  858.010254  1185.145508  395.121094   685.145508        0.0  500.000000      500.000000       7.0           485.145508                 0.0             False
3    1185.145508     785.084961  858.010254  1185.145508  395.121094   785.084961        0.0  400.060547      400.000000       8.0           485.145508                 0.0             False
4    1185.145508     785.145508  858.010254  1185.145508  396.121094   785.145508        0.0  400.000000      300.000000       9.0           485.145508                 1.0              True
5    1185.145508     885.145508  858.010254  1185.145508  397.121094   885.145508        0.0  300.000000      200.000000       9.0           485.145508                 1.0              True
6    1283.266602     985.145508  858.010254  1283.266602  398.121094   985.145508        0.0  298.121094      198.121094       9.0           485.145508                 1.0              True
7    1384.266602    1185.145508  858.010254  1384.266602  399.121094  1185.145508        0.0  199.121094      199.121094       9.0           485.145508                 1.0              True
8    1585.266602    1185.206055  858.010254  1585.266602  400.121094  1185.206055        0.0  400.060547      300.121094       3.0           485.145508                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:04]  --------------------------------------------------------------------------------
[09/28 12:15:04]  Iteration: 37 (0 solution, 36 counterexamples)
[09/28 12:15:07]  Generator returned sat in 2.786304 secs.
[09/28 12:15:07]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:08]  Improved number of small numbers from 88 to 92 out of a max of 110
[09/28 12:15:08]  Verifer returned sat in 0.489682 secs.
[09/28 12:15:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1185.145264     485.145020  858.010254  1185.145264     0.060303   485.145020        0.0   700.000244      700.000000       7.0            485.14502                -1.0                -1
1    1185.145264     585.145020  858.010254  1185.145264   178.875244   585.145020        0.0   600.000244      600.000000       7.0            485.14502                 0.0             False
2    1185.145264     685.145264  858.010254  1185.145264   178.875244   685.145264        0.0   500.000000      500.000000       8.0            485.14502                 0.0             False
3    1185.145264     785.084717  858.010254  1185.145264   178.875380   785.084717        0.0   400.060547      400.000000       9.0            485.14502                 0.0             False
4    1185.145264     785.145264  858.010254  1185.145264   267.313070   785.145264        0.0   400.000000      300.000000       9.0            485.14502                 1.0              True
5    1185.145264     885.145508  858.010254  1185.145264   399.969604   885.145508        0.0   299.999756      200.000000       9.0            485.14502                 1.0              True
6    1484.099915     985.145508  858.010254  1484.099915   598.954407   985.145508        0.0   498.954407      398.954651       9.0            485.14502                 1.0              True
7    1882.577118    1185.145264  858.010254  1882.577118   897.431610  1185.145264        0.0   697.431854      697.431854       9.0            485.14502                 1.0              True
8    2530.292679    1185.205811  858.010254  2530.292679  1345.147415  1185.205811        0.0  1345.086868     1245.147415       3.0            485.14502                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:08]  --------------------------------------------------------------------------------
[09/28 12:15:08]  Iteration: 38 (0 solution, 37 counterexamples)
[09/28 12:15:10]  Generator returned sat in 0.450179 secs.
[09/28 12:15:10]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:11]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/28 12:15:11]  Verifer returned sat in 1.407325 secs.
[09/28 12:15:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1084.125244     784.185547  458.969727  1084.125244    0.060547   784.185547        0.0  299.939697      199.939697       7.0           784.185547                -1.0                -1
1    1084.125244     884.185547  458.969727  1084.125244    0.060547   884.185547        0.0  199.939697       99.939697       7.0           784.185547                 1.0             False
2    1480.487793     984.185547  458.969727  1480.487793  596.302246   984.185547        0.0  496.302246      396.302246       8.0           784.185547                 1.0              True
3    1480.487793    1084.185791  458.969727  1480.487793  496.241455  1084.185791        0.0  396.302002      296.302246       2.0          1480.487793                 1.0              True
4    1483.306641    1283.548096  458.969727  1483.306641  399.120850  1283.548096        0.0  199.758545      199.121094       3.0          1483.306641                 0.0             False
5    1683.789795    1384.185547  458.969727  1683.789795  400.241699  1384.185547        0.0  299.604248      299.604248       4.0          1483.306641                 1.0             False
6    1785.306396    1483.306641  458.969727  1785.306396  401.120850  1483.306641        0.0  301.999756      301.120850       3.0          1483.306641                 1.0             False
7    1884.427490    1584.185547  458.969727  1884.427490  401.120850  1584.185547        0.0  300.241943      300.241943       3.0          1483.306641                 1.0             False
8    1984.306396    1584.246338  458.969727  1984.306396  400.120850  1584.246338        0.0  400.060059      300.120850       4.0          1984.306396                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:12]  --------------------------------------------------------------------------------
[09/28 12:15:12]  Iteration: 39 (0 solution, 38 counterexamples)
[09/28 12:15:13]  Generator returned sat in 0.612597 secs.
[09/28 12:15:14]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:15]  Verifer returned unsat in 1.908261 secs.
[09/28 12:15:15]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:15]  --------------------------------------------------------------------------------
[09/28 12:15:15]  Iteration: 40 (1 solution, 38 counterexamples)
[09/28 12:15:17]  Generator returned sat in 0.547192 secs.
[09/28 12:15:17]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:17]  Improved gap from 0.0 to 0
[09/28 12:15:18]  Improved number of small numbers from 103 to 111 out of a max of 111
[09/28 12:15:18]  Verifer returned sat in 0.532114 secs.
[09/28 12:15:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     984.185547     884.185303  458.969727   984.185547  500.000000   884.185303        0.0  100.000244      100.000244       6.0           884.185303                -1.0                -1
1    1384.185303     984.155518  458.969727  1384.185303  500.000000   984.155518        0.0  400.029785      400.000000       7.0           884.185303                 1.0             False
2    1384.185303     984.185303  458.969727  1384.185303    0.030029   984.185303        0.0  400.000000      300.000000       5.0          1384.185303                 1.0              True
3    1384.185303    1184.185303  458.969727  1384.185303    0.030029  1184.185303        0.0  200.000000      200.000000       3.0          1384.185303                 1.0             False
4    1384.185303    1284.185303  458.969727  1384.185303    1.000000  1284.185303        0.0  100.000000      100.000000       4.0          1384.185303                 0.0             False
5    1384.185303    1383.155518  458.969727  1384.185303    1.000000  1383.155518        0.0    1.029785        0.000000       5.0          1384.185303                 1.0             False
6    1384.185303    1384.185303  558.969727  1384.185303    1.000000  1384.185303        0.0    0.000000        0.000000       6.0          1384.185303                 1.0             False
7    1385.185303    1385.185303  656.969727  1385.185303    1.000000  1385.185303        0.0    0.000000       -1.000000       1.0          1384.185303                 1.0             False
8    1386.185303    1386.185303  656.969727  1386.185303    1.000000  1386.185303        0.0    0.000000     -100.000000       1.0          1384.185303                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:18]  --------------------------------------------------------------------------------
[09/28 12:15:18]  Iteration: 41 (1 solution, 39 counterexamples)
[09/28 12:15:20]  Generator returned sat in 0.776022 secs.
[09/28 12:15:20]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:21]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/28 12:15:21]  Verifer returned sat in 0.651474 secs.
[09/28 12:15:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     684.215576     184.155029  558.969727   684.215576    0.060303   184.155029        0.0  500.060547      500.060303       6.0           184.155029                -1.0                -1
1     684.215576     284.094727  558.969727   684.215576    0.060303   284.094727        0.0  400.120850      400.060303       6.0           184.155029                 0.0             False
2     684.215576     284.155273  558.969727   684.215576    0.060303   284.155273        0.0  400.060303      300.060303       7.0           184.155029                 0.0             False
3     684.215576     392.336182  558.969727   684.215576  210.180664   392.336182        0.0  291.879395      200.060303       8.0           184.155029                 0.0             False
4     684.215576     524.094727  558.969727   684.215576  210.180908   524.094727        0.0  160.120850      100.060303       9.0           184.155029                 0.0             False
5     884.094727     684.155273  558.969727   884.094727  360.000000   684.155273        0.0  199.939453      199.939453       9.0           184.155029                 1.0              True
6    1284.155273     684.215576  558.969727  1284.155273  600.000000   684.215576        0.0  599.939697      500.000000       9.0           184.155029                 1.0              True
7    1284.155273     884.155029  558.969727  1284.155273  437.819092   884.155029        0.0  400.000244      400.000000       2.0          1284.155273                 1.0              True
8    1284.155273     984.155273  558.969727  1284.155273  399.939697   984.155273        0.0  300.000000      300.000000       3.0          1284.155273                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:21]  --------------------------------------------------------------------------------
[09/28 12:15:21]  Iteration: 42 (1 solution, 40 counterexamples)
[09/28 12:15:25]  Generator returned sat in 2.290589 secs.
[09/28 12:15:25]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:15:26]  Improved gap from 0.0 to 28.125
[09/28 12:15:27]  Improved number of small numbers from 91 to 111 out of a max of 111
[09/28 12:15:27]  Verifer returned sat in 1.893279 secs.
[09/28 12:15:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     690.200928     621.501953  581.918701   690.200928    0.060303   621.501953        0.0   68.698975       68.698975       5.0           621.501953                -1.0                -1
1     690.200928     690.200928  585.094727   690.200928   28.185303   690.200928        0.0    0.000000      -28.125000       6.0           621.501953                 0.0             False
2     718.325928     718.325928  656.969727   718.325928   28.125000   718.325928        0.0    0.000000      -28.125000       1.0           718.325928                 0.0             False
3     946.450928     838.761230  656.969727   946.450928  228.125000   838.761230        0.0  107.689697      100.000000       1.0           718.325928                 0.0             False
4     946.450928     857.316650  656.969727   946.450928  107.629639   857.316650        0.0   89.134277        0.000000       2.0           946.450928                 0.0             False
5     946.450928     946.450928  728.844727   946.450928   82.557861   946.450928        0.0    0.000000      -28.125000       3.0           946.450928                 0.0             False
6    1059.513428     996.637695  728.844727  1059.513428  113.062500   996.637695        0.0   62.875732      -15.062500       1.0           946.450928                 0.0             False
7    1074.575928    1074.575928  800.719727  1074.575928   77.938232  1074.575928        0.0    0.000000      -28.125000       1.0          1074.575928                 0.0             False
8    1182.205566    1102.700938  800.719727  1182.205566  107.629639  1102.700938        0.0   79.504629      -20.495361       1.0          1074.575928                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:27]  --------------------------------------------------------------------------------
[09/28 12:15:27]  Iteration: 43 (1 solution, 41 counterexamples)
[09/28 12:15:29]  Generator returned sat in 1.083539 secs.
[09/28 12:15:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:30]  Verifer returned unsat in 0.517872 secs.
[09/28 12:15:30]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:30]  --------------------------------------------------------------------------------
[09/28 12:15:30]  Iteration: 44 (2 solution, 41 counterexamples)
[09/28 12:15:31]  Generator returned sat in 0.280697 secs.
[09/28 12:15:31]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:32]  Verifer returned unsat in 0.234056 secs.
[09/28 12:15:32]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:32]  --------------------------------------------------------------------------------
[09/28 12:15:32]  Iteration: 45 (3 solution, 41 counterexamples)
[09/28 12:15:33]  Generator returned sat in 0.472033 secs.
[09/28 12:15:33]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:35]  Improved gap from 0.0 to 28.125
[09/28 12:15:35]  Improved number of small numbers from 49 to 111 out of a max of 111
[09/28 12:15:35]  Verifer returned sat in 2.079916 secs.
[09/28 12:15:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     687.781982     621.082764  582.337646   687.781982    0.060303   621.082764        0.0   66.699219       66.698975       5.0           621.082764                -1.0                -1
1     687.781982     687.781982  587.513672   687.781982   28.124756   687.781982        0.0    0.000000      -28.125000       6.0           621.082764                 1.0             False
2     715.906982     715.906982  659.388672   715.906982   28.125000   715.906982        0.0    0.000000      -28.125000       1.0           621.082764                 1.0              True
3     944.031982     836.342041  659.388672   944.031982  228.125000   836.342041        0.0  107.689941      100.000000       1.0           621.082764                 0.0             False
4     944.031982     858.574951  659.388672   944.031982  107.629639   858.574951        0.0   85.457031        0.000000       2.0           944.031982                 0.0             False
5     944.031982     944.031982  731.263672   944.031982   85.396484   944.031982        0.0    0.000000      -28.125000       3.0           944.031982                 1.0             False
6    1058.094482     993.552002  731.263672  1058.094482  114.062500   993.552002        0.0   64.542480      -14.062500       1.0           944.031982                 1.0             False
7    1072.156982    1072.156982  803.138672  1072.156982   78.604980  1072.156982        0.0    0.000000      -28.125000       1.0          1072.156982                 0.0             False
8    1178.947998    1100.281982  803.138672  1178.947998  106.791016  1100.281982        0.0   78.666016      -21.333984       1.0          1072.156982                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:36]  --------------------------------------------------------------------------------
[09/28 12:15:36]  Iteration: 46 (3 solution, 42 counterexamples)
[09/28 12:15:39]  Generator returned sat in 1.782330 secs.
[09/28 12:15:39]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:40]  Verifer returned unsat in 0.915151 secs.
[09/28 12:15:40]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:40]  --------------------------------------------------------------------------------
[09/28 12:15:40]  Iteration: 47 (4 solution, 42 counterexamples)
[09/28 12:15:42]  Generator returned sat in 0.743528 secs.
[09/28 12:15:42]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:15:47]  Improved gap from 0.0 to 0
[09/28 12:15:48]  Improved number of small numbers from 57 to 64 out of a max of 111
[09/28 12:15:48]  Verifer returned sat in 6.293458 secs.
[09/28 12:15:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     717.131624     616.131624   586.289062   717.131624    0.003906   616.131624        0.0  101.00000      100.000033       3.0           616.131624                -1.0                -1
1     717.131624     717.129124   586.289062   717.131624    0.002686   717.129124        0.0    0.00250        0.000033       2.0           717.131624                 1.0             False
2     717.131624     717.131624   686.288818   717.131624    0.001465   717.131624        0.0    0.00000       -0.000212       3.0           717.131624                 1.0             False
3     818.137874     717.132874   686.288818   818.137874  101.006250   717.132874        0.0  101.00500        1.006038       1.0           717.131624                 1.0             False
4     818.137874     818.137874   785.282780   818.137874  101.003750   818.137874        0.0    0.00000        0.000000       2.0           818.137874                 0.0             False
5     919.144124     818.137874   785.282780   919.144124  101.006250   818.137874        0.0  101.00625        1.006250       2.0           818.137874                 1.0             False
6     919.144124     919.144124   884.276367   919.144124  101.006250   919.144124        0.0    0.00000       -0.000163       2.0           818.137874                 1.0             False
7     919.154124     919.154124   984.266357   919.154124    0.010000   919.154124        0.0    0.00000       -0.000173       1.0           919.154124                 1.0              True
8     969.667249     969.667249  1033.753174   969.667249   50.513125   969.667249        0.0    0.00000       -0.000231       1.0           919.154124                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:48]  --------------------------------------------------------------------------------
[09/28 12:15:48]  Iteration: 48 (4 solution, 43 counterexamples)
[09/28 12:15:52]  Generator returned sat in 2.580310 secs.
[09/28 12:15:52]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:54]  Verifer returned unsat in 1.358534 secs.
[09/28 12:15:54]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:54]  --------------------------------------------------------------------------------
[09/28 12:15:54]  Iteration: 49 (5 solution, 43 counterexamples)
[09/28 12:15:55]  Generator returned sat in 0.355151 secs.
[09/28 12:15:55]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:15:57]  Improved gap from 0.0 to 0
[09/28 12:15:58]  Improved number of small numbers from 57 to 64 out of a max of 111
[09/28 12:15:58]  Verifer returned sat in 2.757955 secs.
[09/28 12:15:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     417.122249     116.120374  1087.300280   417.122249    0.001221   116.120374        0.0  301.001875      301.001875       5.0           116.120374                -1.0                -1
1     417.122249     116.120605  1087.300280   417.122249    0.001221   116.120605        0.0  301.001644      201.001875       5.0           116.120374                 0.0             False
2     417.122249     316.119124  1087.300280   417.122249    0.001221   316.119124        0.0  101.003125      101.001875       6.0           116.120374                 0.0             False
3     417.122249     316.120374  1087.300280   417.122249    0.001250   316.120374        0.0  101.001875        1.001875       7.0           116.120374                 0.0             False
4     417.122249     417.122249  1186.288574   417.122249  101.000625   417.122249        0.0    0.000000       -0.009831       8.0           116.120374                 0.0             False
5     417.132249     417.132249  1234.776855   417.132249    0.010000   417.132249        0.0    0.000000      -51.511549       1.0           417.132249                 1.0              True
6     468.643812     468.643812  1334.776611   468.643812   51.511562   468.643812        0.0    0.000000       -0.000231       1.0           417.132249                 0.0             False
7     571.661312     485.143291  1334.776611   571.661312  103.017500   485.143291        0.0   86.518021        3.017269       1.0           417.132249                 0.0             False
8     571.662562     571.662562  1431.748047   571.662562   86.519271   571.662562        0.0    0.000000       -0.010046       1.0           571.662562                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:15:58]  --------------------------------------------------------------------------------
[09/28 12:15:58]  Iteration: 50 (5 solution, 44 counterexamples)
[09/28 12:16:00]  Generator returned sat in 0.478167 secs.
[09/28 12:16:00]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:02]  Improved gap from 0.0 to 0
[09/28 12:16:03]  Improved number of small numbers from 62 to 66 out of a max of 111
[09/28 12:16:03]  Verifer returned sat in 2.435535 secs.
[09/28 12:16:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0      85.148311    -215.853564  1419.274219    85.148311    0.001250  -215.853564        0.0  301.001875      301.001875       6.0          -215.853564                -1.0                -1
1      85.148311    -215.853516  1419.274219    85.148311    0.001250  -215.853516        0.0  301.001826      201.001875       6.0          -215.853564                 0.0             False
2      85.148311     -15.854814  1419.274219    85.148311    0.001250   -15.854814        0.0  101.003125      101.001875       7.0          -215.853564                 0.0             False
3      85.148311     -15.853564  1419.274219    85.148311    0.001465   -15.853564        0.0  101.001875        1.001875       8.0          -215.853564                 0.0             False
4      85.148311      85.148311  1518.272217    85.148311  101.000732    85.148311        0.0    0.000000       -0.000127       9.0          -215.853564                 0.0             False
5      85.158311      85.158311  1618.262207    85.158311    0.010000    85.158311        0.0    0.000000       -0.000137       1.0            85.158311                 1.0              True
6     136.669873     136.669873  1666.750732   136.669873   51.511562   136.669873        0.0    0.000000       -0.000049       1.0            85.158311                 0.0             False
7     239.687373     136.671123  1666.750732   239.687373  103.017500   136.671123        0.0  103.016250        3.017451       1.0            85.158311                 0.0             False
8     239.687373     239.687373  1666.750781   239.687373   78.270156   239.687373        0.0    0.000000      -96.982500       2.0           239.687373                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:16:03]  --------------------------------------------------------------------------------
[09/28 12:16:03]  Iteration: 51 (5 solution, 45 counterexamples)
[09/28 12:16:05]  Generator returned sat in 0.762570 secs.
[09/28 12:16:05]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:09]  Improved gap from 0.0 to 0
[09/28 12:16:09]  Improved number of small numbers from 51 to 111 out of a max of 111
[09/28 12:16:09]  Verifer returned sat in 3.693777 secs.
[09/28 12:16:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     129.200928    -171.843994  1375.264648   129.200928    0.029785  -171.843994        0.0  301.044922      301.044922       6.0          -171.843994                -1.0                -1
1     129.200928     -71.844238  1375.264648   129.200928    0.029785   -71.844238        0.0  201.045166      201.044922       4.0          -171.843994                 1.0             False
2     129.200928      28.125732  1375.264648   129.200928    0.029785    28.125732        0.0  101.075195      101.044922       4.0          -171.843994                 0.0             False
3     129.200928      28.156006  1375.264648   129.200928    0.029785    28.156006        0.0  101.044922        1.044922       5.0          -171.843994                 0.0             False
4     129.200928     129.200928  1474.219727   129.200928  101.014893   129.200928        0.0    0.000000        0.000000       6.0          -171.843994                 0.0             False
5     130.200928     130.200928  1573.219727   130.200928    1.000000   130.200928        0.0    0.000000        0.000000       1.0           130.200928                 1.0              True
6     182.738525     182.738525  1620.682129   182.738525   52.537598   182.738525        0.0    0.000000        0.000000       1.0           130.200928                 0.0             False
7     287.298584     199.059326  1620.682129   287.298584  104.560059   199.059326        0.0   88.239258        4.560059       1.0           130.200928                 0.0             False
8     287.298584     287.298584  1716.122070   287.298584   88.209229   287.298584        0.0    0.000000        0.000000       2.0           287.298584                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:16:09]  --------------------------------------------------------------------------------
[09/28 12:16:09]  Iteration: 52 (5 solution, 46 counterexamples)
[09/28 12:16:11]  Generator returned sat in 0.782583 secs.
[09/28 12:16:12]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:17]  Improved gap from 0.0 to 0
[09/28 12:16:17]  Improved number of small numbers from 95 to 99 out of a max of 111
[09/28 12:16:17]  Verifer returned sat in 5.688098 secs.
[09/28 12:16:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     129.200928    -171.889160  1375.309570   129.200928    0.029785  -171.889160        0.0  301.090088      301.090088       6.0          -171.889160                -1.0                -1
1     129.200928     -71.889404  1375.309570   129.200928    0.029785   -71.889404        0.0  201.090332      201.090088       5.0          -171.889160                 0.0             False
2     129.200928      28.110840  1375.309570   129.200928    0.029785    28.110840        0.0  101.090088      101.090088       5.0          -171.889160                 0.0             False
3     129.200928      28.140869  1375.309570   129.200928    0.030029    28.140869        0.0  101.060059        1.090088       6.0          -171.889160                 0.0             False
4     129.200928     129.200928  1474.219482   129.200928  101.030029   129.200928        0.0    0.000000        0.000000       7.0          -171.889160                 0.0             False
5     130.200928     130.200928  1520.674805   130.200928    1.000000   130.200928        0.0    0.000000      -52.544678       1.0           130.200928                 1.0              True
6     182.745972     182.745972  1620.644531   182.745972   52.545044   182.745972        0.0    0.000000       -0.029907       1.0           130.200928                 0.0             False
7     287.321045     182.776001  1620.644531   287.321045  104.575073   182.776001        0.0  104.545044        4.545166       1.0           130.200928                 0.0             False
8     287.321045     287.321045  1620.644775   287.321045   80.075073   287.321045        0.0    0.000000      -95.454590       2.0           287.321045                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:16:18]  --------------------------------------------------------------------------------
[09/28 12:16:18]  Iteration: 53 (5 solution, 47 counterexamples)
[09/28 12:16:20]  Generator returned sat in 0.716064 secs.
[09/28 12:16:20]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:21]  Verifer returned unsat in 1.434714 secs.
[09/28 12:16:21]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:21]  --------------------------------------------------------------------------------
[09/28 12:16:21]  Iteration: 54 (6 solution, 47 counterexamples)
[09/28 12:16:23]  Generator returned sat in 0.370524 secs.
[09/28 12:16:23]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:25]  Improved gap from 0.0 to 0
[09/28 12:16:26]  Improved number of small numbers from 63 to 71 out of a max of 111
[09/28 12:16:26]  Verifer returned sat in 3.022689 secs.
[09/28 12:16:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0      33.035767    -267.979492  1379.742432    33.035767    0.029785  -267.979492        0.0  301.015259      301.015198       5.0          -267.979492                -1.0                -1
1      33.035767    -267.979248  1379.742432    33.035767    0.029785  -267.979248        0.0  301.015015      201.015198       5.0          -267.979492                 0.0             False
2      33.035767     -68.009277  1379.742432    33.035767    0.029785   -68.009277        0.0  101.045044      101.015198       6.0          -267.979492                 0.0             False
3      33.035767     -67.979248  1379.742432    33.035767    0.029785   -67.979248        0.0  101.015015        1.015198       7.0          -267.979492                 0.0             False
4      33.035767      33.035767  1478.727234    33.035767  101.015015    33.035767        0.0    0.000000        0.000000       8.0          -267.979492                 0.0             False
5      34.035767      34.035767  1525.204834    34.035767    1.000000    34.035767        0.0    0.000000      -52.522400       1.0            34.035767                 1.0              True
6      86.558289      86.558289  1620.644775    86.558289   52.522522    86.558289        0.0    0.000000       -4.559937       1.0            34.035767                 0.0             False
7     191.088318     102.914144  1620.644775   191.088318  104.530029   102.914144        0.0   88.174174       -0.029907       1.0            34.035767                 0.0             False
8     191.118347     191.118347  1720.644531   191.118347   88.204203   191.118347        0.0    0.000000       -0.000122       1.0           191.118347                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:16:27]  --------------------------------------------------------------------------------
[09/28 12:16:27]  Iteration: 55 (6 solution, 48 counterexamples)
[09/28 12:16:28]  Generator returned sat in 0.550196 secs.
[09/28 12:16:28]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:38]  Improved gap from 0.0 to 0
[09/28 12:16:38]  Improved number of small numbers from 41 to 58 out of a max of 111
[09/28 12:16:38]  Verifer returned sat in 10.022704 secs.
[09/28 12:16:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -234.271493    -537.259506  1754.267563  -234.271493    0.029785  -537.259506        0.0  302.988013      302.988013       6.0          -537.259506                -1.0                -1
1    -234.271493    -537.259277  1754.267563  -234.271493    0.029785  -537.259277        0.0  302.987784      202.988013       6.0          -537.259506                 1.0             False
2    -234.271493    -337.259506  1754.267563  -234.271493    0.029785  -337.259506        0.0  102.988013      102.988013       4.0          -537.259506                 1.0              True
3    -234.271493    -337.259506  1754.267563  -234.271493    0.029785  -337.259506        0.0  102.988013        2.988013       4.0          -537.259506                 1.0              True
4    -234.271493    -234.271493  1851.279541  -234.271493  101.014893  -234.271493        0.0    0.000000       -0.000009       5.0          -537.259506                 1.0             False
5    -233.271493    -233.271493  1896.785645  -233.271493    1.000000  -233.271493        0.0    0.000000      -53.493905       1.0          -233.271493                 1.0              True
6    -179.777487    -179.777487  1996.785400  -179.777487   53.494006  -179.777487        0.0    0.000000       -0.000143       1.0          -233.271493                 0.0             False
7     -73.289474    -179.747519  1996.785400   -73.289474  106.488013  -179.747519        0.0  106.458044        6.487870       1.0          -233.271493                 0.0             False
8     -73.289474     -73.289474  2090.297363   -73.289474   81.505994   -73.289474        0.0    0.000000       -0.000168       2.0           -73.289474                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:16:39]  --------------------------------------------------------------------------------
[09/28 12:16:39]  Iteration: 56 (6 solution, 49 counterexamples)
[09/28 12:16:41]  Generator returned sat in 0.680223 secs.
[09/28 12:16:41]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:16:49]  Improved gap from 8.84567481884058e-06 to 0
[09/28 12:16:50]  Improved number of small numbers from 41 to 111 out of a max of 111
[09/28 12:16:50]  Verifer returned sat in 8.536450 secs.
[09/28 12:16:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     246.748779     -54.296143  1271.304199   246.748779    0.029785   -54.296143        0.0  301.044922      301.044922       7.0           -54.296143                -1.0                -1
1     246.748779     -54.296143  1271.304199   246.748779    0.029785   -54.296143        0.0  301.044922      201.044922       7.0           -54.296143                 0.0             False
2     246.748779     145.703857  1271.304199   246.748779    0.029785   145.703857        0.0  101.044922      101.044922       8.0           -54.296143                 0.0             False
3     246.748779     145.703857  1271.304199   246.748779    0.029785   145.703857        0.0  101.044922        1.044922       8.0           -54.296143                 0.0             False
4     246.748779     246.748779  1370.259277   246.748779  101.014893   246.748779        0.0    0.000000        0.000000       9.0           -54.296143                 0.0             False
5     247.748779     247.748779  1469.259277   247.748779    1.000000   247.748779        0.0    0.000000        0.000000       1.0           247.748779                 1.0              True
6     300.271240     300.271240  1516.707031   300.271240   52.522461   300.271240        0.0    0.000000       -0.029785       1.0           247.748779                 0.0             False
7     404.816162     300.301025  1516.707031   404.816162  104.544922   300.301025        0.0  104.515137        4.515137       1.0           247.748779                 0.0             False
8     404.816162     404.816162  1516.707031   404.816162   80.048584   404.816162        0.0    0.000000      -95.484863       2.0           404.816162                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:16:50]  --------------------------------------------------------------------------------
[09/28 12:16:50]  Iteration: 57 (6 solution, 50 counterexamples)
[09/28 12:16:53]  Generator returned sat in 1.555569 secs.
[09/28 12:16:53]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:16:54]  Improved gap from 0.0 to 0
[09/28 12:16:55]  Improved number of small numbers from 62 to 72 out of a max of 111
[09/28 12:16:55]  Verifer returned sat in 1.510232 secs.
[09/28 12:16:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     147.733154     146.745654   833.332520   147.733154  0.000625   146.745654        0.0   0.9875        0.000000       6.0           146.745654                -1.0                -1
1     147.733154     147.733154   933.332520   147.733154  0.012451   147.733154        0.0   0.0000        0.000000       6.0           146.745654                 1.0             False
2     147.745029     147.745029  1033.320312   147.745029  0.011875   147.745029        0.0   0.0000       -0.000332       1.0           147.745029                 1.0              True
3     147.756279     147.756279  1133.309326   147.756279  0.011250   147.756279        0.0   0.0000       -0.000068       1.0           147.756279                 0.0             False
4     147.766904     147.766904  1233.288818   147.766904  0.010625   147.766904        0.0   0.0000       -0.009951       1.0           147.766904                 0.0             False
5     147.776904     147.776904  1333.288574   147.776904  0.010000   147.776904        0.0   0.0000       -0.000195       1.0           147.776904                 0.0             False
6     147.786904     147.786904  1433.268799   147.786904  0.010000   147.786904        0.0   0.0000       -0.009971       1.0           147.776904                 0.0             False
7     147.796904     147.796904  1533.268555   147.796904  0.010000   147.796904        0.0   0.0000       -0.000215       1.0           147.776904                 0.0             False
8     147.806904     147.806904  1533.268799   147.806904  0.010000   147.806904        0.0   0.0000      -99.989971       1.0           147.776904                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:16:55]  --------------------------------------------------------------------------------
[09/28 12:16:55]  Iteration: 58 (6 solution, 51 counterexamples)
[09/28 12:16:58]  Generator returned sat in 1.219926 secs.
[09/28 12:16:58]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:16:58]  Verifer returned unsat in 0.262856 secs.
[09/28 12:16:58]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:16:58]  --------------------------------------------------------------------------------
[09/28 12:16:58]  Iteration: 59 (7 solution, 51 counterexamples)
[09/28 12:17:00]  Generator returned sat in 0.382653 secs.
[09/28 12:17:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:00]  Verifer returned unsat in 0.325946 secs.
[09/28 12:17:00]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:00]  --------------------------------------------------------------------------------
[09/28 12:17:00]  Iteration: 60 (8 solution, 51 counterexamples)
[09/28 12:17:02]  Generator returned sat in 0.808010 secs.
[09/28 12:17:02]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:03]  Verifer returned unsat in 0.217742 secs.
[09/28 12:17:03]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:03]  --------------------------------------------------------------------------------
[09/28 12:17:03]  Iteration: 61 (9 solution, 51 counterexamples)
[09/28 12:17:07]  Generator returned sat in 2.851599 secs.
[09/28 12:17:07]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:13]  Improved gap from 0.0 to 0
[09/28 12:17:14]  Improved number of small numbers from 51 to 59 out of a max of 111
[09/28 12:17:14]  Verifer returned sat in 6.556537 secs.
[09/28 12:17:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     547.807036     243.631011  1089.192993   547.807036    0.060059   243.631011        0.0  304.176025      304.176025       5.0           243.631011                -1.0                -1
1     547.807036     343.630859  1089.192993   547.807036    8.231934   343.630859        0.0  204.176177      204.176025       5.0           243.631011                 1.0             False
2     547.807036     443.631011  1089.192993   547.807036    8.231934   443.631011        0.0  104.176025      104.176025       4.0           243.631011                 1.0              True
3     547.807036     443.631011  1089.192993   547.807036    8.231934   443.631011        0.0  104.176025        4.176025       4.0           243.631011                 1.0              True
4     547.807036     547.807036  1184.017090   547.807036  104.115967   547.807036        0.0    0.000000       -0.999878       5.0           243.631011                 1.0             False
5     548.807036     548.807036  1284.016846   548.807036    1.000000   548.807036        0.0    0.000000       -0.000122       1.0           548.807036                 1.0              True
6     601.895049     601.895049  1330.928711   601.895049   53.088013   601.895049        0.0    0.000000       -0.000244       1.0           548.807036                 0.0             False
7     707.571074     601.954985  1330.928711   707.571074  105.676025   601.954985        0.0  105.616089        5.675781       1.0           548.807036                 0.0             False
8     707.571074     707.571074  1330.928711   707.571074   79.911987   707.571074        0.0    0.000000      -94.324219       2.0           707.571074                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:17:14]  --------------------------------------------------------------------------------
[09/28 12:17:14]  Iteration: 62 (9 solution, 52 counterexamples)
[09/28 12:17:16]  Generator returned sat in 0.573925 secs.
[09/28 12:17:16]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:23]  Improved gap from 0.0001220703125 to 0
[09/28 12:17:23]  Improved number of small numbers from 40 to 57 out of a max of 111
[09/28 12:17:23]  Verifer returned sat in 7.369921 secs.
[09/28 12:17:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    2233.262251    1933.217299  703.124947  2233.262251    0.029785  1933.217299        0.0  300.044952      300.044952       3.0          1933.217299                -1.0                -1
1    2233.262251    1933.217529  703.124947  2233.262251    0.029785  1933.217529        0.0  300.044722      200.044952       3.0          1933.217299                 0.0             False
2    2233.262251    2122.859648  703.124947  2233.262251    0.029785  2122.859648        0.0  110.402603      100.044952       4.0          1933.217299                 0.0             False
3    2233.262251    2133.217299  703.124947  2233.262251    0.029785  2133.217299        0.0  100.044952        0.044952       5.0          1933.217299                 0.0             False
4    2233.262251    2233.262251  803.079834  2233.262251  100.014893  2233.262251        0.0    0.000000       -0.000160       6.0          1933.217299                 0.0             False
5    2234.262251    2234.262251  902.079834  2234.262251    1.000000  2234.262251        0.0    0.000000       -0.000160       1.0          2234.262251                 1.0              True
6    2290.463553    2290.463553  945.878662  2290.463553   56.201302  2290.463553        0.0    0.000000       -0.000031       1.0          2234.262251                 0.0             False
7    2397.187330    2290.493521  945.878662  2397.187330  106.723778  2290.493521        0.0  106.693810        6.723747       1.0          2234.262251                 0.0             False
8    2397.187330    2397.187330  945.878906  2397.187330   81.977524  2397.187330        0.0    0.000000      -93.276009       2.0          2397.187330                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:17:24]  --------------------------------------------------------------------------------
[09/28 12:17:24]  Iteration: 63 (9 solution, 53 counterexamples)
[09/28 12:17:26]  Generator returned sat in 0.440288 secs.
[09/28 12:17:26]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:35]  Improved gap from 3.0517578125e-05 to 0
[09/28 12:17:36]  Improved number of small numbers from 40 to 58 out of a max of 111
[09/28 12:17:36]  Verifer returned sat in 10.036058 secs.
[09/28 12:17:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    2068.599848    1768.510126  652.094482  2068.599848    0.029785  1768.510126        0.0  300.089722      300.089594       9.0          1768.510126                -1.0                -1
1    2068.599848    1768.510254  652.094482  2068.599848    0.029785  1768.510254        0.0  300.089594      200.089594       4.0          1768.510126                 1.0             False
2    2068.599848    1968.510126  652.094482  2068.599848    0.029785  1968.510126        0.0  100.089722      100.089594       5.0          1768.510126                 0.0             False
3    2068.599848    1968.540034  652.094482  2068.599848    0.029907  1968.540034        0.0  100.059814        0.089594       6.0          1768.510126                 0.0             False
4    2068.599848    2068.599848  751.005127  2068.599848  100.029907  2068.599848        0.0    0.000000       -0.999761       7.0          1768.510126                 0.0             False
5    2069.599848    2069.599848  799.960205  2069.599848    1.000000  2069.599848        0.0    0.000000      -51.044683       1.0          2069.599848                 1.0              True
6    2120.644709    2120.644709  899.959961  2120.644709   51.044861  2120.644709        0.0    0.000000       -0.000066       1.0          2069.599848                 0.0             False
7    2222.219477    2120.674616  899.959961  2222.219477  101.574768  2120.674616        0.0  101.544861        1.574702       1.0          2069.599848                 0.0             False
8    2222.219477    2222.219477  899.960205  2222.219477   76.824768  2222.219477        0.0    0.000000      -98.425054       2.0          2222.219477                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:17:36]  --------------------------------------------------------------------------------
[09/28 12:17:36]  Iteration: 64 (9 solution, 54 counterexamples)
[09/28 12:17:40]  Generator returned sat in 1.971001 secs.
[09/28 12:17:40]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:46]  Improved gap from 6.638746995192308e-05 to 0
[09/28 12:17:47]  Improved number of small numbers from 42 to 111 out of a max of 111
[09/28 12:17:47]  Verifer returned sat in 6.524417 secs.
[09/28 12:17:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1915.002686    1614.957764  1204.246582  1915.002686    0.029785  1614.957764        0.0  300.044922      300.044922       5.0          1614.957764                -1.0                -1
1    1915.002686    1714.957764  1204.246582  1915.002686    0.029785  1714.957764        0.0  200.044922      200.044922       5.0          1614.957764                 0.0             False
2    1915.002686    1814.927979  1204.246582  1915.002686    0.029785  1814.927979        0.0  100.074707      100.044922       6.0          1614.957764                 0.0             False
3    1915.002686    1814.957764  1204.246582  1915.002686    0.029785  1814.957764        0.0  100.044922        0.044922       7.0          1614.957764                 0.0             False
4    1915.002686    1915.002686  1304.201660  1915.002686  100.014893  1915.002686        0.0    0.000000        0.000000       8.0          1614.957764                 0.0             False
5    1916.002686    1916.002686  1403.201660  1916.002686    1.000000  1916.002686        0.0    0.000000        0.000000       1.0          1916.002686                 1.0              True
6    1967.040039    1967.040039  1452.164307  1967.040039   51.037354  1967.040039        0.0    0.000000        0.000000       1.0          1916.002686                 0.0             False
7    2068.599854    1967.070312  1452.164307  2068.599854  101.559814  1967.070312        0.0  101.529541        1.559814       1.0          1916.002686                 0.0             False
8    2068.599854    2068.599854  1550.604492  2068.599854   76.813721  2068.599854        0.0    0.000000        0.000000       2.0          2068.599854                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:17:47]  --------------------------------------------------------------------------------
[09/28 12:17:47]  Iteration: 65 (9 solution, 55 counterexamples)
[09/28 12:17:50]  Generator returned sat in 1.078727 secs.
[09/28 12:17:50]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:17:57]  Improved gap from 0.0 to 0
[09/28 12:17:58]  Improved number of small numbers from 41 to 111 out of a max of 111
[09/28 12:17:58]  Verifer returned sat in 8.109124 secs.
[09/28 12:17:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    2864.139404    2564.094482  255.109619  2864.139404    0.029785  2564.094482        0.0  300.044922      300.044922       6.0          2564.094482                -1.0                -1
1    2864.139404    2564.094482  255.109619  2864.139404    0.029785  2564.094482        0.0  300.044922      200.044922       6.0          2564.094482                 0.0             False
2    2864.139404    2764.064697  255.109619  2864.139404    0.029785  2764.064697        0.0  100.074707      100.044922       7.0          2564.094482                 0.0             False
3    2864.139404    2764.094482  255.109619  2864.139404    0.029785  2764.094482        0.0  100.044922        0.044922       8.0          2564.094482                 0.0             False
4    2864.139404    2864.139404  355.064697  2864.139404  100.014893  2864.139404        0.0    0.000000        0.000000       9.0          2564.094482                 0.0             False
5    2865.139404    2865.139404  454.064697  2865.139404    1.000000  2865.139404        0.0    0.000000        0.000000       1.0          2865.139404                 1.0              True
6    2916.176758    2916.176758  503.027344  2916.176758   51.037354  2916.176758        0.0    0.000000        0.000000       1.0          2865.139404                 0.0             False
7    3017.736572    2932.664551  503.027344  3017.736572  101.559814  2932.664551        0.0   85.072021        1.559814       1.0          2865.139404                 0.0             False
8    3017.736572    3017.736572  503.027344  3017.736572   85.042480  3017.736572        0.0    0.000000      -98.440186       2.0          3017.736572                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:17:58]  --------------------------------------------------------------------------------
[09/28 12:17:58]  Iteration: 66 (9 solution, 56 counterexamples)
[09/28 12:18:01]  Generator returned sat in 0.961873 secs.
[09/28 12:18:01]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:01]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:18:01]  Verifer returned sat in 0.297362 secs.
[09/28 12:18:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    2916.117188    2416.057617  503.027344  2916.117188    0.059570  2416.057617        0.0  500.059570           500.0       7.0          2416.057617                -1.0                -1
1    2916.117188    2416.117188  503.027344  2916.117188    0.059570  2416.117188        0.0  500.000000           400.0       7.0          2416.057617                 0.0             False
2    2916.117188    2616.057617  503.027344  2916.117188  299.089355  2616.057617        0.0  300.059570           300.0       8.0          2416.057617                 0.0             False
3    2916.117188    2616.117188  503.027344  2916.117188  299.089355  2616.117188        0.0  300.000000           200.0       9.0          2416.057617                 0.0             False
4    2916.117188    2816.117188  503.027344  2916.117188  299.089355  2816.117188        0.0  100.000000           100.0       9.0          2416.057617                 1.0              True
5    3415.117188    2816.176758  503.027344  3415.117188  599.000000  2816.176758        0.0  598.940430           499.0       9.0          2416.057617                 1.0              True
6    3415.117188    2916.117188  503.027344  3415.117188  299.178711  2916.117188        0.0  499.000000           399.0       7.0          3415.117188                 1.0              True
7    3415.117188    3115.587402  503.027344  3415.117188  300.000000  3115.587402        0.0  299.529785           299.0       3.0          3415.117188                 0.0             False
8    3415.117188    3116.117188  503.027344  3415.117188  299.470215  3116.117188        0.0  299.000000           199.0       4.0          3415.117188                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:18:02]  --------------------------------------------------------------------------------
[09/28 12:18:02]  Iteration: 67 (9 solution, 57 counterexamples)
[09/28 12:18:04]  Generator returned sat in 0.427587 secs.
[09/28 12:18:04]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:04]  Improved number of small numbers from 108 to 108 out of a max of 110
[09/28 12:18:04]  Verifer returned sat in 0.232228 secs.
[09/28 12:18:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    3114.968262    2514.998047  503.027344  3114.968262  299.970215  2514.998047        0.0  599.970215      500.000000       8.0          2514.998047                -1.0                -1
1    3114.968262    2714.888835  503.027344  3114.968262  299.970215  2714.888835        0.0  400.079427      400.000000       8.0          2514.998047                 0.0             False
2    3114.968262    2714.968262  503.027344  3114.968262  299.970215  2714.968262        0.0  400.000000      300.000000       9.0          2514.998047                 0.0             False
3    3114.968262    2814.968262  503.027344  3114.968262  299.970215  2814.968262        0.0  300.000000      200.000000       8.0          2514.998047                 1.0              True
4    3114.968262    3014.968262  503.027344  3114.968262  299.970215  3014.968262        0.0  100.000000      100.000000       9.0          2514.998047                 0.0             False
5    3465.087402    3015.027832  503.027344  3465.087402  450.119141  3015.027832        0.0  450.059570      350.119141       9.0          2514.998047                 1.0              True
6    3465.117188    3114.968262  503.027344  3465.117188  450.089355  3114.968262        0.0  350.148926      250.148926       8.0          3465.117188                 1.0              True
7    3465.117188    3314.938477  503.027344  3465.117188  300.000000  3314.938477        0.0  150.178711      150.148926       3.0          3465.117188                 0.0             False
8    3614.908691    3314.968262  503.027344  3614.908691  299.970215  3314.968262        0.0  299.940430      199.940430       4.0          3614.908691                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:18:04]  --------------------------------------------------------------------------------
[09/28 12:18:04]  Iteration: 68 (9 solution, 58 counterexamples)
[09/28 12:18:08]  Generator returned sat in 2.293979 secs.
[09/28 12:18:08]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:10]  Improved gap from 0.0 to 0
[09/28 12:18:11]  Improved number of small numbers from 58 to 65 out of a max of 111
[09/28 12:18:11]  Verifer returned sat in 2.576863 secs.
[09/28 12:18:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    2864.966455    2564.964580  503.027100  2864.966455    0.001221  2564.964580        0.0  300.001875      300.001875       5.0          2564.964580                -1.0                -1
1    2864.966455    2664.964355  503.027100  2864.966455    0.001221  2664.964355        0.0  200.002100      200.001875       5.0          2564.964580                 1.0             False
2    2864.966455    2764.964580  503.027100  2864.966455    0.001221  2764.964580        0.0  100.001875      100.001875       4.0          2564.964580                 1.0              True
3    2864.966455    2764.964580  503.027100  2864.966455    0.001465  2764.964580        0.0  100.001875        0.001875       4.0          2564.964580                 1.0              True
4    2864.966455    2864.966455  603.015381  2864.966455  100.000732  2864.966455        0.0    0.000000       -0.009844       5.0          2564.964580                 1.0             False
5    2864.976455    2864.976455  653.004395  2864.976455    0.010000  2864.976455        0.0    0.000000      -50.010830       1.0          2864.976455                 1.0              True
6    2914.987393    2914.987393  753.004150  2914.987393   50.010937  2914.987393        0.0    0.000000       -0.000137       1.0          2864.976455                 0.0             False
7    3015.004268    2931.651872  753.004150  3015.004268  100.016875  2931.651872        0.0   83.352396        0.016738       1.0          2864.976455                 0.0             False
8    3015.004268    3015.004268  852.977539  3015.004268   83.351146  3015.004268        0.0    0.000000       -0.009873       2.0          3015.004268                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:18:11]  --------------------------------------------------------------------------------
[09/28 12:18:11]  Iteration: 69 (9 solution, 59 counterexamples)
[09/28 12:18:15]  Generator returned sat in 2.046729 secs.
[09/28 12:18:15]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:18]  Improved gap from 0.0 to 0
[09/28 12:18:18]  Improved number of small numbers from 58 to 63 out of a max of 111
[09/28 12:18:18]  Verifer returned sat in 3.149004 secs.
[09/28 12:18:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     2870.54758    2564.964580  511.399900   2870.54758    0.002441  2564.964580        0.0  305.583000      305.583000       5.0           2564.96458                -1.0                -1
1     2870.54758    2564.967041  511.399900   2870.54758    0.002441  2564.967041        0.0  305.580539      205.583000       6.0           2564.96458                 0.0             False
2     2870.54758    2764.962080  511.399900   2870.54758    0.002686  2764.962080        0.0  105.585500      105.583000       4.0           2564.96458                 1.0              True
3     2870.54758    2764.964580  511.399900   2870.54758   11.161000  2764.964580        0.0  105.583000        5.583000       5.0           2564.96458                 0.0             False
4     2870.54758    2870.547580  605.816895   2870.54758  105.580500  2870.547580        0.0    0.000000       -0.000006       6.0           2564.96458                 0.0             False
5     2870.55758    2870.557580  705.806885   2870.55758    0.010000  2870.557580        0.0    0.000000       -0.000016       1.0           2870.55758                 1.0              True
6     2923.36033    2923.360330  753.004150   2923.36033   52.802750  2923.360330        0.0    0.000000        0.000000       1.0           2870.55758                 0.0             False
7     3028.95958    2940.957497  753.004150   3028.95958  105.599250  2940.957497        0.0   88.002083        5.599250       1.0           2870.55758                 0.0             False
8     3028.96208    3028.962080  847.402344   3028.96208   88.004583  3028.962080        0.0    0.000000       -0.000057       1.0           3028.96208                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:18:19]  --------------------------------------------------------------------------------
[09/28 12:18:19]  Iteration: 70 (9 solution, 60 counterexamples)
[09/28 12:18:21]  Generator returned sat in 0.908365 secs.
[09/28 12:18:21]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:23]  Improved gap from 0.0 to 0
[09/28 12:18:24]  Improved number of small numbers from 54 to 61 out of a max of 111
[09/28 12:18:24]  Verifer returned sat in 2.777762 secs.
[09/28 12:18:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    3064.965605    2764.963730  505.818775  3064.965605    0.001221  2764.963730        0.0  300.001875      300.001875       5.0          2764.963730                -1.0                -1
1    3064.965605    2764.963867  505.818775  3064.965605    0.001221  2764.963867        0.0  300.001738      200.001875       5.0          2764.963730                 0.0             False
2    3064.965605    2964.962480  505.818775  3064.965605    0.001221  2964.962480        0.0  100.003125      100.001875       6.0          2764.963730                 0.0             False
3    3064.965605    2964.963730  505.818775  3064.965605    0.001250  2964.963730        0.0  100.001875        0.001875       7.0          2764.963730                 0.0             False
4    3064.965605    3064.965605  605.816895  3064.965605  100.000625  3064.965605        0.0    0.000000       -0.000006       8.0          2764.963730                 0.0             False
5    3064.975605    3064.975605  705.806885  3064.975605    0.010000  3064.975605        0.0    0.000000       -0.000016       1.0          3064.975605                 1.0              True
6    3114.987168    3114.987168  755.778076  3114.987168   50.011562  3114.987168        0.0    0.000000       -0.017262       1.0          3064.975605                 0.0             False
7    3215.004668    3131.651647  755.778076  3215.004668  100.017500  3131.651647        0.0   83.353021        0.000238       1.0          3064.975605                 0.0             False
8    3215.004668    3215.004668  755.778076  3215.004668   83.351771  3215.004668        0.0    0.000000      -99.999762       2.0          3215.004668                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:18:25]  --------------------------------------------------------------------------------
[09/28 12:18:25]  Iteration: 71 (9 solution, 61 counterexamples)
[09/28 12:18:28]  Generator returned sat in 1.255238 secs.
[09/28 12:18:28]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:31]  Improved gap from 0.0 to 0
[09/28 12:18:32]  Improved number of small numbers from 56 to 63 out of a max of 111
[09/28 12:18:32]  Verifer returned sat in 3.786406 secs.
[09/28 12:18:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    3579.538493    3273.954493   -3.171987  3579.538493    0.002500  3273.954493        0.0  305.584000      305.584000       6.0          3273.954493                -1.0                -1
1    3579.538493    3273.957031   -3.171987  3579.538493    0.002500  3273.957031        0.0  305.581462      205.584000       6.0          3273.954493                 0.0             False
2    3579.538493    3473.951993   -3.171987  3579.538493    0.002686  3473.951993        0.0  105.586500      105.584000       7.0          3273.954493                 0.0             False
3    3579.538493    3473.954493   -3.171987  3579.538493   11.163086  3473.954493        0.0  105.584000        5.584000       8.0          3273.954493                 0.0             False
4    3579.538493    3579.538493   91.243896  3579.538493  105.581543  3579.538493        0.0    0.000000       -0.000117       9.0          3273.954493                 0.0             False
5    3579.548493    3579.548493  191.233887  3579.548493    0.010000  3579.548493        0.0    0.000000       -0.000126       1.0          3579.548493                 1.0              True
6    3632.351743    3632.351743  238.430664  3632.351743   52.803250  3632.351743        0.0    0.000000       -0.000099       1.0          3579.548493                 0.0             False
7    3737.951993    3632.354243  238.430664  3737.951993  105.600250  3632.354243        0.0  105.597750        5.600151       1.0          3579.548493                 0.0             False
8    3737.951993    3737.951993  332.830322  3737.951993   79.208000  3737.951993        0.0    0.000000       -0.000191       2.0          3737.951993                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:18:32]  --------------------------------------------------------------------------------
[09/28 12:18:32]  Iteration: 72 (9 solution, 62 counterexamples)
[09/28 12:18:34]  Generator returned unsat in 0.102288 secs.
[09/28 12:18:34]  [96mNo more solutions found[0m
[09/28 12:18:34]  Final solutions:
[09/28 12:18:34]  0: [1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:34]  1: [1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:18:34]  2: [1m[92mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:34]  3: [1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:34]  4: [1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:34]  5: [1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:34]  6: [1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:18:34]  7: [1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:18:34]  8: [1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:18:34]  Took 309.926203 secs.
