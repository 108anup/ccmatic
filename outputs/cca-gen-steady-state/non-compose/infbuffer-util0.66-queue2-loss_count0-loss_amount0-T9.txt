[09/27 16:18:18]  --------------------------------------------------------------------------------
[09/27 16:18:18]  Iteration: 1 (0 solution, 0 counterexamples)
[09/27 16:18:18]  Generator returned sat in 0.004310 secs.
[09/27 16:18:18]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:18:18]  Improved gap from 0.0 to 100
[09/27 16:18:18]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/27 16:18:18]  Verifer returned sat in 0.267147 secs.
[09/27 16:18:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0         0.1250       -99.8750    99.875       0.1250      0.1250     -99.8750        0.0    100.0000        100.0000       7.0              -99.875                -1.0                -1
1         0.1250         0.0000    99.875       0.1250      0.1250       0.0000        0.0      0.1250          0.0000       8.0              -99.875                 0.0             False
2         0.1250         0.1250    99.875       0.1250      0.0625       0.1250        0.0      0.0000       -100.0000       9.0                0.125                 0.0             False
3       500.1250       100.1250    99.875     500.1250    500.0000     100.1250        0.0    400.0000        300.0000       1.0                0.125                 1.0             False
4      1501.1250       238.1250    99.875    1501.1250   1401.0000     238.1250        0.0   1263.0000       1201.0000       2.0                0.125                 0.0             False
5      3517.3750       300.1250    99.875    3517.3750   3279.2500     300.1250        0.0   3217.2500       3117.2500       3.0                0.125                 0.0             False
6      7459.6250       500.0625    99.875    7459.6250   7159.5000     500.0625        0.0   6959.5625       6959.5000       4.0                0.125                 0.0             False
7     15619.9375       500.1250    99.875   15619.9375  15119.8750     500.1250        0.0  15119.8125      15019.8125       5.0                0.125                 0.0             False
8     31264.8750       600.1250    99.875   31264.8750  30764.7500     600.1250        0.0  30664.7500      30564.7500       5.0                0.125                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:18]  --------------------------------------------------------------------------------
[09/27 16:18:18]  Iteration: 2 (0 solution, 1 counterexamples)
[09/27 16:18:19]  Generator returned sat in 0.044557 secs.
[09/27 16:18:19]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:19]  Improved number of small numbers from 100 to 108 out of a max of 110
[09/27 16:18:19]  Verifer returned sat in 0.479358 secs.
[09/27 16:18:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   15219.937012   14618.934814  99.874756  15219.937012    0.009766  14618.934814        0.0  601.002197      600.999756       4.0         14618.934814                -1.0                -1
1   15219.937012   14618.937256  99.874756  15219.937012    0.009766  14618.937256        0.0  600.999756      500.999756       4.0         14618.934814                 1.0             False
2   15219.937012   14818.937256  99.874756  15219.937012    0.009766  14818.937256        0.0  400.999756      400.999756       4.0         14618.934814                 1.0              True
3   15219.937012   14818.937256  99.874756  15219.937012    0.010000  14818.937256        0.0  400.999756      300.999756       4.0         14618.934814                 1.0              True
4   15219.937012   15018.937256  99.874756  15219.937012    0.010000  15018.937256        0.0  200.999756      200.999756       5.0         14618.934814                 1.0             False
5   15619.937256   15018.939756  99.874756  15619.937256  601.000000  15018.939756        0.0  600.997500      501.000000       6.0         14618.934814                 1.0              True
6   15619.937256   15218.937012  99.874756  15619.937256  301.003750  15218.937012        0.0  401.000244      401.000000       7.0         15619.937256                 1.0              True
7   15619.937256   15218.937256  99.874756  15619.937256  149.501875  15218.937256        0.0  401.000000      301.000000       8.0         15619.937256                 1.0             False
8   15619.937256   15318.937256  99.874756  15619.937256   73.750938  15318.937256        0.0  301.000000      201.000000       4.0         15619.937256                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:20]  --------------------------------------------------------------------------------
[09/27 16:18:20]  Iteration: 3 (0 solution, 2 counterexamples)
[09/27 16:18:20]  Generator returned sat in 0.011964 secs.
[09/27 16:18:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:20]  Improved gap from 0.0411279296875 to 10.9375
[09/27 16:18:20]  Improved number of small numbers from 101 to 111 out of a max of 111
[09/27 16:18:20]  Verifer returned sat in 0.406201 secs.
[09/27 16:18:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13416.438965   13016.439209   99.874512  13416.438965    0.031250  13016.439209        0.0  399.999756      299.999756       5.0         13016.439209                -1.0                -1
1   13416.438965   13216.439209   99.874512  13416.438965    0.015381  13216.439209        0.0  199.999756      199.999756       3.0         13416.438965                 1.0             False
2   13416.438965   13216.439209   99.874512  13416.438965  199.984375  13216.439209        0.0  199.999756       99.999756       3.0         13416.438965                 1.0             False
3   13628.439209   13399.267334   99.874512  13628.439209  412.000000  13399.267334        0.0  229.171875      212.000000       4.0         13416.438965                 1.0             False
4   13628.439209   13416.439209   99.874512  13628.439209  205.000000  13416.439209        0.0  212.000000      112.000000       2.0         13628.439209                 1.0             False
5   13628.439209   13578.673828   99.874512  13628.439209  101.500000  13578.673828        0.0   49.765381       12.000000       3.0         13628.439209                 1.0             False
6   13628.439209   13628.439209  176.937012  13628.439209   49.750000  13628.439209        0.0    0.000000      -10.937500       4.0         13628.439209                 1.0             False
7   13652.314209   13652.314209  253.062012  13652.314209   23.875000  13652.314209        0.0    0.000000      -10.937500       1.0         13652.314209                 1.0             False
8   13663.251709   13663.251709  253.062012  13663.251709   10.937500  13663.251709        0.0    0.000000     -100.000000       1.0         13663.251709                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:21]  --------------------------------------------------------------------------------
[09/27 16:18:21]  Iteration: 4 (0 solution, 3 counterexamples)
[09/27 16:18:21]  Generator returned sat in 0.024560 secs.
[09/27 16:18:21]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:21]  Improved gap from 9.81256103515625 to 12.5
[09/27 16:18:22]  Improved number of small numbers from 51 to 79 out of a max of 111
[09/27 16:18:22]  Verifer returned sat in 1.500928 secs.
[09/27 16:18:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14038.219971   13738.157715   99.874512  14038.219971    0.031250  13738.157715        0.0  300.062256      200.062261       4.0         13738.157715                -1.0                -1
1   14038.219971   13938.157471   99.874512  14038.219971  300.031006  13938.157471        0.0  100.062500      100.062261       4.0         13738.157715                 1.0             False
2   14238.157471   13938.157709   99.874512  14238.157471  300.000000  13938.157709        0.0  299.999761      199.999761       5.0         14238.157471                 1.0              True
3   14338.199213   14138.147217   99.874512  14338.199213  400.041504  14138.147217        0.0  200.051996      200.041504       2.0         14238.157471                 1.0             False
4   14338.199213   14238.157471   99.874512  14338.199213  200.020752  14238.157471        0.0  100.041743      100.041504       3.0         14338.199213                 1.0             False
5   14338.199213   14238.157715   99.874512  14338.199213  100.010376  14238.157715        0.0  100.041498        0.041504       3.0         14338.199213                 1.0             False
6   14338.199213   14338.199213  187.333008  14338.199213   50.005188  14338.199213        0.0    0.000000      -12.500000       4.0         14338.199213                 1.0             False
7   14363.201807   14363.201807  262.330322  14363.201807   25.002594  14363.201807        0.0    0.000000      -12.500092       1.0         14363.201807                 1.0             False
8   14375.703104   14375.701904  262.330322  14375.703104   12.501297  14375.701904        0.0    0.001200      -99.998795       1.0         14375.703104                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:23]  --------------------------------------------------------------------------------
[09/27 16:18:23]  Iteration: 5 (0 solution, 4 counterexamples)
[09/27 16:18:23]  Generator returned sat in 0.078699 secs.
[09/27 16:18:23]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:23]  Improved gap from 0.0 to 100
[09/27 16:18:24]  Improved number of small numbers from 65 to 98 out of a max of 111
[09/27 16:18:24]  Verifer returned sat in 1.056859 secs.
[09/27 16:18:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14238.157715   14038.126465 -100.094482  14238.157715    0.031006  14038.126465        0.0  200.031250      200.031011       4.0         14038.126465                -1.0                -1
1   14238.157715   14138.126465 -100.094482  14238.157715    0.031006  14138.126465        0.0  100.031250      100.031011       3.0         14038.126465                 0.0             False
2   14238.157715   14238.126703 -100.094482  14238.157715    0.031006  14238.126703        0.0    0.031011        0.031011       3.0         14038.126465                 0.0             False
3   14297.385963   14249.268820 -100.094482  14297.385963   59.259259  14249.268820        0.0   48.117142      -40.740741       1.0         14038.126465                 0.0             False
4   14338.157709   14338.126703 -100.094482  14338.157709   88.888889  14338.126703        0.0    0.031006      -99.968994       1.0         14038.126465                 0.0             False
5   14471.460037   14438.126709 -100.094482  14471.460037  133.333333  14438.126709        0.0   33.333328      -66.666667       1.0         14038.126465                 0.0             False
6   14638.126709   14638.126465 -100.094482  14638.126709  200.000000  14638.126465        0.0    0.000244        0.000005       1.0         14038.126465                 0.0             False
7   14938.126465   14738.095703 -100.094482  14938.126465  300.000000  14738.095703        0.0  200.030762      199.999761       1.0         14038.126465                 0.0             False
8   15188.095703   14738.126709 -100.094482  15188.095703  450.000000  14738.126709        0.0  449.968994      349.969000       2.0         14038.126465                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:25]  --------------------------------------------------------------------------------
[09/27 16:18:25]  Iteration: 6 (0 solution, 5 counterexamples)
[09/27 16:18:25]  Generator returned sat in 0.225449 secs.
[09/27 16:18:25]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:18:26]  Improved gap from 0.0 to 100
[09/27 16:18:26]  Improved number of small numbers from 40 to 111 out of a max of 111
[09/27 16:18:26]  Verifer returned sat in 0.848064 secs.
[09/27 16:18:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14208.450684   13408.419922  429.612305  14208.450684    0.015625  13408.419922        0.0  800.030762      700.030762       5.0         13408.419922                -1.0                -1
1   14208.450684   13608.419922  429.612305  14208.450684    0.015625  13608.419922        0.0  600.030762      600.030762       5.0         13408.419922                 0.0             False
2   14208.450684   13608.419922  429.612305  14208.450684    0.015625  13608.419922        0.0  600.030762      500.030762       5.0         13408.419922                 0.0             False
3   14208.450684   13708.419922  429.612305  14208.450684  400.030762  13708.419922        0.0  500.030762      400.030762       6.0         13408.419922                 0.0             False
4   14208.450684   13908.419922  429.612305  14208.450684  400.030762  13908.419922        0.0  300.030762      300.030762       7.0         13408.419922                 1.0              True
5   14308.450684   13908.435547  429.612305  14308.450684  400.030762  13908.435547        0.0  400.015137      300.030762       7.0         13408.419922                 1.0              True
6   14308.466309   14008.419922  429.612305  14308.466309  400.030762  14008.419922        0.0  300.046387      200.046387       7.0         13408.419922                 1.0              True
7   14408.450684   14208.419922  429.612305  14408.450684  400.030762  14208.419922        0.0  200.030762      200.030762       8.0         13408.419922                 1.0              True
8   14608.450684   14208.419922  429.612305  14608.450684  400.030762  14208.419922        0.0  400.030762      300.030762       8.0         13408.419922                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:26]  --------------------------------------------------------------------------------
[09/27 16:18:26]  Iteration: 7 (0 solution, 6 counterexamples)
[09/27 16:18:27]  Generator returned sat in 0.641287 secs.
[09/27 16:18:27]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:27]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/27 16:18:27]  Verifer returned sat in 0.184189 secs.
[09/27 16:18:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14208.419922   13408.419922  429.612305  14208.419922     0.015625  13408.419922        0.0   800.000000      700.000000       7.0         13408.419922                -1.0                -1
1   14208.419922   13608.419922  429.612305  14208.419922     0.015625  13608.419922        0.0   600.000000      600.000000       8.0         13408.419922                 0.0             False
2   14208.419922   13608.419922  429.612305  14208.419922     0.015625  13608.419922        0.0   600.000000      500.000000       8.0         13408.419922                 0.0             False
3   14208.419922   13708.419922  429.612305  14208.419922    75.750000  13708.419922        0.0   500.000000      400.000000       9.0         13408.419922                 0.0             False
4   14208.419922   13908.419922  429.612305  14208.419922   150.500000  13908.419922        0.0   300.000000      300.000000       9.0         13408.419922                 1.0              True
5   14208.419922   13908.435547  429.612305  14208.419922   300.000000  13908.435547        0.0   299.984375      200.000000       9.0         13408.419922                 1.0              True
6   14507.435547   14008.419922  429.612305  14507.435547   599.000000  14008.419922        0.0   499.015625      399.015625       9.0         13408.419922                 1.0              True
7   15205.419922   14208.419922  429.612305  15205.419922  1197.000000  14208.419922        0.0   997.000000      997.000000       9.0         13408.419922                 1.0              True
8   16601.419922   14208.419922  429.612305  16601.419922  2393.000000  14208.419922        0.0  2393.000000     2293.000000       9.0         13408.419922                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:28]  --------------------------------------------------------------------------------
[09/27 16:18:28]  Iteration: 8 (0 solution, 7 counterexamples)
[09/27 16:18:28]  Generator returned sat in 0.218890 secs.
[09/27 16:18:28]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:28]  Verifer returned unsat in 0.206385 secs.
[09/27 16:18:28]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:28]  --------------------------------------------------------------------------------
[09/27 16:18:28]  Iteration: 9 (1 solution, 7 counterexamples)
[09/27 16:18:29]  Generator returned sat in 0.126290 secs.
[09/27 16:18:29]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:29]  Improved gap from 0.0 to 0
[09/27 16:18:29]  Improved number of small numbers from 82 to 95 out of a max of 111
[09/27 16:18:29]  Verifer returned sat in 0.658515 secs.
[09/27 16:18:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14809.412354   14308.413818  429.612061  14809.412354    0.001250  14308.413818        0.0  500.998535      400.998682       3.0         14308.413818                -1.0                -1
1   14809.412354   14508.413672  429.612061  14809.412354    0.001250  14508.413672        0.0  300.998682      300.998682       4.0         14308.413818                 0.0             False
2   14809.412354   14508.413672  429.612061  14809.412354    0.001250  14508.413672        0.0  300.998682      200.998682       4.0         14308.413818                 1.0              True
3   14809.412354   14608.413818  429.612061  14809.412354    0.001465  14608.413818        0.0  200.998535      100.998682       4.0         14308.413818                 1.0             False
4   14809.412354   14708.413672  429.612061  14809.412354  151.000000  14708.413672        0.0  100.998682        0.998682       5.0         14308.413818                 1.0              True
5   14809.413672   14809.413672  528.612061  14809.413672  101.000000  14809.413672        0.0    0.000000        0.000000       1.0         14809.413672                 1.0              True
6   14809.423672   14809.423672  628.602051  14809.423672    0.010000  14809.423672        0.0    0.000000       -0.000010       1.0         14809.423672                 0.0             False
7   14809.433672   14809.433672  728.592041  14809.433672    0.010000  14809.433672        0.0    0.000000       -0.000020       1.0         14809.423672                 0.0             False
8   14809.443672   14809.443672  828.582031  14809.443672    0.010000  14809.443672        0.0    0.000000       -0.000029       1.0         14809.423672                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:30]  --------------------------------------------------------------------------------
[09/27 16:18:30]  Iteration: 10 (1 solution, 8 counterexamples)
[09/27 16:18:30]  Generator returned sat in 0.153695 secs.
[09/27 16:18:30]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:31]  Verifer returned unsat in 0.350882 secs.
[09/27 16:18:31]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:31]  --------------------------------------------------------------------------------
[09/27 16:18:31]  Iteration: 11 (2 solution, 8 counterexamples)
[09/27 16:18:31]  Generator returned sat in 0.243161 secs.
[09/27 16:18:31]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:32]  Improved gap from 0.0 to 0
[09/27 16:18:33]  Improved number of small numbers from 56 to 86 out of a max of 111
[09/27 16:18:33]  Verifer returned sat in 1.809725 secs.
[09/27 16:18:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   14926.415527   14526.417969  311.607910  14926.415527    0.002441  14526.417969        0.0  399.997559      399.997559       4.0         14526.417969                -1.0                -1
1   14926.415527   14626.415527  311.607910  14926.415527    0.002686  14626.415527        0.0  300.000000      299.997559       5.0         14526.417969                 0.0             False
2   14926.415527   14626.418057  311.607910  14926.415527  299.997559  14626.418057        0.0  299.997471      199.997559       6.0         14526.417969                 0.0             False
3   15026.418057   14826.417969  311.607910  15026.418057  400.000000  14826.417969        0.0  200.000088      200.000088       7.0         14526.417969                 0.0             False
4   15026.418057   14926.417969  311.607910  15026.418057  151.000000  14926.417969        0.0  100.000088      100.000088       2.0         15026.418057                 1.0              True
5   15026.418057   15026.405762  311.607910  15026.418057    0.010000  15026.405762        0.0    0.012295        0.000088       3.0         15026.418057                 0.0             False
6   15026.418057   15026.418057  411.607666  15026.418057    0.010000  15026.418057        0.0    0.000000       -0.000156       4.0         15026.418057                 0.0             False
7   15026.428057   15026.428057  511.597656  15026.428057    0.010000  15026.428057        0.0    0.000000       -0.000166       1.0         15026.418057                 0.0             False
8   15026.438057   15026.438057  611.587646  15026.438057    0.010000  15026.438057        0.0    0.000000       -0.000176       1.0         15026.418057                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:34]  --------------------------------------------------------------------------------
[09/27 16:18:34]  Iteration: 12 (2 solution, 9 counterexamples)
[09/27 16:18:34]  Generator returned sat in 0.024906 secs.
[09/27 16:18:34]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:36]  Improved gap from 0.0 to 0
[09/27 16:18:36]  Improved number of small numbers from 56 to 83 out of a max of 111
[09/27 16:18:36]  Verifer returned sat in 2.381775 secs.
[09/27 16:18:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13022.778473   12621.770996  484.577881  13022.778473    0.009766  12621.770996        0.0  401.007477      401.007477       8.0         12621.770996                -1.0                -1
1   13022.778473   12721.770996  484.577881  13022.778473    0.009766  12721.770996        0.0  301.007477      301.007477       8.0         12621.770996                 1.0             False
2   13022.778473   12821.770973  484.577881  13022.778473    0.010000  12821.770973        0.0  201.007500      201.007477       8.0         12621.770996                 1.0              True
3   13022.778473   12921.768311  484.577881  13022.778473    0.010000  12921.768311        0.0  101.010163      101.007477       6.0         12621.770996                 1.0              True
4   13022.778473   12921.770996  484.577881  13022.778473    0.010000  12921.770996        0.0  101.007477        1.007477       7.0         12621.770996                 0.0             False
5   13022.778473   13022.778473  531.571533  13022.778473  101.005000  13022.778473        0.0    0.000000      -51.998870       8.0         12621.770996                 1.0              True
6   13174.784723   13174.777223  531.571533  13174.784723  152.006250  13174.777223        0.0    0.007500        0.007380       1.0         12621.770996                 1.0              True
7   13174.787223   13174.787223  631.551758  13174.787223    0.010000  13174.787223        0.0    0.000000       -0.009896       1.0         13174.787223                 0.0             False
8   13174.797223   13174.797119  631.551758  13174.797223    0.010000  13174.797119        0.0    0.000104      -99.999896       1.0         13174.787223                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:37]  --------------------------------------------------------------------------------
[09/27 16:18:37]  Iteration: 13 (2 solution, 10 counterexamples)
[09/27 16:18:37]  Generator returned sat in 0.093798 secs.
[09/27 16:18:37]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:39]  Improved gap from 0.00125 to 0
[09/27 16:18:40]  Improved number of small numbers from 57 to 93 out of a max of 111
[09/27 16:18:40]  Verifer returned sat in 3.064132 secs.
[09/27 16:18:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12653.170410   12653.168945  331.576904  12653.170410    0.001250  12653.168945        0.0   0.001465        0.001465       7.0         12653.168945                -1.0                -1
1   12653.171631   12653.171631  331.581787  12653.171631    0.002686  12653.171631        0.0   0.000000      -99.992432       1.0         12653.168945                 1.0             False
2   12853.164062   12853.164062  331.581787  12853.164062  199.992432  12853.164062        0.0   0.000000        0.000000       1.0         12653.168945                 0.0             False
3   13053.155518   12953.164062  331.581787  13053.155518  199.991455  12953.164062        0.0  99.991455       99.991455       1.0         13053.155518                 0.0             False
4   13053.155518   13053.154173  331.581787  13053.155518    0.010000  13053.154173        0.0   0.001345       -0.008545       2.0         13053.155518                 0.0             False
5   13053.164173   13053.164173  431.581543  13053.164173    0.010000  13053.164173        0.0   0.000000       -0.000134       1.0         13053.155518                 0.0             False
6   13053.174173   13053.174173  531.571533  13053.174173    0.010000  13053.174173        0.0   0.000000       -0.000144       1.0         13053.155518                 0.0             False
7   13053.184173   13053.184173  631.551758  13053.184173    0.010000  13053.184173        0.0   0.000000       -0.009919       1.0         13053.155518                 0.0             False
8   13053.194173   13053.194173  731.542969  13053.194173    0.010000  13053.194173        0.0   0.000000       -0.008708       1.0         13053.155518                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:41]  --------------------------------------------------------------------------------
[09/27 16:18:41]  Iteration: 14 (2 solution, 11 counterexamples)
[09/27 16:18:41]  Generator returned sat in 0.375597 secs.
[09/27 16:18:41]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:18:42]  Improved gap from 0.0 to 0
[09/27 16:18:42]  Improved number of small numbers from 49 to 111 out of a max of 111
[09/27 16:18:42]  Verifer returned sat in 0.541778 secs.
[09/27 16:18:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12338.253662   12338.223145   646.522705  12338.253662    0.030273  12338.223145        0.0    0.030518        0.030518       2.0         12338.223145                -1.0                -1
1   12338.253662   12338.223389   646.522705  12338.253662    0.015137  12338.223389        0.0    0.030273      -99.969482       3.0         12338.253662                 0.0             False
2   12737.238525   12438.223145   646.522705  12737.238525  399.015137  12438.223145        0.0  299.015381      199.015381       1.0         12338.253662                 0.0             False
3   12737.238525   12638.223145   646.522705  12737.238525    0.015137  12638.223145        0.0   99.015381       99.015381       2.0         12737.238525                 0.0             False
4   12737.238525   12737.223389   646.522705  12737.238525    1.000000  12737.223389        0.0    0.015137       -0.984619       3.0         12737.238525                 0.0             False
5   12738.223389   12738.223389   745.522461  12738.223389    1.000000  12738.223389        0.0    0.000000       -1.000000       1.0         12737.238525                 0.0             False
6   12739.223389   12739.223389   845.522461  12739.223389    1.000000  12739.223389        0.0    0.000000        0.000000       1.0         12737.238525                 0.0             False
7   12740.223389   12740.223389   944.522461  12740.223389    1.000000  12740.223389        0.0    0.000000        0.000000       1.0         12737.238525                 0.0             False
8   12741.223389   12741.223389  1042.537354  12741.223389    1.000000  12741.223389        0.0    0.000000       -0.985107       1.0         12737.238525                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:43]  --------------------------------------------------------------------------------
[09/27 16:18:43]  Iteration: 15 (2 solution, 12 counterexamples)
[09/27 16:18:43]  Generator returned sat in 0.101281 secs.
[09/27 16:18:43]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:18:44]  Improved number of small numbers from 76 to 90 out of a max of 110
[09/27 16:18:44]  Verifer returned sat in 0.557134 secs.
[09/27 16:18:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12338.253418   12338.222900  646.522705  12338.253418    0.030029  12338.222900        0.0    0.030518        0.030518       4.0         12338.222900                -1.0                -1
1   12338.253418   12338.223389  646.522705  12338.253418    0.015137  12338.223389        0.0    0.030029      -99.969482       3.0         12338.253418                 1.0             False
2   12638.889893   12438.222900  646.522705  12638.889893  300.666504  12438.222900        0.0  200.666992      100.666992       1.0         12338.253418                 1.0             False
3   12638.889893   12589.723145  646.522705  12638.889893   24.083338  12589.723145        0.0   49.166748        0.666992       2.0         12638.889893                 0.0             False
4   12638.889893   12638.889791  646.522705  12638.889893   49.166677  12638.889791        0.0    0.000102      -99.333008       3.0         12638.889893                 1.0             False
5   12738.223145   12738.223145  646.522705  12738.223145   99.333354  12738.223145        0.0    0.000000      -99.999756       1.0         12638.889893                 1.0             False
6   12937.889852   12937.889791  646.522705  12937.889852  199.666707  12937.889791        0.0    0.000061       -0.333049       1.0         12638.889893                 0.0             False
7   13338.223206   12938.223145  646.522705  13338.223206  400.333415  12938.223145        0.0  400.000061      300.000305       1.0         12638.889893                 0.0             False
8   13739.889974   13138.222900  646.522705  13739.889974  801.666829  13138.222900        0.0  601.667074      601.667074       2.0         12638.889893                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:44]  --------------------------------------------------------------------------------
[09/27 16:18:44]  Iteration: 16 (2 solution, 13 counterexamples)
[09/27 16:18:45]  Generator returned sat in 0.457197 secs.
[09/27 16:18:45]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:18:46]  Improved gap from 0.0 to 21.875
[09/27 16:18:46]  Improved number of small numbers from 46 to 111 out of a max of 111
[09/27 16:18:46]  Verifer returned sat in 1.081571 secs.
[09/27 16:18:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13098.104736   12617.044922  795.848145  13098.104736    0.014893  12617.044922        0.0  481.059814      460.669922       3.0         12617.044922                -1.0                -1
1   13098.104736   12656.419922  795.848145  13098.104736    0.014893  12656.419922        0.0  441.684814      360.669922       3.0         12617.044922                 0.0             False
2   13098.104736   12837.434814  795.848145  13098.104736    0.014893  12837.434814        0.0  260.669922      260.669922       4.0         12617.044922                 0.0             False
3   13098.104736   12937.074707  795.848145  13098.104736    0.014893  12937.074707        0.0  161.030029      160.669922       5.0         12617.044922                 0.0             False
4   13098.104736   12976.419922  795.848145  13098.104736  161.014893  12976.419922        0.0  121.684814       60.669922       6.0         12617.044922                 1.0              True
5   13137.419922   13055.934814  795.848145  13137.419922  161.000000  13055.934814        0.0   81.485107       -0.014893       6.0         13137.419922                 1.0              True
6   13137.434814   13137.434814  854.098389  13137.434814   81.500000  13137.434814        0.0    0.000000      -41.749756       1.0         13137.434814                 1.0             False
7   13179.184814   13179.184814  932.223145  13179.184814   41.750000  13179.184814        0.0    0.000000      -21.875000       1.0         13179.184814                 0.0             False
8   13201.059814   13201.059814  932.223389  13201.059814   21.875000  13201.059814        0.0    0.000000      -99.999756       1.0         13201.059814                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:46]  --------------------------------------------------------------------------------
[09/27 16:18:46]  Iteration: 17 (2 solution, 14 counterexamples)
[09/27 16:18:48]  Generator returned sat in 0.869794 secs.
[09/27 16:18:48]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:48]  Improved gap from 0.0 to 0
[09/27 16:18:49]  Improved number of small numbers from 63 to 72 out of a max of 111
[09/27 16:18:49]  Verifer returned sat in 1.106047 secs.
[09/27 16:18:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   13338.001709   13337.412314  297.266357  13338.001709    0.0025  13337.412314        0.0  0.589395       -0.002393       2.0         13337.412314                -1.0                -1
1   13338.004314   13338.004314  396.860840  13338.004314    0.5920  13338.004314        0.0  0.000000       -0.405305       1.0         13337.412314                 0.0             False
2   13338.409814   13338.409814  496.860596  13338.409814    0.4055  13338.409814        0.0  0.000000       -0.000049       1.0         13338.409814                 0.0             False
3   13338.812814   13338.812814  596.457520  13338.812814    0.4030  13338.812814        0.0  0.000000       -0.000125       1.0         13338.812814                 0.0             False
4   13339.213314   13339.213314  695.848145  13339.213314    0.4005  13339.213314        0.0  0.000000       -0.209000       1.0         13339.213314                 0.0             False
5   13339.422314   13339.422314  795.848145  13339.422314    0.2090  13339.422314        0.0  0.000000        0.000000       1.0         13339.422314                 0.0             False
6   13339.434814   13339.434814  895.835449  13339.434814    0.0125  13339.434814        0.0  0.000000       -0.000195       1.0         13339.434814                 0.0             False
7   13339.444814   13339.444814  995.815674  13339.444814    0.0100  13339.444814        0.0  0.000000       -0.009971       1.0         13339.444814                 0.0             False
8   13339.454814   13339.454814  995.815674  13339.454814    0.0100  13339.454814        0.0  0.000000      -99.999971       1.0         13339.444814                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:49]  --------------------------------------------------------------------------------
[09/27 16:18:49]  Iteration: 18 (2 solution, 15 counterexamples)
[09/27 16:18:50]  Generator returned sat in 0.229210 secs.
[09/27 16:18:50]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:50]  Verifer returned unsat in 0.294458 secs.
[09/27 16:18:50]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:50]  --------------------------------------------------------------------------------
[09/27 16:18:50]  Iteration: 19 (3 solution, 15 counterexamples)
[09/27 16:18:51]  Generator returned sat in 0.162624 secs.
[09/27 16:18:51]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:51]  Improved number of small numbers from 58 to 110 out of a max of 110
[09/27 16:18:51]  Verifer returned sat in 0.424124 secs.
[09/27 16:18:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12839.373291   12240.403076  295.907227  12839.373291    0.029785  12240.403076        0.0  598.970215      598.970215       3.0         12240.403076                -1.0                -1
1   12839.373291   12340.403076  295.907227  12839.373291  298.999756  12340.403076        0.0  498.970215      498.970215       4.0         12240.403076                 0.0             False
2   12839.373291   12340.403076  295.907227  12839.373291  299.000000  12340.403076        0.0  498.970215      398.970215       4.0         12240.403076                 0.0             False
3   12839.373291   12440.403076  295.907227  12839.373291  299.000000  12440.403076        0.0  398.970215      298.970215       5.0         12240.403076                 0.0             False
4   12839.373291   12540.403076  295.907227  12839.373291  299.000000  12540.403076        0.0  298.970215      198.970215       6.0         12240.403076                 1.0              True
5   12839.403076   12740.373291  295.907227  12839.403076  299.000000  12740.373291        0.0   99.029785       99.000000       6.0         12240.403076                 1.0              True
6   13339.328613   12740.403076  295.907227  13339.328613  598.955322  12740.403076        0.0  598.925537      498.925537       7.0         12240.403076                 1.0              True
7   13339.328613   12939.851074  295.907227  13339.328613  449.000000  12939.851074        0.0  399.477539      398.925537       2.0         13339.328613                 1.0              True
8   13339.328613   12940.403076  295.907227  13339.328613  399.447998  12940.403076        0.0  398.925537      298.925537       3.0         13339.328613                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:52]  --------------------------------------------------------------------------------
[09/27 16:18:52]  Iteration: 20 (3 solution, 16 counterexamples)
[09/27 16:18:54]  Generator returned sat in 1.862629 secs.
[09/27 16:18:54]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:18:54]  Improved gap from 0.0 to 100
[09/27 16:18:55]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/27 16:18:55]  Verifer returned sat in 0.408907 secs.
[09/27 16:18:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12141.660400   11741.660400  295.906982  12141.660400    0.029541  11741.660400        0.0  400.000000      400.000000       5.0         11741.660400                -1.0                -1
1   12141.660400   11840.615967  295.906982  12141.660400    0.029785  11840.615967        0.0  301.044434      300.000000       6.0         11741.660400                 0.0             False
2   12141.660400   11940.630859  295.906982  12141.660400  301.014893  11940.630859        0.0  201.029541      200.000000       7.0         11741.660400                 0.0             False
3   12339.630615   11941.660400  295.906982  12339.630615  398.999756  11941.660400        0.0  397.970215      297.970215       8.0         11741.660400                 0.0             False
4   12340.660400   12041.660400  295.906982  12340.660400  399.000000  12041.660400        0.0  299.000000      199.000000       9.0         11741.660400                 1.0              True
5   12442.749268   12141.660400  295.906982  12442.749268  401.088867  12141.660400        0.0  301.088867      201.088867       9.0         11741.660400                 1.0              True
6   12542.719482   12341.660400  295.906982  12542.719482  401.059082  12341.660400        0.0  201.059082      201.059082       2.0         12542.719482                 1.0              True
7   12741.719482   12341.690186  295.906982  12741.719482  400.059082  12341.690186        0.0  400.029297      300.059082       3.0         12741.719482                 0.0             False
8   12741.719482   12442.719482  295.906982  12741.719482  399.059082  12442.719482        0.0  299.000000      200.059082       4.0         12741.719482                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:55]  --------------------------------------------------------------------------------
[09/27 16:18:55]  Iteration: 21 (3 solution, 17 counterexamples)
[09/27 16:18:56]  Generator returned sat in 0.439824 secs.
[09/27 16:18:56]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:56]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:18:56]  Verifer returned sat in 0.245883 secs.
[09/27 16:18:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12161.651611   11693.636475  295.906982  12161.651611    0.029297  11693.636475        0.0  468.015137      467.328613       5.0         11693.636475                -1.0                -1
1   12161.651611   11694.322998  295.906982  12161.651611    0.029785  11694.322998        0.0  467.328613      367.328613       6.0         11693.636475                 0.0             False
2   12161.651611   11894.308350  295.906982  12161.651611  300.029541  11894.308350        0.0  267.343262      267.328613       7.0         11693.636475                 0.0             False
3   12194.338135   11894.322998  295.906982  12194.338135  300.029785  11894.322998        0.0  300.015137      200.015137       8.0         11693.636475                 0.0             False
4   12194.352783   12041.660400  295.906982  12194.352783  300.029785  12041.660400        0.0  152.692383      100.029785       9.0         11693.636475                 1.0              True
5   12561.666504   12161.651611  295.906982  12561.666504  520.006104  12161.651611        0.0  400.014893      367.343506       9.0         11693.636475                 1.0              True
6   12561.666504   12294.322998  295.906982  12561.666504  400.014893  12294.322998        0.0  267.343506      267.343506       2.0         12561.666504                 1.0              True
7   12694.322998   12341.690186  295.906982  12694.322998  400.000000  12341.690186        0.0  352.632812      300.000000       3.0         12694.322998                 0.0             False
8   12694.322998   12494.322998  295.906982  12694.322998  300.029785  12494.322998        0.0  200.000000      200.000000       4.0         12694.322998                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:57]  --------------------------------------------------------------------------------
[09/27 16:18:57]  Iteration: 22 (3 solution, 18 counterexamples)
[09/27 16:18:57]  Generator returned sat in 0.061179 secs.
[09/27 16:18:57]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:58]  Improved number of small numbers from 100 to 110 out of a max of 110
[09/27 16:18:58]  Verifer returned sat in 0.282475 secs.
[09/27 16:18:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12094.322998   11667.663330  295.906738  12094.322998    0.029297  11667.663330        0.0  426.659668      400.000000       5.0         11667.663330                -1.0                -1
1   12094.322998   11694.322998  295.906738  12094.322998    0.029541  11694.322998        0.0  400.000000      300.000000       6.0         11667.663330                 0.0             False
2   12094.322998   11827.646729  295.906738  12094.322998  266.676270  11827.646729        0.0  266.676270      200.000000       7.0         11667.663330                 0.0             False
3   12094.322998   11894.322998  295.906738  12094.322998  266.676270  11894.322998        0.0  200.000000      100.000000       8.0         11667.663330                 0.0             False
4   12234.312500   12014.328857  295.906738  12234.312500  339.989502  12014.328857        0.0  219.983643      139.989502       9.0         11667.663330                 1.0              True
5   12494.337646   12094.322998  295.906738  12494.337646  480.008789  12094.322998        0.0  400.014648      300.014648       9.0         11667.663330                 1.0              True
6   12494.337646   12294.322998  295.906738  12494.337646  400.014404  12294.322998        0.0  200.014648      200.014648       2.0         12494.337646                 1.0              True
7   12694.322998   12354.318359  295.906738  12694.322998  400.000000  12354.318359        0.0  340.004639      300.000000       3.0         12694.322998                 0.0             False
8   12694.322998   12394.322998  295.906738  12694.322998  339.989502  12394.322998        0.0  300.000000      200.000000       4.0         12694.322998                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:18:58]  --------------------------------------------------------------------------------
[09/27 16:18:58]  Iteration: 23 (3 solution, 19 counterexamples)
[09/27 16:18:59]  Generator returned sat in 0.062536 secs.
[09/27 16:18:59]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:18:59]  Improved number of small numbers from 48 to 110 out of a max of 110
[09/27 16:18:59]  Verifer returned sat in 0.371727 secs.
[09/27 16:18:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12518.878662   11656.352539  295.906738  12518.878662    0.014648  11656.352539        0.0  862.526123      862.526123       5.0         11656.352539                -1.0                -1
1   12518.878662   11716.352539  295.906738  12518.878662    0.014648  11716.352539        0.0  802.526123      762.526123       5.0         11656.352539                 0.0             False
2   12518.878662   11815.345459  295.906738  12518.878662    0.014648  11815.345459        0.0  703.533203      662.526123       6.0         11656.352539                 0.0             False
3   12518.878662   11915.345215  295.906738  12518.878662    0.014893  11915.345215        0.0  603.533447      562.526123       7.0         11656.352539                 0.0             False
4   12518.878662   11957.359863  295.906738  12518.878662  258.992676  11957.359863        0.0  561.518799      462.526123       8.0         11656.352539                 0.0             False
5   12518.878662   12056.352783  295.906738  12518.878662  362.510986  12056.352783        0.0  462.525879      362.526123       9.0         11656.352539                 1.0              True
6   12518.878662   12156.352539  295.906738  12518.878662  362.510986  12156.352539        0.0  362.526123      262.526123       9.0         11656.352539                 1.0              True
7   12518.878662   12356.352539  295.906738  12518.878662  362.510986  12356.352539        0.0  162.526123      162.526123       9.0         11656.352539                 1.0              True
8   12955.841553   12394.322754  295.906738  12955.841553  599.489014  12394.322754        0.0  561.518799      499.489014       9.0         11656.352539                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:00]  --------------------------------------------------------------------------------
[09/27 16:19:00]  Iteration: 24 (3 solution, 20 counterexamples)
[09/27 16:19:02]  Generator returned sat in 1.304618 secs.
[09/27 16:19:02]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:02]  Improved gap from 0.0 to 26.5625
[09/27 16:19:03]  Improved number of small numbers from 109 to 111 out of a max of 111
[09/27 16:19:03]  Verifer returned sat in 0.987570 secs.
[09/27 16:19:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11411.621826   11358.293213  246.493164  11411.621826   50.645508  11358.293213        0.0   53.328613        0.000244       3.0         11358.293213                -1.0                -1
1   11411.621826   11411.621826  295.906738  11411.621826   50.615723  11411.621826        0.0    0.000000      -50.586182       4.0         11411.621826                 0.0             False
2   11462.208008   11462.208008  369.344238  11462.208008   50.586182  11462.208008        0.0    0.000000      -26.562500       1.0         11462.208008                 0.0             False
3   11688.770508   11577.925049  369.344238  11688.770508  226.562500  11577.925049        0.0  110.845459      100.000000       1.0         11462.208008                 0.0             False
4   11688.770508   11595.701416  369.344238  11688.770508  110.815918  11595.701416        0.0   93.069092        0.000000       2.0         11688.770508                 0.0             False
5   11688.770508   11688.770508  442.781494  11688.770508   93.039795  11688.770508        0.0    0.000000      -26.562744       3.0         11688.770508                 0.0             False
6   11803.051758   11735.530518  442.781494  11803.051758  114.281250  11735.530518        0.0   67.521240      -12.281494       1.0         11688.770508                 0.0             False
7   11815.333252   11815.333252  516.218994  11815.333252   79.802734  11815.333252        0.0    0.000000      -26.562500       1.0         11815.333252                 0.0             False
8   11926.149170   11841.895752  516.218994  11926.149170  110.815918  11841.895752        0.0   84.253418      -15.746582       1.0         11815.333252                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:03]  --------------------------------------------------------------------------------
[09/27 16:19:03]  Iteration: 25 (3 solution, 21 counterexamples)
[09/27 16:19:04]  Generator returned sat in 0.581661 secs.
[09/27 16:19:04]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:05]  Improved gap from 0.0 to 14.0625
[09/27 16:19:05]  Improved number of small numbers from 67 to 111 out of a max of 111
[09/27 16:19:05]  Verifer returned sat in 0.598716 secs.
[09/27 16:19:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11724.096680   11330.008545  369.344238  11724.096680    0.029297  11330.008545        0.0  394.088135      394.059082       6.0         11330.008545                -1.0                -1
1   11724.096680   11330.037842  369.344238  11724.096680  394.058594  11330.037842        0.0  394.058838      294.059082       6.0         11330.008545                 1.0             False
2   11724.096680   11430.037598  369.344238  11724.096680  394.029541  11430.037598        0.0  294.059082      194.059082       3.0         11724.096680                 1.0              True
3   11824.037598   11630.037598  369.344238  11824.037598  394.000000  11630.037598        0.0  194.000000      194.000000       4.0         11824.037598                 0.0             False
4   11828.037598   11730.037598  369.344238  11828.037598  198.000000  11730.037598        0.0   98.000000       98.000000       2.0         11828.037598                 0.0             False
5   11830.037598   11779.008371  369.344238  11830.037598  100.000000  11779.008371        0.0   51.029227        0.000000       3.0         11830.037598                 0.0             False
6   11830.037598   11830.037598  455.281738  11830.037598   51.000000  11830.037598        0.0    0.000000      -14.062500       2.0         11830.037598                 0.0             False
7   11856.537598   11856.537598  528.781738  11856.537598   26.500000  11856.537598        0.0    0.000000      -14.062500       1.0         11856.537598                 0.0             False
8   11870.787598   11870.600098  528.781738  11870.787598   14.250000  11870.600098        0.0    0.187500      -99.812500       1.0         11870.787598                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:05]  --------------------------------------------------------------------------------
[09/27 16:19:05]  Iteration: 26 (3 solution, 22 counterexamples)
[09/27 16:19:07]  Generator returned sat in 0.777400 secs.
[09/27 16:19:07]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:08]  Improved number of small numbers from 40 to 110 out of a max of 110
[09/27 16:19:08]  Verifer returned sat in 0.651785 secs.
[09/27 16:19:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12226.165039   11526.135498  173.246094  12226.165039    0.014648  11526.135498        0.0  700.029541      700.029541       9.0         11526.135498                -1.0                -1
1   12226.165039   11626.135498  173.246094  12226.165039    0.014648  11626.135498        0.0  600.029541      600.029541       4.0         11526.135498                 1.0             False
2   12226.165039   11726.135498  173.246094  12226.165039    0.014648  11726.135498        0.0  500.029541      500.029541       4.0         11526.135498                 0.0             False
3   12226.165039   11726.135498  173.246094  12226.165039    0.014648  11726.135498        0.0  500.029541      400.029541       4.0         11526.135498                 0.0             False
4   12226.165039   11826.150391  173.246094  12226.165039  101.007324  11826.150391        0.0  400.014648      300.029541       5.0         11526.135498                 0.0             False
5   12226.165039   11975.643066  173.246094  12226.165039  201.014893  11975.643066        0.0  250.521973      200.029541       6.0         11526.135498                 1.0              True
6   12226.165039   12126.135498  173.246094  12226.165039  250.507568  12126.135498        0.0  100.029541      100.029541       7.0         11526.135498                 1.0              True
7   12527.135498   12226.135498  173.246094  12527.135498  401.000000  12226.135498        0.0  301.000000      301.000000       8.0         11526.135498                 1.0              True
8   12627.120605   12226.135498  173.246094  12627.120605  400.985107  12226.135498        0.0  400.985107      300.985107       8.0         12627.120605                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:08]  --------------------------------------------------------------------------------
[09/27 16:19:08]  Iteration: 27 (3 solution, 23 counterexamples)
[09/27 16:19:10]  Generator returned sat in 1.078529 secs.
[09/27 16:19:10]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:14]  Improved gap from 0.0 to 0
[09/27 16:19:14]  Improved number of small numbers from 78 to 83 out of a max of 111
[09/27 16:19:14]  Verifer returned sat in 4.533192 secs.
[09/27 16:19:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12074.613936   11773.611816  -74.230469  12074.613936    0.001221  11773.611816        0.0  301.002119      301.002119       3.0         11773.611816                -1.0                -1
1   12074.613936   11773.611816  -74.230469  12074.613936    0.001221  11773.611816        0.0  301.002119      201.002119       3.0         11773.611816                 0.0             False
2   12074.613936   11973.610811  -74.230469  12074.613936    0.001221  11973.610811        0.0  101.003125      101.002119       4.0         11773.611816                 0.0             False
3   12074.613936   11973.612061  -74.230469  12074.613936    0.001221  11973.612061        0.0  101.001875        1.002119       5.0         11773.611816                 0.0             False
4   12074.613936   12074.613936   24.757568  12074.613936  101.000732  12074.613936        0.0    0.000000       -0.009844       6.0         11773.611816                 0.0             False
5   12074.623936   12074.623936   73.245850  12074.623936    0.010000  12074.623936        0.0    0.000000      -51.511562       1.0         12074.623936                 1.0              True
6   12126.135498   12126.135498  173.245850  12126.135498   51.511562  12126.135498        0.0    0.000000        0.000000       1.0         12074.623936                 0.0             False
7   12229.152998   12126.136963  173.245850  12229.152998  103.017500  12126.136963        0.0  103.016035        3.017500       1.0         12074.623936                 0.0             False
8   12229.152998   12229.152998  173.245850  12229.152998   78.270264  12229.152998        0.0    0.000000      -96.982500       2.0         12229.152998                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:15]  --------------------------------------------------------------------------------
[09/27 16:19:15]  Iteration: 28 (3 solution, 24 counterexamples)
[09/27 16:19:16]  Generator returned sat in 0.120363 secs.
[09/27 16:19:16]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:17]  Improved gap from 0.0 to 0
[09/27 16:19:17]  Improved number of small numbers from 59 to 111 out of a max of 111
[09/27 16:19:17]  Verifer returned sat in 1.368682 secs.
[09/27 16:19:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11673.624023   11372.602051  273.747559  11673.624023    0.014404  11372.602051        0.0  301.021973      301.021973       3.0         11372.602051                -1.0                -1
1   11673.624023   11472.602051  273.747559  11673.624023    0.014648  11472.602051        0.0  201.021973      201.021973       3.0         11372.602051                 0.0             False
2   11673.624023   11572.587402  273.747559  11673.624023    0.014648  11572.587402        0.0  101.036621      101.021973       4.0         11372.602051                 0.0             False
3   11673.624023   11572.602051  273.747559  11673.624023    0.014648  11572.602051        0.0  101.021973        1.021973       5.0         11372.602051                 0.0             False
4   11673.624023   11673.624023  371.725586  11673.624023  101.007324  11673.624023        0.0    0.000000       -1.000000       6.0         11372.602051                 0.0             False
5   11674.624023   11674.624023  419.207275  11674.624023    1.000000  11674.624023        0.0    0.000000      -52.518311       1.0         11674.624023                 1.0              True
6   11727.142334   11727.142334  519.207275  11727.142334   52.518311  11727.142334        0.0    0.000000        0.000000       1.0         11674.624023                 0.0             False
7   11831.671631   11743.469727  519.207275  11831.671631  104.529297  11743.469727        0.0   88.201904        4.529297       1.0         11674.624023                 0.0             False
8   11831.671631   11831.671631  613.677979  11831.671631   88.187500  11831.671631        0.0    0.000000       -1.000000       2.0         11831.671631                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:18]  --------------------------------------------------------------------------------
[09/27 16:19:18]  Iteration: 29 (3 solution, 25 counterexamples)
[09/27 16:19:19]  Generator returned sat in 0.836961 secs.
[09/27 16:19:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:19:22]  Improved gap from 0.0 to 28.125
[09/27 16:19:22]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/27 16:19:22]  Verifer returned sat in 2.617059 secs.
[09/27 16:19:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11380.101318   11317.980225  227.975342  11380.101318   28.154053  11317.980225        0.0   62.121094        0.000000       2.0         11317.980225                -1.0                -1
1   11380.101318   11380.101318  299.850342  11380.101318   28.154053  11380.101318        0.0    0.000000      -28.125000       3.0         11317.980225                 0.0             False
2   11408.226318   11408.226318  371.725342  11408.226318   28.125000  11408.226318        0.0    0.000000      -28.125000       1.0         11408.226318                 0.0             False
3   11636.322021   11530.855225  371.725342  11636.322021  228.095703  11530.855225        0.0  105.466797       99.970703       1.0         11408.226318                 0.0             False
4   11636.322021   11551.601318  371.725342  11636.322021  105.437500  11551.601318        0.0   84.720703       -0.029297       2.0         11636.322021                 0.0             False
5   11636.351318   11636.351318  443.600342  11636.351318   84.750000  11636.351318        0.0    0.000000      -28.125000       1.0         11636.351318                 0.0             False
6   11749.413818   11687.269287  443.600342  11749.413818  113.062500  11687.269287        0.0   62.144531      -15.062500       1.0         11636.351318                 0.0             False
7   11764.476318   11764.476318  515.475342  11764.476318   77.207031  11764.476318        0.0    0.000000      -28.125000       1.0         11764.476318                 0.0             False
8   11869.913818   11792.601318  515.475342  11869.913818  105.437500  11792.601318        0.0   77.312500      -22.687500       1.0         11764.476318                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:22]  --------------------------------------------------------------------------------
[09/27 16:19:22]  Iteration: 30 (3 solution, 26 counterexamples)
[09/27 16:19:24]  Generator returned sat in 0.636341 secs.
[09/27 16:19:24]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:24]  Verifer returned unsat in 0.323876 secs.
[09/27 16:19:24]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:24]  --------------------------------------------------------------------------------
[09/27 16:19:24]  Iteration: 31 (4 solution, 26 counterexamples)
[09/27 16:19:25]  Generator returned sat in 0.215636 secs.
[09/27 16:19:25]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:25]  Verifer returned unsat in 0.250456 secs.
[09/27 16:19:25]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:25]  --------------------------------------------------------------------------------
[09/27 16:19:25]  Iteration: 32 (5 solution, 26 counterexamples)
[09/27 16:19:26]  Generator returned sat in 0.267353 secs.
[09/27 16:19:26]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:26]  Verifer returned unsat in 0.231294 secs.
[09/27 16:19:26]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:26]  --------------------------------------------------------------------------------
[09/27 16:19:26]  Iteration: 33 (6 solution, 26 counterexamples)
[09/27 16:19:27]  Generator returned sat in 0.195395 secs.
[09/27 16:19:27]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:28]  Improved number of small numbers from 60 to 110 out of a max of 110
[09/27 16:19:28]  Verifer returned sat in 0.379478 secs.
[09/27 16:19:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11944.929688   10944.900635  515.416992  11944.929688    0.029053  10944.900635        0.0  1000.029053     1000.029053       9.0         10944.900635                -1.0                -1
1   11944.929688   11044.885986  515.416992  11944.929688  200.000000  11044.885986        0.0   900.043701      900.029053       8.0         10944.900635                 1.0             False
2   11944.929688   11144.900635  515.416992  11944.929688  200.000000  11144.900635        0.0   800.029053      800.029053       8.0         10944.900635                 0.0             False
3   11944.929688   11144.900635  515.416992  11944.929688  200.000000  11144.900635        0.0   800.029053      700.029053       8.0         10944.900635                 0.0             False
4   11944.929688   11244.900635  515.416992  11944.929688  200.000000  11244.900635        0.0   700.029053      600.029053       9.0         10944.900635                 0.0             False
5   11944.929688   11345.400635  515.416992  11944.929688  399.029297  11345.400635        0.0   599.529053      500.029053       9.0         10944.900635                 1.0              True
6   11944.929688   11544.900635  515.416992  11944.929688  400.000000  11544.900635        0.0   400.029053      400.029053       8.0         10944.900635                 1.0              True
7   11944.929688   11644.900635  515.416992  11944.929688  400.000000  11644.900635        0.0   300.029053      300.029053       9.0         10944.900635                 0.0             False
8   12443.900635   11644.900879  515.416992  12443.900635  799.000000  11644.900879        0.0   798.999756      699.000000       9.0         10944.900635                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:28]  --------------------------------------------------------------------------------
[09/27 16:19:28]  Iteration: 34 (6 solution, 27 counterexamples)
[09/27 16:19:29]  Generator returned sat in 0.098433 secs.
[09/27 16:19:29]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:29]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:19:29]  Verifer returned sat in 0.364391 secs.
[09/27 16:19:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11444.900391   10644.915283  515.416748  11444.900391  300.014404  10644.915283        0.0  799.985107      699.985107       7.0         10644.915283                -1.0                -1
1   11444.900391   10844.842285  515.416748  11444.900391  300.014404  10844.842285        0.0  600.058105      599.985107       6.0         10644.915283                 0.0             False
2   11444.900391   10944.900391  515.416748  11444.900391  300.014404  10944.900391        0.0  500.000000      499.985107       6.0         10644.915283                 0.0             False
3   11444.900391   10944.929932  515.416748  11444.900391  300.014404  10944.929932        0.0  499.970459      399.985107       7.0         10644.915283                 0.0             False
4   11444.900391   11144.864258  515.416748  11444.900391  300.014648  11144.864258        0.0  300.036133      299.985107       8.0         10644.915283                 0.0             False
5   11444.900391   11244.915039  515.416748  11444.900391  300.021973  11244.915039        0.0  199.985352      199.985107       9.0         10644.915283                 0.0             False
6   11844.944336   11244.929932  515.416748  11844.944336  600.029297  11244.929932        0.0  600.014404      500.029053       9.0         10644.915283                 1.0              True
7   11844.944336   11444.915283  515.416748  11844.944336  600.000000  11444.915283        0.0  400.029053      400.029053       2.0         11844.944336                 1.0              True
8   11844.944336   11444.929688  515.416748  11844.944336  300.051025  11444.929688        0.0  400.014648      300.029053       3.0         11844.944336                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:30]  --------------------------------------------------------------------------------
[09/27 16:19:30]  Iteration: 35 (6 solution, 28 counterexamples)
[09/27 16:19:32]  Generator returned sat in 1.073891 secs.
[09/27 16:19:32]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:19:32]  Improved number of small numbers from 63 to 110 out of a max of 110
[09/27 16:19:32]  Verifer returned sat in 0.311896 secs.
[09/27 16:19:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11444.907715   10644.933594  515.416748  11444.907715  149.998047  10644.933594        0.0  799.974121      699.992676       5.0         10644.933594                -1.0                -1
1   11444.907715   10744.915039  515.416748  11444.907715  149.998047  10744.915039        0.0  699.992676      599.992676       5.0         10644.933594                 0.0             False
2   11444.907715   10944.413086  515.416748  11444.907715  149.998047  10944.413086        0.0  500.494629      499.992676       6.0         10644.933594                 0.0             False
3   11444.907715   10944.929688  515.416748  11444.907715  149.998047  10944.929688        0.0  499.978027      399.992676       7.0         10644.933594                 0.0             False
4   11444.907715   11144.915039  515.416748  11444.907715  149.998047  11144.915039        0.0  299.992676      299.992676       8.0         10644.933594                 0.0             False
5   11444.907715   11244.915039  515.416748  11444.907715  200.000000  11244.915039        0.0  199.992676      199.992676       9.0         10644.933594                 0.0             False
6   11844.918945   11244.929688  515.416748  11844.918945  600.003906  11244.929688        0.0  599.989258      500.003906       9.0         10644.933594                 1.0              True
7   11844.918945   11444.911133  515.416748  11844.918945  599.000000  11444.911133        0.0  400.007812      400.003906       2.0         11844.918945                 1.0              True
8   11844.918945   11444.915039  515.416748  11844.918945  149.998047  11444.915039        0.0  400.003906      300.003906       3.0         11844.918945                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:33]  --------------------------------------------------------------------------------
[09/27 16:19:33]  Iteration: 36 (6 solution, 29 counterexamples)
[09/27 16:19:34]  Generator returned sat in 0.396199 secs.
[09/27 16:19:34]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:19:34]  Improved gap from 0.0 to 100
[09/27 16:19:34]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/27 16:19:34]  Verifer returned sat in 0.371375 secs.
[09/27 16:19:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10945.923828   10446.922607  515.416748  10945.923828    0.001250  10446.922607        0.0  499.001221      499.001221       5.0         10446.922607                -1.0                -1
1   10945.923828   10546.922607  515.416748  10945.923828    0.001250  10546.922607        0.0  399.001221      399.001221       5.0         10446.922607                 0.0             False
2   10945.923828   10646.922607  515.416748  10945.923828    0.001465  10646.922607        0.0  299.001221      299.001221       6.0         10446.922607                 0.0             False
3   10945.923828   10746.921143  515.416748  10945.923828    0.001465  10746.921143        0.0  199.002686      199.001221       7.0         10446.922607                 0.0             False
4   10945.923828   10746.922607  515.416748  10945.923828    0.010000  10746.922607        0.0  199.001221       99.001221       8.0         10446.922607                 0.0             False
5   10945.923828   10945.923828  515.416748  10945.923828    0.010000  10945.923828        0.0    0.000000       -0.998779       9.0         10446.922607                 0.0             False
6   11542.926270   10946.922607  515.416748  11542.926270  597.002441  10946.922607        0.0  596.003662      496.003662       1.0         10446.922607                 1.0              True
7   11542.926270   11146.922363  515.416748  11542.926270  596.002441  11146.922363        0.0  396.003906      396.003662       2.0         11542.926270                 0.0             False
8   11741.924805   11146.923584  515.416748  11741.924805  595.002441  11146.923584        0.0  595.001221      495.002197       3.0         11741.924805                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:35]  --------------------------------------------------------------------------------
[09/27 16:19:35]  Iteration: 37 (6 solution, 30 counterexamples)
[09/27 16:19:36]  Generator returned sat in 0.532254 secs.
[09/27 16:19:36]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:19:36]  Improved number of small numbers from 106 to 110 out of a max of 110
[09/27 16:19:36]  Verifer returned sat in 0.232058 secs.
[09/27 16:19:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11045.039307   10445.981689  515.416748  11045.039307  298.999756  10445.981689        0.0  599.057617      599.000000       1.0         10445.981689                -1.0                -1
1   11045.039307   10446.039551  515.416748  11045.039307  298.999756  10446.039551        0.0  598.999756      499.000000       2.0         10445.981689                 0.0             False
2   11045.039307   10546.039307  515.416748  11045.039307  298.999756  10546.039307        0.0  499.000000      399.000000       3.0         10445.981689                 1.0              True
3   11045.039307   10743.981689  515.416748  11045.039307  299.000000  10743.981689        0.0  301.057617      299.000000       4.0         10445.981689                 1.0              True
4   11045.039307   10845.568359  515.416748  11045.039307  299.000000  10845.568359        0.0  199.470947      199.000000       5.0         10445.981689                 1.0              True
5   11246.097168   10846.039307  515.416748  11246.097168  400.528809  10846.039307        0.0  400.057861      300.057861       6.0         10445.981689                 1.0              True
6   11246.097168   11046.039307  515.416748  11246.097168  301.000000  11046.039307        0.0  200.057861      200.057861       2.0         11246.097168                 1.0              True
7   11346.039307   11146.039307  515.416748  11346.039307  300.000000  11146.039307        0.0  200.000000      200.000000       3.0         11346.039307                 1.0             False
8   11445.039307   11146.039307  515.416748  11445.039307  299.000000  11146.039307        0.0  299.000000      199.000000       3.0         11445.039307                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:37]  --------------------------------------------------------------------------------
[09/27 16:19:37]  Iteration: 38 (6 solution, 31 counterexamples)
[09/27 16:19:40]  Generator returned sat in 1.873900 secs.
[09/27 16:19:40]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:42]  Verifer returned unsat in 2.048215 secs.
[09/27 16:19:42]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:42]  --------------------------------------------------------------------------------
[09/27 16:19:42]  Iteration: 39 (7 solution, 31 counterexamples)
[09/27 16:19:43]  Generator returned sat in 0.156544 secs.
[09/27 16:19:43]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:47]  Improved gap from 0.0 to 0
[09/27 16:19:47]  Improved number of small numbers from 69 to 76 out of a max of 111
[09/27 16:19:47]  Verifer returned sat in 4.454221 secs.
[09/27 16:19:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10848.567734   10547.565859  515.416748  10848.567734    0.001221  10547.565859        0.0  301.001875      301.001875       9.0         10547.565859                -1.0                -1
1   10848.567734   10647.565674  515.416748  10848.567734    0.001221  10647.565674        0.0  201.002061      201.001875       6.0         10547.565859                 1.0             False
2   10848.567734   10747.564609  515.416748  10848.567734    0.001221  10747.564609        0.0  101.003125      101.001875       6.0         10547.565859                 0.0             False
3   10848.567734   10747.565859  515.416748  10848.567734    0.001250  10747.565859        0.0  101.001875        1.001875       7.0         10547.565859                 0.0             False
4   10848.567734   10848.567734  614.405029  10848.567734  101.000625  10848.567734        0.0    0.000000       -0.009844       8.0         10547.565859                 0.0             False
5   10848.577734   10848.577734  714.404785  10848.577734    0.010000  10848.577734        0.0    0.000000       -0.000088       1.0         10848.577734                 1.0              True
6   10900.089297   10900.089297  759.875977  10900.089297   51.511562  10900.089297        0.0    0.000000       -3.017334       1.0         10848.577734                 0.0             False
7   11003.106797   10916.587109  759.875977  11003.106797  103.017500  10916.587109        0.0   86.519688        0.000166       1.0         10848.577734                 0.0             False
8   11003.106797   11003.106797  759.875977  11003.106797   86.518438  11003.106797        0.0    0.000000      -99.999834       2.0         11003.106797                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:48]  --------------------------------------------------------------------------------
[09/27 16:19:48]  Iteration: 40 (7 solution, 32 counterexamples)
[09/27 16:19:49]  Generator returned sat in 0.163778 secs.
[09/27 16:19:49]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:19:52]  Improved gap from 0.0 to 0
[09/27 16:19:53]  Improved number of small numbers from 39 to 55 out of a max of 111
[09/27 16:19:53]  Verifer returned sat in 4.196171 secs.
[09/27 16:19:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10999.103842   10698.082327  364.900281  10999.103842    0.014160  10698.082327        0.0  301.021515      301.021515       5.0         10698.082327                -1.0                -1
1   10999.103842   10698.096680  364.900281  10999.103842    0.014160  10698.096680        0.0  301.007162      201.021515       5.0         10698.082327                 0.0             False
2   10999.103842   10898.067983  364.900281  10999.103842    0.014160  10898.067983        0.0  101.035858      101.021515       6.0         10698.082327                 0.0             False
3   10999.103842   10898.082327  364.900281  10999.103842    0.014160  10898.082327        0.0  101.021515        1.021515       7.0         10698.082327                 0.0             False
4   10999.103842   10999.103842  462.878906  10999.103842  101.007080  10999.103842        0.0    0.000000       -0.999860       8.0         10698.082327                 0.0             False
5   11000.103842   11000.103842  510.360840  11000.103842    1.000000  11000.103842        0.0    0.000000      -52.517926       1.0         11000.103842                 1.0              True
6   11052.621771   11052.621771  610.346494  11052.621771   52.517929  11052.621771        0.0    0.000000       -0.014343       1.0         11000.103842                 0.0             False
7   11157.150457   11052.636114  610.346494  11157.150457  104.528687  11052.636114        0.0  104.514343        4.514343       1.0         11000.103842                 0.0             False
8   11157.150457   11157.150457  610.346680  11157.150457   80.030479  11157.150457        0.0    0.000000      -95.485471       2.0         11157.150457                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:19:54]  --------------------------------------------------------------------------------
[09/27 16:19:54]  Iteration: 41 (7 solution, 33 counterexamples)
[09/27 16:19:55]  Generator returned sat in 0.759099 secs.
[09/27 16:19:55]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:03]  Improved gap from 0.0 to 0
[09/27 16:20:03]  Improved number of small numbers from 40 to 111 out of a max of 111
[09/27 16:20:03]  Verifer returned sat in 7.978697 secs.
[09/27 16:20:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10432.330566   10125.407959  577.540039  10432.330566    0.014160  10125.407959        0.0  306.922607       302.98877       6.0         10125.407959                -1.0                -1
1   10432.330566   10229.341797  577.540039  10432.330566    0.014160  10229.341797        0.0  202.988770       202.98877       6.0         10125.407959                 0.0             False
2   10432.330566   10329.327637  577.540039  10432.330566    0.014404  10329.327637        0.0  103.002930       102.98877       6.0         10125.407959                 0.0             False
3   10432.330566   10329.341797  577.540039  10432.330566    0.014404  10329.341797        0.0  102.988770         2.98877       6.0         10125.407959                 0.0             False
4   10432.330566   10432.330566  674.551270  10432.330566  102.974121  10432.330566        0.0    0.000000         0.00000       7.0         10125.407959                 0.0             False
5   10433.330566   10433.330566  773.551270  10433.330566    1.000000  10433.330566        0.0    0.000000         0.00000       1.0         10433.330566                 1.0              True
6   10486.832031   10486.832031  820.049805  10486.832031   53.501465  10486.832031        0.0    0.000000         0.00000       1.0         10433.330566                 0.0             False
7   10593.327881   10486.846436  820.049805  10593.327881  106.495850  10486.846436        0.0  106.481445         6.49585       1.0         10433.330566                 0.0             False
8   10593.327881   10593.327881  820.049805  10593.327881   81.505859  10593.327881        0.0    0.000000       -93.50415       2.0         10593.327881                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:04]  --------------------------------------------------------------------------------
[09/27 16:20:04]  Iteration: 42 (7 solution, 34 counterexamples)
[09/27 16:20:05]  Generator returned sat in 0.799937 secs.
[09/27 16:20:06]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:07]  Verifer returned unsat in 0.971184 secs.
[09/27 16:20:07]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:07]  --------------------------------------------------------------------------------
[09/27 16:20:07]  Iteration: 43 (8 solution, 34 counterexamples)
[09/27 16:20:08]  Generator returned sat in 0.191699 secs.
[09/27 16:20:08]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:09]  Verifer returned unsat in 1.552905 secs.
[09/27 16:20:09]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:09]  --------------------------------------------------------------------------------
[09/27 16:20:09]  Iteration: 44 (9 solution, 34 counterexamples)
[09/27 16:20:10]  Generator returned sat in 0.130814 secs.
[09/27 16:20:10]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:19]  Improved gap from 0.0 to 0
[09/27 16:20:19]  Improved number of small numbers from 48 to 111 out of a max of 111
[09/27 16:20:19]  Verifer returned sat in 8.932627 secs.
[09/27 16:20:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10396.348877   10095.305908  381.097168  10396.348877    0.014160  10095.305908        0.0  301.042969      301.042969       6.0         10095.305908                -1.0                -1
1   10396.348877   10095.305908  381.097168  10396.348877    0.014160  10095.305908        0.0  301.042969      201.042969       6.0         10095.305908                 0.0             False
2   10396.348877   10295.305908  381.097168  10396.348877    0.014160  10295.305908        0.0  101.042969      101.042969       7.0         10095.305908                 0.0             False
3   10396.348877   10295.320557  381.097168  10396.348877    0.014160  10295.320557        0.0  101.028320        1.042969       8.0         10095.305908                 0.0             False
4   10396.348877   10396.348877  479.054443  10396.348877  101.014404  10396.348877        0.0    0.000000       -0.999756       9.0         10095.305908                 0.0             False
5   10397.348877   10397.348877  526.532715  10397.348877    1.000000  10397.348877        0.0    0.000000      -52.521484       1.0         10397.348877                 1.0              True
6   10449.870361   10449.870361  626.532715  10449.870361   52.521484  10449.870361        0.0    0.000000        0.000000       1.0         10397.348877                 0.0             False
7   10554.406006   10449.884521  626.532715  10554.406006  104.535645  10449.884521        0.0  104.521484        4.535645       1.0         10397.348877                 0.0             False
8   10554.406006   10554.406006  626.532959  10554.406006   80.035645  10554.406006        0.0    0.000000      -95.464111       2.0         10554.406006                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:20]  --------------------------------------------------------------------------------
[09/27 16:20:20]  Iteration: 45 (9 solution, 35 counterexamples)
[09/27 16:20:23]  Generator returned sat in 2.058541 secs.
[09/27 16:20:23]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:24]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/27 16:20:24]  Verifer returned sat in 0.687171 secs.
[09/27 16:20:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10703.996826    9914.625244  381.096924  10703.996826    0.028564   9914.625244        0.0  789.371582      700.028564       7.0          9914.625244                -1.0                -1
1   10703.996826   10003.968262  381.096924  10703.996826    0.028564  10003.968262        0.0  700.028564      600.028564       7.0          9914.625244                 1.0             False
2   10703.996826   10103.968262  381.096924  10703.996826  391.342529  10103.968262        0.0  600.028564      500.028564       6.0          9914.625244                 1.0              True
3   10703.996826   10303.968262  381.096924  10703.996826  391.342529  10303.968262        0.0  400.028564      400.028564       6.0          9914.625244                 1.0              True
4   10703.996826   10303.968262  381.096924  10703.996826  391.342773  10303.968262        0.0  400.028564      300.028564       6.0          9914.625244                 1.0              True
5   10703.996826   10503.968262  381.096924  10703.996826  392.342773  10503.968262        0.0  200.028564      200.028564       7.0          9914.625244                 1.0             False
6   10901.139648   10503.968262  381.096924  10901.139648  397.171387  10503.968262        0.0  397.171387      297.171387       7.0          9914.625244                 1.0              True
7   10902.139648   10703.968262  381.096924  10902.139648  398.171387  10703.968262        0.0  198.171387      198.171387       8.0          9914.625244                 1.0             False
8   11104.053955   10704.025146  381.096924  11104.053955  400.085693  10704.025146        0.0  400.028809      300.085693       3.0          9914.625244                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:24]  --------------------------------------------------------------------------------
[09/27 16:20:24]  Iteration: 46 (9 solution, 36 counterexamples)
[09/27 16:20:27]  Generator returned sat in 2.033772 secs.
[09/27 16:20:27]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:20:28]  Improved number of small numbers from 40 to 81 out of a max of 110
[09/27 16:20:28]  Verifer returned sat in 0.999047 secs.
[09/27 16:20:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10590.732910   10090.761230  294.30373  10590.732910  500.028320  10090.761230        0.0  499.971680      499.971454       7.0         10090.761230                -1.0                -1
1   10590.761230   10190.761230  294.30373  10590.761230  500.000000  10190.761230        0.0  400.000000      399.999775       7.0         10590.761230                 1.0             False
2   10790.789795   10290.761230  294.30373  10790.789795  600.028564  10290.761230        0.0  500.028564      500.028339       4.0         10590.761230                 1.0             False
3   10790.789795   10390.761230  294.30373  10790.789795   13.471416  10390.761230        0.0  400.028564      400.028339       4.0         10790.789795                 1.0             False
4   10790.789795   10390.761475  294.30373  10790.789795   25.942833  10390.761475        0.0  400.028320      300.028339       5.0         10790.789795                 1.0             False
5   10790.789795   10590.761230  294.30373  10790.789795   50.885666  10590.761230        0.0  200.028564      200.028339       5.0         10790.789795                 1.0             False
6   10790.789795   10590.761456  294.30373  10790.789795  100.771332  10590.761456        0.0  200.028339      100.028339       5.0         10790.789795                 1.0             False
7   10791.304119   10790.761456  294.30373  10791.304119  200.542664  10790.761456        0.0    0.542664        0.542664       6.0         10790.789795                 1.0             False
8   11190.846783   10790.818359  294.30373  11190.846783  400.085327  10790.818359        0.0  400.028424      300.085327       2.0         10790.789795                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:29]  --------------------------------------------------------------------------------
[09/27 16:20:29]  Iteration: 47 (9 solution, 37 counterexamples)
[09/27 16:20:30]  Generator returned sat in 0.914077 secs.
[09/27 16:20:31]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:20:31]  Improved number of small numbers from 66 to 96 out of a max of 110
[09/27 16:20:31]  Verifer returned sat in 0.745372 secs.
[09/27 16:20:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10590.760986    9890.732666  494.332275  10590.760986  298.999756   9890.732666        0.0  700.028320      700.028320       9.0          9890.732666                -1.0                -1
1   10590.760986    9943.399455  494.332275  10590.760986  298.999756   9943.399455        0.0  647.361532      600.028320       7.0          9890.732666                 1.0             False
2   10590.760986   10043.399455  494.332275  10590.760986  298.999756  10043.399455        0.0  547.361532      500.028320       8.0          9890.732666                 0.0             False
3   10590.760986   10090.732666  494.332275  10590.760986  299.000000  10090.732666        0.0  500.028320      400.028320       9.0          9890.732666                 0.0             False
4   10590.760986   10190.732788  494.332275  10590.760986  299.000000  10190.732788        0.0  400.028198      300.028320       9.0          9890.732666                 1.0              True
5   10590.760986   10290.732788  494.332275  10590.760986  370.000000  10290.732788        0.0  300.028198      200.028320       9.0          9890.732666                 1.0              True
6   10660.732788   10451.155518  494.332275  10660.732788  370.000000  10451.155518        0.0  209.577271      170.000122       9.0          9890.732666                 1.0              True
7   10990.789795   10511.144165  494.332275  10990.789795  539.634277  10511.144165        0.0  479.645630      400.057129       9.0          9890.732666                 1.0              True
8   10990.789795   10590.761230  494.332275  10990.789795  479.617065  10590.761230        0.0  400.028564      300.057129       3.0         10990.789795                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:32]  --------------------------------------------------------------------------------
[09/27 16:20:32]  Iteration: 48 (9 solution, 38 counterexamples)
[09/27 16:20:33]  Generator returned sat in 0.649420 secs.
[09/27 16:20:34]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:20:35]  Improved gap from 0.0 to 28.125
[09/27 16:20:36]  Improved number of small numbers from 56 to 111 out of a max of 111
[09/27 16:20:36]  Verifer returned sat in 2.192685 secs.
[09/27 16:20:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10432.589600   10368.470215  414.701416  10432.589600   64.119141  10368.470215        0.0   64.119385       64.119141       9.0         10368.470215                -1.0                -1
1   10432.589600   10432.589600  422.457275  10432.589600   64.090576  10432.589600        0.0    0.000000      -28.125000       9.0         10432.589600                 1.0             False
2   10460.714600   10460.714600  494.332275  10460.714600   28.125000  10460.714600        0.0    0.000000      -28.125000       1.0         10460.714600                 1.0             False
3   10688.839600   10582.030762  494.332275  10688.839600  228.125000  10582.030762        0.0  106.808838      100.000000       1.0         10460.714600                 0.0             False
4   10688.839600   10603.404053  494.332275  10688.839600  106.780273  10603.404053        0.0   85.435547        0.000000       2.0         10688.839600                 0.0             False
5   10688.839600   10688.839600  566.207275  10688.839600   85.407227  10688.839600        0.0    0.000000      -28.125000       3.0         10688.839600                 0.0             False
6   10802.902100   10738.653320  566.207275  10802.902100  114.062500  10738.653320        0.0   64.248779      -14.062500       1.0         10688.839600                 1.0             False
7   10816.964600   10816.964600  638.082275  10816.964600   78.311279  10816.964600        0.0    0.000000      -28.125000       1.0         10816.964600                 0.0             False
8   10923.744873   10845.089600  638.082275  10923.744873  106.780273  10845.089600        0.0   78.655273      -21.344727       1.0         10816.964600                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:36]  --------------------------------------------------------------------------------
[09/27 16:20:36]  Iteration: 49 (9 solution, 39 counterexamples)
[09/27 16:20:39]  Generator returned sat in 1.645017 secs.
[09/27 16:20:39]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:20:44]  Improved gap from 0.0 to 0
[09/27 16:20:45]  Improved number of small numbers from 57 to 64 out of a max of 111
[09/27 16:20:45]  Verifer returned sat in 5.937118 secs.
[09/27 16:20:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10632.582100   10332.580225  450.591650  10632.582100    0.001221  10332.580225        0.0  300.001875      300.001875       7.0         10332.580225                -1.0                -1
1   10632.582100   10332.580322  450.591650  10632.582100    0.001221  10332.580322        0.0  300.001777      200.001875       7.0         10332.580225                 0.0             False
2   10632.582100   10532.580225  450.591650  10632.582100    0.001221  10532.580225        0.0  100.001875      100.001875       7.0         10332.580225                 0.0             False
3   10632.582100   10532.580225  450.591650  10632.582100    0.001465  10532.580225        0.0  100.001875        0.001875       7.0         10332.580225                 0.0             False
4   10632.582100   10632.582100  550.589600  10632.582100  100.000732  10632.582100        0.0    0.000000       -0.000176       8.0         10332.580225                 0.0             False
5   10632.592100   10632.592100  650.579590  10632.592100    0.010000  10632.592100        0.0    0.000000       -0.000186       1.0         10632.592100                 1.0              True
6   10682.603037   10682.603037  700.568604  10682.603037   50.010937  10682.603037        0.0    0.000000       -0.000234       1.0         10632.592100                 0.0             False
7   10782.619912   10682.604287  700.568604  10782.619912  100.016875  10682.604287        0.0  100.015625        0.016641       1.0         10632.592100                 0.0             False
8   10782.619912   10782.619912  800.551758  10782.619912   75.019531  10782.619912        0.0    0.000000       -0.000205       2.0         10782.619912                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:45]  --------------------------------------------------------------------------------
[09/27 16:20:45]  Iteration: 50 (9 solution, 40 counterexamples)
[09/27 16:20:51]  Generator returned sat in 4.097038 secs.
[09/27 16:20:51]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:51]  Improved number of small numbers from 38 to 110 out of a max of 110
[09/27 16:20:51]  Verifer returned sat in 0.553826 secs.
[09/27 16:20:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10128.582031   10128.553955  554.61792  10128.582031  200.028076  10128.553955        0.0    0.028076      -99.971924       4.0         10128.553955                -1.0                -1
1   10328.582031   10328.553955  554.61792  10328.582031  200.028076  10328.553955        0.0    0.028076        0.028076       1.0         10128.553955                 0.0             False
2   11028.582031   10328.553955  554.61792  11028.582031  700.028076  10328.553955        0.0  700.028076      600.028076       1.0         10128.553955                 0.0             False
3   11028.582031   10528.553711  554.61792  11028.582031  497.971680  10528.553711        0.0  500.028320      500.028076       2.0         11028.582031                 0.0             False
4   11028.582031   10528.582031  554.61792  11028.582031  498.971680  10528.582031        0.0  500.000000      400.028076       3.0         11028.582031                 0.0             False
5   11028.582031   10628.553955  554.61792  11028.582031  499.971680  10628.553955        0.0  400.028076      300.028076       4.0         11028.582031                 0.0             False
6   11129.525635   10828.553711  554.61792  11129.525635  500.971680  10828.553711        0.0  300.971924      300.971680       5.0         11028.582031                 0.0             False
7   11330.525391   10928.553955  554.61792  11330.525391  501.971680  10928.553955        0.0  401.971436      401.971436       6.0         11028.582031                 1.0             False
8   11431.525635   10931.525391  554.61792  11431.525635  502.971680  10931.525391        0.0  500.000244      402.971680       7.0         11028.582031                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:52]  --------------------------------------------------------------------------------
[09/27 16:20:52]  Iteration: 51 (9 solution, 41 counterexamples)
[09/27 16:20:54]  Generator returned sat in 0.866353 secs.
[09/27 16:20:54]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:20:55]  Improved number of small numbers from 43 to 110 out of a max of 110
[09/27 16:20:55]  Verifer returned sat in 0.835454 secs.
[09/27 16:20:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11053.518799   10553.490723  440.800293  11053.518799    0.013916  10553.490723        0.0  500.028076      500.028076       6.0         10553.490723                -1.0                -1
1   11053.518799   10653.476807  440.800293  11053.518799    0.013916  10653.476807        0.0  400.041992      400.028076       6.0         10553.490723                 1.0             False
2   11053.518799   10653.490723  440.800293  11053.518799    0.014160  10653.490723        0.0  400.028076      300.028076       4.0         10553.490723                 1.0              True
3   11053.518799   10753.490723  440.800293  11053.518799    0.014160  10753.490723        0.0  300.028076      200.028076       4.0         10553.490723                 1.0              True
4   11053.518799   10853.490723  440.800293  11053.518799  200.000000  10853.490723        0.0  200.028076      100.028076       5.0         10553.490723                 1.0              True
5   11053.518799   11051.546875  440.800293  11053.518799  200.013916  11051.546875        0.0    1.971924        0.028076       6.0         10553.490723                 1.0              True
6   11449.603027   11153.490723  440.800293  11449.603027  398.056152  11153.490723        0.0  296.112305      296.112305       1.0         10553.490723                 1.0              True
7   11553.518799   11153.504883  440.800293  11553.518799  400.028076  11153.504883        0.0  400.013916      300.028076       2.0         10553.490723                 0.0             False
8   11553.518799   11353.490723  440.800293  11553.518799  300.014160  11353.490723        0.0  200.028076      200.028076       3.0         11553.518799                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:20:55]  --------------------------------------------------------------------------------
[09/27 16:20:55]  Iteration: 52 (9 solution, 42 counterexamples)
[09/27 16:20:57]  Generator returned sat in 0.715533 secs.
[09/27 16:20:57]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:21:02]  Improved gap from 0.0 to 0
[09/27 16:21:03]  Improved number of small numbers from 63 to 111 out of a max of 111
[09/27 16:21:03]  Verifer returned sat in 5.595034 secs.
[09/27 16:21:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11153.490723   10852.469727  440.800049  11153.490723    0.013916  10852.469727        0.0  301.020996      301.020996       9.0         10852.469727                -1.0                -1
1   11153.490723   10852.483643  440.800049  11153.490723    0.013916  10852.483643        0.0  301.007080      201.020996       9.0         10852.469727                 1.0             False
2   11153.490723   11052.469727  440.800049  11153.490723    0.013916  11052.469727        0.0  101.020996      101.020996       4.0         10852.469727                 1.0              True
3   11153.490723   11052.469727  440.800049  11153.490723    0.014160  11052.469727        0.0  101.020996        1.020996       4.0         10852.469727                 1.0              True
4   11153.490723   11153.490723  539.779053  11153.490723  101.007080  11153.490723        0.0    0.000000        0.000000       5.0         10852.469727                 1.0             False
5   11154.490723   11154.490723  586.268555  11154.490723    1.000000  11154.490723        0.0    0.000000      -52.510498       1.0         11154.490723                 1.0              True
6   11207.001221   11207.001221  686.268555  11207.001221   52.510498  11207.001221        0.0    0.000000        0.000000       1.0         11154.490723                 0.0             False
7   11311.522217   11207.015137  686.268555  11311.522217  104.520996  11207.015137        0.0  104.507080        4.520996       1.0         11154.490723                 0.0             False
8   11311.522217   11311.522217  781.747559  11311.522217   80.022705  11311.522217        0.0    0.000000        0.000000       2.0         11311.522217                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:21:03]  --------------------------------------------------------------------------------
[09/27 16:21:03]  Iteration: 53 (9 solution, 43 counterexamples)
[09/27 16:21:05]  Generator returned sat in 0.706710 secs.
[09/27 16:21:05]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:21:07]  Verifer returned unsat in 1.748692 secs.
[09/27 16:21:07]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:21:07]  --------------------------------------------------------------------------------
[09/27 16:21:07]  Iteration: 54 (10 solution, 43 counterexamples)
[09/27 16:21:08]  Generator returned sat in 0.407427 secs.
[09/27 16:21:08]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:21:09]  Improved number of small numbers from 39 to 110 out of a max of 110
[09/27 16:21:09]  Verifer returned sat in 0.514549 secs.
[09/27 16:21:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10769.303467   10269.303467  697.450928  10769.303467    0.013916  10269.303467        0.0  500.000000       500.00000       5.0         10269.303467                -1.0                -1
1   10769.303467   10369.303223  697.450928  10769.303467    0.014160  10369.303223        0.0  400.000244       400.00000       5.0         10269.303467                 0.0             False
2   10769.303467   10369.303467  697.450928  10769.303467    0.014160  10369.303467        0.0  400.000000       300.00000       6.0         10269.303467                 0.0             False
3   10769.303467   10469.303467  697.450928  10769.303467    0.014160  10469.303467        0.0  300.000000       200.00000       7.0         10269.303467                 0.0             False
4   10769.303467   10570.387451  697.450928  10769.303467  101.007080  10570.387451        0.0  198.916016       100.00000       8.0         10269.303467                 0.0             False
5   10769.303467   10769.289307  697.450928  10769.303467  152.045654  10769.289307        0.0    0.014160         0.00000       9.0         10269.303467                 0.0             False
6   11170.275146   10769.303467  697.450928  11170.275146  400.985840  10769.303467        0.0  400.971680       300.97168       9.0         10269.303467                 1.0              True
7   11170.275146   10869.303467  697.450928  11170.275146  301.000000  10869.303467        0.0  300.971680       200.97168       2.0         11170.275146                 1.0              True
8   11170.275146   10969.303467  697.450928  11170.275146  300.958008  10969.303467        0.0  200.971680       100.97168       3.0         11170.275146                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:21:10]  --------------------------------------------------------------------------------
[09/27 16:21:10]  Iteration: 55 (10 solution, 44 counterexamples)
[09/27 16:21:11]  Generator returned sat in 0.661029 secs.
[09/27 16:21:11]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:21:16]  Improved gap from 0.0 to 0
[09/27 16:21:16]  Improved number of small numbers from 56 to 61 out of a max of 111
[09/27 16:21:16]  Verifer returned sat in 5.049507 secs.
[09/27 16:21:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10271.102967   10223.921217   695.649170  10271.102967    0.001465  10223.921217        0.0   47.18175        0.000242       9.0         10223.921217                -1.0                -1
1   10271.102967   10271.102967   795.648928  10271.102967    0.001465  10271.102967        0.0    0.00000        0.000000       9.0         10223.921217                 1.0             False
2   10371.102967   10322.102967   795.648928  10371.102967  100.000000  10322.102967        0.0   49.00000        0.000000       1.0         10223.921217                 1.0              True
3   10371.102967   10371.102967   821.057617  10371.102967    0.001250  10371.102967        0.0    0.00000      -74.591311       2.0         10371.102967                 0.0             False
4   10445.694467   10445.694467   921.057428  10445.694467   74.591500  10445.694467        0.0    0.00000        0.000000       1.0         10371.102967                 1.0             False
5   10571.285967   10445.694467   921.057428  10571.285967  125.591500  10445.694467        0.0  125.59150       25.591500       1.0         10371.102967                 0.0             False
6   10571.285967   10571.285967   995.465820  10571.285967  125.591500  10571.285967        0.0    0.00000       -0.000107       2.0         10371.102967                 0.0             False
7   10571.295967   10571.295967  1095.455811  10571.295967    0.010000  10571.295967        0.0    0.00000       -0.000117       1.0         10571.295967                 1.0              True
8   10635.101717   10635.101717  1131.650146  10635.101717   63.805750  10635.101717        0.0    0.00000       -0.000031       1.0         10571.295967                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:21:17]  --------------------------------------------------------------------------------
[09/27 16:21:17]  Iteration: 56 (10 solution, 45 counterexamples)
[09/27 16:21:20]  Generator returned sat in 1.828048 secs.
[09/27 16:21:20]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:21:26]  Improved gap from 0.0 to 0
[09/27 16:21:27]  Improved number of small numbers from 59 to 63 out of a max of 111
[09/27 16:21:27]  Verifer returned sat in 6.548017 secs.
[09/27 16:21:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10883.267408   10572.114658  753.064314  10883.267408    0.001221  10572.114658        0.0  311.152750      304.385500       9.0         10572.114658                -1.0                -1
1   10883.267408   10678.881836  753.064314  10883.267408    0.001221  10678.881836        0.0  204.385572      204.385500       4.0         10572.114658                 1.0             False
2   10883.267408   10778.881908  753.064314  10883.267408    0.001221  10778.881908        0.0  104.385500      104.385500       4.0         10572.114658                 1.0              True
3   10883.267408   10778.881908  753.064314  10883.267408    0.001250  10778.881908        0.0  104.385500        4.385500       4.0         10572.114658                 1.0              True
4   10883.267408   10883.267408  848.678711  10883.267408  104.384250  10883.267408        0.0    0.000000       -0.000104       5.0         10572.114658                 1.0             False
5   10883.277408   10883.277408  948.668701  10883.277408    0.010000  10883.277408        0.0    0.000000       -0.000113       1.0         10883.277408                 1.0              True
6   10936.480158   10936.480158  995.465820  10936.480158   53.202750  10936.480158        0.0    0.000000       -0.000244       1.0         10883.277408                 0.0             False
7   11042.880658   10936.481408  995.465820  11042.880658  106.400500  10936.481408        0.0  106.399250        6.400256       1.0         10883.277408                 0.0             False
8   11042.880658   11042.880658  995.465820  11042.880658   80.807250  11042.880658        0.0    0.000000      -93.599744       2.0         11042.880658                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:21:27]  --------------------------------------------------------------------------------
[09/27 16:21:27]  Iteration: 57 (10 solution, 46 counterexamples)
[09/27 16:21:31]  Generator returned sat in 3.132367 secs.
[09/27 16:21:32]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:21:32]  Improved gap from 0.0 to 100
[09/27 16:21:32]  Improved number of small numbers from 73 to 111 out of a max of 111
[09/27 16:21:32]  Verifer returned sat in 0.375589 secs.
[09/27 16:21:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12078.743408   11378.715332  848.678711  12078.743408    0.027588  11378.715332        0.0  700.028076      700.027832       6.0         11378.715332                -1.0                -1
1   12078.743408   11478.715332  848.678711  12078.743408    0.027832  11478.715332        0.0  600.028076      600.027832       6.0         11378.715332                 0.0             False
2   12078.743408   11578.715332  848.678711  12078.743408    0.027832  11578.715332        0.0  500.028076      500.027832       6.0         11378.715332                 0.0             False
3   12078.743408   11578.743408  848.678711  12078.743408  395.083008  11578.743408        0.0  500.000000      400.027832       7.0         11378.715332                 0.0             False
4   12078.743408   11678.715576  848.678711  12078.743408  396.083008  11678.715576        0.0  400.027832      300.027832       8.0         11378.715332                 1.0              True
5   12078.743408   11778.715576  848.678711  12078.743408  397.083008  11778.715576        0.0  300.027832      200.027832       8.0         11378.715332                 1.0              True
6   12176.798584   11878.715576  848.678711  12176.798584  398.083008  11878.715576        0.0  298.083008      198.083008       8.0         11378.715332                 1.0              True
7   12277.798584   12078.715576  848.678711  12277.798584  399.083008  12078.715576        0.0  199.083008      199.083008       8.0         11378.715332                 1.0              True
8   12478.798584   12078.770752  848.678711  12478.798584  400.083008  12078.770752        0.0  400.027832      300.083008       3.0         11378.715332                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:21:32]  --------------------------------------------------------------------------------
[09/27 16:21:32]  Iteration: 58 (10 solution, 47 counterexamples)
[09/27 16:21:34]  Generator returned sat in 0.768808 secs.
[09/27 16:21:35]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:21:38]  Improved gap from 0.0 to 0
[09/27 16:21:39]  Improved number of small numbers from 44 to 61 out of a max of 111
[09/27 16:21:39]  Verifer returned sat in 3.974623 secs.
[09/27 16:21:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11581.619019   11281.598328   848.678711  11581.619019    0.013672  11281.598328        0.0  300.020691      300.020691       6.0         11281.598328                -1.0                -1
1   11581.619019   11381.598145   848.678711  11581.619019    0.013672  11381.598145        0.0  200.020874      200.020691       6.0         11281.598328                 1.0             False
2   11581.619019   11481.598328   848.678711  11581.619019    0.013672  11481.598328        0.0  100.020691      100.020691       4.0         11281.598328                 1.0              True
3   11581.619019   11481.598328   848.678711  11581.619019    0.013672  11481.598328        0.0  100.020691        0.020691       4.0         11281.598328                 1.0              True
4   11581.619019   11581.619019   947.658203  11581.619019  100.006836  11581.619019        0.0    0.000000       -0.999817       5.0         11281.598328                 1.0             False
5   11582.619019   11582.619019  1047.657959  11582.619019    1.000000  11582.619019        0.0    0.000000       -0.000061       1.0         11582.619019                 1.0              True
6   11633.629364   11633.629364  1096.647461  11633.629364   51.010345  11633.629364        0.0    0.000000       -0.000214       1.0         11582.619019                 0.0             False
7   11735.150055   11650.123617  1096.647461  11735.150055  101.520691  11650.123617        0.0   85.026438        1.520477       1.0         11582.619019                 0.0             False
8   11735.150055   11735.150055  1096.647705  11735.150055   85.012644  11735.150055        0.0    0.000000      -98.479279       2.0         11735.150055                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:21:39]  --------------------------------------------------------------------------------
[09/27 16:21:39]  Iteration: 59 (10 solution, 48 counterexamples)
[09/27 16:21:41]  Generator returned sat in 0.852250 secs.
[09/27 16:21:41]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:21:49]  Improved gap from 6.103515625e-05 to 0
[09/27 16:21:50]  Improved number of small numbers from 40 to 57 out of a max of 111
[09/27 16:21:50]  Verifer returned sat in 8.849930 secs.
[09/27 16:21:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   12930.530049   12630.509358 -1150.307495  12930.530049    0.013672  12630.509358        0.0  300.020691      300.020691       4.0         12630.509358                -1.0                -1
1   12930.530049   12630.509521 -1150.307495  12930.530049    0.013672  12630.509521        0.0  300.020527      200.020691       4.0         12630.509358                 0.0             False
2   12930.530049   12830.509358 -1150.307495  12930.530049    0.013672  12830.509358        0.0  100.020691      100.020691       5.0         12630.509358                 0.0             False
3   12930.530049   12830.509358 -1150.307495  12930.530049    0.013672  12830.509358        0.0  100.020691        0.020691       5.0         12630.509358                 0.0             False
4   12930.530049   12930.530049 -1051.328125  12930.530049  100.006836  12930.530049        0.0    0.000000       -0.999939       6.0         12630.509358                 0.0             False
5   12931.530049   12931.530049 -1002.338379  12931.530049    1.000000  12931.530049        0.0    0.000000      -51.010193       1.0         12931.530049                 1.0              True
6   12982.540394   12982.540394  -903.872803  12982.540394   51.010345  12982.540394        0.0    0.000000       -1.534271       1.0         12931.530049                 0.0             False
7   13084.061085   12999.053039  -903.872803  13084.061085  101.520691  12999.053039        0.0   85.008046       -0.013580       1.0         12931.530049                 0.0             False
8   13084.074879   13084.074879  -804.873047  13084.074879   85.021840  13084.074879        0.0    0.000000       -1.000031       1.0         13084.074879                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:21:51]  --------------------------------------------------------------------------------
[09/27 16:21:51]  Iteration: 60 (10 solution, 49 counterexamples)
[09/27 16:21:54]  Generator returned sat in 1.563149 secs.
[09/27 16:21:54]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:22:00]  Improved gap from 0.99993896484375 to 0
[09/27 16:22:02]  Improved number of small numbers from 42 to 59 out of a max of 111
[09/27 16:22:02]  Verifer returned sat in 7.944369 secs.
[09/27 16:22:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11732.657406   11432.636715 -1382.387752  11732.657406    0.013672  11432.636715        0.0  300.020691      300.020691       8.0         11432.636715                -1.0                -1
1   11732.657406   11432.636719 -1382.387752  11732.657406    0.013672  11432.636719        0.0  300.020688      200.020691       6.0         11432.636715                 1.0             False
2   11732.657406   11632.622922 -1382.387752  11732.657406    0.013672  11632.622922        0.0  100.034485      100.020691       6.0         11432.636715                 0.0             False
3   11732.657406   11632.636715 -1382.387752  11732.657406    0.013672  11632.636715        0.0  100.020691        0.020691       7.0         11432.636715                 0.0             False
4   11732.657406   11732.657406 -1283.408203  11732.657406  100.006836  11732.657406        0.0    0.000000       -0.999760       8.0         11432.636715                 0.0             False
5   11733.657406   11733.657406 -1234.425537  11733.657406    1.000000  11733.657406        0.0    0.000000      -51.017094       1.0         11733.657406                 1.0              True
6   11784.674649   11784.674649 -1134.425781  11784.674649   51.017242  11784.674649        0.0    0.000000       -0.000096       1.0         11733.657406                 0.0             False
7   11886.202237   11784.688443 -1134.425781  11886.202237  101.527588  11784.688443        0.0  101.513794        1.527492       1.0         11733.657406                 0.0             False
8   11886.202237   11886.202237 -1134.425537  11886.202237   76.779312  11886.202237        0.0    0.000000      -98.472264       2.0         11886.202237                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:22:02]  --------------------------------------------------------------------------------
[09/27 16:22:02]  Iteration: 61 (10 solution, 50 counterexamples)
[09/27 16:22:04]  Generator returned sat in 1.026087 secs.
[09/27 16:22:04]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:22:06]  Improved gap from 0.0 to 0
[09/27 16:22:07]  Improved number of small numbers from 40 to 111 out of a max of 111
[09/27 16:22:07]  Verifer returned sat in 2.187338 secs.
[09/27 16:22:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   11234.592285   10934.571533 -884.322754  11234.592285    0.013672  10934.571533        0.0  300.020752      300.020752       6.0         10934.571533                -1.0                -1
1   11234.592285   10934.571777 -884.322754  11234.592285    0.013672  10934.571777        0.0  300.020508      200.020752       7.0         10934.571533                 0.0             False
2   11234.592285   11134.558105 -884.322754  11234.592285    0.013672  11134.558105        0.0  100.034180      100.020752       6.0         10934.571533                 1.0              True
3   11234.592285   11134.571777 -884.322754  11234.592285    0.013916  11134.571777        0.0  100.020508        0.020752       6.0         10934.571533                 0.0             False
4   11234.592285   11234.592285 -785.343506  11234.592285  100.007080  11234.592285        0.0    0.000000       -1.000000       7.0         10934.571533                 0.0             False
5   11235.592285   11235.592285 -685.343506  11235.592285    1.000000  11235.592285        0.0    0.000000        0.000000       1.0         11235.592285                 1.0              True
6   11286.609375   11286.609375 -636.360596  11286.609375   51.017090  11286.609375        0.0    0.000000        0.000000       1.0         11235.592285                 0.0             False
7   11388.136719   11303.103516 -636.360596  11388.136719  101.527344  11303.103516        0.0   85.033203        1.527344       1.0         11235.592285                 0.0             False
8   11388.136719   11388.136719 -538.887939  11388.136719   85.019287  11388.136719        0.0    0.000000       -1.000000       2.0         11388.136719                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:22:07]  --------------------------------------------------------------------------------
[09/27 16:22:07]  Iteration: 62 (10 solution, 51 counterexamples)
[09/27 16:22:10]  Generator returned sat in 1.704495 secs.
[09/27 16:22:10]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:22:18]  Improved gap from 0.0 to 0
[09/27 16:22:18]  Improved number of small numbers from 62 to 111 out of a max of 111
[09/27 16:22:18]  Verifer returned sat in 8.035274 secs.
[09/27 16:22:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9600.140869    9300.120361  359.854248  9600.140869    0.013428  9300.120361        0.0  300.020508      300.020508       6.0          9300.120361                -1.0                -1
1    9600.140869    9300.120361  359.854248  9600.140869    0.013428  9300.120361        0.0  300.020508      200.020508       6.0          9300.120361                 0.0             False
2    9600.140869    9500.106689  359.854248  9600.140869    0.013428  9500.106689        0.0  100.034180      100.020508       7.0          9300.120361                 0.0             False
3    9600.140869    9500.120361  359.854248  9600.140869    0.013672  9500.120361        0.0  100.020508        0.020508       8.0          9300.120361                 0.0             False
4    9600.140869    9600.140869  458.833740  9600.140869  100.006836  9600.140869        0.0    0.000000       -1.000000       9.0          9300.120361                 0.0             False
5    9601.140869    9601.140869  507.816650  9601.140869    1.000000  9601.140869        0.0    0.000000      -51.017090       1.0          9601.140869                 1.0              True
6    9652.157959    9652.157959  606.289551  9652.157959   51.017090  9652.157959        0.0    0.000000       -1.527100       1.0          9601.140869                 0.0             False
7    9753.685303    9668.652100  606.289551  9753.685303  101.527344  9668.652100        0.0   85.033203        0.000244       1.0          9601.140869                 0.0             False
8    9753.685303    9753.685303  705.289307  9753.685303   85.019287  9753.685303        0.0    0.000000       -1.000000       2.0          9753.685303                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:22:19]  --------------------------------------------------------------------------------
[09/27 16:22:19]  Iteration: 63 (10 solution, 52 counterexamples)
[09/27 16:22:25]  Generator returned sat in 4.929239 secs.
[09/27 16:22:25]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:22:26]  Improved gap from 0.0 to 53.125
[09/27 16:22:27]  Improved number of small numbers from 43 to 77 out of a max of 111
[09/27 16:22:27]  Verifer returned sat in 2.067539 secs.
[09/27 16:22:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8750.384277    8550.411377   973.003418  8750.384277  400.000000  8550.411377        0.0  199.972900      199.972900       2.0          8550.411377                -1.0                -1
1    8950.384277    8550.411621   973.003418  8950.384277  399.972900  8550.411621        0.0  399.972656      299.972900       2.0          8950.384277                 0.0             False
2    8950.384277    8750.411377   973.003418  8950.384277   58.684814  8750.411377        0.0  199.972900      199.972900       2.0          8950.384277                 0.0             False
3    8950.384277    8850.411377   973.003418  8950.384277   58.657593  8850.411377        0.0   99.972900       99.972900       3.0          8950.384277                 0.0             False
4    8950.384277    8893.754019   973.003418  8950.384277   57.657593  8893.754019        0.0   56.630259       -0.027100       4.0          8950.384277                 0.0             False
5    8950.411611    8950.411611  1019.878174  8950.411611   56.657593  8950.411611        0.0    0.000000      -53.125010       1.0          8950.411611                 0.0             False
6    9006.069204    9006.069204  1064.220459  9006.069204   55.657593  9006.069204        0.0    0.000000      -53.125132       1.0          9006.069204                 0.0             False
7    9060.726797    9060.726797  1109.562988  9060.726797   54.657593  9060.726797        0.0    0.000000      -53.125010       1.0          9060.726797                 0.0             False
8    9114.384390    9114.384390  1155.905273  9114.384390   53.657593  9114.384390        0.0    0.000000      -53.125132       1.0          9114.384390                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:22:28]  --------------------------------------------------------------------------------
[09/27 16:22:28]  Iteration: 64 (10 solution, 53 counterexamples)
[09/27 16:22:31]  Generator returned sat in 1.478468 secs.
[09/27 16:22:31]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/27 16:22:36]  Improved gap from 0.0 to 0
[09/27 16:22:37]  Improved number of small numbers from 57 to 68 out of a max of 111
[09/27 16:22:37]  Verifer returned sat in 6.429136 secs.
[09/27 16:22:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    9048.404297    9048.402861   475.011719  9048.404297  0.001465  9048.402861        0.0  0.001436        0.001221       2.0          9048.402861                -1.0                -1
1    9048.405361    9048.405361   573.037109  9048.405361  0.002500  9048.405361        0.0  0.000000       -1.972324       1.0          9048.402861                 0.0             False
2    9050.377861    9050.377861   673.011963  9050.377861  1.972500  9050.377861        0.0  0.000000       -0.024971       1.0          9048.402861                 0.0             False
3    9050.402861    9050.402861   772.999512  9050.402861  0.025000  9050.402861        0.0  0.000000       -0.012422       1.0          9050.402861                 0.0             False
4    9050.415361    9050.415361   872.988281  9050.415361  0.012500  9050.415361        0.0  0.000000       -0.011152       1.0          9050.415361                 0.0             False
5    9050.426611    9050.426611   972.978271  9050.426611  0.011250  9050.426611        0.0  0.000000       -0.009912       1.0          9050.426611                 0.0             False
6    9050.436611    9050.436611  1072.968262  9050.436611  0.010000  9050.436611        0.0  0.000000       -0.009922       1.0          9050.436611                 0.0             False
7    9050.446611    9050.446611  1172.958252  9050.446611  0.010000  9050.446611        0.0  0.000000       -0.009932       1.0          9050.436611                 0.0             False
8    9050.456611    9050.456611  1272.947021  9050.456611  0.010000  9050.456611        0.0  0.000000       -0.011162       1.0          9050.436611                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:22:38]  --------------------------------------------------------------------------------
[09/27 16:22:38]  Iteration: 65 (10 solution, 54 counterexamples)
[09/27 16:22:41]  Generator returned sat in 1.618895 secs.
[09/27 16:22:41]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:22:41]  Improved gap from 0.0 to 100
[09/27 16:22:41]  Improved number of small numbers from 62 to 111 out of a max of 111
[09/27 16:22:41]  Verifer returned sat in 0.464653 secs.
[09/27 16:22:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    8750.409424    8750.402832  673.011963  8750.409424  400.013672  8750.402832        0.0    0.006592      -99.993164       4.0          8750.402832                -1.0                -1
1    9150.416504    8950.402588  673.011963  9150.416504  400.013672  8950.402588        0.0  200.013916      200.013916       1.0          8750.402832                 1.0             False
2    9350.409424    9050.402588  673.011963  9350.409424  400.006836  9050.402588        0.0  300.006836      300.006836       2.0          9350.409424                 0.0             False
3    9450.443359    9150.389160  673.011963  9450.443359  400.040771  9150.389160        0.0  300.054199      300.040771       3.0          9350.409424                 1.0             False
4    9550.429932    9150.423096  673.011963  9550.429932  400.040771  9150.423096        0.0  400.006836      300.027344       3.0          9350.409424                 1.0             False
5    9550.463867    9350.395996  673.011963  9550.463867  400.040771  9350.395996        0.0  200.067871      200.061279       4.0          9350.409424                 1.0             False
6    9750.436768    9350.402588  673.011963  9750.436768  400.040771  9350.402588        0.0  400.034180      300.034180       5.0          9350.409424                 1.0             False
7    9750.443359    9550.402588  673.011963  9750.443359  400.040771  9550.402588        0.0  200.040771      200.040771       4.0          9350.409424                 1.0             False
8    9950.443359    9550.436523  673.011963  9950.443359  400.040771  9550.436523        0.0  400.006836      300.040771       4.0          9350.409424                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:22:42]  --------------------------------------------------------------------------------
[09/27 16:22:42]  Iteration: 66 (10 solution, 55 counterexamples)
[09/27 16:22:46]  Generator returned sat in 2.647951 secs.
[09/27 16:22:46]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:22:47]  Verifer returned unsat in 1.269732 secs.
[09/27 16:22:47]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:22:48]  --------------------------------------------------------------------------------
[09/27 16:22:48]  Iteration: 67 (11 solution, 55 counterexamples)
[09/27 16:22:51]  Generator returned sat in 1.491585 secs.
[09/27 16:22:51]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:22:53]  Improved gap from 0.0 to 0
[09/27 16:22:54]  Improved number of small numbers from 56 to 63 out of a max of 111
[09/27 16:22:54]  Verifer returned sat in 2.971366 secs.
[09/27 16:22:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10747.404921   10441.820921   672.994463  10747.404921    0.002500  10441.820921        0.0  305.58400      305.584000       6.0         10441.820921                -1.0                -1
1   10747.404921   10541.820801   672.994463  10747.404921   11.162842  10541.820801        0.0  205.58412      205.584000       6.0         10441.820921                 0.0             False
2   10747.404921   10641.818421   672.994463  10747.404921   11.162842  10641.818421        0.0  105.58650      105.584000       7.0         10441.820921                 0.0             False
3   10747.404921   10641.820921   672.994463  10747.404921   11.163000  10641.820921        0.0  105.58400        5.584000       8.0         10441.820921                 0.0             False
4   10747.404921   10747.404921   767.410400  10747.404921  105.581500  10747.404921        0.0    0.00000       -0.000063       9.0         10441.820921                 0.0             False
5   10747.414921   10747.414921   867.400391  10747.414921    0.010000  10747.414921        0.0    0.00000       -0.000072       1.0         10747.414921                 1.0              True
6   10800.218171   10800.218171   914.597168  10800.218171   52.803250  10800.218171        0.0    0.00000       -0.000045       1.0         10747.414921                 0.0             False
7   10905.818421   10800.220671   914.597168  10905.818421  105.600250  10800.220671        0.0  105.59775        5.600205       1.0         10747.414921                 0.0             False
8   10905.818421   10905.818421  1008.996826  10905.818421   79.208000  10905.818421        0.0    0.00000       -0.000137       2.0         10905.818421                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:22:54]  --------------------------------------------------------------------------------
[09/27 16:22:54]  Iteration: 68 (11 solution, 56 counterexamples)
[09/27 16:22:58]  Generator returned sat in 2.018282 secs.
[09/27 16:22:58]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:23:01]  Improved gap from 0.0 to 0
[09/27 16:23:02]  Improved number of small numbers from 75 to 82 out of a max of 111
[09/27 16:23:02]  Verifer returned sat in 4.496607 secs.
[09/27 16:23:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10409.202637   10108.200762  1006.614622  10409.202637    0.001221  10108.200762        0.0  301.001875      301.001875       8.0         10108.200762                -1.0                -1
1   10409.202637   10208.200684  1006.614622  10409.202637    0.001221  10208.200684        0.0  201.001953      201.001875       6.0         10108.200762                 0.0             False
2   10409.202637   10308.199512  1006.614622  10409.202637    0.001221  10308.199512        0.0  101.003125      101.001875       7.0         10108.200762                 0.0             False
3   10409.202637   10308.200762  1006.614622  10409.202637    0.001250  10308.200762        0.0  101.001875        1.001875       8.0         10108.200762                 0.0             False
4   10409.202637   10409.202637  1105.602783  10409.202637  101.000625  10409.202637        0.0    0.000000       -0.009964       9.0         10108.200762                 0.0             False
5   10409.212637   10409.212637  1205.602539  10409.212637    0.010000  10409.212637        0.0    0.000000       -0.000208       1.0         10409.212637                 1.0              True
6   10460.724199   10460.724199  1251.073730  10460.724199   51.511562  10460.724199        0.0    0.000000       -3.017454       1.0         10409.212637                 0.0             False
7   10563.741699   10477.222012  1251.073730  10563.741699  103.017500  10477.222012        0.0   86.519688        0.000046       1.0         10409.212637                 0.0             False
8   10563.741699   10563.741699  1251.073730  10563.741699   86.518438  10563.741699        0.0    0.000000      -99.999954       2.0         10563.741699                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:23:03]  --------------------------------------------------------------------------------
[09/27 16:23:03]  Iteration: 69 (11 solution, 57 counterexamples)
[09/27 16:23:06]  Generator returned sat in 0.939978 secs.
[09/27 16:23:06]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:23:10]  Improved gap from 0.0 to 0
[09/27 16:23:10]  Improved number of small numbers from 56 to 75 out of a max of 111
[09/27 16:23:10]  Verifer returned sat in 4.695236 secs.
[09/27 16:23:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   10610.203262   10309.201172  1006.614746  10610.203262    0.001221  10309.201172        0.0  301.002090      301.002090       6.0         10309.201172                -1.0                -1
1   10610.203262   10309.201416  1006.614746  10610.203262    0.001221  10309.201416        0.0  301.001846      201.002090       7.0         10309.201172                 0.0             False
2   10610.203262   10509.200137  1006.614746  10610.203262    0.001250  10509.200137        0.0  101.003125      101.002090       8.0         10309.201172                 1.0              True
3   10610.203262   10509.201387  1006.614746  10610.203262    0.001250  10509.201387        0.0  101.001875        1.002090       6.0         10309.201172                 1.0              True
4   10610.203262   10610.203262  1105.612549  10610.203262  101.000732  10610.203262        0.0    0.000000       -0.000107       7.0         10309.201172                 0.0             False
5   10610.213262   10610.213262  1205.602539  10610.213262    0.010000  10610.213262        0.0    0.000000       -0.000117       1.0         10610.213262                 1.0              True
6   10661.724824   10661.724824  1254.091064  10661.724824   51.511562  10661.724824        0.0    0.000000       -0.000029       1.0         10610.213262                 0.0             False
7   10764.742324   10661.726074  1254.091064  10764.742324  103.017500  10661.726074        0.0  103.016250        3.017471       1.0         10610.213262                 0.0             False
8   10764.742324   10764.742324  1254.091064  10764.742324   78.270156  10764.742324        0.0    0.000000      -96.982529       2.0         10764.742324                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/27 16:23:11]  --------------------------------------------------------------------------------
[09/27 16:23:11]  Iteration: 70 (11 solution, 58 counterexamples)
[09/27 16:23:13]  Generator returned unsat in 0.645223 secs.
[09/27 16:23:13]  [96mNo more solutions found[0m
[09/27 16:23:13]  Final solutions:
[09/27 16:23:13]  0: [1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:23:13]  1: [1m[92mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:23:13]  2: [1m[92mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:23:13]  3: [1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:23:13]  4: [1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:23:13]  5: [1m[92mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:23:13]  6: [1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:23:13]  7: [1m[92mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:23:13]  8: [1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:23:13]  9: [1m[92mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/27 16:23:13]  10: [1m[92mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/27 16:23:13]  Took 296.174195 secs.
