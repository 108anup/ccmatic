[09/28 12:33:46]  --------------------------------------------------------------------------------
[09/28 12:33:46]  Iteration: 1 (0 solution, 0 counterexamples)
[09/28 12:33:46]  Generator returned sat in 0.005496 secs.
[09/28 12:33:46]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:33:46]  Improved gap from 0.7734375 to 100
[09/28 12:33:46]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:33:46]  Verifer returned sat in 0.446665 secs.
[09/28 12:33:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1402.375000      -1502.375  599.1825 -1402.375000     0.125000    -1502.375        0.0   100.000000        0.000000       2.0         -1502.375000                -1.0                -1
1   -1402.375000      -1402.375  599.1825 -1402.375000    99.875000    -1402.375        0.0     0.000000     -100.000000       2.0         -1502.375000                 0.0             False
2   -1002.375000      -1202.500  599.1825 -1002.375000   400.000000    -1202.500        0.0   200.125000      200.000000       1.0         -1502.375000                 0.0             False
3       0.000000      -1202.375  599.1825     0.000000  1202.500000    -1202.375        0.0  1202.375000     1102.375000       2.0         -1502.375000                 0.0             False
4       0.000000      -1002.375  599.1825     0.000000  1202.250000    -1002.375        0.0  1002.375000     1002.375000       3.0             0.000000                 0.0             False
5     399.750000      -1002.375  599.1825   399.750000  1402.125000    -1002.375        0.0  1402.125000     1302.125000       3.0             0.000000                 0.0             False
6     399.750000       -839.375  599.1825   399.750000  1102.312500     -839.375        0.0  1239.125000     1202.125000       4.0           399.750000                 0.0             False
7     438.781250       -702.375  599.1825   438.781250  1278.156250     -702.375        0.0  1141.156250     1141.156250       5.0           399.750000                 0.0             False
8     537.703125       -602.375  599.1825   537.703125  1240.078125     -602.375        0.0  1140.078125     1140.078125       6.0           537.703125                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:33:47]  --------------------------------------------------------------------------------
[09/28 12:33:47]  Iteration: 2 (0 solution, 1 counterexamples)
[09/28 12:33:47]  Generator returned sat in 0.053618 secs.
[09/28 12:33:47]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:33:47]  Improved gap from 0.0 to 64.0625
[09/28 12:33:47]  Improved number of small numbers from 103 to 111 out of a max of 111
[09/28 12:33:47]  Verifer returned sat in 0.358153 secs.
[09/28 12:33:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1402.375244   -1802.375244  599.182617 -1402.375244  299.9375 -1802.375244        0.0  400.000000      400.000000       9.0         -1802.375244                -1.0                -1
1   -1402.375244   -1702.375244  599.182617 -1402.375244  299.9375 -1702.375244        0.0  300.000000      300.000000       3.0         -1802.375244                 1.0             False
2   -1402.375244   -1602.375244  599.182617 -1402.375244  299.9375 -1602.375244        0.0  200.000000      200.000000       3.0         -1802.375244                 1.0              True
3   -1402.375244   -1502.375244  599.182617 -1402.375244   69.0625 -1502.375244        0.0  100.000000      100.000000       4.0         -1402.375244                 1.0              True
4   -1402.375244   -1469.499756  599.182617 -1402.375244   68.0625 -1469.499756        0.0   67.124512        0.000000       5.0         -1402.375244                 1.0             False
5   -1402.375244   -1402.375244  635.119873 -1402.375244   67.0625 -1402.375244        0.0    0.000000      -64.062744       6.0         -1402.375244                 1.0             False
6   -1336.312744   -1336.312744  668.057617 -1336.312744   66.0625 -1336.312744        0.0    0.000000      -65.062500       1.0         -1336.312744                 1.0             False
7   -1271.250244   -1271.250244  703.995117 -1271.250244   65.0625 -1271.250244        0.0    0.000000      -64.062500       1.0         -1271.250244                 0.0             False
8   -1207.187744   -1207.187744  703.995117 -1207.187744   64.0625 -1207.187744        0.0    0.000000     -100.000000       1.0         -1207.187744                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:33:48]  --------------------------------------------------------------------------------
[09/28 12:33:48]  Iteration: 3 (0 solution, 2 counterexamples)
[09/28 12:33:48]  Generator returned sat in 0.080119 secs.
[09/28 12:33:48]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:33:48]  Improved gap from 0.0 to 100
[09/28 12:33:49]  Improved number of small numbers from 69 to 71 out of a max of 111
[09/28 12:33:49]  Verifer returned sat in 0.722782 secs.
[09/28 12:33:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1501.375244   -1801.377744  598.185117 -1501.375244    0.002441 -1801.377744        0.0  300.002500        300.0025       8.0         -1801.377744                -1.0                -1
1   -1501.375244   -1801.375244  598.185117 -1501.375244    0.002441 -1801.375244        0.0  300.000000        200.0025       4.0         -1801.377744                 1.0             False
2   -1501.375244   -1605.352744  598.185117 -1501.375244    0.002686 -1605.352744        0.0  103.977500        100.0025       4.0         -1801.377744                 0.0             False
3   -1501.375244   -1501.377744  598.185117 -1501.375244   52.000000 -1501.377744        0.0    0.002500          0.0025       4.0         -1801.377744                 0.0             False
4   -1300.377744   -1501.375244  598.185117 -1300.377744  201.000000 -1501.375244        0.0  200.997500        101.0000       5.0         -1801.377744                 0.0             False
5   -1300.377744   -1401.377744  598.185117 -1300.377744    0.010000 -1401.377744        0.0  101.000000          1.0000       2.0         -1300.377744                 1.0              True
6   -1300.377744   -1301.377744  598.185117 -1300.377744  100.997500 -1301.377744        0.0    1.000000        -99.0000       3.0         -1300.377744                 0.0             False
7   -1101.380244   -1101.380244  598.185117 -1101.380244  199.997500 -1101.380244        0.0    0.000000         -0.0025       1.0         -1300.377744                 0.0             False
8    -702.385244   -1101.377686  598.185117  -702.385244  398.995000 -1101.377686        0.0  398.992441        298.9925       1.0         -1300.377744                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:33:49]  --------------------------------------------------------------------------------
[09/28 12:33:49]  Iteration: 4 (0 solution, 3 counterexamples)
[09/28 12:33:49]  Generator returned sat in 0.076990 secs.
[09/28 12:33:49]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:33:50]  Improved gap from 0.0 to 100
[09/28 12:33:50]  Improved number of small numbers from 103 to 111 out of a max of 111
[09/28 12:33:50]  Verifer returned sat in 0.379239 secs.
[09/28 12:33:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1501.375488   -2200.375244  997.120361 -1501.375488    0.062012 -2200.375244        0.0  698.999756      698.937744       9.0         -2200.375244                -1.0                -1
1   -1501.375488   -2200.313232  997.120361 -1501.375488  147.031006 -2200.313232        0.0  698.937744      598.937744       3.0         -2200.375244                 1.0             False
2   -1501.375488   -2000.313232  997.120361 -1501.375488  147.031006 -2000.313232        0.0  498.937744      498.937744       3.0         -2200.375244                 1.0              True
3   -1501.375488   -1904.313232  997.120361 -1501.375488  147.031006 -1904.313232        0.0  402.937744      398.937744       4.0         -2200.375244                 1.0              True
4   -1501.375488   -1900.313232  997.120361 -1501.375488  147.031006 -1900.313232        0.0  398.937744      298.937744       5.0         -2200.375244                 1.0              True
5   -1501.375488   -1800.313232  997.120361 -1501.375488  149.000000 -1800.313232        0.0  298.937744      198.937744       6.0         -2200.375244                 1.0              True
6   -1501.375488   -1700.313232  997.120361 -1501.375488   99.000000 -1700.313232        0.0  198.937744       98.937744       7.0         -1501.375488                 1.0              True
7   -1500.313232   -1500.313232  997.120361 -1500.313232  200.000000 -1500.313232        0.0    0.000000        0.000000       1.0         -1501.375488                 1.0             False
8   -1101.313232   -1500.250977  997.120361 -1101.313232  399.000000 -1500.250977        0.0  398.937744      299.000000       1.0         -1501.375488                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:33:50]  --------------------------------------------------------------------------------
[09/28 12:33:50]  Iteration: 5 (0 solution, 4 counterexamples)
[09/28 12:33:50]  Generator returned sat in 0.085948 secs.
[09/28 12:33:50]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:33:52]  Improved gap from 0.0 to 40.625
[09/28 12:33:52]  Improved number of small numbers from 43 to 111 out of a max of 111
[09/28 12:33:52]  Verifer returned sat in 1.806234 secs.
[09/28 12:33:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1593.364990   -1693.364990  490.172119 -1593.364990    0.031006 -1693.364990        0.0  100.000000      100.000000       3.0          -1693.36499                -1.0                -1
1   -1593.364990   -1593.427002  490.172119 -1593.364990    0.031006 -1593.427002        0.0    0.062012        0.000000       3.0          -1693.36499                 0.0             False
2   -1593.364990   -1593.364990  549.547119 -1593.364990    0.031250 -1593.364990        0.0    0.000000      -40.625000       3.0          -1693.36499                 0.0             False
3   -1352.739990   -1467.458740  549.547119 -1352.739990  240.625000 -1467.458740        0.0  114.718750      100.000000       1.0          -1693.36499                 0.0             False
4   -1352.739990   -1433.656494  549.547119 -1352.739990  113.953125 -1433.656494        0.0   80.916504        0.000000       2.0          -1352.73999                 0.0             False
5   -1352.739990   -1352.739990  608.922119 -1352.739990   80.885254 -1352.739990        0.0    0.000000      -40.625000       3.0          -1352.73999                 0.0             False
6   -1231.427490   -1297.896240  608.922119 -1231.427490  121.312500 -1297.896240        0.0   66.468750      -19.312500       1.0          -1352.73999                 0.0             False
7   -1212.114990   -1212.114990  668.297119 -1212.114990   85.781250 -1212.114990        0.0    0.000000      -40.625000       1.0          -1212.11499                 0.0             False
8   -1100.344238   -1171.489990  668.297119 -1100.344238  111.770752 -1171.489990        0.0   71.145752      -28.854248       1.0          -1212.11499                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:33:53]  --------------------------------------------------------------------------------
[09/28 12:33:53]  Iteration: 6 (0 solution, 5 counterexamples)
[09/28 12:33:53]  Generator returned sat in 0.042860 secs.
[09/28 12:33:53]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:34:00]  Improved gap from 0.0 to 0
[09/28 12:34:00]  Improved number of small numbers from 72 to 76 out of a max of 111
[09/28 12:34:00]  Verifer returned sat in 7.137056 secs.
[09/28 12:34:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1749.755615   -2050.757490  549.547119 -1749.755615    0.001250 -2050.757490        0.0  301.001875      301.001875       2.0         -2050.757490                -1.0                -1
1   -1749.755615   -2050.757324  549.547119 -1749.755615    0.001250 -2050.757324        0.0  301.001709      201.001875       2.0         -2050.757490                 0.0             False
2   -1749.755615   -1869.494365  549.547119 -1749.755615    0.001250 -1869.494365        0.0  119.738750      101.001875       3.0         -2050.757490                 0.0             False
3   -1749.755615   -1850.757490  549.547119 -1749.755615    0.001465 -1850.757490        0.0  101.001875        1.001875       4.0         -2050.757490                 0.0             False
4   -1749.755615   -1749.755615  648.545244 -1749.755615  101.000732 -1749.755615        0.0    0.000000        0.000000       5.0         -2050.757490                 0.0             False
5   -1749.745615   -1749.745615  748.535244 -1749.745615    0.010000 -1749.745615        0.0    0.000000        0.000000       1.0         -1749.745615                 1.0              True
6   -1688.866240   -1737.709365  748.535244 -1688.866240   60.879375 -1737.709365        0.0   48.843125      -39.120625       1.0         -1749.745615                 0.0             False
7   -1649.745615   -1649.745615  848.535156 -1649.745615   87.963750 -1649.745615        0.0    0.000000       -0.000088       1.0         -1749.745615                 0.0             False
8   -1554.758740   -1554.758740  853.548340 -1554.758740   94.986875 -1554.758740        0.0    0.000000       -0.000029       1.0         -1749.745615                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:01]  --------------------------------------------------------------------------------
[09/28 12:34:01]  Iteration: 7 (0 solution, 6 counterexamples)
[09/28 12:34:01]  Generator returned sat in 0.071749 secs.
[09/28 12:34:01]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:34:02]  Improved number of small numbers from 39 to 64 out of a max of 110
[09/28 12:34:02]  Verifer returned sat in 1.380972 secs.
[09/28 12:34:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1665.165771   -1888.523926  387.313495 -1665.165771    0.061768 -1888.523926        0.0  223.358154      223.358095       2.0         -1888.523926                -1.0                -1
1   -1665.165771   -1888.523682  387.313495 -1665.165771    0.062012 -1888.523682        0.0  223.357910      123.358095       2.0         -1888.523926                 0.0             False
2   -1665.165771   -1688.523866  387.313495 -1665.165771   50.489502 -1688.523866        0.0   23.358095       23.358095       3.0         -1888.523926                 0.0             False
3   -1638.096044   -1665.103711  387.313495 -1638.096044   50.427823 -1665.103711        0.0   27.007667      -49.572177       1.0         -1638.096044                 0.0             False
4   -1588.461977   -1588.523866  387.313495 -1588.461977   76.641734 -1588.523866        0.0    0.061890      -99.938110       1.0         -1638.096044                 0.0             False
5   -1472.561265   -1472.561265  387.313495 -1472.561265  115.962601 -1472.561265        0.0    0.000000      -84.037399       1.0         -1638.096044                 0.0             False
6   -1297.617363   -1297.617363  387.313495 -1297.617363  174.943902 -1297.617363        0.0    0.000000       -9.093497       1.0         -1638.096044                 0.0             False
7   -1034.201510   -1188.523926  387.313495 -1034.201510  263.415853 -1188.523926        0.0  154.322415      154.322356       1.0         -1638.096044                 0.0             False
8    -792.400146   -1188.461914  387.313495  -792.400146  396.123779 -1188.461914        0.0  396.061768      296.123720       2.0         -1638.096044                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:03]  --------------------------------------------------------------------------------
[09/28 12:34:03]  Iteration: 8 (0 solution, 7 counterexamples)
[09/28 12:34:04]  Generator returned sat in 0.589163 secs.
[09/28 12:34:04]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:04]  Improved number of small numbers from 41 to 74 out of a max of 110
[09/28 12:34:04]  Verifer returned sat in 0.858547 secs.
[09/28 12:34:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1668.375244   -1891.997070  390.786865 -1668.375244    0.061768 -1891.997070        0.0  223.621826      223.621826       4.0         -1891.997070                -1.0                -1
1   -1668.375244   -1888.523926  390.786865 -1668.375244    0.062012 -1888.523926        0.0  220.148682      123.621826       2.0         -1891.997070                 1.0             False
2   -1668.375244   -1691.997117  390.786865 -1668.375244   53.962891 -1691.997117        0.0   23.621873       23.621826       3.0         -1891.997070                 0.0             False
3   -1638.096044   -1668.313587  390.786865 -1638.096044   53.901074 -1668.313587        0.0   30.217544      -46.098973       1.0         -1638.096044                 0.0             False
4   -1588.461977   -1588.523866  390.786865 -1588.461977   79.851611 -1588.523866        0.0    0.061890      -96.464906       1.0         -1638.096044                 0.0             False
5   -1469.746450   -1469.746450  390.786865 -1469.746450  118.777416 -1469.746450        0.0    0.000000      -77.749380       1.0         -1638.096044                 0.0             False
6   -1292.580326   -1292.580326  390.786865 -1292.580326  177.166124 -1292.580326        0.0    0.000000       -0.583256       1.0         -1638.096044                 0.0             False
7   -1027.831140   -1191.997070  390.786865 -1027.831140  264.749186 -1191.997070        0.0  164.165930      164.165930       1.0         -1638.096044                 0.0             False
8    -795.873291   -1191.935303  390.786865  -795.873291  396.123779 -1191.935303        0.0  396.062012      296.123779       2.0         -1638.096044                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:05]  --------------------------------------------------------------------------------
[09/28 12:34:05]  Iteration: 9 (0 solution, 8 counterexamples)
[09/28 12:34:06]  Generator returned sat in 0.526138 secs.
[09/28 12:34:06]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:06]  Improved gap from 0.0 to 100
[09/28 12:34:06]  Improved number of small numbers from 76 to 111 out of a max of 111
[09/28 12:34:06]  Verifer returned sat in 0.379236 secs.
[09/28 12:34:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1891.965820   -1989.027832  390.786377 -1891.965820    0.062012 -1989.027832        0.0   97.062012        0.031006       6.0         -1989.027832                -1.0                -1
1   -1891.965820   -1891.996826  390.786377 -1891.965820    0.031006 -1891.996826        0.0    0.031006      -99.968994       3.0         -1891.965820                 1.0             False
2   -1591.996826   -1691.997070  390.786377 -1591.996826  300.000000 -1691.997070        0.0  100.000244      100.000000       1.0         -1891.965820                 1.0             False
3   -1591.996826   -1591.996826  390.786377 -1591.996826    0.031006 -1591.996826        0.0    0.000000        0.000000       2.0         -1591.996826                 0.0             False
4   -1195.965820   -1591.996826  390.786377 -1195.965820  396.031006 -1591.996826        0.0  396.031006      296.031006       2.0         -1591.996826                 1.0             False
5   -1195.965820   -1440.027832  390.786377 -1195.965820  299.000000 -1440.027832        0.0  244.062012      196.031006       2.0         -1195.965820                 1.0             False
6   -1189.058594   -1391.996826  390.786377 -1189.058594  250.969238 -1391.996826        0.0  202.938232      102.938232       3.0         -1189.058594                 1.0             False
7   -1189.058594   -1191.996826  390.786377 -1189.058594  199.000000 -1191.996826        0.0    2.938232        2.938232       2.0         -1189.058594                 1.0             False
8    -792.996826   -1189.027832  390.786377  -792.996826  399.000000 -1189.027832        0.0  396.031006      299.000000       1.0         -1189.058594                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:07]  --------------------------------------------------------------------------------
[09/28 12:34:07]  Iteration: 10 (0 solution, 9 counterexamples)
[09/28 12:34:07]  Generator returned sat in 0.331376 secs.
[09/28 12:34:07]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:08]  Improved number of small numbers from 60 to 77 out of a max of 110
[09/28 12:34:08]  Verifer returned sat in 0.880574 secs.
[09/28 12:34:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -3507.689209   -3707.627686  390.786377 -3507.689209   200.061523 -3707.627686        0.0  199.938477      199.938242       3.0         -3707.627686                -1.0                -1
1   -3507.565918   -3607.627686  390.786377 -3507.565918   200.061768 -3607.627686        0.0  100.061768      100.061533       3.0         -3707.627686                 1.0             False
2   -3507.565918   -3507.627451  390.786377 -3507.565918    33.769775 -3507.627451        0.0    0.061533        0.061533       2.0         -3507.565918                 1.0              True
3   -3473.919606   -3473.981374  390.786377 -3473.919606    33.707845 -3473.981374        0.0    0.061768      -66.292155       1.0         -3473.919606                 1.0             False
4   -3407.565684   -3407.627451  390.786377 -3407.565684    66.415690 -3407.627451        0.0    0.061768      -99.938232       1.0         -3473.919606                 0.0             False
5   -3275.796071   -3307.627451  390.786377 -3275.796071   131.831380 -3307.627451        0.0   31.831380      -68.168620       1.0         -3473.919606                 0.0             False
6   -3044.964691   -3207.627451  390.786377 -3044.964691   262.662760 -3207.627451        0.0  162.662760       62.662760       1.0         -3473.919606                 0.0             False
7   -2683.301930   -3007.627451  390.786377 -2683.301930   524.325521 -3007.627451        0.0  324.325521      324.325521       1.0         -3473.919606                 0.0             False
8   -1959.976410   -2907.627686  390.786377 -1959.976410  1047.651042 -2907.627686        0.0  947.651276      947.651042       2.0         -3473.919606                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:09]  --------------------------------------------------------------------------------
[09/28 12:34:09]  Iteration: 11 (0 solution, 10 counterexamples)
[09/28 12:34:10]  Generator returned sat in 0.883853 secs.
[09/28 12:34:10]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:34:11]  Improved gap from 0.0 to 100
[09/28 12:34:11]  Improved number of small numbers from 54 to 111 out of a max of 111
[09/28 12:34:11]  Verifer returned sat in 1.021846 secs.
[09/28 12:34:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -3975.734375   -4675.672607  1358.831543 -3975.734375    0.061768 -4675.672607        0.0  699.938232      699.938232       1.0         -4675.672607                -1.0                -1
1   -3975.734375   -4575.672607  1358.831543 -3975.734375    0.061768 -4575.672607        0.0  599.938232      599.938232       2.0         -4675.672607                 0.0             False
2   -3975.734375   -4575.610596  1358.831543 -3975.734375    0.061768 -4575.610596        0.0  599.876221      499.938232       3.0         -4675.672607                 1.0              True
3   -3975.734375   -4475.672607  1358.831543 -3975.734375  399.999756 -4475.672607        0.0  499.938232      399.938232       4.0         -4675.672607                 1.0              True
4   -3975.734375   -4375.672607  1358.831543 -3975.734375  400.000000 -4375.672607        0.0  399.938232      299.938232       5.0         -4675.672607                 1.0              True
5   -3975.672607   -4275.672363  1358.831543 -3975.672607  400.000000 -4275.672363        0.0  299.999756      200.000000       6.0         -4675.672607                 1.0              True
6   -3675.795898   -4075.672607  1358.831543 -3675.795898  599.876465 -4075.672607        0.0  399.876709      399.876709       7.0         -4675.672607                 1.0              True
7   -3275.672607   -4009.026611  1358.831543 -3275.672607  800.000000 -4009.026611        0.0  733.354004      700.000000       8.0         -4675.672607                 1.0              True
8   -3275.672607   -3975.610840  1358.831543 -3275.672607  733.291992 -3975.610840        0.0  699.938232      600.000000       3.0         -3275.672607                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:11]  --------------------------------------------------------------------------------
[09/28 12:34:11]  Iteration: 12 (0 solution, 11 counterexamples)
[09/28 12:34:12]  Generator returned sat in 0.036457 secs.
[09/28 12:34:12]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:34:12]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:34:12]  Verifer returned sat in 0.157153 secs.
[09/28 12:34:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -3975.734375   -4676.172607  1358.831543 -3975.734375    0.061768 -4676.172607        0.0  700.438232      699.938232       1.0         -4676.172607                -1.0                -1
1   -3975.734375   -4576.172607  1358.831543 -3975.734375    0.061768 -4576.172607        0.0  600.438232      599.938232       2.0         -4676.172607                 0.0             False
2   -3975.734375   -4575.610596  1358.831543 -3975.734375    0.061768 -4575.610596        0.0  599.876221      499.938232       3.0         -4676.172607                 1.0              True
3   -3975.734375   -4475.672607  1358.831543 -3975.734375  399.999756 -4475.672607        0.0  499.938232      399.938232       4.0         -4676.172607                 1.0              True
4   -3975.734375   -4375.672607  1358.831543 -3975.734375  400.000000 -4375.672607        0.0  399.938232      299.938232       5.0         -4676.172607                 1.0              True
5   -3975.672607   -4275.672363  1358.831543 -3975.672607  400.000000 -4275.672363        0.0  299.999756      200.000000       6.0         -4676.172607                 1.0              True
6   -3676.795898   -4075.672607  1358.831543 -3676.795898  598.876465 -4075.672607        0.0  398.876709      398.876709       7.0         -4676.172607                 1.0              True
7   -3276.672607   -4009.026611  1358.831543 -3276.672607  799.000000 -4009.026611        0.0  732.354004      699.000000       8.0         -4676.172607                 1.0              True
8   -3276.672607   -3975.610840  1358.831543 -3276.672607  732.291992 -3975.610840        0.0  698.938232      599.000000       3.0         -3276.672607                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:12]  --------------------------------------------------------------------------------
[09/28 12:34:12]  Iteration: 13 (0 solution, 12 counterexamples)
[09/28 12:34:13]  Generator returned sat in 0.451985 secs.
[09/28 12:34:13]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:34:13]  Improved gap from 0.0 to 100
[09/28 12:34:14]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:34:14]  Verifer returned sat in 0.271279 secs.
[09/28 12:34:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -4175.703369   -4575.672607  1358.831543 -4175.703369    0.030762 -4575.672607        0.0  399.969238      399.969238       2.0         -4575.672607                -1.0                -1
1   -4175.703369   -4475.703369  1358.831543 -4175.703369    0.030762 -4475.703369        0.0  300.000000      299.969238       2.0         -4575.672607                 0.0             False
2   -4079.126465   -4475.672607  1358.831543 -4079.126465  396.576904 -4475.672607        0.0  396.546143      296.546143       3.0         -4575.672607                 0.0             False
3   -4079.126465   -4275.672607  1358.831543 -4079.126465  396.515381 -4275.672607        0.0  196.546143      196.546143       4.0         -4079.126465                 0.0             False
4   -3878.157227   -4274.187988  1358.831543 -3878.157227  397.515381 -4274.187988        0.0  396.030762      297.515381       5.0         -4079.126465                 0.0             False
5   -3875.672607   -4175.672607  1358.831543 -3875.672607  398.515381 -4175.672607        0.0  300.000000      200.000000       4.0         -4079.126465                 1.0             False
6   -3776.157227   -4075.672607  1358.831543 -3776.157227  399.515381 -4075.672607        0.0  299.515381      199.515381       3.0         -4079.126465                 0.0             False
7   -3675.157227   -3875.672607  1358.831543 -3675.157227  400.515381 -3875.672607        0.0  200.515381      200.515381       3.0         -4079.126465                 0.0             False
8   -3474.157227   -3870.187988  1358.831543 -3474.157227  401.515381 -3870.187988        0.0  396.030762      301.515381       3.0         -4079.126465                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:14]  --------------------------------------------------------------------------------
[09/28 12:34:14]  Iteration: 14 (0 solution, 13 counterexamples)
[09/28 12:34:14]  Generator returned sat in 0.059607 secs.
[09/28 12:34:14]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:34:15]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:34:15]  Verifer returned sat in 0.151259 secs.
[09/28 12:34:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -4175.703613   -4576.672852  1358.831543 -4175.703613    0.030762 -4576.672852        0.0  400.969238      399.969238       2.0         -4576.672852                -1.0                -1
1   -4175.703613   -4475.703369  1358.831543 -4175.703613    0.030762 -4475.703369        0.0  299.999756      299.969238       2.0         -4576.672852                 0.0             False
2   -4077.126953   -4475.672852  1358.831543 -4077.126953  398.576416 -4475.672852        0.0  398.545898      298.545898       3.0         -4576.672852                 0.0             False
3   -4077.126953   -4276.672852  1358.831543 -4077.126953  398.515381 -4276.672852        0.0  199.545898      198.545898       4.0         -4077.126953                 0.0             False
4   -3878.157471   -4274.187988  1358.831543 -3878.157471  398.515381 -4274.187988        0.0  396.030518      297.515381       5.0         -4077.126953                 0.0             False
5   -3875.672607   -4175.672852  1358.831543 -3875.672607  398.515381 -4175.672852        0.0  300.000244      200.000244       4.0         -4077.126953                 1.0             False
6   -3777.157471   -4075.672852  1358.831543 -3777.157471  398.515381 -4075.672852        0.0  298.515381      198.515381       3.0         -4077.126953                 0.0             False
7   -3677.157471   -3875.672852  1358.831543 -3677.157471  398.515381 -3875.672852        0.0  198.515381      198.515381       3.0         -4077.126953                 0.0             False
8   -3477.157471   -3873.187988  1358.831543 -3477.157471  398.515381 -3873.187988        0.0  396.030518      298.515381       3.0         -4077.126953                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:15]  --------------------------------------------------------------------------------
[09/28 12:34:15]  Iteration: 15 (0 solution, 14 counterexamples)
[09/28 12:34:16]  Generator returned sat in 0.259538 secs.
[09/28 12:34:16]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:34:17]  Improved gap from 0.0 to 14.0625
[09/28 12:34:18]  Improved number of small numbers from 67 to 111 out of a max of 111
[09/28 12:34:18]  Verifer returned sat in 1.667366 secs.
[09/28 12:34:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -4327.188232   -4727.126953  1322.893799 -4327.188232    0.061523 -4727.126953        0.0  399.938721      399.938721       3.0         -4727.126953                -1.0                -1
1   -4327.188232   -4727.126709  1322.893799 -4327.188232  399.938721 -4727.126709        0.0  399.938477      299.938721       3.0         -4727.126953                 0.0             False
2   -4277.065430   -4627.126709  1322.893799 -4277.065430  450.061279 -4627.126709        0.0  350.061279      250.061523       3.0         -4727.126953                 0.0             False
3   -4177.126709   -4430.878174  1322.893799 -4177.126709  450.000000 -4430.878174        0.0  253.751465      250.000244       4.0         -4177.126709                 0.0             False
4   -4177.126709   -4327.126953  1322.893799 -4177.126709  225.000000 -4327.126953        0.0  150.000244      150.000244       3.0         -4177.126709                 1.0             False
5   -4177.126709   -4277.003906  1322.893799 -4177.126709  112.500000 -4277.003906        0.0   99.877197       50.000244       3.0         -4177.126709                 0.0             False
6   -4177.126709   -4177.126709  1358.831055 -4177.126709   56.250000 -4177.126709        0.0    0.000000      -14.062500       4.0         -4177.126709                 0.0             False
7   -4149.001709   -4149.001709  1430.706055 -4149.001709   28.125000 -4149.001709        0.0    0.000000      -14.062500       1.0         -4149.001709                 1.0             False
8   -4134.939209   -4134.939209  1430.706055 -4134.939209   14.062500 -4134.939209        0.0    0.000000     -100.000000       1.0         -4134.939209                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:18]  --------------------------------------------------------------------------------
[09/28 12:34:18]  Iteration: 16 (0 solution, 15 counterexamples)
[09/28 12:34:18]  Generator returned sat in 0.058748 secs.
[09/28 12:34:18]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:20]  Improved gap from 12.1875 to 12.5
[09/28 12:34:20]  Improved number of small numbers from 54 to 111 out of a max of 111
[09/28 12:34:20]  Verifer returned sat in 1.329786 secs.
[09/28 12:34:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -4605.160645   -5105.160889  1454.901367 -4605.160645    0.061523 -5105.160889        0.0  500.000244      500.000000       1.0         -5105.160889                -1.0                -1
1   -4605.160645   -5005.160645  1454.901367 -4605.160645  231.000000 -5005.160645        0.0  400.000000      400.000000       2.0         -5105.160889                 0.0             False
2   -4605.160645   -4905.160889  1454.901367 -4605.160645  231.000000 -4905.160889        0.0  300.000244      300.000000       3.0         -5105.160889                 0.0             False
3   -4605.160645   -4835.222168  1454.901367 -4605.160645  231.000000 -4835.222168        0.0  230.061523      200.000000       4.0         -5105.160889                 0.0             False
4   -4605.160645   -4719.222168  1454.901367 -4605.160645  230.000000 -4719.222168        0.0  114.061523      100.000000       5.0         -4605.160645                 1.0              True
5   -4605.160645   -4661.222168  1454.901367 -4605.160645  114.000000 -4661.222168        0.0   56.061523        0.000000       6.0         -4605.160645                 1.0             False
6   -4605.160645   -4605.160645  1542.401367 -4605.160645   56.000000 -4605.160645        0.0    0.000000      -12.500000       7.0         -4605.160645                 1.0             False
7   -4578.160645   -4578.160645  1615.401367 -4578.160645   27.000000 -4578.160645        0.0    0.000000      -12.500000       1.0         -4578.160645                 1.0             False
8   -4565.660645   -4565.660645  1615.401611 -4565.660645   12.500000 -4565.660645        0.0    0.000000      -99.999756       1.0         -4565.660645                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:20]  --------------------------------------------------------------------------------
[09/28 12:34:20]  Iteration: 17 (0 solution, 16 counterexamples)
[09/28 12:34:21]  Generator returned sat in 0.439184 secs.
[09/28 12:34:21]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:22]  Improved gap from 0.0 to 10.9375
[09/28 12:34:22]  Improved number of small numbers from 90 to 111 out of a max of 111
[09/28 12:34:22]  Verifer returned sat in 0.888309 secs.
[09/28 12:34:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -4917.467529   -5017.406250  1367.146973 -4917.467529    0.061523 -5017.406250        0.0   99.938721       99.938721       1.0         -5017.406250                -1.0                -1
1   -4505.344971   -5017.406250  1367.146973 -4505.344971  512.061279 -5017.406250        0.0  512.061279      412.061279       1.0         -5017.406250                 0.0             False
2   -4505.344971   -4917.406250  1367.146973 -4505.344971  512.061279 -4917.406250        0.0  412.061279      312.061279       2.0         -5017.406250                 0.0             False
3   -4505.344971   -4717.406494  1367.146973 -4505.344971  412.000000 -4717.406494        0.0  212.061523      212.061279       3.0         -4505.344971                 0.0             False
4   -4505.344971   -4617.406494  1367.146973 -4505.344971  205.000000 -4617.406494        0.0  112.061523      112.061279       4.0         -4505.344971                 0.0             False
5   -4505.344971   -4517.406250  1367.146973 -4505.344971  101.500000 -4517.406250        0.0   12.061279       12.061279       5.0         -4505.344971                 1.0             False
6   -4467.656250   -4467.656250  1406.459229 -4467.656250   49.750000 -4467.656250        0.0    0.000000      -10.937744       1.0         -4467.656250                 1.0             False
7   -4443.781250   -4443.781250  1482.584473 -4443.781250   23.875000 -4443.781250        0.0    0.000000      -10.937500       1.0         -4443.781250                 0.0             False
8   -4432.843750   -4432.843750  1482.584473 -4432.843750   10.937500 -4432.843750        0.0    0.000000     -100.000000       1.0         -4432.843750                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:23]  --------------------------------------------------------------------------------
[09/28 12:34:23]  Iteration: 18 (0 solution, 17 counterexamples)
[09/28 12:34:23]  Generator returned sat in 0.365564 secs.
[09/28 12:34:24]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:34:24]  Improved gap from 0.01 to 100
[09/28 12:34:25]  Improved number of small numbers from 45 to 101 out of a max of 111
[09/28 12:34:25]  Verifer returned sat in 1.139407 secs.
[09/28 12:34:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t      cwnd_0,t   service_0,t  losts_0,t       queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -8421.426514  -15107.071289  11456.812012 -8421.426514      0.030518 -15107.071289        0.0   6685.644775     6685.644775       8.0        -15107.071289                -1.0                -1
1   -8421.426514  -15007.071289  11456.812012 -8421.426514      0.030518 -15007.071289        0.0   6585.644775     6585.644775       8.0        -15107.071289                 1.0             False
2   -8421.426514  -14907.101787  11456.812012 -8421.426514      0.030518 -14907.101787        0.0   6485.675273     6485.644775       9.0        -15107.071289                 1.0              True
3   -8421.426514  -14907.071289  11456.812012 -8421.426514      0.030701 -14907.071289        0.0   6485.644775     6385.644775       7.0        -15107.071289                 1.0              True
4   -8421.426514  -14807.071289  11456.812012 -8421.426514    399.061401 -14807.071289        0.0   6385.644775     6285.644775       7.0        -15107.071289                 1.0              True
5   -8421.426514  -14707.071086  11456.812012 -8421.426514   1197.122803 -14707.071086        0.0   6285.644573     6185.644775       7.0        -15107.071289                 1.0              True
6   -8421.426514  -14607.071289  11456.812012 -8421.426514   2793.307007 -14607.071289        0.0   6185.644775     6085.644775       8.0        -15107.071289                 1.0              True
7   -8421.426514  -14407.071289  11456.812012 -8421.426514   6185.614014 -14407.071289        0.0   5985.644775     5985.644775       8.0        -15107.071289                 1.0              True
8   -1236.843262  -14307.071289  11456.812012 -1236.843262  13170.228027 -14307.071289        0.0  13070.228027    13070.228027       9.0        -15107.071289                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:25]  --------------------------------------------------------------------------------
[09/28 12:34:25]  Iteration: 19 (0 solution, 18 counterexamples)
[09/28 12:34:27]  Generator returned sat in 0.979629 secs.
[09/28 12:34:27]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:28]  Improved gap from 0.00875 to 0
[09/28 12:34:29]  Improved number of small numbers from 59 to 91 out of a max of 111
[09/28 12:34:29]  Verifer returned sat in 1.871358 secs.
[09/28 12:34:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14807.073730  -15240.407227  11490.147949 -14807.073730  133.334583 -15240.407227        0.0  433.333496      333.333496       7.0        -15240.407227                -1.0                -1
1  -14807.073730  -15140.407122  11490.147949 -14807.073730  133.334583 -15140.407122        0.0  333.333392      233.333496       7.0        -15240.407227                 1.0             False
2  -14807.073730  -14940.407227  11490.147949 -14807.073730  133.334717 -14940.407227        0.0  133.333496      133.333496       7.0        -15240.407227                 1.0              True
3  -14807.072510  -14907.071289  11490.147949 -14807.072510  133.334717 -14907.071289        0.0   99.998779       33.334717       8.0        -15240.407227                 1.0              True
4  -14740.403320  -14807.073789  11490.147949 -14740.403320  166.667969 -14807.073789        0.0   66.670469        0.003906       7.0        -15240.407227                 1.0              True
5  -14640.407122  -14740.402100  11490.147949 -14640.407122  166.666667 -14740.402100        0.0   99.994977        0.000104       1.0        -14640.407122                 1.0              True
6  -14640.407122  -14640.407122  11590.147705 -14640.407122    0.010000 -14640.407122        0.0    0.000000       -0.000140       2.0        -14640.407122                 0.0             False
7  -14640.397122  -14640.397122  11690.137695 -14640.397122    0.010000 -14640.397122        0.0    0.000000       -0.000150       1.0        -14640.407122                 0.0             False
8  -14640.387122  -14640.387207  11690.137695 -14640.387122    0.010000 -14640.387207        0.0    0.000085      -99.990150       1.0        -14640.407122                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:29]  --------------------------------------------------------------------------------
[09/28 12:34:29]  Iteration: 20 (0 solution, 19 counterexamples)
[09/28 12:34:30]  Generator returned sat in 0.051678 secs.
[09/28 12:34:30]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:31]  Improved gap from 0.01 to 0
[09/28 12:34:31]  Improved number of small numbers from 57 to 92 out of a max of 111
[09/28 12:34:31]  Verifer returned sat in 1.511589 secs.
[09/28 12:34:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14141.713135  -14592.714355  10942.455078 -14141.713135    0.001465 -14592.714355        0.0  451.001221      451.001221       9.0        -14592.714355                -1.0                -1
1  -14141.713135  -14582.671921  10942.455078 -14141.713135    0.001465 -14582.671921        0.0  440.958786      351.001221       9.0        -14592.714355                 1.0             False
2  -14141.713135  -14429.665527  10942.455078 -14141.713135    0.001465 -14429.665527        0.0  287.952393      251.001221       8.0        -14592.714355                 1.0              True
3  -14141.713135  -14292.714355  10942.455078 -14141.713135    0.001465 -14292.714355        0.0  151.001221      151.001221       9.0        -14592.714355                 1.0              True
4  -14141.713135  -14192.714421  10942.455078 -14141.713135  151.000000 -14192.714421        0.0   51.001286       51.001221       7.0        -14592.714355                 1.0              True
5  -13996.735671  -14141.713379  10942.455078 -13996.735671  195.978750 -14141.713379        0.0  144.977708       95.978685       7.0        -14592.714355                 1.0              True
6  -13996.735671  -13996.735671  10946.466553 -13996.735671  144.976074 -13996.735671        0.0    0.000000       -0.009840       2.0        -13996.735671                 1.0              True
7  -13996.725671  -13996.725671  11046.466309 -13996.725671    0.010000 -13996.725671        0.0    0.000000       -0.000085       1.0        -13996.725671                 0.0             False
8  -13996.715671  -13996.715820  11046.466309 -13996.715671    0.010000 -13996.715820        0.0    0.000150      -99.990085       1.0        -13996.725671                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:32]  --------------------------------------------------------------------------------
[09/28 12:34:32]  Iteration: 21 (0 solution, 20 counterexamples)
[09/28 12:34:32]  Generator returned sat in 0.071131 secs.
[09/28 12:34:32]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:33]  Improved gap from 0.01 to 100
[09/28 12:34:33]  Improved number of small numbers from 56 to 111 out of a max of 111
[09/28 12:34:33]  Verifer returned sat in 0.352276 secs.
[09/28 12:34:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14341.713379  -14741.715576  11046.466553 -14341.713379    0.002686 -14741.715576        0.0  400.002197           400.0       9.0        -14741.715576                -1.0                -1
1  -14341.713379  -14741.713379  11046.466553 -14341.713379    0.002686 -14741.713379        0.0  400.000000           300.0       5.0        -14741.715576                 1.0             False
2  -14341.713379  -14541.713379  11046.466553 -14341.713379    0.010000 -14541.713379        0.0  200.000000           200.0       4.0        -14741.715576                 1.0              True
3  -14341.713379  -14541.713379  11046.466553 -14341.713379    0.010000 -14541.713379        0.0  200.000000           100.0       4.0        -14741.715576                 1.0              True
4  -14341.713379  -14341.713379  11046.466553 -14341.713379    0.010000 -14341.713379        0.0    0.000000             0.0       5.0        -14741.715576                 1.0             False
5  -13941.713379  -14337.715820  11046.466553 -13941.713379  400.000000 -14337.715820        0.0  396.002441           300.0       1.0        -14741.715576                 1.0              True
6  -13941.713379  -14141.713379  11046.466553 -13941.713379    0.010000 -14141.713379        0.0  200.000000           200.0       2.0        -13941.713379                 0.0             False
7  -13941.713379  -14141.710693  11046.466553 -13941.713379    0.010000 -14141.710693        0.0  199.997314           100.0       3.0        -13941.713379                 0.0             False
8  -13941.713379  -13941.713379  11046.466553 -13941.713379    0.010000 -13941.713379        0.0    0.000000             0.0       4.0        -13941.713379                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:33]  --------------------------------------------------------------------------------
[09/28 12:34:33]  Iteration: 22 (0 solution, 21 counterexamples)
[09/28 12:34:34]  Generator returned sat in 0.249189 secs.
[09/28 12:34:34]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:34:34]  Improved gap from 0.0 to 100
[09/28 12:34:34]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:34:34]  Verifer returned sat in 0.343812 secs.
[09/28 12:34:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13641.703613  -14341.703369  10646.456543 -13641.703613  399.999756 -14341.703369        0.0  699.999756      699.999756       4.0        -14341.703369                -1.0                -1
1  -13641.703613  -14341.642334  10646.456543 -13641.703613  399.999756 -14341.642334        0.0  699.938721      599.999756       5.0        -14341.703369                 1.0             False
2  -13641.703613  -14141.764648  10646.456543 -13641.703613  399.999756 -14141.764648        0.0  500.061035      499.999756       6.0        -14341.703369                 1.0              True
3  -13641.703613  -14141.703369  10646.456543 -13641.703613  399.999756 -14141.703369        0.0  499.999756      399.999756       6.0        -14341.703369                 1.0              True
4  -13641.703613  -13945.642334  10646.456543 -13641.703613  399.999756 -13945.642334        0.0  303.938721      299.999756       5.0        -14341.703369                 1.0              True
5  -13545.642578  -13941.703369  10646.456543 -13545.642578  399.999756 -13941.703369        0.0  396.060791      296.060791       6.0        -14341.703369                 1.0              True
6  -13541.703613  -13741.703369  10646.456543 -13541.703613  399.999756 -13741.703369        0.0  199.999756      199.999756       7.0        -14341.703369                 1.0              True
7  -13341.703613  -13641.703369  10646.456543 -13341.703613  399.999756 -13641.703369        0.0  299.999756      299.999756       3.0        -14341.703369                 1.0              True
8  -13241.703613  -13641.703369  10646.456543 -13241.703613  399.999756 -13641.703369        0.0  399.999756      299.999756       3.0        -14341.703369                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:35]  --------------------------------------------------------------------------------
[09/28 12:34:35]  Iteration: 23 (0 solution, 22 counterexamples)
[09/28 12:34:37]  Generator returned sat in 1.415297 secs.
[09/28 12:34:37]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:34:37]  Improved number of small numbers from 56 to 110 out of a max of 110
[09/28 12:34:37]  Verifer returned sat in 0.296295 secs.
[09/28 12:34:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13545.647217  -14245.647461  10550.400391 -13545.647217    0.002441 -14245.647461        0.0  700.000244      700.000000       8.0        -14245.647461                -1.0                -1
1  -13545.647217  -14145.649658  10550.400391 -13545.647217    0.002441 -14145.649658        0.0  600.002441      600.000000       8.0        -14245.647461                 1.0             False
2  -13545.647217  -14145.647217  10550.400391 -13545.647217    0.010000 -14145.647217        0.0  600.000000      500.000000       9.0        -14245.647461                 1.0              True
3  -13545.647217  -13945.647217  10550.400391 -13545.647217    0.010000 -13945.647217        0.0  400.000000      400.000000       5.0        -14245.647461                 1.0              True
4  -13545.647217  -13945.647217  10550.400391 -13545.647217    0.010000 -13945.647217        0.0  400.000000      300.000000       5.0        -14245.647461                 0.0             False
5  -13545.647217  -13845.647217  10550.400391 -13545.647217    0.010000 -13845.647217        0.0  300.000000      200.000000       6.0        -14245.647461                 0.0             False
6  -13545.647217  -13645.647217  10550.400391 -13545.647217    0.010000 -13645.647217        0.0  100.000000      100.000000       7.0        -14245.647461                 0.0             False
7  -13545.647217  -13545.649658  10550.400391 -13545.647217    0.010000 -13545.649658        0.0    0.002441        0.000000       8.0        -14245.647461                 0.0             False
8  -13144.652100  -13545.647217  10550.400391 -13144.652100  400.997559 -13545.647217        0.0  400.995117      300.995117       9.0        -14245.647461                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:38]  --------------------------------------------------------------------------------
[09/28 12:34:38]  Iteration: 24 (0 solution, 23 counterexamples)
[09/28 12:34:40]  Generator returned sat in 1.139327 secs.
[09/28 12:34:40]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:34:40]  Improved gap from 0.0 to 100
[09/28 12:34:40]  Improved number of small numbers from 90 to 111 out of a max of 111
[09/28 12:34:40]  Verifer returned sat in 0.304813 secs.
[09/28 12:34:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13745.677734  -14245.647217  10550.400391 -13745.677734    0.061035 -14245.647217        0.0  499.969482      499.969482       8.0        -14245.647217                -1.0                -1
1  -13745.677734  -14245.647217  10550.400391 -13745.677734    0.030518 -14245.647217        0.0  499.969482      399.969482       8.0        -13745.677734                 1.0             False
2  -13745.677734  -14145.647217  10550.400391 -13745.677734    0.030518 -14145.647217        0.0  399.969482      299.969482       9.0        -13745.677734                 1.0             False
3  -13745.647217  -14045.647217  10550.400391 -13745.647217  400.000000 -14045.647217        0.0  300.000000      200.000000       5.0        -13745.677734                 1.0             False
4  -13745.647217  -13945.647217  10550.400391 -13745.647217   99.000000 -13945.647217        0.0  200.000000      100.000000       5.0        -13745.647217                 1.0             False
5  -13745.647217  -13745.647217  10550.400391 -13745.647217  149.000000 -13745.647217        0.0    0.000000        0.000000       3.0        -13745.647217                 1.0             False
6  -13546.647217  -13645.647217  10550.400391 -13546.647217  199.000000 -13645.647217        0.0   99.000000       99.000000       1.0        -13745.647217                 1.0             False
7  -13446.647217  -13547.132080  10550.400391 -13446.647217  199.000000 -13547.132080        0.0  100.484863       99.000000       2.0        -13745.647217                 0.0             False
8  -13149.616943  -13545.647217  10550.400391 -13149.616943  397.515137 -13545.647217        0.0  396.030273      296.030273       2.0        -13745.647217                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:41]  --------------------------------------------------------------------------------
[09/28 12:34:41]  Iteration: 25 (0 solution, 24 counterexamples)
[09/28 12:34:42]  Generator returned sat in 1.076673 secs.
[09/28 12:34:42]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:34:48]  Improved gap from 0.0 to 0
[09/28 12:34:48]  Improved number of small numbers from 58 to 111 out of a max of 111
[09/28 12:34:48]  Verifer returned sat in 5.628377 secs.
[09/28 12:34:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13148.799805  -13340.647217  10450.430664 -13148.799805    0.030518 -13340.647217        0.0  191.847412       99.999756       9.0        -13340.647217                -1.0                -1
1  -13148.799805  -13148.799805  10450.430664 -13148.799805    2.060791 -13148.799805        0.0    0.000000       -0.000244       9.0        -13340.647217                 1.0             False
2  -13146.769287  -13146.769287  10548.370117 -13146.769287    2.030518 -13146.769287        0.0    0.000000       -0.030273       1.0        -13146.769287                 1.0              True
3  -13146.738770  -13146.738770  10550.400391 -13146.738770    0.030518 -13146.738770        0.0    0.000000      -97.969482       1.0        -13146.738770                 0.0             False
4  -13048.769287  -13048.769287  10650.400391 -13048.769287   97.969482 -13048.769287        0.0    0.000000        0.000000       1.0        -13146.738770                 0.0             False
5  -12948.769287  -13048.769287  10650.400391 -12948.769287  100.000000 -13048.769287        0.0  100.000000        0.000000       1.0        -13146.738770                 0.0             False
6  -12948.769287  -12948.769287  10750.400146 -12948.769287  100.000000 -12948.769287        0.0    0.000000       -0.000244       2.0        -13146.738770                 0.0             False
7  -12947.769287  -12947.769287  10849.400146 -12947.769287    1.000000 -12947.769287        0.0    0.000000       -0.000244       1.0        -12947.769287                 1.0              True
8  -12895.769287  -12895.769287  10849.400146 -12895.769287   52.000000 -12895.769287        0.0    0.000000      -48.000244       1.0        -12947.769287                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:48]  --------------------------------------------------------------------------------
[09/28 12:34:48]  Iteration: 26 (0 solution, 25 counterexamples)
[09/28 12:34:49]  Generator returned sat in 0.309081 secs.
[09/28 12:34:49]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:34:55]  Improved gap from 0.0 to 0
[09/28 12:34:56]  Improved number of small numbers from 75 to 85 out of a max of 111
[09/28 12:34:56]  Verifer returned sat in 6.519667 secs.
[09/28 12:34:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13292.647461  -13332.696191  10364.302979 -13292.647461    0.061035 -13332.696191        0.0   40.048730        0.000049       1.0        -13332.696191                -1.0                -1
1  -13292.647461  -13292.647461  10464.302734 -13292.647461    0.061035 -13292.647461        0.0    0.000000       -0.000195       2.0        -13332.696191                 0.0             False
2  -13278.744922  -13278.744922  10550.400391 -13278.744922   13.902539 -13278.744922        0.0    0.000000        0.000000       1.0        -13332.696191                 1.0              True
3  -13150.769287  -13206.720557  10550.400391 -13150.769287  127.975635 -13206.720557        0.0   55.951270       27.975635       1.0        -13332.696191                 0.0             False
4  -13078.744922  -13178.744922  10550.400391 -13078.744922  127.975635 -13178.744922        0.0  100.000000        0.000000       2.0        -13332.696191                 0.0             False
5  -13078.744922  -13078.744922  10650.400391 -13078.744922   57.951270 -13078.744922        0.0    0.000000        0.000000       2.0        -13078.744922                 1.0              True
6  -12948.769287  -13078.744922  10650.400391 -12948.769287  129.975635 -13078.744922        0.0  129.975635       29.975635       2.0        -13078.744922                 1.0             False
7  -12948.769287  -12948.769287  10704.436768 -12948.769287  129.975635 -12948.769287        0.0    0.000000      -15.987988       2.0        -13078.744922                 1.0             False
8  -12832.781470  -12932.781250  10704.436768 -12832.781470  115.987817 -12932.781250        0.0   99.999780       -0.000171       1.0        -12832.781470                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:34:57]  --------------------------------------------------------------------------------
[09/28 12:34:57]  Iteration: 27 (0 solution, 26 counterexamples)
[09/28 12:34:58]  Generator returned sat in 0.673183 secs.
[09/28 12:34:58]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:00]  Verifer returned unsat in 1.662487 secs.
[09/28 12:35:00]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:00]  --------------------------------------------------------------------------------
[09/28 12:35:00]  Iteration: 28 (1 solution, 26 counterexamples)
[09/28 12:35:01]  Generator returned sat in 0.353981 secs.
[09/28 12:35:01]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:04]  Improved gap from 0.0 to 0
[09/28 12:35:04]  Improved number of small numbers from 59 to 111 out of a max of 111
[09/28 12:35:04]  Verifer returned sat in 3.113384 secs.
[09/28 12:35:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13150.769287  -13451.784424  10314.407959 -13150.769287    0.030273 -13451.784424        0.0  301.015137      301.015137       9.0        -13451.784424                -1.0                -1
1  -13150.769287  -13351.784668  10314.407959 -13150.769287    0.030273 -13351.784668        0.0  201.015381      201.015137       9.0        -13451.784424                 1.0             False
2  -13150.769287  -13251.784424  10314.407959 -13150.769287    0.030273 -13251.784424        0.0  101.015137      101.015137       6.0        -13451.784424                 1.0              True
3  -13150.769287  -13251.784424  10314.407959 -13150.769287    0.030273 -13251.784424        0.0  101.015137        1.015137       6.0        -13451.784424                 1.0              True
4  -13150.769287  -13150.769287  10412.392822 -13150.769287  101.015137 -13150.769287        0.0    0.000000       -1.000000       7.0        -13451.784424                 1.0             False
5  -13149.769287  -13149.769287  10512.392578 -13149.769287    1.000000 -13149.769287        0.0    0.000000       -0.000244       1.0        -13149.769287                 1.0              True
6  -13097.261719  -13097.261719  10559.885254 -13097.261719   52.507568 -13097.261719        0.0    0.000000        0.000000       1.0        -13149.769287                 0.0             False
7  -12992.746582  -13097.231201  10559.885254 -12992.746582  104.515137 -13097.231201        0.0  104.484619        4.515137       1.0        -13149.769287                 0.0             False
8  -12992.746582  -12992.746582  10654.370117 -12992.746582   80.026611 -12992.746582        0.0    0.000000       -1.000000       2.0        -12992.746582                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:04]  --------------------------------------------------------------------------------
[09/28 12:35:04]  Iteration: 29 (1 solution, 27 counterexamples)
[09/28 12:35:06]  Generator returned sat in 0.332980 secs.
[09/28 12:35:06]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:08]  Improved gap from 0.0 to 0
[09/28 12:35:09]  Improved number of small numbers from 57 to 62 out of a max of 111
[09/28 12:35:09]  Verifer returned sat in 3.153353 secs.
[09/28 12:35:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -13592.52315  -13894.774150  10757.397686 -13592.52315    0.001221 -13894.774150        0.0  302.251000      302.251000       3.0         -13894.77415                -1.0                -1
1   -13592.52315  -13894.772705  10757.397686 -13592.52315    0.001221 -13894.772705        0.0  302.249555      202.251000       4.0         -13894.77415                 0.0             False
2   -13592.52315  -13694.774150  10757.397686 -13592.52315    0.001250 -13694.774150        0.0  102.251000      102.251000       4.0         -13894.77415                 1.0              True
3   -13592.52315  -13694.774150  10757.397686 -13592.52315    0.001250 -13694.774150        0.0  102.251000        2.251000       4.0         -13894.77415                 1.0              True
4   -13592.52315  -13592.523150  10855.146484 -13592.52315  101.000625 -13592.523150        0.0    0.000000       -0.000201       5.0         -13894.77415                 1.0             False
5   -13592.51315  -13592.513150  10955.136686 -13592.51315    0.010000 -13592.513150        0.0    0.000000        0.000000       1.0         -13592.51315                 1.0              True
6   -13540.37765  -13577.978650  10955.136686 -13540.37765   52.135500 -13577.978650        0.0   37.601000      -47.864500       1.0         -13592.51315                 0.0             False
7   -13492.51315  -13492.513150  10961.399170 -13492.51315   85.465500 -13492.513150        0.0    0.000000      -93.737516       1.0         -13592.51315                 0.0             False
8   -13398.77540  -13398.775400  10961.399170 -13398.77540   93.737750 -13398.775400        0.0    0.000000      -99.999766       1.0         -13592.51315                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:09]  --------------------------------------------------------------------------------
[09/28 12:35:09]  Iteration: 30 (1 solution, 28 counterexamples)
[09/28 12:35:11]  Generator returned sat in 0.584913 secs.
[09/28 12:35:11]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:11]  Improved number of small numbers from 50 to 110 out of a max of 110
[09/28 12:35:11]  Verifer returned sat in 0.783836 secs.
[09/28 12:35:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13249.905273  -13938.269043  10800.831787 -13249.905273    0.060791 -13938.269043        0.0  688.363770      688.302979       2.0        -13938.269043                -1.0                -1
1  -13249.905273  -13938.208252  10800.831787 -13249.905273    0.060791 -13938.208252        0.0  688.302979      588.302979       2.0        -13938.269043                 0.0             False
2  -13249.905273  -13738.269287  10800.831787 -13249.905273    0.060791 -13738.269287        0.0  488.364014      488.302979       3.0        -13938.269043                 0.0             False
3  -13249.905273  -13738.208252  10800.831787 -13249.905273  386.242676 -13738.208252        0.0  488.302979      388.302979       4.0        -13938.269043                 0.0             False
4  -13249.905273  -13638.208252  10800.831787 -13249.905273  387.242676 -13638.208252        0.0  388.302979      288.302979       5.0        -13938.269043                 1.0              True
5  -13249.905273  -13438.208496  10800.831787 -13249.905273  388.242676 -13438.208496        0.0  188.303223      188.302979       6.0        -13938.269043                 1.0              True
6  -13048.965820  -13338.208252  10800.831787 -13048.965820  389.242676 -13338.208252        0.0  289.242432      289.242432       7.0        -13938.269043                 1.0              True
7  -12947.965576  -13238.208252  10800.831787 -12947.965576  390.242676 -13238.208252        0.0  290.242676      290.242676       2.0        -13938.269043                 1.0              True
8  -12842.086914  -13238.147705  10800.831787 -12842.086914  396.121338 -13238.147705        0.0  396.060791      296.121338       3.0        -13938.269043                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:12]  --------------------------------------------------------------------------------
[09/28 12:35:12]  Iteration: 31 (1 solution, 29 counterexamples)
[09/28 12:35:14]  Generator returned sat in 1.403512 secs.
[09/28 12:35:14]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:35:14]  Improved gap from 0.0 to 100
[09/28 12:35:14]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:35:14]  Verifer returned sat in 0.321470 secs.
[09/28 12:35:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14436.864990  -14736.864990  10800.831787 -14436.864990    0.002686 -14736.864990        0.0  300.000000      300.000000       8.0        -14736.864990                -1.0                -1
1  -14436.864990  -14735.366211  10800.831787 -14436.864990    0.002686 -14735.366211        0.0  298.501221      200.000000       8.0        -14736.864990                 0.0             False
2  -14436.864990  -14636.864990  10800.831787 -14436.864990    0.002686 -14636.864990        0.0  200.000000      100.000000       9.0        -14736.864990                 0.0             False
3  -14436.864990  -14536.864990  10800.831787 -14436.864990    0.010000 -14536.864990        0.0  100.000000        0.000000       8.0        -14736.864990                 1.0              True
4  -14436.864990  -14436.864990  10800.831787 -14436.864990    0.010000 -14436.864990        0.0    0.000000     -100.000000       9.0        -14736.864990                 0.0             False
5  -13840.862549  -14336.864746  10800.831787 -13840.862549  596.002441 -14336.864746        0.0  496.002197      396.002441       1.0        -14736.864990                 1.0              True
6  -13840.862549  -14236.864746  10800.831787 -13840.862549    0.010000 -14236.864746        0.0  396.002197      296.002441       2.0        -13840.862549                 0.0             False
7  -13840.862549  -14136.864746  10800.831787 -13840.862549    0.010000 -14136.864746        0.0  296.002197      196.002441       3.0        -13840.862549                 0.0             False
8  -13840.862549  -14036.864746  10800.831787 -13840.862549    0.010000 -14036.864746        0.0  196.002197       96.002441       4.0        -13840.862549                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:15]  --------------------------------------------------------------------------------
[09/28 12:35:15]  Iteration: 32 (1 solution, 30 counterexamples)
[09/28 12:35:16]  Generator returned sat in 0.476957 secs.
[09/28 12:35:16]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:35:17]  Improved gap from 0.0 to 0
[09/28 12:35:18]  Improved number of small numbers from 65 to 103 out of a max of 111
[09/28 12:35:18]  Verifer returned sat in 1.304031 secs.
[09/28 12:35:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14438.849609  -14840.904541  10800.831787 -14438.849609    0.002500 -14840.904541        0.0  402.054932      402.054932       9.0        -14840.904541                -1.0                -1
1  -14438.849609  -14747.009521  10800.831787 -14438.849609    0.002500 -14747.009521        0.0  308.159912      302.054932       9.0        -14840.904541                 1.0             False
2  -14438.849609  -14640.904785  10800.831787 -14438.849609    0.002686 -14640.904785        0.0  202.055176      202.054932       7.0        -14840.904541                 1.0              True
3  -14438.849609  -14634.799561  10800.831787 -14438.849609  102.052490 -14634.799561        0.0  195.949951      102.054932       6.0        -14840.904541                 1.0              True
4  -14438.849609  -14540.904541  10800.831787 -14438.849609  102.052490 -14540.904541        0.0  102.054932        2.054932       5.0        -14840.904541                 1.0              True
5  -14438.849609  -14438.849609  10898.749268 -14438.849609  102.052490 -14438.849609        0.0    0.000000       -0.027588       6.0        -14840.904541                 1.0              True
6  -14338.822021  -14338.822246  10898.749268 -14338.822021  100.027588 -14338.822246        0.0    0.000225        0.000000       1.0        -14338.822021                 1.0              True
7  -14338.812246  -14338.812246  10998.729492 -14338.812246    0.010000 -14338.812246        0.0    0.000000       -0.010000       1.0        -14338.812246                 0.0             False
8  -14338.802246  -14338.802246  11098.729248 -14338.802246    0.010000 -14338.802246        0.0    0.000000       -0.000244       1.0        -14338.812246                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:18]  --------------------------------------------------------------------------------
[09/28 12:35:18]  Iteration: 33 (1 solution, 31 counterexamples)
[09/28 12:35:19]  Generator returned sat in 0.396522 secs.
[09/28 12:35:19]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:35:20]  Improved gap from 0.0 to 100
[09/28 12:35:20]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:35:20]  Verifer returned sat in 0.433041 secs.
[09/28 12:35:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14038.837158  -14538.837158  10498.764404 -14038.837158    0.009766 -14538.837158        0.0  500.000000      500.000000       3.0        -14538.837158                -1.0                -1
1  -14038.837158  -14438.837402  10498.764404 -14038.837158    0.009766 -14438.837402        0.0  400.000244      400.000000       4.0        -14538.837158                 1.0             False
2  -14038.837158  -14338.837158  10498.764404 -14038.837158    0.009766 -14338.837158        0.0  300.000000      300.000000       4.0        -14538.837158                 1.0              True
3  -14038.837158  -14338.837158  10498.764404 -14038.837158    0.009766 -14338.837158        0.0  300.000000      200.000000       4.0        -14538.837158                 1.0              True
4  -14038.837158  -14138.837402  10498.764404 -14038.837158    0.010000 -14138.837402        0.0  100.000244      100.000000       5.0        -14538.837158                 1.0             False
5  -13839.837402  -14038.837158  10498.764404 -13839.837402  299.000000 -14038.837158        0.0  198.999756      198.999756       6.0        -14538.837158                 1.0              True
6  -13739.837158  -13938.837158  10498.764404 -13739.837158  299.000000 -13938.837158        0.0  199.000000      199.000000       2.0        -14538.837158                 1.0              True
7  -13539.837158  -13938.837158  10498.764404 -13539.837158  399.000000 -13938.837158        0.0  399.000000      299.000000       2.0        -14538.837158                 1.0              True
8  -13539.837158  -13739.832275  10498.764404 -13539.837158    0.010000 -13739.832275        0.0  199.995117      199.000000       2.0        -13539.837158                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:20]  --------------------------------------------------------------------------------
[09/28 12:35:20]  Iteration: 34 (1 solution, 32 counterexamples)
[09/28 12:35:22]  Generator returned sat in 0.422097 secs.
[09/28 12:35:22]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:23]  Improved gap from 0.0 to 0
[09/28 12:35:23]  Improved number of small numbers from 42 to 111 out of a max of 111
[09/28 12:35:23]  Verifer returned sat in 1.442690 secs.
[09/28 12:35:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14761.528564  -15210.543457  10853.784424 -14761.528564    0.030273 -15210.543457        0.0  449.014893      449.014893       2.0        -15210.543457                -1.0                -1
1  -14761.528564  -15210.513184  10853.784424 -14761.528564    0.030273 -15210.513184        0.0  448.984619      349.014893       2.0        -15210.543457                 1.0             False
2  -14761.528564  -15053.377686  10853.784424 -14761.528564  148.984863 -15053.377686        0.0  291.849121      249.014893       3.0        -15210.543457                 1.0              True
3  -14761.528564  -14910.573730  10853.784424 -14761.528564  148.984863 -14910.573730        0.0  149.045166      149.014893       4.0        -15210.543457                 1.0              True
4  -14761.528564  -14910.543457  10853.784424 -14761.528564  148.984863 -14910.543457        0.0  149.014893       49.014893       5.0        -15210.543457                 1.0              True
5  -14761.528564  -14761.528564  10859.844727 -14761.528564  148.984863 -14761.528564        0.0    0.000000      -44.924805       6.0        -15210.543457                 1.0              True
6  -14616.604004  -14616.604004  10859.844971 -14616.604004  144.924561 -14616.604004        0.0    0.000000        0.000000       1.0        -14616.604004                 1.0              True
7  -14615.604004  -14615.604004  10957.844971 -14615.604004    1.000000 -14615.604004        0.0    0.000000       -1.000000       1.0        -14615.604004                 0.0             False
8  -14614.604004  -14614.604004  10957.844971 -14614.604004    1.000000 -14614.604004        0.0    0.000000     -100.000000       1.0        -14615.604004                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:24]  --------------------------------------------------------------------------------
[09/28 12:35:24]  Iteration: 35 (1 solution, 33 counterexamples)
[09/28 12:35:25]  Generator returned sat in 0.390312 secs.
[09/28 12:35:25]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:28]  Improved gap from 0.0 to 28.125
[09/28 12:35:28]  Improved number of small numbers from 91 to 111 out of a max of 111
[09/28 12:35:28]  Verifer returned sat in 3.392985 secs.
[09/28 12:35:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -15228.118408  -15734.678711  10951.784424 -15228.118408    0.060303 -15734.678711        0.0  506.560303      506.560303       9.0        -15734.678711                -1.0                -1
1  -15228.118408  -15734.618652  10951.784424 -15228.118408  148.999756 -15734.618652        0.0  506.500244      406.560303       8.0        -15734.678711                 1.0             False
2  -15228.118408  -15549.678711  10951.784424 -15228.118408  148.999756 -15549.678711        0.0  321.560303      306.560303       9.0        -15734.678711                 1.0              True
3  -15228.118408  -15434.678711  10951.784424 -15228.118408  148.999756 -15434.678711        0.0  206.560303      206.560303       9.0        -15734.678711                 1.0              True
4  -15228.118408  -15434.618652  10951.784424 -15228.118408  149.000000 -15434.618652        0.0  206.500244      106.560303       5.0        -15734.678711                 1.0              True
5  -15228.118408  -15334.678711  10951.784424 -15228.118408  149.000000 -15334.678711        0.0  106.560303        6.560303       6.0        -15734.678711                 1.0              True
6  -15228.118408  -15228.118408  10990.974121 -15228.118408  106.500000 -15228.118408        0.0    0.000000      -54.250000       7.0        -15228.118408                 1.0              True
7  -15173.868408  -15173.868408  11062.849121 -15173.868408   54.250000 -15173.868408        0.0    0.000000      -28.125000       1.0        -15173.868408                 1.0             False
8  -15145.743408  -15145.743408  11062.849121 -15145.743408   28.125000 -15145.743408        0.0    0.000000     -100.000000       1.0        -15145.743408                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:29]  --------------------------------------------------------------------------------
[09/28 12:35:29]  Iteration: 36 (1 solution, 34 counterexamples)
[09/28 12:35:33]  Generator returned sat in 3.117666 secs.
[09/28 12:35:33]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:35:34]  Improved gap from 0.01 to 0
[09/28 12:35:34]  Improved number of small numbers from 60 to 88 out of a max of 111
[09/28 12:35:34]  Verifer returned sat in 1.363025 secs.
[09/28 12:35:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14925.574463  -15125.568359  10757.826924 -14925.574463  199.993750 -15125.568359        0.0  199.993896      100.001445       2.0        -15125.568359                -1.0                -1
1  -14925.574463  -14925.575928  10757.826924 -14925.574463  199.992432 -14925.575928        0.0    0.001465        0.001445       2.0        -14925.574463                 0.0             False
2  -14725.584717  -14925.575684  10757.826924 -14725.584717  199.991211 -14925.575684        0.0  199.990967       99.991191       3.0        -14725.584717                 0.0             False
3  -14725.584717  -14725.585908  10757.826924 -14725.584717    0.010000 -14725.585908        0.0    0.001191       -0.008809       2.0        -14725.584717                 0.0             False
4  -14725.575908  -14725.575908  10857.817139 -14725.575908    0.010000 -14725.575908        0.0    0.000000       -0.009785       1.0        -14725.584717                 0.0             False
5  -14725.565908  -14725.565908  10957.816895 -14725.565908    0.010000 -14725.565908        0.0    0.000000       -0.000029       1.0        -14725.584717                 0.0             False
6  -14725.555908  -14725.555908  11057.797119 -14725.555908    0.010000 -14725.555908        0.0    0.000000       -0.009805       1.0        -14725.584717                 0.0             False
7  -14725.545908  -14725.545908  11157.787109 -14725.545908    0.010000 -14725.545908        0.0    0.000000       -0.009814       1.0        -14725.584717                 0.0             False
8  -14725.535908  -14725.535908  11157.787109 -14725.535908    0.010000 -14725.535908        0.0    0.000000      -99.999814       1.0        -14725.584717                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:35]  --------------------------------------------------------------------------------
[09/28 12:35:35]  Iteration: 37 (1 solution, 35 counterexamples)
[09/28 12:35:37]  Generator returned sat in 1.023985 secs.
[09/28 12:35:37]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:35:39]  Improved gap from 0.0 to 40.625
[09/28 12:35:40]  Improved number of small numbers from 58 to 111 out of a max of 111
[09/28 12:35:40]  Verifer returned sat in 2.678098 secs.
[09/28 12:35:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14561.983887  -14562.044189  10695.058838 -14561.983887    0.060059 -14562.044189        0.0    0.060303       -5.262939       9.0        -14562.044189                -1.0                -1
1  -14489.876465  -14489.876465  10695.058838 -14489.876465   72.167725 -14489.876465        0.0    0.000000      -33.155518       1.0        -14562.044189                 1.0             False
2  -14456.720703  -14456.720703  10754.433594 -14456.720703   33.155762 -14456.720703        0.0    0.000000      -40.625000       1.0        -14456.720703                 0.0             False
3  -14216.095703  -14330.785400  10754.433594 -14216.095703  240.625000 -14330.785400        0.0  114.689697      100.000000       1.0        -14456.720703                 0.0             False
4  -14216.095703  -14306.729492  10754.433594 -14216.095703  114.629395 -14306.729492        0.0   90.633789        0.000000       2.0        -14216.095703                 0.0             False
5  -14216.095703  -14216.095703  10813.808594 -14216.095703   90.573486 -14216.095703        0.0    0.000000      -40.625000       3.0        -14216.095703                 0.0             False
6  -14096.783203  -14159.908936  10813.808594 -14096.783203  119.312500 -14159.908936        0.0   63.125732      -21.312500       1.0        -14216.095703                 1.0             False
7  -14075.470703  -14075.470703  10873.183594 -14075.470703   84.438232 -14075.470703        0.0    0.000000      -40.625000       1.0        -14075.470703                 0.0             False
8  -13960.841309  -14034.845703  10873.183594 -13960.841309  114.629395 -14034.845703        0.0   74.004395      -25.995605       1.0        -14075.470703                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:40]  --------------------------------------------------------------------------------
[09/28 12:35:40]  Iteration: 38 (1 solution, 36 counterexamples)
[09/28 12:35:41]  Generator returned sat in 0.283498 secs.
[09/28 12:35:41]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:35:45]  Improved gap from 36.6552734375 to 40.625
[09/28 12:35:45]  Improved number of small numbers from 40 to 111 out of a max of 111
[09/28 12:35:45]  Verifer returned sat in 3.727826 secs.
[09/28 12:35:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -15014.765869  -15114.735840  10805.633545 -15014.765869    0.030273 -15114.735840        0.0  99.969971       99.969971       5.0        -15114.735840                -1.0                -1
1  -15014.765869  -15014.765869  10805.633545 -15014.765869    0.060059 -15014.765869        0.0   0.000000       -0.030029       5.0        -15114.735840                 1.0             False
2  -15014.735596  -15014.735596  10861.473877 -15014.735596    0.030273 -15014.735596        0.0   0.000000      -44.159424       1.0        -15014.735596                 1.0              True
3  -14859.420898  -14885.295898  10861.473877 -14859.420898  155.314697 -14885.295898        0.0  25.875000       11.155273       1.0        -15014.735596                 0.0             False
4  -14770.575928  -14859.390869  10861.473877 -14770.575928  114.719971 -14859.390869        0.0  88.814941        0.000244       1.0        -14770.575928                 0.0             False
5  -14770.575928  -14770.575928  10920.848633 -14770.575928   77.687500 -14770.575928        0.0   0.000000      -40.625000       2.0        -14770.575928                 0.0             False
6  -14648.496094  -14715.065918  10920.848633 -14648.496094  122.079834 -14715.065918        0.0  66.569824      -18.545166       1.0        -14770.575928                 0.0             False
7  -14629.950928  -14629.950928  10980.223633 -14629.950928   85.114990 -14629.950928        0.0   0.000000      -40.625000       1.0        -14629.950928                 0.0             False
8  -14515.230957  -14589.325928  10980.223633 -14515.230957  114.719971 -14589.325928        0.0  74.094971      -25.905029       1.0        -14629.950928                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:46]  --------------------------------------------------------------------------------
[09/28 12:35:46]  Iteration: 39 (1 solution, 37 counterexamples)
[09/28 12:35:47]  Generator returned sat in 0.333395 secs.
[09/28 12:35:47]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:35:48]  Improved gap from 0.0 to 0
[09/28 12:35:48]  Improved number of small numbers from 64 to 111 out of a max of 111
[09/28 12:35:48]  Verifer returned sat in 0.762221 secs.
[09/28 12:35:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14729.890869  -15180.951172  10861.473877 -14729.890869    0.060059 -15180.951172        0.0  451.060303      451.060059       9.0        -15180.951172                -1.0                -1
1  -14729.890869  -15180.950928  10861.473877 -14729.890869    0.060303 -15180.950928        0.0  451.060059      351.060059       9.0        -15180.951172                 1.0             False
2  -14729.890869  -14980.950928  10861.473877 -14729.890869    0.060303 -14980.950928        0.0  251.060059      251.060059       4.0        -15180.951172                 1.0              True
3  -14729.890869  -14881.011230  10861.473877 -14729.890869  150.969971 -14881.011230        0.0  151.120361      151.060059       4.0        -15180.951172                 1.0              True
4  -14729.890869  -14880.950928  10861.473877 -14729.890869  150.969971 -14880.950928        0.0  151.060059       51.060059       5.0        -15180.951172                 1.0              True
5  -14729.890869  -14729.890869  10883.883545 -14729.890869  151.000000 -14729.890869        0.0    0.000000      -26.530273       6.0        -15180.951172                 1.0              True
6  -14603.360840  -14603.360840  10883.883789 -14603.360840  126.530029 -14603.360840        0.0    0.000000        0.000000       1.0        -14603.360840                 1.0              True
7  -14602.360840  -14602.360840  10982.883545 -14602.360840    1.000000 -14602.360840        0.0    0.000000       -0.000244       1.0        -14602.360840                 0.0             False
8  -14601.360840  -14601.360840  11081.883545 -14601.360840    1.000000 -14601.360840        0.0    0.000000       -0.000244       1.0        -14602.360840                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:35:48]  --------------------------------------------------------------------------------
[09/28 12:35:48]  Iteration: 40 (1 solution, 38 counterexamples)
[09/28 12:35:55]  Generator returned sat in 5.419532 secs.
[09/28 12:35:55]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:36:00]  Improved gap from 0.01 to 0
[09/28 12:36:01]  Improved number of small numbers from 56 to 68 out of a max of 111
[09/28 12:36:01]  Verifer returned sat in 5.808897 secs.
[09/28 12:36:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14982.912598  -14982.913994  10463.414307 -14982.912598  0.003750 -14982.913994        0.0  0.001396        0.001221       3.0        -14982.913994                -1.0                -1
1  -14982.911494  -14982.911494  10563.410889 -14982.911494  0.002500 -14982.911494        0.0  0.000000       -0.001094       1.0        -14982.911494                 0.0             False
2  -14982.910244  -14982.910244  10663.410645 -14982.910244  0.001250 -14982.910244        0.0  0.000000       -0.000088       1.0        -14982.910244                 0.0             False
3  -14981.903369  -14981.903369  10762.403809 -14981.903369  1.006875 -14981.903369        0.0  0.000000       -0.000049       1.0        -14982.910244                 0.0             False
4  -14981.893369  -14981.893369  10862.393799 -14981.893369  0.010000 -14981.893369        0.0  0.000000       -0.000059       1.0        -14981.893369                 0.0             False
5  -14981.883369  -14981.883369  10962.383789 -14981.883369  0.010000 -14981.883369        0.0  0.000000       -0.000068       1.0        -14981.893369                 0.0             False
6  -14981.873369  -14981.873369  11062.373779 -14981.873369  0.010000 -14981.873369        0.0  0.000000       -0.000078       1.0        -14981.893369                 0.0             False
7  -14981.863369  -14981.863369  11162.363770 -14981.863369  0.010000 -14981.863369        0.0  0.000000       -0.000088       1.0        -14981.893369                 0.0             False
8  -14981.853369  -14981.853369  11162.363770 -14981.853369  0.010000 -14981.853369        0.0  0.000000      -99.990088       1.0        -14981.893369                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:01]  --------------------------------------------------------------------------------
[09/28 12:36:01]  Iteration: 41 (1 solution, 39 counterexamples)
[09/28 12:36:04]  Generator returned sat in 1.660589 secs.
[09/28 12:36:04]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:05]  Improved gap from 0.0 to 0
[09/28 12:36:05]  Improved number of small numbers from 56 to 111 out of a max of 111
[09/28 12:36:05]  Verifer returned sat in 1.251375 secs.
[09/28 12:36:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12351.383545  -13031.203369  10962.383789 -12351.383545  193.939697 -13031.203369        0.0  679.819824      593.939941       8.0        -13031.203369                -1.0                -1
1  -12351.383545  -12931.263184  10962.383789 -12351.383545  193.939697 -12931.263184        0.0  579.879639      493.939941       5.0        -13031.203369                 1.0             False
2  -12351.383545  -12745.323486  10962.383789 -12351.383545  193.939697 -12745.323486        0.0  393.939941      393.939941       5.0        -13031.203369                 1.0              True
3  -12351.383545  -12645.323486  10962.383789 -12351.383545  193.939697 -12645.323486        0.0  293.939941      293.939941       5.0        -13031.203369                 1.0              True
4  -12351.383545  -12545.383301  10962.383789 -12351.383545  193.939941 -12545.383301        0.0  193.999756      193.939941       6.0        -13031.203369                 1.0              True
5  -12351.383545  -12545.323486  10962.383789 -12351.383545  193.939941 -12545.323486        0.0  193.939941       93.939941       6.0        -13031.203369                 1.0              True
6  -12351.383545  -12351.383545  10968.443848 -12351.383545  101.000000 -12351.383545        0.0    0.000000        0.000000       7.0        -12351.383545                 1.0              True
7  -12350.383545  -12350.383545  11067.443848 -12350.383545    1.000000 -12350.383545        0.0    0.000000        0.000000       1.0        -12350.383545                 1.0             False
8  -12349.383545  -12349.383545  11067.443848 -12349.383545    1.000000 -12349.383545        0.0    0.000000      -99.000000       1.0        -12350.383545                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:06]  --------------------------------------------------------------------------------
[09/28 12:36:06]  Iteration: 42 (1 solution, 40 counterexamples)
[09/28 12:36:07]  Generator returned sat in 0.250182 secs.
[09/28 12:36:07]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:07]  Improved gap from 0.0 to 100
[09/28 12:36:08]  Improved number of small numbers from 51 to 111 out of a max of 111
[09/28 12:36:08]  Verifer returned sat in 0.493193 secs.
[09/28 12:36:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -11974.753662  -12947.313721  10964.373779 -11974.753662    0.029785 -12947.313721        0.0  972.560059      972.560059       2.0        -12947.313721                -1.0                -1
1  -11974.753662  -12847.313721  10964.373779 -11974.753662    0.029785 -12847.313721        0.0  872.560059      872.560059       3.0        -12947.313721                 0.0             False
2  -11974.753662  -12747.313721  10964.373779 -11974.753662    0.029785 -12747.313721        0.0  772.560059      772.560059       4.0        -12947.313721                 0.0             False
3  -11974.753662  -12747.283447  10964.373779 -11974.753662    0.030029 -12747.283447        0.0  772.529785      672.560059       5.0        -12947.313721                 0.0             False
4  -11974.753662  -12647.313721  10964.373779 -11974.753662  101.045166 -12647.313721        0.0  672.560059      572.560059       6.0        -12947.313721                 1.0              True
5  -11974.753662  -12510.313721  10964.373779 -11974.753662  202.045166 -12510.313721        0.0  535.560059      472.560059       6.0        -12947.313721                 1.0              True
6  -11974.753662  -12447.313721  10964.373779 -11974.753662  321.545166 -12447.313721        0.0  472.560059      372.560059       7.0        -12947.313721                 1.0              True
7  -11974.753662  -12247.313721  10964.373779 -11974.753662  472.530029 -12247.313721        0.0  272.560059      272.560059       8.0        -12947.313721                 1.0              True
8  -11573.783691  -12246.343750  10964.373779 -11573.783691  673.530029 -12246.343750        0.0  672.560059      573.530029       9.0        -12947.313721                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:08]  --------------------------------------------------------------------------------
[09/28 12:36:08]  Iteration: 43 (1 solution, 41 counterexamples)
[09/28 12:36:15]  Generator returned sat in 6.238592 secs.
[09/28 12:36:16]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:16]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:36:16]  Verifer returned sat in 0.218515 secs.
[09/28 12:36:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12452.073486  -13047.313721  10964.373779 -12452.073486  595.180176 -13047.313721        0.0  595.240234      495.240234       2.0        -13047.313721                -1.0                -1
1  -12452.073486  -12847.313721  10964.373779 -12452.073486  595.180176 -12847.313721        0.0  395.240234      395.240234       3.0        -13047.313721                 0.0             False
2  -12252.193604  -12747.313721  10964.373779 -12252.193604  595.120117 -12747.313721        0.0  495.120117      495.120117       4.0        -12252.193604                 1.0              True
3  -12252.193604  -12647.373779  10964.373779 -12252.193604  393.060059 -12647.373779        0.0  395.180176      395.120117       4.0        -12252.193604                 1.0             False
4  -12252.193604  -12647.313721  10964.373779 -12252.193604  394.060059 -12647.313721        0.0  395.120117      295.120117       5.0        -12252.193604                 1.0             False
5  -12252.193604  -12447.313721  10964.373779 -12252.193604  395.060059 -12447.313721        0.0  195.120117      195.120117       4.0        -12252.193604                 1.0             False
6  -12051.253662  -12447.313721  10964.373779 -12051.253662  396.060059 -12447.313721        0.0  396.060059      296.060059       4.0        -12252.193604                 1.0             False
7  -12050.253662  -12250.253662  10964.373779 -12050.253662  397.060059 -12250.253662        0.0  200.000000      197.060059       2.0        -12252.193604                 1.0             False
8  -11852.193604  -12247.313721  10964.373779 -11852.193604  398.060059 -12247.313721        0.0  395.120117      295.120117       3.0        -12252.193604                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:16]  --------------------------------------------------------------------------------
[09/28 12:36:16]  Iteration: 44 (1 solution, 42 counterexamples)
[09/28 12:36:19]  Generator returned sat in 2.050129 secs.
[09/28 12:36:19]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:21]  Improved number of small numbers from 68 to 84 out of a max of 110
[09/28 12:36:21]  Verifer returned sat in 1.203732 secs.
[09/28 12:36:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12817.995850  -13586.301622  10964.373779 -12817.995850    0.030029 -13586.301622        0.0  768.305773      768.305773       7.0        -13586.301622                -1.0                -1
1  -12817.995850  -13486.301622  10964.373779 -12817.995850    0.030029 -13486.301622        0.0  668.305773      668.305773       7.0        -13586.301622                 0.0             False
2  -12817.995850  -13486.271593  10964.373779 -12817.995850    0.030029 -13486.271593        0.0  668.275743      568.305773       8.0        -13586.301622                 0.0             False
3  -12817.995850  -13363.944155  10964.373779 -12817.995850    0.030029 -13363.944155        0.0  545.948305      468.305773       9.0        -13586.301622                 0.0             False
4  -12817.995850  -13286.301622  10964.373779 -12817.995850  334.551215 -13286.301622        0.0  468.305773      368.305773       9.0        -13586.301622                 1.0              True
5  -12817.995850  -13086.331651  10964.373779 -12817.995850  468.275608 -13086.331651        0.0  268.335802      268.305773       9.0        -13586.301622                 1.0              True
6  -12251.283936  -13086.301622  10964.373779 -12251.283936  835.047716 -13086.301622        0.0  835.017687      735.017687       9.0        -13586.301622                 1.0              True
7  -12251.283936  -12886.301758  10964.373779 -12251.283936  834.987657 -12886.301758        0.0  635.017822      635.017687       8.0        -12251.283936                 1.0              True
8  -12251.283936  -12817.965820  10964.373779 -12251.283936  418.493829 -12817.965820        0.0  566.681885      535.017687       3.0        -12251.283936                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:21]  --------------------------------------------------------------------------------
[09/28 12:36:21]  Iteration: 45 (1 solution, 43 counterexamples)
[09/28 12:36:23]  Generator returned sat in 0.408387 secs.
[09/28 12:36:23]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:23]  Improved number of small numbers from 106 to 106 out of a max of 110
[09/28 12:36:23]  Verifer returned sat in 0.215354 secs.
[09/28 12:36:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12817.995850  -13318.025879  10964.373779 -12817.995850    0.030029 -13318.025879        0.0  500.030029      500.030029       7.0        -13318.025879                -1.0                -1
1  -12817.995850  -13218.025879  10964.373779 -12817.995850    0.030029 -13218.025879        0.0  400.030029      400.030029       7.0        -13318.025879                 0.0             False
2  -12817.995850  -13118.025879  10964.373779 -12817.995850    0.030029 -13118.025879        0.0  300.030029      300.030029       6.0        -13318.025879                 0.0             False
3  -12817.995850  -13117.995850  10964.373779 -12817.995850    0.030029 -13117.995850        0.0  300.000000      200.030029       7.0        -13318.025879                 0.0             False
4  -12817.995850  -13018.025879  10964.373779 -12817.995850    1.015015 -13018.025879        0.0  200.030029      100.030029       8.0        -13318.025879                 0.0             False
5  -12817.995850  -12818.025879  10964.373779 -12817.995850    1.507507 -12818.025879        0.0    0.030029        0.030029       9.0        -13318.025879                 0.0             False
6  -12367.025879  -12817.965820  10964.373779 -12367.025879  451.000000 -12817.965820        0.0  450.939941      351.000000       1.0        -13318.025879                 1.0              True
7  -12367.025879  -12618.025879  10964.373779 -12367.025879  226.500000 -12618.025879        0.0  251.000000      251.000000       2.0        -12367.025879                 0.0             False
8  -12367.025879  -12617.995850  10964.373779 -12367.025879  114.250000 -12617.995850        0.0  250.969971      151.000000       3.0        -12367.025879                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:24]  --------------------------------------------------------------------------------
[09/28 12:36:24]  Iteration: 46 (1 solution, 44 counterexamples)
[09/28 12:36:26]  Generator returned sat in 1.234518 secs.
[09/28 12:36:26]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:28]  Improved gap from 0.0 to 0
[09/28 12:36:28]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:36:28]  Verifer returned sat in 1.791823 secs.
[09/28 12:36:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12895.045898  -13195.016113  10964.373779 -12895.045898    0.029785 -13195.016113        0.0  299.970215      299.970215       6.0        -13195.016113                -1.0                -1
1  -12895.045898  -13095.016113  10964.373779 -12895.045898    0.060059 -13095.016113        0.0  199.970215      199.970215       6.0        -13195.016113                 1.0             False
2  -12895.045898  -13095.015869  10964.373779 -12895.045898    0.030029 -13095.015869        0.0  199.969971       99.970215       6.0        -12895.045898                 1.0              True
3  -12695.016113  -12895.016113  10964.373779 -12695.016113  399.999756 -12895.016113        0.0  200.000000      200.000000       1.0        -12895.045898                 1.0             False
4  -12695.016113  -12795.016113  10964.373779 -12695.016113    1.000000 -12795.016113        0.0  100.000000      100.000000       2.0        -12695.016113                 0.0             False
5  -12695.016113  -12696.045898  10964.373779 -12695.016113    1.000000 -12696.045898        0.0    1.029785        0.000000       3.0        -12695.016113                 0.0             False
6  -12695.016113  -12695.016113  11063.373779 -12695.016113    1.000000 -12695.016113        0.0    0.000000       -1.000000       4.0        -12695.016113                 1.0             False
7  -12694.016113  -12694.016113  11163.373535 -12694.016113    1.000000 -12694.016113        0.0    0.000000       -0.000244       1.0        -12695.016113                 1.0             False
8  -12693.016113  -12693.016113  11163.373535 -12693.016113    1.000000 -12693.016113        0.0    0.000000      -99.000244       1.0        -12695.016113                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:28]  --------------------------------------------------------------------------------
[09/28 12:36:28]  Iteration: 47 (1 solution, 45 counterexamples)
[09/28 12:36:30]  Generator returned sat in 0.482745 secs.
[09/28 12:36:30]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:35]  Improved gap from 0.0 to 28.125
[09/28 12:36:36]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:36:36]  Verifer returned sat in 5.420879 secs.
[09/28 12:36:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13232.576172  -13743.636230  10964.373779 -13232.576172    0.060059 -13743.636230        0.0  511.060059      511.060059       6.0        -13743.636230                -1.0                -1
1  -13232.576172  -13652.576172  10964.373779 -13232.576172    0.060059 -13652.576172        0.0  420.000000      411.060059       6.0        -13743.636230                 1.0             False
2  -13232.576172  -13543.636230  10964.373779 -13232.576172    0.060059 -13543.636230        0.0  311.060059      311.060059       4.0        -13743.636230                 1.0              True
3  -13232.576172  -13446.141113  10964.373779 -13232.576172  122.625000 -13446.141113        0.0  213.564941      211.060059       4.0        -13743.636230                 1.0              True
4  -13232.576172  -13443.636230  10964.373779 -13232.576172  211.060059 -13443.636230        0.0  211.060059      111.060059       5.0        -13743.636230                 1.0              True
5  -13232.576172  -13339.136230  10964.373779 -13232.576172  211.000000 -13339.136230        0.0  106.560059       11.060059       6.0        -13232.576172                 1.0              True
6  -13232.576172  -13232.576172  11025.188721 -13232.576172  106.500000 -13232.576172        0.0    0.000000      -28.125000       7.0        -13232.576172                 1.0             False
7  -13178.326172  -13178.326172  11070.938721 -13178.326172   54.250000 -13178.326172        0.0    0.000000      -28.125000       1.0        -13178.326172                 1.0             False
8  -13150.201172  -13150.201172  11070.938721 -13150.201172   28.125000 -13150.201172        0.0    0.000000     -100.000000       1.0        -13150.201172                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:36]  --------------------------------------------------------------------------------
[09/28 12:36:36]  Iteration: 48 (1 solution, 46 counterexamples)
[09/28 12:36:38]  Generator returned sat in 1.136882 secs.
[09/28 12:36:39]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:39]  Improved gap from 2.0018692016601562 to 100
[09/28 12:36:39]  Improved number of small numbers from 85 to 107 out of a max of 111
[09/28 12:36:39]  Verifer returned sat in 0.554714 secs.
[09/28 12:36:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13154.381104  -14056.561035  11070.938232 -13154.381104    0.060059 -14056.561035        0.0  902.179932      902.179688       5.0        -14056.561035                -1.0                -1
1  -13154.381104  -13956.561035  11070.938232 -13154.381104    0.060059 -13956.561035        0.0  802.179932      802.179688       5.0        -14056.561035                 0.0             False
2  -13154.381104  -13856.561035  11070.938232 -13154.381104   81.035889 -13856.561035        0.0  702.179932      702.179688       6.0        -14056.561035                 0.0             False
3  -13154.381104  -13756.561035  11070.938232 -13154.381104   81.036024 -13756.561035        0.0  602.179932      602.179688       7.0        -14056.561035                 0.0             False
4  -13154.381104  -13656.561035  11070.938232 -13154.381104  120.554036 -13656.561035        0.0  502.179932      502.179688       8.0        -14056.561035                 1.0              True
5  -13154.381104  -13556.620850  11070.938232 -13154.381104  179.831055 -13556.620850        0.0  402.239746      402.179688       8.0        -14056.561035                 1.0              True
6  -13154.381104  -13556.560791  11070.938232 -13154.381104  268.746582 -13556.560791        0.0  402.179688      302.179688       8.0        -14056.561035                 1.0              True
7  -13154.381104  -13356.560791  11070.938232 -13154.381104  402.119873 -13356.560791        0.0  202.179688      202.179688       8.0        -14056.561035                 1.0              True
8  -12754.380981  -13256.561035  11070.938232 -12754.380981  602.179810 -13256.561035        0.0  502.180054      502.179810       9.0        -14056.561035                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:40]  --------------------------------------------------------------------------------
[09/28 12:36:40]  Iteration: 49 (1 solution, 47 counterexamples)
[09/28 12:36:45]  Generator returned sat in 4.191971 secs.
[09/28 12:36:45]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:46]  Improved gap from 0.0 to 28.125
[09/28 12:36:46]  Improved number of small numbers from 81 to 111 out of a max of 111
[09/28 12:36:46]  Verifer returned sat in 1.096949 secs.
[09/28 12:36:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13510.003906  -14016.563477  11070.937988 -13510.003906    0.060059 -14016.563477        0.0  506.559570      506.559570       1.0        -14016.563477                -1.0                -1
1  -13510.003906  -13949.555908  11070.937988 -13510.003906    0.060059 -13949.555908        0.0  439.552002      406.559570       2.0        -14016.563477                 0.0             False
2  -13510.003906  -13829.563477  11070.937988 -13510.003906    0.060059 -13829.563477        0.0  319.559570      306.559570       3.0        -14016.563477                 0.0             False
3  -13510.003906  -13723.568848  11070.937988 -13510.003906  146.497314 -13723.568848        0.0  213.564941      206.559570       4.0        -14016.563477                 1.0              True
4  -13510.003906  -13656.561279  11070.937988 -13510.003906  146.497314 -13656.561279        0.0  146.557373      106.559570       5.0        -14016.563477                 1.0              True
5  -13510.003906  -13616.563477  11070.937988 -13510.003906  146.497314 -13616.563477        0.0  106.559570        6.559570       6.0        -14016.563477                 1.0              True
6  -13510.003906  -13510.003906  11136.253174 -13510.003906  106.500000 -13510.003906        0.0    0.000000      -28.125244       7.0        -13510.003906                 1.0              True
7  -13455.753906  -13455.753906  11182.003418 -13455.753906   54.250000 -13455.753906        0.0    0.000000      -28.125000       1.0        -13455.753906                 1.0             False
8  -13427.628906  -13427.628906  11182.003418 -13427.628906   28.125000 -13427.628906        0.0    0.000000     -100.000000       1.0        -13427.628906                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:47]  --------------------------------------------------------------------------------
[09/28 12:36:47]  Iteration: 50 (1 solution, 48 counterexamples)
[09/28 12:36:51]  Generator returned sat in 2.795606 secs.
[09/28 12:36:51]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:52]  Verifer returned unsat in 1.286279 secs.
[09/28 12:36:52]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:52]  --------------------------------------------------------------------------------
[09/28 12:36:52]  Iteration: 51 (2 solution, 48 counterexamples)
[09/28 12:36:54]  Generator returned sat in 0.381460 secs.
[09/28 12:36:54]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:36:57]  Improved gap from 0.0 to 0
[09/28 12:36:57]  Improved number of small numbers from 76 to 82 out of a max of 111
[09/28 12:36:57]  Verifer returned sat in 2.975119 secs.
[09/28 12:36:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13520.578477  -14016.563477  11070.937988 -13520.578477    0.002441 -14016.563477        0.0  495.985000      495.985000       2.0        -14016.563477                -1.0                -1
1  -13520.578477  -13916.563477  11070.937988 -13520.578477    0.002441 -13916.563477        0.0  395.985000      395.985000       2.0        -14016.563477                 0.0             False
2  -13520.578477  -13816.563477  11070.937988 -13520.578477    0.002686 -13816.563477        0.0  295.985000      295.985000       3.0        -14016.563477                 0.0             False
3  -13520.578477  -13716.565977  11070.937988 -13520.578477   77.932500 -13716.565977        0.0  195.987500      195.985000       4.0        -14016.563477                 0.0             False
4  -13520.578477  -13716.563477  11070.937988 -13520.578477  189.965000 -13716.563477        0.0  195.985000       95.985000       5.0        -14016.563477                 0.0             False
5  -13520.578477  -13520.578477  11074.943115 -13520.578477  195.982500 -13520.578477        0.0    0.000000       -0.009873       6.0        -14016.563477                 0.0             False
6  -13520.568477  -13520.568477  11174.942871 -13520.568477    0.010000 -13520.568477        0.0    0.000000       -0.000117       1.0        -13520.568477                 1.0              True
7  -13421.564727  -13437.637227  11174.942871 -13421.564727   99.003750 -13437.637227        0.0   16.072500       -0.996367       1.0        -13520.568477                 0.0             False
8  -13247.672227  -13420.568359  11174.942871 -13247.672227  189.965000 -13420.568359        0.0  172.896133       72.896133       1.0        -13520.568477                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:36:58]  --------------------------------------------------------------------------------
[09/28 12:36:58]  Iteration: 52 (2 solution, 49 counterexamples)
[09/28 12:37:01]  Generator returned sat in 1.589998 secs.
[09/28 12:37:01]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:37:01]  Improved gap from 0.0 to 15.625
[09/28 12:37:02]  Improved number of small numbers from 55 to 111 out of a max of 111
[09/28 12:37:02]  Verifer returned sat in 1.027958 secs.
[09/28 12:37:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13871.478760  -13971.598633  10933.418213 -13871.478760  100.119629 -13971.598633        0.0  100.119873      100.059814       2.0        -13971.598633                -1.0                -1
1  -13871.478760  -13971.538574  10933.418213 -13871.478760  100.060059 -13971.538574        0.0  100.059814        0.059814       2.0        -13871.478760                 0.0             False
2  -13871.478760  -13871.538574  10933.418213 -13871.478760  100.000000 -13871.538574        0.0    0.059814      -99.940186       3.0        -13871.478760                 0.0             False
3  -13433.538574  -13671.538574  10933.418213 -13433.538574  438.000000 -13671.538574        0.0  238.000000      238.000000       1.0        -13871.478760                 0.0             False
4  -13433.538574  -13571.538574  10933.418213 -13433.538574  220.000000 -13571.538574        0.0  138.000000      138.000000       2.0        -13433.538574                 0.0             False
5  -13433.538574  -13476.973389  10933.418213 -13433.538574  111.000000 -13476.973389        0.0   43.434814       38.000000       3.0        -13433.538574                 0.0             False
6  -13420.473389  -13420.473389  10953.103271 -13420.473389   56.500000 -13420.473389        0.0    0.000000      -29.249756       1.0        -13420.473389                 0.0             False
7  -13391.223389  -13391.223389  11037.478027 -13391.223389   29.250000 -13391.223389        0.0    0.000000      -15.625000       1.0        -13391.223389                 0.0             False
8  -13375.598389  -13375.598389  11037.478271 -13375.598389   15.625000 -13375.598389        0.0    0.000000      -99.999756       1.0        -13375.598389                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:37:02]  --------------------------------------------------------------------------------
[09/28 12:37:02]  Iteration: 53 (2 solution, 50 counterexamples)
[09/28 12:37:05]  Generator returned sat in 1.418077 secs.
[09/28 12:37:05]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:37:08]  Verifer returned unsat in 2.590727 secs.
[09/28 12:37:08]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:37:08]  --------------------------------------------------------------------------------
[09/28 12:37:08]  Iteration: 54 (3 solution, 50 counterexamples)
[09/28 12:37:11]  Generator returned sat in 2.310726 secs.
[09/28 12:37:11]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:37:12]  Improved number of small numbers from 55 to 110 out of a max of 110
[09/28 12:37:12]  Verifer returned sat in 0.562832 secs.
[09/28 12:37:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13440.414795  -14040.414795  10888.538574 -13440.414795    0.055420 -14040.414795        0.0  600.000000      600.000000       2.0        -14040.414795                -1.0                -1
1  -13440.414795  -13940.414795  10888.538574 -13440.414795    0.055556 -13940.414795        0.0  500.000000      500.000000       3.0        -14040.414795                 0.0             False
2  -13440.414795  -13840.414795  10888.538574 -13440.414795    0.055556 -13840.414795        0.0  400.000000      400.000000       4.0        -14040.414795                 0.0             False
3  -13440.414795  -13840.414795  10888.538574 -13440.414795    0.055556 -13840.414795        0.0  400.000000      300.000000       4.0        -14040.414795                 1.0              True
4  -13440.414795  -13739.942627  10888.538574 -13440.414795  101.027778 -13739.942627        0.0  299.527832      200.000000       5.0        -14040.414795                 1.0             False
5  -13440.414795  -13639.942383  10888.538574 -13440.414795  199.472168 -13639.942383        0.0  199.527588      100.000000       6.0        -14040.414795                 1.0              True
6  -13440.414795  -13440.414795  10888.538574 -13440.414795  199.472412 -13440.414795        0.0    0.000000        0.000000       7.0        -14040.414795                 1.0              True
7  -13041.414795  -13343.053467  10888.538574 -13041.414795  399.000000 -13343.053467        0.0  301.638672      299.000000       1.0        -14040.414795                 1.0              True
8  -12944.108887  -13340.164551  10888.538574 -12944.108887  398.944580 -13340.164551        0.0  396.055664      296.305908       2.0        -12944.108887                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:37:12]  --------------------------------------------------------------------------------
[09/28 12:37:12]  Iteration: 55 (3 solution, 51 counterexamples)
[09/28 12:37:14]  Generator returned sat in 0.506290 secs.
[09/28 12:37:14]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:37:23]  Improved gap from 0.0 to 0
[09/28 12:37:23]  Improved number of small numbers from 47 to 111 out of a max of 111
[09/28 12:37:23]  Verifer returned sat in 9.120479 secs.
[09/28 12:37:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13840.031982  -14315.069580  10888.538330 -13840.031982    0.029785 -14315.069580        0.0  475.037598      475.037354       7.0        -14315.069580                -1.0                -1
1  -13840.031982  -14215.069580  10888.538330 -13840.031982    0.029785 -14215.069580        0.0  375.037598      375.037354       3.0        -14315.069580                 1.0             False
2  -13840.031982  -14215.039551  10888.538330 -13840.031982    0.029785 -14215.039551        0.0  375.007568      275.037354       3.0        -14315.069580                 0.0             False
3  -13840.031982  -14015.069580  10888.538330 -13840.031982    0.029785 -14015.069580        0.0  175.037598      175.037354       4.0        -14315.069580                 0.0             False
4  -13840.031982  -14015.069336  10888.538330 -13840.031982  150.014893 -14015.069336        0.0  175.037354       75.037354       5.0        -14315.069580                 0.0             False
5  -13840.031982  -13840.031982  10913.500977 -13840.031982  175.007568 -13840.031982        0.0    0.000000        0.000000       6.0        -14315.069580                 0.0             False
6  -13839.031982  -13839.031982  11012.500977 -13839.031982    1.000000 -13839.031982        0.0    0.000000        0.000000       1.0        -13839.031982                 1.0              True
7  -13750.513184  -13839.002197  11012.500977 -13750.513184   88.518799 -13839.002197        0.0   88.489014      -11.481201       1.0        -13839.031982                 0.0             False
8  -13706.709229  -13719.099609  11012.500977 -13706.709229  132.292969 -13719.099609        0.0   12.390381      -67.677246       1.0        -13839.031982                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:37:24]  --------------------------------------------------------------------------------
[09/28 12:37:24]  Iteration: 56 (3 solution, 52 counterexamples)
[09/28 12:37:27]  Generator returned sat in 1.236584 secs.
[09/28 12:37:27]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:37:28]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/28 12:37:28]  Verifer returned sat in 1.019510 secs.
[09/28 12:37:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14512.099365  -15112.099121  10888.538086 -14512.099365    0.059570 -15112.099121        0.0  599.999756      599.999756       7.0        -15112.099121                -1.0                -1
1  -14512.099365  -15012.099365  10888.538086 -14512.099365    0.059814 -15012.099365        0.0  500.000000      499.999756       3.0        -15112.099121                 1.0             False
2  -14512.099365  -14913.039307  10888.538086 -14512.099365  199.939941 -14913.039307        0.0  400.939941      399.999756       4.0        -15112.099121                 0.0             False
3  -14512.099365  -14911.159180  10888.538086 -14512.099365  199.939941 -14911.159180        0.0  399.059814      299.999756       4.0        -15112.099121                 1.0              True
4  -14512.099365  -14811.159180  10888.538086 -14512.099365  199.939941 -14811.159180        0.0  299.059814      199.999756       5.0        -15112.099121                 1.0              True
5  -14512.099365  -14712.099121  10888.538086 -14512.099365  199.940186 -14712.099121        0.0  199.999756       99.999756       6.0        -15112.099121                 1.0              True
6  -14512.099365  -14512.099365  10888.538330 -14512.099365  199.940186 -14512.099365        0.0    0.000000        0.000000       7.0        -15112.099121                 1.0              True
7  -14114.039551  -14413.218994  10888.538330 -14114.039551  398.059814 -14413.218994        0.0  299.179443      298.059814       1.0        -15112.099121                 1.0              True
8  -14015.218994  -14412.099121  10888.538330 -14015.218994  398.000000 -14412.099121        0.0  396.880127      296.880371       2.0        -14015.218994                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:37:28]  --------------------------------------------------------------------------------
[09/28 12:37:28]  Iteration: 57 (3 solution, 53 counterexamples)
[09/28 12:37:34]  Generator returned sat in 4.410300 secs.
[09/28 12:37:34]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:37:34]  Improved gap from 0.0 to 100
[09/28 12:37:34]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:37:34]  Verifer returned sat in 0.167823 secs.
[09/28 12:37:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14513.039551  -15112.099121  10888.538086 -14513.039551    0.059570 -15112.099121        0.0  599.059570      599.059570       7.0        -15112.099121                -1.0                -1
1  -14513.039551  -15012.099121  10888.538086 -14513.039551    0.059814 -15012.099121        0.0  499.059570      499.059570       4.0        -15112.099121                 1.0             False
2  -14513.039551  -14912.128906  10888.538086 -14513.039551  199.000000 -14912.128906        0.0  399.089355      399.059570       5.0        -15112.099121                 0.0             False
3  -14513.039551  -14912.099121  10888.538086 -14513.039551  199.000000 -14912.099121        0.0  399.059570      299.059570       6.0        -15112.099121                 0.0             False
4  -14513.039551  -14812.099121  10888.538086 -14513.039551  199.000000 -14812.099121        0.0  299.059570      199.059570       7.0        -15112.099121                 1.0              True
5  -14513.039551  -14712.099121  10888.538086 -14513.039551  199.000000 -14712.099121        0.0  199.059570       99.059570       7.0        -15112.099121                 1.0              True
6  -14513.039551  -14513.039551  10888.538086 -14513.039551  199.029785 -14513.039551        0.0    0.000000       -0.940430       7.0        -15112.099121                 1.0              True
7  -14114.979980  -14414.099121  10888.538086 -14114.979980  398.059570 -14414.099121        0.0  299.119141      297.119141       1.0        -15112.099121                 1.0              True
8  -14016.069336  -14412.099121  10888.538086 -14016.069336  398.029785 -14412.099121        0.0  396.029785      296.029785       2.0        -14016.069336                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:37:35]  --------------------------------------------------------------------------------
[09/28 12:37:35]  Iteration: 58 (3 solution, 54 counterexamples)
[09/28 12:37:38]  Generator returned sat in 1.396430 secs.
[09/28 12:37:38]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:37:40]  Improved gap from 0.0 to 0
[09/28 12:37:40]  Improved number of small numbers from 62 to 111 out of a max of 111
[09/28 12:37:40]  Verifer returned sat in 2.066146 secs.
[09/28 12:37:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -14713.099365  -15030.075684  12447.076660 -14713.099365   33.832764 -15030.075684        0.0  316.976318      316.976074       2.0        -15030.075684                -1.0                -1
1  -14713.099365  -14930.075439  12447.076660 -14713.099365   33.832764 -14930.075439        0.0  216.976074      216.976074       3.0        -15030.075684                 0.0             False
2  -14713.099365  -14830.075439  12447.076660 -14713.099365   33.832764 -14830.075439        0.0  116.976074      116.976074       4.0        -15030.075684                 1.0              True
3  -14713.099365  -14830.075439  12447.076660 -14713.099365   33.832764 -14830.075439        0.0  116.976074       16.976074       4.0        -15030.075684                 1.0              True
4  -14713.099365  -14713.099365  12530.100586 -14713.099365  116.916504 -14713.099365        0.0    0.000000        0.000000       5.0        -15030.075684                 1.0             False
5  -14712.099365  -14712.099365  12629.100586 -14712.099365    1.000000 -14712.099365        0.0    0.000000        0.000000       1.0        -14712.099365                 1.0              True
6  -14652.611328  -14652.611328  12669.612305 -14652.611328   59.488037 -14652.611328        0.0    0.000000       -0.000244       1.0        -14712.099365                 0.0             False
7  -14534.135254  -14652.551514  12669.612305 -14534.135254  118.476074 -14652.551514        0.0  118.416260       18.475830       1.0        -14712.099365                 0.0             False
8  -14534.135254  -14534.135254  12669.612549 -14534.135254   89.511963 -14534.135254        0.0    0.000000      -81.523926       2.0        -14534.135254                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:37:40]  --------------------------------------------------------------------------------
[09/28 12:37:40]  Iteration: 59 (3 solution, 55 counterexamples)
[09/28 12:37:45]  Generator returned sat in 2.844204 secs.
[09/28 12:37:45]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:37:49]  Improved gap from 0.0 to 0
[09/28 12:37:50]  Improved number of small numbers from 56 to 63 out of a max of 111
[09/28 12:37:50]  Verifer returned sat in 4.956997 secs.
[09/28 12:37:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13752.600703  -14052.602578  12447.076660 -13752.600703    0.001221 -14052.602578        0.0  300.001875      300.001875       2.0        -14052.602578                -1.0                -1
1  -13752.600703  -13952.602783  12447.076660 -13752.600703    0.001221 -13952.602783        0.0  200.002080      200.001875       2.0        -14052.602578                 0.0             False
2  -13752.600703  -13898.561641  12447.076660 -13752.600703    0.001221 -13898.561641        0.0  145.960938      100.001875       3.0        -14052.602578                 0.0             False
3  -13752.600703  -13852.602578  12447.076660 -13752.600703    0.001250 -13852.602578        0.0  100.001875        0.001875       4.0        -14052.602578                 0.0             False
4  -13752.600703  -13752.600703  12547.064941 -13752.600703  100.000625 -13752.600703        0.0    0.000000       -0.009844       5.0        -14052.602578                 0.0             False
5  -13752.590703  -13752.590703  12647.064697 -13752.590703    0.010000 -13752.590703        0.0    0.000000       -0.000088       1.0        -13752.590703                 1.0              True
6  -13679.600234  -13679.600234  12674.074219 -13679.600234   72.990469 -13679.600234        0.0    0.000000       -0.000098       1.0        -13752.590703                 0.0             False
7  -13556.603828  -13679.598984  12674.074219 -13556.603828  122.996406 -13679.598984        0.0  122.995156       22.996309       1.0        -13752.590703                 0.0             False
8  -13556.603828  -13556.603828  12674.074463 -13556.603828   97.999062 -13556.603828        0.0    0.000000      -77.003447       2.0        -13556.603828                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:37:50]  --------------------------------------------------------------------------------
[09/28 12:37:50]  Iteration: 60 (3 solution, 56 counterexamples)
[09/28 12:37:56]  Generator returned sat in 4.073218 secs.
[09/28 12:37:56]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:38:03]  Improved gap from 0.0 to 0
[09/28 12:38:04]  Improved number of small numbers from 76 to 79 out of a max of 111
[09/28 12:38:04]  Verifer returned sat in 8.047234 secs.
[09/28 12:38:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13706.642822  -14006.644697  12401.118574 -13706.642822    0.001221 -14006.644697        0.0  300.001875      300.001875       7.0        -14006.644697                -1.0                -1
1  -13706.642822  -13906.644775  12401.118574 -13706.642822    0.001221 -13906.644775        0.0  200.001953      200.001875       4.0        -14006.644697                 1.0             False
2  -13706.642822  -13806.644697  12401.118574 -13706.642822    0.001221 -13806.644697        0.0  100.001875      100.001875       4.0        -14006.644697                 1.0              True
3  -13706.642822  -13806.644697  12401.118574 -13706.642822    0.001250 -13806.644697        0.0  100.001875        0.001875       4.0        -14006.644697                 1.0              True
4  -13706.642822  -13706.642822  12501.116455 -13706.642822  100.000625 -13706.642822        0.0    0.000000       -0.000244       5.0        -14006.644697                 1.0             False
5  -13706.632822  -13706.632822  12551.095947 -13706.632822    0.010000 -13706.632822        0.0    0.000000      -50.010752       1.0        -13706.632822                 1.0              True
6  -13656.621885  -13656.621885  12651.077637 -13656.621885   50.010937 -13656.621885        0.0    0.000000       -0.018125       1.0        -13706.632822                 0.0             False
7  -13556.605010  -13639.955739  12651.077637 -13556.605010  100.016875 -13639.955739        0.0   83.350729       -0.001250       1.0        -13706.632822                 0.0             False
8  -13556.603760  -13556.603760  12651.077637 -13556.603760   83.351979 -13556.603760        0.0    0.000000     -100.000000       1.0        -13556.603760                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:38:05]  --------------------------------------------------------------------------------
[09/28 12:38:05]  Iteration: 61 (3 solution, 57 counterexamples)
[09/28 12:38:07]  Generator returned sat in 0.606376 secs.
[09/28 12:38:07]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:38:12]  Improved gap from 0.0 to 0
[09/28 12:38:13]  Improved number of small numbers from 80 to 84 out of a max of 111
[09/28 12:38:13]  Verifer returned sat in 5.840160 secs.
[09/28 12:38:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13438.646979  -13906.652813  12301.126445 -13438.646979    0.001221 -13906.652813        0.0  468.005833      468.005833       4.0        -13906.652813                -1.0                -1
1  -13438.646979  -13806.652813  12301.126445 -13438.646979    0.001250 -13806.652813        0.0  368.005833      368.005833       4.0        -13906.652813                 0.0             False
2  -13438.646979  -13806.651367  12301.126445 -13438.646979    0.001250 -13806.651367        0.0  368.004388      268.005833       5.0        -13906.652813                 0.0             False
3  -13438.646979  -13634.635729  12301.126445 -13438.646979    0.001250 -13634.635729        0.0  195.988750      168.005833       6.0        -13906.652813                 0.0             False
4  -13438.646979  -13606.652813  12301.126445 -13438.646979  136.009167 -13606.652813        0.0  168.005833       68.005833       7.0        -13906.652813                 0.0             False
5  -13438.646979  -13438.646979  12333.110840 -13438.646979  168.004583 -13438.646979        0.0    0.000000       -0.009772       8.0        -13906.652813                 0.0             False
6  -13438.636979  -13438.636979  12433.110596 -13438.636979    0.010000 -13438.636979        0.0    0.000000       -0.000016       1.0        -13438.636979                 1.0              True
7  -13340.632604  -13438.635729  12433.110596 -13340.632604   98.004375 -13438.635729        0.0   98.003125       -1.995641       1.0        -13438.636979                 0.0             False
8  -13305.625000  -13338.636963  12433.110596 -13305.625000  133.010729 -13338.636963        0.0   33.011963      -66.988037       1.0        -13438.636979                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:38:13]  --------------------------------------------------------------------------------
[09/28 12:38:13]  Iteration: 62 (3 solution, 58 counterexamples)
[09/28 12:38:17]  Generator returned sat in 1.878797 secs.
[09/28 12:38:17]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:38:17]  Improved number of small numbers from 52 to 110 out of a max of 110
[09/28 12:38:17]  Verifer returned sat in 0.678081 secs.
[09/28 12:38:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13438.636963  -14133.518311  12527.932129 -13438.636963    0.059570 -14133.518311        0.0  694.881348      694.821533       8.0        -14133.518311                -1.0                -1
1  -13438.636963  -14133.458496  12527.932129 -13438.636963    0.059570 -14133.458496        0.0  694.821533      594.821533       8.0        -14133.518311                 0.0             False
2  -13438.636963  -13933.458496  12527.932129 -13438.636963    0.059570 -13933.458496        0.0  494.821533      494.821533       8.0        -14133.518311                 0.0             False
3  -13438.636963  -13927.399170  12527.932129 -13438.636963   87.880859 -13927.399170        0.0  488.762207      394.821533       9.0        -14133.518311                 0.0             False
4  -13438.636963  -13733.518066  12527.932129 -13438.636963  189.940430 -13733.518066        0.0  294.881104      294.821533       8.0        -14133.518311                 1.0              True
5  -13438.577637  -13733.458496  12527.932129 -13438.577637  294.940430 -13733.458496        0.0  294.880859      194.880859       9.0        -14133.518311                 0.0             False
6  -13339.518066  -13533.458740  12527.932129 -13339.518066  393.940430 -13533.458740        0.0  193.940674      193.940430       8.0        -14133.518311                 1.0              True
7  -13139.518311  -13468.732422  12527.932129 -13139.518311  393.940430 -13468.732422        0.0  329.214111      293.940186       9.0        -14133.518311                 0.0             False
8  -12943.399170  -13339.458496  12527.932129 -12943.399170  525.333252 -13339.458496        0.0  396.059326      390.059326       2.0        -14133.518311                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:38:18]  --------------------------------------------------------------------------------
[09/28 12:38:18]  Iteration: 63 (3 solution, 59 counterexamples)
[09/28 12:38:22]  Generator returned sat in 2.172324 secs.
[09/28 12:38:22]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:38:22]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:38:22]  Verifer returned sat in 0.203270 secs.
[09/28 12:38:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13442.577637  -14133.518311  12527.932129 -13442.577637    0.059570 -14133.518311        0.0  690.940674      690.880859       8.0        -14133.518311                -1.0                -1
1  -13442.577637  -14123.458496  12527.932129 -13442.577637    0.059570 -14123.458496        0.0  680.880859      590.880859       7.0        -14133.518311                 0.0             False
2  -13442.577637  -13933.458496  12527.932129 -13442.577637    0.059570 -13933.458496        0.0  490.880859      490.880859       8.0        -14133.518311                 0.0             False
3  -13442.577637  -13927.399170  12527.932129 -13442.577637   85.880859 -13927.399170        0.0  484.821533      390.880859       9.0        -14133.518311                 0.0             False
4  -13442.577637  -13733.518066  12527.932129 -13442.577637  189.940430 -13733.518066        0.0  290.940430      290.880859       8.0        -14133.518311                 1.0              True
5  -13442.577637  -13733.458496  12527.932129 -13442.577637  290.940430 -13733.458496        0.0  290.880859      190.880859       9.0        -14133.518311                 0.0             False
6  -13341.518066  -13533.458740  12527.932129 -13341.518066  391.940430 -13533.458740        0.0  191.940674      191.940430       8.0        -14133.518311                 1.0              True
7  -13139.518311  -13468.732422  12527.932129 -13139.518311  393.940430 -13468.732422        0.0  329.214111      293.940186       9.0        -14133.518311                 0.0             False
8  -12941.399170  -13339.458496  12527.932129 -12941.399170  527.333252 -13339.458496        0.0  398.059326      392.059326       2.0        -14133.518311                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:38:23]  --------------------------------------------------------------------------------
[09/28 12:38:23]  Iteration: 64 (3 solution, 60 counterexamples)
[09/28 12:38:25]  Generator returned sat in 0.832042 secs.
[09/28 12:38:25]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:38:25]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:38:25]  Verifer returned sat in 0.203485 secs.
[09/28 12:38:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13442.577881  -14133.518555  12527.932129 -13442.577881    0.059326 -14133.518555        0.0  690.940674      690.880859       8.0        -14133.518555                -1.0                -1
1  -13442.577881  -14125.458740  12527.932129 -13442.577881    0.059326 -14125.458740        0.0  682.880859      590.880859       7.0        -14133.518555                 0.0             False
2  -13442.577881  -13933.458740  12527.932129 -13442.577881    0.059326 -13933.458740        0.0  490.880859      490.880859       8.0        -14133.518555                 0.0             False
3  -13442.577881  -13927.399414  12527.932129 -13442.577881   86.880615 -13927.399414        0.0  484.821533      390.880859       9.0        -14133.518555                 0.0             False
4  -13442.577881  -13733.518066  12527.932129 -13442.577881  189.940186 -13733.518066        0.0  290.940186      290.880859       8.0        -14133.518555                 1.0              True
5  -13442.577637  -13733.458740  12527.932129 -13442.577637  290.940430 -13733.458740        0.0  290.881104      190.881104       9.0        -14133.518555                 0.0             False
6  -13342.518311  -13533.458984  12527.932129 -13342.518311  390.940430 -13533.458984        0.0  190.940674      190.940430       8.0        -14133.518555                 1.0              True
7  -13141.018555  -13468.732422  12527.932129 -13141.018555  392.440430 -13468.732422        0.0  327.713867      292.440186       9.0        -14133.518555                 0.0             False
8  -12943.899170  -13339.958496  12527.932129 -12943.899170  524.833252 -13339.958496        0.0  396.059326      389.559570       2.0        -14133.518555                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:38:26]  --------------------------------------------------------------------------------
[09/28 12:38:26]  Iteration: 65 (3 solution, 61 counterexamples)
[09/28 12:38:33]  Generator returned sat in 6.098266 secs.
[09/28 12:38:34]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:38:41]  Improved gap from 0.0 to 0
[09/28 12:38:42]  Improved number of small numbers from 89 to 111 out of a max of 111
[09/28 12:38:42]  Verifer returned sat in 8.021948 secs.
[09/28 12:38:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13539.018311  -14133.959229  12528.432129 -13539.018311    0.029541 -14133.959229        0.0  594.940918      594.940918       2.0        -14133.959229                -1.0                -1
1  -13539.018311  -14056.558594  12528.432129 -13539.018311    0.029541 -14056.558594        0.0  517.540283      494.940918       2.0        -14133.959229                 0.0             False
2  -13539.018311  -13933.959229  12528.432129 -13539.018311    0.029541 -13933.959229        0.0  394.940918      394.940918       3.0        -14133.959229                 0.0             False
3  -13539.018311  -13833.959229  12528.432129 -13539.018311    0.029785 -13833.959229        0.0  294.940918      294.940918       4.0        -14133.959229                 0.0             False
4  -13539.018311  -13833.929443  12528.432129 -13539.018311  151.014893 -13833.929443        0.0  294.911133      194.940918       5.0        -14133.959229                 0.0             False
5  -13539.018311  -13733.958984  12528.432129 -13539.018311  187.822021 -13733.958984        0.0  194.940674       94.940918       6.0        -14133.959229                 0.0             False
6  -13539.018311  -13539.018311  12533.491211 -13539.018311  194.911133 -13539.018311        0.0    0.000000        0.000000       7.0        -14133.959229                 0.0             False
7  -13538.018311  -13538.018311  12632.491211 -13538.018311    1.000000 -13538.018311        0.0    0.000000        0.000000       1.0        -13538.018311                 1.0              True
8  -13388.562744  -13537.988525  12632.491211 -13388.562744  149.455566 -13537.988525        0.0  149.425781       49.455566       1.0        -13538.018311                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:38:42]  --------------------------------------------------------------------------------
[09/28 12:38:42]  Iteration: 66 (3 solution, 62 counterexamples)
[09/28 12:38:47]  Generator returned sat in 2.826236 secs.
[09/28 12:38:47]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:38:55]  Improved gap from 0.0 to 0
[09/28 12:38:55]  Improved number of small numbers from 49 to 111 out of a max of 111
[09/28 12:38:55]  Verifer returned sat in 8.222894 secs.
[09/28 12:38:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -11792.131836  -12387.043213  12228.343262 -11792.131836    0.029541 -12387.043213        0.0  594.911377      594.911133       3.0        -12387.043213                -1.0                -1
1  -11792.131836  -12287.042969  12228.343262 -11792.131836    0.029541 -12287.042969        0.0  494.911133      494.911133       3.0        -12387.043213                 0.0             False
2  -11792.131836  -12195.042969  12228.343262 -11792.131836    0.029541 -12195.042969        0.0  402.911133      394.911133       4.0        -12387.043213                 0.0             False
3  -11792.131836  -12087.072754  12228.343262 -11792.131836    0.029541 -12087.072754        0.0  294.940918      294.911133       5.0        -12387.043213                 0.0             False
4  -11792.131836  -12087.042969  12228.343262 -11792.131836  151.000000 -12087.042969        0.0  294.911133      194.911133       6.0        -12387.043213                 0.0             False
5  -11792.131836  -11987.042969  12228.343262 -11792.131836  176.500000 -11987.042969        0.0  194.911133       94.911133       7.0        -12387.043213                 0.0             False
6  -11792.131836  -11792.131836  12233.431885 -11792.131836  193.250000 -11792.131836        0.0    0.000000       -0.000244       8.0        -12387.043213                 0.0             False
7  -11791.131836  -11791.131836  12332.432129 -11791.131836    1.000000 -11791.131836        0.0    0.000000        0.000000       1.0        -11791.131836                 1.0              True
8  -11641.676270  -11791.102051  12332.432129 -11641.676270  149.455566 -11791.102051        0.0  149.425781       49.455566       1.0        -11791.131836                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:38:55]  --------------------------------------------------------------------------------
[09/28 12:38:55]  Iteration: 67 (3 solution, 63 counterexamples)
[09/28 12:38:58]  Generator returned sat in 1.025973 secs.
[09/28 12:38:58]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:39:05]  Improved gap from 0.0 to 0
[09/28 12:39:05]  Improved number of small numbers from 63 to 111 out of a max of 111
[09/28 12:39:05]  Verifer returned sat in 6.998554 secs.
[09/28 12:39:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12483.026611  -13077.937988  12261.563721 -12483.026611    0.029541 -13077.937988        0.0  594.911377      594.911133       7.0        -13077.937988                -1.0                -1
1  -12483.026611  -12977.937744  12261.563721 -12483.026611    0.029541 -12977.937744        0.0  494.911133      494.911133       4.0        -13077.937988                 0.0             False
2  -12483.026611  -12884.937744  12261.563721 -12483.026611    0.029541 -12884.937744        0.0  401.911133      394.911133       5.0        -13077.937988                 0.0             False
3  -12483.026611  -12777.967529  12261.563721 -12483.026611    0.029541 -12777.967529        0.0  294.940918      294.911133       6.0        -13077.937988                 0.0             False
4  -12483.026611  -12777.937744  12261.563721 -12483.026611  151.000000 -12777.937744        0.0  294.911133      194.911133       7.0        -13077.937988                 0.0             False
5  -12483.026611  -12677.937744  12261.563721 -12483.026611  176.500000 -12677.937744        0.0  194.911133       94.911133       8.0        -13077.937988                 0.0             False
6  -12483.026611  -12483.026611  12266.652344 -12483.026611  192.750000 -12483.026611        0.0    0.000000       -0.000244       9.0        -13077.937988                 0.0             False
7  -12482.026611  -12482.026611  12365.652344 -12482.026611    1.000000 -12482.026611        0.0    0.000000       -0.000244       1.0        -12482.026611                 1.0              True
8  -12332.571045  -12481.997070  12365.652344 -12332.571045  149.455566 -12481.997070        0.0  149.426025       49.455322       1.0        -12482.026611                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:39:06]  --------------------------------------------------------------------------------
[09/28 12:39:06]  Iteration: 68 (3 solution, 64 counterexamples)
[09/28 12:39:08]  Generator returned sat in 0.930168 secs.
[09/28 12:39:09]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:39:09]  Improved number of small numbers from 62 to 110 out of a max of 110
[09/28 12:39:09]  Verifer returned sat in 0.348073 secs.
[09/28 12:39:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12606.655762  -13402.714600  12261.563477 -12606.655762    0.058838 -13402.714600        0.0  796.058838      696.058838       7.0        -13402.714600                -1.0                -1
1  -12606.655762  -13202.714844  12261.563477 -12606.655762   98.249756 -13202.714844        0.0  596.059082      596.058838       7.0        -13402.714600                 0.0             False
2  -12606.655762  -13196.596436  12261.563477 -12606.655762   98.250000 -13196.596436        0.0  589.940674      496.058838       8.0        -13402.714600                 0.0             False
3  -12606.655762  -13096.537354  12261.563477 -12606.655762   98.250000 -13096.537354        0.0  489.881592      396.058838       9.0        -13402.714600                 0.0             False
4  -12606.655762  -13002.714600  12261.563477 -12606.655762  197.500000 -13002.714600        0.0  396.058838      296.058838       9.0        -13402.714600                 1.0              True
5  -12606.655762  -12802.714600  12261.563477 -12606.655762  396.000000 -12802.714600        0.0  196.058838      196.058838       7.0        -13402.714600                 1.0              True
6  -12406.773682  -12702.714600  12261.563477 -12406.773682  395.940918 -12702.714600        0.0  295.940918      295.940918       7.0        -12406.773682                 0.0             False
7  -12306.832764  -12604.635986  12261.563477 -12306.832764  395.881836 -12604.635986        0.0  297.803223      295.881836       2.0        -12306.832764                 0.0             False
8  -12206.655762  -12602.714600  12261.563477 -12206.655762  397.980225 -12602.714600        0.0  396.058838      296.058838       3.0        -12306.832764                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:39:09]  --------------------------------------------------------------------------------
[09/28 12:39:09]  Iteration: 69 (3 solution, 65 counterexamples)
[09/28 12:39:12]  Generator returned sat in 1.269444 secs.
[09/28 12:39:13]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:39:19]  Improved gap from 0.0 to 0
[09/28 12:39:20]  Improved number of small numbers from 57 to 65 out of a max of 111
[09/28 12:39:20]  Verifer returned sat in 7.140019 secs.
[09/28 12:39:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12788.811182  -13284.796182  12243.645059 -12788.811182    0.002686 -13284.796182        0.0  495.985000      495.985000       4.0        -13284.796182                -1.0                -1
1  -12788.811182  -13184.796182  12243.645059 -12788.811182    0.002686 -13184.796182        0.0  395.985000      395.985000       4.0        -13284.796182                 0.0             False
2  -12788.811182  -13184.796143  12243.645059 -12788.811182   77.942500 -13184.796143        0.0  395.984961      295.985000       5.0        -13284.796182                 0.0             False
3  -12788.811182  -12984.798682  12243.645059 -12788.811182   77.942500 -12984.798682        0.0  195.987500      195.985000       5.0        -13284.796182                 0.0             False
4  -12788.811182  -12984.796182  12243.645059 -12788.811182  189.970000 -12984.796182        0.0  195.985000       95.985000       6.0        -13284.796182                 0.0             False
5  -12788.811182  -12788.811182  12247.650146 -12788.811182  195.985000 -12788.811182        0.0    0.000000       -0.009912       7.0        -13284.796182                 0.0             False
6  -12788.801182  -12788.801182  12347.649902 -12788.801182    0.010000 -12788.801182        0.0    0.000000       -0.000156       1.0        -12788.801182                 1.0              True
7  -12689.797432  -12728.798682  12347.649902 -12689.797432   99.003750 -12728.798682        0.0   39.001250       -0.996406       1.0        -12788.801182                 0.0             False
8  -12550.298057  -12688.801025  12347.649902 -12550.298057  178.500625 -12688.801025        0.0  138.502969       38.502969       1.0        -12788.801182                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:39:20]  --------------------------------------------------------------------------------
[09/28 12:39:20]  Iteration: 70 (3 solution, 66 counterexamples)
[09/28 12:39:23]  Generator returned sat in 0.767358 secs.
[09/28 12:39:23]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:39:30]  Improved gap from 0.0 to 0
[09/28 12:39:31]  Improved number of small numbers from 57 to 63 out of a max of 111
[09/28 12:39:31]  Verifer returned sat in 7.741271 secs.
[09/28 12:39:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -12384.811182  -12701.995182  11660.844059 -12384.811182    0.002686 -12701.995182        0.0  317.184000      317.184000       9.0        -12701.995182                -1.0                -1
1  -12384.811182  -12701.995117  11660.844059 -12384.811182    0.002686 -12701.995117        0.0  317.183936      217.184000       9.0        -12701.995182                 1.0             False
2  -12384.811182  -12501.997682  11660.844059 -12384.811182   32.362793 -12501.997682        0.0  117.186500      117.184000       6.0        -12701.995182                 1.0              True
3  -12384.811182  -12501.995182  11660.844059 -12384.811182   32.362793 -12501.995182        0.0  117.184000       17.184000       7.0        -12701.995182                 0.0             False
4  -12384.811182  -12384.811182  11743.660059 -12384.811182  117.181396 -12384.811182        0.0    0.000000        0.000000       8.0        -12701.995182                 0.0             False
5  -12384.801182  -12384.801182  11843.649902 -12384.801182    0.010000 -12384.801182        0.0    0.000000       -0.000156       1.0        -12384.801182                 1.0              True
6  -12325.197932  -12325.197932  11884.046631 -12325.197932   59.603250 -12325.197932        0.0    0.000000       -0.000178       1.0        -12384.801182                 0.0             False
7  -12205.997682  -12325.195432  11884.046631 -12205.997682  119.200250 -12325.195432        0.0  119.197750       19.200072       1.0        -12384.801182                 0.0             False
8  -12205.997682  -12205.997682  11964.846436 -12205.997682   90.408000 -12205.997682        0.0    0.000000       -0.000123       2.0        -12205.997682                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:39:31]  --------------------------------------------------------------------------------
[09/28 12:39:31]  Iteration: 71 (3 solution, 67 counterexamples)
[09/28 12:39:34]  Generator returned sat in 0.959289 secs.
[09/28 12:39:34]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:39:41]  Improved gap from 0.0 to 0
[09/28 12:39:42]  Improved number of small numbers from 56 to 61 out of a max of 111
[09/28 12:39:42]  Verifer returned sat in 7.622690 secs.
[09/28 12:39:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13362.932202  -13858.920952  11320.993809 -13362.932202    0.001221 -13858.920952        0.0  495.988750      495.988750       9.0        -13858.920952                -1.0                -1
1  -13362.932202  -13758.920952  11320.993809 -13362.932202    0.001221 -13758.920952        0.0  395.988750      395.988750       8.0        -13858.920952                 1.0             False
2  -13362.932202  -13758.920898  11320.993809 -13362.932202    0.001221 -13758.920898        0.0  395.988696      295.988750       9.0        -13858.920952                 0.0             False
3  -13362.932202  -13558.920952  11320.993809 -13362.932202    0.001250 -13558.920952        0.0  195.988750      195.988750       8.0        -13858.920952                 1.0              True
4  -13362.932202  -13558.920952  11320.993809 -13362.932202  151.000625 -13558.920952        0.0  195.988750       95.988750       8.0        -13858.920952                 0.0             False
5  -13362.932202  -13362.932202  11325.004883 -13362.932202  176.500313 -13362.932202        0.0    0.000000       -0.000176       9.0        -13858.920952                 0.0             False
6  -13362.922202  -13362.922202  11424.995059 -13362.922202    0.010000 -13362.922202        0.0    0.000000        0.000000       1.0        -13362.922202                 1.0              True
7  -13263.917827  -13362.920952  11424.995059 -13263.917827   99.004375 -13362.920952        0.0   99.003125       -0.995625       1.0        -13362.922202                 0.0             False
8  -13214.418765  -13262.922119  11424.995059 -13214.418765  148.502187 -13262.922119        0.0   48.503354      -51.496563       1.0        -13362.922202                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:39:42]  --------------------------------------------------------------------------------
[09/28 12:39:42]  Iteration: 72 (3 solution, 68 counterexamples)
[09/28 12:39:45]  Generator returned sat in 1.245824 secs.
[09/28 12:39:45]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:39:46]  Improved number of small numbers from 42 to 110 out of a max of 110
[09/28 12:39:46]  Verifer returned sat in 0.368115 secs.
[09/28 12:39:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13361.736816  -13862.736816  11324.80957 -13361.736816    0.029297 -13862.736816        0.0  501.000000           501.0       5.0        -13862.736816                -1.0                -1
1  -13361.736816  -13762.766357  11324.80957 -13361.736816    0.029297 -13762.766357        0.0  401.029541           401.0       5.0        -13862.736816                 0.0             False
2  -13361.736816  -13762.736816  11324.80957 -13361.736816    0.029297 -13762.736816        0.0  401.000000           301.0       6.0        -13862.736816                 0.0             False
3  -13361.736816  -13662.736816  11324.80957 -13361.736816    0.029297 -13662.736816        0.0  301.000000           201.0       7.0        -13862.736816                 0.0             False
4  -13361.736816  -13562.736572  11324.80957 -13361.736816  100.014648 -13562.736572        0.0  200.999756           101.0       8.0        -13862.736816                 0.0             False
5  -13361.736816  -13362.736816  11324.80957 -13361.736816  150.022217 -13362.736816        0.0    1.000000             1.0       9.0        -13862.736816                 0.0             False
6  -12961.736816  -13361.795654  11324.80957 -12961.736816  401.000000 -13361.795654        0.0  400.058838           301.0       9.0        -13862.736816                 1.0              True
7  -12961.736816  -13262.736816  11324.80957 -12961.736816  301.941162 -13262.736816        0.0  301.000000           201.0       2.0        -12961.736816                 1.0              True
8  -12961.736816  -13162.736816  11324.80957 -12961.736816  300.970459 -13162.736816        0.0  201.000000           101.0       3.0        -12961.736816                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:39:46]  --------------------------------------------------------------------------------
[09/28 12:39:46]  Iteration: 73 (3 solution, 69 counterexamples)
[09/28 12:39:52]  Generator returned sat in 3.768521 secs.
[09/28 12:39:52]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:39:53]  Improved number of small numbers from 58 to 72 out of a max of 110
[09/28 12:39:53]  Verifer returned sat in 1.205775 secs.
[09/28 12:39:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13310.990967  -13710.991038  11324.80957 -13310.990967   95.647461 -13710.991038        0.0  400.000071      400.000071       8.0        -13710.991038                -1.0                -1
1  -13310.990967  -13710.991038  11324.80957 -13310.990967   95.647461 -13710.991038        0.0  400.000071      300.000071       8.0        -13710.991038                 0.0             False
2  -13310.990967  -13610.990967  11324.80957 -13310.990967   95.647461 -13610.990967        0.0  300.000000      200.000071       9.0        -13710.991038                 0.0             False
3  -13310.990967  -13410.991038  11324.80957 -13310.990967   95.647705 -13410.991038        0.0  100.000071      100.000071       8.0        -13710.991038                 1.0              True
4  -13213.167185  -13311.049753  11324.80957 -13213.167185  197.823853 -13311.049753        0.0   97.882568       97.823853       9.0        -13710.991038                 0.0             False
5  -12912.108469  -13310.990967  11324.80957 -12912.108469  398.941284 -13310.990967        0.0  398.882498      298.882568       9.0        -13710.991038                 1.0              True
6  -12912.108469  -13112.108469  11324.80957 -12912.108469  299.000000 -13112.108469        0.0  200.000000      198.882568       2.0        -12912.108469                 1.0              True
7  -12813.167185  -13110.991038  11324.80957 -12813.167185  298.941284 -13110.991038        0.0  297.823853      197.823853       3.0        -12813.167185                 0.0             False
8  -12813.167185  -12912.108643  11324.80957 -12813.167185  249.500000 -12912.108643        0.0   98.941458       97.823853       4.0        -12813.167185                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:39:54]  --------------------------------------------------------------------------------
[09/28 12:39:54]  Iteration: 74 (3 solution, 70 counterexamples)
[09/28 12:40:03]  Generator returned sat in 7.115236 secs.
[09/28 12:40:03]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:40:04]  Improved number of small numbers from 70 to 70 out of a max of 110
[09/28 12:40:04]  Verifer returned sat in 0.982223 secs.
[09/28 12:40:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13310.990967  -13710.991099  11324.80957 -13310.990967   95.647461 -13710.991099        0.0  400.000132      400.000071       4.0        -13710.991099                -1.0                -1
1  -13310.990967  -13710.991038  11324.80957 -13310.990967   95.647461 -13710.991038        0.0  400.000071      300.000071       4.0        -13710.991099                 0.0             False
2  -13310.990967  -13610.990967  11324.80957 -13310.990967   95.647461 -13610.990967        0.0  300.000000      200.000071       5.0        -13710.991099                 0.0             False
3  -13310.990967  -13410.991038  11324.80957 -13310.990967   95.647644 -13410.991038        0.0  100.000071      100.000071       6.0        -13710.991099                 0.0             False
4  -13213.167185  -13311.049753  11324.80957 -13213.167185  197.823853 -13311.049753        0.0   97.882568       97.823853       7.0        -13710.991099                 0.0             False
5  -12912.108469  -13310.990967  11324.80957 -12912.108469  398.941284 -13310.990967        0.0  398.882498      298.882568       8.0        -13710.991099                 1.0              True
6  -12912.108469  -13112.108469  11324.80957 -12912.108469  299.000000 -13112.108469        0.0  200.000000      198.882568       2.0        -12912.108469                 1.0              True
7  -12813.167185  -13110.991038  11324.80957 -12813.167185  298.941284 -13110.991038        0.0  297.823853      197.823853       3.0        -12813.167185                 0.0             False
8  -12813.167185  -12912.108643  11324.80957 -12813.167185  249.500000 -12912.108643        0.0   98.941458       97.823853       4.0        -12813.167185                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:40:04]  --------------------------------------------------------------------------------
[09/28 12:40:04]  Iteration: 75 (3 solution, 71 counterexamples)
[09/28 12:40:09]  Generator returned sat in 3.068147 secs.
[09/28 12:40:09]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:40:10]  Improved number of small numbers from 50 to 82 out of a max of 110
[09/28 12:40:10]  Verifer returned sat in 1.156741 secs.
[09/28 12:40:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13111.434570  -13611.434590  11324.80957 -13111.434570    0.029297 -13611.434590        0.0  500.000020      500.000020       6.0         -13611.43459                -1.0                -1
1  -13111.434570  -13511.434590  11324.80957 -13111.434570    0.029297 -13511.434590        0.0  400.000020      400.000020       5.0         -13611.43459                 0.0             False
2  -13111.434570  -13502.552246  11324.80957 -13111.434570    0.029297 -13502.552246        0.0  391.117676      300.000020       5.0         -13611.43459                 0.0             False
3  -13111.434570  -13411.434590  11324.80957 -13111.434570    0.029297 -13411.434590        0.0  300.000020      200.000020       6.0         -13611.43459                 0.0             False
4  -13111.434570  -13311.434590  11324.80957 -13111.434570  101.014648 -13311.434590        0.0  200.000020      100.000020       7.0         -13611.43459                 0.0             False
5  -13111.434570  -13111.434814  11324.80957 -13111.434570  151.507324 -13111.434814        0.0    0.000244        0.000020       8.0         -13611.43459                 0.0             False
6  -12721.317383  -13023.317159  11324.80957 -12721.317383  390.117432 -13023.317159        0.0  301.999776      290.117208       1.0         -13611.43459                 1.0              True
7  -12633.199727  -12911.434590  11324.80957 -12633.199727  390.117432 -12911.434590        0.0  278.234863      278.234863       2.0         -13611.43459                 0.0             False
8  -12515.375875  -12911.405273  11324.80957 -12515.375875  396.058716 -12911.405273        0.0  396.029399      296.058716       3.0         -13611.43459                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:40:11]  --------------------------------------------------------------------------------
[09/28 12:40:11]  Iteration: 76 (3 solution, 72 counterexamples)
[09/28 12:40:15]  Generator returned sat in 1.970625 secs.
[09/28 12:40:15]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:40:16]  Improved number of small numbers from 71 to 91 out of a max of 110
[09/28 12:40:16]  Verifer returned sat in 1.239335 secs.
[09/28 12:40:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0  -13111.434570  -13511.434570  11224.80957 -13111.434570    0.029297 -13511.434570        0.0  400.000000      400.000000       6.0        -13511.434570                -1.0                -1
1  -13111.434570  -13511.434570  11224.80957 -13111.434570    0.029297 -13511.434570        0.0  400.000000      300.000000       6.0        -13511.434570                 0.0             False
2  -13111.434570  -13411.434570  11224.80957 -13111.434570    0.029541 -13411.434570        0.0  300.000000      200.000000       7.0        -13511.434570                 0.0             False
3  -13111.434570  -13311.434570  11224.80957 -13111.434570    0.029541 -13311.434570        0.0  200.000000      100.000000       8.0        -13511.434570                 0.0             False
4  -13111.434570  -13111.434570  11224.80957 -13111.434570  199.000000 -13111.434570        0.0    0.000000        0.000000       9.0        -13511.434570                 1.0              True
5  -12712.434570  -13013.748332  11224.80957 -12712.434570  399.000000 -13013.748332        0.0  301.313761      299.000000       1.0        -13511.434570                 1.0              True
6  -12615.405212  -13011.434570  11224.80957 -12615.405212  398.343119 -13011.434570        0.0  396.029358      296.029358       2.0        -12615.405212                 0.0             False
7  -12615.405212  -12897.158424  11224.80957 -12615.405212  349.171560 -12897.158424        0.0  281.753211      196.029358       3.0        -12615.405212                 0.0             False
8  -12615.405212  -12712.405273  11224.80957 -12615.405212  281.723853 -12712.405273        0.0   97.000061       96.029358       3.0        -12615.405212                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:40:17]  --------------------------------------------------------------------------------
[09/28 12:40:17]  Iteration: 77 (3 solution, 73 counterexamples)
[09/28 12:40:21]  Generator returned unsat in 1.962012 secs.
[09/28 12:40:21]  [96mNo more solutions found[0m
[09/28 12:40:21]  Final solutions:
[09/28 12:40:21]  0: [1m[92mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:40:21]  1: [1m[92mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:40:21]  2: [1m[92mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:40:21]  Took 395.527224 secs.
