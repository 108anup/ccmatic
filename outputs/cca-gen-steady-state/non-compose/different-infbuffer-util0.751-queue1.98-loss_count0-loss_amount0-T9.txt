[09/28 12:46:07]  --------------------------------------------------------------------------------
[09/28 12:46:07]  Iteration: 1 (0 solution, 0 counterexamples)
[09/28 12:46:07]  Generator returned sat in 0.004544 secs.
[09/28 12:46:07]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:07]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:46:07]  Verifer returned sat in 0.300824 secs.
[09/28 12:46:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0        152.375       -449.000     449.0      152.375     0.125     -449.000        0.0   601.375         601.375       4.0             -449.000                -1.0                -1
1        152.375       -449.000     449.0      152.375     0.125     -449.000        0.0   601.375         501.375       4.0             -449.000                 0.0             False
2        152.375       -255.375     449.0      152.375     0.125     -255.375        0.0   407.750         401.375       5.0             -449.000                 0.0             False
3        152.375       -249.000     449.0      152.375     0.125     -249.000        0.0   401.375         301.375       6.0             -449.000                 1.0              True
4        152.375        -49.000     449.0      152.375   401.250      -49.000        0.0   201.375         201.375       6.0             -449.000                 1.0              True
5       1554.500        -49.000     449.0     1554.500  1603.500      -49.000        0.0  1603.500        1503.500       6.0             -449.000                 1.0              True
6       1554.500        149.250     449.0     1554.500  1215.500      149.250        0.0  1405.250        1403.500       7.0             1554.500                 1.0             False
7       1554.500        251.000     449.0     1554.500  1405.250      251.000        0.0  1303.500        1303.500       3.0             1554.500                 1.0             False
8       1554.625        251.125     449.0     1554.625  1303.625      251.125        0.0  1303.500        1203.625       4.0             1554.625                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:08]  --------------------------------------------------------------------------------
[09/28 12:46:08]  Iteration: 2 (0 solution, 1 counterexamples)
[09/28 12:46:08]  Generator returned sat in 0.059176 secs.
[09/28 12:46:08]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:08]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:46:08]  Verifer returned sat in 0.242522 secs.
[09/28 12:46:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -181.926667    -881.926667     449.0  -181.926667    0.0625  -881.926667        0.0  700.0000           700.0       5.0          -881.926667                -1.0                -1
1    -181.926667    -781.926667     449.0  -181.926667    0.0625  -781.926667        0.0  600.0000           600.0       5.0          -881.926667                 1.0             False
2    -181.926667    -781.926667     449.0  -181.926667    0.0625  -781.926667        0.0  600.0000           500.0       5.0          -881.926667                 1.0              True
3    -181.926667    -581.926667     449.0  -181.926667   48.2500  -581.926667        0.0  400.0000           400.0       6.0          -881.926667                 1.0             False
4    -181.926667    -577.989167     449.0  -181.926667   24.1250  -577.989167        0.0  396.0625           300.0       6.0          -181.926667                 1.0              True
5    -181.926667    -481.926667     449.0  -181.926667   49.2500  -481.926667        0.0  300.0000           200.0       7.0          -181.926667                 1.0             False
6    -181.926667    -381.926667     449.0  -181.926667   99.5000  -381.926667        0.0  200.0000           100.0       8.0          -181.926667                 1.0             False
7    -181.926667    -181.926667     449.0  -181.926667  200.0000  -181.926667        0.0    0.0000             0.0       9.0          -181.926667                 1.0             False
8     219.073333    -181.864167     449.0   219.073333  401.0000  -181.864167        0.0  400.9375           301.0       1.0          -181.926667                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:09]  --------------------------------------------------------------------------------
[09/28 12:46:09]  Iteration: 3 (0 solution, 2 counterexamples)
[09/28 12:46:09]  Generator returned sat in 0.030463 secs.
[09/28 12:46:09]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:46:09]  Improved number of small numbers from 66 to 97 out of a max of 110
[09/28 12:46:09]  Verifer returned sat in 0.664223 secs.
[09/28 12:46:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -381.865723    -881.865967  448.999756  -381.865723    0.001221  -881.865967        0.0  500.000244      500.000029       9.0          -881.865967                -1.0                -1
1    -381.865723    -781.865967  448.999756  -381.865723    0.001221  -781.865967        0.0  400.000244      400.000029       5.0          -881.865967                 1.0             False
2    -381.865723    -781.865752  448.999756  -381.865723    0.001221  -781.865752        0.0  400.000029      300.000029       6.0          -881.865967                 0.0             False
3    -381.865723    -681.865723  448.999756  -381.865723    0.001221  -681.865723        0.0  300.000000      200.000029       6.0          -881.865967                 0.0             False
4    -381.865723    -581.865723  448.999756  -381.865723    0.010000  -581.865723        0.0  200.000000      100.000029       6.0          -881.865967                 0.0             False
5    -381.865723    -381.865752  448.999756  -381.865723    0.010000  -381.865752        0.0    0.000029        0.000029       7.0          -881.865967                 0.0             False
6     418.154248    -381.864502  448.999756   418.154248  800.020000  -381.864502        0.0  800.018750      700.020000       1.0          -881.865967                 1.0              True
7     418.154248    -181.865967  448.999756   418.154248  400.010000  -181.865967        0.0  600.020215      600.020000       2.0           418.154248                 0.0             False
8     418.154248     -81.865967  448.999756   418.154248  200.005000   -81.865967        0.0  500.020215      500.020000       3.0           418.154248                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:10]  --------------------------------------------------------------------------------
[09/28 12:46:10]  Iteration: 4 (0 solution, 3 counterexamples)
[09/28 12:46:10]  Generator returned sat in 0.063082 secs.
[09/28 12:46:10]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:11]  Improved number of small numbers from 69 to 108 out of a max of 110
[09/28 12:46:11]  Verifer returned sat in 0.687364 secs.
[09/28 12:46:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -458.907227    -937.073975  448.999512  -458.907227    0.062500  -937.073975        0.0  478.166748      478.166748       9.0          -937.073975                -1.0                -1
1    -458.907227    -937.011719  448.999512  -458.907227   80.296143  -937.011719        0.0  478.104492      378.166748       3.0          -937.073975                 1.0             False
2    -458.907227    -837.073975  448.999512  -458.907227   80.296296  -837.073975        0.0  378.166748      278.166748       3.0          -937.073975                 0.0             False
3    -458.907227    -737.073975  448.999512  -458.907227   80.296296  -737.073975        0.0  278.166748      178.166748       4.0          -937.073975                 0.0             False
4    -458.907227    -637.073975  448.999512  -458.907227  119.444444  -637.073975        0.0  178.166748       78.166748       5.0          -937.073975                 0.0             False
5    -458.907227    -458.907389  448.999512  -458.907227  178.166667  -458.907389        0.0    0.000163      -21.833252       6.0          -937.073975                 0.0             False
6    -281.740723    -437.073975  448.999512  -281.740723  177.166667  -437.073975        0.0  155.333252       55.333252       1.0          -281.740723                 1.0              True
7    -172.323975    -237.074219  448.999512  -172.323975  264.750000  -237.074219        0.0   64.750244       64.750000       1.0          -281.740723                 0.0             False
8     159.050781    -237.011719  448.999512   159.050781  396.125000  -237.011719        0.0  396.062500      296.124756       2.0          -281.740723                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:11]  --------------------------------------------------------------------------------
[09/28 12:46:11]  Iteration: 5 (0 solution, 4 counterexamples)
[09/28 12:46:11]  Generator returned sat in 0.063966 secs.
[09/28 12:46:11]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:12]  Improved gap from 0.0 to 100
[09/28 12:46:12]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:46:12]  Verifer returned sat in 0.207395 secs.
[09/28 12:46:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -337.105225    -937.073975  448.999512   -337.105225      0.03125  -937.073975        0.0    599.96875       599.96875       5.0          -937.073975                -1.0                -1
1    -337.073975    -937.042725  448.999512   -337.073975    600.00000  -937.042725        0.0    599.96875       500.00000       5.0          -937.073975                 0.0             False
2    -337.042725    -837.073975  448.999512   -337.042725    600.00000  -837.073975        0.0    500.03125       400.03125       6.0          -937.073975                 0.0             False
3    -237.073975    -737.073975  448.999512   -237.073975    600.00000  -737.073975        0.0    500.00000       400.00000       7.0          -937.073975                 0.0             False
4     461.926025    -637.073975  448.999512    461.926025   1199.00000  -637.073975        0.0   1099.00000       999.00000       8.0          -937.073975                 1.0              True
5    1759.926025    -537.073975  448.999512   1759.926025   2397.00000  -537.073975        0.0   2297.00000      2197.00000       8.0          -937.073975                 1.0              True
6    4255.926025    -337.105225  448.999512   4255.926025   4793.00000  -337.105225        0.0   4593.03125      4593.00000       8.0          -937.073975                 1.0              True
7    9247.894775    -337.073975  448.999512   9247.894775   9585.00000  -337.073975        0.0   9584.96875      9484.96875       7.0          -937.073975                 1.0              True
8   18831.926025    -137.073975  448.999512  18831.926025  19169.00000  -137.073975        0.0  18969.00000     18969.00000       5.0          -937.073975                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:12]  --------------------------------------------------------------------------------
[09/28 12:46:12]  Iteration: 6 (0 solution, 5 counterexamples)
[09/28 12:46:12]  Generator returned sat in 0.117116 secs.
[09/28 12:46:12]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:46:13]  Improved number of small numbers from 110 to 110 out of a max of 110
[09/28 12:46:13]  Verifer returned sat in 0.175064 secs.
[09/28 12:46:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -237.104980    -937.073975  448.999268  -237.104980     0.031006  -937.073975        0.0   699.968994      699.968994       7.0          -937.073975                -1.0                -1
1    -237.104980    -837.104980  448.999268  -237.104980   699.968994  -837.104980        0.0   600.000000      599.968994       7.0          -937.073975                 0.0             False
2    -137.135986    -837.073975  448.999268  -137.135986   699.968994  -837.073975        0.0   699.937988      599.937988       8.0          -937.073975                 0.0             False
3    -137.104980    -737.073975  448.999268  -137.104980   699.968994  -737.073975        0.0   599.968994      499.968994       9.0          -937.073975                 0.0             False
4     161.895020    -537.073975  448.999268   161.895020   898.968994  -537.073975        0.0   698.968994      698.968994       9.0          -937.073975                 1.0              True
5     660.926025    -491.042969  448.999268   660.926025  1198.000000  -491.042969        0.0  1151.968994     1098.000000       9.0          -937.073975                 1.0              True
6    1051.988037    -437.073975  448.999268  1051.988037  1543.031006  -437.073975        0.0  1489.062012     1389.062012       9.0          -937.073975                 1.0              True
7    1404.957031    -237.104980  448.999268  1404.957031  1842.031006  -237.104980        0.0  1642.062012     1642.031006       9.0          -937.073975                 1.0              True
8    1903.895020    -137.073975  448.999268  1903.895020  2141.000000  -137.073975        0.0  2040.968994     2040.968994       5.0          -937.073975                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:13]  --------------------------------------------------------------------------------
[09/28 12:46:13]  Iteration: 7 (0 solution, 6 counterexamples)
[09/28 12:46:13]  Generator returned sat in 0.014406 secs.
[09/28 12:46:13]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:46:14]  Improved number of small numbers from 64 to 110 out of a max of 110
[09/28 12:46:14]  Verifer returned sat in 0.449944 secs.
[09/28 12:46:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -734.866699   -1334.866699  448.999268  -734.866699    0.062256 -1334.866699        0.0  600.000000         600.000       8.0         -1334.866699                -1.0                -1
1    -734.866699   -1234.866699  448.999268  -734.866699    0.062500 -1234.866699        0.0  500.000000         500.000       8.0         -1334.866699                 0.0             False
2    -734.866699   -1134.866699  448.999268  -734.866699  500.000000 -1134.866699        0.0  400.000000         400.000       9.0         -1334.866699                 0.0             False
3    -625.866699   -1079.366699  448.999268  -625.866699  509.000000 -1079.366699        0.0  453.500000         409.000       9.0         -1334.866699                 1.0              True
4    -570.366699    -979.366699  448.999268  -570.366699  509.000000  -979.366699        0.0  409.000000         364.500       9.0         -1334.866699                 1.0              True
5    -470.366699    -834.866699  448.999268  -470.366699  509.000000  -834.866699        0.0  364.500000         364.500       9.0         -1334.866699                 1.0              True
6    -281.366699    -734.929199  448.999268  -281.366699  553.500000  -734.929199        0.0  453.562500         453.500       9.0         -1334.866699                 1.0              True
7    -114.741699    -734.866699  448.999268  -114.741699  620.187500  -734.866699        0.0  620.125000         520.125       9.0         -1334.866699                 1.0              True
8    -114.741699    -625.803955  448.999268  -114.741699  553.593750  -625.803955        0.0  511.062256         420.125       5.0          -114.741699                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:14]  --------------------------------------------------------------------------------
[09/28 12:46:14]  Iteration: 8 (0 solution, 7 counterexamples)
[09/28 12:46:15]  Generator returned sat in 0.017181 secs.
[09/28 12:46:15]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:46:15]  Improved gap from 0.0 to 0
[09/28 12:46:15]  Improved number of small numbers from 63 to 101 out of a max of 111
[09/28 12:46:15]  Verifer returned sat in 0.947360 secs.
[09/28 12:46:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1296.471924   -1648.730469  448.999268 -1296.471924    0.001250 -1648.730469        0.0  352.258545      350.499756       8.0         -1648.730469                -1.0                -1
1   -1296.471924   -1546.971680  448.999268 -1296.471924    0.001250 -1546.971680        0.0  250.499756      250.499756       9.0         -1648.730469                 0.0             False
2   -1296.471924   -1446.971924  448.999268 -1296.471924    0.001250 -1446.971924        0.0  150.500000      150.499756       8.0         -1648.730469                 1.0              True
3   -1296.471924   -1347.350342  448.999268 -1296.471924    0.001250 -1347.350342        0.0   50.878418       50.499756       9.0         -1648.730469                 0.0             False
4   -1046.970215   -1296.471924  448.999268 -1046.970215  300.380127 -1296.471924        0.0  249.501709      200.001465       9.0         -1648.730469                 1.0              True
5   -1046.970215   -1146.971680  448.999268 -1046.970215  249.499756 -1146.971680        0.0  100.001465      100.001465       2.0         -1046.970215                 1.0              True
6   -1046.970215   -1046.971699  448.999268 -1046.970215    0.010000 -1046.971699        0.0    0.001484        0.001465       3.0         -1046.970215                 0.0             False
7   -1046.961699   -1046.961699  548.989258 -1046.961699    0.010000 -1046.961699        0.0    0.000000       -0.000029       1.0         -1046.970215                 0.0             False
8   -1046.951699   -1046.951699  648.979248 -1046.951699    0.010000 -1046.951699        0.0    0.000000       -0.000039       1.0         -1046.970215                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:16]  --------------------------------------------------------------------------------
[09/28 12:46:16]  Iteration: 9 (0 solution, 8 counterexamples)
[09/28 12:46:17]  Generator returned sat in 0.310269 secs.
[09/28 12:46:17]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:17]  Improved number of small numbers from 90 to 110 out of a max of 110
[09/28 12:46:17]  Verifer returned sat in 0.226052 secs.
[09/28 12:46:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1146.971436   -1646.971436  448.999023 -1146.971436    0.062256 -1646.971436        0.0  500.000000      500.000000       9.0         -1646.971436                -1.0                -1
1   -1146.971436   -1546.971436  448.999023 -1146.971436    0.062256 -1546.971436        0.0  400.000000      400.000000       8.0         -1646.971436                 1.0             False
2   -1146.971436   -1447.033691  448.999023 -1146.971436    0.062500 -1447.033691        0.0  300.062256      300.000000       8.0         -1646.971436                 0.0             False
3   -1047.033691   -1446.971436  448.999023 -1047.033691  400.000000 -1446.971436        0.0  399.937744      299.937744       9.0         -1646.971436                 0.0             False
4   -1046.971436   -1346.971436  448.999023 -1046.971436  400.000000 -1346.971436        0.0  300.000000      200.000000       9.0         -1646.971436                 1.0              True
5    -946.971436   -1146.971436  448.999023  -946.971436  400.000000 -1146.971436        0.0  200.000000      200.000000       9.0         -1646.971436                 1.0              True
6    -546.846924   -1047.033936  448.999023  -546.846924  600.124512 -1047.033936        0.0  500.187012      500.124512       4.0         -1646.971436                 1.0              True
7    -546.846924    -979.273438  448.999023  -546.846924  499.031006  -979.273438        0.0  432.426514      400.124512       3.0          -546.846924                 0.0             False
8    -546.846924    -946.908936  448.999023  -546.846924  432.364502  -946.908936        0.0  400.062012      300.124512       3.0          -546.846924                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:17]  --------------------------------------------------------------------------------
[09/28 12:46:17]  Iteration: 10 (0 solution, 9 counterexamples)
[09/28 12:46:18]  Generator returned sat in 0.222633 secs.
[09/28 12:46:18]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:18]  Improved number of small numbers from 98 to 110 out of a max of 110
[09/28 12:46:18]  Verifer returned sat in 0.228290 secs.
[09/28 12:46:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1146.971436   -1646.971436  448.999023 -1146.971436    0.062256 -1646.971436        0.0  500.000000      500.000000       9.0         -1646.971436                -1.0                -1
1   -1146.971436   -1546.971436  448.999023 -1146.971436    0.062256 -1546.971436        0.0  400.000000      400.000000       8.0         -1646.971436                 1.0             False
2   -1146.971436   -1447.002441  448.999023 -1146.971436    0.062256 -1447.002441        0.0  300.031006      300.000000       8.0         -1646.971436                 0.0             False
3   -1048.002441   -1446.971436  448.999023 -1048.002441  399.000000 -1446.971436        0.0  398.968994      298.968994       9.0         -1646.971436                 0.0             False
4   -1047.971436   -1346.971436  448.999023 -1047.971436  399.000000 -1346.971436        0.0  299.000000      199.000000       9.0         -1646.971436                 1.0              True
5    -947.971436   -1146.971436  448.999023  -947.971436  399.000000 -1146.971436        0.0  199.000000      199.000000       9.0         -1646.971436                 1.0              True
6    -547.909424   -1048.002686  448.999023  -547.909424  599.062012 -1048.002686        0.0  500.093262      499.062012       4.0         -1646.971436                 1.0              True
7    -547.909424    -979.622559  448.999023  -547.909424  498.015381  -979.622559        0.0  431.713135      399.062012       3.0          -547.909424                 0.0             False
8    -547.909424    -946.908936  448.999023  -547.909424  431.682129  -946.908936        0.0  398.999512      299.062012       3.0          -547.909424                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:19]  --------------------------------------------------------------------------------
[09/28 12:46:19]  Iteration: 11 (0 solution, 10 counterexamples)
[09/28 12:46:19]  Generator returned sat in 0.154452 secs.
[09/28 12:46:19]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:19]  Improved gap from 0.0 to 100
[09/28 12:46:19]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:46:19]  Verifer returned sat in 0.465162 secs.
[09/28 12:46:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1141.075928   -1541.076172  343.10376 -1141.075928    0.062012 -1541.076172        0.0  400.000244      400.000244       6.0         -1541.076172                -1.0                -1
1   -1141.075928   -1442.951660  343.10376 -1141.075928   99.937744 -1442.951660        0.0  301.875732      300.000244       5.0         -1541.076172                 0.0             False
2   -1141.075928   -1389.106934  343.10376 -1141.075928   99.937744 -1389.106934        0.0  248.031006      200.000244       6.0         -1541.076172                 0.0             False
3   -1141.075928   -1339.200684  343.10376 -1141.075928   99.937744 -1339.200684        0.0  198.124756      100.000244       7.0         -1541.076172                 0.0             False
4   -1141.075928   -1241.076172  343.10376 -1141.075928   99.937744 -1241.076172        0.0  100.000244        0.000244       8.0         -1541.076172                 0.0             False
5   -1141.075928   -1141.075928  343.10376 -1141.075928   99.937744 -1141.075928        0.0    0.000000      -99.999756       9.0         -1541.076172                 0.0             False
6    -645.013916   -1041.076172  343.10376  -645.013916  496.062012 -1041.076172        0.0  396.062256      296.062256       1.0         -1541.076172                 1.0              True
7    -645.013916    -841.076172  343.10376  -645.013916  148.062256  -841.076172        0.0  196.062256      196.062256       2.0          -645.013916                 0.0             False
8    -642.076172    -841.013916  343.10376  -642.076172  199.000000  -841.013916        0.0  198.937744       99.000000       3.0          -645.013916                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:20]  --------------------------------------------------------------------------------
[09/28 12:46:20]  Iteration: 12 (0 solution, 11 counterexamples)
[09/28 12:46:21]  Generator returned sat in 0.449481 secs.
[09/28 12:46:21]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:24]  Improved gap from 0.0 to 42.1875
[09/28 12:46:24]  Improved number of small numbers from 49 to 111 out of a max of 111
[09/28 12:46:24]  Verifer returned sat in 3.223770 secs.
[09/28 12:46:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1548.993408   -1656.693848   831.427002 -1548.993408    0.062012 -1656.693848        0.0  107.700439       99.968994       3.0         -1656.693848                -1.0                -1
1   -1548.993408   -1549.024170   831.427002 -1548.993408    0.031250 -1549.024170        0.0    0.030762       -0.031006       2.0         -1548.993408                 0.0             False
2   -1548.962158   -1548.962158   889.239258 -1548.962158    0.062012 -1548.962158        0.0    0.000000      -42.187500       1.0         -1548.993408                 0.0             False
3   -1306.774658   -1422.768555   889.239258 -1306.774658  242.187500 -1422.768555        0.0  115.993896      100.000000       1.0         -1548.993408                 0.0             False
4   -1306.774658   -1386.878662   889.239258 -1306.774658  115.962646 -1386.878662        0.0   80.104004        0.000000       2.0         -1306.774658                 0.0             False
5   -1306.774658   -1306.774658   947.051758 -1306.774658   80.072754 -1306.774658        0.0    0.000000      -42.187500       3.0         -1306.774658                 0.0             False
6   -1186.680908   -1249.980957   947.051758 -1186.680908  120.093750 -1249.980957        0.0   63.300049      -22.093750       1.0         -1306.774658                 0.0             False
7   -1164.587158   -1164.587158  1004.864258 -1164.587158   85.393799 -1164.587158        0.0    0.000000      -42.187500       1.0         -1164.587158                 0.0             False
8   -1054.441406   -1122.399414  1004.864258 -1054.441406  110.145752 -1122.399414        0.0   67.958008      -32.041748       1.0         -1164.587158                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:24]  --------------------------------------------------------------------------------
[09/28 12:46:24]  Iteration: 13 (0 solution, 12 counterexamples)
[09/28 12:46:25]  Generator returned sat in 0.268667 secs.
[09/28 12:46:25]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:25]  Improved gap from 0.0 to 10.9375
[09/28 12:46:26]  Improved number of small numbers from 67 to 111 out of a max of 111
[09/28 12:46:26]  Verifer returned sat in 0.611795 secs.
[09/28 12:46:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1606.743408   -1706.774902   889.239014 -1606.743408  512.031006 -1706.774902        0.0  100.031494      100.031250       3.0         -1706.774902                -1.0                -1
1   -1194.743652   -1606.805664   889.239014 -1194.743652  512.031250 -1606.805664        0.0  412.062012      412.031006       3.0         -1706.774902                 0.0             False
2   -1194.743652   -1606.774658   889.239014 -1194.743652    0.031250 -1606.774658        0.0  412.031006      312.031006       4.0         -1194.743652                 0.0             False
3   -1194.743652   -1460.299805   889.239014 -1194.743652  412.000000 -1460.299805        0.0  265.556152      212.031006       3.0         -1194.743652                 0.0             False
4   -1194.743652   -1306.774658   889.239014 -1194.743652  205.000000 -1306.774658        0.0  112.031006      112.031006       4.0         -1194.743652                 0.0             False
5   -1194.743652   -1244.524902   889.239014 -1194.743652  101.500000 -1244.524902        0.0   49.781250       12.031006       5.0         -1194.743652                 0.0             False
6   -1194.743652   -1194.743652   953.333252 -1194.743652   49.750000 -1194.743652        0.0    0.000000      -23.874756       6.0         -1194.743652                 0.0             False
7   -1170.868652   -1170.868652  1042.395508 -1170.868652   23.875000 -1170.868652        0.0    0.000000      -10.937500       1.0         -1170.868652                 0.0             False
8   -1159.931152   -1159.931152  1042.395508 -1159.931152   10.937500 -1159.931152        0.0    0.000000     -100.000000       1.0         -1159.931152                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:26]  --------------------------------------------------------------------------------
[09/28 12:46:26]  Iteration: 14 (0 solution, 13 counterexamples)
[09/28 12:46:27]  Generator returned sat in 0.036573 secs.
[09/28 12:46:27]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:46:28]  Improved gap from 10.9375 to 14.0625
[09/28 12:46:28]  Improved number of small numbers from 62 to 111 out of a max of 111
[09/28 12:46:28]  Verifer returned sat in 1.174335 secs.
[09/28 12:46:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1155.377187   -1255.439209  1227.046143 -1155.377187    0.031006 -1255.439209        0.0  100.062021      100.062021       7.0         -1255.439209                -1.0                -1
1   -1155.377187   -1155.439209  1227.046143 -1155.377187    0.031006 -1155.439209        0.0    0.062021        0.062021       3.0         -1255.439209                 0.0             False
2   -1155.377187   -1155.439209  1227.046143 -1155.377187    0.031006 -1155.439209        0.0    0.062021      -99.937979       3.0         -1255.439209                 0.0             False
3    -705.439209    -955.439209  1227.046143  -705.439209  450.000000  -955.439209        0.0  250.000000      250.000000       1.0         -1255.439209                 0.0             False
4    -705.439209    -955.408203  1227.046143  -705.439209  225.000000  -955.408203        0.0  249.968994      150.000000       2.0          -705.439209                 0.0             False
5    -705.439209    -855.439209  1227.046143  -705.439209  112.500000  -855.439209        0.0  150.000000       50.000000       3.0          -705.439209                 0.0             False
6    -705.439209    -705.439209  1262.983398  -705.439209   56.250000  -705.439209        0.0    0.000000      -14.062744       4.0          -705.439209                 0.0             False
7    -677.314209    -677.314209  1334.858643  -677.314209   28.125000  -677.314209        0.0    0.000000      -14.062500       1.0          -677.314209                 0.0             False
8    -663.251709    -663.251709  1334.858643  -663.251709   14.062500  -663.251709        0.0    0.000000     -100.000000       1.0          -663.251709                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:28]  --------------------------------------------------------------------------------
[09/28 12:46:28]  Iteration: 15 (0 solution, 14 counterexamples)
[09/28 12:46:29]  Generator returned sat in 0.451844 secs.
[09/28 12:46:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:46:29]  Improved gap from 0.0 to 100
[09/28 12:46:30]  Improved number of small numbers from 63 to 105 out of a max of 111
[09/28 12:46:30]  Verifer returned sat in 0.844157 secs.
[09/28 12:46:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -927.377686   -1227.315674  1334.858643  -927.377686  299.937744 -1227.315674        0.0  299.937988      199.937988       7.0         -1227.315674                -1.0                -1
1    -927.377686   -1027.315674  1334.858643  -927.377686  299.875977 -1027.315674        0.0   99.937988       99.937988       4.0          -927.377686                 1.0             False
2    -727.253662    -927.315674  1334.858643  -727.253662  300.062012  -927.315674        0.0  200.062012      200.062012       1.0          -927.377686                 1.0             False
3    -727.253662    -827.315918  1334.858643  -727.253662   59.240885  -827.315918        0.0  100.062256      100.062012       2.0          -727.253662                 0.0             False
4    -727.253662    -727.315674  1334.858643  -727.253662   88.861328  -727.315674        0.0    0.062012        0.062012       3.0          -727.253662                 1.0             False
5    -594.023682    -627.315674  1334.858643  -594.023682  133.291992  -627.315674        0.0   33.291992       33.291992       1.0          -727.253662                 1.0             False
6    -427.377686    -627.315674  1334.858643  -427.377686  199.937988  -627.315674        0.0  199.937988       99.937988       1.0          -727.253662                 0.0             False
7    -327.408691    -427.315703  1334.858643  -327.408691  299.906982  -427.315703        0.0   99.907012       99.906982       1.0          -727.253662                 0.0             False
8      22.544771    -373.517334  1334.858643    22.544771  449.860474  -373.517334        0.0  396.062104      349.860444       2.0          -727.253662                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:31]  --------------------------------------------------------------------------------
[09/28 12:46:31]  Iteration: 16 (0 solution, 15 counterexamples)
[09/28 12:46:31]  Generator returned sat in 0.070737 secs.
[09/28 12:46:31]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:31]  Improved gap from 0.0 to 100
[09/28 12:46:32]  Improved number of small numbers from 38 to 59 out of a max of 111
[09/28 12:46:32]  Verifer returned sat in 1.147431 secs.
[09/28 12:46:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -515.731934    -628.454346  735.997422  -515.731934    0.061768  -628.454346        0.0  112.722412       12.722549       9.0          -628.454346                -1.0                -1
1    -515.731934    -528.454346  735.997422  -515.731934  112.660645  -528.454346        0.0   12.722412      -87.277451       8.0          -628.454346                 1.0             False
2    -415.855713    -415.855737  735.997422  -415.855713  112.598633  -415.855737        0.0    0.000024      -87.401230       1.0          -415.855713                 1.0              True
3    -328.392593    -328.454482  735.997422  -328.392593   87.463144  -328.454482        0.0    0.061890      -99.938110       1.0          -328.392593                 0.0             False
4    -196.259767    -228.454482  735.997422  -196.259767  132.194716  -228.454482        0.0   32.194716      -67.805284       1.0          -328.392593                 0.0             False
5     -29.162409    -128.454482  735.997422   -29.162409  199.292074  -128.454482        0.0   99.292074       -0.707926       1.0          -328.392593                 0.0             False
6     171.483628     -28.454482  735.997422   171.483628  299.938110   -28.454482        0.0  199.938110       99.938110       1.0          -328.392593                 0.0             False
7     422.452683     171.545518  735.997422   422.452683  450.907166   171.545518        0.0  250.907166      250.907166       1.0          -328.392593                 0.0             False
8     848.906266     171.607178  735.997422   848.906266  677.360748   171.607178        0.0  677.299088      577.360748       2.0          -328.392593                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:33]  --------------------------------------------------------------------------------
[09/28 12:46:33]  Iteration: 17 (0 solution, 16 counterexamples)
[09/28 12:46:34]  Generator returned sat in 1.123726 secs.
[09/28 12:46:34]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:40]  Improved gap from 0.0 to 28.125
[09/28 12:46:40]  Improved number of small numbers from 46 to 111 out of a max of 111
[09/28 12:46:40]  Verifer returned sat in 6.064020 secs.
[09/28 12:46:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -493.478271    -793.478271  735.997314  -493.478271    0.030762  -793.478271        0.0  300.000000      300.000000       9.0          -793.478271                -1.0                -1
1    -493.478271    -704.416504  735.997314  -493.478271    0.031006  -704.416504        0.0  210.938232      200.000000       9.0          -793.478271                 1.0             False
2    -493.478271    -593.478516  735.997314  -493.478271    0.031006  -593.478516        0.0  100.000244      100.000000       5.0          -793.478271                 1.0              True
3    -471.323975    -493.509277  735.997314  -471.323975  122.154541  -493.509277        0.0   22.185303       22.154297       4.0          -793.478271                 1.0              True
4    -282.447510    -493.478271  735.997314  -282.447510  211.061768  -493.478271        0.0  211.030762      111.030762       5.0          -793.478271                 1.0              True
5    -282.447510    -388.978516  735.997314  -282.447510  211.000000  -388.978516        0.0  106.531006       11.030762       2.0          -282.447510                 1.0              True
6    -282.447510    -282.447510  770.716553  -282.447510  106.500000  -282.447510        0.0    0.000000      -54.250000       3.0          -282.447510                 0.0             False
7    -228.197510    -228.197510  842.591553  -228.197510   54.250000  -228.197510        0.0    0.000000      -28.125000       1.0          -228.197510                 0.0             False
8    -200.072510    -200.072510  842.591553  -200.072510   28.125000  -200.072510        0.0    0.000000     -100.000000       1.0          -200.072510                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:41]  --------------------------------------------------------------------------------
[09/28 12:46:41]  Iteration: 18 (0 solution, 17 counterexamples)
[09/28 12:46:41]  Generator returned sat in 0.095304 secs.
[09/28 12:46:41]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:48]  Improved gap from 28.125 to 28.125
[09/28 12:46:48]  Improved number of small numbers from 50 to 111 out of a max of 111
[09/28 12:46:48]  Verifer returned sat in 6.236868 secs.
[09/28 12:46:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0       8.744873    -502.255127   994.197998     8.744873    0.061768  -502.255127        0.0  511.000000         511.000       3.0          -502.255127                -1.0                -1
1       8.744873    -411.193359   994.197998     8.744873  127.086670  -411.193359        0.0  419.938232         411.000       3.0          -502.255127                 0.0             False
2       8.744873    -302.255127   994.197998     8.744873  127.086670  -302.255127        0.0  311.000000         311.000       3.0          -502.255127                 0.0             False
3       8.744873    -209.218262   994.197998     8.744873  127.086670  -209.218262        0.0  217.963135         211.000       4.0          -502.255127                 0.0             False
4       8.744873    -202.255127   994.197998     8.744873  211.061768  -202.255127        0.0  211.000000         111.000       5.0          -502.255127                 1.0              True
5       8.744873     -97.816895   994.197998     8.744873  211.000000   -97.816895        0.0  106.561768          11.000       6.0             8.744873                 1.0              True
6       8.744873       8.744873  1028.947998     8.744873  106.500000     8.744873        0.0    0.000000         -54.250       7.0             8.744873                 1.0             False
7      62.994873      62.994873  1100.822998    62.994873   54.250000    62.994873        0.0    0.000000         -28.125       1.0            62.994873                 1.0             False
8      91.119873      91.119873  1100.822998    91.119873   28.125000    91.119873        0.0    0.000000        -100.000       1.0            91.119873                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:48]  --------------------------------------------------------------------------------
[09/28 12:46:48]  Iteration: 19 (0 solution, 18 counterexamples)
[09/28 12:46:49]  Generator returned sat in 0.282246 secs.
[09/28 12:46:49]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:50]  Improved gap from 8.126286824544271 to 100
[09/28 12:46:50]  Improved number of small numbers from 56 to 111 out of a max of 111
[09/28 12:46:50]  Verifer returned sat in 0.729803 secs.
[09/28 12:46:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     284.814453    -627.997314  869.726318   284.814453    0.061523  -627.997314        0.0  912.811768      891.811768       3.0          -627.997314                -1.0                -1
1     284.814453    -567.497314  869.726318   284.814453  391.749756  -567.497314        0.0  852.311768      791.811768       3.0          -627.997314                 0.0             False
2     284.814453    -406.997314  869.726318   284.814453  391.749756  -406.997314        0.0  691.811768      691.811768       4.0          -627.997314                 0.0             False
3     284.814453    -367.497314  869.726318   284.814453  391.750000  -367.497314        0.0  652.311768      591.811768       4.0          -627.997314                 1.0              True
4     284.814453    -306.997314  869.726318   284.814453  391.750000  -306.997314        0.0  591.811768      491.811768       5.0          -627.997314                 1.0              True
5     284.814453    -146.497314  869.726318   284.814453  391.750000  -146.497314        0.0  431.311768      391.811768       6.0          -627.997314                 1.0              True
6     284.814453    -106.997314  869.726318   284.814453  391.750000  -106.997314        0.0  391.811768      291.811768       7.0          -627.997314                 1.0              True
7     284.814453      93.002686  869.726318   284.814453  391.750000    93.002686        0.0  191.811768      191.811768       8.0          -627.997314                 1.0              True
8     694.002686     102.190674  869.726318   694.002686  601.000000   102.190674        0.0  591.812012      501.000000       9.0          -627.997314                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:50]  --------------------------------------------------------------------------------
[09/28 12:46:50]  Iteration: 20 (0 solution, 19 counterexamples)
[09/28 12:46:51]  Generator returned sat in 0.292849 secs.
[09/28 12:46:51]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:53]  Improved gap from 0.0 to 15.625
[09/28 12:46:53]  Improved number of small numbers from 86 to 111 out of a max of 111
[09/28 12:46:53]  Verifer returned sat in 1.634904 secs.
[09/28 12:46:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     118.409668      18.409668  244.319336   118.409668    0.061768    18.409668        0.0  100.000000      100.000000       7.0            18.409668                -1.0                -1
1     118.409668     118.378906  244.319336   118.409668    0.031006   118.378906        0.0    0.030762        0.000000       7.0           118.409668                 1.0             False
2     556.440674     118.409912  244.319336   556.440674  438.061768   118.409912        0.0  438.030762      338.031006       1.0           118.409668                 1.0             False
3     556.440674     318.409668  244.319336   556.440674  438.000000   318.409668        0.0  238.031006      238.031006       2.0           556.440674                 0.0             False
4     556.440674     418.409668  244.319336   556.440674  220.000000   418.409668        0.0  138.031006      138.031006       3.0           556.440674                 0.0             False
5     556.440674     499.909668  244.319336   556.440674  111.000000   499.909668        0.0   56.531006       38.031006       4.0           556.440674                 0.0             False
6     556.440674     556.440674  290.663330   556.440674   56.500000   556.440674        0.0    0.000000      -15.625000       5.0           556.440674                 1.0             False
7     585.690674     585.690674  361.413330   585.690674   29.250000   585.690674        0.0    0.000000      -15.625000       1.0           585.690674                 1.0             False
8     601.315674     601.315674  361.413330   601.315674   15.625000   601.315674        0.0    0.000000     -100.000000       1.0           601.315674                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:53]  --------------------------------------------------------------------------------
[09/28 12:46:53]  Iteration: 21 (0 solution, 20 counterexamples)
[09/28 12:46:55]  Generator returned sat in 0.934876 secs.
[09/28 12:46:55]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:46:56]  Improved gap from 0.0616455078125 to 0
[09/28 12:46:56]  Improved number of small numbers from 55 to 111 out of a max of 111
[09/28 12:46:56]  Verifer returned sat in 1.163315 secs.
[09/28 12:46:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1084.772461     584.772461  244.319092  1084.772461   0.030762   584.772461        0.0  500.000000      400.000000       4.0           584.772461                -1.0                -1
1    1084.772461     784.772461  244.319092  1084.772461   0.030762   784.772461        0.0  300.000000      300.000000       4.0           584.772461                 0.0             False
2    1084.772461     884.772461  244.319092  1084.772461   0.030762   884.772461        0.0  200.000000      200.000000       5.0           584.772461                 0.0             False
3    1084.772461     885.403320  244.319092  1084.772461   0.031006   885.403320        0.0  199.369141      100.000000       6.0           584.772461                 0.0             False
4    1084.772461     984.833984  244.319092  1084.772461   1.000000   984.833984        0.0   99.938477        0.000000       7.0           584.772461                 0.0             False
5    1084.772461    1084.772461  344.319092  1084.772461  99.030762  1084.772461        0.0    0.000000        0.000000       8.0           584.772461                 1.0              True
6    1183.772461    1183.772461  345.319092  1183.772461  99.000000  1183.772461        0.0    0.000000        0.000000       1.0          1183.772461                 1.0              True
7    1184.772461    1184.772461  443.319336  1184.772461   1.000000  1184.772461        0.0    0.000000       -0.999756       1.0          1184.772461                 0.0             False
8    1185.772461    1185.772461  543.319092  1185.772461   1.000000  1185.772461        0.0    0.000000        0.000000       1.0          1184.772461                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:57]  --------------------------------------------------------------------------------
[09/28 12:46:57]  Iteration: 22 (0 solution, 21 counterexamples)
[09/28 12:46:58]  Generator returned sat in 0.456469 secs.
[09/28 12:46:58]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)[0m
[09/28 12:46:58]  Improved gap from 0.0 to 0
[09/28 12:46:58]  Improved number of small numbers from 65 to 86 out of a max of 111
[09/28 12:46:58]  Verifer returned sat in 0.905524 secs.
[09/28 12:46:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     590.042236     490.039795  244.319092   590.042236    0.002441   490.039795        0.0  100.002441      100.002275       5.0           490.039795                -1.0                -1
1     590.042236     590.039961  244.319092   590.042236    0.002686   590.039961        0.0    0.002275        0.002275       6.0           490.039795                 1.0             False
2    1090.039961     590.040039  244.319092  1090.039961  500.000000   590.040039        0.0  499.999922      400.000000       4.0           490.039795                 1.0              True
3    1090.039961     790.039795  244.319092  1090.039961    0.010010   790.039795        0.0  300.000166      300.000000       2.0          1090.039961                 1.0              True
4    1090.039961     890.039795  244.319092  1090.039961    0.010000   890.039795        0.0  200.000166      200.000000       3.0          1090.039961                 0.0             False
5    1090.039961     990.039795  244.319092  1090.039961    0.010000   990.039795        0.0  100.000166      100.000000       4.0          1090.039961                 1.0             False
6    1090.039961    1090.027344  244.319092  1090.039961    0.010000  1090.027344        0.0    0.012617        0.000000       5.0          1090.039961                 1.0             False
7    1090.039961    1090.039961  344.319092  1090.039961    0.010000  1090.039961        0.0    0.000000        0.000000       6.0          1090.039961                 1.0             False
8    1090.049961    1090.049805  344.319092  1090.049961    0.010000  1090.049805        0.0    0.000156      -99.990000       1.0          1090.039961                 1.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:46:59]  --------------------------------------------------------------------------------
[09/28 12:46:59]  Iteration: 23 (0 solution, 22 counterexamples)
[09/28 12:47:00]  Generator returned sat in 0.721953 secs.
[09/28 12:47:00]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:12]  Improved gap from 0.0 to 0
[09/28 12:47:13]  Improved number of small numbers from 44 to 111 out of a max of 111
[09/28 12:47:13]  Verifer returned sat in 12.144663 secs.
[09/28 12:47:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     608.943604      13.527100  244.319092   608.943604    0.030518    13.527100        0.0  595.416504      500.307861       5.0            13.527100                -1.0                -1
1     608.943604     208.635498  244.319092   608.943604    0.030762   208.635498        0.0  400.308105      400.307861       6.0            13.527100                 0.0             False
2     608.943604     308.635498  244.319092   608.943604    0.030762   308.635498        0.0  300.308105      300.307861       5.0            13.527100                 0.0             False
3     608.943604     408.605225  244.319092   608.943604    0.030762   408.605225        0.0  200.338379      200.307861       5.0            13.527100                 0.0             False
4     608.943604     408.635742  244.319092   608.943604  198.554443   408.635742        0.0  200.307861      100.307861       6.0            13.527100                 0.0             False
5     608.943604     509.835693  244.319092   608.943604  200.277344   509.835693        0.0   99.107910        0.307861       7.0            13.527100                 0.0             False
6     608.974365     608.974365  343.980469   608.974365   99.138672   608.974365        0.0    0.000000        0.000000       1.0           608.974365                 1.0              True
7     759.728271     637.004883  343.980469   759.728271  150.753906   637.004883        0.0  122.723389       50.753906       1.0           608.974365                 0.0             False
8     827.566406     708.974365  343.980469   827.566406  190.561523   708.974365        0.0  118.592041       18.592041       2.0           608.974365                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:13]  --------------------------------------------------------------------------------
[09/28 12:47:13]  Iteration: 24 (0 solution, 23 counterexamples)
[09/28 12:47:16]  Generator returned sat in 2.520037 secs.
[09/28 12:47:16]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:47:17]  Improved gap from 0.0 to 100
[09/28 12:47:17]  Improved number of small numbers from 111 to 111 out of a max of 111
[09/28 12:47:17]  Verifer returned sat in 0.615889 secs.
[09/28 12:47:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     808.635742     108.635742  244.319092   808.635742    0.061279   108.635742        0.0    700.0           700.0       5.0           108.635742                -1.0                -1
1     808.635742     208.635742  244.319092   808.635742  201.000000   208.635742        0.0    600.0           600.0       6.0           108.635742                 1.0             False
2     808.635742     222.635742  244.319092   808.635742  201.000000   222.635742        0.0    586.0           500.0       3.0           108.635742                 1.0              True
3     808.635742     308.635742  244.319092   808.635742  201.000000   308.635742        0.0    500.0           400.0       4.0           108.635742                 0.0             False
4     808.635742     409.635742  244.319092   808.635742  201.000000   409.635742        0.0    399.0           300.0       5.0           108.635742                 1.0              True
5     808.635742     508.635742  244.319092   808.635742  202.000000   508.635742        0.0    300.0           200.0       6.0           108.635742                 1.0              True
6     808.635742     708.635742  244.319092   808.635742  287.000000   708.635742        0.0    100.0           100.0       7.0           108.635742                 1.0              True
7    1109.635742     808.635742  244.319092  1109.635742  401.000000   808.635742        0.0    301.0           301.0       8.0           108.635742                 1.0              True
8    1208.635742     808.635742  244.319092  1208.635742  400.000000   808.635742        0.0    400.0           300.0       8.0          1208.635742                 1.0              True
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:17]  --------------------------------------------------------------------------------
[09/28 12:47:17]  Iteration: 25 (0 solution, 24 counterexamples)
[09/28 12:47:19]  Generator returned sat in 1.299166 secs.
[09/28 12:47:19]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:20]  Improved gap from 0.0 to 0
[09/28 12:47:20]  Improved number of small numbers from 50 to 111 out of a max of 111
[09/28 12:47:20]  Verifer returned sat in 0.814296 secs.
[09/28 12:47:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1007.727295     409.666260  244.318848  1007.727295    0.030518   409.666260        0.0  598.061035      598.061035       5.0           409.666260                -1.0                -1
1    1007.727295     509.666016  244.318848  1007.727295    0.030518   509.666016        0.0  498.061279      498.061035       5.0           409.666260                 1.0             False
2    1007.727295     609.666260  244.318848  1007.727295    0.030518   609.666260        0.0  398.061035      398.061035       6.0           409.666260                 1.0              True
3    1007.727295     708.388184  244.318848  1007.727295    0.030518   708.388184        0.0  299.339111      298.061035       4.0           409.666260                 1.0              True
4    1007.727295     759.411865  244.318848  1007.727295  148.376221   759.411865        0.0  248.315430      198.061035       5.0           409.666260                 1.0              True
5    1007.727295     809.666260  244.318848  1007.727295  198.061035   809.666260        0.0  198.061035       98.061035       6.0           409.666260                 1.0              True
6    1007.727295    1007.727295  246.257812  1007.727295  198.030518  1007.727295        0.0    0.000000        0.000000       7.0          1007.727295                 1.0              True
7    1008.727295    1008.727295  345.257812  1008.727295    1.000000  1008.727295        0.0    0.000000        0.000000       1.0          1008.727295                 1.0             False
8    1009.727295    1008.757812  345.257812  1009.727295    1.000000  1008.757812        0.0    0.969482      -99.000000       1.0          1008.727295                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:21]  --------------------------------------------------------------------------------
[09/28 12:47:21]  Iteration: 26 (0 solution, 25 counterexamples)
[09/28 12:47:24]  Generator returned sat in 2.225947 secs.
[09/28 12:47:24]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:47:27]  Improved gap from 0.0 to 42.1875
[09/28 12:47:27]  Improved number of small numbers from 42 to 54 out of a max of 111
[09/28 12:47:27]  Verifer returned sat in 3.740972 secs.
[09/28 12:47:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1019.183105     913.662528   44.216553  1019.183105    0.061035   913.662528        0.0  105.520577       99.938883       2.0           913.662528                -1.0                -1
1    1019.183105    1019.183085   44.216553  1019.183105    0.061035  1019.183085        0.0    0.000020       -0.061117       2.0           913.662528                 0.0             False
2    1019.244242    1019.244242  102.029033  1019.244242    0.061157  1019.244242        0.0    0.000000      -42.187500       1.0           913.662528                 0.0             False
3    1261.431742    1145.467900  102.029033  1261.431742  242.187500  1145.467900        0.0  115.963843      100.000000       1.0           913.662528                 0.0             False
4    1261.431742    1171.813871  102.029033  1261.431742  115.902686  1171.813871        0.0   89.617871        0.000000       2.0          1261.431742                 0.0             False
5    1261.431742    1261.431742  159.841533  1261.431742   76.315393  1261.431742        0.0    0.000000      -42.187500       3.0          1261.431742                 0.0             False
6    1382.525492    1317.568795  159.841533  1382.525492  121.093750  1317.568795        0.0   64.956698      -21.093750       1.0          1261.431742                 1.0             False
7    1403.619242    1403.619242  217.654033  1403.619242   86.050448  1403.619242        0.0    0.000000      -42.187500       1.0          1403.619242                 0.0             False
8    1519.521928    1445.806885  217.654033  1519.521928  115.902686  1445.806885        0.0   73.715043      -26.284814       1.0          1403.619242                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:28]  --------------------------------------------------------------------------------
[09/28 12:47:28]  Iteration: 27 (0 solution, 26 counterexamples)
[09/28 12:47:30]  Generator returned sat in 1.336490 secs.
[09/28 12:47:30]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:30]  Improved gap from 0.0 to 0
[09/28 12:47:31]  Improved number of small numbers from 50 to 111 out of a max of 111
[09/28 12:47:31]  Verifer returned sat in 0.775621 secs.
[09/28 12:47:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1116.670654     714.287598  249.173096  1116.670654    0.061035   714.287598        0.0  402.383057      402.382812       7.0           714.287598                -1.0                -1
1    1116.670654     814.287842  249.173096  1116.670654    0.061035   814.287842        0.0  302.382812      302.382812       4.0           714.287598                 1.0             False
2    1116.670654     914.287598  249.173096  1116.670654  200.660889   914.287598        0.0  202.383057      202.382812       5.0           714.287598                 0.0             False
3    1116.670654     915.948730  249.173096  1116.670654  200.660889   915.948730        0.0  200.721924      102.382812       6.0           714.287598                 0.0             False
4    1116.670654    1014.287842  249.173096  1116.670654  200.661133  1014.287842        0.0  102.382812        2.382812       7.0           714.287598                 1.0              True
5    1213.287842    1213.287842  250.173096  1213.287842  199.000000  1213.287842        0.0    0.000000        0.000000       1.0          1213.287842                 1.0              True
6    1214.287842    1214.287842  348.173096  1214.287842    1.000000  1214.287842        0.0    0.000000       -1.000000       1.0          1214.287842                 0.0             False
7    1215.287842    1215.287842  447.173096  1215.287842    1.000000  1215.287842        0.0    0.000000       -1.000000       1.0          1214.287842                 0.0             False
8    1216.287842    1216.287842  447.173096  1216.287842    1.000000  1216.287842        0.0    0.000000     -100.000000       1.0          1214.287842                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:31]  --------------------------------------------------------------------------------
[09/28 12:47:31]  Iteration: 28 (0 solution, 27 counterexamples)
[09/28 12:47:33]  Generator returned sat in 0.801296 secs.
[09/28 12:47:33]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:35]  Improved gap from 0.0 to 42.1875
[09/28 12:47:36]  Improved number of small numbers from 40 to 53 out of a max of 111
[09/28 12:47:36]  Verifer returned sat in 3.494552 secs.
[09/28 12:47:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     568.364880     468.364880  249.173096   568.364880    0.060791   468.364880        0.0  100.000000      100.000000       2.0           468.364880                -1.0                -1
1     568.364880     553.004663  249.173096   568.364880    0.030518   553.004663        0.0   15.360217        0.000000       2.0           568.364880                 0.0             False
2     568.364880     568.364880  303.189697   568.364880    0.030518   568.364880        0.0    0.000000      -45.983398       3.0           568.364880                 0.0             False
3     726.516467     698.353967  303.189697   726.516467  158.151587   698.353967        0.0   28.162500       12.168188       1.0           568.364880                 0.0             False
4     814.348511     726.546924  303.189697   814.348511  115.994543   726.546924        0.0   87.801587        0.000232       1.0           814.348511                 0.0             False
5     814.348511     814.348511  361.001965   814.348511   87.771130   814.348511        0.0    0.000000      -42.187500       2.0           814.348511                 0.0             False
6     938.340326     869.808663  361.001965   938.340326  123.991815   869.808663        0.0   68.531663      -18.195685       1.0           814.348511                 0.0             False
7     956.536011     956.536011  418.814453   956.536011   86.727348   956.536011        0.0    0.000000      -42.187512       1.0           956.536011                 0.0             False
8    1072.530554     998.723633  418.814453  1072.530554  115.994543   998.723633        0.0   73.806921      -26.192969       1.0           956.536011                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:37]  --------------------------------------------------------------------------------
[09/28 12:47:37]  Iteration: 29 (0 solution, 28 counterexamples)
[09/28 12:47:38]  Generator returned sat in 0.560013 secs.
[09/28 12:47:38]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:38]  Improved gap from 0.0 to 100
[09/28 12:47:39]  Improved number of small numbers from 44 to 111 out of a max of 111
[09/28 12:47:39]  Verifer returned sat in 0.398344 secs.
[09/28 12:47:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     498.764404     498.703613  218.834473   498.764404  595.121826   498.703613        0.0    0.060791        0.060791       1.0           498.703613                -1.0                -1
1    1093.825439     598.703369  218.834473  1093.825439  595.121826   598.703369        0.0  495.122070      495.121826       1.0           498.703613                 0.0             False
2    1093.825439     698.642578  218.834473  1093.825439  394.060791   698.642578        0.0  395.182861      395.121826       2.0          1093.825439                 0.0             False
3    1093.825439     698.703613  218.834473  1093.825439  394.060791   698.703613        0.0  395.121826      295.121826       3.0          1093.825439                 0.0             False
4    1093.825439     898.703613  218.834473  1093.825439  395.060791   898.703613        0.0  195.121826      195.121826       4.0          1093.825439                 0.0             False
5    1294.764404     898.703613  218.834473  1294.764404  396.060791   898.703613        0.0  396.060791      296.060791       4.0          1093.825439                 0.0             False
6    1295.764404    1093.886230  218.834473  1295.764404  397.060791  1093.886230        0.0  201.878174      197.060791       2.0          1093.825439                 0.0             False
7    1491.947021    1198.703613  218.834473  1491.947021  398.060791  1198.703613        0.0  293.243408      293.243408       3.0          1093.825439                 0.0             False
8    1597.764404    1298.703369  218.834473  1597.764404  399.060791  1298.703369        0.0  299.061035      299.060791       2.0          1093.825439                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:39]  --------------------------------------------------------------------------------
[09/28 12:47:39]  Iteration: 30 (0 solution, 29 counterexamples)
[09/28 12:47:40]  Generator returned sat in 0.493065 secs.
[09/28 12:47:40]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:41]  Improved gap from 0.0 to 100
[09/28 12:47:41]  Improved number of small numbers from 81 to 111 out of a max of 111
[09/28 12:47:41]  Verifer returned sat in 0.433958 secs.
[09/28 12:47:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1389.885986     598.703125  118.834473  1389.885986    0.061035   598.703125        0.0  791.182861      791.182617       9.0           598.703125                -1.0                -1
1    1389.885986     698.703369  118.834473  1389.885986  489.182861   698.703369        0.0  691.182617      691.182617       3.0           598.703125                 1.0             False
2    1389.885986     798.642578  118.834473  1389.885986  489.182861   798.642578        0.0  591.243408      591.182617       4.0           598.703125                 1.0              True
3    1389.885986     798.703369  118.834473  1389.885986  489.121826   798.703369        0.0  591.182617      491.182617       4.0          1389.885986                 1.0              True
4    1389.885986     898.703369  118.834473  1389.885986  490.121826   898.703369        0.0  491.182617      391.182617       5.0          1389.885986                 1.0             False
5    1389.885986    1098.703125  118.834473  1389.885986  491.121826  1098.703125        0.0  291.182861      291.182617       6.0          1389.885986                 1.0             False
6    1590.824951    1198.703125  118.834473  1590.824951  492.121826  1198.703125        0.0  392.121826      392.121582       7.0          1389.885986                 1.0             False
7    1691.824951    1295.764160  118.834473  1691.824951  493.121826  1295.764160        0.0  396.060791      393.121582       8.0          1389.885986                 1.0             False
8    1789.885986    1298.703369  118.834473  1789.885986  494.121826  1298.703369        0.0  491.182617      391.182617       9.0          1389.885986                 1.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:41]  --------------------------------------------------------------------------------
[09/28 12:47:41]  Iteration: 31 (0 solution, 30 counterexamples)
[09/28 12:47:43]  Generator returned sat in 0.376737 secs.
[09/28 12:47:43]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:43]  Improved gap from 0.0 to 0
[09/28 12:47:44]  Improved number of small numbers from 41 to 76 out of a max of 111
[09/28 12:47:44]  Verifer returned sat in 1.340863 secs.
[09/28 12:47:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1298.765553     798.765381  -81.227539  1298.765553  0.030273   798.765381        0.0  500.000172      500.000172       9.0           798.765381                -1.0                -1
1    1298.765553     798.795898  -81.227539  1298.765553  0.030273   798.795898        0.0  499.969654      400.000172       3.0           798.765381                 1.0             False
2    1298.765553     998.765381  -81.227539  1298.765553  0.030273   998.765381        0.0  300.000172      300.000172       4.0           798.765381                 1.0              True
3    1298.765553    1098.765381  -81.227539  1298.765553  0.030457  1098.765381        0.0  200.000172      200.000172       4.0           798.765381                 1.0              True
4    1298.765553    1098.795898  -81.227539  1298.765553  1.015228  1098.795898        0.0  199.969654      100.000172       5.0           798.765381                 1.0              True
5    1298.765553    1296.981445  -81.227539  1298.765553  1.507614  1296.981445        0.0    1.784107        0.000172       6.0           798.765381                 1.0              True
6    1298.765553    1298.765553   16.895508  1298.765553  1.753807  1298.765553        0.0    0.000000       -1.876781       7.0           798.765381                 1.0              True
7    1300.642456    1300.642456  116.895264  1300.642456  1.876904  1300.642456        0.0    0.000000       -0.000122       1.0           798.765381                 1.0              True
8    1301.642456    1301.642456  215.895264  1301.642456  1.000000  1301.642456        0.0    0.000000       -0.000122       1.0          1301.642456                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:44]  --------------------------------------------------------------------------------
[09/28 12:47:44]  Iteration: 32 (0 solution, 31 counterexamples)
[09/28 12:47:45]  Generator returned sat in 0.233755 secs.
[09/28 12:47:45]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:48]  Improved gap from 0.0 to 0
[09/28 12:47:48]  Improved number of small numbers from 54 to 111 out of a max of 111
[09/28 12:47:48]  Verifer returned sat in 2.789231 secs.
[09/28 12:47:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1004.252930     604.192139  -81.227783  1004.252930  400.060791   604.192139        0.0  400.060791      300.060791       2.0           604.192139                -1.0                -1
1    1004.252930     804.192139  -81.227783  1004.252930  400.030273   804.192139        0.0  200.060791      200.060791       2.0          1004.252930                 0.0             False
2    1204.192139     904.192139  -81.227783  1204.192139  400.000000   904.192139        0.0  300.000000      300.000000       3.0          1204.192139                 0.0             False
3    1204.192139    1004.192139  -81.227783  1204.192139    1.000000  1004.192139        0.0  200.000000      200.000000       4.0          1204.192139                 1.0             False
4    1204.192139    1104.192139  -81.227783  1204.192139    1.000000  1104.192139        0.0  100.000000      100.000000       3.0          1204.192139                 1.0             False
5    1204.192139    1203.161621  -81.227783  1204.192139    1.000000  1203.161621        0.0    1.030518        0.000000       4.0          1204.192139                 1.0             False
6    1204.192139    1204.192139   18.772217  1204.192139    1.000000  1204.192139        0.0    0.000000        0.000000       5.0          1204.192139                 1.0             False
7    1205.192139    1205.192139  116.772461  1205.192139    1.000000  1205.192139        0.0    0.000000       -0.999756       1.0          1204.192139                 1.0             False
8    1206.192139    1206.191895  116.772461  1206.192139    1.000000  1206.191895        0.0    0.000244      -99.999756       1.0          1204.192139                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:49]  --------------------------------------------------------------------------------
[09/28 12:47:49]  Iteration: 33 (0 solution, 32 counterexamples)
[09/28 12:47:51]  Generator returned sat in 1.335299 secs.
[09/28 12:47:51]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:47:51]  Improved gap from 0.03033447265625 to 100
[09/28 12:47:52]  Improved number of small numbers from 52 to 111 out of a max of 111
[09/28 12:47:52]  Verifer returned sat in 0.559433 secs.
[09/28 12:47:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     905.101074     405.131348  116.772461   905.101074    0.030273   405.131348        0.0  499.969727      499.969727       6.0           405.131348                -1.0                -1
1     905.101074     505.131348  116.772461   905.101074    0.030273   505.131348        0.0  399.969727      399.969727       6.0           405.131348                 0.0             False
2     905.101074     505.131348  116.772461   905.101074    0.030273   505.131348        0.0  399.969727      299.969727       6.0           405.131348                 0.0             False
3     905.101074     605.131592  116.772461   905.101074    0.030518   605.131592        0.0  299.969482      199.969727       7.0           405.131348                 0.0             False
4     905.101074     737.419189  116.772461   905.101074  101.015381   737.419189        0.0  167.681885       99.969727       8.0           405.131348                 0.0             False
5     905.101074     905.101074  116.772461   905.101074  167.651611   905.101074        0.0    0.000000       -0.030273       9.0           405.131348                 0.0             False
6    1306.070801     905.131592  116.772461  1306.070801  400.969727   905.131592        0.0  400.939209      300.939453       1.0           405.131348                 1.0              True
7    1306.070801    1086.843506  116.772461  1306.070801  351.484863  1086.843506        0.0  219.227295      200.939453       2.0          1306.070801                 0.0             False
8    1438.298096    1205.131348  116.772461  1438.298096  351.454590  1205.131348        0.0  233.166748      233.166748       3.0          1438.298096                 0.0             False
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:47:52]  --------------------------------------------------------------------------------
[09/28 12:47:52]  Iteration: 34 (0 solution, 33 counterexamples)
[09/28 12:47:54]  Generator returned sat in 1.064192 secs.
[09/28 12:47:54]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:48:01]  Improved gap from 0.00125 to 0
[09/28 12:48:01]  Improved number of small numbers from 85 to 91 out of a max of 111
[09/28 12:48:01]  Verifer returned sat in 6.706696 secs.
[09/28 12:48:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1005.526592     305.131592  116.772217  1005.526592  0.002686   305.131592        0.0  700.395000      600.395000       6.0           305.131592                -1.0                -1
1    1005.526592     405.131592  116.772217  1005.526592  0.002686   405.131592        0.0  600.395000      500.395000       6.0           305.131592                 1.0             False
2    1005.526592     505.131592  116.772217  1005.526592  0.002686   505.131592        0.0  500.395000      400.395000       6.0           305.131592                 1.0              True
3    1005.526592     705.131592  116.772217  1005.526592  0.009766   705.131592        0.0  300.395000      300.395000       5.0           305.131592                 1.0              True
4    1005.526592     805.131348  116.772217  1005.526592  0.010000   805.131348        0.0  200.395244      200.395000       6.0           305.131592                 1.0              True
5    1005.526592     905.128906  116.772217  1005.526592  0.010000   905.128906        0.0  100.397686      100.395000       6.0           305.131592                 1.0              True
6    1005.526592     905.131592  116.772217  1005.526592  0.010000   905.131592        0.0  100.395000        0.395000       7.0           305.131592                 1.0              True
7    1005.526592    1005.526592  216.374756  1005.526592  0.010000  1005.526592        0.0    0.000000       -0.002461       8.0           305.131592                 1.0              True
8    1005.536592    1005.529297  216.374756  1005.536592  0.010000  1005.529297        0.0    0.007295      -99.992461       1.0           305.131592                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:48:01]  --------------------------------------------------------------------------------
[09/28 12:48:01]  Iteration: 35 (0 solution, 34 counterexamples)
[09/28 12:48:05]  Generator returned sat in 2.941006 secs.
[09/28 12:48:05]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:48:11]  Improved gap from 0.0 to 0
[09/28 12:48:11]  Improved number of small numbers from 47 to 111 out of a max of 111
[09/28 12:48:11]  Verifer returned sat in 6.103977 secs.
[09/28 12:48:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0     805.344482     205.344482  116.405273   805.344482  0.030273   205.344482        0.0  600.000000      600.000000       4.0           205.344482                -1.0                -1
1     805.344482     305.344482  116.405273   805.344482  0.030518   305.344482        0.0  500.000000      500.000000       4.0           205.344482                 0.0             False
2     805.344482     405.344482  116.405273   805.344482  0.030518   405.344482        0.0  400.000000      400.000000       5.0           205.344482                 0.0             False
3     805.344482     505.005127  116.405273   805.344482  0.030518   505.005127        0.0  300.339355      300.000000       6.0           205.344482                 0.0             False
4     805.344482     505.344727  116.405273   805.344482  1.000000   505.344727        0.0  299.999756      200.000000       7.0           205.344482                 1.0              True
5     805.344482     705.344482  116.405273   805.344482  1.000000   705.344482        0.0  100.000000      100.000000       7.0           205.344482                 1.0              True
6     805.344482     804.314453  116.405273   805.344482  1.000000   804.314453        0.0    1.030029        0.000000       7.0           205.344482                 1.0              True
7     805.344482     805.344482  216.374756   805.344482  1.000000   805.344482        0.0    0.000000       -0.030518       8.0           205.344482                 1.0              True
8     806.344482     805.375000  216.374756   806.344482  1.000000   805.375000        0.0    0.969482      -99.030518       1.0           205.344482                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:48:12]  --------------------------------------------------------------------------------
[09/28 12:48:12]  Iteration: 36 (0 solution, 35 counterexamples)
[09/28 12:48:14]  Generator returned sat in 0.930764 secs.
[09/28 12:48:14]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:48:16]  Verifer returned unsat in 1.709692 secs.
[09/28 12:48:16]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:48:16]  --------------------------------------------------------------------------------
[09/28 12:48:16]  Iteration: 37 (1 solution, 35 counterexamples)
[09/28 12:48:17]  Generator returned sat in 0.516816 secs.
[09/28 12:48:17]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:48:24]  Improved gap from 0.0 to 0
[09/28 12:48:24]  Improved number of small numbers from 109 to 111 out of a max of 111
[09/28 12:48:24]  Verifer returned sat in 6.859818 secs.
[09/28 12:48:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    1117.902588     816.857178  171.018555  1117.902588    0.030029   816.857178        0.0  301.045410      301.045410       5.0           816.857178                -1.0                -1
1    1117.902588     816.857178  171.018555  1117.902588    0.030029   816.857178        0.0  301.045410      201.045410       5.0           816.857178                 0.0             False
2    1117.902588    1016.826904  171.018555  1117.902588    0.030273  1016.826904        0.0  101.075684      101.045410       6.0           816.857178                 0.0             False
3    1117.902588    1016.857178  171.018555  1117.902588    0.030273  1016.857178        0.0  101.045410        1.045410       7.0           816.857178                 0.0             False
4    1117.902588    1117.902588  269.973145  1117.902588  101.015137  1117.902588        0.0    0.000000        0.000000       8.0           816.857178                 0.0             False
5    1118.902588    1118.902588  368.973145  1118.902588    1.000000  1118.902588        0.0    0.000000        0.000000       1.0          1118.902588                 1.0              True
6    1171.440430    1171.440430  416.435303  1171.440430   52.537842  1171.440430        0.0    0.000000        0.000000       1.0          1118.902588                 0.0             False
7    1276.000977    1171.470459  416.435303  1276.000977  104.560547  1171.470459        0.0  104.530518        4.560547       1.0          1118.902588                 0.0             False
8    1276.000977    1276.000977  416.435303  1276.000977   80.064209  1276.000977        0.0    0.000000      -95.439453       2.0          1276.000977                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:48:24]  --------------------------------------------------------------------------------
[09/28 12:48:24]  Iteration: 38 (1 solution, 36 counterexamples)
[09/28 12:48:26]  Generator returned sat in 0.265916 secs.
[09/28 12:48:26]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:48:34]  Improved gap from 0.3395751953125 to 0
[09/28 12:48:34]  Improved number of small numbers from 57 to 111 out of a max of 111
[09/28 12:48:34]  Verifer returned sat in 8.214394 secs.
[09/28 12:48:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    2187.012451    1586.733398  171.018311  2187.012451  0.060547  1586.733398        0.0  600.279053      600.278809       9.0          1586.733398                -1.0                -1
1    2187.012451    1586.793945  171.018311  2187.012451  0.060547  1586.793945        0.0  600.218506      500.278809       9.0          1586.733398                 1.0             False
2    2187.012451    1786.733398  171.018311  2187.012451  0.060547  1786.733398        0.0  400.279053      400.278809       9.0          1586.733398                 1.0              True
3    2187.012451    1886.733398  171.018311  2187.012451  2.000000  1886.733398        0.0  300.279053      300.278809       9.0          1586.733398                 1.0              True
4    2187.012451    1986.733154  171.018311  2187.012451  2.000000  1986.733154        0.0  200.279297      200.278809       9.0          1586.733398                 1.0              True
5    2187.012451    2086.733154  171.018311  2187.012451  2.000000  2086.733154        0.0  100.279297      100.278809       9.0          1586.733398                 1.0              True
6    2187.012451    2184.952148  171.018311  2187.012451  2.000000  2184.952148        0.0    2.060303        0.278809       9.0          1586.733398                 1.0              True
7    2187.012451    2187.012451  270.739258  2187.012451  2.000000  2187.012451        0.0    0.000000       -0.000244       9.0          1586.733398                 1.0              True
8    2189.012451    2187.072754  270.739258  2189.012451  2.000000  2187.072754        0.0    1.939697      -98.000244       1.0          1586.733398                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:48:34]  --------------------------------------------------------------------------------
[09/28 12:48:34]  Iteration: 39 (1 solution, 37 counterexamples)
[09/28 12:48:36]  Generator returned sat in 0.699856 secs.
[09/28 12:48:36]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:48:45]  Improved gap from 0.000244140625 to 0
[09/28 12:48:45]  Improved number of small numbers from 48 to 111 out of a max of 111
[09/28 12:48:45]  Verifer returned sat in 8.562451 secs.
[09/28 12:48:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0    -287.890625    -887.890625  277.999268  -287.890625  0.030029  -887.890625        0.0  600.000000           600.0       8.0          -887.890625                -1.0                -1
1    -287.890625    -887.890625  277.999268  -287.890625  0.030029  -887.890625        0.0  600.000000           500.0       8.0          -887.890625                 0.0             False
2    -287.890625    -787.890381  277.999268  -287.890625  0.030029  -787.890381        0.0  499.999756           400.0       8.0          -887.890625                 0.0             False
3    -287.890625    -588.230225  277.999268  -287.890625  0.030273  -588.230225        0.0  300.339600           300.0       9.0          -887.890625                 0.0             False
4    -287.890625    -587.890381  277.999268  -287.890625  1.000000  -587.890381        0.0  299.999756           200.0       9.0          -887.890625                 1.0              True
5    -287.890625    -487.890625  277.999268  -287.890625  1.000000  -487.890625        0.0  200.000000           100.0       9.0          -887.890625                 1.0              True
6    -287.890625    -288.920654  277.999268  -287.890625  1.000000  -288.920654        0.0    1.030029             0.0       9.0          -887.890625                 1.0              True
7    -287.890625    -287.890625  377.999268  -287.890625  1.000000  -287.890625        0.0    0.000000             0.0       9.0          -887.890625                 1.0              True
8    -286.890625    -287.860107  377.999268  -286.890625  1.000000  -287.860107        0.0    0.969482           -99.0       1.0          -887.890625                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:48:45]  --------------------------------------------------------------------------------
[09/28 12:48:45]  Iteration: 40 (1 solution, 38 counterexamples)
[09/28 12:48:46]  Generator returned sat in 0.182440 secs.
[09/28 12:48:46]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:48:56]  Improved gap from 0.0 to 0
[09/28 12:48:56]  Improved number of small numbers from 65 to 111 out of a max of 111
[09/28 12:48:56]  Verifer returned sat in 9.912615 secs.
[09/28 12:48:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -2458.879883   -3058.879883  277.999268 -2458.879883  0.030029 -3058.879883        0.0  600.000000           600.0       8.0         -3058.879883                -1.0                -1
1   -2458.879883   -2958.894775  277.999268 -2458.879883  0.030029 -2958.894775        0.0  500.014893           500.0       8.0         -3058.879883                 0.0             False
2   -2458.879883   -2958.879639  277.999268 -2458.879883  1.999756 -2958.879639        0.0  499.999756           400.0       8.0         -3058.879883                 0.0             False
3   -2458.879883   -2759.249756  277.999268 -2458.879883  2.000000 -2759.249756        0.0  300.369873           300.0       9.0         -3058.879883                 0.0             False
4   -2458.879883   -2658.879883  277.999268 -2458.879883  2.000000 -2658.879883        0.0  200.000000           200.0       9.0         -3058.879883                 1.0              True
5   -2458.879883   -2658.864990  277.999268 -2458.879883  2.000000 -2658.864990        0.0  199.985107           100.0       9.0         -3058.879883                 1.0              True
6   -2458.879883   -2558.879883  277.999268 -2458.879883  2.000000 -2558.879883        0.0  100.000000             0.0       9.0         -3058.879883                 1.0              True
7   -2458.879883   -2458.879883  377.999268 -2458.879883  2.000000 -2458.879883        0.0    0.000000             0.0       9.0         -3058.879883                 1.0              True
8   -2456.879883   -2458.864990  377.999268 -2456.879883  2.000000 -2458.864990        0.0    1.985107           -98.0       1.0         -3058.879883                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:48:57]  --------------------------------------------------------------------------------
[09/28 12:48:57]  Iteration: 41 (1 solution, 39 counterexamples)
[09/28 12:49:02]  Generator returned sat in 4.114105 secs.
[09/28 12:49:02]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:49:09]  Improved gap from 0.0 to 0
[09/28 12:49:10]  Improved number of small numbers from 63 to 86 out of a max of 111
[09/28 12:49:10]  Verifer returned sat in 7.643855 secs.
[09/28 12:49:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1968.896240   -2508.898633  277.999268 -1968.896240    0.001465 -2508.898633        0.0  540.002393      540.002393       8.0         -2508.898633                -1.0                -1
1   -1968.896240   -2448.897383  277.999268 -1968.896240  180.000000 -2448.897383        0.0  480.001143      440.002393       3.0         -2508.898633                 1.0             False
2   -1968.896240   -2308.898682  277.999268 -1968.896240  180.000000 -2308.898682        0.0  340.002441      340.002393       3.0         -2508.898633                 0.0             False
3   -1968.896240   -2208.898633  277.999268 -1968.896240  180.000000 -2208.898633        0.0  240.002393      240.002393       4.0         -2508.898633                 0.0             False
4   -1968.896240   -2208.897383  277.999268 -1968.896240  240.000000 -2208.897383        0.0  240.001143      140.002393       5.0         -2508.898633                 0.0             False
5   -1968.896240   -2108.898438  277.999268 -1968.896240  240.000000 -2108.898438        0.0  140.002197       40.002393       6.0         -2508.898633                 0.0             False
6   -1968.896240   -2008.898633  277.999268 -1968.896240    0.010000 -2008.898633        0.0   40.002393      -59.997607       7.0         -1968.896240                 1.0              True
7   -1908.893633   -1908.893633  377.994268 -1908.893633  100.005000 -1908.893633        0.0    0.000000        0.000000       1.0         -1968.896240                 1.0             False
8   -1708.889258   -1908.893555  377.994268 -1708.889258  200.004375 -1908.893555        0.0  200.004297      100.004375       1.0         -1968.896240                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:49:10]  --------------------------------------------------------------------------------
[09/28 12:49:10]  Iteration: 42 (1 solution, 40 counterexamples)
[09/28 12:49:12]  Generator returned sat in 0.274036 secs.
[09/28 12:49:12]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 0)[0m
[09/28 12:49:16]  Improved gap from 0.0 to 0
[09/28 12:49:17]  Improved number of small numbers from 67 to 91 out of a max of 111
[09/28 12:49:17]  Verifer returned sat in 5.037172 secs.
[09/28 12:49:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -1708.881133   -2308.881348  277.999268 -1708.881133  0.001221 -2308.881348        0.0  600.000215      600.000215       3.0         -2308.881348                -1.0                -1
1   -1708.881133   -2308.880127  277.999268 -1708.881133  0.001250 -2308.880127        0.0  599.998994      500.000215       4.0         -2308.881348                 0.0             False
2   -1708.881133   -2208.881104  277.999268 -1708.881133  0.001250 -2208.881104        0.0  499.999971      400.000215       5.0         -2308.881348                 0.0             False
3   -1708.881133   -2009.269775  277.999268 -1708.881133  0.001465 -2009.269775        0.0  300.388643      300.000215       6.0         -2308.881348                 0.0             False
4   -1708.881133   -1908.881348  277.999268 -1708.881133  0.010000 -1908.881348        0.0  200.000215      200.000215       7.0         -2308.881348                 1.0              True
5   -1708.881133   -1808.881348  277.999268 -1708.881133  0.010000 -1808.881348        0.0  100.000215      100.000215       7.0         -2308.881348                 1.0              True
6   -1708.881133   -1708.892578  277.999268 -1708.881133  0.010000 -1708.892578        0.0    0.011445        0.000215       7.0         -2308.881348                 1.0              True
7   -1708.881133   -1708.881133  377.999023 -1708.881133  0.010000 -1708.881133        0.0    0.000000       -0.000029       8.0         -2308.881348                 1.0              True
8   -1708.871133   -1708.871338  377.999023 -1708.871133  0.010000 -1708.871338        0.0    0.000205      -99.990029       1.0         -2308.881348                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:49:17]  --------------------------------------------------------------------------------
[09/28 12:49:17]  Iteration: 43 (1 solution, 41 counterexamples)
[09/28 12:49:20]  Generator returned sat in 1.363422 secs.
[09/28 12:49:20]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:49:27]  Improved gap from 2.9296875e-05 to 0
[09/28 12:49:28]  Improved number of small numbers from 56 to 63 out of a max of 111
[09/28 12:49:28]  Verifer returned sat in 8.293291 secs.
[09/28 12:49:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -2963.142806   -3282.088306  205.197268 -2963.142806    0.001221 -3282.088306        0.0  318.945500      318.945500       6.0         -3282.088306                -1.0                -1
1   -2963.142806   -3182.088379  205.197268 -2963.142806    0.001221 -3182.088379        0.0  218.945573      218.945500       6.0         -3282.088306                 0.0             False
2   -2963.142806   -3082.088306  205.197268 -2963.142806    0.001250 -3082.088306        0.0  118.945500      118.945500       7.0         -3282.088306                 0.0             False
3   -2963.142806   -3082.088306  205.197268 -2963.142806    0.001250 -3082.088306        0.0  118.945500       18.945500       7.0         -3282.088306                 0.0             False
4   -2963.142806   -2963.142806  286.251709 -2963.142806  101.000625 -2963.142806        0.0    0.000000       -0.000059       8.0         -3282.088306                 0.0             False
5   -2963.132806   -2963.132806  325.759033 -2963.132806    0.010000 -2963.132806        0.0    0.000000      -60.482734       1.0         -2963.132806                 1.0              True
6   -2902.650056   -2902.650056  425.758789 -2902.650056   60.482750 -2902.650056        0.0    0.000000       -0.000229       1.0         -2963.132806                 0.0             False
7   -2781.689556   -2902.648806  425.758789 -2781.689556  120.960500 -2902.648806        0.0  120.959250       20.960271       1.0         -2963.132806                 0.0             False
8   -2781.689556   -2781.689556  425.758789 -2781.689556   91.727250 -2781.689556        0.0    0.000000      -79.039729       2.0         -2781.689556                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:49:29]  --------------------------------------------------------------------------------
[09/28 12:49:29]  Iteration: 44 (1 solution, 42 counterexamples)
[09/28 12:49:30]  Generator returned sat in 0.238240 secs.
[09/28 12:49:30]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:49:39]  Improved gap from 0.0 to 0
[09/28 12:49:39]  Improved number of small numbers from 56 to 89 out of a max of 111
[09/28 12:49:39]  Verifer returned sat in 9.285347 secs.
[09/28 12:49:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -2416.762056   -3116.761963  -60.128906 -2416.762056  0.001221 -3116.761963        0.0  699.999907      600.000151       5.0         -3116.761963                -1.0                -1
1   -2416.762056   -3016.761963  -60.128906 -2416.762056  0.001221 -3016.761963        0.0  599.999907      500.000151       6.0         -3116.761963                 0.0             False
2   -2416.762056   -2916.761963  -60.128906 -2416.762056  0.001221 -2916.761963        0.0  499.999907      400.000151       7.0         -3116.761963                 0.0             False
3   -2416.762056   -2716.762207  -60.128906 -2416.762056  0.001465 -2716.762207        0.0  300.000151      300.000151       8.0         -3116.761963                 0.0             False
4   -2416.762056   -2616.762207  -60.128906 -2416.762056  0.010000 -2616.762207        0.0  200.000151      200.000151       9.0         -3116.761963                 1.0              True
5   -2416.762056   -2516.762207  -60.128906 -2416.762056  0.010000 -2516.762207        0.0  100.000151      100.000151       9.0         -3116.761963                 1.0              True
6   -2416.762056   -2416.773193  -60.128906 -2416.762056  0.010000 -2416.773193        0.0    0.011137        0.000151       9.0         -3116.761963                 1.0              True
7   -2416.762056   -2416.762056   39.861084 -2416.762056  0.010000 -2416.762056        0.0    0.000000       -0.009859       9.0         -3116.761963                 1.0              True
8   -2416.752056   -2416.752056  139.860840 -2416.752056  0.010000 -2416.752056        0.0    0.000000       -0.000103       1.0         -3116.761963                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:49:40]  --------------------------------------------------------------------------------
[09/28 12:49:40]  Iteration: 45 (1 solution, 43 counterexamples)
[09/28 12:49:42]  Generator returned sat in 0.473341 secs.
[09/28 12:49:42]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:49:46]  Improved gap from 0.0025 to 0
[09/28 12:49:47]  Improved number of small numbers from 54 to 59 out of a max of 111
[09/28 12:49:47]  Verifer returned sat in 5.518104 secs.
[09/28 12:49:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -2414.763306   -2715.765181  -60.128982 -2414.763306    0.001221 -2715.765181        0.0  301.001875      301.001875       7.0         -2715.765181                -1.0                -1
1   -2414.763306   -2715.765137  -60.128982 -2414.763306    0.001250 -2715.765137        0.0  301.001831      201.001875       7.0         -2715.765181                 0.0             False
2   -2414.763306   -2515.765181  -60.128982 -2414.763306    0.001250 -2515.765181        0.0  101.001875      101.001875       8.0         -2715.765181                 0.0             False
3   -2414.763306   -2515.765181  -60.128982 -2414.763306    0.001250 -2515.765181        0.0  101.001875        1.001875       8.0         -2715.765181                 0.0             False
4   -2414.763306   -2414.763306   38.869141 -2414.763306  101.000625 -2414.763306        0.0    0.000000       -0.000002       9.0         -2715.765181                 0.0             False
5   -2414.753306   -2414.753306  138.859143 -2414.753306    0.010000 -2414.753306        0.0    0.000000        0.000000       1.0         -2414.753306                 1.0              True
6   -2363.242368   -2399.594243  138.859143 -2363.242368   51.510937 -2399.594243        0.0   36.351875      -48.489063       1.0         -2414.753306                 0.0             False
7   -2314.753306   -2314.753306  145.433838 -2314.753306   84.840937 -2314.753306        0.0    0.000000      -93.425305       1.0         -2414.753306                 0.0             False
8   -2221.327837   -2221.327837  145.433838 -2221.327837   93.425469 -2221.327837        0.0    0.000000      -99.999836       1.0         -2414.753306                 0.0             False
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:49:48]  --------------------------------------------------------------------------------
[09/28 12:49:48]  Iteration: 46 (1 solution, 44 counterexamples)
[09/28 12:49:49]  Generator returned sat in 0.226322 secs.
[09/28 12:49:49]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[n][t] = max(0.01, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:50:00]  Improved gap from 0.01 to 0
[09/28 12:50:00]  Improved number of small numbers from 56 to 91 out of a max of 111
[09/28 12:50:00]  Verifer returned sat in 11.379893 secs.
[09/28 12:50:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay_t  last_decrease_f_0,t  exceed_queue_f_0,t this_decrease_f_0
0   -3120.718306   -3721.105713  138.859131 -3120.718306  0.002441 -3721.105713        0.0  600.387407      600.387407       8.0         -3721.105713                -1.0                -1
1   -3120.718306   -3721.105713  138.859131 -3120.718306  0.002441 -3721.105713        0.0  600.387407      500.387407       8.0         -3721.105713                 0.0             False
2   -3120.718306   -3621.105713  138.859131 -3120.718306  0.002686 -3621.105713        0.0  500.387407      400.387407       9.0         -3721.105713                 0.0             False
3   -3120.718306   -3421.105713  138.859131 -3120.718306  0.009766 -3421.105713        0.0  300.387407      300.387407       9.0         -3721.105713                 1.0              True
4   -3120.718306   -3321.105957  138.859131 -3120.718306  0.010000 -3321.105957        0.0  200.387651      200.387407       9.0         -3721.105713                 1.0              True
5   -3120.718306   -3221.108154  138.859131 -3120.718306  0.010000 -3221.108154        0.0  100.389848      100.387407       9.0         -3721.105713                 1.0              True
6   -3120.718306   -3221.105713  138.859131 -3120.718306  0.010000 -3221.105713        0.0  100.387407        0.387407       9.0         -3721.105713                 1.0              True
7   -3120.718306   -3120.718306  238.471436 -3120.718306  0.010000 -3120.718306        0.0    0.000000       -0.000288       9.0         -3721.105713                 1.0              True
8   -3120.708306   -3120.708496  238.471436 -3120.708306  0.010000 -3120.708496        0.0    0.000190      -99.990288       1.0         -3721.105713                 1.0              True
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
.[0m
[09/28 12:50:01]  --------------------------------------------------------------------------------
[09/28 12:50:01]  Iteration: 47 (1 solution, 45 counterexamples)
[09/28 12:50:03]  Generator returned unsat in 0.988087 secs.
[09/28 12:50:03]  [96mNo more solutions found[0m
[09/28 12:50:03]  Final solutions:
[09/28 12:50:03]  0: [1m[92mif(qbound[t-1][5]):
	c_f[n][t] = max(0.01, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)
else:
	c_f[n][t] = max(0.01, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1)[0m
[09/28 12:50:03]  Took 236.819998 secs.
