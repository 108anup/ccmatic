[08/09 16:22:54]  --------------------------------------------------------------------------------
[08/09 16:22:54]  Iteration: 1 (0 solution, 0 counterexamples)
[08/09 16:22:54]  Generator returned sat in 0.005328 secs.
[08/09 16:22:54]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:22:54]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/09 16:22:54]  Verifer returned sat in 0.266084 secs.
[08/09 16:22:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0       2786.415        -26.485    26.485     2786.415       0.1      -26.485        0.0   2812.9          2812.9     8.0          -26.485            -1             -1
1       2786.415         73.515    26.485     2786.415       0.1       73.515        0.0   2712.9          2712.9     8.0          -26.485         False          False
2       2786.415        173.415    26.485     2786.415       0.1      173.415        0.0   2613.0          2612.9     9.0          -26.485         False          False
3       2786.415        173.515    26.485     2786.415       0.1      173.515        0.0   2612.9          2512.9     8.0          -26.485          True           True
4       2786.415        273.515    26.485     2786.415     402.2      273.515        0.0   2512.9          2412.9     9.0          -26.485         False          False
5       2786.415        373.515    26.485     2786.415    1005.3      373.515        0.0   2412.9          2312.9     7.0         2786.415          True           True
6       2786.415        573.515    26.485     2786.415    2412.8      573.515        0.0   2212.9          2212.9     7.0         2786.415         False          False
7       6201.115        673.515    26.485     6201.115    5627.6      673.515        0.0   5527.6          5527.6     8.0         2786.415         False          False
8      12730.715        673.515    26.485    12730.715   12057.2      673.515        0.0  12057.2         11957.2     8.0         2786.415         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:22:54]  --------------------------------------------------------------------------------
[08/09 16:22:54]  Iteration: 2 (0 solution, 1 counterexamples)
[08/09 16:22:54]  Generator returned sat in 0.032575 secs.
[08/09 16:22:54]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:22:55]  Improved gap from 1/400 to 48.4375
[08/09 16:22:55]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:22:55]  Verifer returned sat in 0.665257 secs.
[08/09 16:22:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     3883.29375     3483.29625   26.4850   3883.29375    0.0025   3483.29625        0.0  399.9975        399.9975     6.0       3483.29625            -1             -1
1     3883.29375     3583.29625   26.4850   3883.29375  256.2275   3583.29625        0.0  299.9975        299.9975     6.0       3483.29625         False          False
2     3883.29375     3680.18625   26.4850   3883.29375  256.2275   3680.18625        0.0  203.1075        199.9975     7.0       3483.29625         False          False
3     3936.41375     3783.29625   26.4850   3936.41375  256.2275   3783.29625        0.0  153.1175        153.1175     8.0       3483.29625         False          False
4     3936.41375     3883.29375   26.4850   3936.41375  150.0000   3883.29375        0.0   53.1200         53.1175     9.0       3483.29625         False          False
5     3936.41375     3883.29625   73.3650   3936.41375    0.0100   3883.29625        0.0   53.1175         -0.0025     3.0       3936.41375          True           True
6     3984.85125     3936.41625  124.9275   3984.85125  101.5550   3936.41625        0.0   48.4350         -0.0025     1.0       3936.41375         False          False
7     4012.97625     3984.85375  176.4900   4012.97625   76.5600   3984.85375        0.0   28.1225        -20.3150     1.0       3936.41375         False          False
8     4035.63375     4033.29125  176.4900   4035.63375   50.7800   4033.29125        0.0    2.3425        -97.6575     1.0       3936.41375         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:56]  --------------------------------------------------------------------------------
[08/09 16:22:56]  Iteration: 3 (0 solution, 2 counterexamples)
[08/09 16:22:56]  Generator returned sat in 0.103187 secs.
[08/09 16:22:56]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:22:56]  Improved gap from 775/16 to 48.4375
[08/09 16:22:57]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:22:57]  Verifer returned sat in 0.841499 secs.
[08/09 16:22:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3683.313477    3239.000000   26.485107  3683.313477    0.001221  3239.000000        0.0  444.313477      399.998779     8.0      3239.000000            -1             -1
1    3683.313477    3283.315186   26.485107  3683.313477    0.001221  3283.315186        0.0  399.998291      299.998779     8.0      3239.000000         False          False
2    3683.313477    3481.219727   26.485107  3683.313477    0.001221  3481.219727        0.0  202.093750      199.998779     9.0      3239.000000         False          False
3    3683.313477    3534.877441   26.485107  3683.313477    0.001221  3534.877441        0.0  148.436035       99.998779     8.0      3239.000000          True           True
4    3683.316162    3683.302246   26.485107  3683.316162  148.438721  3683.302246        0.0    0.013916        0.001465     9.0      3239.000000         False          False
5    3683.316162    3683.314941   78.047363  3683.316162    0.010000  3683.314941        0.0    0.001221      -48.436279     2.0      3683.316162          True           True
6    3784.862549    3731.752441  124.937256  3784.862549  101.547607  3731.752441        0.0   53.110107        0.000000     1.0      3683.316162         False          False
7    3830.689941    3784.863770  176.498535  3830.689941   98.937500  3784.863770        0.0   45.826172       -2.611328     1.0      3683.316162         False          False
8    3836.144531    3833.301270  176.498535  3836.144531   51.280762  3833.301270        0.0    2.843262      -97.156738     1.0      3683.316162         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:57]  --------------------------------------------------------------------------------
[08/09 16:22:57]  Iteration: 4 (0 solution, 3 counterexamples)
[08/09 16:22:57]  Generator returned sat in 0.027258 secs.
[08/09 16:22:57]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:22:58]  Improved gap from 775/16 to 48.4375
[08/09 16:22:59]  Improved number of small numbers from 42 to 74 out of a max of 110
[08/09 16:22:59]  Verifer returned sat in 1.656389 secs.
[08/09 16:22:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3895.703613    3495.803737 -53.503688  3895.703613    0.099854  3495.803737        0.0  399.899876      399.899876     6.0      3495.803737            -1             -1
1    3895.703613    3595.803711 -53.503688  3895.703613    0.100098  3595.803711        0.0  299.899902      299.899876     6.0      3495.803737         False          False
2    3895.703613    3695.078346 -53.503688  3895.703613    0.100098  3695.078346        0.0  200.625267      199.899876     7.0      3495.803737         False          False
3    3895.703613    3795.803737 -53.503688  3895.703613    0.100098  3795.803737        0.0   99.899876       99.899876     8.0      3495.803737         False          False
4    3946.803737    3895.703613 -53.503688  3946.803737  151.000000  3895.703613        0.0   51.100124       51.000000     9.0      3495.803737         False          False
5    3946.803737    3895.803737  -4.503906  3946.803737    1.000000  3895.803737        0.0   51.000000       -0.000218     2.0      3946.803737          True           True
6    3997.166432    3946.903639  45.133545  3997.166432  101.362695  3946.903639        0.0   50.262793       -0.000072     1.0      3946.803737         False          False
7    4023.453590    3997.166504  96.696045  4023.453590   76.549951  3997.166504        0.0   26.287087      -22.150413     1.0      3946.803737         False          False
8    4048.897949    4045.604004  96.696289  4048.897949   51.731445  4045.604004        0.0    3.293945      -96.705811     1.0      3946.803737         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:00]  --------------------------------------------------------------------------------
[08/09 16:23:00]  Iteration: 5 (0 solution, 4 counterexamples)
[08/09 16:23:00]  Generator returned sat in 0.042243 secs.
[08/09 16:23:00]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:23:00]  Improved gap from 7347911/153600 to 48.4375
[08/09 16:23:01]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:23:01]  Verifer returned sat in 1.094703 secs.
[08/09 16:23:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2990.173828    2515.184570  -53.324707  2990.173828    0.010417  2515.184570        0.0  474.989258      399.989502     6.0      2515.184570            -1             -1
1    2990.173828    2690.184326  -53.324707  2990.173828    0.010417  2690.184326        0.0  299.989502      299.989502     6.0      2515.184570         False          False
2    2990.173828    2790.121826  -53.324707  2990.173828  200.052083  2790.121826        0.0  200.052002      199.989502     7.0      2515.184570         False          False
3    2990.174072    2852.538574  -53.324707  2990.174072  200.052246  2852.538574        0.0  137.635498       99.989746     8.0      2515.184570         False          False
4    3022.715576    2990.173828  -53.324707  3022.715576  170.177002  2990.173828        0.0   32.541748       32.531250     9.0      2515.184570         False          False
5    3022.715576    2990.184326   -1.762451  3022.715576    1.000000  2990.184326        0.0   32.531250      -15.906494     2.0      3022.715576          True           True
6    3091.715576    3043.288574   45.133545  3091.715576  101.531250  3043.288574        0.0   48.427002       -0.010498     1.0      3022.715576         False          False
7    3140.163574    3091.726074   96.696045  3140.163574   96.875000  3091.726074        0.0   48.437500        0.000000     1.0      3022.715576         False          False
8    3144.002197    3140.163574  148.258301  3144.002197   52.276123  3140.163574        0.0    3.838623      -44.599121     2.0      3022.715576         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:01]  --------------------------------------------------------------------------------
[08/09 16:23:01]  Iteration: 6 (0 solution, 5 counterexamples)
[08/09 16:23:01]  Generator returned sat in 0.019855 secs.
[08/09 16:23:01]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:02]  Improved gap from 196395/4096 to 46.875
[08/09 16:23:03]  Improved number of small numbers from 72 to 110 out of a max of 110
[08/09 16:23:03]  Verifer returned sat in 1.082554 secs.
[08/09 16:23:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2526.078125    2125.553223 -53.324707  2526.078125    0.049805  2125.553223        0.0  400.524902      400.524658     6.0      2125.553223            -1             -1
1    2526.078125    2125.553467 -53.324707  2526.078125  200.474609  2125.553467        0.0  400.524658      300.524658     6.0      2125.553223         False          False
2    2526.078125    2325.553467 -53.324707  2526.078125  200.474609  2325.553467        0.0  200.524658      200.524658     7.0      2125.553223         False          False
3    2526.078125    2391.236328 -53.324707  2526.078125  200.474609  2391.236328        0.0  134.841797      100.524658     8.0      2125.553223         False          False
4    2526.078125    2524.528076 -53.324707  2526.078125  134.841553  2524.528076        0.0    1.550049        0.524658     9.0      2125.553223         False          False
5    2526.078125    2525.553467  -6.468994  2526.078125    1.500000  2525.553467        0.0    0.524658      -52.619629     7.0      2526.078125          True           True
6    2627.553467    2578.697754  44.675293  2627.553467  102.000000  2578.697754        0.0   48.855713        0.000000     1.0      2526.078125         False          False
7    2674.428467    2627.603271  97.750244  2674.428467   95.730713  2627.603271        0.0   46.825195       -0.050049     1.0      2526.078125         False          False
8    2681.140869    2674.478516  97.750488  2681.140869   53.537598  2674.478516        0.0    6.662354      -93.337402     1.0      2526.078125         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:03]  --------------------------------------------------------------------------------
[08/09 16:23:03]  Iteration: 7 (0 solution, 6 counterexamples)
[08/09 16:23:03]  Generator returned sat in 0.075126 secs.
[08/09 16:23:03]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:04]  Improved gap from 51/1024 to 100
[08/09 16:23:04]  Improved number of small numbers from 67 to 110 out of a max of 110
[08/09 16:23:04]  Verifer returned sat in 0.493866 secs.
[08/09 16:23:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2677.625732    2577.725342 -53.324707   2677.625732   100.049805  2577.725342        0.0    99.900391       99.900391     3.0      2577.725342            -1             -1
1    2677.725342    2677.675537 -53.324707   2677.725342   100.000000  2677.675537        0.0     0.049805        0.000000     1.0      2677.725342         False          False
2    2677.849854    2677.800049 -53.324707   2677.849854     0.174316  2677.800049        0.0     0.049805      -99.875488     1.0      2677.849854         False          False
3    2777.775146    2777.725342 -53.324707   2777.775146    99.975098  2777.725342        0.0     0.049805      -99.950195     1.0      2677.849854         False          False
4    3077.675537    2877.725342 -53.324707   3077.675537   299.950195  2877.725342        0.0   199.950195       99.950195     1.0      2677.849854         False          False
5    3577.650635    3077.725342 -53.324707   3577.650635   699.925293  3077.725342        0.0   499.925293      499.925293     1.0      2677.849854         False          False
6    4677.538574    3077.775146 -53.324707   4677.538574  1599.813232  3077.775146        0.0  1599.763428     1499.813232     2.0      2677.849854         False          False
7    6427.426514    3177.725342 -53.324707   6427.426514  3349.651367  3177.725342        0.0  3249.701172     3149.701172     3.0      2677.849854         False          False
8   10027.028076    3377.725342 -53.324707  10027.028076  6849.302734  3377.725342        0.0  6649.302734     6649.302734     4.0      2677.849854         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:23:04]  --------------------------------------------------------------------------------
[08/09 16:23:04]  Iteration: 8 (0 solution, 7 counterexamples)
[08/09 16:23:05]  Generator returned sat in 0.052102 secs.
[08/09 16:23:05]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:05]  Improved gap from 1/600 to 0
[08/09 16:23:05]  Improved number of small numbers from 63 to 96 out of a max of 110
[08/09 16:23:05]  Verifer returned sat in 0.741624 secs.
[08/09 16:23:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3077.727051    2577.726807  -53.324707  3077.727051    0.001667  2577.726807        0.0  500.000244      500.000042     4.0      2577.726807            -1             -1
1    3077.727051    2677.720459  -53.324707  3077.727051  400.006592  2677.720459        0.0  400.006592      400.000042     4.0      2577.726807         False          False
2    3077.727051    2677.727051  -53.324707  3077.727051  400.006592  2677.727051        0.0  400.000000      300.000042     5.0      2577.726807         False          False
3    3077.733643    2777.727051  -53.324707  3077.733643  400.006592  2777.727051        0.0  300.006592      200.006634     6.0      2577.726807         False          False
4    3077.733643    2927.740479  -53.324707  3077.733643    0.010000  2927.740479        0.0  149.993164      100.006634     7.0      2577.726807         False          False
5    3077.733643    3077.725342  -53.324707  3077.733643    0.010000  3077.725342        0.0    0.008301        0.006634     8.0      2577.726807         False          False
6    3077.735342    3077.727008   46.666960  3077.735342    0.010000  3077.727008        0.0    0.008333        0.000000     9.0      2577.726807         False          False
7    3077.737008    3077.735342  146.665283  3077.737008    0.010000  3077.735342        0.0    0.001667       -0.000010     2.0      3077.737008          True           True
8    3077.745342    3077.738770  146.665283  3077.745342    0.010000  3077.738770        0.0    0.006572      -99.991676     1.0      3077.737008         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:06]  --------------------------------------------------------------------------------
[08/09 16:23:06]  Iteration: 9 (0 solution, 8 counterexamples)
[08/09 16:23:06]  Generator returned sat in 0.033921 secs.
[08/09 16:23:06]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:07]  Improved gap from 11/1200 to 0
[08/09 16:23:07]  Improved number of small numbers from 55 to 101 out of a max of 110
[08/09 16:23:07]  Verifer returned sat in 0.999372 secs.
[08/09 16:23:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3377.204590    2977.204346 -452.802246  3377.204590    0.002441  2977.204346        0.0  400.000244      400.000042     9.0      2977.204346            -1             -1
1    3377.204590    2977.204590 -452.802246  3377.204590    0.002686  2977.204590        0.0  400.000000      300.000042     6.0      2977.204346         False           True
2    3377.204590    3077.204590 -452.802246  3377.204590  399.999756  3077.204590        0.0  300.000000      200.000042     6.0      2977.204346         False          False
3    3477.204590    3277.204346 -452.802246  3477.204590  400.000000  3277.204346        0.0  200.000244      200.000042     7.0      2977.204346         False          False
4    3477.204590    3377.201904 -452.802246  3477.204590    0.010000  3377.201904        0.0  100.002686      100.000042     8.0      2977.204346         False          False
5    3477.204590    3377.204590 -452.802246  3477.204590    0.010000  3377.204590        0.0  100.000000        0.000042     9.0      2977.204346         False          False
6    3477.204590    3477.204551 -352.809570  3477.204590    0.515000  3477.204551        0.0    0.000039       -0.007282     4.0      3477.204590          True           True
7    3477.214551    3477.212051 -252.812256  3477.214551    0.010000  3477.212051        0.0    0.002500       -0.000007     1.0      3477.204590         False          False
8    3477.222051    3477.221924 -252.812256  3477.222051    0.010000  3477.221924        0.0    0.000127      -99.992507     1.0      3477.204590         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:08]  --------------------------------------------------------------------------------
[08/09 16:23:08]  Iteration: 10 (0 solution, 9 counterexamples)
[08/09 16:23:08]  Generator returned sat in 0.166531 secs.
[08/09 16:23:08]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:23:08]  Improved gap from 0 to 100
[08/09 16:23:09]  Improved number of small numbers from 44 to 96 out of a max of 110
[08/09 16:23:09]  Verifer returned sat in 0.970582 secs.
[08/09 16:23:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2914.507812    2727.095215 -302.692871  2914.507812  187.412598  2727.095215        0.0  187.412598       87.412842     9.0      2727.095215            -1             -1
1    2914.507812    2914.507611 -302.692871  2914.507812  187.363281  2914.507611        0.0    0.000202      -12.587158     5.0      2914.507812         False           True
2    3127.094980    2927.094971 -302.692871  3127.094980  212.587370  2927.094971        0.0  200.000010      100.000010     1.0      2914.507812         False           True
3    3447.025391    3127.094971 -302.692871  3447.025391  519.930420  3127.094971        0.0  319.930420      319.930420     2.0      2914.507812         False          False
4    3447.025391    3127.094980 -302.692871  3447.025391    1.000000  3127.094980        0.0  319.930410      219.930420     3.0      3447.025391          True           True
5    3447.025391    3327.094971 -302.692871  3447.025391  319.881055  3327.094971        0.0  119.930420      119.930420     3.0      3447.025391         False           True
6    3928.094971    3327.094971 -302.692871  3928.094971  601.000000  3327.094971        0.0  601.000000      501.000000     3.0      3447.025391         False           True
7    3928.094971    3447.075156 -302.692871  3928.094971  301.000000  3447.075156        0.0  481.019814      401.000000     2.0      3447.025391         False           True
8    3928.094971    3527.095215 -302.692871  3928.094971  480.970264  3527.095215        0.0  400.999756      301.000000     3.0      3447.025391         False           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:23:10]  --------------------------------------------------------------------------------
[08/09 16:23:10]  Iteration: 11 (0 solution, 10 counterexamples)
[08/09 16:23:10]  Generator returned sat in 0.279780 secs.
[08/09 16:23:10]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:23:11]  Improved number of small numbers from 49 to 109 out of a max of 109
[08/09 16:23:11]  Verifer returned sat in 0.434928 secs.
[08/09 16:23:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2127.134277    1827.184082  697.217773  2127.134277  699.950439  1827.184082        0.0  299.950195      299.950195     8.0      1827.184082            -1             -1
1    2527.134521    1827.184082  697.217773  2527.134521  699.950439  1827.184082        0.0  699.950439      599.950439     8.0      1827.184082         False           True
2    2527.134521    2027.184082  697.217773  2527.134521  397.950439  2027.184082        0.0  499.950439      499.950439     6.0      2527.134521         False           True
3    2527.134521    2127.134277  697.217773  2527.134521  397.900879  2127.134277        0.0  400.000244      399.950439     4.0      2527.134521         False           True
4    2527.134521    2127.184082  697.217773  2527.134521  398.900879  2127.184082        0.0  399.950439      299.950439     4.0      2527.134521         False           True
5    2527.134521    2327.184082  697.217773  2527.134521  399.900879  2327.184082        0.0  199.950439      199.950439     5.0      2527.134521         False           True
6    2728.084961    2427.184082  697.217773  2728.084961  400.900879  2427.184082        0.0  300.900879      300.900879     6.0      2527.134521         False           True
7    2829.084961    2527.184082  697.217773  2829.084961  401.900879  2527.184082        0.0  301.900879      301.900879     2.0      2527.134521         False           True
8    2930.084961    2527.184082  697.217773  2930.084961  402.900879  2527.184082        0.0  402.900879      302.900879     2.0      2527.134521         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:23:11]  --------------------------------------------------------------------------------
[08/09 16:23:11]  Iteration: 12 (0 solution, 11 counterexamples)
[08/09 16:23:12]  Generator returned sat in 0.219197 secs.
[08/09 16:23:12]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:23:13]  Improved gap from 405/8192 to 42.1875
[08/09 16:23:13]  Improved number of small numbers from 104 to 108 out of a max of 110
[08/09 16:23:13]  Verifer returned sat in 1.544481 secs.
[08/09 16:23:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1916.217773    1727.184082   797.217773  1916.217773  376.661133  1727.184082        0.0  189.033691      189.033691     7.0      1727.184082            -1             -1
1    2103.845215    1827.183838   797.217773  2103.845215  376.661133  1827.183838        0.0  276.661377      276.661133     8.0      1727.184082         False           True
2    2103.845215    1916.267090   797.217773  2103.845215  253.104248  1916.267090        0.0  187.578125      176.661133     2.0      2103.845215          True           True
3    2169.371582    2006.621582   797.217773  2169.371582  253.104492  2006.621582        0.0  162.750000      142.187500     3.0      2103.845215         False          False
4    2169.371582    2103.796143   797.217773  2169.371582  128.052246  2103.796143        0.0   65.575439       42.187500     4.0      2103.845215         False           True
5    2169.371582    2127.184082   855.030273  2169.371582   65.526123  2127.184082        0.0   42.187500        0.000000     3.0      2103.845215         False           True
6    2169.371582    2169.371582   912.842773  2169.371582   34.263062  2169.371582        0.0    0.000000      -42.187500     4.0      2103.845215         False           True
7    2250.746582    2211.559082   970.655273  2250.746582   81.375000  2211.559082        0.0   39.187500       -3.000000     1.0      2250.746582          True           True
8    2253.746582    2253.746582  1028.467529  2253.746582   42.187500  2253.746582        0.0    0.000000      -42.187744     1.0      2250.746582         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:14]  --------------------------------------------------------------------------------
[08/09 16:23:14]  Iteration: 13 (0 solution, 12 counterexamples)
[08/09 16:23:14]  Generator returned sat in 0.065908 secs.
[08/09 16:23:14]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:23:18]  Improved gap from 0 to 25.0
[08/09 16:23:19]  Improved number of small numbers from 54 to 82 out of a max of 110
[08/09 16:23:19]  Verifer returned sat in 4.805096 secs.
[08/09 16:23:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2258.217529    2058.192627  742.830811  2258.217529  130.160645  2058.192627        0.0  200.024902      200.024668     9.0      2058.192627            -1             -1
1    2258.217529    2128.105957  742.830811  2258.217529  130.135986  2128.105957        0.0  130.111572      100.024668     2.0      2258.217529         False           True
2    2258.241943    2258.192780  742.830811  2258.241943  130.135986  2258.192780        0.0    0.049163        0.049082     3.0      2258.217529         False          False
3    2388.328848    2258.217529  742.830811  2388.328848  130.136068  2258.217529        0.0  130.111318       30.135986     4.0      2258.217529         False           True
4    2388.328848    2363.328848  812.694824  2388.328848   66.568034  2363.328848        0.0   25.000000        0.000000     2.0      2258.217529         False           True
5    2398.112865    2388.328848  864.293457  2398.112865   34.784017  2388.328848        0.0    9.784017      -38.617350     3.0      2258.217529         False          False
6    2488.180898    2436.730225  912.842773  2488.180898   99.852051  2436.730225        0.0   51.450674        0.000000     1.0      2488.180898          True           True
7    2488.180898    2488.180898  987.842773  2488.180898   51.426025  2488.180898        0.0    0.000000      -25.000000     2.0      2488.180898         False          False
8    2515.393911    2513.180908  987.842773  2515.393911   27.213013  2513.180908        0.0    2.213003      -97.786987     1.0      2488.180898         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:19]  --------------------------------------------------------------------------------
[08/09 16:23:19]  Iteration: 14 (0 solution, 13 counterexamples)
[08/09 16:23:20]  Generator returned sat in 0.292541 secs.
[08/09 16:23:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:21]  Improved gap from 0 to 100
[08/09 16:23:21]  Improved number of small numbers from 70 to 110 out of a max of 110
[08/09 16:23:21]  Verifer returned sat in 1.104152 secs.
[08/09 16:23:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2413.613525    2213.613525  912.842773  2413.613525    0.049072  2213.613525        0.0  200.000000      100.000000     9.0      2213.613525            -1             -1
1    2413.613525    2313.613525  912.842773  2413.613525    0.049316  2313.613525        0.0  100.000000        0.000000     3.0      2213.613525         False           True
2    2914.941650    2413.613525  912.842773  2914.941650  601.328125  2413.613525        0.0  501.328125      401.328125     3.0      2213.613525          True           True
3    2914.941650    2513.613770  912.842773  2914.941650  501.279053  2513.613770        0.0  401.327881      301.328125     2.0      2914.941650          True           True
4    2914.941650    2713.367432  912.842773  2914.941650  400.639648  2713.367432        0.0  201.574219      201.328125     3.0      2914.941650         False           True
5    3113.564209    2813.613525  912.842773  3113.564209  400.196777  2813.613525        0.0  299.950684      299.950684     4.0      2914.941650         False           True
6    3213.711914    2813.662842  912.842773  3213.711914  400.098389  2813.662842        0.0  400.049072      300.098389     5.0      2914.941650         False           True
7    3213.711914    3013.613525  912.842773  3213.711914  350.073730  3013.613525        0.0  200.098389      200.098389     3.0      2914.941650         False           True
8    3338.773438    3113.613525  912.842773  3338.773438  325.159912  3113.613525        0.0  225.159912      225.159912     3.0      2914.941650         False           True
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:23:22]  --------------------------------------------------------------------------------
[08/09 16:23:22]  Iteration: 15 (0 solution, 14 counterexamples)
[08/09 16:23:22]  Generator returned sat in 0.178027 secs.
[08/09 16:23:22]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:23]  Improved gap from 1/2400 to 46.875
[08/09 16:23:24]  Improved number of small numbers from 63 to 77 out of a max of 110
[08/09 16:23:24]  Verifer returned sat in 1.294424 secs.
[08/09 16:23:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2811.709473    2711.711081   912.842773  2811.709473    0.001709  2711.711081        0.0   99.998392       99.998392     9.0      2711.711081            -1             -1
1    2911.707747    2811.710938   912.842773  2911.707747  199.996667  2811.710938        0.0   99.996810       99.996667     1.0      2711.711081         False           True
2    2911.710938    2911.709414   912.842773  2911.710938  100.000000  2911.709414        0.0    0.001523       -0.000143     1.0      2911.710938         False          False
3    3111.709414    2977.042192   912.842773  3111.709414  200.000000  2977.042192        0.0  134.667222       99.998333     1.0      2911.710938         False          False
4    3111.709414    3111.707747   912.842773  3111.709414  134.665556  3111.707747        0.0    0.001667       -0.001667     2.0      2911.710938         False          False
5    3111.717747    3111.711081   965.967773  3111.717747    0.010000  3111.711081        0.0    0.006667      -46.868333     1.0      3111.717747          True           True
6    3213.711914    3158.586081  1009.722900  3213.711914  102.000833  3158.586081        0.0   55.125833       -1.119040     1.0      3111.717747         False          False
7    3251.358025    3214.831081  1062.847656  3251.358025   92.771944  3214.831081        0.0   36.526944      -10.348173     1.0      3111.717747         False          False
8    3268.392747    3261.706299  1062.847900  3268.392747   53.561667  3261.706299        0.0    6.686449      -93.313206     1.0      3111.717747         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:24]  --------------------------------------------------------------------------------
[08/09 16:23:24]  Iteration: 16 (0 solution, 15 counterexamples)
[08/09 16:23:25]  Generator returned sat in 0.195034 secs.
[08/09 16:23:25]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:25]  Improved gap from 7/16384 to 1.5625
[08/09 16:23:26]  Improved number of small numbers from 79 to 110 out of a max of 110
[08/09 16:23:26]  Verifer returned sat in 0.626292 secs.
[08/09 16:23:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3216.073242    2716.122314   986.334473  3216.073242    0.024414  2716.122314        0.0  499.950928      499.950928     9.0      2716.122314            -1             -1
1    3216.073242    2816.097900   986.334473  3216.073242    0.024658  2816.097900        0.0  399.975342      399.950928     3.0      2716.122314         False           True
2    3216.073242    2816.122314   986.334473  3216.073242  399.950928  2816.122314        0.0  399.950928      299.950928     3.0      2716.122314         False          False
3    3218.146729    3016.122314   986.334473  3218.146729  402.024414  3016.122314        0.0  202.024414      202.024414     4.0      2716.122314         False          False
4    3218.146729    3069.734131   986.334473  3218.146729    2.000000  3069.734131        0.0  148.412598      102.024414     5.0      2716.122314         False          False
5    3218.146729    3216.097656   986.334473  3218.146729    2.000000  3216.097656        0.0    2.049072        2.024414     3.0      3218.146729          True           True
6    3218.146729    3216.122559  1084.310059  3218.146729    2.000000  3216.122559        0.0    2.024170        0.000000     4.0      3218.146729         False          False
7    3218.146729    3218.146729  1182.747559  3218.146729    2.000000  3218.146729        0.0    0.000000       -1.562500     5.0      3218.146729         False          False
8    3220.146729    3219.709473  1182.747559  3220.146729    2.000000  3219.709473        0.0    0.437256      -99.562500     1.0      3218.146729         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:26]  --------------------------------------------------------------------------------
[08/09 16:23:26]  Iteration: 17 (0 solution, 16 counterexamples)
[08/09 16:23:27]  Generator returned sat in 0.415263 secs.
[08/09 16:23:27]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:27]  Improved gap from 0 to 48.4375
[08/09 16:23:27]  Improved number of small numbers from 92 to 99 out of a max of 110
[08/09 16:23:27]  Verifer returned sat in 0.576267 secs.
[08/09 16:23:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3245.146729    2796.708984   986.334473  3245.146729    0.001221  2796.708984        0.0  448.437744      448.437500     8.0      2796.708984            -1             -1
1    3245.146729    2896.708008   986.334473  3245.146729    0.001465  2896.708008        0.0  348.438721      348.437500     5.0      2796.708984         False          False
2    3245.146729    2896.709229   986.334473  3245.146729    0.001465  2896.709229        0.0  348.437500      248.437500     5.0      2796.708984         False          False
3    3245.146729    3042.046729   986.334473  3245.146729    0.001465  3042.046729        0.0  203.100000      148.437500     6.0      2796.708984         False          False
4    3245.146729    3196.707764   986.334473  3245.146729    0.010000  3196.707764        0.0   48.438965       48.437500     7.0      2796.708984         False          False
5    3245.146729    3196.709229  1037.896973  3245.146729    0.010000  3196.709229        0.0   48.437500        0.000000     8.0      2796.708984         False          False
6    3245.146729    3245.146729  1089.459229  3245.146729    0.010000  3245.146729        0.0    0.000000      -48.437744     9.0      2796.708984         False          False
7    3346.706729    3298.269043  1136.336973  3346.706729  101.560000  3298.269043        0.0   48.437686        0.000000     1.0      3346.706729          True           True
8    3346.706729    3346.706729  1187.899414  3346.706729    0.010000  3346.706729        0.0    0.000000      -48.437559     2.0      3346.706729         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:28]  --------------------------------------------------------------------------------
[08/09 16:23:28]  Iteration: 18 (0 solution, 17 counterexamples)
[08/09 16:23:29]  Generator returned sat in 0.051768 secs.
[08/09 16:23:29]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:29]  Improved gap from 1/300 to 48.4375
[08/09 16:23:29]  Improved number of small numbers from 56 to 79 out of a max of 110
[08/09 16:23:29]  Verifer returned sat in 0.803544 secs.
[08/09 16:23:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3046.201729    2597.764160  1185.279541  3046.201729  348.434814  2597.764160        0.0  448.437568      448.437568     9.0      2597.764160            -1             -1
1    3046.201729    2597.764404  1185.279541  3046.201729  348.434814  2597.764404        0.0  448.437324      348.437568     4.0      2597.764160         False           True
2    3046.201729    2697.764404  1185.279541  3046.201729  348.434814  2697.764404        0.0  348.437324      248.437568     5.0      2597.764160         False          False
3    3046.201729    2853.471729  1185.279541  3046.201729  348.434814  2853.471729        0.0  192.730000      148.437568     6.0      2597.764160         False          False
4    3046.201729    2997.761719  1185.279541  3046.201729    0.010000  2997.761719        0.0   48.440010       48.437568     7.0      2597.764160         False          False
5    3046.201729    2997.764160  1236.841973  3046.201729    0.010000  2997.764160        0.0   48.437568        0.000000     8.0      2597.764160         False          False
6    3046.201729    3046.201729  1288.404473  3046.201729    0.010000  3046.201729        0.0    0.000000      -48.437500     9.0      2597.764160         False          False
7    3143.076729    3094.639229  1339.966973  3143.076729   96.875000  3094.639229        0.0   48.437500        0.000000     1.0      3143.076729          True           True
8    3143.076729    3143.076729  1339.967041  3143.076729    0.010000  3143.076729        0.0    0.000000      -99.999932     2.0      3143.076729         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:30]  --------------------------------------------------------------------------------
[08/09 16:23:30]  Iteration: 19 (0 solution, 18 counterexamples)
[08/09 16:23:30]  Generator returned sat in 0.052136 secs.
[08/09 16:23:30]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:31]  Improved gap from 775/16 to 48.4375
[08/09 16:23:31]  Improved number of small numbers from 64 to 79 out of a max of 110
[08/09 16:23:31]  Verifer returned sat in 1.015247 secs.
[08/09 16:23:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3244.639854    2796.202148  1185.279541  3244.639854    0.001221  2796.202148        0.0  448.437705        448.4375     4.0      2796.202148            -1             -1
1    3244.639854    2896.202148  1185.279541  3244.639854    0.001221  2896.202148        0.0  348.437705        348.4375     4.0      2796.202148         False          False
2    3244.639854    2896.203613  1185.279541  3244.639854  348.435000  2896.203613        0.0  348.436240        248.4375     5.0      2796.202148         False          False
3    3244.639854    3053.909854  1185.279541  3244.639854  348.435059  3053.909854        0.0  190.730000        148.4375     6.0      2796.202148         False          False
4    3244.639854    3196.200928  1185.279541  3244.639854    0.010000  3196.200928        0.0   48.438926         48.4375     7.0      2796.202148         False          False
5    3244.639854    3196.202354  1236.842041  3244.639854    0.010000  3196.202354        0.0   48.437500          0.0000     8.0      2796.202148         False          False
6    3244.639854    3244.639854  1288.404541  3244.639854    0.010000  3244.639854        0.0    0.000000        -48.4375     9.0      2796.202148         False          False
7    3341.514854    3293.077354  1339.967041  3341.514854   96.875000  3293.077354        0.0   48.437500          0.0000     1.0      3341.514854          True           True
8    3341.514854    3341.514854  1339.967041  3341.514854    0.010000  3341.514854        0.0    0.000000       -100.0000     2.0      3341.514854         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:32]  --------------------------------------------------------------------------------
[08/09 16:23:32]  Iteration: 20 (0 solution, 19 counterexamples)
[08/09 16:23:33]  Generator returned sat in 0.054647 secs.
[08/09 16:23:33]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:33]  Improved gap from 0 to 48.4375
[08/09 16:23:34]  Improved number of small numbers from 55 to 76 out of a max of 110
[08/09 16:23:34]  Verifer returned sat in 0.893605 secs.
[08/09 16:23:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4240.614854    3792.177246  376.319580  4240.614854  99.014893  3792.177246        0.0  448.437607      448.437539     6.0      3792.177246            -1             -1
1    4240.614854    3892.177246  376.319580  4240.614854  99.014893  3892.177246        0.0  348.437607      348.437539     4.0      3792.177246         False          False
2    4240.614854    3992.177246  376.319580  4240.614854  99.015137  3992.177246        0.0  248.437607      248.437539     5.0      3792.177246         False          False
3    4240.614854    4048.884854  376.319580  4240.614854  99.015137  4048.884854        0.0  191.730000      148.437539     6.0      3792.177246         False          False
4    4240.614854    4187.492188  376.319580  4240.614854   0.010000  4187.492188        0.0   53.122666       48.437539     7.0      3792.177246         False          False
5    4240.614854    4192.177354  427.882041  4240.614854   0.010000  4192.177354        0.0   48.437500        0.000000     8.0      3792.177246         False          False
6    4240.614854    4240.614854  479.444541  4240.614854   0.010000  4240.614854        0.0    0.000000      -48.437500     9.0      3792.177246         False          False
7    4337.489854    4289.052354  531.007041  4337.489854  96.875000  4289.052354        0.0   48.437500        0.000000     1.0      4337.489854          True           True
8    4337.489854    4337.489854  531.007080  4337.489854   0.010000  4337.489854        0.0    0.000000      -99.999961     2.0      4337.489854         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:34]  --------------------------------------------------------------------------------
[08/09 16:23:34]  Iteration: 21 (0 solution, 20 counterexamples)
[08/09 16:23:35]  Generator returned sat in 0.724507 secs.
[08/09 16:23:35]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:23:36]  Improved gap from 199/4096 to 0
[08/09 16:23:36]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:23:36]  Verifer returned sat in 0.587182 secs.
[08/09 16:23:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4903.177490    4503.177490  376.319336  4903.177490  99.014893  4503.177490        0.0  400.000000      400.000000     4.0       4503.17749            -1             -1
1    4903.177490    4603.177246  376.319336  4903.177490  99.014893  4603.177246        0.0  300.000244      300.000000     4.0       4503.17749         False          False
2    4903.177490    4703.177246  376.319336  4903.177490  99.015137  4703.177246        0.0  200.000244      200.000000     5.0       4503.17749         False          False
3    4903.177490    4803.177246  376.319336  4903.177490  99.015137  4803.177246        0.0  100.000244      100.000000     6.0       4503.17749         False          False
4    4903.177490    4903.128662  376.319336  4903.177490   1.500000  4903.128662        0.0    0.048828        0.000000     7.0       4503.17749         False          False
5    4904.628662    4903.177490  474.868164  4904.628662   1.500000  4903.177490        0.0    1.451172        0.000000     8.0       4503.17749         False          False
6    4904.677490    4904.628906  574.819336  4904.677490   1.500000  4904.628906        0.0    0.048584        0.000000     1.0       4904.67749          True           True
7    4906.128906    4904.725830  673.367920  4906.128906   1.500000  4904.725830        0.0    1.403076        0.000000     1.0       4904.67749         False          False
8    4906.225830    4906.177490  673.368164  4906.225830   1.500000  4906.177490        0.0    0.048340      -99.902832     1.0       4904.67749         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:36]  --------------------------------------------------------------------------------
[08/09 16:23:36]  Iteration: 22 (0 solution, 21 counterexamples)
[08/09 16:23:37]  Generator returned sat in 0.153467 secs.
[08/09 16:23:37]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:23:38]  Improved gap from 397/8192 to 0
[08/09 16:23:38]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:23:38]  Verifer returned sat in 0.798185 secs.
[08/09 16:23:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    5120.903076    4719.378906  160.117676  5120.903076  99.014893  4719.378906        0.0  401.524170       401.52417     3.0      4719.378906            -1             -1
1    5120.903076    4719.378906  160.117676  5120.903076  99.014893  4719.378906        0.0  401.524170       301.52417     3.0      4719.378906         False          False
2    5120.903076    4819.378906  160.117676  5120.903076  99.014893  4819.378906        0.0  301.524170       201.52417     4.0      4719.378906         False          False
3    5120.903076    4919.378906  160.117676  5120.903076  99.014893  4919.378906        0.0  201.524170       101.52417     5.0      4719.378906         False          False
4    5120.903076    5119.354736  160.117676  5120.903076   1.500000  5119.354736        0.0    1.548340         1.52417     6.0      4719.378906         False          False
5    5120.903076    5119.379150  258.593506  5120.903076   1.500000  5119.379150        0.0    1.523926         0.00000     7.0      4719.378906         False          False
6    5120.903076    5120.903076  358.593506  5120.903076   1.500000  5120.903076        0.0    0.000000         0.00000     8.0      4719.378906         False          False
7    5123.153076    5120.927246  456.343506  5123.153076   2.250000  5120.927246        0.0    2.225830         0.00000     1.0      5123.153076          True           True
8    5123.153076    5123.153076  556.343506  5123.153076   1.500000  5123.153076        0.0    0.000000         0.00000     2.0      5123.153076         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:38]  --------------------------------------------------------------------------------
[08/09 16:23:38]  Iteration: 23 (0 solution, 22 counterexamples)
[08/09 16:23:39]  Generator returned sat in 0.131328 secs.
[08/09 16:23:39]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:23:40]  Improved gap from 0 to 0
[08/09 16:23:40]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:23:40]  Verifer returned sat in 0.502535 secs.
[08/09 16:23:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    5214.985352    4816.437012  160.117676  5214.985352    1.596436  4816.437012        0.0  398.548340      398.548340     9.0      4816.437012            -1             -1
1    5214.985352    4916.437012  160.117676  5214.985352    1.596436  4916.437012        0.0  298.548340      298.548340     6.0      4816.437012         False           True
2    5214.985352    4916.437012  160.117676  5214.985352    1.596680  4916.437012        0.0  298.548340      198.548340     6.0      4816.437012         False          False
3    5216.437012    5116.437012  160.117676  5216.437012  300.000000  5116.437012        0.0  100.000000      100.000000     7.0      4816.437012         False          False
4    5216.437012    5214.985352  160.117676  5216.437012    1.500000  5214.985352        0.0    1.451660        0.000000     8.0      4816.437012         False          False
5    5217.985352    5216.437012  258.569336  5217.985352    3.000000  5216.437012        0.0    1.548340        0.000000     3.0      5217.985352          True           True
6    5217.985352    5217.985352  358.569092  5217.985352    1.500000  5217.985352        0.0    0.000000       -0.000244     2.0      5217.985352         False          False
7    5219.485352    5219.437256  455.617432  5219.485352    1.500000  5219.437256        0.0    0.048096       -1.451904     1.0      5217.985352         False          False
8    5220.937256    5220.937256  455.617432  5220.937256    1.500000  5220.937256        0.0    0.000000     -100.000000     1.0      5217.985352         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:40]  --------------------------------------------------------------------------------
[08/09 16:23:40]  Iteration: 24 (0 solution, 23 counterexamples)
[08/09 16:23:41]  Generator returned sat in 0.210549 secs.
[08/09 16:23:41]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:42]  Improved gap from 0 to 46.875
[08/09 16:23:42]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:23:42]  Verifer returned sat in 0.733083 secs.
[08/09 16:23:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4998.139404    4598.141846  160.117676  4998.139404    0.002500  4598.141846        0.0  399.997559      399.997559     9.0      4598.141846            -1             -1
1    4998.139404    4698.141846  160.117676  4998.139404    0.002500  4698.141846        0.0  299.997559      299.997559     5.0      4598.141846         False           True
2    4998.139404    4795.907227  160.117676  4998.139404    0.002500  4795.907227        0.0  202.232178      199.997559     6.0      4598.141846         False          False
3    4998.139648    4870.891846  160.117676  4998.139648  202.232422  4870.891846        0.0  127.247803       99.997803     7.0      4598.141846         False          False
4    5009.266846    4998.139404  160.117676  5009.266846  138.375000  4998.139404        0.0   11.127441       11.125000     8.0      4598.141846         False          False
5    5009.266846    4998.142090  213.242432  5009.266846    0.010000  4998.142090        0.0   11.124756      -35.750244     2.0      5009.266846          True           True
6    5101.259521    5054.386963  256.997559  5101.259521  103.117432  5054.386963        0.0   46.872559       -0.002441     1.0      5009.266846         False          False
7    5148.134521    5101.261963  310.122559  5148.134521   93.747559  5101.261963        0.0   46.872559       -0.002441     1.0      5009.266846         False          False
8    5154.823242    5148.136963  310.122559  5154.823242   53.561279  5148.136963        0.0    6.686279      -93.313721     1.0      5009.266846         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:42]  --------------------------------------------------------------------------------
[08/09 16:23:42]  Iteration: 25 (0 solution, 24 counterexamples)
[08/09 16:23:43]  Generator returned sat in 0.366563 secs.
[08/09 16:23:43]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:44]  Improved gap from 395/16384 to 48.4375
[08/09 16:23:44]  Improved number of small numbers from 82 to 110 out of a max of 110
[08/09 16:23:44]  Verifer returned sat in 0.510648 secs.
[08/09 16:23:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3569.131104    3209.948975  160.117676  3569.131104  359.181885  3209.948975        0.0  359.182129      259.182129     9.0      3209.948975            -1             -1
1    3569.131104    3409.948975  160.117676  3569.131104  359.181885  3409.948975        0.0  159.182129      159.182129     2.0      3209.948975         False           True
2    3569.227295    3409.948975  160.117676  3569.227295  159.278320  3409.948975        0.0  159.278320       59.278320     2.0      3569.227295         False          False
3    3760.929443    3569.179443  160.117676  3760.929443  350.980469  3569.179443        0.0  191.750000      150.980469     2.0      3569.227295         False          False
4    3760.929443    3707.852539  160.117676  3760.929443    2.000000  3707.852539        0.0   53.076904       50.980469     2.0      3569.227295         False          False
5    3760.929443    3709.948975  209.137207  3760.929443    2.000000  3709.948975        0.0   50.980469        0.000000     3.0      3569.227295         False          False
6    3760.929443    3760.929443  260.699707  3760.929443    2.000000  3760.929443        0.0    0.000000      -48.437500     4.0      3569.227295         False          False
7    3857.804443    3809.366943  312.262207  3857.804443   96.875000  3809.366943        0.0   48.437500        0.000000     1.0      3857.804443          True           True
8    3857.804443    3857.804443  312.262451  3857.804443    2.000000  3857.804443        0.0    0.000000      -99.999756     2.0      3857.804443         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:44]  --------------------------------------------------------------------------------
[08/09 16:23:44]  Iteration: 26 (0 solution, 25 counterexamples)
[08/09 16:23:45]  Generator returned sat in 0.287919 secs.
[08/09 16:23:45]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:46]  Improved gap from 1/600 to 1.5625
[08/09 16:23:46]  Improved number of small numbers from 80 to 110 out of a max of 110
[08/09 16:23:46]  Verifer returned sat in 0.448215 secs.
[08/09 16:23:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3609.948730    3209.951416  209.136963  3609.948730  300.007568  3209.951416        0.0  399.997314      399.997070     2.0      3209.951416            -1             -1
1    3609.948730    3309.951416  209.136963  3609.948730  300.004883  3309.951416        0.0  299.997314      299.997070     2.0      3609.948730         False          False
2    3609.953857    3309.951660  209.136963  3609.953857  300.002441  3309.951660        0.0  300.002197      200.002197     3.0      3609.953857         False          False
3    3709.951660    3509.951416  209.136963  3709.951660  400.000000  3509.951416        0.0  200.000244      200.000000     4.0      3609.953857         False           True
4    3709.951660    3609.951416  209.136963  3709.951660    2.000000  3609.951416        0.0  100.000244      100.000000     3.0      3609.953857         False           True
5    3709.951660    3709.948975  209.136963  3709.951660    2.000000  3709.948975        0.0    0.002686        0.000000     3.0      3609.953857         False           True
6    3711.948975    3709.951660  307.139648  3711.948975    2.000000  3709.951660        0.0    1.997314        0.000000     4.0      3609.953857         False           True
7    3711.948975    3711.948975  405.577148  3711.948975    0.010000  3711.948975        0.0    0.000000       -1.562500     2.0      3711.948975          True           True
8    3713.948975    3713.511475  405.577393  3713.948975    2.000000  3713.511475        0.0    0.437500      -99.562256     1.0      3711.948975         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:46]  --------------------------------------------------------------------------------
[08/09 16:23:46]  Iteration: 27 (0 solution, 26 counterexamples)
[08/09 16:23:47]  Generator returned sat in 0.374550 secs.
[08/09 16:23:48]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:49]  Improved gap from 0 to 48.4375
[08/09 16:23:49]  Improved number of small numbers from 60 to 106 out of a max of 110
[08/09 16:23:49]  Verifer returned sat in 1.612226 secs.
[08/09 16:23:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4976.235596    4527.797852  254.985840  4976.235596    0.048096  4527.797852        0.0  448.437744      448.437744     2.0      4527.797852            -1             -1
1    4976.235596    4627.797852  254.985840  4976.235596    0.048096  4627.797852        0.0  348.437744      348.437744     2.0      4527.797852         False          False
2    4976.235596    4727.797852  254.985840  4976.235596    0.048096  4727.797852        0.0  248.437744      248.437744     3.0      4527.797852         False          False
3    4976.235596    4774.293213  254.985840  4976.235596  100.971191  4774.293213        0.0  201.942383      148.437744     4.0      4527.797852         False          False
4    4976.235596    4927.749756  254.985840  4976.235596   52.485596  4927.749756        0.0   48.485840       48.437744     5.0      4527.797852         False          False
5    4976.235596    4927.798096  306.548096  4976.235596   28.242798  4927.798096        0.0   48.437500        0.000000     6.0      4527.797852         False          False
6    4976.235596    4976.235596  358.110596  4976.235596   16.121399  4976.235596        0.0    0.000000      -48.437500     7.0      4527.797852         False          False
7    5077.206787    5024.673096  405.576904  5077.206787  100.971191  5024.673096        0.0   52.533691        0.000000     1.0      5077.206787          True           True
8    5077.206787    5077.206787  457.139404  5077.206787   52.485596  5077.206787        0.0    0.000000      -48.437500     2.0      5077.206787         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:50]  --------------------------------------------------------------------------------
[08/09 16:23:50]  Iteration: 28 (0 solution, 27 counterexamples)
[08/09 16:23:51]  Generator returned sat in 0.127236 secs.
[08/09 16:23:51]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:53]  Improved gap from 197/4096 to 48.4375
[08/09 16:23:53]  Improved number of small numbers from 53 to 72 out of a max of 110
[08/09 16:23:53]  Verifer returned sat in 2.890024 secs.
[08/09 16:23:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4319.855807    3871.418213  564.255501  4319.855807    0.047852  3871.418213        0.0  448.437594      448.437500     2.0      3871.418213            -1             -1
1    4319.855807    3971.418213  564.255501  4319.855807    0.048096  3971.418213        0.0  348.437594      348.437500     2.0      3871.418213         False          False
2    4319.855807    4071.418213  564.255501  4319.855807  119.923096  4071.418213        0.0  248.437594      248.437500     3.0      3871.418213         False          False
3    4319.855807    4163.086602  564.255501  4319.855807  119.923177  4163.086602        0.0  156.769206      148.437500     4.0      3871.418213         False          False
4    4319.855807    4266.778809  564.255501  4319.855807   61.961589  4266.778809        0.0   53.076999       48.437500     5.0      3871.418213         False          False
5    4319.855807    4271.418307  615.818001  4319.855807   32.980794  4271.418307        0.0   48.437500        0.000000     6.0      3871.418213         False          False
6    4319.855807    4319.855807  667.380501  4319.855807   18.490397  4319.855807        0.0    0.000000      -48.437500     7.0      3871.418213         False          False
7    4416.730807    4368.293307  718.942871  4416.730807   96.875000  4368.293307        0.0   48.437500       -0.000130     1.0      4416.730807          True           True
8    4418.730807    4416.730957  718.943115  4418.730807   50.437500  4416.730957        0.0    1.999850      -97.999886     1.0      4416.730807         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:54]  --------------------------------------------------------------------------------
[08/09 16:23:54]  Iteration: 29 (0 solution, 28 counterexamples)
[08/09 16:23:56]  Generator returned sat in 1.464484 secs.
[08/09 16:23:56]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:57]  Improved number of small numbers from 74 to 93 out of a max of 109
[08/09 16:23:57]  Verifer returned sat in 0.520421 secs.
[08/09 16:23:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3916.740723    3616.730713  615.817871  3916.740723  200.009521  3616.730713        0.0  300.010010      300.009766     8.0      3616.730713            -1             -1
1    3916.740723    3616.752207  615.817871  3916.740723  200.009521  3616.752207        0.0  299.988516      200.009766     6.0      3616.730713         False          False
2    3916.740723    3716.730957  615.817871  3916.740723  200.009521  3716.730957        0.0  200.009766      100.009766     7.0      3616.730713         False          False
3    3916.740723    3916.730713  615.817871  3916.740723  200.009521  3916.730713        0.0    0.010010        0.009766     8.0      3616.730713         False          False
4    3916.740723    3916.740332  615.818115  3916.740723    0.010000  3916.740332        0.0    0.000391      -99.989990     9.0      3616.730713         False          False
5    4516.731582    4016.730713  615.818115  4516.731582  599.991250  4016.730713        0.0  500.000869      400.000869     1.0      4516.731582          True           True
6    4516.731582    4116.730957  615.818115  4516.731582    0.010000  4116.730957        0.0  400.000625      300.000869     2.0      4516.731582         False          False
7    4516.731582    4216.730957  615.818115  4516.731582    0.010000  4216.730957        0.0  300.000625      200.000869     3.0      4516.731582         False          False
8    4516.731582    4416.730713  615.818115  4516.731582    0.010000  4416.730713        0.0  100.000869      100.000869     4.0      4516.731582         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:23:57]  --------------------------------------------------------------------------------
[08/09 16:23:57]  Iteration: 30 (0 solution, 29 counterexamples)
[08/09 16:23:59]  Generator returned sat in 0.581146 secs.
[08/09 16:23:59]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:23:59]  Improved gap from 393/16384 to 100
[08/09 16:23:59]  Improved number of small numbers from 52 to 110 out of a max of 110
[08/09 16:23:59]  Verifer returned sat in 0.281182 secs.
[08/09 16:23:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4191.659668    3730.683594  615.818115  4191.659668    0.023926  3730.683594        0.0  460.976074      399.976074     8.0      3730.683594            -1             -1
1    4191.659668    3808.573486  615.818115  4191.659668    0.023926  3808.573486        0.0  383.086182      299.976074     6.0      3730.683594         False          False
2    4191.659668    3891.683838  615.818115  4191.659668    0.024170  3891.683838        0.0  299.975830      199.976074     7.0      3730.683594         False          False
3    4191.659668    4036.683594  615.818115  4191.659668    0.024170  4036.683594        0.0  154.976074       99.976074     8.0      3730.683594         False          False
4    4191.683594    4091.683594  615.818115  4191.683594  155.000000  4091.683594        0.0  100.000000        0.000000     9.0      3730.683594         False          False
5    4890.403809    4291.659424  615.818115  4890.403809  798.720215  4291.659424        0.0  598.744385      598.720215     1.0      4890.403809          True           True
6    4890.403809    4291.683594  615.818115  4890.403809  201.987793  4291.683594        0.0  598.720215      498.720215     2.0      4890.403809         False          False
7    4890.403809    4393.683594  615.818115  4890.403809  129.500000  4393.683594        0.0  496.720215      398.720215     3.0      4890.403809         False          False
8    4890.403809    4591.683594  615.818115  4890.403809  153.000000  4591.683594        0.0  298.720215      298.720215     4.0      4890.403809         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:24:00]  --------------------------------------------------------------------------------
[08/09 16:24:00]  Iteration: 31 (0 solution, 30 counterexamples)
[08/09 16:24:01]  Generator returned sat in 0.509596 secs.
[08/09 16:24:01]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:01]  Improved gap from 1/600 to 48.4375
[08/09 16:24:01]  Improved number of small numbers from 91 to 99 out of a max of 110
[08/09 16:24:01]  Verifer returned sat in 0.561114 secs.
[08/09 16:24:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4362.964844    3962.963623  615.818115  4362.964844    0.002500  3962.963623        0.0  400.001221      400.000000     8.0      3962.963623            -1             -1
1    4362.964844    3962.964844  615.818115  4362.964844    0.002500  3962.964844        0.0  400.000000      300.000000     8.0      3962.963623         False           True
2    4362.964844    4162.964844  615.818115  4362.964844    0.001221  4162.964844        0.0  200.000000      200.000000     8.0      4362.964844          True           True
3    4411.402344    4208.309844  615.818115  4411.402344  248.437500  4208.309844        0.0  203.092500      148.437500     9.0      4362.964844         False           True
4    4411.402344    4362.964844  615.818115  4411.402344    0.010000  4362.964844        0.0   48.437500       48.437500     5.0      4362.964844         False           True
5    4411.402344    4362.964844  667.380615  4411.402344    0.010000  4362.964844        0.0   48.437500        0.000000     5.0      4362.964844         False           True
6    4411.402344    4411.402344  714.257080  4411.402344    0.010000  4411.402344        0.0    0.000000      -53.123535     4.0      4362.964844         False           True
7    4512.963594    4464.525879  765.819365  4512.963594  101.561250  4464.525879        0.0   48.437715        0.000000     1.0      4512.963594          True           True
8    4512.963594    4512.963594  765.819580  4512.963594    0.010000  4512.963594        0.0    0.000000      -99.999785     2.0      4512.963594         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:02]  --------------------------------------------------------------------------------
[08/09 16:24:02]  Iteration: 32 (0 solution, 31 counterexamples)
[08/09 16:24:03]  Generator returned sat in 0.475395 secs.
[08/09 16:24:03]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:04]  Improved gap from 1/800 to 48.4375
[08/09 16:24:04]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:24:04]  Verifer returned sat in 0.429052 secs.
[08/09 16:24:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4122.337158    3673.899414  667.383057  4122.337158  348.434814  3673.899414        0.0  448.437744        448.4375     4.0      3673.899414            -1             -1
1    4122.337158    3773.899658  667.383057  4122.337158  348.434814  3773.899658        0.0  348.437500        348.4375     4.0      3673.899414         False          False
2    4122.337158    3773.899658  667.383057  4122.337158  348.434814  3773.899658        0.0  348.437500        248.4375     4.0      3673.899414         False          False
3    4122.337158    3930.587158  667.383057  4122.337158  348.435000  3930.587158        0.0  191.750000        148.4375     5.0      3673.899414         False          False
4    4122.337158    4073.896973  667.383057  4122.337158    0.010000  4073.896973        0.0   48.440186         48.4375     6.0      3673.899414         False          False
5    4122.337158    4073.899658  718.945557  4122.337158    0.010000  4073.899658        0.0   48.437500          0.0000     7.0      3673.899414         False          False
6    4122.337158    4122.337158  770.508057  4122.337158    0.010000  4122.337158        0.0    0.000000        -48.4375     8.0      3673.899414         False          False
7    4219.212158    4170.774658  822.070557  4219.212158   96.875000  4170.774658        0.0   48.437500          0.0000     1.0      4219.212158          True           True
8    4219.212158    4219.212158  822.070557  4219.212158    0.010000  4219.212158        0.0    0.000000       -100.0000     2.0      4219.212158         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:04]  --------------------------------------------------------------------------------
[08/09 16:24:04]  Iteration: 33 (0 solution, 32 counterexamples)
[08/09 16:24:05]  Generator returned sat in 0.151711 secs.
[08/09 16:24:05]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:06]  Improved gap from 775/16 to 48.4375
[08/09 16:24:06]  Improved number of small numbers from 108 to 110 out of a max of 110
[08/09 16:24:06]  Verifer returned sat in 0.308173 secs.
[08/09 16:24:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4122.337158    3673.899414  667.383057  4122.337158    0.002441  3673.899414        0.0  448.437744      448.437744     4.0      3673.899414            -1             -1
1    4122.337158    3773.899414  667.383057  4122.337158  348.434814  3773.899414        0.0  348.437744      348.437744     4.0      3673.899414         False          False
2    4122.337158    3773.899414  667.383057  4122.337158  348.434814  3773.899414        0.0  348.437744      248.437744     4.0      3673.899414         False          False
3    4122.337158    3931.587158  667.383057  4122.337158  348.435000  3931.587158        0.0  190.750000      148.437744     5.0      3673.899414         False          False
4    4122.337158    4069.214600  667.383057  4122.337158    0.010000  4069.214600        0.0   53.122559       48.437744     6.0      3673.899414         False          False
5    4122.337158    4073.899658  718.945312  4122.337158    0.010000  4073.899658        0.0   48.437500        0.000000     7.0      3673.899414         False          False
6    4122.337158    4122.337158  770.507812  4122.337158    0.010000  4122.337158        0.0    0.000000      -48.437500     8.0      3673.899414         False          False
7    4219.212158    4170.774658  822.070312  4219.212158   96.875000  4170.774658        0.0   48.437500        0.000000     1.0      4219.212158          True           True
8    4219.212158    4219.212158  822.070557  4219.212158    0.010000  4219.212158        0.0    0.000000      -99.999756     2.0      4219.212158         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:06]  --------------------------------------------------------------------------------
[08/09 16:24:06]  Iteration: 34 (0 solution, 33 counterexamples)
[08/09 16:24:07]  Generator returned sat in 0.179623 secs.
[08/09 16:24:07]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:08]  Improved gap from 775/16 to 48.4375
[08/09 16:24:08]  Improved number of small numbers from 84 to 99 out of a max of 110
[08/09 16:24:08]  Verifer returned sat in 0.751608 secs.
[08/09 16:24:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4653.383594    4204.943359  672.067812  4653.383594    0.002441  4204.943359        0.0  448.440234      448.440000     3.0      4204.943359            -1             -1
1    4653.383594    4304.943359  672.067812  4653.383594    0.002686  4304.943359        0.0  348.440234      348.440000     3.0      4204.943359         False          False
2    4653.383594    4304.943604  672.067812  4653.383594    0.002686  4304.943604        0.0  348.439990      248.440000     4.0      4204.943359         False          False
3    4653.383594    4453.278594  672.067812  4653.383594  348.437256  4453.278594        0.0  200.105000      148.440000     5.0      4204.943359         False          False
4    4653.383594    4604.943359  672.067812  4653.383594    0.010000  4604.943359        0.0   48.440234       48.440000     6.0      4204.943359         False          False
5    4653.383594    4604.946045  723.627813  4653.383594    0.010000  4604.946045        0.0   48.437549        0.000000     7.0      4204.943359         False          False
6    4653.383594    4653.383594  775.190186  4653.383594    0.010000  4653.383594        0.0    0.000000      -48.437627     8.0      4204.943359         False          False
7    4754.941094    4701.821289  822.070312  4754.941094  101.557500  4701.821289        0.0   53.119805        0.000000     1.0      4754.941094          True           True
8    4754.941094    4754.941094  822.070312  4754.941094    0.010000  4754.941094        0.0    0.000000     -100.000000     2.0      4754.941094         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:09]  --------------------------------------------------------------------------------
[08/09 16:24:09]  Iteration: 35 (0 solution, 34 counterexamples)
[08/09 16:24:10]  Generator returned sat in 0.254262 secs.
[08/09 16:24:10]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:10]  Improved gap from 2454531/51200 to 48.4375
[08/09 16:24:11]  Improved number of small numbers from 55 to 80 out of a max of 110
[08/09 16:24:11]  Verifer returned sat in 0.955196 secs.
[08/09 16:24:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    4595.363594    4146.925537  730.085449  4595.363594    0.002441  4146.925537        0.0  448.438057      448.437637     3.0      4146.925537            -1             -1
1    4595.363594    4146.926025  730.085449  4595.363594    0.002441  4146.926025        0.0  448.437568      348.437637     3.0      4146.925537         False          False
2    4595.363594    4300.937256  730.085449  4595.363594    0.002686  4300.937256        0.0  294.426338      248.437637     4.0      4146.925537         False          False
3    4595.363594    4396.249937  730.085449  4595.363594    0.002686  4396.249937        0.0  199.113657      148.437637     5.0      4146.925537         False          False
4    4595.363594    4546.925781  730.085449  4595.363594    0.010000  4546.925781        0.0   48.437812       48.437637     6.0      4146.925537         False          False
5    4595.363594    4546.926025  781.647812  4595.363594    0.010000  4546.926025        0.0   48.437568        0.000000     7.0      4146.925537         False          False
6    4595.363594    4595.363594  833.210312  4595.363594    0.010000  4595.363594        0.0    0.000000      -48.437500     8.0      4146.925537         False          False
7    4696.925422    4643.801270  880.085984  4696.925422  101.561829  4643.801270        0.0   53.124153        0.000000     1.0      4696.925422          True           True
8    4696.925422    4696.925422  880.086182  4696.925422    0.010000  4696.925422        0.0    0.000000      -99.999802     2.0      4696.925422         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:11]  --------------------------------------------------------------------------------
[08/09 16:24:11]  Iteration: 36 (0 solution, 35 counterexamples)
[08/09 16:24:13]  Generator returned sat in 0.465713 secs.
[08/09 16:24:13]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:14]  Improved gap from 1/2400 to 35.9375
[08/09 16:24:14]  Improved number of small numbers from 51 to 110 out of a max of 110
[08/09 16:24:14]  Verifer returned sat in 1.488090 secs.
[08/09 16:24:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3343.198242    3229.893555   730.085205  3343.198242   0.023926  3229.893555        0.0  113.304688      101.962402     5.0      3229.893555            -1             -1
1    3343.198242    3272.081055   730.085205  3343.198242   0.047607  3272.081055        0.0   71.117188        1.962402     2.0      3229.893555         False          False
2    3343.198242    3341.235840   794.147705  3343.198242   0.023926  3341.235840        0.0    1.962402      -33.975098     3.0      3343.198242         False          False
3    3416.211914    3377.173340   855.085449  3416.211914  74.976074  3377.173340        0.0   39.038574       -0.023682     1.0      3343.198242         False          False
4    3450.813232    3416.235840   919.147705  3450.813232  73.639893  3416.235840        0.0   34.577393       -1.360107     1.0      3343.198242         False          False
5    3488.313232    3452.173340   983.007812  3488.313232  72.077393  3452.173340        0.0   36.139893        0.000000     1.0      3343.198242         False          False
6    3507.642090    3488.336914  1047.046631  3507.642090  55.468750  3488.336914        0.0   19.305176      -16.632324     1.0      3343.198242         False          False
7    3543.918701    3524.274414  1111.109131  3543.918701  55.581787  3524.274414        0.0   19.644287      -16.293213     1.0      3343.198242         False          False
8    3578.293701    3560.211914  1111.109131  3578.293701  54.019287  3560.211914        0.0   18.081787      -81.918213     1.0      3343.198242         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:15]  --------------------------------------------------------------------------------
[08/09 16:24:15]  Iteration: 37 (0 solution, 36 counterexamples)
[08/09 16:24:17]  Generator returned sat in 1.389179 secs.
[08/09 16:24:17]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:17]  Improved gap from 0 to 100
[08/09 16:24:17]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:24:17]  Verifer returned sat in 0.300230 secs.
[08/09 16:24:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2843.203369    2243.203125  919.147705  2843.203369  499.998750  2243.203125        0.0  600.000244      600.000244     5.0      2243.203125            -1             -1
1    2843.203369    2343.202148  919.147705  2843.203369  499.998779  2343.202148        0.0  500.001221      500.000244     3.0      2243.203125         False          False
2    2843.203369    2343.203369  919.147705  2843.203369  499.998779  2343.203369        0.0  500.000000      400.000244     4.0      2243.203125         False          False
3    2843.203369    2443.203125  919.147705  2843.203369  499.998779  2443.203125        0.0  400.000244      300.000244     5.0      2243.203125         False          False
4    2843.203369    2543.203369  919.147705  2843.203369    0.010000  2543.203369        0.0  300.000000      200.000244     6.0      2243.203125         False          False
5    2843.203369    2743.201904  919.147705  2843.203369    0.010000  2743.201904        0.0  100.001465      100.000244     7.0      2243.203125         False          False
6    2843.203369    2743.203125  919.147705  2843.203369    0.010000  2743.203125        0.0  100.000244        0.000244     8.0      2243.203125         False          False
7    3343.203125    2943.201904  919.147705  3343.203125  600.000000  2943.201904        0.0  400.001221      400.000000     1.0      3343.203125          True           True
8    3343.203125    2943.203125  919.147705  3343.203125    0.010000  2943.203125        0.0  400.000000      300.000000     2.0      3343.203125         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:24:18]  --------------------------------------------------------------------------------
[08/09 16:24:18]  Iteration: 38 (0 solution, 37 counterexamples)
[08/09 16:24:19]  Generator returned sat in 0.632063 secs.
[08/09 16:24:20]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:24:21]  Improved gap from 1/44 to 35.9375
[08/09 16:24:21]  Improved number of small numbers from 108 to 110 out of a max of 110
[08/09 16:24:21]  Verifer returned sat in 1.326895 secs.
[08/09 16:24:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2735.390381    2470.827881  691.522705  2735.390381    0.001221  2470.827881        0.0  264.562500      264.562500     3.0      2470.827881            -1             -1
1    2735.390381    2470.827881  691.522705  2735.390381    0.001221  2470.827881        0.0  264.562500      164.562500     3.0      2470.827881         False          False
2    2735.390381    2670.827881  691.522705  2735.390381    0.001221  2670.827881        0.0   64.562500       64.562500     4.0      2470.827881         False          False
3    2735.390381    2670.827881  726.960205  2735.390381    0.001465  2670.827881        0.0   64.562500        0.000000     4.0      2470.827881          True           True
4    2771.327881    2735.390381  791.022705  2771.327881  100.500000  2735.390381        0.0   35.937500        0.000000     5.0      2470.827881         False           True
5    2771.327881    2771.327881  855.085205  2771.327881    0.010000  2771.327881        0.0    0.000000      -35.937500     2.0      2771.327881          True           True
6    2822.077881    2807.265381  919.147705  2822.077881   50.750000  2807.265381        0.0   14.812500      -21.125000     1.0      2771.327881         False          False
7    2875.984131    2843.202881  976.961670  2875.984131   68.718750  2843.202881        0.0   32.781250       -9.404785     1.0      2771.327881         False          False
8    2897.609131    2885.389160  976.961670  2897.609131   54.406250  2885.389160        0.0   12.219971      -87.779785     1.0      2771.327881         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:21]  --------------------------------------------------------------------------------
[08/09 16:24:21]  Iteration: 39 (0 solution, 38 counterexamples)
[08/09 16:24:24]  Generator returned sat in 1.289836 secs.
[08/09 16:24:24]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:24:24]  Improved gap from 1/800 to 0
[08/09 16:24:24]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:24:24]  Verifer returned sat in 0.551304 secs.
[08/09 16:24:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3164.635498    3064.633057   97.712646  3164.635498  100.007324  3064.633057        0.0  100.002441       99.997559     4.0      3064.633057            -1             -1
1    3164.637939    3164.637695   97.712646  3164.637939  100.004883  3164.637695        0.0    0.000244        0.000000     1.0      3164.637939         False           True
2    3264.640137    3164.637939   97.712646  3264.640137  100.002441  3164.637939        0.0  100.002197        0.002197     2.0      3264.640137         False          False
3    3464.637939    3264.637939   97.712646  3464.637939  300.000000  3264.637939        0.0  200.000000      100.000000     2.0      3264.640137         False           True
4    3464.637939    3463.150391   97.712646  3464.637939    1.500000  3463.150391        0.0    1.487549        0.000000     2.0      3264.640137         False           True
5    3464.650391    3464.637939  197.700195  3464.650391    1.500000  3464.637939        0.0    0.012451        0.000000     3.0      3264.640137         False           True
6    3464.650391    3464.650391  296.202637  3464.650391    0.010000  3464.650391        0.0    0.000000       -1.497559     2.0      3464.650391          True           True
7    3466.150391    3466.147949  396.200195  3466.150391    1.500000  3466.147949        0.0    0.002441        0.000000     1.0      3464.650391         False           True
8    3467.647949    3466.152832  396.200195  3467.647949    1.500000  3466.152832        0.0    1.495117      -98.502441     1.0      3464.650391         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:25]  --------------------------------------------------------------------------------
[08/09 16:24:25]  Iteration: 40 (0 solution, 39 counterexamples)
[08/09 16:24:26]  Generator returned sat in 0.394748 secs.
[08/09 16:24:26]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:24:27]  Improved gap from 1/8192 to 0
[08/09 16:24:27]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:24:27]  Verifer returned sat in 0.621974 secs.
[08/09 16:24:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2873.360596    2873.359375  196.223877  2873.360596  400.002441  2873.359375        0.0    0.001221        0.001221     1.0      2873.359375            -1             -1
1    3273.360596    2873.361572  196.223877  3273.360596  400.001221  2873.361572        0.0  399.999023      300.001221     1.0      3273.360596         False          False
2    3273.362793    2973.359375  196.223877  3273.362793  400.001221  2973.359375        0.0  300.003418      200.003418     2.0      3273.360596         False          False
3    3373.360596    3173.359131  196.223877  3373.360596  400.001221  3173.359131        0.0  200.001465      200.001221     3.0      3273.360596         False           True
4    3373.360596    3273.357910  196.223877  3373.360596    1.000000  3273.357910        0.0  100.002686      100.001221     4.0      3273.360596         False           True
5    3373.360596    3273.359375  196.223877  3373.360596    1.000000  3273.359375        0.0  100.001221        0.001221     5.0      3273.360596         False           True
6    3373.360596    3373.359375  296.222656  3373.360596    1.000000  3373.359375        0.0    0.001221        0.000000     4.0      3273.360596         False           True
7    3374.359375    3373.360596  395.223877  3374.359375    1.000000  3373.360596        0.0    0.998779        0.000000     5.0      3273.360596         False           True
8    3374.359375    3374.359375  395.223877  3374.359375    0.010000  3374.359375        0.0    0.000000     -100.000000     2.0      3374.359375          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:27]  --------------------------------------------------------------------------------
[08/09 16:24:27]  Iteration: 41 (0 solution, 40 counterexamples)
[08/09 16:24:29]  Generator returned sat in 0.279587 secs.
[08/09 16:24:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:24:29]  Improved gap from 0 to 0
[08/09 16:24:29]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:24:29]  Verifer returned sat in 0.390555 secs.
[08/09 16:24:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3273.343262    3172.845459  196.225098  3273.343262  100.007500  3172.845459        0.0  100.497803      100.497803     9.0      3172.845459            -1             -1
1    3273.343262    3272.845459  196.225098  3273.343262  100.005000  3272.845459        0.0    0.497803        0.497803     4.0      3273.343262         False           True
2    3372.847900    3372.845459  196.225098  3372.847900  100.002441  3372.845459        0.0    0.002441        0.002441     1.0      3372.847900         False           True
3    3672.848145    3372.845459  196.225098  3672.848145  300.002686  3372.845459        0.0  300.002686      200.002686     1.0      3372.847900         False          False
4    3672.848145    3572.845459  196.225098  3672.848145    0.500000  3572.845459        0.0  100.002686      100.002686     2.0      3372.847900         False          False
5    3672.848145    3572.848145  196.225098  3672.848145    0.500000  3572.848145        0.0  100.000000        0.002686     3.0      3372.847900         False           True
6    3672.848145    3672.845459  296.222412  3672.848145    0.010000  3672.845459        0.0    0.002686        0.000000     4.0      3672.848145          True           True
7    3673.345459    3673.343018  395.725098  3673.345459    0.500000  3673.343018        0.0    0.002441        0.000000     1.0      3672.848145         False           True
8    3673.843018    3673.348145  495.227539  3673.843018    0.500000  3673.348145        0.0    0.494873        0.000000     1.0      3672.848145         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:30]  --------------------------------------------------------------------------------
[08/09 16:24:30]  Iteration: 42 (0 solution, 41 counterexamples)
[08/09 16:24:32]  Generator returned sat in 0.706787 secs.
[08/09 16:24:32]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:24:32]  Improved gap from 0 to 35.9375
[08/09 16:24:33]  Improved number of small numbers from 98 to 110 out of a max of 110
[08/09 16:24:33]  Verifer returned sat in 0.939875 secs.
[08/09 16:24:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3461.217773    3365.032959    4.037598  3461.217773    0.002441  3365.032959        0.0  96.184814       96.184814     2.0      3365.032959            -1             -1
1    3461.223145    3461.220459    4.037598  3461.223145   96.190186  3461.220459        0.0   0.002686       -3.809814     1.0      3365.032959         False          False
2    3500.970459    3465.032959   68.100098  3500.970459   39.750000  3465.032959        0.0  35.937500        0.000000     1.0      3500.970459         False          False
3    3636.907959    3544.947998   68.100098  3636.907959  171.875000  3544.947998        0.0  91.959961       35.937500     1.0      3500.970459         False          False
4    3636.907959    3600.970459  132.162598  3636.907959   91.957520  3600.970459        0.0  35.937500        0.000000     2.0      3500.970459         False          False
5    3672.845459    3636.907959  196.225098  3672.845459   71.875000  3636.907959        0.0  35.937500        0.000000     3.0      3500.970459         False          False
6    3672.845459    3672.845459  260.287598  3672.845459    0.010000  3672.845459        0.0   0.000000      -35.937500     2.0      3672.845459          True           True
7    3738.794189    3708.782959  318.102783  3738.794189   65.948730  3708.782959        0.0  30.011230      -12.173584     1.0      3672.845459         False          False
8    3764.689209    3750.967773  318.102783  3764.689209   55.906250  3750.967773        0.0  13.721436      -86.278564     1.0      3672.845459         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:33]  --------------------------------------------------------------------------------
[08/09 16:24:33]  Iteration: 43 (0 solution, 42 counterexamples)
[08/09 16:24:37]  Generator returned sat in 2.237063 secs.
[08/09 16:24:37]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:24:37]  Improved gap from 389/16384 to 26.5625
[08/09 16:24:38]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:24:38]  Verifer returned sat in 1.106024 secs.
[08/09 16:24:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3378.328125    3249.220459 -355.424072  3378.328125  300.000000  3249.220459        0.0  129.107666      129.107666     2.0      3249.220459            -1             -1
1    3549.173096    3249.220459 -355.424072  3549.173096  299.952637  3249.220459        0.0  299.952637      199.952637     2.0      3549.173096         False          False
2    3549.173096    3378.375244 -355.424072  3549.173096    0.047607  3378.375244        0.0  170.797852       99.952637     2.0      3549.173096         False          False
3    3743.375244    3549.220215 -355.424072  3743.375244  365.000000  3549.220215        0.0  194.155029      194.154785     1.0      3549.173096         False          False
4    3743.375244    3646.595459 -355.424072  3743.375244  184.500000  3646.595459        0.0   96.779785       94.154785     2.0      3549.173096         False          False
5    3743.375244    3649.220459 -349.579102  3743.375244   94.250000  3649.220459        0.0   94.154785       -0.000244     3.0      3549.173096         False          False
6    3743.470459    3743.423096 -276.189209  3743.470459   94.250000  3743.423096        0.0    0.047363      -26.515137     1.0      3743.470459          True           True
7    3792.548096    3769.985596 -202.751709  3792.548096   49.125000  3769.985596        0.0   22.562500       -4.000000     1.0      3743.470459         False          False
8    3796.548096    3796.548096 -202.751709  3796.548096   26.562500  3796.548096        0.0    0.000000     -100.000000     1.0      3743.470459         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:38]  --------------------------------------------------------------------------------
[08/09 16:24:38]  Iteration: 44 (0 solution, 43 counterexamples)
[08/09 16:24:40]  Generator returned sat in 0.458235 secs.
[08/09 16:24:40]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:24:42]  Improved gap from 425/16 to 26.5625
[08/09 16:24:42]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:24:42]  Verifer returned sat in 2.509887 secs.
[08/09 16:24:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3268.689453    2988.189453 -316.359619  3268.689453    0.023682  2988.189453        0.0  280.500000      280.500000     8.0      2988.189453            -1             -1
1    3268.689453    3088.166016 -316.359619  3268.689453    0.047363  3088.166016        0.0  180.523438      180.500000     3.0      2988.189453         False           True
2    3268.689453    3088.189453 -316.359619  3268.689453    0.023438  3088.189453        0.0  180.500000       80.500000     3.0      3268.689453          True           True
3    3453.189453    3268.666016 -316.359619  3453.189453  365.000000  3268.666016        0.0  184.523438      165.000000     4.0      3268.689453         False           True
4    3453.189453    3388.189453 -316.359619  3453.189453  184.500000  3388.189453        0.0   65.000000       65.000000     2.0      3268.689453         False           True
5    3482.439453    3390.814453 -313.211182  3482.439453   94.250000  3390.814453        0.0   91.625000       -2.601562     3.0      3268.689453         False           True
6    3485.064453    3485.041016 -239.773682  3485.064453   94.250000  3485.041016        0.0    0.023438      -26.539062     1.0      3485.064453          True           True
7    3534.166016    3511.603516 -166.336182  3534.166016   49.125000  3511.603516        0.0   22.562500       -4.000000     1.0      3485.064453         False          False
8    3538.166016    3538.166016 -166.335938  3538.166016   26.562500  3538.166016        0.0    0.000000      -99.999756     1.0      3485.064453         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:43]  --------------------------------------------------------------------------------
[08/09 16:24:43]  Iteration: 45 (0 solution, 44 counterexamples)
[08/09 16:24:48]  Generator returned sat in 4.245927 secs.
[08/09 16:24:48]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:49]  Verifer returned unsat in 0.322294 secs.
[08/09 16:24:49]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:49]  --------------------------------------------------------------------------------
[08/09 16:24:49]  Iteration: 46 (1 solution, 44 counterexamples)
[08/09 16:24:50]  Generator returned sat in 0.452508 secs.
[08/09 16:24:50]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:24:51]  Improved gap from 0 to 46.875
[08/09 16:24:51]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/09 16:24:51]  Verifer returned sat in 0.901536 secs.
[08/09 16:24:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3411.610596    3011.611572 -339.781982  3411.610596    0.001250  3011.611572        0.0  399.999023      399.999023     6.0      3011.611572            -1             -1
1    3411.610596    3111.611572 -339.781982  3411.610596    0.001250  3111.611572        0.0  299.999023      299.999023     5.0      3011.611572         False          False
2    3411.610596    3209.368896 -339.781982  3411.610596    0.001250  3209.368896        0.0  202.241699      199.999023     5.0      3011.611572         False          False
3    3411.610596    3308.194092 -339.781982  3411.610596    0.001465  3308.194092        0.0  103.416504       99.999023     6.0      3011.611572         False          False
4    3458.485352    3411.610596 -339.781982  3458.485352  150.291260  3411.610596        0.0   46.874756       46.873779     7.0      3011.611572         False          False
5    3458.485352    3411.611572 -286.656982  3458.485352    0.010000  3411.611572        0.0   46.873779       -0.001221     2.0      3458.485352          True           True
6    3514.732910    3458.486572 -242.904297  3514.732910  103.121338  3458.486572        0.0   56.246338       -0.000977     1.0      3458.485352         False          False
7    3535.632812    3514.734131 -189.779541  3535.632812   77.146240  3514.734131        0.0   20.898682      -25.976318     1.0      3458.485352         False          False
8    3568.295898    3561.609375 -189.779541  3568.295898   53.561768  3561.609375        0.0    6.686523      -93.313232     1.0      3458.485352         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:52]  --------------------------------------------------------------------------------
[08/09 16:24:52]  Iteration: 47 (1 solution, 45 counterexamples)
[08/09 16:24:54]  Generator returned sat in 1.114278 secs.
[08/09 16:24:54]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:54]  Verifer returned unsat in 0.299972 secs.
[08/09 16:24:54]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:55]  --------------------------------------------------------------------------------
[08/09 16:24:55]  Iteration: 48 (2 solution, 45 counterexamples)
[08/09 16:24:57]  Generator returned sat in 1.180015 secs.
[08/09 16:24:57]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:58]  Improved gap from 1/600 to 12.5
[08/09 16:24:59]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:24:59]  Verifer returned sat in 1.543540 secs.
[08/09 16:24:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3517.635742    3017.635742 -345.806152  3517.635742    0.046875  3017.635742        0.0  500.000000      500.000000     6.0      3017.635742            -1             -1
1    3517.635742    3117.635742 -345.806152  3517.635742    0.047119  3117.635742        0.0  400.000000      400.000000     4.0      3017.635742         False          False
2    3517.635742    3117.635742 -345.806152  3517.635742  399.952637  3117.635742        0.0  400.000000      300.000000     4.0      3017.635742         False          False
3    3517.635742    3317.588867 -345.806152  3517.635742  400.000000  3317.588867        0.0  200.046875      200.000000     5.0      3017.635742         False          False
4    3517.635742    3392.729980 -345.806152  3517.635742  200.000000  3392.729980        0.0  124.905762      100.000000     6.0      3017.635742         False          False
5    3517.635742    3467.682861 -345.806152  3517.635742  100.000000  3467.682861        0.0   49.952881        0.000000     7.0      3017.635742         False          False
6    3517.682861    3517.635742 -258.306396  3517.682861   50.000000  3517.635742        0.0    0.047119      -12.453125     8.0      3017.635742         False          False
7    3542.635742    3530.183105 -170.853516  3542.635742   25.000000  3530.183105        0.0   12.452637       -0.047363     1.0      3542.635742          True           True
8    3542.683105    3542.683105 -170.853516  3542.683105   12.500000  3542.683105        0.0    0.000000     -100.000000     1.0      3542.635742         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:59]  --------------------------------------------------------------------------------
[08/09 16:24:59]  Iteration: 49 (2 solution, 46 counterexamples)
[08/09 16:25:02]  Generator returned sat in 2.072960 secs.
[08/09 16:25:02]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:03]  Improved gap from 1/400 to 48.4375
[08/09 16:25:03]  Improved number of small numbers from 108 to 110 out of a max of 110
[08/09 16:25:03]  Verifer returned sat in 0.350137 secs.
[08/09 16:25:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3517.635742    3069.197998 -1150.493896  3517.635742  224.999756  3069.197998        0.0  448.437744      448.437500     8.0      3069.197998            -1             -1
1    3517.635742    3169.198242 -1150.493896  3517.635742  224.999756  3169.198242        0.0  348.437500      348.437500     8.0      3069.197998         False          False
2    3517.635742    3269.198242 -1150.493896  3517.635742  224.999756  3269.198242        0.0  248.437500      248.437500     8.0      3069.197998         False          False
3    3517.635742    3327.885742 -1150.493896  3517.635742  248.437256  3327.885742        0.0  189.750000      148.437500     8.0      3069.197998         False          False
4    3517.635742    3469.193115 -1150.493896  3517.635742    0.010000  3469.193115        0.0   48.442627       48.437500     7.0      3069.197998         False          False
5    3517.635742    3469.198242 -1098.931396  3517.635742    0.010000  3469.198242        0.0   48.437500        0.000000     8.0      3069.197998         False          False
6    3517.635742    3517.635742 -1047.368896  3517.635742    0.010000  3517.635742        0.0    0.000000      -48.437500     9.0      3069.197998         False          False
7    3614.510742    3566.073242  -995.806396  3614.510742   96.875000  3566.073242        0.0   48.437500        0.000000     1.0      3614.510742          True           True
8    3614.510742    3614.510742  -995.806152  3614.510742    0.010000  3614.510742        0.0    0.000000      -99.999756     2.0      3614.510742         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:03]  --------------------------------------------------------------------------------
[08/09 16:25:03]  Iteration: 50 (2 solution, 47 counterexamples)
[08/09 16:25:05]  Generator returned sat in 0.403380 secs.
[08/09 16:25:05]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:05]  Improved gap from 767/16 to 48.4375
[08/09 16:25:06]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:25:06]  Verifer returned sat in 0.445940 secs.
[08/09 16:25:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1601.250732    1152.813232 -1150.493896  1601.250732   0.001221  1152.813232        0.0  448.437500        448.4375     4.0      1152.813232            -1             -1
1    1601.250732    1152.813232 -1150.493896  1601.250732   0.001250  1152.813232        0.0  448.437500        348.4375     4.0      1152.813232         False          False
2    1601.250732    1252.813477 -1150.493896  1601.250732   0.001250  1252.813477        0.0  348.437256        248.4375     5.0      1152.813232         False          False
3    1601.250732    1410.500732 -1150.493896  1601.250732   0.001465  1410.500732        0.0  190.750000        148.4375     6.0      1152.813232         False          False
4    1601.250732    1552.812012 -1150.493896  1601.250732   0.010000  1552.812012        0.0   48.438721         48.4375     7.0      1152.813232         False          False
5    1601.250732    1552.813232 -1098.931396  1601.250732   0.010000  1552.813232        0.0   48.437500          0.0000     8.0      1152.813232         False          False
6    1601.250732    1601.250732 -1047.368896  1601.250732   0.010000  1601.250732        0.0    0.000000        -48.4375     9.0      1152.813232         False          False
7    1698.125732    1649.688232  -995.806396  1698.125732  96.875000  1649.688232        0.0   48.437500          0.0000     1.0      1698.125732          True           True
8    1698.125732    1698.125732  -995.806396  1698.125732   0.010000  1698.125732        0.0    0.000000       -100.0000     2.0      1698.125732         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:06]  --------------------------------------------------------------------------------
[08/09 16:25:06]  Iteration: 51 (2 solution, 48 counterexamples)
[08/09 16:25:08]  Generator returned sat in 0.429757 secs.
[08/09 16:25:08]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:08]  Improved gap from 775/16 to 48.4375
[08/09 16:25:08]  Improved number of small numbers from 96 to 110 out of a max of 110
[08/09 16:25:08]  Verifer returned sat in 0.409353 secs.
[08/09 16:25:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1576.250732    1127.813232 -1150.493896  1576.250732    0.001250  1127.813232        0.0  448.437500        448.4375     5.0      1127.813232            -1             -1
1    1576.250732    1227.812988 -1150.493896  1576.250732    0.001250  1227.812988        0.0  348.437744        348.4375     5.0      1127.813232         False          False
2    1576.250732    1227.813232 -1150.493896  1576.250732    0.001465  1227.813232        0.0  348.437500        248.4375     6.0      1127.813232         False          False
3    1576.250732    1374.128174 -1150.493896  1576.250732    0.001465  1374.128174        0.0  202.122559        148.4375     6.0      1127.813232         False          False
4    1576.250732    1527.812500 -1150.493896  1576.250732    0.010000  1527.812500        0.0   48.438232         48.4375     7.0      1127.813232         False          False
5    1576.250732    1527.813232 -1098.931396  1576.250732    0.010000  1527.813232        0.0   48.437500          0.0000     8.0      1127.813232         False          False
6    1576.250732    1576.250732 -1047.368896  1576.250732    0.010000  1576.250732        0.0    0.000000        -48.4375     9.0      1127.813232         False          False
7    1677.812012    1624.688232 -1000.492676  1677.812012  101.561279  1624.688232        0.0   53.123779          0.0000     1.0      1677.812012          True           True
8    1677.812012    1677.812012 -1000.492676  1677.812012    0.010000  1677.812012        0.0    0.000000       -100.0000     2.0      1677.812012         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:09]  --------------------------------------------------------------------------------
[08/09 16:25:09]  Iteration: 52 (2 solution, 49 counterexamples)
[08/09 16:25:11]  Generator returned sat in 0.430396 secs.
[08/09 16:25:11]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:11]  Improved gap from 775/16 to 48.4375
[08/09 16:25:11]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:25:11]  Verifer returned sat in 0.420053 secs.
[08/09 16:25:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1502.822998    1054.385498 -808.743896  1502.822998   0.001221  1054.385498        0.0  448.437500      448.437500     4.0      1054.385498            -1             -1
1    1502.822998    1154.385498 -808.743896  1502.822998   0.001221  1154.385498        0.0  348.437500      348.437500     4.0      1054.385498         False          False
2    1502.822998    1254.385498 -808.743896  1502.822998   0.001221  1254.385498        0.0  248.437500      248.437500     5.0      1054.385498         False          False
3    1502.822998    1311.072998 -808.743896  1502.822998   0.001465  1311.072998        0.0  191.750000      148.437500     6.0      1054.385498         False          False
4    1502.822998    1449.699463 -808.743896  1502.822998   0.010000  1449.699463        0.0   53.123535       48.437500     7.0      1054.385498         False          False
5    1502.822998    1454.385498 -757.181396  1502.822998   0.010000  1454.385498        0.0   48.437500        0.000000     8.0      1054.385498         False          False
6    1502.822998    1502.822998 -705.618896  1502.822998   0.010000  1502.822998        0.0    0.000000      -48.437500     9.0      1054.385498         False          False
7    1599.697998    1551.260498 -654.056396  1599.697998  96.875000  1551.260498        0.0   48.437500        0.000000     1.0      1599.697998          True           True
8    1599.697998    1599.697998 -602.494141  1599.697998   0.010000  1599.697998        0.0    0.000000      -48.437744     2.0      1599.697998         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:12]  --------------------------------------------------------------------------------
[08/09 16:25:12]  Iteration: 53 (2 solution, 50 counterexamples)
[08/09 16:25:13]  Generator returned sat in 0.445451 secs.
[08/09 16:25:13]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:14]  Improved gap from 775/16 to 48.4375
[08/09 16:25:14]  Improved number of small numbers from 55 to 78 out of a max of 110
[08/09 16:25:14]  Verifer returned sat in 0.959147 secs.
[08/09 16:25:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1364.996065     916.557861 -257.627686  1364.996065   0.000977   916.557861        0.0  448.438204      448.438101     4.0       916.557861            -1             -1
1    1364.996065    1016.557861 -257.627686  1364.996065   0.000977  1016.557861        0.0  348.438204      348.438101     4.0       916.557861         False          False
2    1364.996065    1116.557861 -257.627686  1364.996065   0.000977  1116.557861        0.0  248.438204      248.438101     5.0       916.557861         False          False
3    1364.996065    1173.256065 -257.627686  1364.996065   0.001221  1173.256065        0.0  191.740000      148.438101     6.0       916.557861         False          False
4    1364.996065    1316.557861 -257.627686  1364.996065   0.010000  1316.557861        0.0   48.438204       48.438101     7.0       916.557861         False          False
5    1364.996065    1316.558350 -206.065786  1364.996065   0.010000  1316.558350        0.0   48.437716        0.000000     8.0       916.557861         False          False
6    1364.996065    1364.996065 -154.503286  1364.996065   0.010000  1364.996065        0.0    0.000000      -48.437500     9.0       916.557861         False          False
7    1461.871065    1413.433565 -102.940786  1461.871065  96.875000  1413.433565        0.0   48.437500        0.000000     1.0      1461.871065          True           True
8    1461.871065    1461.871065  -51.378418  1461.871065   0.010000  1461.871065        0.0    0.000000      -48.437632     2.0      1461.871065         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:15]  --------------------------------------------------------------------------------
[08/09 16:25:15]  Iteration: 54 (2 solution, 51 counterexamples)
[08/09 16:25:19]  Generator returned sat in 2.749511 secs.
[08/09 16:25:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:19]  Improved gap from 0 to 100
[08/09 16:25:20]  Improved number of small numbers from 55 to 103 out of a max of 110
[08/09 16:25:20]  Verifer returned sat in 0.785494 secs.
[08/09 16:25:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1416.567871    1116.570557 -102.940918  1416.567871  299.995000  1116.570557        0.0  299.997314      199.997559     4.0      1116.570557            -1             -1
1    1416.567871    1316.570312 -102.940918  1416.567871  299.995117  1316.570312        0.0   99.997559       99.997559     5.0      1116.570557         False          False
2    1616.562744    1416.570312 -102.940918  1616.562744  299.992432  1416.570312        0.0  199.992432      199.992432     1.0      1616.562744          True           True
3    1836.567627    1516.570312 -102.940918  1836.567627  419.997314  1516.570312        0.0  319.997314      319.997314     2.0      1616.562744         False          False
4    1836.567627    1516.570361 -102.940918  1836.567627    0.010000  1516.570361        0.0  319.997266      219.997314     3.0      1616.562744         False          False
5    1836.567627    1716.567871 -102.940918  1836.567627    0.010000  1716.567871        0.0  119.999756      119.997314     3.0      1616.562744         False          False
6    1836.567627    1716.570312 -102.940918  1836.567627    0.010000  1716.570312        0.0  119.997314       19.997314     4.0      1616.562744         False          False
7    1836.567627    1836.565361 -102.940918  1836.567627    0.010000  1836.565361        0.0    0.002266      -80.002686     5.0      1616.562744         False          False
8    2316.572861    1916.570557 -102.940918  2316.572861  480.007500  1916.570557        0.0  400.002305      300.002549     1.0      2316.572861          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:25:20]  --------------------------------------------------------------------------------
[08/09 16:25:20]  Iteration: 55 (2 solution, 52 counterexamples)
[08/09 16:25:23]  Generator returned sat in 0.897889 secs.
[08/09 16:25:23]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:23]  Verifer returned unsat in 0.350767 secs.
[08/09 16:25:23]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:23]  --------------------------------------------------------------------------------
[08/09 16:25:23]  Iteration: 56 (3 solution, 52 counterexamples)
[08/09 16:25:25]  Generator returned sat in 0.962751 secs.
[08/09 16:25:26]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:26]  Improved gap from 1/1600 to 15.625
[08/09 16:25:26]  Improved number of small numbers from 61 to 110 out of a max of 110
[08/09 16:25:26]  Verifer returned sat in 0.658952 secs.
[08/09 16:25:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1300.935547    1300.935303 -219.449707  1300.935547  199.999756  1300.935303        0.0    0.000244      -97.757324     8.0      1300.935303            -1             -1
1    1500.932861    1498.692627 -219.449707  1500.932861  199.997559  1498.692627        0.0    2.240234        2.239990     1.0      1500.932861         False           True
2    1516.557861    1500.935303 -137.317139  1516.557861   17.865234  1500.935303        0.0   15.622559       -0.002441     1.0      1516.557861         False          False
3    1516.562988    1516.560303  -52.942139  1516.562988   15.627686  1516.560303        0.0    0.002686      -15.622314     1.0      1516.562988         False          False
4    1732.185303    1631.065186  -52.942139  1732.185303  215.625000  1631.065186        0.0  101.120117      100.000000     1.0      1516.562988         False          False
5    1763.437744    1632.185303  -52.942139  1763.437744  132.372559  1632.185303        0.0  131.252441       31.252441     2.0      1516.562988         False          False
6    1763.437744    1732.185303   15.805420  1763.437744  131.250000  1732.185303        0.0   31.252441        0.000000     3.0      1516.562988         False          False
7    1763.437744    1763.437744  100.180420  1763.437744    0.010000  1763.437744        0.0    0.000000      -15.625000     3.0      1763.437744          True           True
8    1895.810303    1779.062988  100.180420  1895.810303  132.372559  1779.062988        0.0  116.747314       16.747559     1.0      1763.437744         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:27]  --------------------------------------------------------------------------------
[08/09 16:25:27]  Iteration: 57 (3 solution, 53 counterexamples)
[08/09 16:25:29]  Generator returned sat in 0.452522 secs.
[08/09 16:25:29]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:29]  Verifer returned unsat in 0.232836 secs.
[08/09 16:25:29]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:29]  --------------------------------------------------------------------------------
[08/09 16:25:29]  Iteration: 58 (4 solution, 53 counterexamples)
[08/09 16:25:31]  Generator returned sat in 0.508410 secs.
[08/09 16:25:31]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:31]  Verifer returned unsat in 0.407972 secs.
[08/09 16:25:31]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:31]  --------------------------------------------------------------------------------
[08/09 16:25:31]  Iteration: 59 (5 solution, 53 counterexamples)
[08/09 16:25:33]  Generator returned sat in 0.362478 secs.
[08/09 16:25:33]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:34]  Verifer returned unsat in 0.424479 secs.
[08/09 16:25:34]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:34]  --------------------------------------------------------------------------------
[08/09 16:25:34]  Iteration: 60 (6 solution, 53 counterexamples)
[08/09 16:25:36]  Generator returned sat in 0.355692 secs.
[08/09 16:25:36]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:36]  Verifer returned unsat in 0.353610 secs.
[08/09 16:25:36]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:36]  --------------------------------------------------------------------------------
[08/09 16:25:36]  Iteration: 61 (7 solution, 53 counterexamples)
[08/09 16:25:38]  Generator returned sat in 0.355973 secs.
[08/09 16:25:38]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:38]  Verifer returned unsat in 0.453901 secs.
[08/09 16:25:38]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:38]  --------------------------------------------------------------------------------
[08/09 16:25:38]  Iteration: 62 (8 solution, 53 counterexamples)
[08/09 16:25:40]  Generator returned sat in 0.352254 secs.
[08/09 16:25:40]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:41]  Verifer returned unsat in 0.527854 secs.
[08/09 16:25:41]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:41]  --------------------------------------------------------------------------------
[08/09 16:25:41]  Iteration: 63 (9 solution, 53 counterexamples)
[08/09 16:25:43]  Generator returned sat in 0.381459 secs.
[08/09 16:25:43]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:43]  Verifer returned unsat in 0.272959 secs.
[08/09 16:25:43]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:43]  --------------------------------------------------------------------------------
[08/09 16:25:43]  Iteration: 64 (10 solution, 53 counterexamples)
[08/09 16:25:45]  Generator returned sat in 0.365526 secs.
[08/09 16:25:45]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:45]  Verifer returned unsat in 0.203148 secs.
[08/09 16:25:45]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:45]  --------------------------------------------------------------------------------
[08/09 16:25:45]  Iteration: 65 (11 solution, 53 counterexamples)
[08/09 16:25:47]  Generator returned sat in 0.367886 secs.
[08/09 16:25:47]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:47]  Verifer returned unsat in 0.274436 secs.
[08/09 16:25:47]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:47]  --------------------------------------------------------------------------------
[08/09 16:25:47]  Iteration: 66 (12 solution, 53 counterexamples)
[08/09 16:25:49]  Generator returned sat in 0.358242 secs.
[08/09 16:25:49]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:49]  Verifer returned unsat in 0.285378 secs.
[08/09 16:25:49]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:49]  --------------------------------------------------------------------------------
[08/09 16:25:49]  Iteration: 67 (13 solution, 53 counterexamples)
[08/09 16:25:51]  Generator returned sat in 0.491894 secs.
[08/09 16:25:51]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:52]  Improved number of small numbers from 43 to 109 out of a max of 109
[08/09 16:25:52]  Verifer returned sat in 0.370601 secs.
[08/09 16:25:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -529.503174    -629.456543  1708.699707  -529.503174  399.953125  -629.456543        0.0   99.953369       -0.046631     1.0      -629.456543            -1             -1
1    -229.503174    -529.456543  1708.699707  -229.503174  399.953369  -529.456543        0.0  299.953369      199.953369     1.0      -629.456543         False          False
2    -229.503174    -329.456543  1708.699707  -229.503174  299.906494  -329.456543        0.0   99.953369       99.953369     2.0      -229.503174         False          False
3     -29.596680    -229.456543  1708.699707   -29.596680  299.859863  -229.456543        0.0  199.859863      199.859863     1.0       -29.596680         False          False
4     170.543457    -229.003174  1708.699707   170.543457  400.000000  -229.003174        0.0  399.546631      300.000000     2.0       -29.596680         False          False
5     170.543457     -79.433105  1708.699707   170.543457  300.453369   -79.433105        0.0  249.976562      200.000000     3.0       -29.596680         False          False
6     170.590332     -29.456543  1708.699707   170.590332  250.023438   -29.456543        0.0  200.046875      100.046875     3.0       -29.596680         False          False
7     170.590332     170.543457  1708.699707   170.590332  200.000000   170.543457        0.0    0.046875        0.046875     4.0       -29.596680         False          False
8     570.590088     170.543701  1708.699707   570.590088  400.046631   170.543701        0.0  400.046387      300.046631     3.0       570.590088          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:25:52]  --------------------------------------------------------------------------------
[08/09 16:25:52]  Iteration: 68 (13 solution, 54 counterexamples)
[08/09 16:25:54]  Generator returned sat in 0.478369 secs.
[08/09 16:25:54]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:55]  Verifer returned unsat in 0.247758 secs.
[08/09 16:25:55]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:55]  --------------------------------------------------------------------------------
[08/09 16:25:55]  Iteration: 69 (14 solution, 54 counterexamples)
[08/09 16:25:57]  Generator returned sat in 0.653824 secs.
[08/09 16:25:57]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:57]  Verifer returned unsat in 0.261536 secs.
[08/09 16:25:57]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:57]  --------------------------------------------------------------------------------
[08/09 16:25:57]  Iteration: 70 (15 solution, 54 counterexamples)
[08/09 16:25:59]  Generator returned sat in 0.375134 secs.
[08/09 16:25:59]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:59]  Verifer returned unsat in 0.309195 secs.
[08/09 16:25:59]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:59]  --------------------------------------------------------------------------------
[08/09 16:25:59]  Iteration: 71 (16 solution, 54 counterexamples)
[08/09 16:26:01]  Generator returned sat in 0.369998 secs.
[08/09 16:26:01]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:02]  Verifer returned unsat in 0.253303 secs.
[08/09 16:26:02]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:02]  --------------------------------------------------------------------------------
[08/09 16:26:02]  Iteration: 72 (17 solution, 54 counterexamples)
[08/09 16:26:03]  Generator returned sat in 0.367891 secs.
[08/09 16:26:03]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:04]  Verifer returned unsat in 0.299654 secs.
[08/09 16:26:04]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:04]  --------------------------------------------------------------------------------
[08/09 16:26:04]  Iteration: 73 (18 solution, 54 counterexamples)
[08/09 16:26:06]  Generator returned sat in 0.381584 secs.
[08/09 16:26:06]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:06]  Improved number of small numbers from 56 to 109 out of a max of 109
[08/09 16:26:06]  Verifer returned sat in 0.304189 secs.
[08/09 16:26:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -177.003418    -577.050049  1808.783203  -177.003418    0.023438  -577.050049        0.0  400.046631      400.046387     5.0      -577.050049            -1             -1
1    -177.003418    -477.049805  1808.783203  -177.003418  400.023438  -477.049805        0.0  300.046387      300.046387     5.0      -577.050049         False           True
2    -177.003418    -477.049805  1808.783203  -177.003418    0.023438  -477.049805        0.0  300.046387      200.046387     5.0      -177.003418          True           True
3     122.973389    -375.096924  1808.783203   122.973389  600.023193  -375.096924        0.0  498.070312      400.023193     4.0      -177.003418         False           True
4     122.973389    -277.049805  1808.783203   122.973389  201.953125  -277.049805        0.0  400.023193      300.023193     5.0      -177.003418         False           True
5     122.973389    -177.026611  1808.783203   122.973389  200.000000  -177.026611        0.0  300.000000      200.023193     6.0      -177.003418         False           True
6     122.996582      22.949951  1808.783203   122.996582  300.023193    22.949951        0.0  100.046631      100.046387     4.0      -177.003418         False           True
7     420.996826     122.950195  1808.783203   420.996826  398.046875   122.950195        0.0  298.046631      298.046631     5.0      -177.003418         False           True
8     522.973633     222.950195  1808.783203   522.973633  400.023438   222.950195        0.0  300.023438      300.023438     2.0       522.973633          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:26:07]  --------------------------------------------------------------------------------
[08/09 16:26:07]  Iteration: 74 (18 solution, 55 counterexamples)
[08/09 16:26:09]  Generator returned sat in 0.498813 secs.
[08/09 16:26:09]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:09]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/09 16:26:09]  Verifer returned sat in 0.206064 secs.
[08/09 16:26:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -177.003418    -578.049561  1808.783203  -177.003418    0.023438  -578.049561        0.0  401.046143      400.046387     5.0      -578.049561            -1             -1
1    -177.003418    -477.049805  1808.783203  -177.003418  400.023438  -477.049805        0.0  300.046387      300.046387     5.0      -578.049561         False           True
2    -177.003418    -477.049805  1808.783203  -177.003418    0.023438  -477.049805        0.0  300.046387      200.046387     5.0      -177.003418          True           True
3     122.973389    -376.096436  1808.783203   122.973389  600.023193  -376.096436        0.0  499.069824      400.023193     4.0      -177.003418         False           True
4     122.973389    -277.049805  1808.783203   122.973389  201.953125  -277.049805        0.0  400.023193      300.023193     5.0      -177.003418         False           True
5     122.973389    -177.026611  1808.783203   122.973389  200.000000  -177.026611        0.0  300.000000      200.023193     6.0      -177.003418         False           True
6     122.996582      22.949951  1808.783203   122.996582  300.023193    22.949951        0.0  100.046631      100.046387     4.0      -177.003418         False           True
7     421.996338     122.950195  1808.783203   421.996338  399.046387   122.950195        0.0  299.046143      299.046143     5.0      -177.003418         False           True
8     522.973389     222.950195  1808.783203   522.973389  400.023193   222.950195        0.0  300.023193      300.023193     2.0       522.973389          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:26:09]  --------------------------------------------------------------------------------
[08/09 16:26:09]  Iteration: 75 (18 solution, 56 counterexamples)
[08/09 16:26:13]  Generator returned sat in 1.992659 secs.
[08/09 16:26:13]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:13]  Improved gap from 0 to 0
[08/09 16:26:14]  Improved number of small numbers from 69 to 91 out of a max of 110
[08/09 16:26:14]  Verifer returned sat in 0.640111 secs.
[08/09 16:26:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     520.963389     220.951904  1808.783203   520.963389  0.001221   220.951904        0.0  300.011484      300.011250     5.0       220.951904            -1             -1
1     520.963389     320.950684  1808.783203   520.963389  0.001221   320.950684        0.0  200.012705      200.011250     3.0       220.951904         False          False
2     520.963389     320.952148  1808.783203   520.963389  0.001221   320.952148        0.0  200.011240      100.011250     3.0       220.951904         False          False
3     520.963389     520.950928  1808.783203   520.963389  0.001221   520.950928        0.0    0.012461        0.011250     4.0       220.951904         False          False
4     520.963389     520.952148  1908.771953   520.963389  0.010000   520.952148        0.0    0.011240        0.000000     5.0       220.951904         False          False
5     520.963389     520.963389  2008.771729   520.963389  0.010000   520.963389        0.0    0.000000       -0.000225     6.0       220.951904         False          False
6     522.973389     520.963623  2106.761953   522.973389  2.010000   520.963623        0.0    2.009766        0.000000     1.0       522.973389          True           True
7     522.973389     522.973389  2206.761719   522.973389  0.010000   522.973389        0.0    0.000000       -0.000234     2.0       522.973389         False          False
8     522.983389     522.974854  2306.751953   522.983389  0.010000   522.974854        0.0    0.008535        0.000000     1.0       522.973389         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[08/09 16:26:14]  --------------------------------------------------------------------------------
[08/09 16:26:14]  Iteration: 76 (18 solution, 57 counterexamples)
[08/09 16:26:16]  Generator returned sat in 0.653355 secs.
[08/09 16:26:17]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:17]  Improved gap from 0 to 0
[08/09 16:26:18]  Improved number of small numbers from 69 to 92 out of a max of 110
[08/09 16:26:18]  Verifer returned sat in 1.047648 secs.
[08/09 16:26:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -767.589111    -867.592285  1808.783203  -767.589111  100.003174  -867.592285        0.0  100.003174      100.000000     2.0      -867.592285            -1             -1
1    -767.589111    -767.589844  1808.783203  -767.589111  100.002500  -767.589844        0.0    0.000732        0.000000     2.0      -767.589111         False          False
2    -667.588135    -767.589111  1808.783203  -667.588135  100.001709  -767.589111        0.0  100.000977        0.000977     3.0      -667.588135         False          False
3    -667.588135    -667.589111  1908.782227  -667.588135    0.000977  -667.589111        0.0    0.000977        0.000000     2.0      -667.588135         False          False
4    -667.579111    -667.587445  2008.773193  -667.579111    0.010000  -667.587445        0.0    0.008333       -0.000010     1.0      -667.588135         False          False
5    -667.577445    -667.578278  2108.771484  -667.577445    0.010000  -667.578278        0.0    0.000833       -0.000052     1.0      -667.588135         False          False
6    -667.568278    -667.576611  2208.762370  -667.568278    0.010000  -667.576611        0.0    0.008333        0.000000     1.0      -667.588135         False          False
7    -667.566611    -667.567445  2308.760498  -667.566611    0.010000  -667.567445        0.0    0.000833       -0.000205     1.0      -667.588135         False          False
8    -667.557445    -667.565674  2308.760742  -667.557445    0.010000  -667.565674        0.0    0.008229      -99.990794     1.0      -667.588135         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:26:18]  --------------------------------------------------------------------------------
[08/09 16:26:18]  Iteration: 77 (18 solution, 58 counterexamples)
[08/09 16:26:23]  Generator returned sat in 3.700874 secs.
[08/09 16:26:23]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:24]  Improved number of small numbers from 41 to 109 out of a max of 109
[08/09 16:26:24]  Verifer returned sat in 0.368268 secs.
[08/09 16:26:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -767.634766   -1067.634766  2008.828857  -767.634766  400.116211 -1067.634766        0.0  300.000000      300.000000     2.0     -1067.634766            -1             -1
1    -667.565186    -967.681152  2008.828857  -667.565186  400.069580  -967.681152        0.0  300.115967      300.069580     2.0      -667.565186         False          False
2    -367.634766    -967.634766  2008.828857  -367.634766  600.046387  -967.634766        0.0  600.000000      500.000000     3.0      -667.565186         False          False
3    -367.588135    -767.634766  2008.828857  -367.588135  600.046631  -767.634766        0.0  400.046631      400.046631     4.0      -667.565186         False          False
4    -367.588135    -767.634766  2008.828857  -367.588135  300.000000  -767.634766        0.0  400.046631      300.046631     4.0      -667.565186         False          False
5    -367.588135    -667.611572  2008.828857  -367.588135  200.046387  -667.611572        0.0  300.023438      200.046631     5.0      -667.565186         False          False
6    -367.588135    -467.681396  2008.828857  -367.588135  300.023193  -467.681396        0.0  100.093262      100.046631     5.0      -667.565186         False          False
7    -167.728027    -367.634766  2008.828857  -167.728027  299.953369  -367.634766        0.0  199.906738      199.906738     6.0      -667.565186         False          False
8     233.865234    -367.634766  2008.828857   233.865234  601.500000  -367.634766        0.0  601.500000      501.500000     6.0       233.865234          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:26:24]  --------------------------------------------------------------------------------
[08/09 16:26:24]  Iteration: 78 (18 solution, 59 counterexamples)
[08/09 16:26:28]  Generator returned sat in 2.013323 secs.
[08/09 16:26:28]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:29]  Improved gap from 0 to 4.6875
[08/09 16:26:29]  Improved number of small numbers from 79 to 110 out of a max of 110
[08/09 16:26:29]  Verifer returned sat in 1.252027 secs.
[08/09 16:26:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -692.085547    -832.604736  1733.279785  -692.085547    5.401367  -832.604736        0.0  140.519189      100.000391     3.0      -832.604736            -1             -1
1    -692.085547    -692.799805  1733.279785  -692.085547    5.354980  -692.799805        0.0    0.714258        0.000391     2.0      -692.085547         False           True
2    -687.444580    -692.085693  1828.592041  -687.444580    5.355225  -692.085693        0.0    4.641113       -0.046387     3.0      -692.085547         False          False
3    -682.710693    -687.398193  1923.904541  -682.710693    9.375000  -687.398193        0.0    4.687500        0.000000     1.0      -692.085547         False           True
4    -542.191650    -617.495850  1923.904541  -542.191650  145.206543  -617.495850        0.0   75.304199       40.519043     1.0      -692.085547         False          False
5    -542.191650    -582.710693  1983.385498  -542.191650   75.303955  -582.710693        0.0   40.519043        0.000000     2.0      -692.085547         False          False
6    -473.335693    -542.191650  2014.483154  -473.335693  109.375000  -542.191650        0.0   68.855957       -0.046387     3.0      -692.085547         False          False
7    -467.588379    -473.289307  2108.736084  -467.588379   74.603271  -473.289307        0.0    5.700928       -0.046143     1.0      -467.588379          True           True
8    -329.082764    -467.541992  2108.736084  -329.082764  144.206543  -467.541992        0.0  138.459229       38.459473     1.0      -467.588379         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:26:30]  --------------------------------------------------------------------------------
[08/09 16:26:30]  Iteration: 79 (18 solution, 60 counterexamples)
[08/09 16:26:32]  Generator returned sat in 0.816817 secs.
[08/09 16:26:32]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:33]  Verifer returned unsat in 0.334946 secs.
[08/09 16:26:33]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:33]  --------------------------------------------------------------------------------
[08/09 16:26:33]  Iteration: 80 (19 solution, 60 counterexamples)
[08/09 16:26:35]  Generator returned sat in 0.478618 secs.
[08/09 16:26:35]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:35]  Verifer returned unsat in 0.202525 secs.
[08/09 16:26:35]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:35]  --------------------------------------------------------------------------------
[08/09 16:26:35]  Iteration: 81 (20 solution, 60 counterexamples)
[08/09 16:26:37]  Generator returned sat in 0.471623 secs.
[08/09 16:26:37]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:38]  Verifer returned unsat in 0.325588 secs.
[08/09 16:26:38]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:38]  --------------------------------------------------------------------------------
[08/09 16:26:38]  Iteration: 82 (21 solution, 60 counterexamples)
[08/09 16:26:40]  Generator returned sat in 0.475255 secs.
[08/09 16:26:40]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:40]  Verifer returned unsat in 0.264580 secs.
[08/09 16:26:40]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:40]  --------------------------------------------------------------------------------
[08/09 16:26:40]  Iteration: 83 (22 solution, 60 counterexamples)
[08/09 16:26:42]  Generator returned sat in 0.611760 secs.
[08/09 16:26:42]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:43]  Verifer returned unsat in 0.293222 secs.
[08/09 16:26:43]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:43]  --------------------------------------------------------------------------------
[08/09 16:26:43]  Iteration: 84 (23 solution, 60 counterexamples)
[08/09 16:26:45]  Generator returned sat in 0.479955 secs.
[08/09 16:26:45]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:45]  Verifer returned unsat in 0.337708 secs.
[08/09 16:26:45]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:45]  --------------------------------------------------------------------------------
[08/09 16:26:45]  Iteration: 85 (24 solution, 60 counterexamples)
[08/09 16:26:47]  Generator returned sat in 0.475148 secs.
[08/09 16:26:47]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:48]  Verifer returned unsat in 0.428513 secs.
[08/09 16:26:48]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:48]  --------------------------------------------------------------------------------
[08/09 16:26:48]  Iteration: 86 (25 solution, 60 counterexamples)
[08/09 16:26:50]  Generator returned sat in 0.458448 secs.
[08/09 16:26:50]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:50]  Verifer returned unsat in 0.344091 secs.
[08/09 16:26:50]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:50]  --------------------------------------------------------------------------------
[08/09 16:26:50]  Iteration: 87 (26 solution, 60 counterexamples)
[08/09 16:26:53]  Generator returned sat in 0.632416 secs.
[08/09 16:26:53]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:53]  Verifer returned unsat in 0.477048 secs.
[08/09 16:26:53]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:53]  --------------------------------------------------------------------------------
[08/09 16:26:53]  Iteration: 88 (27 solution, 60 counterexamples)
[08/09 16:26:55]  Generator returned sat in 0.480435 secs.
[08/09 16:26:55]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:56]  Verifer returned unsat in 0.357220 secs.
[08/09 16:26:56]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:56]  --------------------------------------------------------------------------------
[08/09 16:26:56]  Iteration: 89 (28 solution, 60 counterexamples)
[08/09 16:26:58]  Generator returned sat in 0.487976 secs.
[08/09 16:26:58]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:58]  Verifer returned unsat in 0.472601 secs.
[08/09 16:26:58]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:26:58]  --------------------------------------------------------------------------------
[08/09 16:26:58]  Iteration: 90 (29 solution, 60 counterexamples)
[08/09 16:27:00]  Generator returned sat in 0.476094 secs.
[08/09 16:27:01]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:01]  Verifer returned unsat in 0.361165 secs.
[08/09 16:27:01]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:01]  --------------------------------------------------------------------------------
[08/09 16:27:01]  Iteration: 91 (30 solution, 60 counterexamples)
[08/09 16:27:03]  Generator returned sat in 0.831815 secs.
[08/09 16:27:03]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:05]  Improved number of small numbers from 44 to 78 out of a max of 109
[08/09 16:27:05]  Verifer returned sat in 1.248596 secs.
[08/09 16:27:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     977.484863     377.484792  1265.318939   977.484863    0.046387   377.484792        0.0  600.000072      600.000072     4.0       377.484792            -1             -1
1     977.484863     377.484863  1265.318939   977.484863    0.046387   377.484863        0.0  600.000000      500.000072     4.0       377.484792         False          False
2     977.484863     477.484863  1265.318939   977.484863    0.046387   477.484863        0.0  500.000000      400.000072     5.0       377.484792         False          False
3     977.531250     577.484792  1265.318939   977.531250  500.046387   577.484792        0.0  400.046458      300.046458     6.0       377.484792         False          False
4     977.531250     677.484863  1265.318939   977.531250  200.000000   677.484863        0.0  300.046387      200.046458     7.0       377.484792         False          False
5     977.531250     875.762451  1265.318939   977.531250  300.000000   875.762451        0.0  101.768799      100.046458     8.0       377.484792         False          False
6    1274.040039     977.484792  1265.318939  1274.040039  398.277588   977.484792        0.0  296.555247      296.555247     9.0       377.484792         False          False
7    1377.623586     977.577148  1265.318939  1377.623586  400.138794   977.577148        0.0  400.046437      300.138794     2.0      1377.623586          True           True
8    1377.623586    1177.484619  1265.318939  1377.623586  300.092285  1177.484619        0.0  200.138966      200.138794     3.0      1377.623586         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:27:05]  --------------------------------------------------------------------------------
[08/09 16:27:05]  Iteration: 92 (30 solution, 61 counterexamples)
[08/09 16:27:08]  Generator returned sat in 0.689392 secs.
[08/09 16:27:08]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:08]  Improved number of small numbers from 70 to 78 out of a max of 109
[08/09 16:27:08]  Verifer returned sat in 0.786973 secs.
[08/09 16:27:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     977.484863     377.484792  1265.318939   977.484863    0.046143   377.484792        0.0  600.000072      600.000072     8.0       377.484792            -1             -1
1     977.484863     377.484863  1265.318939   977.484863    0.046143   377.484863        0.0  600.000000      500.000072     5.0       377.484792         False          False
2     977.484863     477.484863  1265.318939   977.484863    0.046387   477.484863        0.0  500.000000      400.000072     5.0       377.484792         False          False
3     977.531250     577.484792  1265.318939   977.531250  500.046387   577.484792        0.0  400.046458      300.046458     6.0       377.484792         False          False
4     977.531250     677.484863  1265.318939   977.531250  200.000000   677.484863        0.0  300.046387      200.046458     7.0       377.484792         False          False
5     977.531250     876.762451  1265.318939   977.531250  300.000000   876.762451        0.0  100.768799      100.046458     8.0       377.484792         False          False
6    1276.040039     977.484792  1265.318939  1276.040039  399.277588   977.484792        0.0  298.555247      298.555247     9.0       377.484792         False          False
7    1377.623586     977.577148  1265.318939  1377.623586  400.138794   977.577148        0.0  400.046437      300.138794     2.0      1377.623586          True           True
8    1377.623586    1177.484619  1265.318939  1377.623586  300.092285  1177.484619        0.0  200.138966      200.138794     3.0      1377.623586         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:27:09]  --------------------------------------------------------------------------------
[08/09 16:27:09]  Iteration: 93 (30 solution, 62 counterexamples)
[08/09 16:27:12]  Generator returned sat in 0.990801 secs.
[08/09 16:27:12]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:12]  Verifer returned unsat in 0.345449 secs.
[08/09 16:27:12]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:12]  --------------------------------------------------------------------------------
[08/09 16:27:12]  Iteration: 94 (31 solution, 62 counterexamples)
[08/09 16:27:14]  Generator returned sat in 0.505385 secs.
[08/09 16:27:14]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:15]  Verifer returned unsat in 0.354216 secs.
[08/09 16:27:15]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:15]  --------------------------------------------------------------------------------
[08/09 16:27:15]  Iteration: 95 (32 solution, 62 counterexamples)
[08/09 16:27:17]  Generator returned sat in 0.535081 secs.
[08/09 16:27:17]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:17]  Verifer returned unsat in 0.331735 secs.
[08/09 16:27:17]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:17]  --------------------------------------------------------------------------------
[08/09 16:27:17]  Iteration: 96 (33 solution, 62 counterexamples)
[08/09 16:27:19]  Generator returned sat in 0.505750 secs.
[08/09 16:27:20]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:20]  Verifer returned unsat in 0.258122 secs.
[08/09 16:27:20]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:20]  --------------------------------------------------------------------------------
[08/09 16:27:20]  Iteration: 97 (34 solution, 62 counterexamples)
[08/09 16:27:23]  Generator returned sat in 1.544270 secs.
[08/09 16:27:23]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:23]  Verifer returned unsat in 0.292634 secs.
[08/09 16:27:23]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:23]  --------------------------------------------------------------------------------
[08/09 16:27:23]  Iteration: 98 (35 solution, 62 counterexamples)
[08/09 16:27:26]  Generator returned sat in 0.517031 secs.
[08/09 16:27:26]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:26]  Verifer returned unsat in 0.384862 secs.
[08/09 16:27:26]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:26]  --------------------------------------------------------------------------------
[08/09 16:27:26]  Iteration: 99 (36 solution, 62 counterexamples)
[08/09 16:27:28]  Generator returned sat in 0.537218 secs.
[08/09 16:27:28]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:29]  Verifer returned unsat in 0.445925 secs.
[08/09 16:27:29]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:29]  --------------------------------------------------------------------------------
[08/09 16:27:29]  Iteration: 100 (37 solution, 62 counterexamples)
[08/09 16:27:31]  Generator returned sat in 0.498581 secs.
[08/09 16:27:31]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:32]  Verifer returned unsat in 0.315229 secs.
[08/09 16:27:32]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:32]  --------------------------------------------------------------------------------
[08/09 16:27:32]  Iteration: 101 (38 solution, 62 counterexamples)
[08/09 16:27:34]  Generator returned sat in 0.538052 secs.
[08/09 16:27:34]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:34]  Improved number of small numbers from 99 to 109 out of a max of 109
[08/09 16:27:34]  Verifer returned sat in 0.599552 secs.
[08/09 16:27:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1277.623535     777.669434  1369.365234  1277.623535  396.184326   777.669434        0.0  499.954102      499.954102     8.0       777.669434            -1             -1
1    1277.623535     777.715576  1369.365234  1277.623535  396.184326   777.715576        0.0  499.907959      399.954102     8.0       777.669434         False           True
2    1277.623535     881.392822  1369.365234  1277.623535  396.184326   881.392822        0.0  396.230713      299.954102     4.0       777.669434          True           True
3    1277.623535     977.669434  1369.365234  1277.623535  396.184570   977.669434        0.0  299.954102      199.954102     5.0       777.669434         False          False
4    1277.623535    1177.669434  1369.365234  1277.623535  200.000000  1177.669434        0.0   99.954102       99.954102     6.0       777.669434         False          False
5    1577.623291    1277.623535  1369.365234  1577.623291  399.953857  1277.623535        0.0  299.999756      299.953857     7.0       777.669434         False          False
6    1677.715820    1277.669434  1369.365234  1677.715820  400.092285  1277.669434        0.0  400.046387      300.046387     2.0      1677.715820          True           True
7    1677.715820    1427.669434  1369.365234  1677.715820  300.000000  1427.669434        0.0  250.046387      200.046387     3.0      1677.715820         False          False
8    1677.715820    1577.669434  1369.365234  1677.715820  250.000000  1577.669434        0.0  100.046387      100.046387     3.0      1677.715820         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:27:35]  --------------------------------------------------------------------------------
[08/09 16:27:35]  Iteration: 102 (38 solution, 63 counterexamples)
[08/09 16:27:37]  Generator returned sat in 0.547956 secs.
[08/09 16:27:37]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:38]  Improved number of small numbers from 70 to 109 out of a max of 109
[08/09 16:27:38]  Verifer returned sat in 0.274200 secs.
[08/09 16:27:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1277.700439     777.700439  1369.365234  1277.700439  396.184082   777.700439        0.0  500.000000      500.000000     9.0       777.700439            -1             -1
1    1277.700439     777.708008  1369.365234  1277.700439  396.184082   777.708008        0.0  499.992432      400.000000     9.0       777.700439         False           True
2    1277.700439     880.661865  1369.365234  1277.700439  396.184082   880.661865        0.0  397.038574      300.000000     4.0       777.700439          True           True
3    1277.700439     977.700439  1369.365234  1277.700439  396.184570   977.700439        0.0  300.000000      200.000000     5.0       777.700439         False          False
4    1277.700439    1177.700195  1369.365234  1277.700439  200.000000  1177.700195        0.0  100.000244      100.000000     6.0       777.700439         False          False
5    1577.692383    1277.700439  1369.365234  1577.692383  399.992188  1277.700439        0.0  299.991943      299.991943     7.0       777.700439         False          False
6    1677.715820    1277.708008  1369.365234  1677.715820  400.015381  1277.708008        0.0  400.007812      300.015381     2.0      1677.715820          True           True
7    1677.715820    1427.669189  1369.365234  1677.715820  300.007568  1427.669189        0.0  250.046631      200.015381     3.0      1677.715820         False          False
8    1677.715820    1577.700195  1369.365234  1677.715820  249.968994  1577.700195        0.0  100.015625      100.015381     3.0      1677.715820         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:27:38]  --------------------------------------------------------------------------------
[08/09 16:27:38]  Iteration: 103 (38 solution, 64 counterexamples)
[08/09 16:27:40]  Generator returned sat in 0.662863 secs.
[08/09 16:27:41]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:27:41]  Improved number of small numbers from 99 to 109 out of a max of 109
[08/09 16:27:41]  Verifer returned sat in 0.737508 secs.
[08/09 16:27:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1377.700195     777.700195  1919.378418  1377.700195    0.022705   777.700195        0.0  600.000000      600.000000     9.0       777.700195            -1             -1
1    1377.700195     877.677490  1919.378418  1377.700195    0.022949   877.677490        0.0  500.022705      500.000000     8.0       777.700195         False           True
2    1377.700195     877.700439  1919.378418  1377.700195    0.022949   877.700439        0.0  499.999756      400.000000     3.0       777.700195          True           True
3    1377.700195     977.700195  1919.378418  1377.700195    0.022949   977.700195        0.0  400.000000      300.000000     4.0       777.700195         False          False
4    1377.700195    1127.700439  1919.378418  1377.700195  200.000000  1127.700439        0.0  249.999756      200.000000     5.0       777.700195         False          False
5    1377.723389    1276.838135  1919.378418  1377.723389  250.022949  1276.838135        0.0  100.885254      100.023193     6.0       777.700195         False          False
6    1675.975830    1377.700195  1919.378418  1675.975830  399.137695  1377.700195        0.0  298.275635      298.275635     7.0       777.700195         False          False
7    1777.769043    1377.746338  1919.378418  1777.769043  400.068848  1377.746338        0.0  400.022705      300.068848     2.0      1777.769043          True           True
8    1777.769043    1577.700195  1919.378418  1777.769043  250.045898  1577.700195        0.0  200.068848      200.068848     3.0      1777.769043         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:27:42]  --------------------------------------------------------------------------------
[08/09 16:27:42]  Iteration: 104 (38 solution, 65 counterexamples)
[08/09 16:27:51]  Generator returned sat in 6.955904 secs.
[08/09 16:27:51]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:27:51]  Improved gap from 1/800 to 14.0625
[08/09 16:27:52]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:27:52]  Verifer returned sat in 0.951970 secs.
[08/09 16:27:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     942.774170     842.773926  1919.378418   942.774170    0.005127   842.773926        0.0  100.000244      100.000244     9.0       842.773926            -1             -1
1    1242.773926     942.773926  1919.378418  1242.773926  400.000000   942.773926        0.0  300.000000      300.000000     2.0       842.773926         False           True
2    1377.773926     942.773926  1919.378418  1377.773926  435.000000   942.773926        0.0  435.000000      335.000000     2.0       842.773926         False          False
3    1377.773926    1142.773926  1919.378418  1377.773926  435.000000  1142.773926        0.0  235.000000      235.000000     3.0       842.773926         False          False
4    1377.773926    1242.773926  1919.378418  1377.773926  218.000000  1242.773926        0.0  135.000000      135.000000     4.0       842.773926         False          False
5    1377.773926    1242.773926  1919.378418  1377.773926  109.500000  1242.773926        0.0  135.000000       35.000000     4.0       842.773926         False          False
6    1377.773926    1363.711426  1984.378418  1377.773926   55.250000  1363.711426        0.0   14.062500        0.000000     5.0       842.773926         False          False
7    1391.836426    1377.773926  2070.315918  1391.836426   28.125000  1377.773926        0.0   14.062500        0.000000     6.0       842.773926         False          False
8    1391.836426    1391.836426  2070.315918  1391.836426    0.010000  1391.836426        0.0    0.000000     -100.000000     2.0      1391.836426          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:27:52]  --------------------------------------------------------------------------------
[08/09 16:27:52]  Iteration: 105 (38 solution, 66 counterexamples)
[08/09 16:27:55]  Generator returned sat in 0.844726 secs.
[08/09 16:27:55]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:27:56]  Improved gap from 1/400 to 14.0625
[08/09 16:27:56]  Improved number of small numbers from 61 to 110 out of a max of 110
[08/09 16:27:56]  Verifer returned sat in 1.509517 secs.
[08/09 16:27:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     944.989014     544.991211  1919.378418   944.989014  300.004883   544.991211        0.0  399.997803      299.997803     3.0       544.991211            -1             -1
1     944.989014     744.991211  1919.378418   944.989014  300.005127   744.991211        0.0  199.997803      199.997803     2.0       544.991211         False          False
2    1044.993896     745.923828  1919.378418  1044.993896  300.002686   745.923828        0.0  299.070068      200.002686     3.0      1044.993896         False          False
3    1180.923828     944.991211  1919.378418  1180.923828  435.000000   944.991211        0.0  235.932617      235.932617     2.0      1044.993896         False          False
4    1180.923828    1044.989014  1919.378418  1180.923828  218.000000  1044.989014        0.0  135.934814      135.932617     3.0      1044.993896         False          False
5    1180.923828    1044.991211  1919.378418  1180.923828  109.500000  1044.991211        0.0  135.932617       35.932617     4.0      1044.993896         False          False
6    1180.923828    1166.861328  1983.445801  1180.923828   55.250000  1166.861328        0.0   14.062500        0.000000     4.0      1044.993896         False           True
7    1194.986328    1180.923828  2069.383301  1194.986328   28.125000  1180.923828        0.0   14.062500        0.000000     5.0      1044.993896         False           True
8    1194.986328    1194.986328  2155.320801  1194.986328    0.010000  1194.986328        0.0    0.000000      -14.062500     2.0      1194.986328          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:27:57]  --------------------------------------------------------------------------------
[08/09 16:27:57]  Iteration: 106 (38 solution, 67 counterexamples)
[08/09 16:28:00]  Generator returned sat in 1.631038 secs.
[08/09 16:28:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:28:01]  Improved gap from 4621/409600 to 0
[08/09 16:28:01]  Improved number of small numbers from 67 to 110 out of a max of 110
[08/09 16:28:01]  Verifer returned sat in 0.608028 secs.
[08/09 16:28:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     564.373535     164.827881  1767.774902   564.373535    0.045898   164.827881        0.0  399.545654      299.954102     2.0       164.827881            -1             -1
1     564.373535     364.419434  1767.774902   564.373535  399.500000   364.419434        0.0  199.954102      199.954102     2.0       164.827881         False          False
2     763.873779     464.419434  1767.774902   763.873779  399.454346   464.419434        0.0  299.454346      299.454346     3.0       763.873779         False          False
3     764.465088     564.419189  1767.774902   764.465088  300.045654   564.419189        0.0  200.045898      200.045654     2.0       764.465088         False          False
4     764.465088     664.419434  1767.774902   764.465088    0.500000   664.419434        0.0  100.045654      100.045654     3.0       764.465088         False          False
5     764.465088     763.919434  1767.774902   764.465088    0.500000   763.919434        0.0    0.545654        0.045654     3.0       764.465088         False          False
6     764.465088     764.419434  1867.729004   764.465088    0.500000   764.419434        0.0    0.045654       -0.000244     4.0       764.465088         False          False
7     764.919434     764.465332  1967.274902   764.919434    0.500000   764.465332        0.0    0.454102        0.000000     1.0       764.465088         False           True
8     764.965332     764.965088  1967.275146   764.965332    0.500000   764.965088        0.0    0.000244      -99.953857     1.0       764.465088         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:02]  --------------------------------------------------------------------------------
[08/09 16:28:02]  Iteration: 107 (38 solution, 68 counterexamples)
[08/09 16:28:11]  Generator returned sat in 7.524358 secs.
[08/09 16:28:11]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:12]  Improved gap from 3909/8192 to 0
[08/09 16:28:12]  Improved number of small numbers from 52 to 110 out of a max of 110
[08/09 16:28:12]  Verifer returned sat in 0.832467 secs.
[08/09 16:28:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     -22.616455    -322.570557  1767.774658   -22.616455  300.045654  -322.570557        0.0  299.954102      299.954102     2.0      -322.570557            -1             -1
1     -22.547607    -222.570557  1767.774658   -22.547607  300.022949  -222.570557        0.0  200.022949      200.022949     2.0       -22.547607         False          False
2      78.452148    -222.570557  1767.774658    78.452148  301.022705  -222.570557        0.0  301.022705      201.022705     2.0       -22.547607         False          False
3      78.452148     -22.593262  1767.774658    78.452148  301.022705   -22.593262        0.0  101.045410      101.022705     3.0       -22.547607         False          False
4      78.452148     -22.570557  1767.774658    78.452148    1.000000   -22.570557        0.0  101.022705        1.022705     4.0       -22.547607         False          False
5      78.452148      77.429443  1866.751953    78.452148    1.000000    77.429443        0.0    1.022705        0.000000     4.0       -22.547607         False          False
6      78.452148      78.452148  1966.729248    78.452148    1.000000    78.452148        0.0    0.000000       -0.022705     5.0       -22.547607         False          False
7      80.452148      78.475098  2064.751953    80.452148    2.000000    78.475098        0.0    1.977051        0.000000     1.0        80.452148          True           True
8      80.452148      80.452148  2164.751953    80.452148    1.000000    80.452148        0.0    0.000000        0.000000     2.0        80.452148         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:12]  --------------------------------------------------------------------------------
[08/09 16:28:12]  Iteration: 108 (38 solution, 69 counterexamples)
[08/09 16:28:15]  Generator returned sat in 1.133816 secs.
[08/09 16:28:15]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:16]  Improved gap from 0 to 0
[08/09 16:28:16]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:28:16]  Verifer returned sat in 0.787293 secs.
[08/09 16:28:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     485.145020     485.122314  1767.774658   485.145020  300.045654   485.122314        0.0    0.022705       -0.022949     3.0       485.122314            -1             -1
1     785.145264     585.167969  1767.774658   785.145264  300.022949   585.167969        0.0  199.977295      199.977295     1.0       785.145264         False          False
2     885.190918     585.167969  1767.774658   885.190918  300.022949   585.167969        0.0  300.022949      200.022949     1.0       785.145264         False          False
3     885.190918     785.167969  1767.774658   885.190918  300.022949   785.167969        0.0  100.022949      100.022949     2.0       785.145264         False          False
4     885.190918     785.190918  1767.774658   885.190918    1.000000   785.190918        0.0  100.000000        0.022949     3.0       785.145264         False          False
5     885.190918     885.167969  1867.751709   885.190918    1.000000   885.167969        0.0    0.022949        0.000000     4.0       785.145264         False          False
6     886.167969     885.190918  1966.774414   886.167969    1.000000   885.190918        0.0    0.977051       -0.000244     5.0       785.145264         False          False
7     887.690918     886.668213  2065.251709   887.690918    2.500000   886.668213        0.0    1.022705        0.000000     1.0       887.690918          True           True
8     887.690918     887.690918  2165.229004   887.690918    1.000000   887.690918        0.0    0.000000       -0.022705     2.0       887.690918         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:17]  --------------------------------------------------------------------------------
[08/09 16:28:17]  Iteration: 109 (38 solution, 70 counterexamples)
[08/09 16:28:20]  Generator returned sat in 0.999809 secs.
[08/09 16:28:20]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:20]  Improved gap from 0 to 1.5625
[08/09 16:28:20]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:28:20]  Verifer returned sat in 0.718907 secs.
[08/09 16:28:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -815.571777    -815.617188  1767.774414  -815.571777  353.636475  -815.617188        0.0    0.045410        0.045410     9.0      -815.617188            -1             -1
1    -462.026367    -715.617188  1767.774414  -462.026367  353.590820  -715.617188        0.0  253.590820      253.590820     1.0      -462.026367         False           True
2    -315.617188    -714.708496  1767.774414  -315.617188  400.000000  -714.708496        0.0  399.091309      300.000000     2.0      -462.026367         False          False
3    -314.708496    -515.617432  1767.774414  -314.708496  400.000000  -515.617432        0.0  200.908936      200.908691     3.0      -462.026367         False          False
4    -314.708496    -462.072021  1767.774414  -314.708496    1.000000  -462.072021        0.0  147.363525      100.908691     4.0      -462.026367         False          False
5    -314.708496    -315.662842  1767.774414  -314.708496    1.000000  -315.662842        0.0    0.954346        0.908691     4.0      -462.026367         False          False
6    -314.662842    -315.617188  1865.837158  -314.662842    1.000000  -315.617188        0.0    0.954346       -0.982910     5.0      -462.026367         False          False
7    -312.117188    -313.679688  1964.274414  -312.117188    3.500000  -313.679688        0.0    1.562500        0.000000     1.0      -312.117188          True           True
8    -312.117188    -312.117188  1964.274414  -312.117188    1.000000  -312.117188        0.0    0.000000     -100.000000     2.0      -312.117188         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:21]  --------------------------------------------------------------------------------
[08/09 16:28:21]  Iteration: 110 (38 solution, 71 counterexamples)
[08/09 16:28:24]  Generator returned sat in 0.960615 secs.
[08/09 16:28:24]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:25]  Improved gap from 7935/4096 to 1.5625
[08/09 16:28:25]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/09 16:28:25]  Verifer returned sat in 0.810937 secs.
[08/09 16:28:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1161.848877   -1461.825928  1767.774414 -1161.848877  400.000000 -1461.825928        0.0  299.977051      299.977051     8.0     -1461.825928            -1             -1
1   -1061.848877   -1361.825928  1767.774414 -1061.848877  399.977051 -1361.825928        0.0  299.977051      299.977051     2.0     -1061.848877         False           True
2    -961.848877   -1361.825928  1767.774414  -961.848877  399.977051 -1361.825928        0.0  399.977051      299.977051     2.0     -1061.848877         False          False
3    -961.848877   -1161.825928  1767.774414  -961.848877  399.977051 -1161.825928        0.0  199.977051      199.977051     3.0     -1061.848877         False          False
4    -961.848877   -1061.825928  1767.774414  -961.848877    1.000000 -1061.825928        0.0   99.977051       99.977051     3.0     -1061.848877         False          False
5    -961.848877   -1061.802979  1767.797363  -961.848877    1.000000 -1061.802979        0.0   99.954102        0.000000     4.0     -1061.848877         False          False
6    -961.848877    -961.848877  1866.234863  -961.848877    1.000000  -961.848877        0.0    0.000000       -1.562500     5.0     -1061.848877         False          False
7    -957.848877    -959.411377  1963.797363  -957.848877    4.000000  -959.411377        0.0    1.562500        0.000000     1.0      -957.848877          True           True
8    -957.848877    -957.848877  1963.797363  -957.848877    1.000000  -957.848877        0.0    0.000000     -100.000000     2.0      -957.848877         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:25]  --------------------------------------------------------------------------------
[08/09 16:28:25]  Iteration: 111 (38 solution, 72 counterexamples)
[08/09 16:28:28]  Generator returned sat in 1.045118 secs.
[08/09 16:28:28]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:29]  Improved gap from 8565/8192 to 48.4375
[08/09 16:28:29]  Improved number of small numbers from 51 to 110 out of a max of 110
[08/09 16:28:29]  Verifer returned sat in 0.659410 secs.
[08/09 16:28:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1531.240479   -1883.666748  2260.694824 -1531.240479  348.460205 -1883.666748        0.0  352.426270      252.426514     9.0     -1883.666748            -1             -1
1   -1531.240479   -1683.666992  2260.694824 -1531.240479  348.437256 -1683.666992        0.0  152.426514      152.426514     3.0     -1531.240479         False           True
2   -1335.229492   -1683.666992  2260.694824 -1335.229492  348.437500 -1683.666992        0.0  348.437500      248.437500     3.0     -1531.240479         False          False
3   -1335.229492   -1531.263184  2260.694824 -1335.229492  348.437500 -1531.263184        0.0  196.033691      148.437500     4.0     -1531.240479         False          False
4   -1335.229492   -1383.689941  2260.694824 -1335.229492    1.000000 -1383.689941        0.0   48.460449       48.437500     3.0     -1531.240479         False          False
5   -1335.229492   -1383.666992  2312.257324 -1335.229492    1.000000 -1383.666992        0.0   48.437500        0.000000     4.0     -1531.240479         False          False
6   -1335.229492   -1335.229492  2363.819824 -1335.229492    1.000000 -1335.229492        0.0    0.000000      -48.437500     5.0     -1531.240479         False          False
7   -1233.712646   -1286.791992  2410.740479 -1233.712646  101.516846 -1286.791992        0.0   53.079346        0.000000     1.0     -1233.712646          True           True
8   -1233.712646   -1233.712646  2410.740479 -1233.712646    1.000000 -1233.712646        0.0    0.000000     -100.000000     2.0     -1233.712646         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:30]  --------------------------------------------------------------------------------
[08/09 16:28:30]  Iteration: 112 (38 solution, 73 counterexamples)
[08/09 16:28:35]  Generator returned sat in 3.623623 secs.
[08/09 16:28:35]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:37]  Improved gap from 373/16384 to 14.0625
[08/09 16:28:37]  Improved number of small numbers from 50 to 110 out of a max of 110
[08/09 16:28:37]  Verifer returned sat in 1.774240 secs.
[08/09 16:28:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1963.716797   -2163.694092  2297.024170 -1963.716797    0.045410 -2163.694092        0.0  199.977295       99.977295     3.0     -2163.694092            -1             -1
1   -1963.716797   -2063.694092  2297.024170 -1963.716797    0.022949 -2063.694092        0.0   99.977295       -0.022705     2.0     -1963.716797         False          False
2   -1575.671143   -1963.694092  2297.024170 -1575.671143  488.022949 -1963.694092        0.0  388.022949      288.022949     1.0     -1963.716797         False          False
3   -1575.671143   -1863.694092  2297.024170 -1575.671143  388.000000 -1863.694092        0.0  288.022949      188.022949     2.0     -1575.671143         False          False
4   -1575.671143   -1685.415771  2297.024170 -1575.671143  195.000000 -1685.415771        0.0  109.744629       88.022949     3.0     -1575.671143         False          False
5   -1575.671143   -1599.750732  2308.978516 -1575.671143   98.500000 -1599.750732        0.0   24.079590       -0.022705     4.0     -1575.671143         False          False
6   -1549.500732   -1575.648438  2382.830811 -1549.500732   50.250000 -1575.648438        0.0   26.147705        0.000000     1.0     -1575.671143         False          False
7   -1549.500732   -1549.500732  2468.768311 -1549.500732   26.125000 -1549.500732        0.0    0.000000      -14.062500     2.0     -1575.671143         False          False
8   -1535.438232   -1535.438232  2468.768311 -1535.438232   14.062500 -1535.438232        0.0    0.000000     -100.000000     1.0     -1575.671143         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:38]  --------------------------------------------------------------------------------
[08/09 16:28:38]  Iteration: 113 (38 solution, 74 counterexamples)
[08/09 16:28:43]  Generator returned sat in 3.395685 secs.
[08/09 16:28:43]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:43]  Improved gap from 93/4096 to 48.4375
[08/09 16:28:44]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:28:44]  Verifer returned sat in 0.577640 secs.
[08/09 16:28:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1541.372314   -1836.866211  1970.196533 -1541.372314    0.045410 -1836.866211        0.0  295.493896      195.494141     1.0     -1836.866211            -1             -1
1   -1541.372314   -1636.866455  1970.196533 -1541.372314  295.448486 -1636.866455        0.0   95.494141       95.494141     2.0     -1836.866211         False          False
2   -1341.463135   -1583.832275  1970.196533 -1341.463135  295.403320 -1583.832275        0.0  242.369141      195.403320     3.0     -1341.463135          True           True
3   -1288.428955   -1475.178955  1970.196533 -1288.428955  295.403320 -1475.178955        0.0  186.750000      148.437500     2.0     -1341.463135         False           True
4   -1288.428955   -1341.508545  1970.196533 -1288.428955    1.000000 -1341.508545        0.0   53.079590       48.437500     3.0     -1341.463135         False           True
5   -1288.428955   -1336.866455  2021.759033 -1288.428955    1.000000 -1336.866455        0.0   48.437500        0.000000     3.0     -1341.463135         False           True
6   -1288.428955   -1288.428955  2073.321533 -1288.428955    1.000000 -1288.428955        0.0    0.000000      -48.437500     4.0     -1341.463135         False           True
7   -1191.553955   -1239.991455  2124.884033 -1191.553955   96.875000 -1239.991455        0.0   48.437500        0.000000     1.0     -1191.553955          True           True
8   -1191.553955   -1191.553955  2176.446289 -1191.553955    1.000000 -1191.553955        0.0    0.000000      -48.437744     2.0     -1191.553955         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:44]  --------------------------------------------------------------------------------
[08/09 16:28:44]  Iteration: 114 (38 solution, 75 counterexamples)
[08/09 16:28:49]  Generator returned sat in 2.504708 secs.
[08/09 16:28:49]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:49]  Improved gap from 751/16 to 48.4375
[08/09 16:28:49]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:28:49]  Verifer returned sat in 0.616020 secs.
[08/09 16:28:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1078.345215   -1378.481445  1974.838379 -1078.345215  300.135986 -1378.481445        0.0  300.136230      263.283936     2.0     -1378.481445            -1             -1
1   -1078.345215   -1241.629395  1974.838379 -1078.345215  300.090820 -1241.629395        0.0  163.284180      163.283936     3.0     -1078.345215         False          False
2    -941.584229   -1190.066895  1974.838379  -941.584229  300.045166 -1190.066895        0.0  248.482666      200.044922     4.0      -941.584229         False           True
3    -888.549805   -1078.299805  1974.838379  -888.549805  301.517090 -1078.299805        0.0  189.750000      153.079346     2.0      -941.584229         False           True
4    -888.549805    -941.629395  1974.838379  -888.549805    1.000000  -941.629395        0.0   53.079590       53.079346     3.0      -941.584229         False          False
5    -888.549805    -936.987549  2021.759033  -888.549805    1.000000  -936.987549        0.0   48.437744        0.000000     3.0      -941.584229         False           True
6    -888.549805    -888.549805  2073.321533  -888.549805    1.000000  -888.549805        0.0    0.000000      -48.437500     4.0      -941.584229         False           True
7    -791.674805    -840.112305  2124.884033  -791.674805   96.875000  -840.112305        0.0   48.437500        0.000000     1.0      -791.674805          True           True
8    -791.674805    -791.674805  2124.884033  -791.674805    1.000000  -791.674805        0.0    0.000000     -100.000000     2.0      -791.674805         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:50]  --------------------------------------------------------------------------------
[08/09 16:28:50]  Iteration: 115 (38 solution, 76 counterexamples)
[08/09 16:28:53]  Generator returned sat in 1.303817 secs.
[08/09 16:28:54]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:54]  Improved gap from 93/4096 to 48.4375
[08/09 16:28:54]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:28:54]  Verifer returned sat in 0.418522 secs.
[08/09 16:28:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -994.663818   -1390.021729  2023.230957  -994.663818    0.045410 -1390.021729        0.0  395.357910       395.35791     3.0     -1390.021729            -1             -1
1    -994.663818   -1290.021729  2023.230957  -994.663818    0.022705 -1290.021729        0.0  295.357910       295.35791     3.0      -994.663818         False          False
2    -941.584229   -1290.021729  2023.230957  -941.584229  348.437500 -1290.021729        0.0  348.437500       248.43750     3.0      -994.663818         False          False
3    -941.584229   -1131.334229  2023.230957  -941.584229  348.437500 -1131.334229        0.0  189.750000       148.43750     4.0      -994.663818         False          False
4    -941.584229    -994.686523  2023.230957  -941.584229    1.000000  -994.686523        0.0   53.102295        48.43750     5.0      -994.663818         False          False
5    -941.584229    -990.021729  2074.793457  -941.584229    1.000000  -990.021729        0.0   48.437500         0.00000     4.0      -994.663818         False           True
6    -941.584229    -941.584229  2126.355957  -941.584229    1.000000  -941.584229        0.0    0.000000       -48.43750     5.0      -994.663818         False          False
7    -844.709229    -893.146729  2177.918457  -844.709229   96.875000  -893.146729        0.0   48.437500         0.00000     1.0      -844.709229          True           True
8    -844.709229    -844.709229  2177.918457  -844.709229    1.000000  -844.709229        0.0    0.000000      -100.00000     2.0      -844.709229         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:54]  --------------------------------------------------------------------------------
[08/09 16:28:54]  Iteration: 116 (38 solution, 77 counterexamples)
[08/09 16:28:58]  Generator returned sat in 1.070363 secs.
[08/09 16:28:58]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:58]  Improved gap from 775/16 to 48.4375
[08/09 16:28:58]  Improved number of small numbers from 66 to 110 out of a max of 110
[08/09 16:28:58]  Verifer returned sat in 0.551575 secs.
[08/09 16:28:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1189.584717   -1289.629883  2023.230957 -1189.584717    0.045166 -1289.629883        0.0  100.045166      100.045166     9.0     -1289.629883            -1             -1
1   -1189.584717   -1189.629883  2023.230957 -1189.584717    0.045410 -1189.629883        0.0    0.045166        0.045166     2.0     -1289.629883         False           True
2    -841.192383   -1189.629883  2023.230957  -841.192383  348.437500 -1189.629883        0.0  348.437500      248.437500     2.0     -1289.629883         False          False
3    -841.192383   -1028.942383  2023.230957  -841.192383  348.437500 -1028.942383        0.0  187.750000      148.437500     2.0     -1289.629883         False          False
4    -841.192383    -889.675293  2023.230957  -841.192383    1.000000  -889.675293        0.0   48.482910       48.437500     3.0     -1289.629883         False          False
5    -841.192383    -889.629883  2074.793457  -841.192383    1.000000  -889.629883        0.0   48.437500        0.000000     4.0     -1289.629883         False          False
6    -841.192383    -841.192383  2126.355957  -841.192383    1.000000  -841.192383        0.0    0.000000      -48.437500     5.0     -1289.629883         False          False
7    -744.317383    -792.754883  2177.918457  -744.317383   96.875000  -792.754883        0.0   48.437500        0.000000     1.0      -744.317383          True           True
8    -744.317383    -744.317383  2177.918457  -744.317383    1.000000  -744.317383        0.0    0.000000     -100.000000     2.0      -744.317383         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:59]  --------------------------------------------------------------------------------
[08/09 16:28:59]  Iteration: 117 (38 solution, 78 counterexamples)
[08/09 16:29:02]  Generator returned sat in 1.334923 secs.
[08/09 16:29:02]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:29:03]  Improved gap from 775/16 to 48.4375
[08/09 16:29:03]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/09 16:29:03]  Verifer returned sat in 0.601514 secs.
[08/09 16:29:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1483.993896   -1583.948486  2023.230713 -1483.993896  100.045166 -1583.948486        0.0   99.954590       99.954346     9.0     -1583.948486            -1             -1
1   -1483.903320   -1483.948242  2023.230713 -1483.903320  100.045166 -1483.948242        0.0    0.044922        0.044922     1.0     -1583.948486         False           True
2   -1135.510742   -1483.948242  2023.230713 -1135.510742  348.437500 -1483.948242        0.0  348.437500      248.437500     1.0     -1583.948486         False          False
3   -1135.510742   -1333.454590  2023.230713 -1135.510742  348.437500 -1333.454590        0.0  197.943848      148.437500     2.0     -1583.948486         False          False
4   -1135.510742   -1183.993896  2023.230713 -1135.510742    1.000000 -1183.993896        0.0   48.483154       48.437500     3.0     -1583.948486         False          False
5   -1135.510742   -1183.948242  2074.793213 -1135.510742    1.000000 -1183.948242        0.0   48.437500        0.000000     4.0     -1583.948486         False          False
6   -1135.510742   -1135.510742  2126.355713 -1135.510742    1.000000 -1135.510742        0.0    0.000000      -48.437500     5.0     -1583.948486         False          False
7   -1034.038818   -1087.073242  2173.321289 -1034.038818  101.471924 -1087.073242        0.0   53.034424        0.000000     1.0     -1034.038818          True           True
8   -1034.038818   -1034.038818  2173.321289 -1034.038818    1.000000 -1034.038818        0.0    0.000000     -100.000000     2.0     -1034.038818         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:04]  --------------------------------------------------------------------------------
[08/09 16:29:04]  Iteration: 118 (38 solution, 79 counterexamples)
[08/09 16:29:07]  Generator returned sat in 1.194259 secs.
[08/09 16:29:07]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:29:07]  Improved gap from 0 to 48.4375
[08/09 16:29:07]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:29:07]  Verifer returned sat in 0.354980 secs.
[08/09 16:29:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1169.663818   -1429.306152  2018.633789 -1169.663818  348.482666 -1429.306152        0.0  259.642334      259.642334     7.0     -1429.306152            -1             -1
1   -1080.868652   -1377.743652  2018.633789 -1080.868652  348.437500 -1377.743652        0.0  296.875000      248.437500     2.0     -1080.868652         False           True
2   -1029.306152   -1329.306152  2018.633789 -1029.306152  348.437500 -1329.306152        0.0  300.000000      200.000000     3.0     -1080.868652         False          False
3    -980.868652   -1169.618652  2018.633789  -980.868652  348.437500 -1169.618652        0.0  188.750000      148.437500     3.0     -1080.868652         False          False
4    -980.868652   -1029.306152  2018.633789  -980.868652    1.000000 -1029.306152        0.0   48.437500       48.437500     3.0     -1080.868652         False          False
5    -980.868652   -1029.306152  2070.196289  -980.868652    1.000000 -1029.306152        0.0   48.437500        0.000000     3.0     -1080.868652         False          False
6    -980.868652    -980.868652  2121.758789  -980.868652    1.000000  -980.868652        0.0    0.000000      -48.437500     4.0     -1080.868652         False          False
7    -883.993652    -932.431152  2173.321289  -883.993652   96.875000  -932.431152        0.0   48.437500        0.000000     1.0      -883.993652          True           True
8    -883.993652    -883.993652  2173.321289  -883.993652    1.000000  -883.993652        0.0    0.000000     -100.000000     2.0      -883.993652         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:08]  --------------------------------------------------------------------------------
[08/09 16:29:08]  Iteration: 119 (38 solution, 80 counterexamples)
[08/09 16:29:17]  Generator returned sat in 6.735279 secs.
[08/09 16:29:17]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:17]  Improved gap from 0 to 1.5625
[08/09 16:29:17]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:29:17]  Verifer returned sat in 0.497051 secs.
[08/09 16:29:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1060.125732   -1160.080566  1749.407959 -1060.125732  356.180664 -1160.080566        0.0   99.954834       99.954834     2.0     -1160.080566            -1             -1
1    -803.945068   -1060.080566  1749.407959  -803.945068  356.135498 -1060.080566        0.0  256.135498      256.135498     1.0      -803.945068         False          False
2    -703.945068   -1016.170898  1749.407959  -703.945068  356.135498 -1016.170898        0.0  312.225830      256.135498     2.0      -803.945068         False          False
3    -660.035400    -960.080566  1749.407959  -660.035400  356.135498  -960.080566        0.0  300.045166      200.045166     3.0      -803.945068         False          False
4    -660.035400    -803.990234  1749.407959  -660.035400    2.000000  -803.990234        0.0  143.954834      100.045166     4.0      -803.945068         False           True
5    -660.035400    -662.035400  1749.407959  -660.035400    2.000000  -662.035400        0.0    2.000000        0.045166     3.0      -803.945068         False           True
6    -660.035400    -660.080566  1847.845459  -660.035400    2.000000  -660.080566        0.0    0.045166       -1.517334     4.0      -803.945068         False           True
7    -654.080566    -656.035400  1943.362793  -654.080566    6.000000  -656.035400        0.0    1.954834       -0.045166     1.0      -654.080566          True           True
8    -654.035400    -654.035400  1943.362793  -654.035400    2.000000  -654.035400        0.0    0.000000     -100.000000     1.0      -654.080566         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:18]  --------------------------------------------------------------------------------
[08/09 16:29:18]  Iteration: 120 (38 solution, 81 counterexamples)
[08/09 16:29:22]  Generator returned sat in 1.907675 secs.
[08/09 16:29:22]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:22]  Improved gap from 369/8192 to 48.4375
[08/09 16:29:23]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:29:23]  Verifer returned sat in 0.633512 secs.
[08/09 16:29:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -348.061523    -643.463867  1749.407959  -348.061523  295.402344  -643.463867        0.0  295.402344      266.664795     3.0      -643.463867            -1             -1
1    -348.061523    -514.726318  1749.407959  -348.061523  295.380127  -514.726318        0.0  166.664795      166.664795     3.0      -348.061523         False           True
2    -219.368652    -461.646484  1749.407959  -219.368652  295.357666  -461.646484        0.0  242.277832      195.357666     4.0      -219.368652         False           True
3    -166.288818    -348.038818  1749.407959  -166.288818  295.357666  -348.038818        0.0  181.750000      148.437500     2.0      -219.368652         False           True
4    -166.288818    -219.391602  1749.407959  -166.288818    2.000000  -219.391602        0.0   53.102783       48.437500     3.0      -219.368652         False           True
5    -166.288818    -214.726318  1800.970459  -166.288818    2.000000  -214.726318        0.0   48.437500        0.000000     3.0      -219.368652         False           True
6    -166.288818    -166.288818  1852.532959  -166.288818    2.000000  -166.288818        0.0    0.000000      -48.437500     4.0      -219.368652         False           True
7     -69.413818    -117.851318  1904.095459   -69.413818   96.875000  -117.851318        0.0   48.437500        0.000000     1.0       -69.413818          True           True
8     -69.413818     -69.413818  1904.095459   -69.413818    2.000000   -69.413818        0.0    0.000000     -100.000000     2.0       -69.413818         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:23]  --------------------------------------------------------------------------------
[08/09 16:29:23]  Iteration: 121 (38 solution, 82 counterexamples)
[08/09 16:29:29]  Generator returned sat in 3.776597 secs.
[08/09 16:29:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:30]  Improved gap from 23/1024 to 100
[08/09 16:29:31]  Improved number of small numbers from 74 to 102 out of a max of 110
[08/09 16:29:31]  Verifer returned sat in 1.170050 secs.
[08/09 16:29:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1054.404785   -1154.360107  2289.041504 -1054.404785  100.044922 -1154.360107        0.0   99.955322       99.955322     1.0     -1154.360107            -1             -1
1   -1054.337646   -1054.382533  2289.041504 -1054.337646  100.022461 -1054.382533        0.0    0.044887        0.022461     1.0     -1054.337646         False          False
2    -954.360073   -1054.360107  2289.041504  -954.360073  100.022461 -1054.360107        0.0  100.000035        0.000035     2.0     -1054.337646         False          False
3    -554.360107    -854.360107  2289.041504  -554.360107  500.000000  -854.360107        0.0  300.000000      300.000000     1.0     -1054.337646         False           True
4    -554.360107    -791.685919  2289.041504  -554.360107  252.000000  -791.685919        0.0  237.325811      200.000000     2.0     -1054.337646         False          False
5    -154.337612    -654.382324  2289.041504  -154.337612  637.348307  -654.382324        0.0  500.044713      500.022496     3.0      -154.337612          True           True
6    -154.337612    -654.359863  2289.041504  -154.337612  320.674154  -654.359863        0.0  500.022252      400.022496     4.0      -154.337612         False           True
7    -154.337612    -554.359863  2289.041504  -154.337612  162.337077  -554.359863        0.0  400.022252      300.022496     3.0      -154.337612         False           True
8    -154.337612    -354.360107  2289.041504  -154.337612   83.168538  -354.360107        0.0  200.022496      200.022496     4.0      -154.337612         False           True
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:29:31]  --------------------------------------------------------------------------------
[08/09 16:29:31]  Iteration: 122 (38 solution, 83 counterexamples)
[08/09 16:29:41]  Generator returned sat in 8.160701 secs.
[08/09 16:29:42]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:42]  Improved gap from 23/512 to 48.4375
[08/09 16:29:42]  Improved number of small numbers from 109 to 110 out of a max of 110
[08/09 16:29:42]  Verifer returned sat in 0.482861 secs.
[08/09 16:29:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0      45.572510    -503.417690  2186.469238    45.572510    0.044678  -503.417690        0.0  548.990199      448.990234     3.0      -503.417690            -1             -1
1      45.572510    -303.417725  2186.469238    45.572510    0.044922  -303.417725        0.0  348.990234      348.990234     3.0      -503.417690         False          False
2      45.572510    -203.417725  2186.469238    45.572510  183.781250  -203.417725        0.0  248.990234      248.990234     4.0      -503.417690         False          False
3      45.572510    -152.357178  2186.469238    45.572510  183.781250  -152.357178        0.0  197.929688      148.990234     5.0      -503.417690         False          False
4      45.572510      -3.417725  2186.469238    45.572510   93.890625    -3.417725        0.0   48.990234       48.990234     6.0      -503.417690         False          False
5      45.572510      -3.417725  2237.479004    45.572510   48.945312    -3.417725        0.0   48.990234        0.000000     6.0      -503.417690         False          False
6      45.572510      45.572510  2289.041504    45.572510   26.472656    45.572510        0.0    0.000000      -48.437500     7.0      -503.417690         False          False
7     146.537354      94.010045  2336.514160   146.537354  100.964844    94.010045        0.0   52.527309        0.000000     1.0       146.537354          True           True
8     146.537354     146.537354  2336.514160   146.537354   52.482422   146.537354        0.0    0.000000     -100.000000     2.0       146.537354         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:43]  --------------------------------------------------------------------------------
[08/09 16:29:43]  Iteration: 123 (38 solution, 84 counterexamples)
[08/09 16:29:47]  Generator returned sat in 1.965882 secs.
[08/09 16:29:47]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:47]  Improved gap from 775/16 to 100
[08/09 16:29:48]  Improved number of small numbers from 74 to 90 out of a max of 110
[08/09 16:29:48]  Verifer returned sat in 0.962292 secs.
[08/09 16:29:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     190.020020    -403.417725  2086.468994   190.020020    0.044922  -403.417725        0.0  593.437744      493.437744     4.0      -403.417725            -1             -1
1     190.020020    -303.417725  2086.468994   190.020020    0.044922  -303.417725        0.0  493.437744      393.437744     4.0      -403.417725         False          False
2     190.020020    -203.417725  2086.468994   190.020020    0.044922  -203.417725        0.0  393.437744      293.437744     5.0      -403.417725         False          False
3     190.020020    -103.417725  2086.468994   190.020020  393.393066  -103.417725        0.0  293.437744      193.437744     6.0      -403.417725         False          False
4     190.020020      96.582275  2086.468994   190.020020  198.696533    96.582275        0.0   93.437744       93.437744     7.0      -403.417725         False          False
5     596.627075     190.064941  2086.468994   596.627075  500.044800   190.064941        0.0  406.562134      400.044800     1.0       596.627075          True           True
6     596.627075     196.582275  2086.468994   596.627075  252.022400   196.582275        0.0  400.044800      300.044800     2.0       596.627075         False          False
7     596.627075     296.582275  2086.468994   596.627075  128.011200   296.582275        0.0  300.044800      200.044800     3.0       596.627075         False          False
8     596.627075     396.582275  2086.468994   596.627075   66.005600   396.582275        0.0  200.044800      100.044800     4.0       596.627075         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:29:48]  --------------------------------------------------------------------------------
[08/09 16:29:48]  Iteration: 124 (38 solution, 85 counterexamples)
[08/09 16:29:52]  Generator returned sat in 1.686604 secs.
[08/09 16:29:52]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:53]  Improved gap from 367/8192 to 48.4375
[08/09 16:29:54]  Improved number of small numbers from 94 to 106 out of a max of 110
[08/09 16:29:54]  Verifer returned sat in 1.136865 secs.
[08/09 16:29:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0      45.019775    -403.417969  2086.469238    45.019775    0.044678  -403.417969        0.0  448.437744      448.437744     3.0      -403.417969            -1             -1
1      45.019775    -303.417969  2086.469238    45.019775    0.044678  -303.417969        0.0  348.437744      348.437744     3.0      -403.417969         False          False
2      45.019775    -203.417969  2086.469238    45.019775    0.044922  -203.417969        0.0  248.437744      248.437744     4.0      -403.417969         False          False
3      45.019775    -126.332275  2086.469238    45.019775  181.750000  -126.332275        0.0  171.352051      148.437744     4.0      -403.417969         False          False
4      45.019775      -3.462402  2086.469238    45.019775   92.875000    -3.462402        0.0   48.482178       48.437744     5.0      -403.417969         False          False
5      45.019775      -3.417969  2138.031494    45.019775   48.437500    -3.417969        0.0   48.437744        0.000000     6.0      -403.417969         False          False
6      45.019775      45.019775  2189.593994    45.019775   26.218750    45.019775        0.0    0.000000      -48.437500     7.0      -403.417969         False          False
7     145.805176      93.457275  2237.201660   145.805176  100.785400    93.457275        0.0   52.347900       -0.044434     1.0       145.805176          True           True
8     145.849976     145.849854  2237.201660   145.849976   52.392700   145.849854        0.0    0.000122      -99.999634     1.0       145.805176         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:54]  --------------------------------------------------------------------------------
[08/09 16:29:54]  Iteration: 125 (38 solution, 86 counterexamples)
[08/09 16:29:59]  Generator returned sat in 1.999454 secs.
[08/09 16:29:59]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:30:00]  Improved gap from 0 to 48.4375
[08/09 16:30:00]  Improved number of small numbers from 82 to 94 out of a max of 110
[08/09 16:30:00]  Verifer returned sat in 1.787412 secs.
[08/09 16:30:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     763.248698     214.811198  2035.549438   763.248698    0.044922   214.811198        0.0  548.437500      448.437500     2.0       214.811198            -1             -1
1     763.248698     314.811279  2035.549438   763.248698    0.044922   314.811279        0.0  448.437419      348.437500     2.0       214.811198         False          False
2     763.248698     414.811198  2035.549438   763.248698    0.044922   414.811198        0.0  348.437500      248.437500     3.0       214.811198         False          False
3     763.248698     614.811198  2035.549438   763.248698  145.678571   614.811198        0.0  148.437500      148.437500     4.0       214.811198         False          False
4     763.248698     714.766602  2035.549438   763.248698   74.839286   714.766602        0.0   48.482096       48.437500     5.0       214.811198         False          False
5     763.248698     714.811198  2087.111938   763.248698   39.419643   714.811198        0.0   48.437500        0.000000     6.0       214.811198         False          False
6     763.248698     763.248698  2134.076660   763.248698   21.709821   763.248698        0.0    0.000000      -53.035278     7.0       214.811198         False          False
7     861.177269     816.284098  2185.639038   861.177269   97.928571   816.284098        0.0   44.893171       -3.544329     1.0       861.177269          True           True
8     867.248384     864.721680  2237.201416   867.248384   50.964286   864.721680        0.0    2.526704      -45.910836     1.0       861.177269         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:01]  --------------------------------------------------------------------------------
[08/09 16:30:01]  Iteration: 126 (38 solution, 87 counterexamples)
[08/09 16:30:08]  Generator returned sat in 4.324743 secs.
[08/09 16:30:08]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:08]  Verifer returned unsat in 0.384484 secs.
[08/09 16:30:08]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:08]  --------------------------------------------------------------------------------
[08/09 16:30:08]  Iteration: 127 (39 solution, 87 counterexamples)
[08/09 16:30:12]  Generator returned sat in 1.210815 secs.
[08/09 16:30:12]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:12]  Verifer returned unsat in 0.301226 secs.
[08/09 16:30:12]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:12]  --------------------------------------------------------------------------------
[08/09 16:30:12]  Iteration: 128 (40 solution, 87 counterexamples)
[08/09 16:30:16]  Generator returned sat in 1.125121 secs.
[08/09 16:30:16]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:16]  Verifer returned unsat in 0.281287 secs.
[08/09 16:30:16]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:16]  --------------------------------------------------------------------------------
[08/09 16:30:16]  Iteration: 129 (41 solution, 87 counterexamples)
[08/09 16:30:20]  Generator returned sat in 1.103613 secs.
[08/09 16:30:20]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:20]  Verifer returned unsat in 0.233191 secs.
[08/09 16:30:20]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:20]  --------------------------------------------------------------------------------
[08/09 16:30:20]  Iteration: 130 (42 solution, 87 counterexamples)
[08/09 16:30:24]  Generator returned sat in 1.360147 secs.
[08/09 16:30:24]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:24]  Improved number of small numbers from 45 to 109 out of a max of 109
[08/09 16:30:24]  Verifer returned sat in 0.357969 secs.
[08/09 16:30:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     663.203857     163.226318  2187.134277   663.203857    0.022217   163.226318        0.0  499.977539      499.977539     4.0       163.226318            -1             -1
1     663.203857     163.681641  2187.134277   663.203857    0.022461   163.681641        0.0  499.522217      399.977539     2.0       163.226318         False          False
2     663.203857     263.226562  2187.134277   663.203857    0.022461   263.226562        0.0  399.977295      299.977539     3.0       163.226318         False          False
3     663.203857     413.215088  2187.134277   663.203857    0.022461   413.215088        0.0  249.988770      199.977539     4.0       163.226318         False          False
4     663.203857     563.226318  2187.134277   663.203857  249.988770   563.226318        0.0   99.977539       99.977539     5.0       163.226318         False          False
5     962.770996     663.203857  2187.134277   962.770996  399.544678   663.203857        0.0  299.567139      299.544678     6.0       163.226318         False          False
6    1063.248535     663.226318  2187.134277  1063.248535  400.044678   663.226318        0.0  400.022217      300.022217     2.0      1063.248535          True           True
7    1063.248535     863.226318  2187.134277  1063.248535  250.011230   863.226318        0.0  200.022217      200.022217     3.0      1063.248535         False          False
8    1163.226318     963.226318  2187.134277  1163.226318  300.000000   963.226318        0.0  200.000000      200.000000     3.0      1063.248535         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:30:25]  --------------------------------------------------------------------------------
[08/09 16:30:25]  Iteration: 131 (42 solution, 88 counterexamples)
[08/09 16:30:30]  Generator returned sat in 2.818042 secs.
[08/09 16:30:30]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:30]  Improved gap from 1/1600 to 29.6875
[08/09 16:30:31]  Improved number of small numbers from 61 to 110 out of a max of 110
[08/09 16:30:31]  Verifer returned sat in 0.519717 secs.
[08/09 16:30:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     333.563721     233.565918  2187.134277   333.563721   0.002686   233.565918        0.0  99.997803       99.997803     4.0       233.565918            -1             -1
1     333.563721     333.561035  2187.134277   333.563721  29.692500   333.561035        0.0   0.002686       -0.002197     3.0       233.565918         False           True
2     363.253662     333.566162  2257.446533   363.253662  29.692627   333.566162        0.0  29.687500        0.000000     1.0       233.565918          True           True
3     393.456055     363.253662  2327.244141   393.456055  59.889893   363.253662        0.0  30.202393        0.000000     2.0       233.565918         False          False
4     393.456055     393.456055  2397.034424   393.456055   0.010000   393.456055        0.0   0.000000      -30.209717     2.0       393.456055          True           True
5     453.351074     423.666016  2467.346680   453.351074  59.895020   423.666016        0.0  29.685059       -0.002441     1.0       393.456055         False           True
6     513.765869     453.353516  2506.934326   513.765869  90.099854   453.353516        0.0  60.412354        0.000000     1.0       393.456055         False          False
7     543.453369     513.765869  2577.246826   543.453369  90.099854   513.765869        0.0  29.687500        0.000000     2.0       393.456055         False          False
8     543.453369     543.453369  2577.246826   543.453369   0.010000   543.453369        0.0   0.000000     -100.000000     2.0       543.453369          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:31]  --------------------------------------------------------------------------------
[08/09 16:30:31]  Iteration: 132 (42 solution, 89 counterexamples)
[08/09 16:30:36]  Generator returned sat in 2.157587 secs.
[08/09 16:30:36]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:37]  Improved gap from 0 to 29.6875
[08/09 16:30:37]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/09 16:30:37]  Verifer returned sat in 1.324146 secs.
[08/09 16:30:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -216.455322    -216.455322  2372.914062  -216.455322  29.822021  -216.455322        0.0   0.000000       -0.134277     1.0      -216.455322            -1             -1
1    -186.678467    -216.321045  2443.226562  -186.678467  29.776855  -216.321045        0.0  29.642578       -0.044922     1.0      -186.678467         False          False
2    -186.588623    -186.633545  2513.539062  -186.588623  29.732422  -186.633545        0.0   0.044922      -29.642578     1.0      -186.588623         False          False
3    -127.079346    -156.946045  2583.672363  -127.079346  59.554199  -156.946045        0.0  29.866699        0.000000     1.0      -186.588623         False          False
4     -97.436768    -127.079346  2653.984863   -97.436768  59.509277  -127.079346        0.0  29.642578       -0.044922     2.0      -186.588623         False          False
5     -82.458496     -97.391846  2724.297363   -82.458496  44.620850   -97.391846        0.0  14.933350      -14.754150     1.0       -82.458496          True           True
6      -8.150146     -67.704346  2764.743164    -8.150146  89.241699   -67.704346        0.0  59.554199        0.000000     1.0       -82.458496         False          False
7      21.537354      -8.150146  2833.717041    21.537354  89.241699    -8.150146        0.0  29.687500       -1.338623     2.0       -82.458496         False          False
8      51.314453      22.875977  2833.717041    51.314453  59.464600    22.875977        0.0  28.438477      -71.561523     1.0        51.314453          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:38]  --------------------------------------------------------------------------------
[08/09 16:30:38]  Iteration: 133 (42 solution, 90 counterexamples)
[08/09 16:30:42]  Generator returned sat in 1.699788 secs.
[08/09 16:30:42]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:43]  Verifer returned unsat in 0.638781 secs.
[08/09 16:30:43]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:43]  --------------------------------------------------------------------------------
[08/09 16:30:43]  Iteration: 134 (43 solution, 90 counterexamples)
[08/09 16:30:46]  Generator returned sat in 1.229577 secs.
[08/09 16:30:46]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:47]  Improved gap from 0 to 0
[08/09 16:30:48]  Improved number of small numbers from 64 to 72 out of a max of 110
[08/09 16:30:48]  Verifer returned sat in 1.428524 secs.
[08/09 16:30:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     343.077705     243.070068  2472.934082   343.077705  0.001221   243.070068        0.0  100.007637      100.007520     5.0       243.070068            -1             -1
1     343.077705     343.068848  2472.934082   343.077705  0.001221   343.068848        0.0    0.008857        0.007520     3.0       243.070068         False           True
2     343.077705     343.070205  2572.926562   343.077705  0.001221   343.070205        0.0    0.007500        0.000000     3.0       243.070068          True           True
3     343.077705     343.077705  2672.926562   343.077705  0.001465   343.077705        0.0    0.000000        0.000000     4.0       243.070068          True           True
4     343.087705     343.077705  2772.916563   343.087705  0.010000   343.077705        0.0    0.010000        0.000000     4.0       343.087705          True           True
5     343.087705     343.087705  2872.916563   343.087705  0.010000   343.087705        0.0    0.000000        0.000000     2.0       343.087705         False           True
6     343.105205     343.087705  2972.899063   343.105205  0.017500   343.087705        0.0    0.017500        0.000000     2.0       343.087705         False           True
7     343.105205     343.105205  3072.889062   343.105205  0.010000   343.105205        0.0    0.000000       -0.010000     2.0       343.087705         False           True
8     343.115205     343.115205  3072.889160   343.115205  0.010000   343.115205        0.0    0.000000      -99.999902     1.0       343.115205          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:48]  --------------------------------------------------------------------------------
[08/09 16:30:48]  Iteration: 135 (43 solution, 91 counterexamples)
[08/09 16:30:52]  Generator returned sat in 1.607665 secs.
[08/09 16:30:53]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:53]  Verifer returned unsat in 0.309736 secs.
[08/09 16:30:53]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:53]  --------------------------------------------------------------------------------
[08/09 16:30:53]  Iteration: 136 (44 solution, 91 counterexamples)
[08/09 16:30:58]  Generator returned sat in 2.261857 secs.
[08/09 16:30:58]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:58]  Verifer returned unsat in 0.337535 secs.
[08/09 16:30:58]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:58]  --------------------------------------------------------------------------------
[08/09 16:30:58]  Iteration: 137 (45 solution, 91 counterexamples)
[08/09 16:31:02]  Generator returned sat in 1.176611 secs.
[08/09 16:31:02]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:02]  Verifer returned unsat in 0.219608 secs.
[08/09 16:31:02]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:02]  --------------------------------------------------------------------------------
[08/09 16:31:02]  Iteration: 138 (46 solution, 91 counterexamples)
[08/09 16:31:06]  Generator returned sat in 1.178224 secs.
[08/09 16:31:06]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:07]  Verifer returned unsat in 0.672205 secs.
[08/09 16:31:07]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:07]  --------------------------------------------------------------------------------
[08/09 16:31:07]  Iteration: 139 (47 solution, 91 counterexamples)
[08/09 16:31:10]  Generator returned sat in 1.170739 secs.
[08/09 16:31:10]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:11]  Verifer returned unsat in 0.237595 secs.
[08/09 16:31:11]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:11]  --------------------------------------------------------------------------------
[08/09 16:31:11]  Iteration: 140 (48 solution, 91 counterexamples)
[08/09 16:31:14]  Generator returned sat in 1.175236 secs.
[08/09 16:31:14]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:15]  Verifer returned unsat in 0.268875 secs.
[08/09 16:31:15]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:15]  --------------------------------------------------------------------------------
[08/09 16:31:15]  Iteration: 141 (49 solution, 91 counterexamples)
[08/09 16:31:19]  Generator returned sat in 1.509860 secs.
[08/09 16:31:19]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:19]  Verifer returned unsat in 0.301784 secs.
[08/09 16:31:19]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:19]  --------------------------------------------------------------------------------
[08/09 16:31:19]  Iteration: 142 (50 solution, 91 counterexamples)
[08/09 16:31:23]  Generator returned sat in 1.176265 secs.
[08/09 16:31:23]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:23]  Verifer returned unsat in 0.238556 secs.
[08/09 16:31:23]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:23]  --------------------------------------------------------------------------------
[08/09 16:31:23]  Iteration: 143 (51 solution, 91 counterexamples)
[08/09 16:31:27]  Generator returned sat in 1.446513 secs.
[08/09 16:31:27]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:27]  Verifer returned unsat in 0.198806 secs.
[08/09 16:31:27]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:27]  --------------------------------------------------------------------------------
[08/09 16:31:27]  Iteration: 144 (52 solution, 91 counterexamples)
[08/09 16:31:31]  Generator returned sat in 1.181869 secs.
[08/09 16:31:31]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:31]  Verifer returned unsat in 0.250784 secs.
[08/09 16:31:31]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:31:31]  --------------------------------------------------------------------------------
[08/09 16:31:31]  Iteration: 145 (53 solution, 91 counterexamples)
[08/09 16:31:50]  Generator returned sat in 16.684710 secs.
[08/09 16:31:51]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:31:51]  Improved gap from 183/4096 to 48.4375
[08/09 16:31:51]  Improved number of small numbers from 53 to 110 out of a max of 110
[08/09 16:31:51]  Verifer returned sat in 0.508056 secs.
[08/09 16:31:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1615.592285   -2110.927002  3076.074219 -1615.592285   23.482178 -2110.927002        0.0  495.334717      395.334961     3.0     -2110.927002            -1             -1
1   -1615.592285   -1910.927246  3076.074219 -1615.592285   23.459717 -1910.927246        0.0  295.334961      295.334961     3.0     -1615.592285         False          False
2   -1562.489746   -1910.927246  3076.074219 -1562.489746  348.437500 -1910.927246        0.0  348.437500      248.437500     3.0     -1615.592285         False          False
3   -1562.489746   -1748.239746  3076.074219 -1562.489746  348.437500 -1748.239746        0.0  185.750000      148.437500     4.0     -1615.592285         False          False
4   -1562.489746   -1615.592285  3076.074219 -1562.489746    1.000000 -1615.592285        0.0   53.102539       48.437500     5.0     -1615.592285         False          False
5   -1562.489746   -1610.927246  3127.636719 -1562.489746    1.000000 -1610.927246        0.0   48.437500        0.000000     4.0     -1615.592285         False           True
6   -1562.489746   -1562.489746  3179.199219 -1562.489746    1.000000 -1562.489746        0.0    0.000000      -48.437500     5.0     -1615.592285         False          False
7   -1465.614746   -1514.052246  3230.761719 -1465.614746   96.875000 -1514.052246        0.0   48.437500        0.000000     1.0     -1465.614746          True           True
8   -1465.614746   -1465.614746  3230.761719 -1465.614746    1.000000 -1465.614746        0.0    0.000000     -100.000000     2.0     -1465.614746         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:31:52]  --------------------------------------------------------------------------------
[08/09 16:31:52]  Iteration: 146 (53 solution, 92 counterexamples)
[08/09 16:31:56]  Generator returned sat in 1.705486 secs.
[08/09 16:31:56]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:31:56]  Improved gap from 775/16 to 48.4375
[08/09 16:31:57]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/09 16:31:57]  Verifer returned sat in 0.643996 secs.
[08/09 16:31:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2244.742920   -2244.742920  3080.717285 -2244.742920  300.177979 -2244.742920        0.0    0.000000      -32.847656     1.0     -2244.742920            -1             -1
1   -1944.609375   -2111.939697  3080.717285 -1944.609375  300.133545 -2111.939697        0.0  167.330322      167.285889     1.0     -1944.609375         False          False
2   -1811.850586   -2111.895020  3080.717285 -1811.850586  300.089111 -2111.895020        0.0  300.044434      200.044678     2.0     -1811.850586         False          False
3   -1758.814697   -1944.564697  3080.717285 -1758.814697  353.080322 -1944.564697        0.0  185.750000      153.080566     2.0     -1811.850586         False           True
4   -1758.814697   -1811.895264  3080.717285 -1758.814697    1.000000 -1811.895264        0.0   53.080566       53.080566     3.0     -1811.850586         False           True
5   -1758.814697   -1807.252441  3127.636719 -1758.814697    1.000000 -1807.252441        0.0   48.437744        0.000000     3.0     -1811.850586         False           True
6   -1758.814697   -1758.814697  3179.199219 -1758.814697    1.000000 -1758.814697        0.0    0.000000      -48.437500     4.0     -1811.850586         False           True
7   -1661.939697   -1710.377197  3230.761719 -1661.939697   96.875000 -1710.377197        0.0   48.437500        0.000000     1.0     -1661.939697          True           True
8   -1661.939697   -1661.939697  3282.323975 -1661.939697    1.000000 -1661.939697        0.0    0.000000      -48.437744     2.0     -1661.939697         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:31:57]  --------------------------------------------------------------------------------
[08/09 16:31:57]  Iteration: 147 (53 solution, 93 counterexamples)
[08/09 16:32:02]  Generator returned sat in 2.371875 secs.
[08/09 16:32:02]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:32:02]  Improved gap from 0 to 1.5625
[08/09 16:32:03]  Improved number of small numbers from 71 to 110 out of a max of 110
[08/09 16:32:03]  Verifer returned sat in 0.681184 secs.
[08/09 16:32:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2111.939697   -2111.939697  2980.62793 -2111.939697    0.044434 -2111.939697        0.0    0.000000       -0.133545     1.0     -2111.939697            -1             -1
1   -1811.850830   -2011.806152  2980.62793 -1811.850830  300.088867 -2011.806152        0.0  199.955322      199.955322     1.0     -2111.939697         False          False
2   -1711.761719   -1911.850830  2980.62793 -1711.761719  300.044434 -1911.850830        0.0  200.089111      200.044434     2.0     -1711.761719         False          False
3   -1611.806152   -1811.806152  2980.62793 -1611.806152  300.044678 -1811.806152        0.0  200.000000      200.000000     2.0     -1711.761719         False           True
4   -1611.806152   -1711.806152  2980.62793 -1611.806152    1.000000 -1711.806152        0.0  100.000000      100.000000     3.0     -1711.761719         False           True
5   -1611.806152   -1612.761719  2980.62793 -1611.806152    1.000000 -1612.761719        0.0    0.955566        0.000000     3.0     -1711.761719         False           True
6   -1611.761719   -1611.806152  3078.19043 -1611.761719    1.000000 -1611.806152        0.0    0.044434       -2.393066     4.0     -1711.761719         False           True
7   -1607.806152   -1609.368652  3176.62793 -1607.806152    4.000000 -1609.368652        0.0    1.562500        0.000000     1.0     -1607.806152          True           True
8   -1607.806152   -1607.806152  3176.62793 -1607.806152    1.000000 -1607.806152        0.0    0.000000     -100.000000     2.0     -1607.806152         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:32:03]  --------------------------------------------------------------------------------
[08/09 16:32:03]  Iteration: 148 (53 solution, 94 counterexamples)
[08/09 16:32:07]  Generator returned sat in 1.769082 secs.
[08/09 16:32:08]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:32:08]  Improved gap from 4187/4096 to 0
[08/09 16:32:08]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:32:08]  Verifer returned sat in 0.810108 secs.
[08/09 16:32:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2325.503662   -2325.503662  2877.672119 -2325.503662  300.000000 -2325.503662        0.0    0.000000        0.000000     4.0     -2325.503662            -1             -1
1   -2025.548096   -2225.503906  2877.672119 -2025.548096  299.955566 -2225.503906        0.0  199.955811      199.955566     1.0     -2025.548096         False           True
2   -1824.503906   -2225.503662  2877.672119 -1824.503906  401.000000 -2225.503662        0.0  400.999756      300.999756     2.0     -2025.548096         False          False
3   -1824.459229   -2025.503906  2877.672119 -1824.459229  401.044434 -2025.503906        0.0  201.044678      201.044434     2.0     -2025.548096         False           True
4   -1824.459229   -1974.370605  2877.672119 -1824.459229    1.000000 -1974.370605        0.0  149.911377      101.044434     3.0     -2025.548096         False           True
5   -1824.459229   -1825.503906  2877.672119 -1824.459229    2.500000 -1825.503906        0.0    1.044678        1.044434     4.0     -1824.459229          True           True
6   -1824.459229   -1825.503662  2976.627686 -1824.459229    1.000000 -1825.503662        0.0    1.044434        0.000000     5.0     -1824.459229         False           True
7   -1824.459229   -1824.459229  3076.627686 -1824.459229    1.000000 -1824.459229        0.0    0.000000        0.000000     5.0     -1824.459229         False           True
8   -1823.459229   -1824.414795  3076.627686 -1823.459229    1.000000 -1824.414795        0.0    0.955566      -99.000000     1.0     -1824.459229         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:32:09]  --------------------------------------------------------------------------------
[08/09 16:32:09]  Iteration: 149 (53 solution, 95 counterexamples)
[08/09 16:32:15]  Generator returned sat in 3.957851 secs.
[08/09 16:32:15]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:32:16]  Improved gap from 0 to 0
[08/09 16:32:16]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:32:16]  Verifer returned sat in 0.756982 secs.
[08/09 16:32:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2299.326172   -2299.348389  2851.516846 -2299.326172     300.0 -2299.348389        0.0    0.022217        0.022217     2.0     -2299.348389            -1             -1
1   -1999.348389   -2299.303955  2851.516846 -1999.348389     300.0 -2299.303955        0.0  299.955566      200.000000     1.0     -2299.348389         False          False
2   -1999.303955   -2199.326172  2851.516846 -1999.303955     300.0 -2199.326172        0.0  200.022217      100.044434     2.0     -2299.348389         False          False
3   -1899.326172   -1999.370605  2851.516846 -1899.326172     300.0 -1999.370605        0.0  100.044434      100.022217     3.0     -2299.348389         False          False
4   -1899.326172   -1999.348389  2851.516846 -1899.326172       1.0 -1999.348389        0.0  100.022217        0.022217     4.0     -2299.348389         False          False
5   -1899.326172   -1899.348389  2950.516846 -1899.326172       2.5 -1899.348389        0.0    0.022217       -0.977783     3.0     -1899.326172          True           True
6   -1898.348389   -1898.348389  3050.516846 -1898.348389       1.0 -1898.348389        0.0    0.000000        0.000000     1.0     -1899.326172         False          False
7   -1897.348389   -1898.348389  3149.516846 -1897.348389       1.0 -1898.348389        0.0    1.000000        0.000000     1.0     -1899.326172         False          False
8   -1897.348389   -1897.348389  3249.516846 -1897.348389       1.0 -1897.348389        0.0    0.000000        0.000000     2.0     -1899.326172         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:32:17]  --------------------------------------------------------------------------------
[08/09 16:32:17]  Iteration: 150 (53 solution, 96 counterexamples)
[08/09 16:32:23]  Generator returned sat in 4.130640 secs.
[08/09 16:32:24]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:32:24]  Improved gap from 0 to 23.4375
[08/09 16:32:24]  Improved number of small numbers from 70 to 110 out of a max of 110
[08/09 16:32:24]  Verifer returned sat in 0.511555 secs.
[08/09 16:32:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2425.260010   -2425.304199  2774.953857 -2425.260010    0.044434 -2425.304199        0.0    0.044189        0.043945     5.0     -2425.304199            -1             -1
1   -2325.348633   -2412.759766  2774.954102 -2325.348633   99.955566 -2412.759766        0.0   87.411133       -0.044434     1.0     -2425.304199         False           True
2   -2301.866699   -2325.304199  2851.516602 -2301.866699  110.893066 -2325.304199        0.0   23.437500        0.000000     1.0     -2425.304199         False          False
3   -2078.429199   -2204.858887  2851.516602 -2078.429199  246.875000 -2204.858887        0.0  126.429688      123.437500     1.0     -2425.304199         False          False
4   -2078.429199   -2101.911133  2851.516602 -2078.429199    1.000000 -2101.911133        0.0   23.481934       23.437500     2.0     -2425.304199         False          False
5   -2078.429199   -2101.866699  2928.079102 -2078.429199    1.000000 -2101.866699        0.0   23.437500        0.000000     3.0     -2425.304199         False          False
6   -2078.429199   -2078.429199  3001.693604 -2078.429199    1.000000 -2078.429199        0.0    0.000000      -26.385498     4.0     -2425.304199         False          False
7   -1951.999512   -1952.043945  3001.693604 -1951.999512  126.429688 -1952.043945        0.0    0.044434        0.044189     1.0     -1951.999512          True           True
8   -1951.043945   -1951.955078  3078.167480 -1951.043945    1.000000 -1951.955078        0.0    0.911133      -22.526367     1.0     -1951.999512         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:32:25]  --------------------------------------------------------------------------------
[08/09 16:32:25]  Iteration: 151 (53 solution, 97 counterexamples)
[08/09 16:32:29]  Generator returned sat in 2.229053 secs.
[08/09 16:32:30]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:32:30]  Improved gap from 91/2048 to 48.4375
[08/09 16:32:30]  Improved number of small numbers from 92 to 110 out of a max of 110
[08/09 16:32:30]  Verifer returned sat in 0.547322 secs.
[08/09 16:32:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2501.888672   -2501.910889  2699.897949 -2501.888672    0.022217 -2501.910889        0.0    0.022217       -0.021729     3.0     -2501.910889            -1             -1
1   -2101.910889   -2501.866699  2699.897949 -2101.910889  400.000000 -2501.866699        0.0  399.955811      299.956055     1.0     -2501.910889         False          False
2   -2101.910889   -2301.866943  2699.897949 -2101.910889    0.022217 -2301.866943        0.0  199.956055      199.956055     2.0     -2101.910889         False          False
3   -2053.429443   -2246.179443  2699.897949 -2053.429443  248.437500 -2246.179443        0.0  192.750000      148.437500     3.0     -2101.910889         False          False
4   -2053.429443   -2101.933105  2699.897949 -2053.429443    1.000000 -2101.933105        0.0   48.503662       48.437500     4.0     -2101.910889         False          False
5   -2053.429443   -2101.866943  2751.460449 -2053.429443    1.000000 -2101.866943        0.0   48.437500        0.000000     3.0     -2101.910889         False           True
6   -2053.429443   -2053.429443  2803.022949 -2053.429443    1.000000 -2053.429443        0.0    0.000000      -48.437500     4.0     -2101.910889         False          False
7   -1956.554443   -2004.991943  2854.585449 -1956.554443   96.875000 -2004.991943        0.0   48.437500        0.000000     1.0     -1956.554443          True           True
8   -1956.554443   -1956.554443  2854.585449 -1956.554443    1.000000 -1956.554443        0.0    0.000000     -100.000000     2.0     -1956.554443         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:32:31]  --------------------------------------------------------------------------------
[08/09 16:32:31]  Iteration: 152 (53 solution, 98 counterexamples)
[08/09 16:32:35]  Generator returned sat in 2.182361 secs.
[08/09 16:32:36]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:32:36]  Improved gap from 775/16 to 48.4375
[08/09 16:32:36]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:32:36]  Verifer returned sat in 0.383416 secs.
[08/09 16:32:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2616.841064   -2909.502686  2704.541260 -2616.841064  292.661621 -2909.502686        0.0  292.661621      192.661621     2.0     -2909.502686            -1             -1
1   -2616.841064   -2709.502686  2704.541260 -2616.841064  292.617432 -2709.502686        0.0   92.661621       92.661621     2.0     -2616.841064         False          False
2   -2507.466064   -2616.796875  2704.541260 -2507.466064  202.036621 -2616.796875        0.0  109.330811      102.036621     1.0     -2507.466064         False          False
3   -2356.421875   -2550.171875  2704.541260 -2356.421875  260.375000 -2550.171875        0.0  193.750000      153.080811     2.0     -2507.466064         False          False
4   -2356.421875   -2409.502686  2704.541260 -2356.421875    1.000000 -2409.502686        0.0   53.080811       53.080811     2.0     -2507.466064         False          False
5   -2356.421875   -2404.859375  2751.460449 -2356.421875    1.000000 -2404.859375        0.0   48.437500        0.000000     3.0     -2507.466064         False          False
6   -2356.421875   -2356.421875  2803.022949 -2356.421875    1.000000 -2356.421875        0.0    0.000000      -48.437500     4.0     -2507.466064         False          False
7   -2259.546875   -2307.984375  2854.585449 -2259.546875   96.875000 -2307.984375        0.0   48.437500        0.000000     1.0     -2259.546875          True           True
8   -2259.546875   -2259.546875  2854.585449 -2259.546875    1.000000 -2259.546875        0.0    0.000000     -100.000000     2.0     -2259.546875         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:32:36]  --------------------------------------------------------------------------------
[08/09 16:32:36]  Iteration: 153 (53 solution, 99 counterexamples)
[08/09 16:32:41]  Generator returned sat in 1.823204 secs.
[08/09 16:32:41]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:32:41]  Improved gap from 775/16 to 48.4375
[08/09 16:32:41]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:32:41]  Verifer returned sat in 0.352069 secs.
[08/09 16:32:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2255.947754   -2755.859375  2704.54126 -2255.947754  300.000000 -2755.859375        0.0  499.911621      399.911621     3.0     -2755.859375            -1             -1
1   -2255.947754   -2555.859375  2704.54126 -2255.947754  300.000000 -2555.859375        0.0  299.911621      299.911621     3.0     -2755.859375         False          False
2   -2255.903564   -2555.859375  2704.54126 -2255.903564  299.955811 -2555.859375        0.0  299.955811      199.955811     3.0     -2255.903564         False          False
3   -2207.421875   -2398.171875  2704.54126 -2207.421875  348.437500 -2398.171875        0.0  190.750000      148.437500     4.0     -2255.903564         False          False
4   -2207.421875   -2255.903564  2704.54126 -2207.421875    1.000000 -2255.903564        0.0   48.481689       48.437500     3.0     -2255.903564         False           True
5   -2207.421875   -2255.859375  2756.10376 -2207.421875    1.000000 -2255.859375        0.0   48.437500        0.000000     3.0     -2255.903564         False          False
6   -2207.421875   -2207.421875  2807.66626 -2207.421875    1.000000 -2207.421875        0.0    0.000000      -48.437500     4.0     -2255.903564         False          False
7   -2110.546875   -2158.984375  2859.22876 -2110.546875   96.875000 -2158.984375        0.0   48.437500        0.000000     1.0     -2110.546875          True           True
8   -2110.546875   -2110.546875  2910.79126 -2110.546875    1.000000 -2110.546875        0.0    0.000000      -48.437500     2.0     -2110.546875         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:32:42]  --------------------------------------------------------------------------------
[08/09 16:32:42]  Iteration: 154 (53 solution, 100 counterexamples)
[08/09 16:32:49]  Generator returned sat in 4.445816 secs.
[08/09 16:32:49]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:32:50]  Verifer returned unsat in 0.362264 secs.
[08/09 16:32:50]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:32:50]  --------------------------------------------------------------------------------
[08/09 16:32:50]  Iteration: 155 (54 solution, 100 counterexamples)
[08/09 16:32:59]  Generator returned sat in 6.334486 secs.
[08/09 16:32:59]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:32:59]  Verifer returned unsat in 0.240164 secs.
[08/09 16:32:59]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:32:59]  --------------------------------------------------------------------------------
[08/09 16:32:59]  Iteration: 156 (55 solution, 100 counterexamples)
[08/09 16:33:06]  Generator returned sat in 4.677918 secs.
[08/09 16:33:06]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:33:08]  Improved gap from 1/1200 to 15.625
[08/09 16:33:08]  Improved number of small numbers from 52 to 110 out of a max of 110
[08/09 16:33:08]  Verifer returned sat in 1.279193 secs.
[08/09 16:33:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     131.775879    -275.356201  224.038086   131.775879    0.044189  -275.356201        0.0  407.132080      307.132080     1.0      -275.356201            -1             -1
1     131.775879    -175.356201  224.038086   131.775879  407.088135  -175.356201        0.0  307.132080      207.132080     2.0      -275.356201         False          False
2     231.687744     -54.062256  224.038086   231.687744  407.043945   -54.062256        0.0  285.750000      207.043945     3.0       231.687744          True           True
3     352.937744     124.643799  224.038086   352.937744  407.000000   124.643799        0.0  228.293945      228.293945     4.0       352.937744         False           True
4     352.937744     224.643799  224.038086   352.937744  205.000000   224.643799        0.0  128.293945      128.293945     3.0       352.937744         False           True
5     352.937744     299.394043  224.038086   352.937744  104.000000   299.394043        0.0   53.543701       28.293945     3.0       352.937744         False           True
6     352.937744     324.643799  295.744141   352.937744   53.500000   324.643799        0.0   28.293945        0.000000     4.0       352.937744         False           True
7     352.937744     352.937744  380.119141   352.937744   28.250000   352.937744        0.0    0.000000      -15.625000     5.0       352.937744         False           True
8     368.562744     368.562744  380.119141   368.562744   15.625000   368.562744        0.0    0.000000     -100.000000     1.0       352.937744         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:33:08]  --------------------------------------------------------------------------------
[08/09 16:33:08]  Iteration: 157 (55 solution, 101 counterexamples)
[08/09 16:33:13]  Generator returned sat in 2.384591 secs.
[08/09 16:33:13]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:33:14]  Improved gap from 3/2 to 0
[08/09 16:33:14]  Improved number of small numbers from 70 to 110 out of a max of 110
[08/09 16:33:14]  Verifer returned sat in 0.714998 secs.
[08/09 16:33:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -321.974365    -321.974365   72.222168  -321.974365  199.999756  -321.974365        0.0    0.000000        0.000000     2.0      -321.974365            -1             -1
1    -121.996338    -321.974365   72.222168  -121.996338  199.978027  -321.974365        0.0  199.978027       99.978027     2.0      -121.996338         False           True
2     -22.040283    -121.974365   72.222168   -22.040283  299.934082  -121.974365        0.0   99.934082       99.934082     1.0      -121.996338         False           True
3     -21.996338     -22.018311   72.222168   -21.996338   99.978027   -22.018311        0.0    0.021973       -0.021973     1.0       -21.996338         False          False
4     -20.518311     -21.974121  170.744141   -20.518311    1.500000   -21.974121        0.0    1.455811       -0.021973     1.0       -21.996338         False          False
5     -20.474121     -20.496338  270.721924   -20.474121    1.500000   -20.496338        0.0    0.022217        0.000000     1.0       -21.996338         False          False
6     -18.996338     -20.474121  369.243896   -18.996338    1.500000   -20.474121        0.0    1.477783       -0.000244     2.0       -21.996338         False          False
7     -17.474121     -18.952148  467.699951   -17.474121    3.000000   -18.952148        0.0    1.478027       -0.021973     1.0       -17.474121          True           True
8     -17.452148     -17.452148  567.699951   -17.452148    1.500000   -17.452148        0.0    0.000000        0.000000     1.0       -17.474121         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[08/09 16:33:15]  --------------------------------------------------------------------------------
[08/09 16:33:15]  Iteration: 158 (55 solution, 102 counterexamples)
[08/09 16:33:20]  Generator returned sat in 2.351326 secs.
[08/09 16:33:20]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:33:21]  Improved gap from 0 to 0
[08/09 16:33:21]  Improved number of small numbers from 61 to 110 out of a max of 110
[08/09 16:33:21]  Verifer returned sat in 0.765781 secs.
[08/09 16:33:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0      75.195068      75.194824  170.744141    75.195068  353.088135    75.194824        0.0    0.000244        0.000244     9.0        75.194824            -1             -1
1     428.260742     175.194824  170.744141   428.260742  353.065918   175.194824        0.0  253.065918      253.065918     1.0       428.260742         False           True
2     428.282959     275.194824  170.744141   428.282959  253.088135   275.194824        0.0  153.088135      153.088135     2.0       428.282959         False          False
3     578.216797     275.216797  170.744141   578.216797  303.021973   275.216797        0.0  303.000000      203.021973     3.0       428.282959         False          False
4     578.216797     428.260986  170.744141   578.216797    1.500000   428.260986        0.0  149.955811      103.021973     3.0       428.282959         False           True
5     578.216797     575.172852  170.744141   578.216797    1.500000   575.172852        0.0    3.043945        3.021973     3.0       428.282959         False           True
6     578.216797     575.194824  267.722168   578.216797    1.500000   575.194824        0.0    3.021973        0.000000     4.0       428.282959         False           True
7     578.216797     578.216797  367.721924   578.216797    3.000000   578.216797        0.0    0.000000       -0.000244     5.0       578.216797          True           True
8     579.716797     578.238770  367.721924   579.716797    1.500000   578.238770        0.0    1.478027      -98.500244     1.0       578.216797         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:33:21]  --------------------------------------------------------------------------------
[08/09 16:33:21]  Iteration: 159 (55 solution, 103 counterexamples)
[08/09 16:33:27]  Generator returned sat in 2.935510 secs.
[08/09 16:33:27]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:33:27]  Improved gap from 0 to 48.4375
[08/09 16:33:28]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:33:28]  Verifer returned sat in 0.357232 secs.
[08/09 16:33:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     420.617432     278.304932  213.034424   420.617432  300.000000   278.304932        0.0  142.312500       99.956055     9.0       278.304932            -1             -1
1     578.304932     420.661377  213.034424   578.304932  300.000000   420.661377        0.0  157.643555      157.643555     1.0       278.304932         False           True
2     720.617432     420.661377  213.034424   720.617432  299.956055   420.661377        0.0  299.956055      199.956055     1.0       720.617432         False          False
3     769.098877     578.348877  213.034424   769.098877  348.437500   578.348877        0.0  190.750000      148.437500     2.0       720.617432         False          False
4     769.098877     720.573486  213.034424   769.098877    1.500000   720.573486        0.0   48.525391       48.437500     3.0       720.617432         False          False
5     769.098877     720.661377  264.596924   769.098877    1.500000   720.661377        0.0   48.437500        0.000000     3.0       720.617432         False           True
6     769.098877     769.098877  316.159424   769.098877    1.500000   769.098877        0.0    0.000000      -48.437500     4.0       720.617432         False           True
7     865.973877     817.536377  367.721924   865.973877   96.875000   817.536377        0.0   48.437500        0.000000     1.0       865.973877          True           True
8     865.973877     865.973877  367.721924   865.973877    1.500000   865.973877        0.0    0.000000     -100.000000     2.0       865.973877         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:33:28]  --------------------------------------------------------------------------------
[08/09 16:33:28]  Iteration: 160 (55 solution, 104 counterexamples)
[08/09 16:33:34]  Generator returned sat in 2.865615 secs.
[08/09 16:33:34]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:33:34]  Improved gap from 775/16 to 48.4375
[08/09 16:33:34]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:33:34]  Verifer returned sat in 0.584804 secs.
[08/09 16:33:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     534.465820     281.472656  213.034180   534.465820  295.488281   281.472656        0.0  252.993164      152.993164     4.0       281.472656            -1             -1
1     576.916748     481.472412  213.034180   576.916748  295.444092   481.472412        0.0   95.444336       95.444092     3.0       576.916748         False           True
2     776.872803     534.509766  213.034180   776.872803  295.400391   534.509766        0.0  242.363037      195.400146     2.0       776.872803         False           True
3     829.910156     636.160156  213.034180   829.910156  295.400391   636.160156        0.0  193.750000      148.437500     2.0       776.872803         False           True
4     829.910156     776.829102  213.034180   829.910156    1.500000   776.829102        0.0   53.081055       48.437500     3.0       776.872803         False           True
5     829.910156     781.472656  264.596680   829.910156    1.500000   781.472656        0.0   48.437500        0.000000     3.0       776.872803         False           True
6     829.910156     829.910156  316.159180   829.910156    1.500000   829.910156        0.0    0.000000      -48.437500     4.0       776.872803         False           True
7     926.785156     878.347656  367.721680   926.785156   96.875000   878.347656        0.0   48.437500        0.000000     1.0       926.785156          True           True
8     926.785156     926.785156  419.283936   926.785156    1.500000   926.785156        0.0    0.000000      -48.437744     2.0       926.785156         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:33:35]  --------------------------------------------------------------------------------
[08/09 16:33:35]  Iteration: 161 (55 solution, 105 counterexamples)
[08/09 16:33:41]  Generator returned sat in 3.139385 secs.
[08/09 16:33:41]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:33:41]  Improved gap from 50297/1536 to 48.4375
[08/09 16:33:41]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:33:41]  Verifer returned sat in 0.479389 secs.
[08/09 16:33:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1070.961182     927.148682 -376.498291  1070.961182    0.043945   927.148682        0.0  143.812500       99.956299     3.0       927.148682            -1             -1
1    1231.791992    1071.004883 -376.498291  1231.791992  304.643311  1071.004883        0.0  160.787109      160.787109     1.0       927.148682         False           True
2    1375.604492    1117.923828 -376.498291  1375.604492  304.599609  1117.923828        0.0  257.680664      204.599609     2.0      1375.604492         False          False
3    1424.085938    1231.835938 -376.498291  1424.085938  306.162109  1231.835938        0.0  192.250000      153.081055     2.0      1375.604492         False          False
4    1424.085938    1371.004883 -376.498291  1424.085938    1.500000  1371.004883        0.0   53.081055       53.081055     3.0      1375.604492         False          False
5    1424.085938    1375.648438 -329.579346  1424.085938    1.500000  1375.648438        0.0   48.437500        0.000000     3.0      1375.604492         False           True
6    1424.085938    1424.085938 -278.016846  1424.085938    1.500000  1424.085938        0.0    0.000000      -48.437500     4.0      1375.604492         False           True
7    1520.960938    1472.523438 -226.454346  1520.960938   96.875000  1472.523438        0.0   48.437500        0.000000     1.0      1520.960938          True           True
8    1520.960938    1520.960938 -174.891846  1520.960938    1.500000  1520.960938        0.0    0.000000      -48.437500     2.0      1520.960938         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:33:42]  --------------------------------------------------------------------------------
[08/09 16:33:42]  Iteration: 162 (55 solution, 106 counterexamples)
[08/09 16:33:57]  Generator returned sat in 11.660857 secs.
[08/09 16:33:57]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:33:57]  Verifer returned unsat in 0.327245 secs.
[08/09 16:33:57]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:33:57]  --------------------------------------------------------------------------------
[08/09 16:33:57]  Iteration: 163 (56 solution, 106 counterexamples)
[08/09 16:34:03]  Generator returned sat in 3.217774 secs.
[08/09 16:34:03]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:04]  Improved number of small numbers from 43 to 109 out of a max of 109
[08/09 16:34:04]  Verifer returned sat in 0.567451 secs.
[08/09 16:34:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1218.184814     918.250244 -323.743896  1218.184814  399.631592   918.250244        0.0  299.934570      299.934570     3.0       918.250244            -1             -1
1    1317.837891    1018.250244 -323.743896  1317.837891  399.587646  1018.250244        0.0  299.587646      299.587646     4.0      1317.837891         False          False
2    1417.837891    1018.250244 -323.743896  1417.837891  399.587646  1018.250244        0.0  399.587646      299.587646     4.0      1317.837891         False           True
3    1518.250244    1218.228516 -323.743896  1518.250244  500.000000  1218.228516        0.0  300.021729      300.000000     3.0      1317.837891         False           True
4    1518.250244    1268.272217 -323.743896  1518.250244  299.978271  1268.272217        0.0  249.978027      200.000000     4.0      1317.837891         False          False
5    1518.294189    1417.881836 -323.743896  1518.294189  250.021973  1417.881836        0.0  100.412354      100.043945     3.0      1317.837891         False           True
6    1817.513428    1518.250244 -323.743896  1817.513428  399.631592  1518.250244        0.0  299.263184      299.263184     4.0      1317.837891         False          False
7    1918.381836    1518.337891 -323.743896  1918.381836  400.131592  1518.337891        0.0  400.043945      300.131592     2.0      1918.381836          True           True
8    1918.381836    1718.250244 -323.743896  1918.381836  250.065674  1718.250244        0.0  200.131592      200.131592     3.0      1918.381836         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:34:04]  --------------------------------------------------------------------------------
[08/09 16:34:04]  Iteration: 164 (56 solution, 107 counterexamples)
[08/09 16:34:09]  Generator returned sat in 1.967775 secs.
[08/09 16:34:09]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:10]  Verifer returned unsat in 0.311747 secs.
[08/09 16:34:10]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:10]  --------------------------------------------------------------------------------
[08/09 16:34:10]  Iteration: 165 (57 solution, 107 counterexamples)
[08/09 16:34:14]  Generator returned sat in 1.697056 secs.
[08/09 16:34:14]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:15]  Verifer returned unsat in 0.341995 secs.
[08/09 16:34:15]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:15]  --------------------------------------------------------------------------------
[08/09 16:34:15]  Iteration: 166 (58 solution, 107 counterexamples)
[08/09 16:34:19]  Generator returned sat in 1.703910 secs.
[08/09 16:34:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:20]  Verifer returned unsat in 0.270950 secs.
[08/09 16:34:20]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:20]  --------------------------------------------------------------------------------
[08/09 16:34:20]  Iteration: 167 (59 solution, 107 counterexamples)
[08/09 16:34:24]  Generator returned sat in 1.912534 secs.
[08/09 16:34:25]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:25]  Improved gap from 359/32768 to 7.8125
[08/09 16:34:25]  Improved number of small numbers from 52 to 110 out of a max of 110
[08/09 16:34:25]  Verifer returned sat in 0.836208 secs.
[08/09 16:34:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1559.688965    1391.289551 -323.743896  1559.688965    7.943848  1391.289551        0.0  168.399414      100.000000     2.0      1391.289551            -1             -1
1    1559.688965    1559.557617 -323.743896  1559.688965    7.943848  1559.557617        0.0    0.131348        0.000000     2.0      1391.289551         False          False
2    1567.457520    1559.688965 -231.556396  1567.457520    7.899902  1559.688965        0.0    7.768555       -0.043945     3.0      1567.457520         False          False
3    1567.545166    1567.501465 -139.368896  1567.545166    7.856201  1567.501465        0.0    0.043701       -7.768799     1.0      1567.545166         False           True
4    1743.713379    1651.613525 -139.368896  1743.713379  176.211914  1651.613525        0.0   92.099854       68.399414     1.0      1567.545166         False          False
5    1743.713379    1675.313965 -107.768311  1743.713379   92.055908  1675.313965        0.0   68.399414        0.000000     2.0      1567.545166         False          False
6    1790.938965    1743.713379  -54.994141  1790.938965  115.625000  1743.713379        0.0   47.225586       -0.000244     3.0      1567.545166         False          False
7    1801.525879    1790.982910   34.375244  1801.525879   57.812500  1790.982910        0.0   10.542969       -0.043945     1.0      1801.525879          True           True
8    1930.352295    1801.569824   34.375244  1930.352295  139.369385  1801.569824        0.0  128.782471       28.782471     1.0      1801.525879         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:34:26]  --------------------------------------------------------------------------------
[08/09 16:34:26]  Iteration: 168 (59 solution, 108 counterexamples)
[08/09 16:34:31]  Generator returned sat in 2.162535 secs.
[08/09 16:34:31]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:33]  Improved gap from 254927/32768 to 7.8125
[08/09 16:34:33]  Improved number of small numbers from 51 to 110 out of a max of 110
[08/09 16:34:33]  Verifer returned sat in 1.826815 secs.
[08/09 16:34:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1434.728760   -1599.441406 -416.887939 -1434.728760    0.043945 -1599.441406        0.0  164.712646      100.043701     5.0     -1599.441406            -1             -1
1   -1434.728760   -1434.772461 -416.887939 -1434.728760    7.812256 -1434.772461        0.0    0.043701        0.043701     3.0     -1599.441406         False           True
2   -1427.003662   -1434.772461 -324.700439 -1427.003662    7.768799 -1434.772461        0.0    7.768799       -0.043701     3.0     -1427.003662          True           True
3   -1419.147461   -1426.959961 -232.512939 -1419.147461   15.625000 -1426.959961        0.0    7.812500        0.000000     1.0     -1427.003662         False           True
4   -1254.478516   -1345.578369 -232.512939 -1254.478516  172.481445 -1345.578369        0.0   91.099854       64.668945     1.0     -1427.003662         False          False
5   -1254.478516   -1319.147461 -197.181885 -1254.478516   89.194092 -1319.147461        0.0   64.668945        0.000000     2.0     -1427.003662         False          False
6   -1203.522461   -1254.478516 -148.181641 -1203.522461  115.625000 -1254.478516        0.0   50.956055       -0.043701     3.0     -1427.003662         False          False
7   -1195.666016   -1203.478516  -55.994385 -1195.666016   58.812500 -1203.478516        0.0    7.812500        0.000000     1.0     -1195.666016          True           True
8   -1061.378662   -1195.622314  -55.994385 -1061.378662  142.099854 -1195.622314        0.0  134.243652       34.287354     1.0     -1195.666016         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:34:33]  --------------------------------------------------------------------------------
[08/09 16:34:34]  Iteration: 169 (59 solution, 109 counterexamples)
[08/09 16:34:38]  Generator returned sat in 1.817463 secs.
[08/09 16:34:38]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:40]  Improved gap from 109/16 to 7.8125
[08/09 16:34:40]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:34:40]  Verifer returned sat in 1.755258 secs.
[08/09 16:34:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -962.700195   -1125.418701  -39.281738  -962.700195    7.856201 -1125.418701        0.0  162.718506      100.000244     9.0     -1125.418701            -1             -1
1    -962.700195    -962.700439  -39.281738  -962.700195    7.812256  -962.700439        0.0    0.000244        0.000244     2.0      -962.700195         False           True
2    -954.887939    -962.700195   52.905518  -954.887939    7.812500  -962.700195        0.0    7.812256       -0.000244     3.0      -962.700195         False          False
3    -947.075195    -954.887695  145.093018  -947.075195   15.625000  -954.887695        0.0    7.812500        0.000000     1.0      -962.700195         False           True
4    -784.356689    -873.550537  145.093018  -784.356689  170.531006  -873.550537        0.0   89.193848       62.718506     1.0      -962.700195         False          False
5    -784.356689    -847.075195  182.374512  -784.356689   89.149902  -847.075195        0.0   62.718506        0.000000     2.0      -962.700195         False          False
6    -731.450195    -784.356689  229.468018  -731.450195  115.625000  -784.356689        0.0   52.906494        0.000000     3.0      -962.700195         False          False
7    -725.044189    -731.406738  321.611816  -725.044189   59.312500  -731.406738        0.0    6.362549       -1.450195     1.0      -725.044189          True           True
8    -589.262939    -723.593994  321.611816  -589.262939  142.143799  -723.593994        0.0  134.331055       34.331055     1.0      -725.044189         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:34:41]  --------------------------------------------------------------------------------
[08/09 16:34:41]  Iteration: 170 (59 solution, 110 counterexamples)
[08/09 16:34:46]  Generator returned sat in 2.498220 secs.
[08/09 16:34:46]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:47]  Verifer returned unsat in 0.314994 secs.
[08/09 16:34:47]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:47]  --------------------------------------------------------------------------------
[08/09 16:34:47]  Iteration: 171 (60 solution, 110 counterexamples)
[08/09 16:34:52]  Generator returned sat in 1.862418 secs.
[08/09 16:34:52]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:52]  Verifer returned unsat in 0.319134 secs.
[08/09 16:34:52]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:52]  --------------------------------------------------------------------------------
[08/09 16:34:52]  Iteration: 172 (61 solution, 110 counterexamples)
[08/09 16:34:57]  Generator returned sat in 1.961312 secs.
[08/09 16:34:57]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:57]  Verifer returned unsat in 0.224156 secs.
[08/09 16:34:57]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:34:57]  --------------------------------------------------------------------------------
[08/09 16:34:57]  Iteration: 173 (62 solution, 110 counterexamples)
[08/09 16:35:02]  Generator returned sat in 1.821339 secs.
[08/09 16:35:02]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:03]  Improved number of small numbers from 105 to 105 out of a max of 109
[08/09 16:35:03]  Verifer returned sat in 0.262789 secs.
[08/09 16:35:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1483.963379   -2183.963379 -17.581787 -1483.963379    0.043701 -2183.963379        0.0  700.000000      700.000000     2.0     -2183.963379            -1             -1
1   -1483.963379   -2183.963379 -17.581787 -1483.963379    0.043701 -2183.963379        0.0  700.000000      600.000000     2.0     -2183.963379         False          False
2   -1483.963379   -2083.963379 -17.581787 -1483.963379    0.043701 -2083.963379        0.0  600.000000      500.000000     3.0     -2183.963379         False          False
3   -1383.919678   -1983.963379 -17.581787 -1383.919678  700.043701 -1983.963379        0.0  600.043701      500.043701     4.0     -2183.963379         False          False
4   -1383.919678   -1883.963379 -17.581787 -1383.919678  200.000000 -1883.963379        0.0  500.043701      400.043701     5.0     -2183.963379         False          False
5   -1383.919678   -1783.963379 -17.581787 -1383.919678  300.000000 -1783.963379        0.0  400.043701      300.043701     6.0     -2183.963379         False          False
6   -1383.919678   -1650.600911 -17.581787 -1383.919678  300.000000 -1650.600911        0.0  266.681234      200.043701     7.0     -2183.963379         False          False
7   -1317.238444   -1483.963379 -17.581787 -1317.238444  333.362467 -1483.963379        0.0  166.724935      166.724935     8.0     -2183.963379         False          False
8    -983.919678   -1383.963379 -17.581787  -983.919678  500.043701 -1383.963379        0.0  400.043701      400.043701     6.0      -983.919678          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:35:03]  --------------------------------------------------------------------------------
[08/09 16:35:03]  Iteration: 174 (62 solution, 111 counterexamples)
[08/09 16:35:08]  Generator returned sat in 2.221921 secs.
[08/09 16:35:09]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:09]  Verifer returned unsat in 0.295520 secs.
[08/09 16:35:09]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:09]  --------------------------------------------------------------------------------
[08/09 16:35:09]  Iteration: 175 (63 solution, 111 counterexamples)
[08/09 16:35:14]  Generator returned sat in 1.793977 secs.
[08/09 16:35:14]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:14]  Verifer returned unsat in 0.249900 secs.
[08/09 16:35:14]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:14]  --------------------------------------------------------------------------------
[08/09 16:35:14]  Iteration: 176 (64 solution, 111 counterexamples)
[08/09 16:35:19]  Generator returned sat in 2.111096 secs.
[08/09 16:35:19]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:20]  Verifer returned unsat in 0.360524 secs.
[08/09 16:35:20]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:20]  --------------------------------------------------------------------------------
[08/09 16:35:20]  Iteration: 177 (65 solution, 111 counterexamples)
[08/09 16:35:24]  Generator returned sat in 1.742731 secs.
[08/09 16:35:24]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:25]  Verifer returned unsat in 0.214929 secs.
[08/09 16:35:25]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:25]  --------------------------------------------------------------------------------
[08/09 16:35:25]  Iteration: 178 (66 solution, 111 counterexamples)
[08/09 16:35:29]  Generator returned sat in 1.710877 secs.
[08/09 16:35:29]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:30]  Verifer returned unsat in 0.325096 secs.
[08/09 16:35:30]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:30]  --------------------------------------------------------------------------------
[08/09 16:35:30]  Iteration: 179 (67 solution, 111 counterexamples)
[08/09 16:35:34]  Generator returned sat in 1.708487 secs.
[08/09 16:35:35]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:35]  Verifer returned unsat in 0.241402 secs.
[08/09 16:35:35]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:35:35]  --------------------------------------------------------------------------------
[08/09 16:35:35]  Iteration: 180 (68 solution, 111 counterexamples)
[08/09 16:35:57]  Generator returned sat in 19.334627 secs.
[08/09 16:35:57]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:35:58]  Improved gap from 357/8192 to 23.4375
[08/09 16:35:58]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/09 16:35:58]  Verifer returned sat in 0.761691 secs.
[08/09 16:35:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2147.645752   -2147.689453 -138.783447 -2147.645752   23.568115 -2147.689453        0.0    0.043701        0.043701     2.0     -2147.689453            -1             -1
1   -2124.165039   -2147.558838  -62.351562 -2124.165039   23.524414 -2147.558838        0.0   23.393799       -0.043701     1.0     -2124.165039         False          False
2   -2124.077881   -2124.121338   14.210938 -2124.077881   23.480957 -2124.121338        0.0    0.043457      -23.394043     1.0     -2124.077881         False          False
3   -1777.246338   -2000.683838   14.210938 -1777.246338  346.875000 -2000.683838        0.0  223.437500      223.437500     1.0     -2124.077881         False          False
4   -1777.246338   -1902.224365   14.210938 -1777.246338  173.937500 -1902.224365        0.0  124.978027      123.437500     2.0     -2124.077881         False          False
5   -1777.246338   -1821.524414   14.210938 -1777.246338   87.468750 -1821.524414        0.0   44.278076       23.437500     3.0     -2124.077881         False          False
6   -1777.246338   -1800.683838   90.773438 -1777.246338   44.234375 -1800.683838        0.0   23.437500        0.000000     4.0     -2124.077881         False          False
7   -1777.246338   -1777.246338  165.795166 -1777.246338   22.617188 -1777.246338        0.0    0.000000      -24.978271     5.0     -2124.077881         False          False
8   -1652.268311   -1752.268066  165.795166 -1652.268311  124.978027 -1752.268066        0.0   99.999756       -0.000244     1.0     -1652.268311          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:35:59]  --------------------------------------------------------------------------------
[08/09 16:35:59]  Iteration: 181 (68 solution, 112 counterexamples)
[08/09 16:36:08]  Generator returned sat in 6.531163 secs.
[08/09 16:36:08]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:09]  Verifer returned unsat in 0.425435 secs.
[08/09 16:36:09]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:09]  --------------------------------------------------------------------------------
[08/09 16:36:09]  Iteration: 182 (69 solution, 112 counterexamples)
[08/09 16:36:13]  Generator returned sat in 1.819077 secs.
[08/09 16:36:14]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:14]  Verifer returned unsat in 0.337662 secs.
[08/09 16:36:14]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:14]  --------------------------------------------------------------------------------
[08/09 16:36:14]  Iteration: 183 (70 solution, 112 counterexamples)
[08/09 16:36:19]  Generator returned sat in 1.828292 secs.
[08/09 16:36:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:19]  Verifer returned unsat in 0.280594 secs.
[08/09 16:36:19]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:19]  --------------------------------------------------------------------------------
[08/09 16:36:19]  Iteration: 184 (71 solution, 112 counterexamples)
[08/09 16:36:24]  Generator returned sat in 1.806436 secs.
[08/09 16:36:24]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:25]  Verifer returned unsat in 0.335419 secs.
[08/09 16:36:25]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:25]  --------------------------------------------------------------------------------
[08/09 16:36:25]  Iteration: 185 (72 solution, 112 counterexamples)
[08/09 16:36:29]  Generator returned sat in 1.810608 secs.
[08/09 16:36:29]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:30]  Verifer returned unsat in 0.300827 secs.
[08/09 16:36:30]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:30]  --------------------------------------------------------------------------------
[08/09 16:36:30]  Iteration: 186 (73 solution, 112 counterexamples)
[08/09 16:36:35]  Generator returned sat in 1.945150 secs.
[08/09 16:36:35]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:35]  Verifer returned unsat in 0.307691 secs.
[08/09 16:36:35]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:35]  --------------------------------------------------------------------------------
[08/09 16:36:35]  Iteration: 187 (74 solution, 112 counterexamples)
[08/09 16:36:42]  Generator returned sat in 3.731248 secs.
[08/09 16:36:42]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:42]  Verifer returned unsat in 0.271488 secs.
[08/09 16:36:42]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:42]  --------------------------------------------------------------------------------
[08/09 16:36:42]  Iteration: 188 (75 solution, 112 counterexamples)
[08/09 16:36:47]  Generator returned sat in 1.808407 secs.
[08/09 16:36:47]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:48]  Verifer returned unsat in 0.311633 secs.
[08/09 16:36:48]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:48]  --------------------------------------------------------------------------------
[08/09 16:36:48]  Iteration: 189 (76 solution, 112 counterexamples)
[08/09 16:36:52]  Generator returned sat in 1.848527 secs.
[08/09 16:36:53]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:53]  Verifer returned unsat in 0.323927 secs.
[08/09 16:36:53]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:36:53]  --------------------------------------------------------------------------------
[08/09 16:36:53]  Iteration: 190 (77 solution, 112 counterexamples)
[08/09 16:37:00]  Generator returned sat in 3.882325 secs.
[08/09 16:37:00]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:00]  Improved number of small numbers from 46 to 109 out of a max of 109
[08/09 16:37:00]  Verifer returned sat in 0.300582 secs.
[08/09 16:37:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3767.269775   -3767.270020 -134.084229 -3767.269775  500.000000 -3767.270020        0.0    0.000244        0.000244     9.0     -3767.270020            -1             -1
1   -3267.291748   -3667.726562 -134.084229 -3267.291748  499.978271 -3667.726562        0.0  400.434814      399.978271     1.0     -3267.291748         False           True
2   -3167.748291   -3667.270020 -134.084229 -3167.748291  499.978271 -3667.270020        0.0  499.521729      399.521729     2.0     -3267.291748         False          False
3   -3167.291748   -3567.270020 -134.084229 -3167.291748  499.978271 -3567.270020        0.0  399.978271      299.978271     3.0     -3267.291748         False          False
4   -3167.291748   -3467.270020 -134.084229 -3167.291748  200.000000 -3467.270020        0.0  299.978271      199.978271     4.0     -3267.291748         False          False
5   -3167.291748   -3267.270020 -134.084229 -3167.291748  200.456543 -3267.270020        0.0   99.978271       99.978271     4.0     -3267.291748         False          False
6   -2867.270020   -3167.748291 -134.084229 -2867.270020  400.000000 -3167.748291        0.0  300.478271      300.000000     5.0     -3267.291748         False          False
7   -2767.248291   -3167.270020 -134.084229 -2767.248291  400.500000 -3167.270020        0.0  400.021729      300.021729     2.0     -2767.248291          True           True
8   -2767.248291   -2967.270020 -134.084229 -2767.248291  300.000000 -2967.270020        0.0  200.021729      200.021729     3.0     -2767.248291         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:37:01]  --------------------------------------------------------------------------------
[08/09 16:37:01]  Iteration: 191 (77 solution, 113 counterexamples)
[08/09 16:37:06]  Generator returned sat in 2.163125 secs.
[08/09 16:37:06]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:07]  Verifer returned unsat in 0.393570 secs.
[08/09 16:37:07]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:07]  --------------------------------------------------------------------------------
[08/09 16:37:07]  Iteration: 192 (78 solution, 113 counterexamples)
[08/09 16:37:12]  Generator returned sat in 1.974166 secs.
[08/09 16:37:12]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:12]  Improved number of small numbers from 63 to 109 out of a max of 109
[08/09 16:37:12]  Verifer returned sat in 0.382674 secs.
[08/09 16:37:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3467.343262   -4167.301514 -134.084473 -3467.343262  600.124756 -4167.301514        0.0  699.958252      699.958252     7.0     -4167.301514            -1             -1
1   -3467.343262   -4067.426514 -134.084473 -3467.343262  600.124756 -4067.426514        0.0  600.083252      599.958252     3.0     -4167.301514         False          False
2   -3467.301758   -4067.301514 -134.084473 -3467.301758  600.124756 -4067.301514        0.0  599.999756      499.999756     4.0     -4167.301514         False          False
3   -3467.176758   -3967.301514 -134.084473 -3467.176758  600.124756 -3967.301514        0.0  500.124756      400.124756     5.0     -4167.301514         False          False
4   -3467.176758   -3767.301758 -134.084473 -3467.176758  200.000000 -3767.301758        0.0  300.125000      300.124756     6.0     -4167.301514         False          False
5   -3467.176758   -3767.260010 -134.084473 -3467.176758  300.124756 -3767.260010        0.0  300.083252      200.124756     7.0     -4167.301514         False          False
6   -3467.176758   -3567.551514 -134.084473 -3467.176758  300.041504 -3567.551514        0.0  100.374756      100.124756     8.0     -4167.301514         False          False
7   -3167.801514   -3467.343262 -134.084473 -3167.801514  399.750000 -3467.343262        0.0  299.541748      299.500000     9.0     -4167.301514         False          False
8   -3067.093262   -3467.135254 -134.084473 -3067.093262  400.250000 -3467.135254        0.0  400.041992      300.208252     2.0     -3067.093262          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:37:13]  --------------------------------------------------------------------------------
[08/09 16:37:13]  Iteration: 193 (78 solution, 114 counterexamples)
[08/09 16:37:18]  Generator returned sat in 2.216548 secs.
[08/09 16:37:18]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:18]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/09 16:37:18]  Verifer returned sat in 0.209837 secs.
[08/09 16:37:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3167.265625   -3867.287354 -134.084473 -3167.265625    0.021729 -3867.287354        0.0  700.021729      700.021729     6.0     -3867.287354            -1             -1
1   -3167.265625   -3867.265625 -134.084473 -3167.265625    0.021729 -3867.265625        0.0  700.000000      600.021729     5.0     -3867.287354         False          False
2   -3167.265625   -3767.287354 -134.084473 -3167.265625    0.021729 -3767.287354        0.0  600.021729      500.021729     3.0     -3867.287354         False          False
3   -3167.265625   -3667.287354 -134.084473 -3167.265625    0.021729 -3667.287354        0.0  500.021729      400.021729     4.0     -3867.287354         False          False
4   -3167.265625   -3567.287354 -134.084473 -3167.265625  200.000000 -3567.287354        0.0  400.021729      300.021729     5.0     -3867.287354         False          False
5   -3167.265625   -3467.287354 -134.084473 -3167.265625  299.978271 -3467.287354        0.0  300.021729      200.021729     6.0     -3867.287354         False          False
6   -3167.265625   -3267.287354 -134.084473 -3167.265625  300.000000 -3267.287354        0.0  100.021729      100.021729     7.0     -3867.287354         False          False
7   -2867.287354   -3167.287354 -134.084473 -2867.287354  400.000000 -3167.287354        0.0  300.000000      300.000000     8.0     -3867.287354         False          False
8   -2766.787354   -3167.287354 -134.084473 -2766.787354  400.500000 -3167.287354        0.0  400.500000      300.500000     8.0     -2766.787354          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:37:19]  --------------------------------------------------------------------------------
[08/09 16:37:19]  Iteration: 194 (78 solution, 115 counterexamples)
[08/09 16:37:24]  Generator returned sat in 2.079128 secs.
[08/09 16:37:24]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:24]  Verifer returned unsat in 0.344769 secs.
[08/09 16:37:24]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:24]  --------------------------------------------------------------------------------
[08/09 16:37:24]  Iteration: 195 (79 solution, 115 counterexamples)
[08/09 16:37:29]  Generator returned sat in 1.871612 secs.
[08/09 16:37:29]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:30]  Verifer returned unsat in 0.350907 secs.
[08/09 16:37:30]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:30]  --------------------------------------------------------------------------------
[08/09 16:37:30]  Iteration: 196 (80 solution, 115 counterexamples)
[08/09 16:37:35]  Generator returned sat in 1.866980 secs.
[08/09 16:37:35]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:35]  Verifer returned unsat in 0.342728 secs.
[08/09 16:37:35]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:35]  --------------------------------------------------------------------------------
[08/09 16:37:35]  Iteration: 197 (81 solution, 115 counterexamples)
[08/09 16:37:40]  Generator returned sat in 1.858937 secs.
[08/09 16:37:40]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:41]  Verifer returned unsat in 0.240798 secs.
[08/09 16:37:41]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:41]  --------------------------------------------------------------------------------
[08/09 16:37:41]  Iteration: 198 (82 solution, 115 counterexamples)
[08/09 16:37:46]  Generator returned sat in 2.166820 secs.
[08/09 16:37:46]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:47]  Improved gap from 0 to 28.125
[08/09 16:37:47]  Improved number of small numbers from 42 to 110 out of a max of 110
[08/09 16:37:47]  Verifer returned sat in 0.963853 secs.
[08/09 16:37:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3613.941162   -3651.224365 -596.887939 -3613.941162   0.043213 -3651.224365        0.0  37.283203       37.282959     4.0     -3651.224365            -1             -1
1   -3613.941162   -3651.181152 -534.214600 -3613.941162   0.043457 -3651.181152        0.0  37.239990       -0.043701     4.0     -3651.224365         False           True
2   -3585.772705   -3613.897461 -462.339600 -3585.772705  65.408447 -3613.897461        0.0  28.124756       -0.000244     1.0     -3651.224365          True           True
3   -3548.315918   -3585.729248 -399.796143 -3548.315918  65.581543 -3585.729248        0.0  37.413330        0.000000     1.0     -3651.224365         False          False
4   -3520.234131   -3548.315918 -327.921143 -3520.234131  65.495117 -3548.315918        0.0  28.081787       -0.043213     2.0     -3651.224365         False          False
5   -3495.383301   -3520.190918 -256.046143 -3495.383301  52.932617 -3520.190918        0.0  24.807617       -3.317383     1.0     -3495.383301          True           True
6   -3426.484375   -3492.065918 -221.627686 -3426.484375  93.706543 -3492.065918        0.0  65.581543        0.000000     1.0     -3495.383301         False          False
7   -3398.402588   -3426.484375 -149.752930 -3398.402588  93.663330 -3426.484375        0.0  28.081787       -0.043457     2.0     -3495.383301         False          False
8   -3364.068604   -3398.359131 -149.752930 -3364.068604  62.415771 -3398.359131        0.0  34.290527      -65.709473     1.0     -3364.068604          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:37:47]  --------------------------------------------------------------------------------
[08/09 16:37:47]  Iteration: 199 (82 solution, 116 counterexamples)
[08/09 16:37:53]  Generator returned sat in 2.265289 secs.
[08/09 16:37:53]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:53]  Verifer returned unsat in 0.365826 secs.
[08/09 16:37:53]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:53]  --------------------------------------------------------------------------------
[08/09 16:37:53]  Iteration: 200 (83 solution, 116 counterexamples)
[08/09 16:37:58]  Generator returned sat in 1.907806 secs.
[08/09 16:37:58]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:59]  Verifer returned unsat in 0.279748 secs.
[08/09 16:37:59]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:37:59]  --------------------------------------------------------------------------------
[08/09 16:37:59]  Iteration: 201 (84 solution, 116 counterexamples)
[08/09 16:38:04]  Generator returned sat in 1.889376 secs.
[08/09 16:38:04]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:04]  Verifer returned unsat in 0.378564 secs.
[08/09 16:38:04]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:04]  --------------------------------------------------------------------------------
[08/09 16:38:04]  Iteration: 202 (85 solution, 116 counterexamples)
[08/09 16:38:09]  Generator returned sat in 1.885588 secs.
[08/09 16:38:09]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:10]  Verifer returned unsat in 0.300007 secs.
[08/09 16:38:10]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:10]  --------------------------------------------------------------------------------
[08/09 16:38:10]  Iteration: 203 (86 solution, 116 counterexamples)
[08/09 16:38:15]  Generator returned sat in 2.454030 secs.
[08/09 16:38:15]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:16]  Verifer returned unsat in 0.282206 secs.
[08/09 16:38:16]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:16]  --------------------------------------------------------------------------------
[08/09 16:38:16]  Iteration: 204 (87 solution, 116 counterexamples)
[08/09 16:38:21]  Generator returned sat in 1.882165 secs.
[08/09 16:38:21]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:21]  Verifer returned unsat in 0.281563 secs.
[08/09 16:38:21]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:21]  --------------------------------------------------------------------------------
[08/09 16:38:21]  Iteration: 205 (88 solution, 116 counterexamples)
[08/09 16:38:26]  Generator returned sat in 1.864101 secs.
[08/09 16:38:26]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:26]  Verifer returned unsat in 0.251256 secs.
[08/09 16:38:26]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:26]  --------------------------------------------------------------------------------
[08/09 16:38:26]  Iteration: 206 (89 solution, 116 counterexamples)
[08/09 16:38:32]  Generator returned sat in 2.113428 secs.
[08/09 16:38:32]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:32]  Verifer returned unsat in 0.319205 secs.
[08/09 16:38:32]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:32]  --------------------------------------------------------------------------------
[08/09 16:38:32]  Iteration: 207 (90 solution, 116 counterexamples)
[08/09 16:38:37]  Generator returned sat in 1.865350 secs.
[08/09 16:38:37]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:38]  Verifer returned unsat in 0.339338 secs.
[08/09 16:38:38]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:38]  --------------------------------------------------------------------------------
[08/09 16:38:38]  Iteration: 208 (91 solution, 116 counterexamples)
[08/09 16:38:43]  Generator returned sat in 1.862670 secs.
[08/09 16:38:43]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:43]  Verifer returned unsat in 0.303214 secs.
[08/09 16:38:43]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:43]  --------------------------------------------------------------------------------
[08/09 16:38:43]  Iteration: 209 (92 solution, 116 counterexamples)
[08/09 16:38:48]  Generator returned sat in 1.859133 secs.
[08/09 16:38:48]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:48]  Verifer returned unsat in 0.349767 secs.
[08/09 16:38:48]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:48]  --------------------------------------------------------------------------------
[08/09 16:38:48]  Iteration: 210 (93 solution, 116 counterexamples)
[08/09 16:38:54]  Generator returned sat in 2.271751 secs.
[08/09 16:38:54]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:54]  Verifer returned unsat in 0.343469 secs.
[08/09 16:38:54]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:38:54]  --------------------------------------------------------------------------------
[08/09 16:38:54]  Iteration: 211 (94 solution, 116 counterexamples)
[08/09 16:38:59]  Generator returned sat in 1.921047 secs.
[08/09 16:38:59]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:39:00]  Verifer returned unsat in 0.266875 secs.
[08/09 16:39:00]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:39:00]  --------------------------------------------------------------------------------
[08/09 16:39:00]  Iteration: 212 (95 solution, 116 counterexamples)
[08/09 16:39:05]  Generator returned sat in 1.900596 secs.
[08/09 16:39:05]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:39:05]  Verifer returned unsat in 0.314327 secs.
[08/09 16:39:05]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:39:05]  --------------------------------------------------------------------------------
[08/09 16:39:05]  Iteration: 213 (96 solution, 116 counterexamples)
[08/09 16:39:10]  Generator returned sat in 1.892765 secs.
[08/09 16:39:10]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:39:11]  Verifer returned unsat in 0.407044 secs.
[08/09 16:39:11]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:39:11]  --------------------------------------------------------------------------------
[08/09 16:39:11]  Iteration: 214 (97 solution, 116 counterexamples)
[08/09 16:39:24]  Generator returned sat in 10.063496 secs.
[08/09 16:39:24]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:39:25]  Improved gap from 0 to 17.1875
[08/09 16:39:25]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:39:25]  Verifer returned sat in 1.010838 secs.
[08/09 16:39:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1775.192627   -1875.149414 -249.719727 -1775.192627  526.042969 -1875.149414        0.0   99.956787       99.956787     7.0     -1875.149414            -1             -1
1   -1349.106445   -1775.192871 -249.719727 -1349.106445  526.042969 -1775.192871        0.0  426.086426      426.042969     7.0     -1875.149414         False           True
2   -1349.106445   -1775.149414 -249.719727 -1349.106445  426.043213 -1775.149414        0.0  426.042969      326.042969     2.0     -1349.106445          True           True
3   -1349.106445   -1575.149414 -249.719727 -1349.106445  426.000000 -1575.149414        0.0  226.042969      226.042969     3.0     -1349.106445         False          False
4   -1349.106445   -1475.149414 -249.719727 -1349.106445  215.000000 -1475.149414        0.0  126.042969      126.042969     4.0     -1349.106445         False          False
5   -1349.106445   -1405.899658 -249.719727 -1349.106445  109.500000 -1405.899658        0.0   56.793213       26.042969     5.0     -1349.106445         False          False
6   -1349.106445   -1359.567871 -182.488770 -1349.106445   56.750000 -1359.567871        0.0   10.461426       -6.726074     6.0     -1349.106445         False           True
7   -1329.192871   -1342.380127  -99.676514 -1329.192871   30.375000 -1342.380127        0.0   13.187256       -4.000244     1.0     -1349.106445         False           True
8   -1325.192627   -1325.192627  -99.676514 -1325.192627   17.187500 -1325.192627        0.0    0.000000     -100.000000     1.0     -1349.106445         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:39:26]  --------------------------------------------------------------------------------
[08/09 16:39:26]  Iteration: 215 (97 solution, 117 counterexamples)
[08/09 16:39:33]  Generator returned sat in 4.690845 secs.
[08/09 16:39:34]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:39:34]  Improved gap from 32591/16384 to 48.4375
[08/09 16:39:34]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/09 16:39:34]  Verifer returned sat in 0.602599 secs.
[08/09 16:39:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1484.174316   -1853.463135  250.194092 -1484.174316  369.245605 -1853.463135        0.0  369.288818      269.288818     7.0     -1853.463135            -1             -1
1   -1484.174316   -1653.463379  250.194092 -1484.174316  369.245605 -1653.463379        0.0  169.289062      169.288818     7.0     -1853.463135         False           True
2   -1353.420166   -1653.463135  250.194092 -1353.420166  300.043213 -1653.463135        0.0  300.042969      200.042969     8.0     -1353.420166          True           True
3   -1300.381348   -1484.131348  250.194092 -1300.381348  353.081787 -1484.131348        0.0  183.750000      153.081787     2.0     -1353.420166         False           True
4   -1300.381348   -1353.463135  250.194092 -1300.381348    2.000000 -1353.463135        0.0   53.081787       53.081787     3.0     -1353.420166         False           True
5   -1300.381348   -1353.377197  297.112305 -1300.381348    2.000000 -1353.377197        0.0   52.995850        0.000000     3.0     -1353.420166         False           True
6   -1300.381348   -1300.381348  348.674805 -1300.381348    2.000000 -1300.381348        0.0    0.000000      -48.437500     4.0     -1353.420166         False           True
7   -1203.506348   -1251.943848  400.237305 -1203.506348   96.875000 -1251.943848        0.0   48.437500        0.000000     1.0     -1203.506348          True           True
8   -1203.506348   -1203.506348  400.237305 -1203.506348    2.000000 -1203.506348        0.0    0.000000     -100.000000     2.0     -1203.506348         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:39:35]  --------------------------------------------------------------------------------
[08/09 16:39:35]  Iteration: 216 (97 solution, 118 counterexamples)
[08/09 16:39:42]  Generator returned sat in 3.966510 secs.
[08/09 16:39:42]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:39:42]  Improved gap from 767/16 to 48.4375
[08/09 16:39:42]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:39:42]  Verifer returned sat in 0.365647 secs.
[08/09 16:39:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1703.377197   -1703.377197  250.194092 -1703.377197  254.570312 -1703.377197        0.0    0.000000        0.000000     7.0     -1703.377197            -1             -1
1   -1448.849854   -1703.377197  250.194092 -1448.849854  254.527344 -1703.377197        0.0  254.527344      154.527344     7.0     -1448.849854         False           True
2   -1448.849854   -1603.377197  250.194092 -1448.849854  254.527344 -1603.377197        0.0  154.527344       54.527344     2.0     -1448.849854         False           True
3   -1254.939697   -1448.892822  250.194092 -1254.939697  348.437500 -1448.892822        0.0  193.953125      148.437500     3.0     -1448.849854         False          False
4   -1254.939697   -1303.420166  250.194092 -1254.939697    2.000000 -1303.420166        0.0   48.480469       48.437500     2.0     -1448.849854         False          False
5   -1254.939697   -1303.377197  301.756592 -1254.939697    2.000000 -1303.377197        0.0   48.437500        0.000000     3.0     -1448.849854         False          False
6   -1254.939697   -1254.939697  348.717529 -1254.939697    2.000000 -1254.939697        0.0    0.000000      -53.039062     4.0     -1448.849854         False          False
7   -1153.463135   -1201.900635  400.280029 -1153.463135  101.476562 -1201.900635        0.0   48.437500        0.000000     1.0     -1153.463135          True           True
8   -1153.463135   -1153.463135  451.842529 -1153.463135    2.000000 -1153.463135        0.0    0.000000      -48.437500     2.0     -1153.463135         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:39:43]  --------------------------------------------------------------------------------
[08/09 16:39:43]  Iteration: 217 (97 solution, 119 counterexamples)
[08/09 16:39:49]  Generator returned sat in 2.587361 secs.
[08/09 16:39:49]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:39:49]  Improved gap from 775/16 to 48.4375
[08/09 16:39:49]  Improved number of small numbers from 74 to 110 out of a max of 110
[08/09 16:39:49]  Verifer returned sat in 0.533330 secs.
[08/09 16:39:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1786.420410   -2186.377197  245.592529 -1786.420410  348.480225 -2186.377197        0.0  399.956787      399.956787     2.0     -2186.377197            -1             -1
1   -1786.420410   -2086.377441  245.592529 -1786.420410  348.437500 -2086.377441        0.0  299.957031      299.956787     2.0     -1786.420410         False          False
2   -1737.939941   -2086.377197  245.592529 -1737.939941  348.437500 -2086.377197        0.0  348.437256      248.437256     3.0     -1786.420410         False          False
3   -1737.939697   -1920.689697  245.592529 -1737.939697  348.437500 -1920.689697        0.0  182.750000      148.437500     4.0     -1786.420410         False          False
4   -1737.939697   -1791.021973  245.592529 -1737.939697    2.000000 -1791.021973        0.0   53.082275       48.437500     5.0     -1786.420410         False           True
5   -1737.939697   -1786.377197  297.155029 -1737.939697    2.000000 -1786.377197        0.0   48.437500        0.000000     4.0     -1786.420410         False           True
6   -1737.939697   -1737.939697  348.717529 -1737.939697    2.000000 -1737.939697        0.0    0.000000      -48.437500     4.0     -1786.420410         False           True
7   -1641.064697   -1689.502197  400.280029 -1641.064697   96.875000 -1689.502197        0.0   48.437500        0.000000     1.0     -1641.064697          True           True
8   -1641.064697   -1641.064697  451.842285 -1641.064697    2.000000 -1641.064697        0.0    0.000000      -48.437744     2.0     -1641.064697         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:39:50]  --------------------------------------------------------------------------------
[08/09 16:39:50]  Iteration: 218 (97 solution, 120 counterexamples)
[08/09 16:39:59]  Generator returned sat in 5.732550 secs.
[08/09 16:39:59]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:39:59]  Improved gap from 175/4096 to 48.4375
[08/09 16:39:59]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:39:59]  Verifer returned sat in 0.362247 secs.
[08/09 16:39:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2034.163574   -2329.646973  288.862305 -2034.163574  295.483398 -2329.646973        0.0  295.483398      195.483398     2.0     -2329.646973            -1             -1
1   -2034.163574   -2129.646973  288.862305 -2034.163574  295.440674 -2129.646973        0.0   95.483398       95.483398     2.0     -2034.163574         False          False
2   -1834.249023   -2076.607422  288.862305 -1834.249023  295.397949 -2076.607422        0.0  242.358398      195.397949     3.0     -1834.249023         False          False
3   -1781.209473   -1965.959473  288.862305 -1781.209473  295.397949 -1965.959473        0.0  184.750000      148.437500     2.0     -1834.249023         False           True
4   -1781.209473   -1834.291748  288.862305 -1781.209473    2.000000 -1834.291748        0.0   53.082275       48.437500     3.0     -1834.249023         False          False
5   -1781.209473   -1829.646973  340.424805 -1781.209473    2.000000 -1829.646973        0.0   48.437500        0.000000     3.0     -1834.249023         False           True
6   -1781.209473   -1781.209473  391.987305 -1781.209473    2.000000 -1781.209473        0.0    0.000000      -48.437500     4.0     -1834.249023         False           True
7   -1684.334473   -1732.771973  443.549805 -1684.334473   96.875000 -1732.771973        0.0   48.437500        0.000000     1.0     -1684.334473          True           True
8   -1684.334473   -1684.334473  495.112305 -1684.334473    2.000000 -1684.334473        0.0    0.000000      -48.437500     2.0     -1684.334473         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:40:00]  --------------------------------------------------------------------------------
[08/09 16:40:00]  Iteration: 219 (97 solution, 121 counterexamples)
[08/09 16:40:06]  Generator returned sat in 3.012957 secs.
[08/09 16:40:06]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:40:06]  Improved gap from 0 to 23.4375
[08/09 16:40:07]  Improved number of small numbers from 65 to 110 out of a max of 110
[08/09 16:40:07]  Verifer returned sat in 0.512918 secs.
[08/09 16:40:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1957.762207   -2257.719482  288.861816 -1957.762207  297.088379 -2257.719482        0.0  299.957275      299.957031     2.0     -2257.719482            -1             -1
1   -1957.762207   -2157.719238  288.861816 -1957.762207  297.045898 -2157.719238        0.0  199.957031      199.957031     2.0     -1957.762207         False          False
2   -1860.716064   -2157.676514  288.861816 -1860.716064  297.003174 -2157.676514        0.0  296.960449      197.003174     3.0     -1860.716064         False          False
3   -1834.281738   -1957.719238  288.861816 -1834.281738  323.394775 -1957.719238        0.0  123.437500      123.437500     2.0     -1860.716064         False           True
4   -1834.281738   -1860.759033  288.861816 -1834.281738    2.000000 -1860.759033        0.0   26.477295       23.437500     3.0     -1860.716064         False          False
5   -1834.281738   -1857.719238  365.424316 -1834.281738    2.000000 -1857.719238        0.0   23.437500        0.000000     3.0     -1860.716064         False           True
6   -1834.281738   -1834.281738  441.986816 -1834.281738    2.000000 -1834.281738        0.0    0.000000      -23.437500     4.0     -1860.716064         False           True
7   -1710.844238   -1712.801758  441.986816 -1710.844238  123.437500 -1712.801758        0.0    1.957520        0.000000     1.0     -1710.844238          True           True
8   -1710.801758   -1710.801758  441.986816 -1710.801758    2.000000 -1710.801758        0.0    0.000000      -99.957520     1.0     -1710.844238         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:40:07]  --------------------------------------------------------------------------------
[08/09 16:40:07]  Iteration: 220 (97 solution, 122 counterexamples)
[08/09 16:40:13]  Generator returned sat in 2.879182 secs.
[08/09 16:40:14]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:40:14]  Improved gap from 0 to 48.4375
[08/09 16:40:14]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:40:14]  Verifer returned sat in 0.705865 secs.
[08/09 16:40:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1297.875244   -1593.357910  288.861816 -1297.875244  295.482910 -1593.357910        0.0  295.482666      195.482666     3.0     -1593.357910            -1             -1
1   -1297.875244   -1393.357910  288.861816 -1297.875244  295.440186 -1393.357910        0.0   95.482666       95.482666     2.0     -1297.875244         False           True
2   -1097.960205   -1340.318115  288.861816 -1097.960205  295.397705 -1340.318115        0.0  242.357910      195.397705     3.0     -1097.960205         False          False
3   -1044.920410   -1236.670410  288.861816 -1044.920410  295.397705 -1236.670410        0.0  191.750000      148.437500     2.0     -1097.960205         False           True
4   -1044.920410   -1098.003174  288.861816 -1044.920410    2.000000 -1098.003174        0.0   53.082764       48.437500     3.0     -1097.960205         False          False
5   -1044.920410   -1093.357910  340.424316 -1044.920410    2.000000 -1093.357910        0.0   48.437500        0.000000     3.0     -1097.960205         False           True
6   -1044.920410   -1044.920410  391.986816 -1044.920410    2.000000 -1044.920410        0.0    0.000000      -48.437500     4.0     -1097.960205         False           True
7    -948.045410    -996.482910  443.549316  -948.045410   96.875000  -996.482910        0.0   48.437500        0.000000     1.0      -948.045410          True           True
8    -948.045410    -948.045410  443.549316  -948.045410    2.000000  -948.045410        0.0    0.000000     -100.000000     2.0      -948.045410         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:40:15]  --------------------------------------------------------------------------------
[08/09 16:40:15]  Iteration: 221 (97 solution, 123 counterexamples)
[08/09 16:40:23]  Generator returned sat in 4.780938 secs.
[08/09 16:40:23]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:23]  Verifer returned unsat in 0.192977 secs.
[08/09 16:40:23]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:23]  --------------------------------------------------------------------------------
[08/09 16:40:23]  Iteration: 222 (98 solution, 123 counterexamples)
[08/09 16:40:29]  Generator returned sat in 2.212699 secs.
[08/09 16:40:29]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:29]  Verifer returned unsat in 0.239438 secs.
[08/09 16:40:29]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:29]  --------------------------------------------------------------------------------
[08/09 16:40:29]  Iteration: 223 (99 solution, 123 counterexamples)
[08/09 16:40:35]  Generator returned sat in 2.230602 secs.
[08/09 16:40:35]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:35]  Verifer returned unsat in 0.224809 secs.
[08/09 16:40:35]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:35]  --------------------------------------------------------------------------------
[08/09 16:40:35]  Iteration: 224 (100 solution, 123 counterexamples)
[08/09 16:40:45]  Generator returned sat in 6.142602 secs.
[08/09 16:40:45]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:45]  Verifer returned unsat in 0.332569 secs.
[08/09 16:40:45]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:40:45]  --------------------------------------------------------------------------------
[08/09 16:40:45]  Iteration: 225 (101 solution, 123 counterexamples)
[08/09 16:40:54]  Generator returned sat in 5.844873 secs.
[08/09 16:40:55]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:40:55]  Improved gap from 11939/8192 to 1.5625
[08/09 16:40:55]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:40:55]  Verifer returned sat in 0.373605 secs.
[08/09 16:40:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1149.390869   -1449.406494  398.0979 -1149.390869  300.000000 -1449.406494        0.0  300.015625      300.000000     3.0     -1449.406494            -1             -1
1   -1149.390869   -1349.390869  398.0979 -1149.390869  300.000000 -1349.390869        0.0  200.000000      200.000000     3.0     -1449.406494         False           True
2   -1049.406494   -1349.390869  398.0979 -1049.406494  299.984375 -1349.390869        0.0  299.984375      199.984375     3.0     -1049.406494          True           True
3   -1047.828369   -1149.390869  398.0979 -1047.828369  301.562500 -1149.390869        0.0  101.562500      101.562500     4.0     -1049.406494         False           True
4   -1047.828369   -1049.422119  398.0979 -1047.828369    1.500000 -1049.422119        0.0    1.593750        1.562500     3.0     -1049.406494         False           True
5   -1047.828369   -1049.390869  496.5354 -1047.828369    1.500000 -1049.390869        0.0    1.562500        0.000000     3.0     -1049.406494         False           True
6   -1047.828369   -1047.828369  594.9729 -1047.828369    1.500000 -1047.828369        0.0    0.000000       -1.562500     4.0     -1049.406494         False           True
7   -1044.578369   -1046.265869  693.2854 -1044.578369    3.250000 -1046.265869        0.0    1.687500        0.000000     1.0     -1044.578369          True           True
8   -1044.578369   -1044.578369  791.7229 -1044.578369    1.500000 -1044.578369        0.0    0.000000       -1.562500     2.0     -1044.578369         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:40:56]  --------------------------------------------------------------------------------
[08/09 16:40:56]  Iteration: 226 (101 solution, 124 counterexamples)
[08/09 16:41:03]  Generator returned sat in 3.917936 secs.
[08/09 16:41:03]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:41:03]  Improved gap from 0 to 23.4375
[08/09 16:41:04]  Improved number of small numbers from 57 to 110 out of a max of 110
[08/09 16:41:04]  Verifer returned sat in 0.626961 secs.
[08/09 16:41:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1021.025879   -1121.026123  398.097656 -1021.025879  300.085205 -1121.026123        0.0  100.000244      100.000000     4.0     -1121.026123            -1             -1
1    -820.983643   -1021.025879  398.097656  -820.983643  300.042480 -1021.025879        0.0  200.042236      200.042236     4.0      -820.983643         False           True
2    -702.318604   -1020.983398  398.097656  -702.318604  318.707275 -1020.983398        0.0  318.664795      218.707275     2.0      -820.983643         False           True
3    -697.588379    -821.025879  398.097656  -697.588379  323.395020  -821.025879        0.0  123.437500      123.437500     3.0      -820.983643         False          False
4    -697.588379    -721.025879  398.097656  -697.588379    1.500000  -721.025879        0.0   23.437500       23.437500     3.0      -820.983643         False           True
5    -697.588379    -721.025879  474.660156  -697.588379    1.500000  -721.025879        0.0   23.437500        0.000000     3.0      -820.983643         False           True
6    -697.588379    -697.588379  551.222656  -697.588379    1.500000  -697.588379        0.0    0.000000      -23.437500     4.0      -820.983643         False           True
7    -574.150879    -575.608398  551.222656  -574.150879  123.437500  -575.608398        0.0    1.457520        0.000000     1.0      -574.150879          True           True
8    -574.108398    -574.108643  627.742920  -574.108398    1.500000  -574.108643        0.0    0.000244      -23.437256     1.0      -574.150879         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:41:04]  --------------------------------------------------------------------------------
[08/09 16:41:04]  Iteration: 227 (101 solution, 125 counterexamples)
[08/09 16:41:10]  Generator returned sat in 3.106709 secs.
[08/09 16:41:11]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:41:11]  Improved gap from 0 to 48.4375
[08/09 16:41:11]  Improved number of small numbers from 98 to 110 out of a max of 110
[08/09 16:41:11]  Verifer returned sat in 0.452608 secs.
[08/09 16:41:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1045.838379   -1245.838379  422.910156 -1045.838379  295.440186 -1245.838379        0.0  200.000000      100.000000     4.0     -1245.838379            -1             -1
1    -950.398193   -1045.838379  422.910156  -950.398193  295.440186 -1045.838379        0.0   95.440186       95.440186     4.0     -1245.838379         False           True
2    -750.440674   -1045.795654  422.910156  -750.440674  295.397705 -1045.795654        0.0  295.354980      195.397705     2.0      -750.440674          True           True
3    -697.400879    -886.650879  422.910156  -697.400879  348.394775  -886.650879        0.0  189.250000      148.437500     2.0      -750.440674         False           True
4    -697.400879    -750.483154  422.910156  -697.400879    1.500000  -750.483154        0.0   53.082275       48.437500     3.0      -750.440674         False           True
5    -697.400879    -745.838379  474.472656  -697.400879    1.500000  -745.838379        0.0   48.437500        0.000000     3.0      -750.440674         False           True
6    -697.400879    -697.400879  526.035156  -697.400879    1.500000  -697.400879        0.0    0.000000      -48.437500     4.0      -750.440674         False           True
7    -600.525879    -648.963379  577.597656  -600.525879   96.875000  -648.963379        0.0   48.437500        0.000000     1.0      -600.525879          True           True
8    -600.525879    -600.525879  577.597656  -600.525879    1.500000  -600.525879        0.0    0.000000     -100.000000     2.0      -600.525879         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:41:12]  --------------------------------------------------------------------------------
[08/09 16:41:12]  Iteration: 228 (101 solution, 126 counterexamples)
[08/09 16:41:19]  Generator returned sat in 3.957349 secs.
[08/09 16:41:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:19]  Verifer returned unsat in 0.300299 secs.
[08/09 16:41:19]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:19]  --------------------------------------------------------------------------------
[08/09 16:41:19]  Iteration: 229 (102 solution, 126 counterexamples)
[08/09 16:41:25]  Generator returned sat in 2.598249 secs.
[08/09 16:41:26]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:26]  Verifer returned unsat in 0.432606 secs.
[08/09 16:41:26]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:26]  --------------------------------------------------------------------------------
[08/09 16:41:26]  Iteration: 230 (103 solution, 126 counterexamples)
[08/09 16:41:32]  Generator returned sat in 2.386620 secs.
[08/09 16:41:32]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:32]  Verifer returned unsat in 0.414241 secs.
[08/09 16:41:32]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:32]  --------------------------------------------------------------------------------
[08/09 16:41:32]  Iteration: 231 (104 solution, 126 counterexamples)
[08/09 16:41:38]  Generator returned sat in 2.300539 secs.
[08/09 16:41:38]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:39]  Verifer returned unsat in 0.351762 secs.
[08/09 16:41:39]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:39]  --------------------------------------------------------------------------------
[08/09 16:41:39]  Iteration: 232 (105 solution, 126 counterexamples)
[08/09 16:41:44]  Generator returned sat in 2.322641 secs.
[08/09 16:41:44]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:45]  Verifer returned unsat in 0.268057 secs.
[08/09 16:41:45]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:41:45]  --------------------------------------------------------------------------------
[08/09 16:41:45]  Iteration: 233 (106 solution, 126 counterexamples)
[08/09 16:41:52]  Generator returned sat in 4.030977 secs.
[08/09 16:41:52]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:41:53]  Improved gap from 87/4096 to 23.4375
[08/09 16:41:53]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:41:53]  Verifer returned sat in 0.661380 secs.
[08/09 16:41:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1437.993408   -1735.080566  1225.887695 -1437.993408    0.042480 -1735.080566        0.0  297.087158      197.087158     2.0     -1735.080566            -1             -1
1   -1437.993408   -1535.080566  1225.887695 -1437.993408  297.044922 -1535.080566        0.0   97.087158       97.087158     2.0     -1735.080566         False          False
2   -1238.078369   -1508.645508  1225.887695 -1238.078369  297.002197 -1508.645508        0.0  270.567139      197.002197     3.0     -1238.078369         False          False
3   -1211.643066   -1335.080566  1225.887695 -1211.643066  297.002441 -1335.080566        0.0  123.437500      123.437500     2.0     -1238.078369         False           True
4   -1211.643066   -1238.120605  1225.887695 -1211.643066    1.000000 -1238.120605        0.0   26.477539       23.437500     3.0     -1238.078369         False          False
5   -1211.643066   -1235.080566  1302.450195 -1211.643066    1.000000 -1235.080566        0.0   23.437500        0.000000     3.0     -1238.078369         False           True
6   -1211.643066   -1211.643066  1379.012695 -1211.643066    1.000000 -1211.643066        0.0    0.000000      -23.437500     4.0     -1238.078369         False           True
7   -1088.205566   -1088.248291  1379.012695 -1088.205566  123.437500 -1088.248291        0.0    0.042725        0.000000     1.0     -1088.205566          True           True
8   -1087.248291   -1088.163086  1379.012939 -1087.248291    1.000000 -1088.163086        0.0    0.914795      -99.042480     1.0     -1088.205566         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:41:53]  --------------------------------------------------------------------------------
[08/09 16:41:53]  Iteration: 234 (106 solution, 127 counterexamples)
[08/09 16:42:11]  Generator returned sat in 14.651296 secs.
[08/09 16:42:12]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:42:12]  Improved gap from 0 to 14.0625
[08/09 16:42:13]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:42:13]  Verifer returned sat in 0.931805 secs.
[08/09 16:42:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -946.113281   -1339.092041   829.89917  -946.113281  392.95752 -1339.092041        0.0  392.978760       292.97876     1.0     -1339.092041            -1             -1
1    -946.113281   -1139.113281   829.89917  -946.113281  392.95752 -1139.113281        0.0  193.000000       192.97876     2.0     -1339.092041         False          False
2    -751.070801   -1139.092041   829.89917  -751.070801  388.04248 -1139.092041        0.0  388.021240       288.02124     3.0      -751.070801          True           True
3    -751.070801    -946.092041   829.89917  -751.070801  388.00000  -946.092041        0.0  195.021240       188.02124     2.0      -751.070801         False           True
4    -751.070801    -849.592041   829.89917  -751.070801  195.00000  -849.592041        0.0   98.521240        88.02124     3.0      -751.070801         False           True
5    -751.070801    -763.947021   829.89917  -751.070801   98.50000  -763.947021        0.0   12.876221       -11.97876     4.0      -751.070801         False           True
6    -713.697021    -727.738281   904.48291  -713.697021   50.25000  -727.738281        0.0   14.041260        -0.02124     1.0      -751.070801         False           True
7    -701.613281    -713.675781   990.42041  -701.613281   26.12500  -713.675781        0.0   12.062500        -2.00000     1.0      -751.070801         False          False
8    -699.613281    -699.613281  1076.35791  -699.613281   14.06250  -699.613281        0.0    0.000000       -14.06250     1.0      -751.070801         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:42:13]  --------------------------------------------------------------------------------
[08/09 16:42:13]  Iteration: 235 (106 solution, 128 counterexamples)
[08/09 16:42:21]  Generator returned sat in 4.636928 secs.
[08/09 16:42:21]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:42:22]  Improved gap from 43/4096 to 1.5625
[08/09 16:42:22]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:42:22]  Verifer returned sat in 0.623120 secs.
[08/09 16:42:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1124.617920   -1524.602295   891.92041 -1124.617920  399.984375 -1524.602295        0.0  399.984375      299.984375     1.0     -1524.602295            -1             -1
1   -1124.617920   -1324.602295   891.92041 -1124.617920  399.984375 -1324.602295        0.0  199.984375      199.984375     2.0     -1524.602295         False          False
2    -924.633545   -1324.571045   891.92041  -924.633545  399.968750 -1324.571045        0.0  399.937500      299.968750     3.0      -924.633545          True           True
3    -924.602295   -1124.602295   891.92041  -924.602295  399.968750 -1124.602295        0.0  200.000000      200.000000     2.0      -924.633545         False           True
4    -924.602295   -1069.586670   891.92041  -924.602295    1.500000 -1069.586670        0.0  144.984375      100.000000     3.0      -924.633545         False           True
5    -924.602295    -924.617920   891.92041  -924.602295    1.500000  -924.617920        0.0    0.015625        0.000000     3.0      -924.633545         False           True
6    -923.117920    -924.602295   988.48291  -923.117920    1.500000  -924.602295        0.0    1.484375       -1.953125     4.0      -924.633545         False           True
7    -919.602295    -921.164795  1086.92041  -919.602295    5.000000  -921.164795        0.0    1.562500        0.000000     1.0      -919.602295          True           True
8    -919.602295    -919.602295  1086.92041  -919.602295    1.500000  -919.602295        0.0    0.000000     -100.000000     2.0      -919.602295         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:42:22]  --------------------------------------------------------------------------------
[08/09 16:42:22]  Iteration: 236 (106 solution, 129 counterexamples)
[08/09 16:42:30]  Generator returned sat in 3.896510 secs.
[08/09 16:42:30]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:42:30]  Improved gap from 25/16 to 1.5625
[08/09 16:42:31]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/09 16:42:31]  Verifer returned sat in 0.713838 secs.
[08/09 16:42:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1773.051270   -2073.008789   891.920166 -1773.051270  253.877197 -2073.008789        0.0  299.957520      199.957520     3.0     -2073.008789            -1             -1
1   -1773.051270   -1873.008789   891.920166 -1773.051270  253.877197 -1873.008789        0.0   99.957520       99.957520     3.0     -2073.008789         False           True
2   -1619.174072   -1773.008789   891.920166 -1619.174072  253.834717 -1773.008789        0.0  153.834717      153.834717     1.0     -1619.174072          True           True
3   -1471.446533   -1673.009033   891.920166 -1471.446533  301.562256 -1673.009033        0.0  201.562500      201.562256     2.0     -1619.174072         False          False
4   -1471.446533   -1619.216309   891.920166 -1471.446533    1.500000 -1619.216309        0.0  147.769775      101.562256     3.0     -1619.174072         False          False
5   -1471.446533   -1473.051270   891.920166 -1471.446533    1.500000 -1473.051270        0.0    1.604736        1.562256     3.0     -1619.174072         False           True
6   -1471.446533   -1473.008789   990.357666 -1471.446533    1.500000 -1473.008789        0.0    1.562256       -0.000244     4.0     -1619.174072         False           True
7   -1469.258789   -1471.446289  1088.170166 -1469.258789    3.750000 -1471.446289        0.0    2.187500        0.000000     1.0     -1469.258789          True           True
8   -1469.258789   -1469.258789  1088.170166 -1469.258789    1.500000 -1469.258789        0.0    0.000000     -100.000000     2.0     -1469.258789         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:42:31]  --------------------------------------------------------------------------------
[08/09 16:42:31]  Iteration: 237 (106 solution, 130 counterexamples)
[08/09 16:42:46]  Generator returned sat in 11.056037 secs.
[08/09 16:42:46]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:42:46]  Improved gap from 25/16 to 1.5625
[08/09 16:42:46]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:42:46]  Verifer returned sat in 0.529056 secs.
[08/09 16:42:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2366.977539   -2666.961914  1485.873291 -2366.977539  299.968750 -2666.961914        0.0  299.984375      199.984375     2.0     -2666.961914            -1             -1
1   -2366.977539   -2466.961914  1485.873291 -2366.977539  299.968750 -2466.961914        0.0   99.984375       99.984375     2.0     -2666.961914         False          False
2   -2167.008789   -2366.961914  1485.873291 -2167.008789  299.953125 -2366.961914        0.0  199.953125      199.953125     1.0     -2167.008789         False          False
3   -2066.961914   -2266.961914  1485.873291 -2066.961914  300.000000 -2266.961914        0.0  200.000000      200.000000     2.0     -2167.008789         False          False
4   -2066.961914   -2167.024414  1485.873291 -2066.961914    1.500000 -2167.024414        0.0  100.062500      100.000000     3.0     -2167.008789         False          False
5   -2066.961914   -2066.977539  1485.873291 -2066.961914    1.500000 -2066.977539        0.0    0.015625        0.000000     3.0     -2167.008789         False           True
6   -2065.477539   -2066.961914  1582.935791 -2065.477539    1.500000 -2066.961914        0.0    1.484375       -1.453125     4.0     -2167.008789         False           True
7   -2062.461914   -2064.024414  1681.373291 -2062.461914    4.500000 -2064.024414        0.0    1.562500        0.000000     1.0     -2062.461914          True           True
8   -2062.461914   -2062.461914  1681.373291 -2062.461914    1.500000 -2062.461914        0.0    0.000000     -100.000000     2.0     -2062.461914         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:42:47]  --------------------------------------------------------------------------------
[08/09 16:42:47]  Iteration: 238 (106 solution, 131 counterexamples)
[08/09 16:42:54]  Generator returned sat in 3.824464 secs.
[08/09 16:42:54]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:42:55]  Improved gap from 0 to 48.4375
[08/09 16:42:55]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:42:55]  Verifer returned sat in 0.488241 secs.
[08/09 16:42:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2284.506348   -2646.651367  1465.562744 -2284.506348  295.439697 -2646.651367        0.0  362.145020      262.145264     3.0     -2646.651367            -1             -1
1   -2284.506348   -2446.651611  1465.562744 -2284.506348  295.439697 -2446.651611        0.0  162.145264      162.145264     3.0     -2646.651367         False           True
2   -2151.254395   -2446.651611  1465.562744 -2151.254395  295.397217 -2446.651611        0.0  295.397217      195.397217     3.0     -2151.254395          True           True
3   -2098.214111   -2284.464111  1465.562744 -2098.214111  348.437500 -2284.464111        0.0  186.250000      148.437500     2.0     -2151.254395         False           True
4   -2098.214111   -2151.296875  1465.562744 -2098.214111    1.500000 -2151.296875        0.0   53.082764       48.437500     3.0     -2151.254395         False           True
5   -2098.214111   -2146.651611  1517.125244 -2098.214111    1.500000 -2146.651611        0.0   48.437500        0.000000     3.0     -2151.254395         False           True
6   -2098.214111   -2098.214111  1568.687744 -2098.214111    1.500000 -2098.214111        0.0    0.000000      -48.437500     4.0     -2151.254395         False           True
7   -2001.339111   -2049.776611  1620.250244 -2001.339111   96.875000 -2049.776611        0.0   48.437500        0.000000     1.0     -2001.339111          True           True
8   -2001.339111   -2001.339111  1620.250244 -2001.339111    1.500000 -2001.339111        0.0    0.000000     -100.000000     2.0     -2001.339111         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:42:55]  --------------------------------------------------------------------------------
[08/09 16:42:55]  Iteration: 239 (106 solution, 132 counterexamples)
[08/09 16:43:04]  Generator returned sat in 5.016942 secs.
[08/09 16:43:04]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:43:04]  Improved gap from 767/16 to 48.4375
[08/09 16:43:05]  Improved number of small numbers from 50 to 110 out of a max of 110
[08/09 16:43:05]  Verifer returned sat in 0.592765 secs.
[08/09 16:43:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1629.035400   -1929.162842   813.737061 -1629.035400  300.127197 -1929.162842        0.0  300.127441      265.790527     2.0     -1929.162842            -1             -1
1   -1629.035400   -1794.825928   813.737061 -1629.035400  300.084717 -1794.825928        0.0  165.790527      165.790527     3.0     -1629.035400         False          False
2   -1494.783447   -1794.825928   813.737061 -1494.783447  300.042480 -1794.825928        0.0  300.042480      200.042480     3.0     -1494.783447         False           True
3   -1441.743408   -1628.993408   813.737061 -1441.743408  353.082520 -1628.993408        0.0  187.250000      153.082520     2.0     -1494.783447         False           True
4   -1441.743408   -1494.825928   813.737061 -1441.743408    1.500000 -1494.825928        0.0   53.082520       53.082520     3.0     -1494.783447         False          False
5   -1441.743408   -1490.180908   860.654541 -1441.743408    1.500000 -1490.180908        0.0   48.437500        0.000000     3.0     -1494.783447         False           True
6   -1441.743408   -1441.743408   912.217041 -1441.743408    1.500000 -1441.743408        0.0    0.000000      -48.437500     4.0     -1494.783447         False           True
7   -1344.868408   -1393.305908   963.779541 -1344.868408   96.875000 -1393.305908        0.0   48.437500        0.000000     1.0     -1344.868408          True           True
8   -1344.868408   -1344.868408  1015.341797 -1344.868408    1.500000 -1344.868408        0.0    0.000000      -48.437744     2.0     -1344.868408         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:43:05]  --------------------------------------------------------------------------------
[08/09 16:43:05]  Iteration: 240 (106 solution, 133 counterexamples)
[08/09 16:43:12]  Generator returned sat in 3.591650 secs.
[08/09 16:43:12]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:43:13]  Improved gap from 751/16 to 48.4375
[08/09 16:43:13]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:43:13]  Verifer returned sat in 0.513862 secs.
[08/09 16:43:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1579.450195   -1937.595215  756.506348 -1579.450195    0.042236 -1937.595215        0.0  358.145020      258.145020     5.0     -1937.595215            -1             -1
1   -1579.450195   -1737.595215  756.506348 -1579.450195  295.438965 -1737.595215        0.0  158.145020      158.145020     6.0     -1937.595215         False           True
2   -1442.198486   -1737.595215  756.506348 -1442.198486  295.396729 -1737.595215        0.0  295.396729      195.396729     6.0     -1442.198486          True           True
3   -1389.157715   -1579.407715  756.506348 -1389.157715  348.437500 -1579.407715        0.0  190.250000      148.437500     2.0     -1442.198486         False           True
4   -1389.157715   -1442.240723  756.506348 -1389.157715    1.500000 -1442.240723        0.0   53.083008       48.437500     3.0     -1442.198486         False          False
5   -1389.157715   -1437.595215  808.068848 -1389.157715    1.500000 -1437.595215        0.0   48.437500        0.000000     3.0     -1442.198486         False           True
6   -1389.157715   -1389.157715  859.631348 -1389.157715    1.500000 -1389.157715        0.0    0.000000      -48.437500     4.0     -1442.198486         False           True
7   -1292.282715   -1340.720215  911.193848 -1292.282715   96.875000 -1340.720215        0.0   48.437500        0.000000     1.0     -1292.282715          True           True
8   -1292.282715   -1292.282715  911.194092 -1292.282715    1.500000 -1292.282715        0.0    0.000000      -99.999756     2.0     -1292.282715         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:43:13]  --------------------------------------------------------------------------------
[08/09 16:43:13]  Iteration: 241 (106 solution, 134 counterexamples)
[08/09 16:43:21]  Generator returned sat in 3.811543 secs.
[08/09 16:43:21]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:43:21]  Improved gap from 775/16 to 48.4375
[08/09 16:43:21]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:43:21]  Verifer returned sat in 0.532399 secs.
[08/09 16:43:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -662.717773    -962.844238  756.506104  -662.717773  300.126465  -962.844238        0.0  300.126465      267.790283     4.0      -962.844238            -1             -1
1    -662.717773    -830.508057  756.506104  -662.717773  300.084229  -830.508057        0.0  167.790283      167.790283     4.0      -662.717773         False           True
2    -530.465820    -830.508057  756.506104  -530.465820  300.042236  -830.508057        0.0  300.042236      200.042236     4.0      -530.465820         False           True
3    -477.425293    -662.675293  756.506104  -477.425293  353.082764  -662.675293        0.0  185.250000      153.082764     2.0      -530.465820         False           True
4    -477.425293    -530.508301  756.506104  -477.425293    1.500000  -530.508301        0.0   53.083008       53.082764     3.0      -530.465820         False           True
5    -477.425293    -525.862793  803.423340  -477.425293    1.500000  -525.862793        0.0   48.437500        0.000000     3.0      -530.465820         False           True
6    -477.425293    -477.425293  854.985840  -477.425293    1.500000  -477.425293        0.0    0.000000      -48.437500     4.0      -530.465820         False           True
7    -380.550293    -428.987793  906.548340  -380.550293   96.875000  -428.987793        0.0   48.437500        0.000000     1.0      -380.550293          True           True
8    -380.550293    -380.550293  958.110840  -380.550293    1.500000  -380.550293        0.0    0.000000      -48.437500     2.0      -380.550293         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:43:22]  --------------------------------------------------------------------------------
[08/09 16:43:22]  Iteration: 242 (106 solution, 135 counterexamples)
[08/09 16:43:30]  Generator returned sat in 3.962231 secs.
[08/09 16:43:30]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:43:30]  Improved gap from 775/16 to 48.4375
[08/09 16:43:30]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:43:30]  Verifer returned sat in 0.679976 secs.
[08/09 16:43:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0      72.145020    -165.354980  756.506104    72.145020    0.042236  -165.354980        0.0  237.500000      137.500000     4.0      -165.354980            -1             -1
1     199.435791      23.707520  756.506104   199.435791  364.790771    23.707520        0.0  175.728271      164.790771     5.0      -165.354980         False           True
2     339.248291      72.187256  756.506104   339.248291  315.540771    72.187256        0.0  267.061035      204.603271     2.0       339.248291          True           True
3     387.728027     199.478027  756.506104   387.728027  315.540771   199.478027        0.0  188.250000      153.083008     2.0       339.248291         False          False
4     387.728027     334.645020  756.506104   387.728027    1.500000   334.645020        0.0   53.083008       53.083008     3.0       339.248291         False          False
5     387.728027     339.290527  803.423096   387.728027    1.500000   339.290527        0.0   48.437500        0.000000     3.0       339.248291         False           True
6     387.728027     387.728027  854.985596   387.728027    1.500000   387.728027        0.0    0.000000      -48.437500     4.0       339.248291         False           True
7     484.603027     436.165527  906.548096   484.603027   96.875000   436.165527        0.0   48.437500        0.000000     1.0       484.603027          True           True
8     484.603027     484.603027  906.548340   484.603027    1.500000   484.603027        0.0    0.000000      -99.999756     2.0       484.603027         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:43:31]  --------------------------------------------------------------------------------
[08/09 16:43:31]  Iteration: 243 (106 solution, 136 counterexamples)
[08/09 16:43:38]  Generator returned sat in 3.603782 secs.
[08/09 16:43:38]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:43:39]  Improved gap from 6317/4096 to 1.5625
[08/09 16:43:39]  Improved number of small numbers from 67 to 110 out of a max of 110
[08/09 16:43:39]  Verifer returned sat in 0.771761 secs.
[08/09 16:43:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     667.445557     167.529541   25.909668   667.445557  499.915527   167.529541        0.0  499.916016      499.916016     5.0       167.529541            -1             -1
1     667.445557     267.529541   25.909668   667.445557  499.915527   267.529541        0.0  399.916016      399.916016     4.0       167.529541         False           True
2     667.445557     267.529541   25.909668   667.445557  399.915771   267.529541        0.0  399.916016      299.916016     4.0       667.445557          True           True
3     668.861084     467.529541   25.909668   668.861084  401.331543   467.529541        0.0  201.331543      201.331543     5.0       667.445557         False           True
4     668.861084     521.863932   25.909668   668.861084    1.500000   521.863932        0.0  146.997152      101.331543     6.0       667.445557         False           True
5     668.861084     667.445557   25.909668   668.861084    1.500000   667.445557        0.0    1.415527        1.331543     7.0       667.445557         False           True
6     668.945557     667.529785  124.346924   668.945557    1.500000   667.529785        0.0    1.415771       -0.146729     4.0       667.445557         False           True
7     671.779785     669.092285  221.659424   671.779785    4.250000   669.092285        0.0    2.687500        0.000000     1.0       671.779785          True           True
8     671.779785     671.779785  320.096924   671.779785    1.500000   671.779785        0.0    0.000000       -1.562500     2.0       671.779785         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:43:40]  --------------------------------------------------------------------------------
[08/09 16:43:40]  Iteration: 244 (106 solution, 137 counterexamples)
[08/09 16:43:48]  Generator returned sat in 4.297043 secs.
[08/09 16:43:48]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:43:48]  Improved gap from 0 to 48.4375
[08/09 16:43:48]  Improved number of small numbers from 63 to 110 out of a max of 110
[08/09 16:43:48]  Verifer returned sat in 0.472871 secs.
[08/09 16:43:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     350.531982     350.489990 -257.050781   350.531982  295.438232   350.489990        0.0    0.041992      -99.957764     2.0       350.489990            -1             -1
1     645.928223     550.489746 -257.050781   645.928223  295.438232   550.489746        0.0   95.438477       95.438477     1.0       350.489990         False          False
2     845.886230     603.530762 -257.050781   845.886230  295.396484   603.530762        0.0  242.355469      195.396484     2.0       845.886230         False          False
3     898.927246     707.677246 -257.050781   898.927246  295.396484   707.677246        0.0  191.250000      148.437500     2.0       845.886230         False          False
4     898.927246     845.844482 -257.050781   898.927246    1.500000   845.844482        0.0   53.082764       48.437500     3.0       845.886230         False          False
5     898.927246     850.489746 -205.488281   898.927246    1.500000   850.489746        0.0   48.437500        0.000000     3.0       845.886230         False           True
6     898.927246     898.927246 -153.925781   898.927246    1.500000   898.927246        0.0    0.000000      -48.437500     4.0       845.886230         False           True
7     995.802246     947.364746 -102.363281   995.802246   96.875000   947.364746        0.0   48.437500        0.000000     1.0       995.802246          True           True
8     995.802246     995.802246  -50.800781   995.802246    1.500000   995.802246        0.0    0.000000      -48.437500     2.0       995.802246         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:43:49]  --------------------------------------------------------------------------------
[08/09 16:43:49]  Iteration: 245 (106 solution, 138 counterexamples)
[08/09 16:44:05]  Generator returned sat in 13.014365 secs.
[08/09 16:44:06]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:44:07]  Improved gap from 0 to 23.4375
[08/09 16:44:07]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:44:07]  Verifer returned sat in 1.370725 secs.
[08/09 16:44:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0      99.838867    -500.139893  593.578857    99.838867    0.041992  -500.139893        0.0  599.978760      499.978760     4.0      -500.139893            -1             -1
1      99.838867    -300.140137  593.578857    99.838867    0.041992  -300.140137        0.0  399.979004      399.978760     3.0      -500.139893         False           True
2      99.838867    -282.926514  593.578857    99.838867    0.020996  -282.926514        0.0  382.765381      299.978760     3.0        99.838867         False          False
3     126.401611    -100.140137  593.578857   126.401611  409.328125  -100.140137        0.0  226.541748      226.541504     4.0        99.838867         False          False
4     126.401611      -0.139893  593.578857   126.401611  205.164062    -0.139893        0.0  126.541504      126.541504     5.0        99.838867         False           True
5     126.401611      -0.118896  593.578857   126.401611  103.082031    -0.118896        0.0  126.520508       26.541504     6.0        99.838867         False           True
6     126.401611      99.860107  667.037354   126.401611   52.041016    99.860107        0.0   26.541504        0.000000     4.0        99.838867         False           True
7     126.401611     126.401611  743.599854   126.401611   26.520508   126.401611        0.0    0.000000      -23.437500     5.0        99.838867         False           True
8     252.943115     149.839111  743.599854   252.943115  126.541504   149.839111        0.0  103.104004        3.104004     1.0       252.943115          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:44:07]  --------------------------------------------------------------------------------
[08/09 16:44:07]  Iteration: 246 (106 solution, 139 counterexamples)
[08/09 16:44:18]  Generator returned sat in 6.347272 secs.
[08/09 16:44:18]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:18]  Verifer returned unsat in 0.284314 secs.
[08/09 16:44:18]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:18]  --------------------------------------------------------------------------------
[08/09 16:44:18]  Iteration: 247 (107 solution, 139 counterexamples)
[08/09 16:44:25]  Generator returned sat in 3.171038 secs.
[08/09 16:44:25]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:26]  Verifer returned unsat in 0.373993 secs.
[08/09 16:44:26]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:26]  --------------------------------------------------------------------------------
[08/09 16:44:26]  Iteration: 248 (108 solution, 139 counterexamples)
[08/09 16:44:32]  Generator returned sat in 3.074258 secs.
[08/09 16:44:33]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:33]  Verifer returned unsat in 0.484734 secs.
[08/09 16:44:33]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:33]  --------------------------------------------------------------------------------
[08/09 16:44:33]  Iteration: 249 (109 solution, 139 counterexamples)
[08/09 16:44:40]  Generator returned sat in 2.832028 secs.
[08/09 16:44:40]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:40]  Verifer returned unsat in 0.386001 secs.
[08/09 16:44:40]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:40]  --------------------------------------------------------------------------------
[08/09 16:44:40]  Iteration: 250 (110 solution, 139 counterexamples)
[08/09 16:44:47]  Generator returned sat in 2.897341 secs.
[08/09 16:44:47]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:47]  Verifer returned unsat in 0.321824 secs.
[08/09 16:44:47]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:47]  --------------------------------------------------------------------------------
[08/09 16:44:47]  Iteration: 251 (111 solution, 139 counterexamples)
[08/09 16:44:54]  Generator returned sat in 3.202733 secs.
[08/09 16:44:54]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:55]  Verifer returned unsat in 0.771352 secs.
[08/09 16:44:55]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:44:55]  --------------------------------------------------------------------------------
[08/09 16:44:55]  Iteration: 252 (112 solution, 139 counterexamples)
[08/09 16:45:02]  Generator returned sat in 2.598699 secs.
[08/09 16:45:02]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:02]  Verifer returned unsat in 0.287529 secs.
[08/09 16:45:02]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:02]  --------------------------------------------------------------------------------
[08/09 16:45:02]  Iteration: 253 (113 solution, 139 counterexamples)
[08/09 16:45:06]  Generator returned unsat in 0.001891 secs.
[08/09 16:45:06]  [96mNo more solutions found[0m
[08/09 16:45:06]  Final solutions:
[08/09 16:45:06]  0: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  1: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  2: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  3: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  4: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  5: [1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  6: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  7: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  8: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  9: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  10: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  11: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  12: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  13: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  14: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  15: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  16: [1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  17: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  18: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  19: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  20: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  21: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  22: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  23: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  24: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  25: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  26: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  27: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  28: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  29: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  30: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  31: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  32: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  33: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  34: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  35: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  36: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  37: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  38: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  39: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  40: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  41: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  42: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  43: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  44: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  45: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  46: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  47: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  48: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  49: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  50: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  51: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  52: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  53: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  54: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  55: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  56: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  57: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  58: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  59: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  60: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  61: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  62: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  63: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  64: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  65: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  66: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  67: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  68: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  69: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  70: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  71: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  72: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  73: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  74: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  75: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  76: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  77: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  78: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  79: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  80: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  81: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  82: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  83: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  84: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  85: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  86: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  87: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  88: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  89: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  90: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  91: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  92: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  93: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  94: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  95: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  96: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  97: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  98: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  99: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  100: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  101: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  102: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  103: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  104: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  105: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  106: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  107: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  108: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  109: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  110: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  111: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  112: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:45:06]  Took 1332.722790 secs.
