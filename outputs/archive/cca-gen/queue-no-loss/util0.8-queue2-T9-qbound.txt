[08/09 16:17:46]  --------------------------------------------------------------------------------
[08/09 16:17:46]  Iteration: 1 (0 solution, 0 counterexamples)
[08/09 16:17:46]  Generator returned sat in 0.005193 secs.
[08/09 16:17:46]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:17:46]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/09 16:17:46]  Verifer returned sat in 0.408100 secs.
[08/09 16:17:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5556.559091   -6256.459091  6256.459091 -5556.559091       0.1 -6256.459091        0.0    699.9           699.9     3.0     -6256.459091            -1             -1
1   -5556.559091   -6156.459091  6256.459091 -5556.559091       0.1 -6156.459091        0.0    599.9           599.9     3.0     -6256.459091         False          False
2   -5556.559091   -6056.559091  6256.459091 -5556.559091       0.1 -6056.559091        0.0    500.0           499.9     4.0     -6256.459091         False          False
3   -5556.559091   -6056.459091  6256.459091 -5556.559091       0.1 -6056.459091        0.0    499.9           399.9     5.0     -6256.459091         False          False
4   -5556.559091   -5956.459091  6256.459091 -5556.559091     402.2 -5956.459091        0.0    399.9           299.9     6.0     -6256.459091         False          False
5   -4750.059091   -5856.459091  6256.459091 -4750.059091    1206.4 -5856.459091        0.0   1106.4          1006.4     7.0     -6256.459091         False          False
6   -3041.459091   -5656.459091  6256.459091 -3041.459091    2815.0 -5656.459091        0.0   2615.0          2615.0     8.0     -6256.459091         False          False
7     775.540909   -5556.559091  6256.459091   775.540909    6432.0 -5556.559091        0.0   6332.1          6332.0     9.0     -6256.459091         False          False
8    4893.240909   -5556.459091  6256.459091  4893.240909   10449.8 -5556.459091        0.0  10449.7         10349.7     4.0      4893.240909          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:17:47]  --------------------------------------------------------------------------------
[08/09 16:17:47]  Iteration: 2 (0 solution, 1 counterexamples)
[08/09 16:17:47]  Generator returned sat in 0.038873 secs.
[08/09 16:17:47]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:17:47]  Improved gap from 1/400 to 100
[08/09 16:17:47]  Improved number of small numbers from 102 to 110 out of a max of 110
[08/09 16:17:47]  Verifer returned sat in 0.271535 secs.
[08/09 16:17:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5557.566406   -6157.564209  6256.459091 -5557.566406    0.002441 -6157.564209        0.0  599.997803      599.997685     3.0     -6157.564209            -1             -1
1   -5556.559326   -6157.561523  6256.459091 -5556.559326  601.004883 -6157.561523        0.0  601.002197      501.004765     3.0     -6157.564209         False          False
2   -5556.556641   -6057.564091  6256.459091 -5556.556641  601.004883 -6057.564091        0.0  501.007450      401.007450     4.0     -6157.564209         False          False
3   -5456.559091   -5857.564209  6256.459091 -5456.559091  601.005000 -5857.564209        0.0  401.005118      401.005000     5.0     -6157.564209         False          False
4   -5456.559091   -5757.564091  6256.459091 -5456.559091    0.010000 -5757.564091        0.0  301.005000      301.005000     6.0     -6157.564209         False          False
5   -5456.559091   -5657.564091  6256.459091 -5456.559091    0.010000 -5657.564091        0.0  201.005000      201.005000     7.0     -6157.564209         False          False
6   -5056.559091   -5557.564209  6256.459091 -5056.559091  601.005000 -5557.564209        0.0  501.005118      501.005000     6.0     -5056.559091          True           True
7   -5056.559091   -5556.559091  6256.459091 -5056.559091    0.010000 -5556.559091        0.0  500.000000      401.005000     6.0     -5056.559091         False          False
8   -5056.559091   -5456.556396  6256.459091 -5056.559091    0.010000 -5456.556396        0.0  399.997306      301.005000     3.0     -5056.559091         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:17:48]  --------------------------------------------------------------------------------
[08/09 16:17:48]  Iteration: 3 (0 solution, 2 counterexamples)
[08/09 16:17:48]  Generator returned sat in 0.119819 secs.
[08/09 16:17:48]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:17:48]  Improved number of small numbers from 63 to 109 out of a max of 109
[08/09 16:17:48]  Verifer returned sat in 0.451139 secs.
[08/09 16:17:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5623.908691   -6157.275391  6256.458984 -5623.908691  333.316650 -6157.275391        0.0  533.366699      433.366699     3.0     -6157.275391            -1             -1
1   -5623.908691   -6057.275146  6256.458984 -5623.908691  333.316650 -6057.275146        0.0  433.366455      333.366699     3.0     -6157.275391         False          False
2   -5623.908691   -5957.275391  6256.458984 -5623.908691  333.316650 -5957.275391        0.0  333.366699      233.366699     4.0     -6157.275391         False          False
3   -5623.908691   -5757.275391  6256.458984 -5623.908691  333.316650 -5757.275391        0.0  133.366699      133.366699     5.0     -6157.275391         False          False
4   -5357.275391   -5757.275391  6256.458984 -5357.275391  400.000000 -5757.275391        0.0  400.000000      300.000000     5.0     -6157.275391         False          False
5   -5357.275391   -5623.908691  6256.458984 -5357.275391  299.999756 -5623.908691        0.0  266.633301      200.000000     6.0     -6157.275391         False          False
6   -5157.225586   -5557.275391  6256.458984 -5157.225586  466.683105 -5557.275391        0.0  400.049805      300.049805     3.0     -5157.225586          True           True
7   -5157.225586   -5357.275391  6256.458984 -5157.225586  200.000000 -5357.275391        0.0  200.049805      200.049805     4.0     -5157.225586         False          False
8   -4957.275391   -5257.275391  6256.458984 -4957.275391  400.000000 -5257.275391        0.0  300.000000      300.000000     3.0     -5157.225586         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:17:49]  --------------------------------------------------------------------------------
[08/09 16:17:49]  Iteration: 4 (0 solution, 3 counterexamples)
[08/09 16:17:49]  Generator returned sat in 0.012442 secs.
[08/09 16:17:49]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:17:50]  Improved gap from 407/16384 to 18.75
[08/09 16:17:50]  Improved number of small numbers from 44 to 110 out of a max of 110
[08/09 16:17:50]  Verifer returned sat in 1.231390 secs.
[08/09 16:17:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5872.705566   -5990.154297  6169.088135 -5872.705566   21.600830 -5990.154297        0.0  117.448730       97.198975     2.0     -5990.154297            -1             -1
1   -5872.705566   -5872.755371  6169.088135 -5872.705566   21.601074 -5872.755371        0.0    0.049805       -2.801025     3.0     -5990.154297         False          False
2   -5851.154297   -5869.904297  6250.337891 -5851.154297   21.601074 -5869.904297        0.0   18.750000        0.000000     1.0     -5990.154297         False          False
3   -5851.154297   -5851.154297  6331.587891 -5851.154297   18.700439 -5851.154297        0.0    0.000000      -18.750000     2.0     -5851.154297         False          False
4   -5712.154297   -5733.805176  6331.587891 -5712.154297  139.000000 -5733.805176        0.0   21.650879       20.250000     1.0     -5851.154297         False          False
5   -5594.854980   -5732.404297  6331.587891 -5594.854980  138.950195 -5732.404297        0.0  137.549316       37.549316     2.0     -5851.154297         False          False
6   -5594.854980   -5613.604736  6394.038330 -5594.854980  137.500000 -5613.604736        0.0   18.749756       -0.000244     2.0     -5851.154297         False          False
7   -5376.055176   -5594.805176  6394.038330 -5376.055176  237.549561 -5594.805176        0.0  218.750000      118.799561     1.0     -5851.154297         False          False
8   -5376.055176   -5494.854736  6394.038330 -5376.055176  139.000000 -5494.854736        0.0  118.799561       18.799561     2.0     -5851.154297         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:17:51]  --------------------------------------------------------------------------------
[08/09 16:17:51]  Iteration: 5 (0 solution, 4 counterexamples)
[08/09 16:17:51]  Generator returned sat in 0.037258 secs.
[08/09 16:17:51]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:17:51]  Improved gap from 0 to 39.0625
[08/09 16:17:52]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:17:52]  Verifer returned sat in 0.603202 secs.
[08/09 16:17:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6355.180908   -6355.205811  6394.038330 -6355.180908  539.975098 -6355.205811        0.0    0.024902        0.024902     4.0     -6355.205811            -1             -1
1   -5815.230713   -6355.156006  6394.038330 -5815.230713  539.975098 -6355.156006        0.0  539.925293      439.975098     1.0     -6355.205811         False          False
2   -5815.180908   -6255.205811  6394.038330 -5815.180908  539.975098 -6255.205811        0.0  440.024902      340.024902     2.0     -6355.205811         False          False
3   -5715.230713   -6155.205566  6394.038330 -5715.230713  539.975098 -6155.205566        0.0  439.974854      339.975098     3.0     -6355.205811         False          False
4   -5715.230713   -5955.205811  6394.038330 -5715.230713    1.500000 -5955.205811        0.0  239.975098      239.975098     4.0     -6355.205811         False          False
5   -5715.230713   -5855.205811  6394.038330 -5715.230713    1.500000 -5855.205811        0.0  139.975098      139.975098     5.0     -6355.205811         False          False
6   -5715.230713   -5815.230713  6394.038330 -5715.230713    1.500000 -5815.230713        0.0  100.000000       39.975098     6.0     -6355.205811         False          False
7   -5715.230713   -5755.205811  6454.063232 -5715.230713    2.000000 -5755.205811        0.0   39.975098        0.000000     5.0     -5715.230713          True           True
8   -5715.230713   -5715.230713  6454.063232 -5715.230713    1.500000 -5715.230713        0.0    0.000000     -100.000000     6.0     -5715.230713         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:17:52]  --------------------------------------------------------------------------------
[08/09 16:17:52]  Iteration: 6 (0 solution, 5 counterexamples)
[08/09 16:17:52]  Generator returned sat in 0.182165 secs.
[08/09 16:17:52]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:17:58]  Improved number of small numbers from 92 to 94 out of a max of 109
[08/09 16:17:58]  Verifer returned sat in 5.669251 secs.
[08/09 16:17:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6255.255615   -6416.722363  6394.03833 -6255.255615    0.049561 -6416.722363        0.0  161.466748       99.950195     3.0     -6416.722363            -1             -1
1   -6255.255615   -6355.205811  6394.03833 -6255.255615    0.049561 -6355.205811        0.0   99.950195       -0.049805     3.0     -6416.722363         False          False
2   -5734.997803   -6255.205811  6394.03833 -5734.997803  620.208008 -6255.205811        0.0  520.208008      420.208008     1.0     -6416.722363         False          False
3   -5734.997803   -6135.592383  6394.03833 -5734.997803  520.158594 -6135.592383        0.0  400.594580      320.208008     2.0     -5734.997803         False          False
4   -5734.948096   -5955.453613  6394.03833 -5734.948096  400.644287 -5955.453613        0.0  220.505518      220.257715     3.0     -5734.997803         False          False
5   -5555.255371   -5855.205811  6394.03833 -5555.255371  400.198242 -5855.205811        0.0  299.950439      299.950439     4.0     -5734.997803         False          False
6   -5455.106689   -5855.156250  6394.03833 -5455.106689  400.099121 -5855.156250        0.0  400.049561      300.099121     5.0     -5734.997803         False          False
7   -5455.106689   -5655.205811  6394.03833 -5455.106689  340.267627 -5655.205811        0.0  200.099121      200.099121     3.0     -5734.997803         False           True
8   -5334.948096   -5555.206055  6394.03833 -5334.948096  320.257715 -5555.206055        0.0  220.257959      220.257715     3.0     -5734.997803         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:17:59]  --------------------------------------------------------------------------------
[08/09 16:17:59]  Iteration: 7 (0 solution, 6 counterexamples)
[08/09 16:17:59]  Generator returned sat in 0.046209 secs.
[08/09 16:17:59]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:17:59]  Improved gap from 815509/24576 to 100
[08/09 16:17:59]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/09 16:17:59]  Verifer returned sat in 0.374241 secs.
[08/09 16:17:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6455.171143   -6855.171143  6394.03833 -6455.171143    0.024658 -6855.171143        0.0  400.000000      300.000000     3.0     -6855.171143            -1             -1
1   -6455.171143   -6679.933594  6394.03833 -6455.171143    0.024658 -6679.933594        0.0  224.762451      200.000000     3.0     -6855.171143         False          False
2   -6455.171143   -6555.171143  6394.03833 -6455.171143    0.024902 -6555.171143        0.0  100.000000      100.000000     4.0     -6855.171143         False          False
3   -6455.171143   -6555.171143  6394.03833 -6455.171143    0.024902 -6555.171143        0.0  100.000000        0.000000     4.0     -6855.171143          True           True
4   -6405.171143   -6455.171143  6394.03833 -6405.171143  150.000000 -6455.171143        0.0   50.000000      -50.000000     5.0     -6855.171143         False           True
5   -5855.146240   -6355.171143  6394.03833 -5855.146240  600.024902 -6355.171143        0.0  500.024902      400.024902     1.0     -5855.146240          True           True
6   -5855.146240   -6227.171143  6394.03833 -5855.146240  100.000000 -6227.171143        0.0  372.024902      300.024902     2.0     -5855.146240         False          False
7   -5855.146240   -6055.171143  6394.03833 -5855.146240  164.000000 -6055.171143        0.0  200.024902      200.024902     3.0     -5855.146240         False          False
8   -5855.146240   -6055.170898  6394.03833 -5855.146240  200.000000 -6055.170898        0.0  200.024658      100.024902     4.0     -5855.146240         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:00]  --------------------------------------------------------------------------------
[08/09 16:18:00]  Iteration: 8 (0 solution, 7 counterexamples)
[08/09 16:18:00]  Generator returned sat in 0.055753 secs.
[08/09 16:18:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:18:00]  Improved number of small numbers from 101 to 109 out of a max of 109
[08/09 16:18:00]  Verifer returned sat in 0.209411 secs.
[08/09 16:18:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6555.244873   -6955.195557  6394.03833 -6555.244873  499.849609 -6955.195557        0.0  399.950684      299.950928     3.0     -6955.195557            -1             -1
1   -6455.345703   -6755.195801  6394.03833 -6455.345703  499.849854 -6755.195801        0.0  299.850098      299.850098     2.0     -6955.195557         False          False
2   -6255.245117   -6755.195801  6394.03833 -6255.245117  499.950684 -6755.195801        0.0  499.950684      399.950684     2.0     -6955.195557         False          False
3   -6255.146484   -6555.195801  6394.03833 -6255.146484  500.049316 -6555.195801        0.0  300.049316      300.049316     3.0     -6955.195557         False          False
4   -6255.146484   -6455.345947  6394.03833 -6255.146484    0.500000 -6455.345947        0.0  200.199463      200.049316     4.0     -6955.195557         False          False
5   -5855.146240   -6455.195557  6394.03833 -5855.146240  600.199707 -6455.195557        0.0  600.049316      500.049561     4.0     -5855.146240          True           True
6   -5855.146240   -6255.195801  6394.03833 -5855.146240    0.500000 -6255.195801        0.0  400.049561      400.049561     4.0     -5855.146240         False           True
7   -5855.146240   -6255.146484  6394.03833 -5855.146240    0.500000 -6255.146484        0.0  400.000244      300.049561     5.0     -5855.146240         False           True
8   -5855.146240   -6155.195557  6394.03833 -5855.146240    0.500000 -6155.195557        0.0  300.049316      200.049561     4.0     -5855.146240         False           True
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:18:01]  --------------------------------------------------------------------------------
[08/09 16:18:01]  Iteration: 9 (0 solution, 8 counterexamples)
[08/09 16:18:01]  Generator returned sat in 0.094704 secs.
[08/09 16:18:01]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:18:01]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/09 16:18:01]  Verifer returned sat in 0.157662 secs.
[08/09 16:18:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6555.195557   -6955.047607  6393.98877 -6555.195557  499.901367 -6955.047607        0.0  399.852051      299.950684     3.0     -6955.047607            -1             -1
1   -6455.146240   -6755.146240  6393.98877 -6455.146240  499.901367 -6755.146240        0.0  300.000000      300.000000     2.0     -6955.047607         False          False
2   -6255.244873   -6755.146240  6393.98877 -6255.244873  499.901367 -6755.146240        0.0  499.901367      399.901367     2.0     -6955.047607         False          False
3   -6255.146240   -6555.146240  6393.98877 -6255.146240  500.000000 -6555.146240        0.0  300.000000      300.000000     3.0     -6955.047607         False          False
4   -6255.146240   -6455.146240  6393.98877 -6255.146240  250.500000 -6455.146240        0.0  200.000000      200.000000     4.0     -6955.047607         False          False
5   -5855.146240   -6455.096924  6393.98877 -5855.146240  600.000000 -6455.096924        0.0  599.950684      500.000000     4.0     -5855.146240          True           True
6   -5855.146240   -6255.195557  6393.98877 -5855.146240  300.500000 -6255.195557        0.0  400.049316      400.000000     4.0     -5855.146240         False           True
7   -5855.146240   -6255.146240  6393.98877 -5855.146240  150.750000 -6255.146240        0.0  400.000000      300.000000     5.0     -5855.146240         False           True
8   -5855.146240   -6155.146240  6393.98877 -5855.146240   75.875000 -6155.146240        0.0  300.000000      200.000000     4.0     -5855.146240         False           True
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:18:02]  --------------------------------------------------------------------------------
[08/09 16:18:02]  Iteration: 10 (0 solution, 9 counterexamples)
[08/09 16:18:02]  Generator returned sat in 0.202588 secs.
[08/09 16:18:02]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:03]  Improved gap from 0 to 39.0625
[08/09 16:18:03]  Improved number of small numbers from 71 to 110 out of a max of 110
[08/09 16:18:03]  Verifer returned sat in 0.770653 secs.
[08/09 16:18:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5907.316650   -6207.314209  6393.98877 -5907.316650    0.002441 -6207.314209        0.0  299.997559      199.997559     2.0     -6207.314209            -1             -1
1   -5907.316650   -6007.314209  6393.98877 -5907.316650  299.994873 -6007.314209        0.0   99.997559       99.997559     3.0     -6207.314209         False           True
2   -5707.321533   -5907.314209  6393.98877 -5707.321533  299.992676 -5907.314209        0.0  199.992676      199.992676     1.0     -5707.321533          True           True
3   -5468.251709   -5807.314209  6393.98877 -5468.251709  439.062500 -5807.314209        0.0  339.062500      339.062500     2.0     -5707.321533         False          False
4   -5468.251709   -5707.324219  6393.98877 -5468.251709  220.531250 -5707.324219        0.0  239.072510      239.062500     3.0     -5707.321533         False           True
5   -5468.251709   -5607.314209  6393.98877 -5468.251709  111.265625 -5607.314209        0.0  139.062500      139.062500     3.0     -5707.321533         False           True
6   -5468.251709   -5507.316406  6393.98877 -5468.251709   56.632812 -5507.316406        0.0   39.064697       39.062500     4.0     -5707.321533         False           True
7   -5468.251709   -5507.314209  6454.92627 -5468.251709    0.010000 -5507.314209        0.0   39.062500        0.000000     5.0     -5468.251709          True           True
8   -5468.251709   -5468.251709  6454.92627 -5468.251709    1.005000 -5468.251709        0.0    0.000000     -100.000000     6.0     -5468.251709         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:03]  --------------------------------------------------------------------------------
[08/09 16:18:03]  Iteration: 11 (0 solution, 10 counterexamples)
[08/09 16:18:04]  Generator returned sat in 0.348515 secs.
[08/09 16:18:04]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:05]  Improved gap from 2173/204800 to 79.6875
[08/09 16:18:06]  Improved number of small numbers from 56 to 98 out of a max of 110
[08/09 16:18:06]  Verifer returned sat in 1.444421 secs.
[08/09 16:18:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6788.625732   -7054.624512  6255.921143 -6788.625732  266.000732 -7054.624512        0.0  265.998779      265.998779     2.0     -7054.624512            -1             -1
1   -6788.625732   -6954.624512  6255.921143 -6788.625732  265.998779 -6954.624512        0.0  165.998779      165.998779     2.0     -6788.625732         False          False
2   -6654.627686   -6954.623047  6255.921143 -6654.627686  299.996826 -6954.623047        0.0  299.995361      199.996826     3.0     -6788.625732         False          False
3   -6654.626221   -6788.625488  6255.921143 -6654.626221  299.996826 -6788.625488        0.0  133.999268       99.998291     2.0     -6788.625732         False           True
4   -6654.625977   -6654.627820  6255.921143 -6654.625977  133.999512 -6654.627820        0.0    0.001844       -0.001465     3.0     -6788.625732         False          False
5   -6654.617820   -6654.624512  6276.233643 -6654.617820    0.010000 -6654.624512        0.0    0.006692      -79.680808     1.0     -6654.617820          True           True
6   -6503.625244   -6574.937012  6295.613770 -6503.625244  150.999268 -6574.937012        0.0   71.311768       -9.308105     1.0     -6654.617820         False          False
7   -6467.092773   -6494.316987  6315.926025 -6467.092773  107.844238 -6494.316987        0.0   27.224213      -52.463379     1.0     -6654.617820         False          False
8   -6413.161570   -6414.629395  6315.926025 -6413.161570   81.155417 -6414.629395        0.0    1.467824      -98.532176     1.0     -6654.617820         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:06]  --------------------------------------------------------------------------------
[08/09 16:18:06]  Iteration: 12 (0 solution, 11 counterexamples)
[08/09 16:18:07]  Generator returned sat in 0.386534 secs.
[08/09 16:18:07]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:18:07]  Improved gap from 205001/4096 to 100
[08/09 16:18:07]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:18:07]  Verifer returned sat in 0.490662 secs.
[08/09 16:18:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -7218.289551   -7418.240479  6255.921143 -7218.289551  330.000000 -7418.240479        0.0  199.950928      199.950928     4.0     -7418.240479            -1             -1
1   -7088.289551   -7318.240479  6255.921143 -7088.289551  329.950928 -7318.240479        0.0  229.950928      229.950928     2.0     -7088.289551         False          False
2   -6818.289551   -7318.240479  6255.921143 -6818.289551  499.950928 -7318.240479        0.0  499.950928      399.950928     2.0     -7088.289551         False          False
3   -6818.289551   -7218.240479  6255.921143 -6818.289551  499.950928 -7218.240479        0.0  399.950928      299.950928     3.0     -7088.289551         False          False
4   -6818.289551   -7088.240479  6255.921143 -6818.289551  100.000000 -7088.240479        0.0  269.950928      199.950928     3.0     -7088.289551         False          False
5   -6818.289551   -6984.972900  6255.921143 -6818.289551  115.000000 -6984.972900        0.0  166.683350       99.950928     4.0     -7088.289551         False          False
6   -6818.289551   -6818.338623  6255.921143 -6818.289551  166.633789 -6818.338623        0.0    0.049072       -0.049072     5.0     -7088.289551         False          False
7   -6417.436768   -6818.240479  6255.921143 -6417.436768  400.901855 -6818.240479        0.0  400.803711      300.803711     1.0     -6417.436768          True           True
8   -6417.436768   -6718.240479  6255.921143 -6417.436768  135.000000 -6718.240479        0.0  300.803711      200.803711     2.0     -6417.436768         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:08]  --------------------------------------------------------------------------------
[08/09 16:18:08]  Iteration: 13 (0 solution, 12 counterexamples)
[08/09 16:18:08]  Generator returned sat in 0.234252 secs.
[08/09 16:18:08]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:18:09]  Improved gap from 1/400 to 79.6875
[08/09 16:18:09]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:18:09]  Verifer returned sat in 0.988109 secs.
[08/09 16:18:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -7027.548828   -7527.549072  6194.983643 -7027.548828    0.002441 -7527.549072        0.0  500.000244      400.000244     4.0     -7527.549072            -1             -1
1   -7027.548828   -7327.549072  6194.983643 -7027.548828    0.002686 -7327.549072        0.0  300.000244      300.000244     4.0     -7527.549072         False          False
2   -7027.546631   -7247.866455  6194.983643 -7027.546631  300.002441 -7247.866455        0.0  220.319824      200.002441     5.0     -7527.549072         False          False
3   -6947.864014   -7227.549072  6194.983643 -6947.864014  300.002441 -7227.549072        0.0  279.685059      179.685059     6.0     -7527.549072         False          False
4   -6947.864014   -7027.549072  6194.983643 -6947.864014  150.000000 -7027.549072        0.0   79.685059       79.685059     7.0     -7527.549072         False          False
5   -6947.864014   -7027.549072  6215.296143 -6947.864014    0.010000 -7027.549072        0.0   79.685059       -0.002441     7.0     -6947.864014          True           True
6   -6917.390381   -6947.861572  6235.608643 -6917.390381  110.158691 -6947.861572        0.0   30.471191      -49.216309     1.0     -6947.864014         False           True
7   -6808.017822   -6868.174072  6255.921143 -6808.017822  139.843750 -6868.174072        0.0   60.156250      -19.531250     1.0     -6947.864014         False          False
8   -6788.486572   -6788.486572  6255.921143 -6788.486572   79.687500 -6788.486572        0.0    0.000000     -100.000000     1.0     -6947.864014         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:10]  --------------------------------------------------------------------------------
[08/09 16:18:10]  Iteration: 14 (0 solution, 13 counterexamples)
[08/09 16:18:10]  Generator returned sat in 0.255921 secs.
[08/09 16:18:10]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:18:11]  Improved gap from 0 to 73.4375
[08/09 16:18:11]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:18:11]  Verifer returned sat in 0.483340 secs.
[08/09 16:18:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6911.029297   -7310.980469  6281.385742 -6911.029297  393.124756 -7310.980469        0.0  399.951172      399.950928     4.0     -7310.980469            -1             -1
1   -6911.029297   -7210.980225  6281.385742 -6911.029297  393.075928 -7210.980225        0.0  299.950928      299.950928     4.0     -6911.029297         False          False
2   -6817.904053   -7210.980225  6281.385742 -6817.904053  393.076172 -7210.980225        0.0  393.076172      293.076172     4.0     -6911.029297         False          False
3   -6817.904053   -7107.654053  6281.385742 -6817.904053  393.076172 -7107.654053        0.0  289.750000      193.076172     5.0     -6911.029297         False          False
4   -6817.904053   -6910.980469  6281.385742 -6817.904053    1.500000 -6910.980469        0.0   93.076416       93.076172     3.0     -6911.029297         False           True
5   -6817.904053   -6891.341553  6288.309570 -6817.904053    1.500000 -6891.341553        0.0   73.437500        0.000000     4.0     -6911.029297         False          False
6   -6817.904053   -6817.904053  6314.872070 -6817.904053    1.500000 -6817.904053        0.0    0.000000      -73.437500     5.0     -6911.029297         False          False
7   -6671.029053   -6744.466553  6341.434570 -6671.029053  146.875000 -6744.466553        0.0   73.437500        0.000000     1.0     -6671.029053          True           True
8   -6671.029053   -6671.029053  6367.997070 -6671.029053    1.500000 -6671.029053        0.0    0.000000      -73.437500     2.0     -6671.029053         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:11]  --------------------------------------------------------------------------------
[08/09 16:18:11]  Iteration: 15 (0 solution, 14 counterexamples)
[08/09 16:18:12]  Generator returned sat in 0.049868 secs.
[08/09 16:18:12]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:18:12]  Improved gap from 1167/16 to 73.4375
[08/09 16:18:13]  Improved number of small numbers from 80 to 110 out of a max of 110
[08/09 16:18:13]  Verifer returned sat in 0.625665 secs.
[08/09 16:18:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -7557.272705   -7976.862793  6947.268311 -7557.272705  393.125000 -7976.862793        0.0  419.590088      419.590088     3.0     -7976.862793            -1             -1
1   -7557.272705   -7876.862793  6947.268311 -7557.272705  393.076172 -7876.862793        0.0  319.590088      319.590088     3.0     -7557.272705         False          False
2   -7483.786377   -7876.862793  6947.268311 -7483.786377  393.076416 -7876.862793        0.0  393.076416      293.076416     3.0     -7557.272705         False          False
3   -7483.786377   -7774.536377  6947.268311 -7483.786377  393.076416 -7774.536377        0.0  290.750000      193.076416     4.0     -7557.272705         False          False
4   -7483.786377   -7576.862793  6947.268311 -7483.786377    1.500000 -7576.862793        0.0   93.076416       93.076416     5.0     -7557.272705         False          False
5   -7483.786377   -7557.224121  6954.191895 -7483.786377    1.500000 -7557.224121        0.0   73.437744        0.000000     4.0     -7557.272705         False           True
6   -7483.786377   -7483.786377  6980.754395 -7483.786377    1.500000 -7483.786377        0.0    0.000000      -73.437500     5.0     -7557.272705         False          False
7   -7336.911377   -7410.348877  7007.316895 -7336.911377  146.875000 -7410.348877        0.0   73.437500        0.000000     1.0     -7336.911377          True           True
8   -7336.911377   -7336.911377  7007.316895 -7336.911377    1.500000 -7336.911377        0.0    0.000000     -100.000000     2.0     -7336.911377         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:13]  --------------------------------------------------------------------------------
[08/09 16:18:13]  Iteration: 16 (0 solution, 15 counterexamples)
[08/09 16:18:14]  Generator returned sat in 0.256569 secs.
[08/09 16:18:14]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:18:15]  Improved gap from 5945/8192 to 68.75
[08/09 16:18:16]  Improved number of small numbers from 57 to 67 out of a max of 110
[08/09 16:18:16]  Verifer returned sat in 1.857097 secs.
[08/09 16:18:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -7712.023507   -7980.791364  6947.107666 -7712.023507    0.017822 -7980.791364        0.0  268.767857      168.767927     4.0     -7980.791364            -1             -1
1   -7712.023507   -7780.791504  6947.107666 -7712.023507    0.017857 -7780.791504        0.0   68.767997       68.767927     4.0     -7980.791364         False          False
2   -7712.023507   -7780.773507  6978.339739 -7712.023507    0.018066 -7780.773507        0.0   68.750000        0.000000     5.0     -7980.791364         False          False
3   -7712.005650   -7712.023507  7009.589739 -7712.005650   68.767857 -7712.023507        0.0    0.017857      -68.732143     6.0     -7980.791364         False          False
4   -7576.139579   -7576.862793  7009.589739 -7576.139579  135.883929 -7576.862793        0.0    0.723214      -32.866071     1.0     -7576.139579          True           True
5   -7474.398438   -7543.273507  7040.714600 -7474.398438  102.464355 -7543.273507        0.0   68.875070       -0.000070     1.0     -7576.139579         False          False
6   -7424.023507   -7474.380650  7071.946882 -7424.023507  119.250000 -7474.380650        0.0   50.357143      -18.392857     1.0     -7576.139579         False          False
7   -7355.059222   -7405.630650  7103.196882 -7355.059222  119.321429 -7405.630650        0.0   50.571429      -18.178571     1.0     -7576.139579         False          False
8   -7319.514579   -7336.880615  7103.197021 -7319.514579   86.116071 -7336.880615        0.0   17.366037      -82.633789     1.0     -7576.139579         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:16]  --------------------------------------------------------------------------------
[08/09 16:18:16]  Iteration: 17 (0 solution, 16 counterexamples)
[08/09 16:18:17]  Generator returned sat in 0.057606 secs.
[08/09 16:18:17]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:18:17]  Improved number of small numbers from 66 to 109 out of a max of 109
[08/09 16:18:17]  Verifer returned sat in 0.503006 secs.
[08/09 16:18:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -8209.474854   -8411.908936  7478.225098 -8209.474854  599.805908 -8411.908936        0.0  202.434082      202.434082     4.0     -8411.908936            -1             -1
1   -7812.102783   -8311.908936  7478.225098 -7812.102783  599.806152 -8311.908936        0.0  499.806152      499.806152     2.0     -8411.908936         False          False
2   -7712.102783   -8311.908936  7478.225098 -7712.102783  599.806152 -8311.908936        0.0  599.806152      499.806152     2.0     -8411.908936         False          False
3   -7712.005859   -8209.378174  7478.225098 -7712.005859  599.903076 -8209.378174        0.0  497.372314      399.903076     3.0     -8411.908936         False          False
4   -7712.005859   -8016.908936  7478.225098 -7712.005859  101.765381 -8016.908936        0.0  304.903076      299.903076     4.0     -8411.908936         False          False
5   -7712.005859   -7911.908936  7478.225098 -7712.005859  148.000000 -7911.908936        0.0  199.903076      199.903076     5.0     -8411.908936         False          False
6   -7711.408936   -7812.102783  7478.225098 -7711.408936  200.500000 -7812.102783        0.0  100.693848      100.500000     6.0     -8411.908936         False          False
7   -7311.215088   -7711.908936  7478.225098 -7311.215088  500.887695 -7711.908936        0.0  400.693848      400.693848     2.0     -7311.215088          True           True
8   -7311.215088   -7711.311768  7478.225098 -7311.215088  153.000000 -7711.311768        0.0  400.096680      300.693848     2.0     -7311.215088         False          False
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:18]  --------------------------------------------------------------------------------
[08/09 16:18:18]  Iteration: 18 (0 solution, 17 counterexamples)
[08/09 16:18:18]  Generator returned sat in 0.192185 secs.
[08/09 16:18:18]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:19]  Improved gap from 99/2048 to 79.6875
[08/09 16:18:19]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:18:19]  Verifer returned sat in 0.875067 secs.
[08/09 16:18:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -7318.680664   -7775.070068  7417.287598 -7318.680664    0.048340 -7775.070068        0.0  456.389404      399.111084     4.0     -7775.070068            -1             -1
1   -7318.680664   -7617.791748  7417.287598 -7318.680664    0.048340 -7617.791748        0.0  299.111084      299.111084     4.0     -7775.070068         False          False
2   -7318.680664   -7617.791748  7417.287598 -7318.680664  299.110596 -7617.791748        0.0  299.111084      199.111084     4.0     -7775.070068         False          False
3   -7317.840088   -7417.791748  7417.287598 -7317.840088  299.951660 -7417.791748        0.0   99.951660       99.951660     5.0     -7775.070068         False          False
4   -7238.152588   -7318.680664  7417.287598 -7238.152588  179.639160 -7318.680664        0.0   80.528076       79.639160     6.0     -7775.070068         False          False
5   -7238.152588   -7317.791748  7437.600098 -7238.152588    1.500000 -7317.791748        0.0   79.639160       -0.048340     2.0     -7238.152588          True           True
6   -7166.791748   -7238.104248  7457.912354 -7166.791748  151.000000 -7238.104248        0.0   71.312500       -8.375244     1.0     -7238.152588         False          False
7   -7147.260498   -7158.416504  7478.224854 -7147.260498   90.843750 -7158.416504        0.0   11.156006      -68.531494     1.0     -7238.152588         False          False
8   -7077.284424   -7078.729004  7478.225098 -7077.284424   81.132080 -7078.729004        0.0    1.444580      -98.555176     1.0     -7238.152588         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:20]  --------------------------------------------------------------------------------
[08/09 16:18:20]  Iteration: 19 (0 solution, 18 counterexamples)
[08/09 16:18:20]  Generator returned sat in 0.109981 secs.
[08/09 16:18:20]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:18:21]  Improved gap from 1275/16 to 79.6875
[08/09 16:18:21]  Improved number of small numbers from 65 to 110 out of a max of 110
[08/09 16:18:21]  Verifer returned sat in 0.754290 secs.
[08/09 16:18:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6231.256836   -6710.944092  6410.439941 -6231.256836  379.638916 -6710.944092        0.0  479.687256      479.687256     3.0     -6710.944092            -1             -1
1   -6231.256836   -6610.944336  6410.439941 -6231.256836  379.638916 -6610.944336        0.0  379.687500      379.687256     3.0     -6710.944092         False          False
2   -6231.256836   -6610.944092  6410.439941 -6231.256836  379.639160 -6610.944092        0.0  379.687256      279.687256     4.0     -6710.944092         False          False
3   -6231.256836   -6410.944092  6410.439941 -6231.256836  379.639160 -6410.944092        0.0  179.687256      179.687256     5.0     -6710.944092         False          False
4   -6231.256836   -6310.992432  6410.439941 -6231.256836  151.500000 -6310.992432        0.0   79.735596       79.687256     6.0     -6710.944092         False          False
5   -6231.256836   -6310.944092  6430.752441 -6231.256836    1.500000 -6310.944092        0.0   79.687256       -0.000244     7.0     -6231.256836          True           True
6   -6159.444092   -6231.256592  6451.064941 -6159.444092  151.500000 -6231.256592        0.0   71.812500       -7.875000     1.0     -6231.256836         False           True
7   -6139.912842   -6151.569092  6471.377441 -6139.912842   91.343750 -6151.569092        0.0   11.656250      -68.031250     1.0     -6231.256836         False          False
8   -6070.357422   -6071.881592  6471.377604 -6070.357422   81.211670 -6071.881592        0.0    1.524170      -98.475667     1.0     -6231.256836         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:22]  --------------------------------------------------------------------------------
[08/09 16:18:22]  Iteration: 20 (0 solution, 19 counterexamples)
[08/09 16:18:22]  Generator returned sat in 0.420900 secs.
[08/09 16:18:22]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:18:23]  Improved gap from 82349/40960 to 100
[08/09 16:18:23]  Improved number of small numbers from 104 to 106 out of a max of 110
[08/09 16:18:23]  Verifer returned sat in 0.349481 secs.
[08/09 16:18:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6374.920166   -6774.944092  6410.439697 -6374.920166    0.072510 -6774.944092        0.0  400.023926      400.023926     3.0     -6774.944092            -1             -1
1   -6374.920166   -6674.944092  6410.439697 -6374.920166    0.048096 -6674.944092        0.0  300.023926      300.023926     3.0     -6374.920166         False           True
2   -6374.920166   -6674.920166  6410.439697 -6374.920166    0.024170 -6674.920166        0.0  300.000000      200.023926     4.0     -6374.920166         False           True
3   -6074.944336   -6574.944092  6410.439697 -6074.944336  599.975830 -6574.944092        0.0  499.999756      399.999756     4.0     -6374.920166         False           True
4   -6074.944336   -6421.004517  6410.439697 -6074.944336  102.000000 -6421.004517        0.0  346.060181      299.999756     5.0     -6374.920166         False           True
5   -6074.944336   -6374.944092  6410.439697 -6074.944336  128.969788 -6374.944092        0.0  299.999756      199.999756     6.0     -6374.920166         False           True
6   -6074.944336   -6242.960205  6410.439697 -6074.944336  151.988037 -6242.960205        0.0  168.015869       99.999756     4.0     -6374.920166         False           True
7   -6074.944336   -6174.944092  6410.439697 -6074.944336  167.991943 -6174.944092        0.0   99.999756       -0.000244     5.0     -6374.920166         False           True
8   -5674.895752   -6074.920166  6410.439697 -5674.895752  500.048340 -6074.920166        0.0  400.024414      300.048340     1.0     -5674.895752          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:23]  --------------------------------------------------------------------------------
[08/09 16:18:23]  Iteration: 21 (0 solution, 20 counterexamples)
[08/09 16:18:24]  Generator returned sat in 0.069122 secs.
[08/09 16:18:24]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:18:24]  Improved number of small numbers from 86 to 109 out of a max of 109
[08/09 16:18:24]  Verifer returned sat in 0.271817 secs.
[08/09 16:18:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6374.920166   -6774.944336  6410.439697 -6374.920166    0.072510 -6774.944336        0.0  400.024170      400.024170     3.0     -6774.944336            -1             -1
1   -6374.920166   -6674.944336  6410.439697 -6374.920166    0.047852 -6674.944336        0.0  300.024170      300.024170     2.0     -6374.920166         False           True
2   -6374.920166   -6574.949951  6410.439697 -6374.920166    0.023926 -6574.949951        0.0  200.029785      200.024170     3.0     -6374.920166         False           True
3   -5974.950195   -6574.944336  6410.439697 -5974.950195  599.999756 -6574.944336        0.0  599.994141      499.994141     4.0     -6374.920166         False           True
4   -5974.950195   -6421.004395  6410.439697 -5974.950195  102.000000 -6421.004395        0.0  446.054199      399.994141     5.0     -6374.920166         False           True
5   -5974.950195   -6374.944092  6410.439697 -5974.950195  128.969971 -6374.944092        0.0  399.993896      299.994141     6.0     -6374.920166         False           True
6   -5974.950195   -6176.285645  6410.439697 -5974.950195  102.002930 -6176.285645        0.0  201.335449      199.994141     4.0     -6374.920166         False           True
7   -5974.950195   -6099.635986  6410.439697 -5974.950195  201.329346 -6099.635986        0.0  124.685791       99.994141     5.0     -6374.920166         False           True
8   -5574.938232   -5974.944336  6410.439697 -5574.938232  524.697754 -5974.944336        0.0  400.006104      400.006104     1.0     -5574.938232          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:25]  --------------------------------------------------------------------------------
[08/09 16:18:25]  Iteration: 22 (0 solution, 21 counterexamples)
[08/09 16:18:25]  Generator returned sat in 0.066968 secs.
[08/09 16:18:25]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:18:26]  Improved number of small numbers from 49 to 109 out of a max of 109
[08/09 16:18:26]  Verifer returned sat in 0.318582 secs.
[08/09 16:18:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6398.639160   -6798.645020  6434.140137 -6398.639160    0.011963 -6798.645020        0.0  400.005859      400.005615     4.0     -6798.645020            -1             -1
1   -6398.639160   -6698.645020  6434.140137 -6398.639160    0.006104 -6698.645020        0.0  300.005859      300.005615     2.0     -6398.639160         False           True
2   -6398.639160   -6598.644775  6434.140137 -6398.639160    0.023926 -6598.644775        0.0  200.005615      200.005615     3.0     -6398.639160         False           True
3   -6098.632812   -6498.645020  6434.140137 -6098.632812  500.011963 -6498.645020        0.0  400.012207      400.011963     4.0     -6398.639160         False           True
4   -6098.632812   -6498.639160  6434.140137 -6098.632812  152.000000 -6498.639160        0.0  400.006348      300.011963     5.0     -6398.639160         False           True
5   -6098.632812   -6398.644775  6434.140137 -6098.632812  102.002930 -6398.644775        0.0  300.011963      200.011963     6.0     -6398.639160         False           True
6   -6098.632812   -6233.307617  6434.140137 -6098.632812  102.000000 -6233.307617        0.0  134.674805      100.011963     4.0     -6398.639160         False           True
7   -6098.632812   -6099.635986  6434.140137 -6098.632812  134.668701 -6099.635986        0.0    1.003174        0.011963     5.0     -6398.639160         False           True
8   -5698.632812   -5998.645020  6434.140137 -5698.632812  401.003174 -5998.645020        0.0  300.012207      300.011963     1.0     -5698.632812          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:26]  --------------------------------------------------------------------------------
[08/09 16:18:26]  Iteration: 23 (0 solution, 22 counterexamples)
[08/09 16:18:28]  Generator returned sat in 1.179747 secs.
[08/09 16:18:28]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:18:28]  Improved gap from 1/600 to 71.875
[08/09 16:18:29]  Improved number of small numbers from 105 to 106 out of a max of 110
[08/09 16:18:29]  Verifer returned sat in 0.518214 secs.
[08/09 16:18:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6186.132812   -6386.133057  6434.140137 -6186.132812    0.002686 -6386.133057        0.0  200.000244      199.997500     3.0     -6386.133057            -1             -1
1   -5994.892822   -6386.130127  6434.140137 -5994.892822  391.240234 -6386.130127        0.0  391.237305      291.237490     2.0     -6386.133057         False           True
2   -5994.892822   -6186.130313  6434.140137 -5994.892822    0.002500 -6186.130313        0.0  191.237490      191.237490     2.0     -5994.892822          True           True
3   -5898.647813   -6186.127812  6434.140137 -5898.647813  287.482500 -6186.127812        0.0  287.480000      187.482500     3.0     -5994.892822         False           True
4   -5898.647813   -5994.895264  6434.140137 -5898.647813    0.010000 -5994.895264        0.0   96.247451       87.482500     4.0     -5994.892822         False           True
5   -5898.647813   -5970.522949  6446.657637 -5898.647813    0.010000 -5970.522949        0.0   71.875137        0.000000     3.0     -5994.892822         False           True
6   -5898.647813   -5898.647813  6474.782637 -5898.647813    0.010000 -5898.647813        0.0    0.000000      -71.875000     4.0     -5994.892822         False           True
7   -5754.897813   -5826.772813  6502.907637 -5754.897813  143.750000 -5826.772813        0.0   71.875000        0.000000     1.0     -5754.897813          True           True
8   -5754.897813   -5754.897813  6531.032471 -5754.897813    0.010000 -5754.897813        0.0    0.000000      -71.875166     2.0     -5754.897813         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:29]  --------------------------------------------------------------------------------
[08/09 16:18:29]  Iteration: 24 (0 solution, 23 counterexamples)
[08/09 16:18:30]  Generator returned sat in 0.074667 secs.
[08/09 16:18:30]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:18:30]  Improved gap from 1/600 to 73.4375
[08/09 16:18:30]  Improved number of small numbers from 100 to 106 out of a max of 110
[08/09 16:18:30]  Verifer returned sat in 0.659159 secs.
[08/09 16:18:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5455.405313   -5855.012939  6002.920166 -5455.405313    0.002441 -5855.012939        0.0  399.607627      399.607529     4.0     -5855.012939            -1             -1
1   -5455.405313   -5755.012939  6002.920166 -5455.405313    0.001465 -5755.012939        0.0  299.607627      299.607529     2.0     -5455.405313         False           True
2   -5455.404053   -5755.012813  6002.920166 -5455.404053  299.608887 -5755.012813        0.0  299.608760      199.608789     3.0     -5455.405313         False           True
3   -5362.282812   -5655.012813  6002.920166 -5362.282812  392.730000 -5655.012813        0.0  292.730000      192.730029     4.0     -5455.405313         False           True
4   -5362.282812   -5455.406494  6002.920166 -5362.282812    0.010000 -5455.406494        0.0   93.123682       92.730029     5.0     -5455.405313         False           True
5   -5362.282812   -5435.720312  6010.190137 -5362.282812    0.010000 -5435.720312        0.0   73.437500        0.000000     3.0     -5455.405313         False           True
6   -5362.282812   -5362.282812  6036.752637 -5362.282812    0.010000 -5362.282812        0.0    0.000000      -73.437500     4.0     -5455.405313         False           True
7   -5215.407812   -5288.845312  6063.315137 -5215.407812  146.875000 -5288.845312        0.0   73.437500        0.000000     1.0     -5215.407812          True           True
8   -5215.407812   -5215.407812  6063.315186 -5215.407812    0.010000 -5215.407812        0.0    0.000000      -99.999951     2.0     -5215.407812         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:31]  --------------------------------------------------------------------------------
[08/09 16:18:31]  Iteration: 25 (0 solution, 24 counterexamples)
[08/09 16:18:32]  Generator returned sat in 0.112918 secs.
[08/09 16:18:32]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:18:32]  Improved gap from 0 to 73.4375
[08/09 16:18:32]  Improved number of small numbers from 100 to 106 out of a max of 110
[08/09 16:18:32]  Verifer returned sat in 0.672319 secs.
[08/09 16:18:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -6236.982910   -6436.980225  6484.887695 -6236.982910  298.612305 -6436.980225        0.0  199.997314       99.997461     2.0     -6436.980225            -1             -1
1   -6138.367676   -6236.980469  6484.887695 -6138.367676  298.612549 -6236.980469        0.0   98.612793       98.612695     1.0     -6436.980225         False           True
2   -5938.370361   -6232.290313  6484.887695 -5938.370361  298.610107 -6232.290313        0.0  293.919951      198.610010     2.0     -5938.370361         False          False
3   -5845.250313   -6136.980312  6484.887695 -5845.250313  387.040000 -6136.980312        0.0  291.730000      191.730059     2.0     -5938.370361         False           True
4   -5845.250313   -5938.372812  6484.887695 -5845.250313    0.010000 -5938.372812        0.0   93.122500       91.730059     3.0     -5938.370361         False           True
5   -5845.250313   -5918.687988  6493.157637 -5845.250313    0.010000 -5918.687988        0.0   73.437676        0.000000     3.0     -5938.370361         False           True
6   -5845.250313   -5845.250313  6519.720137 -5845.250313    0.010000 -5845.250313        0.0    0.000000      -73.437500     4.0     -5938.370361         False           True
7   -5698.375313   -5771.812813  6546.282637 -5698.375313  146.875000 -5771.812813        0.0   73.437500        0.000000     1.0     -5698.375313          True           True
8   -5698.375313   -5698.375313  6546.282715 -5698.375313    0.010000 -5698.375313        0.0    0.000000      -99.999922     2.0     -5698.375313         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:33]  --------------------------------------------------------------------------------
[08/09 16:18:33]  Iteration: 26 (0 solution, 25 counterexamples)
[08/09 16:18:34]  Generator returned sat in 0.114485 secs.
[08/09 16:18:34]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:18:34]  Improved gap from 0 to 73.4375
[08/09 16:18:35]  Improved number of small numbers from 56 to 83 out of a max of 110
[08/09 16:18:35]  Verifer returned sat in 1.040795 secs.
[08/09 16:18:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5949.958252   -6349.960693  6497.868164 -5949.958252  393.124756 -6349.960693        0.0  400.002441      400.002441     1.0     -6349.960693            -1             -1
1   -5949.958252   -6343.080566  6497.868164 -5949.958252  393.122500 -6343.080566        0.0  393.122314      300.002441     2.0     -5949.958252         False          False
2   -5949.958252   -6249.960583  6497.868164 -5949.958252  393.122314 -6249.960583        0.0  300.002331      200.002441     3.0     -5949.958252         False           True
3   -5856.838083   -6147.568083  6497.868164 -5856.838083  393.122500 -6147.568083        0.0  290.730000      193.122611     4.0     -5949.958252         False           True
4   -5856.838083   -5949.960693  6497.868164 -5856.838083    0.010000 -5949.960693        0.0   93.122611       93.122611     5.0     -5949.958252         False           True
5   -5856.838083   -5930.275635  6504.745553 -5856.838083    0.010000 -5930.275635        0.0   73.437552        0.000000     3.0     -5949.958252         False           True
6   -5856.838083   -5856.838083  6531.308053 -5856.838083    0.010000 -5856.838083        0.0    0.000000      -73.437500     4.0     -5949.958252         False           True
7   -5709.963083   -5783.400583  6557.870553 -5709.963083  146.875000 -5783.400583        0.0   73.437500        0.000000     1.0     -5709.963083          True           True
8   -5709.963083   -5709.963083  6557.870605 -5709.963083    0.010000 -5709.963083        0.0    0.000000      -99.999948     2.0     -5709.963083         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:35]  --------------------------------------------------------------------------------
[08/09 16:18:35]  Iteration: 27 (0 solution, 26 counterexamples)
[08/09 16:18:37]  Generator returned sat in 0.621669 secs.
[08/09 16:18:37]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:37]  Improved gap from 391/8192 to 100
[08/09 16:18:37]  Improved number of small numbers from 44 to 110 out of a max of 110
[08/09 16:18:37]  Verifer returned sat in 0.598522 secs.
[08/09 16:18:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5949.031982   -6051.008545  6198.916016 -5949.031982    0.047607 -6051.008545        0.0  101.976562      101.976562     1.0     -6051.008545            -1             -1
1   -5949.031982   -6051.008301  6198.916016 -5949.031982    0.023926 -6051.008301        0.0  101.976318        1.976562     2.0     -5949.031982         False          False
2   -5851.984619   -5949.008545  6198.916016 -5851.984619  199.023682 -5949.008545        0.0   97.023926       -0.976074     1.0     -5949.031982         False           True
3   -5749.984619   -5851.008545  6198.916016 -5749.984619  199.023926 -5851.008545        0.0  101.023926        1.023926     1.0     -5949.031982         False          False
4   -5749.984619   -5751.008545  6198.916016 -5749.984619  101.000000 -5751.008545        0.0    1.023926      -98.976074     2.0     -5949.031982         False          False
5   -5548.008545   -5551.008545  6198.916016 -5548.008545  203.000000 -5551.008545        0.0    3.000000        3.000000     1.0     -5548.008545          True           True
6   -5351.008545   -5453.960693  6198.916016 -5351.008545  200.000000 -5453.960693        0.0  102.952148      100.000000     1.0     -5548.008545         False          False
7   -5254.436768   -5351.008545  6198.916016 -5254.436768  199.523926 -5351.008545        0.0   96.571777       96.571777     2.0     -5548.008545         False          False
8   -4950.960693   -5350.984375  6198.916016 -4950.960693  400.047852 -5350.984375        0.0  400.023682      300.047852     2.0     -4950.960693          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:38]  --------------------------------------------------------------------------------
[08/09 16:18:38]  Iteration: 28 (0 solution, 27 counterexamples)
[08/09 16:18:39]  Generator returned sat in 0.688182 secs.
[08/09 16:18:39]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:40]  Improved number of small numbers from 53 to 109 out of a max of 109
[08/09 16:18:40]  Verifer returned sat in 0.371400 secs.
[08/09 16:18:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5948.032471   -6647.937012  6695.939697 -5948.032471    0.023682 -6647.937012        0.0  699.904541      599.999756     3.0     -6647.937012            -1             -1
1   -5948.032471   -6448.056152  6695.939697 -5948.032471  500.023682 -6448.056152        0.0  500.023682      499.999756     3.0     -6647.937012         False          False
2   -5948.032471   -6448.032227  6695.939697 -5948.032471  500.023682 -6448.032227        0.0  499.999756      399.999756     4.0     -6647.937012         False          False
3   -5948.008545   -6248.032227  6695.939697 -5948.008545  500.023682 -6248.032227        0.0  300.023682      300.023682     5.0     -6647.937012         False          False
4   -5948.008545   -6148.032227  6695.939697 -5948.008545  200.952393 -6148.032227        0.0  200.023682      200.023682     6.0     -6647.937012         False          False
5   -5948.008545   -6048.080078  6695.939697 -5948.008545  151.011963 -6048.080078        0.0  100.071533      100.023682     7.0     -6647.937012         False          False
6   -5847.104004   -5950.960693  6695.939697 -5847.104004  200.976074 -5950.960693        0.0  103.856689      100.928223     8.0     -6647.937012         False          False
7   -5548.008545   -5948.032227  6695.939697 -5548.008545  402.952148 -5948.032227        0.0  400.023682      300.023682     5.0     -5548.008545          True           True
8   -5548.008545   -5847.080078  6695.939697 -5548.008545  101.000000 -5847.080078        0.0  299.071533      200.023682     2.0     -5548.008545         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:18:40]  --------------------------------------------------------------------------------
[08/09 16:18:40]  Iteration: 29 (0 solution, 28 counterexamples)
[08/09 16:18:41]  Generator returned sat in 0.506648 secs.
[08/09 16:18:41]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:42]  Improved gap from 391/8192 to 73.4375
[08/09 16:18:42]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/09 16:18:42]  Verifer returned sat in 0.685741 secs.
[08/09 16:18:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5601.917236   -5995.018555  6995.772705 -5601.917236  393.124756 -5995.018555        0.0  393.101318      393.101318     9.0     -5995.018555            -1             -1
1   -5601.917236   -5895.018555  6995.772705 -5601.917236  393.101074 -5895.018555        0.0  293.101318      293.101318     3.0     -5601.917236         False           True
2   -5501.917480   -5895.018555  6995.772705 -5501.917480  393.101074 -5895.018555        0.0  393.101074      293.101074     3.0     -5601.917236         False          False
3   -5501.917480   -5787.667480  6995.772705 -5501.917480  393.101074 -5787.667480        0.0  285.750000      193.101074     4.0     -5601.917236         False          False
4   -5501.917480   -5595.018555  6995.772705 -5501.917480    1.000000 -5595.018555        0.0   93.101074       93.101074     3.0     -5601.917236         False          False
5   -5501.917480   -5575.354980  7002.671631 -5501.917480    1.000000 -5575.354980        0.0   73.437500        0.000000     4.0     -5601.917236         False          False
6   -5501.917480   -5501.917480  7029.234131 -5501.917480    1.000000 -5501.917480        0.0    0.000000      -73.437500     5.0     -5601.917236         False          False
7   -5355.042480   -5428.479980  7055.796631 -5355.042480  146.875000 -5428.479980        0.0   73.437500        0.000000     1.0     -5355.042480          True           True
8   -5355.042480   -5355.042480  7055.796875 -5355.042480    1.000000 -5355.042480        0.0    0.000000      -99.999756     2.0     -5355.042480         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:43]  --------------------------------------------------------------------------------
[08/09 16:18:43]  Iteration: 30 (0 solution, 29 counterexamples)
[08/09 16:18:43]  Generator returned sat in 0.127177 secs.
[08/09 16:18:43]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:44]  Improved gap from 1175/16 to 73.4375
[08/09 16:18:44]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/09 16:18:44]  Verifer returned sat in 0.751366 secs.
[08/09 16:18:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5423.719727   -5723.743408  6624.497559 -5423.719727  300.023926 -5723.743408        0.0  300.023682      200.023682     8.0     -5723.743408            -1             -1
1   -5423.719727   -5523.743408  6624.497559 -5423.719727  299.999756 -5523.743408        0.0  100.023682      100.023682     3.0     -5423.719727         False           True
2   -5135.993408   -5523.743408  6624.497559 -5135.993408  387.750000 -5523.743408        0.0  387.750000      287.750000     3.0     -5423.719727         False          False
3   -5135.993408   -5423.743408  6624.497559 -5135.993408  387.750000 -5423.743408        0.0  287.750000      187.750000     4.0     -5423.719727         False          False
4   -5135.993408   -5223.743652  6624.497559 -5135.993408    1.000000 -5223.743652        0.0   87.750244       87.750000     3.0     -5423.719727         False          False
5   -5135.993408   -5209.431152  6636.747559 -5135.993408    1.000000 -5209.431152        0.0   73.437744        0.000000     4.0     -5423.719727         False          False
6   -5135.993408   -5135.993408  6663.310059 -5135.993408    1.000000 -5135.993408        0.0    0.000000      -73.437500     5.0     -5423.719727         False          False
7   -4989.118408   -5062.555908  6689.872559 -4989.118408  146.875000 -5062.555908        0.0   73.437500        0.000000     1.0     -4989.118408          True           True
8   -4989.118408   -4989.118408  6689.872559 -4989.118408    1.000000 -4989.118408        0.0    0.000000     -100.000000     2.0     -4989.118408         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:45]  --------------------------------------------------------------------------------
[08/09 16:18:45]  Iteration: 31 (0 solution, 30 counterexamples)
[08/09 16:18:46]  Generator returned sat in 0.129733 secs.
[08/09 16:18:46]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:46]  Improved gap from 1175/16 to 73.4375
[08/09 16:18:46]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:18:46]  Verifer returned sat in 0.733787 secs.
[08/09 16:18:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5745.225586   -5945.177979  6623.497559 -5745.225586  380.547607 -5945.177979        0.0  199.952393      199.952393     9.0     -5945.177979            -1             -1
1   -5564.677979   -5845.177979  6623.497559 -5564.677979  380.500000 -5845.177979        0.0  280.500000      280.500000     2.0     -5564.677979         False           True
2   -5458.427979   -5845.177979  6623.497559 -5458.427979  386.750000 -5845.177979        0.0  386.750000      286.750000     2.0     -5564.677979         False          False
3   -5458.427979   -5745.177979  6623.497559 -5458.427979  386.750000 -5745.177979        0.0  286.750000      186.750000     3.0     -5564.677979         False          False
4   -5458.427979   -5545.177979  6623.497559 -5458.427979    1.000000 -5545.177979        0.0   86.750000       86.750000     3.0     -5564.677979         False          False
5   -5458.427979   -5531.865479  6636.747559 -5458.427979    1.000000 -5531.865479        0.0   73.437500        0.000000     4.0     -5564.677979         False          False
6   -5458.427979   -5458.427979  6663.310059 -5458.427979    1.000000 -5458.427979        0.0    0.000000      -73.437500     5.0     -5564.677979         False          False
7   -5311.552979   -5384.990479  6689.872559 -5311.552979  146.875000 -5384.990479        0.0   73.437500        0.000000     1.0     -5311.552979          True           True
8   -5311.552979   -5311.552979  6689.872559 -5311.552979    1.000000 -5311.552979        0.0    0.000000     -100.000000     2.0     -5311.552979         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:47]  --------------------------------------------------------------------------------
[08/09 16:18:47]  Iteration: 32 (0 solution, 31 counterexamples)
[08/09 16:18:48]  Generator returned sat in 0.442993 secs.
[08/09 16:18:48]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:49]  Improved gap from 0 to 79.6875
[08/09 16:18:49]  Improved number of small numbers from 36 to 110 out of a max of 110
[08/09 16:18:49]  Verifer returned sat in 1.086681 secs.
[08/09 16:18:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4989.329102   -5649.363770  6623.497559 -4989.329102    0.047363 -5649.363770  260.129883  399.904785      399.904785     2.0      -5649.36377            -1             -1
1   -4989.329102   -5549.363770  6623.497559 -4989.329102    0.047363 -5549.363770  260.129883  299.904785      299.904785     2.0      -5649.36377         False          False
2   -4989.329102   -5449.363770  6623.497559 -4989.329102    0.047607 -5449.363770  260.129883  199.904785      199.904785     3.0      -5649.36377         False          False
3   -4989.281494   -5349.363770  6623.497559 -4989.281494  199.952393 -5349.363770  260.129883   99.952393       99.952393     4.0      -5649.36377         False          False
4   -4938.233887   -5250.253418  6623.497559 -4938.233887  151.000000 -5250.253418  260.129883   51.889648       51.000000     5.0      -5649.36377         False          False
5   -4938.233887   -5249.363770  6643.810059 -4938.233887    1.500000 -5249.363770  260.129883   51.000000      -28.687500     2.0      -5198.36377          True           True
6   -4888.233887   -5169.676270  6664.122559 -4888.233887  101.000000 -5169.676270  260.129883   21.312500      -58.375000     1.0      -5198.36377         False          False
7   -4818.702637   -5089.988770  6684.434814 -4818.702637   90.843750 -5089.988770  260.129883   11.156250      -68.531494     1.0      -5198.36377         False          False
8   -4748.726562   -5010.301025  6684.435059 -4748.726562   81.132324 -5010.301025  260.129883    1.444580      -98.555176     1.0      -5198.36377         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:50]  --------------------------------------------------------------------------------
[08/09 16:18:50]  Iteration: 33 (0 solution, 32 counterexamples)
[08/09 16:18:51]  Generator returned sat in 0.780088 secs.
[08/09 16:18:51]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:18:52]  Improved gap from 0 to 79.6875
[08/09 16:18:53]  Improved number of small numbers from 88 to 110 out of a max of 110
[08/09 16:18:53]  Verifer returned sat in 1.066414 secs.
[08/09 16:18:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5089.231445   -5489.233887  6463.367676 -5089.231445  199.999756 -5489.233887        0.0  400.002441      400.002441     3.0     -5489.233887            -1             -1
1   -5089.231445   -5489.231201  6463.367676 -5089.231445  199.999756 -5489.231201        0.0  399.999756      300.002441     3.0     -5489.233887         False          False
2   -5089.231445   -5289.233887  6463.367676 -5089.231445  200.000000 -5289.233887        0.0  200.002441      200.002441     4.0     -5489.233887         False          False
3   -5089.231445   -5289.233887  6463.367676 -5089.231445  200.000000 -5289.233887        0.0  200.002441      100.002441     4.0     -5489.233887          True           True
4   -5089.231445   -5090.168945  6463.367676 -5089.231445  101.000000 -5090.168945        0.0    0.937500        0.002441     5.0     -5489.233887         False           True
5   -5089.231445   -5089.233887  6483.680176 -5089.231445    0.010000 -5089.233887        0.0    0.002441      -79.685059     6.0     -5089.231445          True           True
6   -4988.233887   -5009.546387  6503.992676 -4988.233887  101.000000 -5009.546387        0.0   21.312500      -58.375000     1.0     -5089.231445         False           True
7   -4868.702637   -4929.858887  6524.305176 -4868.702637  140.843750 -4929.858887        0.0   61.156250      -18.531250     1.0     -5089.231445         False          False
8   -4848.703857   -4850.171387  6524.305176 -4848.703857   81.155029 -4850.171387        0.0    1.467529      -98.532471     1.0     -5089.231445         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:18:53]  --------------------------------------------------------------------------------
[08/09 16:18:53]  Iteration: 34 (0 solution, 33 counterexamples)
[08/09 16:18:56]  Generator returned sat in 1.633675 secs.
[08/09 16:18:56]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:18:56]  Improved gap from 4291/2048 to 100
[08/09 16:18:56]  Improved number of small numbers from 92 to 110 out of a max of 110
[08/09 16:18:56]  Verifer returned sat in 0.417419 secs.
[08/09 16:18:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5222.135986   -5622.088379  6524.305176 -5222.135986  600.047363 -5622.088379        0.0  399.952393      299.952393     2.0     -5622.088379            -1             -1
1   -5022.088623   -5422.088379  6524.305176 -5022.088623  599.999756 -5422.088379        0.0  399.999756      399.999756     2.0     -5022.088623         False          False
2   -4822.088379   -5422.088379  6524.305176 -4822.088379  600.000000 -5422.088379        0.0  600.000000      500.000000     2.0     -5022.088623         False          False
3   -4822.088379   -5222.088379  6524.305176 -4822.088379  600.000000 -5222.088379        0.0  400.000000      400.000000     3.0     -5022.088623         False          False
4   -4822.088379   -5221.731445  6524.305176 -4822.088379  202.000000 -5221.731445        0.0  399.643066      300.000000     4.0     -5022.088623         False          False
5   -4822.088379   -5023.390137  6524.305176 -4822.088379  102.178467 -5023.390137        0.0  201.301758      200.000000     5.0     -5022.088623         False          False
6   -4822.041016   -5022.088379  6524.305176 -4822.041016  201.349121 -5022.088379        0.0  200.047363      100.047363     5.0     -5022.088623         False          False
7   -4822.041016   -4822.088623  6524.305176 -4822.041016  102.000000 -4822.088623        0.0    0.047607        0.047363     6.0     -5022.088623         False          False
8   -4421.945801   -4821.993408  6524.305176 -4421.945801  400.142822 -4821.993408        0.0  400.047607      300.142578     1.0     -4421.945801          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:56]  --------------------------------------------------------------------------------
[08/09 16:18:56]  Iteration: 35 (0 solution, 34 counterexamples)
[08/09 16:18:58]  Generator returned sat in 0.132779 secs.
[08/09 16:18:58]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:18:58]  Improved gap from 270141/8192 to 100
[08/09 16:18:58]  Improved number of small numbers from 106 to 110 out of a max of 110
[08/09 16:18:58]  Verifer returned sat in 0.258856 secs.
[08/09 16:18:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5020.731445   -5620.731445  6520.432129 -5020.731445  499.952148 -5620.731445        0.0  600.000000      600.000000     5.0     -5620.731445            -1             -1
1   -5020.731445   -5520.731445  6520.432129 -5020.731445  499.952148 -5520.731445        0.0  500.000000      500.000000     5.0     -5620.731445         False          False
2   -5020.731445   -5520.731445  6520.432129 -5020.731445  499.952148 -5520.731445        0.0  500.000000      400.000000     5.0     -5620.731445         False          False
3   -5020.731445   -5420.731445  6520.432129 -5020.731445  499.952148 -5420.731445        0.0  400.000000      300.000000     6.0     -5620.731445         False          False
4   -5020.731445   -5221.731445  6520.432129 -5020.731445  102.000000 -5221.731445        0.0  201.000000      200.000000     5.0     -5620.731445         False          False
5   -5020.731445   -5188.763184  6520.432129 -5020.731445  151.500000 -5188.763184        0.0  168.031738      100.000000     6.0     -5620.731445         False          False
6   -5020.731445   -5020.957764  6520.432129 -5020.731445  167.984131 -5020.957764        0.0    0.226318        0.000000     7.0     -5620.731445         False          False
7   -4620.684082   -5020.731445  6520.432129 -4620.684082  400.273682 -5020.731445        0.0  400.047363      300.047363     8.0     -4620.684082          True           True
8   -4620.684082   -4920.731445  6520.432129 -4620.684082  102.500000 -4920.731445        0.0  300.047363      200.047363     2.0     -4620.684082         False           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:18:58]  --------------------------------------------------------------------------------
[08/09 16:18:58]  Iteration: 36 (0 solution, 35 counterexamples)
[08/09 16:18:59]  Generator returned sat in 0.121798 secs.
[08/09 16:19:00]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:19:02]  Improved gap from 0 to 68.75
[08/09 16:19:02]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:19:02]  Verifer returned sat in 2.404893 secs.
[08/09 16:19:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5804.911621   -6104.911621  6915.62207 -5804.911621  240.619873 -6104.911621        0.0  300.000000      300.000000     4.0     -6104.911621            -1             -1
1   -5804.911621   -6045.579102  6915.62207 -5804.911621  240.619873 -6045.579102        0.0  240.667480      200.000000     5.0     -6104.911621         False          False
2   -5804.911621   -6004.911621  6915.62207 -5804.911621  240.620117 -6004.911621        0.0  200.000000      100.000000     6.0     -6104.911621         False          False
3   -5736.709229   -5804.911621  6915.62207 -5736.709229  268.202393 -5804.911621        0.0   68.202393       68.202393     7.0     -6104.911621         False          False
4   -5536.209229   -5707.364258  6915.62207 -5536.209229  268.702393 -5707.364258        0.0  171.155029      168.702393     1.0     -5536.209229          True           True
5   -5536.209229   -5704.911621  6915.62207 -5536.209229  171.107422 -5704.911621        0.0  168.702393       68.702393     2.0     -5536.209229         False          False
6   -5536.209229   -5604.911621  6946.87207 -5536.209229  152.000000 -5604.911621        0.0   68.702393       -0.047607     3.0     -5536.209229         False          False
7   -5502.911621   -5536.161621  6978.12207 -5502.911621  102.000000 -5536.161621        0.0   33.250000      -35.500000     1.0     -5536.209229         False          False
8   -5448.560303   -5467.411621  6978.12207 -5448.560303   87.601318 -5467.411621        0.0   18.851318      -81.148682     1.0     -5536.209229         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:02]  --------------------------------------------------------------------------------
[08/09 16:19:02]  Iteration: 37 (0 solution, 36 counterexamples)
[08/09 16:19:03]  Generator returned sat in 0.117826 secs.
[08/09 16:19:04]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:19:05]  Improved gap from 275/4 to 68.75
[08/09 16:19:06]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/09 16:19:06]  Verifer returned sat in 2.103949 secs.
[08/09 16:19:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4918.637939   -5318.637695  6213.276855 -4918.637939    0.047607 -5318.637695        0.0  399.999756      399.999756     4.0     -5318.637695            -1             -1
1   -4918.637939   -5233.780273  6213.276855 -4918.637939    0.047607 -5233.780273        0.0  315.142334      299.999756     4.0     -5318.637695         False          False
2   -4918.637939   -5118.637939  6213.276855 -4918.637939  315.142334 -5118.637939        0.0  200.000000      199.999756     5.0     -5318.637695         False          False
3   -4803.495605   -5094.447754  6213.276855 -4803.495605  315.142334 -5094.447754        0.0  290.952148      215.142090     6.0     -5318.637695         False          False
4   -4803.495605   -4918.637939  6213.276855 -4803.495605  114.094971 -4918.637939        0.0  115.142334      115.142090     7.0     -5318.637695         False          False
5   -4803.495605   -4872.534424  6213.276855 -4803.495605  115.094971 -4872.534424        0.0   69.038818       15.142090     3.0     -4803.495605          True           True
6   -4747.482666   -4818.637695  6242.074707 -4747.482666  125.051758 -4818.637695        0.0   71.155029       -0.047119     4.0     -4803.495605         False          False
7   -4678.732666   -4747.435303  6273.324463 -4678.732666  139.905029 -4747.435303        0.0   68.702637       -0.047363     1.0     -4803.495605         False          False
8   -4659.833984   -4678.685303  6304.574463 -4659.833984   87.601318 -4678.685303        0.0   18.851318      -49.898682     1.0     -4803.495605         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:06]  --------------------------------------------------------------------------------
[08/09 16:19:06]  Iteration: 38 (0 solution, 37 counterexamples)
[08/09 16:19:09]  Generator returned sat in 1.826656 secs.
[08/09 16:19:09]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:19:09]  Improved gap from 1/8192 to 73.4375
[08/09 16:19:10]  Improved number of small numbers from 55 to 82 out of a max of 110
[08/09 16:19:10]  Verifer returned sat in 0.958332 secs.
[08/09 16:19:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4639.027588   -4939.035156  6236.756836 -4639.027588  300.004883 -4939.035156        0.0  300.007568      200.007588     5.0     -4939.035156            -1             -1
1   -4639.027588   -4739.035400  6236.756836 -4639.027588  300.005127 -4739.035400        0.0  100.007812      100.007588     6.0     -4939.035156         False           True
2   -4439.032715   -4739.032695  6236.756836 -4439.032715  300.002686 -4739.032695        0.0  299.999980      200.002461     4.0     -4439.032715          True           True
3   -4348.315195   -4639.025195  6236.756836 -4348.315195  390.717500 -4639.025195        0.0  290.710000      190.719980     2.0     -4439.032715         False           True
4   -4348.315195   -4439.035400  6236.756836 -4348.315195    0.010000 -4439.035400        0.0   90.720205       90.719980     3.0     -4439.032715         False          False
5   -4348.315195   -4421.752930  6246.036855 -4348.315195    0.010000 -4421.752930        0.0   73.437734        0.000000     3.0     -4439.032715         False           True
6   -4348.315195   -4348.315195  6272.599355 -4348.315195    0.010000 -4348.315195        0.0    0.000000      -73.437500     4.0     -4439.032715         False           True
7   -4201.440195   -4274.877695  6299.161855 -4201.440195  146.875000 -4274.877695        0.0   73.437500        0.000000     1.0     -4201.440195          True           True
8   -4201.440195   -4201.440195  6325.724121 -4201.440195    0.010000 -4201.440195        0.0    0.000000      -73.437734     2.0     -4201.440195         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:10]  --------------------------------------------------------------------------------
[08/09 16:19:10]  Iteration: 39 (0 solution, 38 counterexamples)
[08/09 16:19:12]  Generator returned sat in 0.831711 secs.
[08/09 16:19:12]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:19:13]  Improved gap from 0 to 100
[08/09 16:19:13]  Improved number of small numbers from 80 to 90 out of a max of 110
[08/09 16:19:13]  Verifer returned sat in 0.829014 secs.
[08/09 16:19:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4921.705566   -4921.752930  6319.474365 -4921.705566  399.952637 -4921.752930        0.0    0.047363        0.047363     7.0     -4921.752930            -1             -1
1   -4521.800293   -4921.705566  6319.474365 -4521.800293  399.952637 -4921.705566        0.0  399.905273      299.952637     3.0     -4921.752930         False           True
2   -4521.752930   -4821.752930  6319.474365 -4521.752930  399.952637 -4821.752930        0.0  300.000000      200.000000     2.0     -4921.752930         False          False
3   -4421.800293   -4621.823975  6319.474365 -4421.800293  399.952637 -4621.823975        0.0  200.023682      199.952637     3.0     -4921.752930         False          False
4   -4421.800293   -4521.800293  6319.474365 -4421.800293  199.976318 -4521.800293        0.0  100.000000       99.952637     4.0     -4921.752930         False          False
5   -4020.383179   -4421.753174  6319.474365 -4020.383179  501.417114 -4421.753174        0.0  401.369995      401.369751     1.0     -4020.383179          True           True
6   -4020.383179   -4321.753174  6319.474365 -4020.383179  250.708557 -4321.753174        0.0  301.369995      301.369751     2.0     -4020.383179         False          False
7   -4020.383179   -4221.753174  6319.474365 -4020.383179  125.354279 -4221.753174        0.0  201.369995      201.369751     3.0     -4020.383179         False          False
8   -4020.383179   -4221.752930  6319.474365 -4020.383179   62.677139 -4221.752930        0.0  201.369751      101.369751     4.0     -4020.383179         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:19:14]  --------------------------------------------------------------------------------
[08/09 16:19:14]  Iteration: 40 (0 solution, 39 counterexamples)
[08/09 16:19:17]  Generator returned sat in 2.534998 secs.
[08/09 16:19:17]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:19:18]  Improved gap from 0 to 73.4375
[08/09 16:19:18]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:19:18]  Verifer returned sat in 0.471052 secs.
[08/09 16:19:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3711.110840   -4111.158203  6259.427002 -3711.110840  393.125000 -4111.158203        0.0  400.047363      400.047363     9.0     -4111.158203            -1             -1
1   -3711.110840   -4011.158203  6259.427002 -3711.110840  393.077637 -4011.158203        0.0  300.047363      300.047363     3.0     -3711.110840         False           True
2   -3618.080566   -4011.158203  6259.427002 -3618.080566  393.077637 -4011.158203        0.0  393.077637      293.077637     3.0     -3711.110840         False          False
3   -3618.080566   -3906.830566  6259.427002 -3618.080566  393.077637 -3906.830566        0.0  288.750000      193.077637     4.0     -3711.110840         False          False
4   -3618.080566   -3711.158203  6259.427002 -3618.080566    2.000000 -3711.158203        0.0   93.077637       93.077637     5.0     -3711.110840         False          False
5   -3618.080566   -3711.063477  6266.349365 -3618.080566    2.000000 -3711.063477        0.0   92.982910        0.000000     4.0     -3711.110840         False           True
6   -3618.080566   -3618.080566  6292.911865 -3618.080566    2.000000 -3618.080566        0.0    0.000000      -73.437500     5.0     -3711.110840         False          False
7   -3471.205566   -3544.643066  6319.474365 -3471.205566  146.875000 -3544.643066        0.0   73.437500        0.000000     1.0     -3471.205566          True           True
8   -3471.205566   -3471.205566  6319.474365 -3471.205566    2.000000 -3471.205566        0.0    0.000000     -100.000000     2.0     -3471.205566         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:18]  --------------------------------------------------------------------------------
[08/09 16:19:18]  Iteration: 41 (0 solution, 40 counterexamples)
[08/09 16:19:20]  Generator returned sat in 0.754497 secs.
[08/09 16:19:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:19:21]  Improved gap from 0 to 73.4375
[08/09 16:19:21]  Improved number of small numbers from 93 to 110 out of a max of 110
[08/09 16:19:21]  Verifer returned sat in 0.747754 secs.
[08/09 16:19:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4720.871826   -4720.871826  6928.251953 -4720.871826  298.813965 -4720.871826        0.0    0.000000      -99.999756     1.0     -4720.871826            -1             -1
1   -4422.104980   -4520.872070  6928.251953 -4422.104980  298.766846 -4520.872070        0.0   98.767090       98.767090     1.0     -4422.104980         False          False
2   -4222.152588   -4427.841309  6928.251953 -4222.152588  298.719482 -4427.841309        0.0  205.688721      198.719482     2.0     -4222.152588         False          False
3   -4129.121826   -4420.871826  6928.251953 -4129.121826  298.719482 -4420.871826        0.0  291.750000      191.750244     2.0     -4222.152588         False           True
4   -4129.121826   -4222.199707  6928.251953 -4129.121826    0.500000 -4222.199707        0.0   93.077881       91.750244     3.0     -4222.152588         False           True
5   -4129.121826   -4202.559326  6936.501709 -4129.121826    0.500000 -4202.559326        0.0   73.437500        0.000000     3.0     -4222.152588         False           True
6   -4129.121826   -4129.121826  6963.064209 -4129.121826    0.500000 -4129.121826        0.0    0.000000      -73.437500     4.0     -4222.152588         False           True
7   -3982.246826   -4055.684326  6989.626709 -3982.246826  146.875000 -4055.684326        0.0   73.437500        0.000000     1.0     -3982.246826          True           True
8   -3982.246826   -3982.246826  6989.626953 -3982.246826    0.500000 -3982.246826        0.0    0.000000      -99.999756     2.0     -3982.246826         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:21]  --------------------------------------------------------------------------------
[08/09 16:19:21]  Iteration: 42 (0 solution, 41 counterexamples)
[08/09 16:19:23]  Generator returned sat in 0.300684 secs.
[08/09 16:19:23]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:19:23]  Improved gap from 0 to 73.4375
[08/09 16:19:23]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/09 16:19:23]  Verifer returned sat in 0.627284 secs.
[08/09 16:19:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4422.679688   -4922.727051  7130.106934 -4422.679688  385.547363 -4922.727051        0.0  500.047363      400.047363     5.0     -4922.727051            -1             -1
1   -4422.679688   -4722.727051  7130.106934 -4422.679688  385.499756 -4722.727051        0.0  300.047363      300.047363     6.0     -4422.679688         False           True
2   -4330.977051   -4722.727051  7130.106934 -4330.977051  391.750000 -4722.727051        0.0  391.750000      291.750000     6.0     -4422.679688         False           True
3   -4330.977051   -4622.727051  7130.106934 -4330.977051  391.750000 -4622.727051        0.0  291.750000      191.750000     4.0     -4422.679688         False           True
4   -4330.977051   -4422.727051  7130.106934 -4330.977051    0.500000 -4422.727051        0.0   91.750000       91.750000     5.0     -4422.679688         False          False
5   -4330.977051   -4422.679688  7138.356934 -4330.977051    0.500000 -4422.679688        0.0   91.702637        0.000000     6.0     -4422.679688         False           True
6   -4330.977051   -4330.977051  7164.919434 -4330.977051    0.500000 -4330.977051        0.0    0.000000      -73.437500     5.0     -4422.679688         False           True
7   -4184.102051   -4257.539551  7191.481934 -4184.102051  146.875000 -4257.539551        0.0   73.437500        0.000000     1.0     -4184.102051          True           True
8   -4184.102051   -4184.102051  7191.481934 -4184.102051    0.500000 -4184.102051        0.0    0.000000     -100.000000     2.0     -4184.102051         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:24]  --------------------------------------------------------------------------------
[08/09 16:19:24]  Iteration: 43 (0 solution, 42 counterexamples)
[08/09 16:19:25]  Generator returned sat in 0.299786 secs.
[08/09 16:19:25]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:19:26]  Improved gap from 387/32768 to 73.4375
[08/09 16:19:26]  Improved number of small numbers from 48 to 110 out of a max of 110
[08/09 16:19:26]  Verifer returned sat in 0.540558 secs.
[08/09 16:19:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4116.139160   -4516.162842  6823.542725 -4116.139160    0.047363 -4516.162842        0.0  400.023682      400.023682     9.0     -4516.162842            -1             -1
1   -4116.139160   -4416.162842  6823.542725 -4116.139160    0.023682 -4416.162842        0.0  300.023682      300.023682     3.0     -4116.139160         False           True
2   -4023.061523   -4416.162842  6823.542725 -4023.061523  393.101318 -4416.162842        0.0  393.101318      293.101318     3.0     -4116.139160         False          False
3   -4023.061523   -4315.811523  6823.542725 -4023.061523  393.101318 -4315.811523        0.0  292.750000      193.101318     4.0     -4116.139160         False          False
4   -4023.061523   -4116.163086  6823.542725 -4023.061523    0.500000 -4116.163086        0.0   93.101562       93.101318     5.0     -4116.139160         False          False
5   -4023.061523   -4096.499023  6830.441406 -4023.061523    0.500000 -4096.499023        0.0   73.437500        0.000000     4.0     -4116.139160         False           True
6   -4023.061523   -4023.061523  6857.003906 -4023.061523    0.500000 -4023.061523        0.0    0.000000      -73.437500     5.0     -4116.139160         False          False
7   -3876.186523   -3949.624023  6883.566406 -3876.186523  146.875000 -3949.624023        0.0   73.437500        0.000000     1.0     -3876.186523          True           True
8   -3876.186523   -3876.186523  6910.128906 -3876.186523    0.500000 -3876.186523        0.0    0.000000      -73.437500     2.0     -3876.186523         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:26]  --------------------------------------------------------------------------------
[08/09 16:19:26]  Iteration: 44 (0 solution, 43 counterexamples)
[08/09 16:19:28]  Generator returned sat in 0.316171 secs.
[08/09 16:19:28]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:19:29]  Improved gap from 1175/16 to 73.4375
[08/09 16:19:29]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:19:29]  Verifer returned sat in 0.837680 secs.
[08/09 16:19:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4276.278564   -4276.325684  6583.705566 -4276.278564  100.047119 -4276.325684        0.0    0.047119        0.047119     6.0     -4276.325684            -1             -1
1   -4176.278564   -4176.325684  6583.705566 -4176.278564  100.047119 -4176.325684        0.0    0.047119        0.047119     1.0     -4276.325684         False           True
2   -3784.075684   -4176.325684  6583.705566 -3784.075684  392.250000 -4176.325684        0.0  392.250000      292.250000     1.0     -4276.325684         False          False
3   -3784.075684   -4076.325684  6583.705566 -3784.075684  392.250000 -4076.325684        0.0  292.250000      192.250000     2.0     -4276.325684         False          False
4   -3784.075684   -3877.153564  6583.705566 -3784.075684    0.500000 -3877.153564        0.0   93.077881       92.250000     3.0     -4276.325684         False          False
5   -3784.075684   -3857.513184  6591.455566 -3784.075684    0.500000 -3857.513184        0.0   73.437500        0.000000     4.0     -4276.325684         False          False
6   -3784.075684   -3784.075684  6618.018066 -3784.075684    0.500000 -3784.075684        0.0    0.000000      -73.437500     5.0     -4276.325684         False          False
7   -3637.200684   -3710.638184  6644.580566 -3637.200684  146.875000 -3710.638184        0.0   73.437500        0.000000     1.0     -3637.200684          True           True
8   -3637.200684   -3637.200684  6644.580566 -3637.200684    0.500000 -3637.200684        0.0    0.000000     -100.000000     2.0     -3637.200684         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:29]  --------------------------------------------------------------------------------
[08/09 16:19:29]  Iteration: 45 (0 solution, 44 counterexamples)
[08/09 16:19:31]  Generator returned sat in 0.889355 secs.
[08/09 16:19:31]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:19:34]  Improved gap from 214721/8192 to 79.6875
[08/09 16:19:35]  Improved number of small numbers from 49 to 73 out of a max of 110
[08/09 16:19:35]  Verifer returned sat in 3.368453 secs.
[08/09 16:19:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3973.730469   -4372.840088  6625.385579 -3973.730469    0.046875 -4372.840088        0.0  399.109619      399.109550     8.0     -4372.840088            -1             -1
1   -3973.730469   -4272.840088  6625.385579 -3973.730469    0.023682 -4272.840088        0.0  299.109619      299.109550     3.0     -3973.730469         False           True
2   -3973.707031   -4212.464042  6625.385579 -3973.707031  299.133057 -4212.464042        0.0  238.757011      199.132988     4.0     -3973.730469         False          False
3   -3893.152519   -4168.113578  6625.385579 -3893.152519  319.311523 -4168.113578        0.0  274.961060      179.687500     4.0     -3973.730469         False           True
4   -3893.152519   -3973.754150  6625.385579 -3893.152519  160.155762 -3973.754150        0.0   80.601632       79.687500     5.0     -3973.730469         False           True
5   -3893.152519   -3972.840019  6645.698079 -3893.152519   80.577881 -3972.840019        0.0   79.687500        0.000000     3.0     -3973.730469         False           True
6   -3893.152519   -3893.152519  6666.010579 -3893.152519   40.788940 -3893.152519        0.0    0.000000      -79.687500     4.0     -3973.730469         False          False
7   -3734.777519   -3813.465019  6686.323079 -3734.777519  158.375000 -3813.465019        0.0   78.687500       -1.000000     1.0     -3734.777519          True           True
8   -3733.777519   -3733.777519  6686.323242 -3733.777519   79.687500 -3733.777519        0.0    0.000000      -99.999836     1.0     -3734.777519         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:35]  --------------------------------------------------------------------------------
[08/09 16:19:35]  Iteration: 46 (0 solution, 45 counterexamples)
[08/09 16:19:39]  Generator returned sat in 2.603392 secs.
[08/09 16:19:39]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:19:39]  Improved gap from 247157/49152 to 100
[08/09 16:19:40]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:19:40]  Verifer returned sat in 0.573343 secs.
[08/09 16:19:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3479.018066   -3582.112061  5734.657715 -3479.018066  500.046875 -3582.112061        0.0  103.093994        3.093994     2.0     -3582.112061            -1             -1
1   -3082.064941   -3479.017822  5734.657715 -3082.064941  500.047119 -3479.017822        0.0  396.952881      300.047119     1.0     -3582.112061         False          False
2   -3082.064941   -3382.112061  5734.657715 -3082.064941  396.905518 -3382.112061        0.0  300.047119      200.047119     2.0     -3082.064941         False          False
3   -2882.206299   -3282.112061  5734.657715 -2882.206299  499.905762 -3282.112061        0.0  399.905762      299.905762     3.0     -3082.064941         False          False
4   -2882.206299   -3082.112061  5734.657715 -2882.206299  151.500000 -3082.112061        0.0  199.905762      199.905762     4.0     -3082.064941         False           True
5   -2882.159180   -2982.112061  5734.657715 -2882.159180  199.952881 -2982.112061        0.0   99.952881       99.952881     3.0     -3082.064941         False           True
6   -2780.612061   -2882.206299  5734.657715 -2780.612061  201.500000 -2882.206299        0.0  101.594238      101.500000     4.0     -3082.064941         False           True
7   -2480.253418   -2882.112061  5734.657715 -2480.253418  401.952881 -2882.112061        0.0  401.858643      301.858643     2.0     -2480.253418          True           True
8   -2480.253418   -2780.564941  5734.657715 -2480.253418  101.500000 -2780.564941        0.0  300.311523      201.858643     2.0     -2480.253418         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:19:40]  --------------------------------------------------------------------------------
[08/09 16:19:40]  Iteration: 47 (0 solution, 46 counterexamples)
[08/09 16:19:42]  Generator returned sat in 0.472992 secs.
[08/09 16:19:42]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:19:42]  Improved gap from 0 to 100
[08/09 16:19:42]  Improved number of small numbers from 106 to 110 out of a max of 110
[08/09 16:19:42]  Verifer returned sat in 0.448491 secs.
[08/09 16:19:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2779.159180   -3279.159424  5734.657471 -2779.159180    0.047119 -3279.159424        0.0  500.000244      499.952881     4.0     -3279.159424            -1             -1
1   -2779.159180   -3279.112061  5734.657471 -2779.159180    0.047119 -3279.112061        0.0  499.952881      399.952881     4.0     -3279.159424         False          False
2   -2779.159180   -3175.347656  5734.657471 -2779.159180    0.047119 -3175.347656        0.0  396.188477      299.952881     4.0     -3279.159424         False          False
3   -2779.159180   -2979.112061  5734.657471 -2779.159180  396.188232 -2979.112061        0.0  199.952881      199.952881     5.0     -3279.159424         False          False
4   -2779.159180   -2879.112061  5734.657471 -2779.159180  151.523682 -2879.112061        0.0   99.952881       99.952881     5.0     -3279.159424         False          False
5   -2677.612061   -2779.159180  5734.657471 -2677.612061  201.500000 -2779.159180        0.0  101.547119      101.500000     6.0     -3279.159424         False          False
6   -2379.064941   -2779.112061  5734.657471 -2379.064941  400.094238 -2779.112061        0.0  400.047119      300.047119     2.0     -2379.064941          True           True
7   -2379.064941   -2677.565186  5734.657471 -2379.064941  101.500000 -2677.565186        0.0  298.500244      200.047119     2.0     -2379.064941         False          False
8   -2379.064941   -2479.112305  5734.657471 -2379.064941  102.273438 -2479.112305        0.0  100.047363      100.047119     3.0     -2379.064941         False          False
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:19:43]  --------------------------------------------------------------------------------
[08/09 16:19:43]  Iteration: 48 (0 solution, 47 counterexamples)
[08/09 16:19:46]  Generator returned sat in 1.425394 secs.
[08/09 16:19:46]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:19:46]  Improved gap from 1/100 to 100
[08/09 16:19:46]  Improved number of small numbers from 56 to 103 out of a max of 110
[08/09 16:19:46]  Verifer returned sat in 0.829155 secs.
[08/09 16:19:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2679.135986   -2879.130127  5334.675293 -2679.135986    0.002000 -2879.130127        0.0  199.994141      199.994141     2.0     -2879.130127            -1             -1
1   -2679.135986   -2879.127930  5334.675293 -2679.135986  199.993896 -2879.127930        0.0  199.991943       99.994141     2.0     -2879.130127         False          False
2   -2679.131836   -2679.134033  5334.675293 -2679.131836  199.996094 -2679.134033        0.0    0.002197       -0.001709     1.0     -2879.130127         False          False
3   -2179.137207   -2679.130127  5334.675293 -2179.137207  499.996826 -2679.130127        0.0  499.992920      399.992920     1.0     -2879.130127         False          False
4   -2179.137207   -2579.130061  5334.675293 -2179.137207    0.010000 -2579.130061        0.0  399.992854      299.992920     2.0     -2879.130127         False          False
5   -2179.137207   -2379.130127  5334.675293 -2179.137207    0.010000 -2379.130127        0.0  199.992920      199.992920     3.0     -2879.130127         False          False
6   -2179.137207   -2279.130127  5334.675293 -2179.137207    0.010000 -2279.130127        0.0   99.992920       99.992920     4.0     -2879.130127         False          False
7   -2179.137207   -2179.139061  5334.675293 -2179.137207    0.010000 -2179.139061        0.0    0.001854       -0.007080     5.0     -2879.130127         False          False
8   -1779.128061   -2179.129883  5334.675293 -1779.128061  400.011000 -2179.129883        0.0  400.001822      300.002066     1.0     -1779.128061          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:19:47]  --------------------------------------------------------------------------------
[08/09 16:19:47]  Iteration: 49 (0 solution, 48 counterexamples)
[08/09 16:19:50]  Generator returned sat in 1.644104 secs.
[08/09 16:19:50]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:19:51]  Improved number of small numbers from 54 to 92 out of a max of 109
[08/09 16:19:51]  Verifer returned sat in 0.730800 secs.
[08/09 16:19:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2179.137939   -2479.139893  5334.675471 -2179.137939  300.001465 -2479.139893        0.0  300.001953      299.998871     8.0     -2479.139893            -1             -1
1   -2179.137939   -2379.136963  5334.675471 -2179.137939  300.001465 -2379.136963        0.0  199.999023      199.998871     3.0     -2479.139893         False           True
2   -2079.136230   -2279.136963  5334.675471 -2079.136230  300.000732 -2279.136963        0.0  200.000732      200.000580     3.0     -2079.136230         False          False
3   -1779.136230   -2179.137207  5334.675471 -1779.136230  500.000732 -2179.137207        0.0  400.000977      400.000580     2.0     -2079.136230         False          False
4   -1779.136230   -2179.136811  5334.675471 -1779.136230    0.010000 -2179.136811        0.0  400.000580      300.000580     3.0     -2079.136230         False          False
5   -1779.136230   -2079.136719  5334.675471 -1779.136230    0.010000 -2079.136719        0.0  300.000488      200.000580     4.0     -2079.136230         False          False
6   -1779.136230   -1879.136963  5334.675471 -1779.136230    0.010000 -1879.136963        0.0  100.000732      100.000580     4.0     -2079.136230         False          False
7   -1779.136230   -1779.136811  5334.675471 -1779.136230    0.010000 -1779.136811        0.0    0.000580        0.000580     5.0     -2079.136230         False          False
8   -1379.131811   -1779.135498  5334.675471 -1379.131811  400.005000 -1779.135498        0.0  400.003688      300.005000     1.0     -1379.131811          True           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:19:51]  --------------------------------------------------------------------------------
[08/09 16:19:51]  Iteration: 50 (0 solution, 49 counterexamples)
[08/09 16:19:54]  Generator returned sat in 1.296252 secs.
[08/09 16:19:54]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:19:54]  Improved gap from 3/64 to 71.875
[08/09 16:19:54]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:19:54]  Verifer returned sat in 0.582061 secs.
[08/09 16:19:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1637.106689   -1837.153809  4692.692383 -1637.106689  200.046875 -1837.153809        0.0  200.047119      200.047119     6.0     -1837.153809            -1             -1
1   -1637.106689   -1737.153809  4692.692383 -1637.106689  200.000000 -1737.153809        0.0  100.047119      100.047119     6.0     -1637.106689         False           True
2   -1350.153809   -1737.153809  4692.692383 -1350.153809  387.000000 -1737.153809        0.0  387.000000      287.000000     6.0     -1637.106689         False           True
3   -1350.153809   -1637.153809  4692.692383 -1350.153809  387.000000 -1637.153809        0.0  287.000000      187.000000     4.0     -1637.106689         False           True
4   -1350.153809   -1437.153809  4692.692383 -1350.153809    0.500000 -1437.153809        0.0   87.000000       87.000000     3.0     -1637.106689         False          False
5   -1350.153809   -1422.028809  4705.692383 -1350.153809    0.500000 -1422.028809        0.0   71.875000        0.000000     4.0     -1637.106689         False          False
6   -1350.153809   -1350.153809  4733.817383 -1350.153809    0.500000 -1350.153809        0.0    0.000000      -71.875000     5.0     -1637.106689         False          False
7   -1206.403809   -1278.278809  4761.942383 -1206.403809  143.750000 -1278.278809        0.0   71.875000        0.000000     1.0     -1206.403809          True           True
8   -1206.403809   -1206.403809  4761.942383 -1206.403809    0.500000 -1206.403809        0.0    0.000000     -100.000000     2.0     -1206.403809         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:19:55]  --------------------------------------------------------------------------------
[08/09 16:19:55]  Iteration: 51 (0 solution, 50 counterexamples)
[08/09 16:19:57]  Generator returned sat in 1.008437 secs.
[08/09 16:19:57]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:00]  Improved gap from 1833/224 to 79.6875
[08/09 16:20:00]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:20:00]  Verifer returned sat in 2.447326 secs.
[08/09 16:20:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3240.712158   -3401.063965  6256.602539 -3240.712158  399.109131 -3401.063965        0.0  160.351807      160.351807     6.0     -3401.063965            -1             -1
1   -3001.978027   -3321.266846  6256.602539 -3001.978027  399.085938 -3321.266846        0.0  319.288818      299.085938     6.0     -3001.978027         False           True
2   -3001.954346   -3240.688965  6256.602539 -3001.954346  319.312500 -3240.688965        0.0  238.734619      199.109619     2.0     -3001.954346         False           True
3   -2921.376465   -3197.337402  6256.602539 -2921.376465  319.312500 -3197.337402        0.0  275.960938      179.687500     3.0     -3001.954346         False          False
4   -2921.376465   -3001.978027  6256.602539 -2921.376465  160.156250 -3001.978027        0.0   80.601562       79.687500     4.0     -3001.954346         False          False
5   -2921.376465   -3001.063965  6276.915039 -2921.376465   80.578125 -3001.063965        0.0   79.687500        0.000000     3.0     -3001.954346         False           True
6   -2921.376465   -2921.376465  6297.227539 -2921.376465   40.789062 -2921.376465        0.0    0.000000      -79.687500     4.0     -3001.954346         False          False
7   -2763.001465   -2841.688965  6317.540039 -2763.001465  158.375000 -2841.688965        0.0   78.687500       -1.000000     1.0     -2763.001465          True           True
8   -2762.001465   -2762.001465  6317.540039 -2762.001465   79.687500 -2762.001465        0.0    0.000000     -100.000000     1.0     -2763.001465         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:00]  --------------------------------------------------------------------------------
[08/09 16:20:00]  Iteration: 52 (0 solution, 51 counterexamples)
[08/09 16:20:02]  Generator returned sat in 0.414443 secs.
[08/09 16:20:02]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:04]  Improved gap from 5285/128 to 79.6875
[08/09 16:20:04]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:20:04]  Verifer returned sat in 2.021611 secs.
[08/09 16:20:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1338.286133   -1637.536377  6256.602539 -1338.286133  299.202881 -1637.536377        0.0  299.250244      199.250244     7.0     -1637.536377            -1             -1
1   -1338.286133   -1437.536377  6256.602539 -1338.286133  299.202881 -1437.536377        0.0   99.250244       99.250244     5.0     -1637.536377         False           True
2   -1138.380127   -1376.973877  6256.602539 -1138.380127  299.156250 -1376.973877        0.0  238.593750      199.156250     3.0     -1138.380127          True           True
3   -1057.848877   -1293.067627  6256.602539 -1057.848877  319.125000 -1293.067627        0.0  235.218750      179.687500     2.0     -1138.380127         False          False
4   -1057.848877   -1138.426758  6256.602539 -1057.848877  160.062500 -1138.426758        0.0   80.577881       79.687500     3.0     -1138.380127         False          False
5   -1057.848877   -1137.536377  6276.915039 -1057.848877   80.531250 -1137.536377        0.0   79.687500        0.000000     3.0     -1138.380127         False          False
6   -1057.848877   -1057.848877  6297.227295 -1057.848877   40.765625 -1057.848877        0.0    0.000000      -79.687744     4.0     -1138.380127         False          False
7    -899.473877    -978.161133  6317.539795  -899.473877  158.375000  -978.161133        0.0   78.687256       -1.000244     1.0      -899.473877          True           True
8    -898.473633    -898.473633  6317.539795  -898.473633   79.687500  -898.473633        0.0    0.000000     -100.000000     1.0      -899.473877         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:05]  --------------------------------------------------------------------------------
[08/09 16:20:05]  Iteration: 53 (0 solution, 52 counterexamples)
[08/09 16:20:07]  Generator returned sat in 1.035993 secs.
[08/09 16:20:07]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:07]  Improved gap from 237/8 to 100
[08/09 16:20:08]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/09 16:20:08]  Verifer returned sat in 0.559795 secs.
[08/09 16:20:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1628.519043   -1828.518799  6247.991211 -1628.519043    0.046631 -1828.518799        0.0  199.999756       99.999756     7.0     -1828.518799            -1             -1
1   -1628.519043   -1628.542480  6247.991211 -1628.519043    0.023193 -1628.542480        0.0    0.023438       -0.000244     3.0     -1628.519043         False           True
2   -1528.519043   -1628.518799  6247.991211 -1528.519043  100.023438 -1628.518799        0.0   99.999756       -0.000244     1.0     -1628.519043         False           True
3   -1229.471924   -1428.518799  6247.991211 -1229.471924  399.046875 -1428.518799        0.0  199.046875      199.046875     1.0     -1628.519043         False          False
4   -1228.495361   -1428.518799  6247.991211 -1228.495361  200.023438 -1428.518799        0.0  200.023438      100.023438     1.0     -1628.519043         False          False
5   -1228.495361   -1228.518799  6247.991211 -1228.495361  100.511719 -1228.518799        0.0    0.023438        0.023438     2.0     -1628.519043         False          False
6    -827.495361   -1227.518799  6247.991211  -827.495361  401.023438 -1227.518799        0.0  400.023438      301.023438     1.0      -827.495361          True           True
7    -827.495361   -1028.518799  6247.991211  -827.495361  201.011719 -1028.518799        0.0  201.023438      201.023438     2.0      -827.495361         False          False
8    -827.495361    -928.519043  6247.991211  -827.495361  101.005859  -928.519043        0.0  101.023682      101.023438     3.0      -827.495361         False           True
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:20:08]  --------------------------------------------------------------------------------
[08/09 16:20:08]  Iteration: 54 (0 solution, 53 counterexamples)
[08/09 16:20:10]  Generator returned sat in 0.424408 secs.
[08/09 16:20:10]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:11]  Improved number of small numbers from 63 to 109 out of a max of 109
[08/09 16:20:11]  Verifer returned sat in 0.398874 secs.
[08/09 16:20:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1861.736084   -1961.688965  6247.991211 -1861.736084    0.046875 -1961.688965        0.0   99.952881       -0.047119     7.0     -1961.688965            -1             -1
1   -1760.892090   -1861.688965  6247.991211 -1760.892090  200.796875 -1861.688965        0.0  100.796875        0.796875     1.0     -1961.688965         False           True
2   -1660.938965   -1760.845459  6247.991211 -1660.938965  200.750000 -1760.845459        0.0   99.906494        0.750000     1.0     -1660.938965         False          False
3   -1361.782959   -1561.861084  6247.991211 -1361.782959  399.062500 -1561.861084        0.0  200.078125      199.906006     1.0     -1660.938965         False          False
4   -1361.782959   -1461.688965  6247.991211 -1361.782959  200.031250 -1461.688965        0.0   99.906006       99.906006     2.0     -1660.938965         False          False
5    -961.642090   -1361.736084  6247.991211  -961.642090  500.046875 -1361.736084        0.0  400.093994      400.046875     1.0      -961.642090          True           True
6    -961.642090   -1361.688965  6247.991211  -961.642090  250.523438 -1361.688965        0.0  400.046875      300.046875     2.0      -961.642090         False          False
7    -961.642090   -1161.688965  6247.991211  -961.642090  125.761719 -1161.688965        0.0  200.046875      200.046875     3.0      -961.642090         False           True
8    -961.642090   -1161.688965  6247.991211  -961.642090   63.380859 -1161.688965        0.0  200.046875      100.046875     3.0      -961.642090         False           True
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:20:11]  --------------------------------------------------------------------------------
[08/09 16:20:11]  Iteration: 55 (0 solution, 54 counterexamples)
[08/09 16:20:13]  Generator returned sat in 0.424593 secs.
[08/09 16:20:13]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:14]  Improved number of small numbers from 79 to 83 out of a max of 109
[08/09 16:20:14]  Verifer returned sat in 0.565971 secs.
[08/09 16:20:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1761.814453   -1761.861084  6247.990967 -1761.814453    1.312744 -1761.861084        0.0    0.046631        0.046631     7.0     -1761.861084            -1             -1
1   -1760.548340   -1760.594849  6247.990967 -1760.548340    1.312744 -1760.594849        0.0    0.046509      -98.687256     1.0     -1761.861084         False           True
2   -1361.861084   -1661.861084  6247.990967 -1361.861084  398.733765 -1661.861084        0.0  300.000000      200.000000     1.0     -1761.861084         False          False
3   -1261.954590   -1561.861084  6247.990967 -1261.954590  399.906494 -1561.861084        0.0  299.906494      199.906494     2.0     -1761.861084         False          False
4   -1261.954590   -1361.861084  6247.990967 -1261.954590  200.453247 -1361.861084        0.0   99.906494       99.906494     3.0     -1761.861084         False          False
5    -861.814331   -1261.907959  6247.990967  -861.814331  500.046753 -1261.907959        0.0  400.093628      400.046753     1.0      -861.814331          True           True
6    -861.814331   -1261.861084  6247.990967  -861.814331  250.523376 -1261.861084        0.0  400.046753      300.046753     2.0      -861.814331         False          False
7    -861.814331   -1061.861328  6247.990967  -861.814331  125.761688 -1061.861328        0.0  200.046997      200.046753     3.0      -861.814331         False          False
8    -861.814331   -1061.861084  6247.990967  -861.814331   63.380844 -1061.861084        0.0  200.046753      100.046753     4.0      -861.814331         False           True
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[08/09 16:20:14]  --------------------------------------------------------------------------------
[08/09 16:20:14]  Iteration: 56 (0 solution, 55 counterexamples)
[08/09 16:20:16]  Generator returned sat in 0.951452 secs.
[08/09 16:20:16]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:17]  Improved gap from 0 to 73.4375
[08/09 16:20:17]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:20:17]  Verifer returned sat in 0.825943 secs.
[08/09 16:20:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2125.427979   -2225.334717  6740.068604 -2125.427979  399.906494 -2225.334717        0.0   99.906738       99.906738     1.0     -2225.334717            -1             -1
1   -1825.428223   -2125.334717  6740.068604 -1825.428223  399.906494 -2125.334717        0.0  299.906494      299.906494     1.0     -2225.334717         False          False
2   -1815.866211   -2042.553223  6740.068604 -1815.866211  309.468506 -2042.553223        0.0  226.687012      209.468506     2.0     -1815.866211         False          False
3   -1733.084717   -2025.334717  6740.068604 -1733.084717  309.468506 -2025.334717        0.0  292.250000      192.250000     3.0     -1815.866211         False           True
4   -1733.084717   -1825.334717  6740.068604 -1733.084717    0.500000 -1825.334717        0.0   92.250000       92.250000     3.0     -1815.866211         False           True
5   -1733.084717   -1806.522217  6747.818604 -1733.084717    0.500000 -1806.522217        0.0   73.437500        0.000000     3.0     -1815.866211         False           True
6   -1733.084717   -1733.084717  6774.381104 -1733.084717    0.500000 -1733.084717        0.0    0.000000      -73.437500     4.0     -1815.866211         False           True
7   -1586.209717   -1659.647217  6800.943604 -1586.209717  146.875000 -1659.647217        0.0   73.437500        0.000000     1.0     -1586.209717          True           True
8   -1586.209717   -1586.209717  6800.943604 -1586.209717    0.500000 -1586.209717        0.0    0.000000     -100.000000     2.0     -1586.209717         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:18]  --------------------------------------------------------------------------------
[08/09 16:20:18]  Iteration: 57 (0 solution, 56 counterexamples)
[08/09 16:20:20]  Generator returned sat in 0.875367 secs.
[08/09 16:20:20]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:21]  Improved gap from 0 to 71.875
[08/09 16:20:21]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:20:21]  Verifer returned sat in 0.391809 secs.
[08/09 16:20:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2230.239746   -2430.193115  6844.927002 -2230.239746  300.000000 -2430.193115        0.0  199.953369       99.953369     2.0     -2430.193115            -1             -1
1   -2130.239746   -2230.193115  6844.927002 -2130.239746  299.953369 -2230.193115        0.0   99.953369       99.953369     1.0     -2130.239746         False          False
2   -1842.693115   -2230.193115  6844.927002 -1842.693115  387.500000 -2230.193115        0.0  387.500000      287.500000     1.0     -2130.239746         False          False
3   -1842.693115   -2130.193115  6844.927002 -1842.693115  387.500000 -2130.193115        0.0  287.500000      187.500000     2.0     -2130.239746         False          False
4   -1842.693115   -1930.193115  6844.927002 -1842.693115    0.500000 -1930.193115        0.0   87.500000       87.500000     3.0     -2130.239746         False          False
5   -1842.693115   -1914.568115  6857.427002 -1842.693115    0.500000 -1914.568115        0.0   71.875000        0.000000     4.0     -2130.239746         False          False
6   -1842.693115   -1842.693115  6885.552002 -1842.693115    0.500000 -1842.693115        0.0    0.000000      -71.875000     5.0     -2130.239746         False          False
7   -1698.943115   -1770.818115  6913.677002 -1698.943115  143.750000 -1770.818115        0.0   71.875000        0.000000     1.0     -1698.943115          True           True
8   -1698.943115   -1698.943115  6913.677002 -1698.943115    0.500000 -1698.943115        0.0    0.000000     -100.000000     2.0     -1698.943115         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:21]  --------------------------------------------------------------------------------
[08/09 16:20:21]  Iteration: 58 (0 solution, 57 counterexamples)
[08/09 16:20:23]  Generator returned sat in 0.605559 secs.
[08/09 16:20:23]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:24]  Improved gap from 225/8 to 68.75
[08/09 16:20:24]  Improved number of small numbers from 89 to 110 out of a max of 110
[08/09 16:20:24]  Verifer returned sat in 0.724573 secs.
[08/09 16:20:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1938.071045   -2238.071045  6853.583740 -1938.071045    0.278809 -2238.071045        0.0  300.000000      300.000000     6.0     -2238.071045            -1             -1
1   -1938.071045   -2138.071045  6853.583740 -1938.071045    0.278809 -2138.071045        0.0  200.000000      200.000000     6.0     -2238.071045         False           True
2   -1768.117676   -2138.071045  6853.583740 -1768.117676  369.953369 -2138.071045        0.0  369.953369      269.953369     6.0     -2238.071045          True           True
3   -1768.117676   -1938.071045  6853.583740 -1768.117676  369.953369 -1938.071045        0.0  169.953369      169.953369     4.0     -2238.071045         False           True
4   -1768.117676   -1838.071045  6853.583740 -1768.117676    0.500000 -1838.071045        0.0   69.953369       69.953369     3.0     -2238.071045         False          False
5   -1768.117676   -1836.867676  6883.630371 -1768.117676    0.500000 -1836.867676        0.0   68.750000        0.000000     4.0     -2238.071045         False          False
6   -1768.117676   -1768.117676  6913.676758 -1768.117676    0.500000 -1768.117676        0.0    0.000000      -69.953613     5.0     -2238.071045         False          False
7   -1598.164307   -1698.164062  6913.677002 -1598.164307  169.953369 -1698.164062        0.0   99.999756        0.000000     1.0     -1598.164307          True           True
8   -1598.164307   -1598.164307  6913.677002 -1598.164307    0.500000 -1598.164307        0.0    0.000000     -100.000000     2.0     -1598.164307         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:25]  --------------------------------------------------------------------------------
[08/09 16:20:25]  Iteration: 59 (0 solution, 58 counterexamples)
[08/09 16:20:29]  Generator returned sat in 2.576188 secs.
[08/09 16:20:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:33]  Improved gap from 824489/16384 to 68.75
[08/09 16:20:33]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:20:33]  Verifer returned sat in 4.067046 secs.
[08/09 16:20:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -321.696777    -793.742920  6500.9646  -321.696777    0.046143  -793.742920        0.0  472.046143      472.046143     3.0      -793.742920            -1             -1
1    -321.696777    -693.743164  6500.9646  -321.696777    0.046143  -693.743164        0.0  372.046387      372.046143     4.0      -793.742920         False           True
2    -321.696777    -593.789551  6500.9646  -321.696777  135.999756  -593.789551        0.0  272.092773      272.046143     4.0      -793.742920          True           True
3    -321.696777    -593.742920  6500.9646  -321.696777  136.000000  -593.742920        0.0  272.046143      172.046143     4.0      -793.742920          True           True
4    -321.696777    -393.743164  6500.9646  -321.696777  272.000000  -393.743164        0.0   72.046387       72.046143     5.0      -321.696777          True           True
5    -257.243164    -293.742920  6500.9646  -257.243164  136.500000  -293.742920        0.0   36.499756       36.499756     1.0      -321.696777         False           True
6    -224.992920    -293.742920  6532.2146  -224.992920   68.750000  -293.742920        0.0   68.750000        0.000000     1.0      -321.696777         False          False
7    -224.992920    -224.992920  6563.4646  -224.992920   34.875000  -224.992920        0.0    0.000000      -68.750000     2.0      -321.696777         False          False
8    -155.242920    -156.242920  6563.4646  -155.242920   69.750000  -156.242920        0.0    1.000000      -99.000000     1.0      -155.242920          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:33]  --------------------------------------------------------------------------------
[08/09 16:20:33]  Iteration: 60 (0 solution, 59 counterexamples)
[08/09 16:20:36]  Generator returned sat in 0.758114 secs.
[08/09 16:20:36]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:38]  Improved gap from 322465/16384 to 64.0625
[08/09 16:20:38]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:20:38]  Verifer returned sat in 2.497532 secs.
[08/09 16:20:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -1598.571777   -1698.618652  6554.675293 -1598.571777    0.023438 -1698.618652        0.0  100.046875      100.046875     2.0     -1698.618652            -1             -1
1   -1598.571777   -1598.618896  6554.675293 -1598.571777    0.023438 -1598.618896        0.0    0.047119        0.046875     3.0     -1698.618652         False          False
2   -1598.571777   -1598.618652  6565.776855 -1598.571777    0.023438 -1598.618652        0.0    0.046875      -88.851562     4.0     -1698.618652          True           True
3   -1297.962402   -1448.767090  6565.776855 -1297.962402  300.656250 -1448.767090        0.0  150.804688      111.757812     1.0     -1698.618652          True           True
4   -1297.938965   -1309.720215  6565.776855 -1297.938965  150.828125 -1309.720215        0.0   11.781250       11.781250     2.0     -1698.618652         False          False
5   -1233.806152   -1297.962646  6589.862793 -1233.806152   75.914062 -1297.962646        0.0   64.156494        0.000000     3.0     -1698.618652         False          False
6   -1146.134521   -1146.157715  6589.862793 -1146.134521  151.828125 -1146.157715        0.0    0.023193      -12.328369     1.0     -1146.134521          True           True
7   -1069.743652   -1133.806152  6625.800293 -1069.743652   76.414062 -1133.806152        0.0   64.062500        0.000000     1.0     -1146.134521         False          False
8   -1069.743652   -1069.743652  6625.800537 -1069.743652   38.707031 -1069.743652        0.0    0.000000      -99.999756     2.0     -1146.134521         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:39]  --------------------------------------------------------------------------------
[08/09 16:20:39]  Iteration: 61 (0 solution, 60 counterexamples)
[08/09 16:20:41]  Generator returned sat in 1.133769 secs.
[08/09 16:20:42]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:44]  Improved gap from 95/2048 to 64.0625
[08/09 16:20:44]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:20:44]  Verifer returned sat in 2.451719 secs.
[08/09 16:20:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2158.212402   -2158.235840  7014.292480 -2158.212402  249.898438 -2158.235840        0.0    0.023438        0.023438     3.0     -2158.235840            -1             -1
1   -1908.360840   -2058.259277  7014.292480 -1908.360840  249.875000 -2058.259277        0.0  149.898438      149.875000     1.0     -1908.360840         False          False
2   -1757.603027   -2058.235840  7014.292480 -1757.603027  300.656250 -2058.235840        0.0  300.632812      200.632812     2.0     -1908.360840         False          False
3   -1757.579590   -1908.384277  7014.292480 -1757.579590  300.656250 -1908.384277        0.0  150.804688      100.656250     3.0     -1908.360840         False          False
4   -1757.556152   -1769.454590  7014.292480 -1757.556152  150.828125 -1769.454590        0.0   11.898438        0.679688     3.0     -1908.360840         False          False
5   -1693.540527   -1757.603027  7049.597168 -1693.540527   75.914062 -1757.603027        0.0   64.062500        0.000000     4.0     -1908.360840         False          False
6   -1605.774902   -1605.892090  7049.597168 -1605.774902  151.828125 -1605.892090        0.0    0.117188      -12.234375     1.0     -1605.774902          True           True
7   -1529.478027   -1593.540527  7085.534668 -1529.478027   76.414062 -1593.540527        0.0   64.062500        0.000000     1.0     -1605.774902         False          False
8   -1529.478027   -1529.478027  7121.472168 -1529.478027   38.707031 -1529.478027        0.0    0.000000      -64.062500     2.0     -1605.774902         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:45]  --------------------------------------------------------------------------------
[08/09 16:20:45]  Iteration: 62 (0 solution, 61 counterexamples)
[08/09 16:20:47]  Generator returned sat in 0.625344 secs.
[08/09 16:20:47]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:20:48]  Improved gap from 95/2048 to 68.75
[08/09 16:20:48]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:20:48]  Verifer returned sat in 1.027700 secs.
[08/09 16:20:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2381.505127   -2650.254883  7018.347168 -2381.505127    0.046143 -2650.254883        0.0  268.749756      168.750000     2.0     -2650.254883            -1             -1
1   -2381.458740   -2519.051514  7018.347168 -2381.458740  268.796143 -2519.051514        0.0  137.592773       68.796387     2.0     -2650.254883         False          False
2   -2250.301514   -2350.255127  7018.347168 -2250.301514  268.750000 -2350.255127        0.0   99.953613       99.953613     1.0     -2250.301514         False          False
3   -2081.505127   -2250.255127  7018.347168 -2081.505127  268.750000 -2250.255127        0.0  168.750000      168.750000     1.0     -2250.301514         False          False
4   -2081.505127   -2152.662354  7018.347168 -2081.505127  134.875000 -2152.662354        0.0   71.157227       68.750000     2.0     -2250.301514         False          False
5   -2081.505127   -2150.255127  7049.597168 -2081.505127   67.937500 -2150.255127        0.0   68.750000        0.000000     3.0     -2250.301514         False          False
6   -2081.505127   -2081.505127  7080.846924 -2081.505127   34.468750 -2081.505127        0.0    0.000000      -68.750244     4.0     -2250.301514         False          False
7   -1912.755127   -1997.583740  7080.846924 -1912.755127  168.750000 -1997.583740        0.0   84.828613       -0.000244     1.0     -1912.755127          True           True
8   -1912.708740   -1912.708740  7080.847168 -1912.708740   84.875000 -1912.708740        0.0    0.000000      -99.953613     1.0     -1912.755127         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:48]  --------------------------------------------------------------------------------
[08/09 16:20:48]  Iteration: 63 (0 solution, 62 counterexamples)
[08/09 16:20:53]  Generator returned sat in 3.452529 secs.
[08/09 16:20:53]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:20:56]  Improved gap from 0 to 18.75
[08/09 16:20:56]  Improved number of small numbers from 52 to 110 out of a max of 110
[08/09 16:20:56]  Verifer returned sat in 2.780517 secs.
[08/09 16:20:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2810.294678   -2949.368652  7397.136719 -2810.294678    0.023193 -2949.368652        0.0  139.073975      118.750000     6.0     -2949.368652            -1             -1
1   -2810.294678   -2829.067871  7397.136719 -2810.294678    0.023193 -2829.067871        0.0   18.773193       18.750000     6.0     -2949.368652         False           True
2   -2810.294678   -2829.044678  7478.386719 -2810.294678    0.046387 -2829.044678        0.0   18.750000        0.000000     7.0     -2949.368652          True           True
3   -2810.294678   -2810.294678  7559.636719 -2810.294678    0.023193 -2810.294678        0.0    0.000000      -18.750000     8.0     -2810.294678          True           True
4   -2671.220703   -2691.544678  7559.636719 -2671.220703  139.073975 -2691.544678        0.0   20.323975       20.323975     1.0     -2810.294678         False           True
5   -2554.021484   -2691.544678  7559.636719 -2554.021484  137.523193 -2691.544678        0.0  137.523193       37.523193     1.0     -2810.294678         False          False
6   -2554.021484   -2591.544678  7620.562744 -2554.021484  137.500000 -2591.544678        0.0   37.523193       -1.550781     2.0     -2810.294678         False          False
7   -2413.419678   -2552.470703  7620.562744 -2413.419678  178.125000 -2552.470703        0.0  139.051025       39.051025     1.0     -2413.419678          True           True
8   -2413.396729   -2451.568115  7620.562744 -2413.396729  139.073975 -2451.568115        0.0   38.171387      -60.926025     2.0     -2413.419678         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:20:57]  --------------------------------------------------------------------------------
[08/09 16:20:57]  Iteration: 64 (0 solution, 63 counterexamples)
[08/09 16:20:59]  Generator returned sat in 0.942465 secs.
[08/09 16:20:59]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:21:02]  Improved gap from 0 to 68.75
[08/09 16:21:02]  Improved number of small numbers from 45 to 110 out of a max of 110
[08/09 16:21:02]  Verifer returned sat in 2.496944 secs.
[08/09 16:21:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4778.770752   -5349.974365  6510.517334 -4778.770752    0.046143 -5349.974365        0.0  571.203613      571.203613     9.0     -5349.974365            -1             -1
1   -4778.770752   -5249.974365  6510.517334 -4778.770752    0.046387 -5249.974365        0.0  471.203613      471.203613     8.0     -5349.974365         False           True
2   -4778.770752   -5149.974365  6510.517334 -4778.770752    0.046387 -5149.974365        0.0  371.203613      371.203613     8.0     -5349.974365          True           True
3   -4778.770752   -5092.937256  6510.517334 -4778.770752  371.203613 -5092.937256        0.0  314.166504      271.203613     8.0     -5349.974365          True           True
4   -4778.770752   -4949.974365  6510.517334 -4778.770752  314.120361 -4949.974365        0.0  171.203613      171.203613     6.0     -4778.770752          True           True
5   -4778.770752   -4949.927979  6510.517334 -4778.770752  150.000000 -4949.927979        0.0  171.157227       71.203613     6.0     -4778.770752         False          False
6   -4778.770752   -4849.974365  6539.313721 -4778.770752  100.023193 -4849.974365        0.0   71.203613        0.000000     7.0     -4778.770752         False          False
7   -4728.492920   -4778.770752  6570.563721 -4728.492920  121.481445 -4778.770752        0.0   50.277832      -18.472168     8.0     -4778.770752         False           True
8   -4693.168945   -4710.020508  6570.563721 -4693.168945   85.601807 -4710.020508        0.0   16.851562      -83.148193     1.0     -4778.770752         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:02]  --------------------------------------------------------------------------------
[08/09 16:21:02]  Iteration: 65 (0 solution, 64 counterexamples)
[08/09 16:21:05]  Generator returned sat in 0.978027 secs.
[08/09 16:21:05]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:21:06]  Improved number of small numbers from 55 to 109 out of a max of 109
[08/09 16:21:06]  Verifer returned sat in 0.369231 secs.
[08/09 16:21:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4249.520508   -4849.543457  6010.086426 -4249.520508    0.022949 -4849.543457        0.0  600.022949      600.022949     9.0     -4849.543457            -1             -1
1   -4249.520508   -4749.566895  6010.086426 -4249.520508    0.022949 -4749.566895        0.0  500.046387      500.022949     5.0     -4849.543457         False           True
2   -4249.520508   -4749.543457  6010.086426 -4249.520508    0.023193 -4749.543457        0.0  500.022949      400.022949     6.0     -4849.543457         False          False
3   -4249.497559   -4549.566895  6010.086426 -4249.497559  500.045898 -4549.566895        0.0  300.069336      300.045898     5.0     -4849.543457         False          False
4   -4249.497559   -4549.543457  6010.086426 -4249.497559  149.988281 -4549.543457        0.0  300.045898      200.045898     5.0     -4849.543457         False          False
5   -4249.497559   -4349.997559  6010.086426 -4249.497559  100.011719 -4349.997559        0.0  100.500000      100.045898     6.0     -4849.543457         False          False
6   -4150.224609   -4249.543457  6010.086426 -4150.224609  199.772949 -4249.543457        0.0   99.318848       99.318848     7.0     -4849.543457         False          False
7   -3849.497559   -4249.520508  6010.086426 -3849.497559  400.045898 -4249.520508        0.0  400.022949      300.045898     8.0     -3849.497559          True           True
8   -3849.497559   -4149.543457  6010.086426 -3849.497559  150.011475 -4149.543457        0.0  300.045898      200.045898     2.0     -3849.497559         False           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:21:06]  --------------------------------------------------------------------------------
[08/09 16:21:06]  Iteration: 66 (0 solution, 65 counterexamples)
[08/09 16:21:09]  Generator returned sat in 0.985744 secs.
[08/09 16:21:09]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:21:09]  Improved number of small numbers from 103 to 109 out of a max of 109
[08/09 16:21:09]  Verifer returned sat in 0.212822 secs.
[08/09 16:21:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4249.520752   -4849.543701  6010.086426 -4249.520752    0.022949 -4849.543701        0.0  600.022949      600.022949     9.0     -4849.543701            -1             -1
1   -4249.520752   -4749.567139  6010.086426 -4249.520752    0.022949 -4749.567139        0.0  500.046387      500.022949     6.0     -4849.543701         False           True
2   -4249.520752   -4749.543701  6010.086426 -4249.520752    0.022949 -4749.543701        0.0  500.022949      400.022949     6.0     -4849.543701         False          False
3   -4249.520752   -4648.589600  6010.086426 -4249.520752  500.022705 -4648.589600        0.0  399.068848      300.022949     5.0     -4849.543701         False          False
4   -4249.520752   -4549.543701  6010.086426 -4249.520752  100.477051 -4549.543701        0.0  300.022949      200.022949     5.0     -4849.543701         False          False
5   -4249.520752   -4349.543701  6010.086426 -4249.520752  100.011719 -4349.543701        0.0  100.022949      100.022949     6.0     -4849.543701         False          False
6   -4149.543701   -4249.543701  6010.086426 -4149.543701  200.000000 -4249.543701        0.0  100.000000      100.000000     7.0     -4849.543701         False          False
7   -3849.520752   -4249.537842  6010.086426 -3849.520752  400.022949 -4249.537842        0.0  400.017090      300.022949     8.0     -3849.520752          True           True
8   -3849.520752   -4149.537842  6010.086426 -3849.520752  150.002930 -4149.537842        0.0  300.017090      200.022949     2.0     -3849.520752         False           True
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[08/09 16:21:10]  --------------------------------------------------------------------------------
[08/09 16:21:10]  Iteration: 67 (0 solution, 66 counterexamples)
[08/09 16:21:12]  Generator returned sat in 0.797904 secs.
[08/09 16:21:12]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:21:14]  Improved gap from 0 to 68.75
[08/09 16:21:15]  Improved number of small numbers from 43 to 110 out of a max of 110
[08/09 16:21:15]  Verifer returned sat in 2.324435 secs.
[08/09 16:21:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -5072.016357   -5171.970459  6310.582031 -5072.016357    0.022949 -5171.970459        0.0   99.954102       99.954102     9.0     -5171.970459            -1             -1
1   -4993.220459   -5071.993652  6310.582031 -4993.220459  178.750000 -5071.993652        0.0   78.773193       78.750000     1.0     -5171.970459         False           True
2   -4993.220459   -5071.970459  6331.832031 -4993.220459    0.023193 -5071.970459        0.0   78.750000        0.000000     2.0     -4993.220459         False          False
3   -4653.788086   -4893.220459  6331.832031 -4653.788086  418.182373 -4893.220459        0.0  239.432373      239.432373     1.0     -4993.220459         False          False
4   -4653.788086   -4793.220703  6331.832031 -4653.788086  139.375000 -4793.220703        0.0  139.432617      139.432373     2.0     -4993.220459         False          False
5   -4653.788086   -4793.197510  6331.832031 -4653.788086  139.386475 -4793.197510        0.0  139.409424       39.432373     3.0     -4993.220459         False          False
6   -4653.788086   -4693.220459  6360.605225 -4653.788086  139.386475 -4693.220459        0.0   39.432373      -31.794434     4.0     -4993.220459         False          False
7   -4593.220459   -4621.993652  6391.854980 -4593.220459  100.000000 -4621.993652        0.0   28.773193      -39.977051     1.0     -4993.220459         False          False
8   -4536.380127   -4553.243408  6391.854980 -4536.380127   85.613525 -4553.243408        0.0   16.863281      -83.136719     1.0     -4993.220459         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:15]  --------------------------------------------------------------------------------
[08/09 16:21:15]  Iteration: 68 (0 solution, 67 counterexamples)
[08/09 16:21:18]  Generator returned sat in 1.383297 secs.
[08/09 16:21:18]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:21:20]  Improved gap from 0 to 68.75
[08/09 16:21:20]  Improved number of small numbers from 83 to 110 out of a max of 110
[08/09 16:21:20]  Verifer returned sat in 1.781287 secs.
[08/09 16:21:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4902.704834   -5076.133301  6273.812988 -4902.704834    0.040039 -5076.133301        0.0  173.428467      173.388672     6.0     -5076.133301            -1             -1
1   -4902.704834   -5076.093018  6273.812988 -4902.704834    0.040179 -5076.093018        0.0  173.388184       73.388672     2.0     -5076.133301         False           True
2   -4902.704834   -4971.454834  6300.424316 -4902.704834  134.375000 -4971.454834        0.0   68.750000        0.000000     3.0     -5076.133301         False          False
3   -4837.079834   -4902.704834  6331.674316 -4837.079834  134.375000 -4902.704834        0.0   65.625000       -3.125000     4.0     -5076.133301          True           True
4   -4699.142334   -4733.954834  6331.674316 -4699.142334  203.562500 -4733.954834        0.0   34.812500       34.812500     1.0     -4699.142334          True           True
5   -4562.885742   -4699.102295  6331.674316 -4562.885742  171.069092 -4699.102295        0.0  136.216553       71.069092     1.0     -4699.142334         False          False
6   -4562.885742   -4633.954834  6360.605225 -4562.885742  136.176270 -4633.954834        0.0   71.069092        0.000000     2.0     -4699.142334         False          False
7   -4499.579834   -4562.885742  6391.714355 -4499.579834  134.375000 -4562.885742        0.0   63.305908       -5.584961     3.0     -4699.142334         False          False
8   -4359.323242   -4493.994873  6391.714355 -4359.323242  203.562500 -4493.994873        0.0  134.671631       34.671631     1.0     -4359.323242          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:21]  --------------------------------------------------------------------------------
[08/09 16:21:21]  Iteration: 69 (0 solution, 68 counterexamples)
[08/09 16:21:25]  Generator returned sat in 2.675050 secs.
[08/09 16:21:25]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:21:26]  Improved gap from 0 to 71.875
[08/09 16:21:26]  Improved number of small numbers from 55 to 77 out of a max of 110
[08/09 16:21:26]  Verifer returned sat in 1.153011 secs.
[08/09 16:21:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3667.585449   -3867.582764  4827.947441 -3667.585449  296.245117 -3867.582764        0.0  199.997314       99.997510     9.0     -3867.582764            -1             -1
1   -3571.340332   -3667.583008  4827.947441 -3571.340332  296.242432 -3667.583008        0.0   96.242676       96.242627     1.0     -3571.340332         False           True
2   -3376.368164   -3571.337959  4827.947441 -3376.368164  291.214844 -3571.337959        0.0  194.969795      191.214795     1.0     -3376.368164         False          False
3   -3280.122959   -3567.582959  4827.947441 -3280.122959  291.215000 -3567.582959        0.0  287.460000      187.460000     2.0     -3376.368164         False          False
4   -3280.122959   -3376.370361  4827.947441 -3280.122959    0.010000 -3376.370361        0.0   96.247402       87.460000     3.0     -3376.368164         False           True
5   -3280.122959   -3351.998047  4840.487441 -3280.122959    0.010000 -3351.998047        0.0   71.875088        0.000000     3.0     -3376.368164         False           True
6   -3280.122959   -3280.122959  4868.612441 -3280.122959    0.010000 -3280.122959        0.0    0.000000      -71.875000     4.0     -3376.368164         False           True
7   -3136.372959   -3208.247959  4896.737441 -3136.372959  143.750000 -3208.247959        0.0   71.875000        0.000000     1.0     -3136.372959          True           True
8   -3136.372959   -3136.372959  4924.862305 -3136.372959    0.010000 -3136.372959        0.0    0.000000      -71.875137     2.0     -3136.372959         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:27]  --------------------------------------------------------------------------------
[08/09 16:21:27]  Iteration: 70 (0 solution, 69 counterexamples)
[08/09 16:21:30]  Generator returned sat in 0.920133 secs.
[08/09 16:21:30]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:21:30]  Improved gap from 0 to 71.875
[08/09 16:21:31]  Improved number of small numbers from 55 to 77 out of a max of 110
[08/09 16:21:31]  Verifer returned sat in 0.902145 secs.
[08/09 16:21:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3364.498047   -3655.727783  4616.092441 -3364.498047  291.230225 -3655.727783        0.0  291.229736      191.229912     5.0     -3655.727783            -1             -1
1   -3364.498047   -3455.728027  4616.092441 -3364.498047  291.227539 -3455.728027        0.0   91.229980       91.229912     2.0     -3364.498047         False           True
2   -3164.503174   -3359.482959  4616.092441 -3164.503174  291.224854 -3359.482959        0.0  194.979785      191.224785     1.0     -3164.503174         False           True
3   -3068.257959   -3355.727959  4616.092441 -3068.257959  291.225000 -3355.727959        0.0  287.470000      187.470000     2.0     -3164.503174         False          False
4   -3068.257959   -3164.505615  4616.092441 -3068.257959    0.010000 -3164.505615        0.0   96.247656       87.470000     3.0     -3164.503174         False           True
5   -3068.257959   -3140.133057  4628.622441 -3068.257959    0.010000 -3140.133057        0.0   71.875098        0.000000     3.0     -3164.503174         False           True
6   -3068.257959   -3068.257959  4656.747441 -3068.257959    0.010000 -3068.257959        0.0    0.000000      -71.875000     4.0     -3164.503174         False           True
7   -2924.507959   -2996.382959  4684.872441 -2924.507959  143.750000 -2996.382959        0.0   71.875000        0.000000     1.0     -2924.507959          True           True
8   -2924.507959   -2924.507959  4684.872559 -2924.507959    0.010000 -2924.507959        0.0    0.000000      -99.999883     2.0     -2924.507959         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:31]  --------------------------------------------------------------------------------
[08/09 16:21:31]  Iteration: 71 (0 solution, 70 counterexamples)
[08/09 16:21:37]  Generator returned sat in 3.916340 secs.
[08/09 16:21:37]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:21:37]  Improved gap from 187/8192 to 68.75
[08/09 16:21:38]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:21:38]  Verifer returned sat in 0.657118 secs.
[08/09 16:21:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4371.697510   -4631.765869  4597.372314 -4371.697510    0.045410 -4631.765869        0.0  260.068359      160.068359     3.0     -4631.765869            -1             -1
1   -4371.697510   -4431.765869  4597.372314 -4371.697510    0.022949 -4431.765869        0.0   60.068359       60.068359     3.0     -4371.697510         False          False
2   -4123.061768   -4371.720215  4597.372314 -4123.061768  308.704102 -4371.720215        0.0  248.658447      208.704102     3.0     -4371.697510         False          False
3   -4063.016113   -4331.765869  4597.372314 -4063.016113  308.704102 -4331.765869        0.0  268.749756      168.749756     2.0     -4371.697510         False          False
4   -4063.016113   -4131.789062  4597.372314 -4063.016113    0.500000 -4131.789062        0.0   68.772949       68.749756     3.0     -4371.697510         False          False
5   -4063.016113   -4131.765869  4628.622314 -4063.016113    0.500000 -4131.765869        0.0   68.749756       -0.000244     4.0     -4371.697510         False          False
6   -3891.811523   -3963.038818  4628.622314 -3891.811523  239.954346 -3963.038818        0.0   71.227295       71.204346     1.0     -3891.811523          True           True
7   -3891.811523   -3963.015869  4657.417969 -3891.811523    0.500000 -3963.015869        0.0   71.204346        0.000000     2.0     -3891.811523         False          False
8   -3891.811523   -3891.811523  4657.418213 -3891.811523    0.500000 -3891.811523        0.0    0.000000      -99.999756     3.0     -3891.811523         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:38]  --------------------------------------------------------------------------------
[08/09 16:21:38]  Iteration: 72 (0 solution, 71 counterexamples)
[08/09 16:21:44]  Generator returned sat in 4.393805 secs.
[08/09 16:21:44]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:21:45]  Improved gap from 2235/4096 to 73.4375
[08/09 16:21:45]  Improved number of small numbers from 74 to 110 out of a max of 110
[08/09 16:21:45]  Verifer returned sat in 0.524837 secs.
[08/09 16:21:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4442.795410   -4835.265137  4597.372559 -4442.795410  392.515381 -4835.265137        0.0  392.469727      392.469727     7.0     -4835.265137            -1             -1
1   -4442.795410   -4735.265137  4597.372559 -4442.795410  392.469482 -4735.265137        0.0  292.469727      292.469727     4.0     -4442.795410         False           True
2   -4342.795410   -4735.265137  4597.372559 -4342.795410  392.469727 -4735.265137        0.0  392.469727      292.469727     4.0     -4442.795410         False          False
3   -4342.795410   -4635.265137  4597.372559 -4342.795410  392.469727 -4635.265137        0.0  292.469727      192.469727     5.0     -4442.795410         False          False
4   -4342.795410   -4435.265137  4597.372559 -4342.795410    0.500000 -4435.265137        0.0   92.469727       92.469727     3.0     -4442.795410         False           True
5   -4342.795410   -4416.232910  4604.902832 -4342.795410    0.500000 -4416.232910        0.0   73.437500        0.000000     4.0     -4442.795410         False          False
6   -4342.795410   -4342.795410  4631.465332 -4342.795410    0.500000 -4342.795410        0.0    0.000000      -73.437500     5.0     -4442.795410         False          False
7   -4195.310547   -4269.357910  4657.417969 -4195.310547  147.484863 -4269.357910        0.0   74.047363        0.000000     1.0     -4195.310547          True           True
8   -4195.310547   -4195.310547  4657.418213 -4195.310547    0.500000 -4195.310547        0.0    0.000000      -99.999756     2.0     -4195.310547         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:45]  --------------------------------------------------------------------------------
[08/09 16:21:45]  Iteration: 73 (0 solution, 72 counterexamples)
[08/09 16:21:48]  Generator returned sat in 1.025339 secs.
[08/09 16:21:48]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:21:49]  Improved gap from 1175/16 to 73.4375
[08/09 16:21:49]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/09 16:21:49]  Verifer returned sat in 0.703934 secs.
[08/09 16:21:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4355.031250   -4770.821045  4594.152832 -4355.031250    0.045410 -4770.821045        0.0  415.789795      415.789551     3.0     -4770.821045            -1             -1
1   -4355.031250   -4670.820801  4594.152832 -4355.031250    0.022705 -4670.820801        0.0  315.789551      315.789551     3.0     -4355.031250         False          False
2   -4281.570801   -4670.820801  4594.152832 -4281.570801  389.250000 -4670.820801        0.0  389.250000      289.250000     3.0     -4355.031250         False          False
3   -4281.570801   -4570.820801  4594.152832 -4281.570801  389.250000 -4570.820801        0.0  289.250000      189.250000     4.0     -4355.031250         False          False
4   -4281.570801   -4370.821045  4594.152832 -4281.570801    0.500000 -4370.821045        0.0   89.250244       89.250000     5.0     -4355.031250         False          False
5   -4281.570801   -4355.008301  4604.902832 -4281.570801    0.500000 -4355.008301        0.0   73.437500        0.000000     4.0     -4355.031250         False           True
6   -4281.570801   -4281.570801  4631.465332 -4281.570801    0.500000 -4281.570801        0.0    0.000000      -73.437500     5.0     -4355.031250         False          False
7   -4134.695801   -4208.133301  4658.027832 -4134.695801  146.875000 -4208.133301        0.0   73.437500        0.000000     1.0     -4134.695801          True           True
8   -4134.695801   -4134.695801  4658.027832 -4134.695801    0.500000 -4134.695801        0.0    0.000000     -100.000000     2.0     -4134.695801         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:50]  --------------------------------------------------------------------------------
[08/09 16:21:50]  Iteration: 74 (0 solution, 73 counterexamples)
[08/09 16:21:53]  Generator returned sat in 1.638051 secs.
[08/09 16:21:53]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:21:54]  Improved gap from 1167/16 to 73.4375
[08/09 16:21:54]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:21:54]  Verifer returned sat in 0.682290 secs.
[08/09 16:21:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3831.233154   -4248.045654  5038.527832 -3831.233154  390.295410 -4248.045654        0.0  416.8125      416.812500     6.0     -4248.045654            -1             -1
1   -3831.233154   -4148.045654  5038.527832 -3831.233154  390.249756 -4148.045654        0.0  316.8125      316.812500     3.0     -3831.233154         False           True
2   -3757.795654   -4148.045654  5038.527832 -3757.795654  390.250000 -4148.045654        0.0  390.2500      290.250000     3.0     -3831.233154         False          False
3   -3757.795654   -4048.045654  5038.527832 -3757.795654  390.250000 -4048.045654        0.0  290.2500      190.250000     4.0     -3831.233154         False          False
4   -3757.795654   -3848.045654  5038.527832 -3757.795654    0.500000 -3848.045654        0.0   90.2500       90.250000     5.0     -3831.233154         False          False
5   -3757.795654   -3831.233154  5048.277832 -3757.795654    0.500000 -3831.233154        0.0   73.4375        0.000000     6.0     -3831.233154         False           True
6   -3757.795654   -3757.795654  5074.840332 -3757.795654    0.500000 -3757.795654        0.0    0.0000      -73.437500     5.0     -3831.233154         False           True
7   -3610.920654   -3684.358154  5101.402832 -3610.920654  146.875000 -3684.358154        0.0   73.4375        0.000000     1.0     -3610.920654          True           True
8   -3610.920654   -3610.920654  5127.965088 -3610.920654    0.500000 -3610.920654        0.0    0.0000      -73.437744     2.0     -3610.920654         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:21:54]  --------------------------------------------------------------------------------
[08/09 16:21:54]  Iteration: 75 (0 solution, 74 counterexamples)
[08/09 16:21:58]  Generator returned sat in 2.047548 secs.
[08/09 16:21:58]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:21:59]  Improved gap from 1175/16 to 73.4375
[08/09 16:21:59]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:21:59]  Verifer returned sat in 0.666128 secs.
[08/09 16:21:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4680.429688   -5080.384277  4810.43457 -4680.429688  388.295166 -5080.384277        0.0  399.95459       399.95459     8.0     -5080.384277            -1             -1
1   -4680.429688   -4980.384277  4810.43457 -4680.429688  388.250000 -4980.384277        0.0  299.95459       299.95459     3.0     -4680.429688         False           True
2   -4592.134277   -4980.384277  4810.43457 -4592.134277  388.250000 -4980.384277        0.0  388.25000       288.25000     3.0     -4680.429688         False          False
3   -4592.134277   -4880.384277  4810.43457 -4592.134277  388.250000 -4880.384277        0.0  288.25000       188.25000     4.0     -4680.429688         False          False
4   -4592.134277   -4680.384277  4810.43457 -4592.134277    0.500000 -4680.384277        0.0   88.25000        88.25000     3.0     -4680.429688         False          False
5   -4592.134277   -4665.571777  4822.18457 -4592.134277    0.500000 -4665.571777        0.0   73.43750         0.00000     4.0     -4680.429688         False          False
6   -4592.134277   -4592.134277  4848.74707 -4592.134277    0.500000 -4592.134277        0.0    0.00000       -73.43750     5.0     -4680.429688         False          False
7   -4445.259277   -4518.696777  4875.30957 -4445.259277  146.875000 -4518.696777        0.0   73.43750         0.00000     1.0     -4445.259277          True           True
8   -4445.259277   -4445.259277  4875.30957 -4445.259277    0.500000 -4445.259277        0.0    0.00000      -100.00000     2.0     -4445.259277         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:00]  --------------------------------------------------------------------------------
[08/09 16:22:00]  Iteration: 76 (0 solution, 75 counterexamples)
[08/09 16:22:03]  Generator returned sat in 1.141756 secs.
[08/09 16:22:03]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:22:03]  Improved gap from 11171/4096 to 73.4375
[08/09 16:22:04]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:22:04]  Verifer returned sat in 0.605626 secs.
[08/09 16:22:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4669.725098   -4969.861328  4679.05957 -4669.725098    0.04541 -4969.861328        0.0  300.13623       204.78418     5.0     -4969.861328            -1             -1
1   -4669.725098   -4774.509277  4679.05957 -4669.725098  300.09082 -4774.509277        0.0  104.78418       104.78418     2.0     -4969.861328         False           True
2   -4474.463867   -4681.475098  4679.05957 -4474.463867  300.04541 -4681.475098        0.0  207.01123       200.04541     3.0     -4474.463867          True           True
3   -4381.429688   -4669.679688  4679.05957 -4381.429688  300.04541 -4669.679688        0.0  288.25000       193.07959     2.0     -4474.463867         False           True
4   -4381.429688   -4474.509277  4679.05957 -4381.429688    0.50000 -4474.509277        0.0   93.07959        93.07959     3.0     -4474.463867         False           True
5   -4381.429688   -4454.867188  4685.97998 -4381.429688    0.50000 -4454.867188        0.0   73.43750         0.00000     3.0     -4474.463867         False           True
6   -4381.429688   -4381.429688  4712.54248 -4381.429688    0.50000 -4381.429688        0.0    0.00000       -73.43750     4.0     -4474.463867         False           True
7   -4234.554688   -4307.992188  4739.10498 -4234.554688  146.87500 -4307.992188        0.0   73.43750         0.00000     1.0     -4234.554688          True           True
8   -4234.554688   -4234.554688  4739.10498 -4234.554688    0.50000 -4234.554688        0.0    0.00000      -100.00000     2.0     -4234.554688         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:04]  --------------------------------------------------------------------------------
[08/09 16:22:04]  Iteration: 77 (0 solution, 76 counterexamples)
[08/09 16:22:07]  Generator returned sat in 1.190570 secs.
[08/09 16:22:07]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:22:08]  Improved gap from 1175/16 to 73.4375
[08/09 16:22:08]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:22:08]  Verifer returned sat in 0.641920 secs.
[08/09 16:22:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -4367.429932   -4672.759277  4679.082275 -4367.429932  305.352539 -4672.759277        0.0  305.329346      205.329590     4.0     -4672.759277            -1             -1
1   -4367.429688   -4472.759521  4679.082275 -4367.429688  305.329590 -4472.759521        0.0  105.329834      105.329834     2.0     -4367.429688         False           True
2   -4167.452393   -4428.714111  4679.082275 -4167.452393  305.307129 -4428.714111        0.0  261.261719      205.307129     3.0     -4167.452393         False          False
3   -4079.657227   -4367.407227  4679.082275 -4079.657227  349.056885 -4367.407227        0.0  287.750000      193.102295     2.0     -4167.452393         False           True
4   -4079.657227   -4172.759521  4679.082275 -4079.657227    0.500000 -4172.759521        0.0   93.102295       93.102295     3.0     -4167.452393         False          False
5   -4079.657227   -4153.094727  4685.979980 -4079.657227    0.500000 -4153.094727        0.0   73.437500        0.000000     3.0     -4167.452393         False           True
6   -4079.657227   -4079.657227  4712.542480 -4079.657227    0.500000 -4079.657227        0.0    0.000000      -73.437500     4.0     -4167.452393         False           True
7   -3932.782227   -4006.219727  4739.104980 -3932.782227  146.875000 -4006.219727        0.0   73.437500        0.000000     1.0     -3932.782227          True           True
8   -3932.782227   -3932.782227  4739.104980 -3932.782227    0.500000 -3932.782227        0.0    0.000000     -100.000000     2.0     -3932.782227         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:08]  --------------------------------------------------------------------------------
[08/09 16:22:08]  Iteration: 78 (0 solution, 77 counterexamples)
[08/09 16:22:15]  Generator returned sat in 4.110795 secs.
[08/09 16:22:15]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:22:17]  Improved gap from 185/8192 to 42.1875
[08/09 16:22:17]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:22:17]  Verifer returned sat in 2.465104 secs.
[08/09 16:22:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -500.887451   -1015.432373  4679.082031  -500.887451  312.499756 -1015.432373        0.0  514.544922      514.544922     5.0     -1015.432373            -1             -1
1    -500.887451    -915.477539  4679.082031  -500.887451  312.500000  -915.477539        0.0  414.590088      414.544922     5.0     -1015.432373         False           True
2    -500.887451    -915.432373  4679.082031  -500.887451  312.500000  -915.432373        0.0  414.544922      314.544922     5.0     -1015.432373          True           True
3    -500.887451    -815.432373  4679.082031  -500.887451  312.500000  -815.432373        0.0  314.544922      214.544922     6.0     -1015.432373          True           True
4    -500.887451    -615.432373  4679.082031  -500.887451  314.500000  -615.432373        0.0  114.544922      114.544922     6.0      -500.887451          True           True
5    -457.682373    -537.057617  4679.082031  -457.682373  157.750000  -537.057617        0.0   79.375244       57.750000     6.0      -500.887451         False           True
6    -457.682373    -499.870117  4721.332031  -457.682373   79.375000  -499.870117        0.0   42.187744        0.000000     2.0      -500.887451         False           True
7    -457.682373    -457.682373  4779.144531  -457.682373   40.187500  -457.682373        0.0    0.000000      -42.187500     3.0      -500.887451         False          False
8    -415.494873    -415.494873  4779.144775  -415.494873   42.187500  -415.494873        0.0    0.000000      -99.999756     1.0      -415.494873          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:18]  --------------------------------------------------------------------------------
[08/09 16:22:18]  Iteration: 79 (0 solution, 78 counterexamples)
[08/09 16:22:22]  Generator returned sat in 2.531375 secs.
[08/09 16:22:22]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:22:25]  Improved gap from 814329/65536 to 79.6875
[08/09 16:22:25]  Improved number of small numbers from 66 to 106 out of a max of 110
[08/09 16:22:25]  Verifer returned sat in 2.866156 secs.
[08/09 16:22:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2016.424805    1816.469971  4679.082031  2016.424805  199.999756  1816.469971        0.0  199.954834      199.954834     9.0      1816.469971            -1             -1
1    2016.469971    1916.469971  4679.082031  2016.469971  200.000000  1916.469971        0.0  100.000000      100.000000     2.0      1816.469971         False           True
2    2016.469971    1980.407471  4679.082031  2016.469971    0.045166  1980.407471        0.0   36.062500        0.000000     3.0      2016.469971         False          False
3    2296.157471    2020.056396  4679.082031  2296.157471  315.750000  2020.056396        0.0  276.101074      179.687500     1.0      2016.469971         False          False
4    2296.157471    2216.425049  4679.082031  2296.157471  158.375000  2216.425049        0.0   79.732422       79.687500     2.0      2016.469971         False          False
5    2296.157471    2216.469971  4699.394531  2296.157471   79.687500  2216.469971        0.0   79.687500        0.000000     3.0      2016.469971         False          False
6    2296.157471    2296.157471  4719.707031  2296.157471   40.343750  2296.157471        0.0    0.000000      -79.687500     4.0      2016.469971         False          False
7    2456.379883    2375.845093  4739.171875  2456.379883  160.222412  2375.845093        0.0   80.534790       -0.000244     1.0      2456.379883          True           True
8    2456.456299    2456.380127  4739.172119  2456.456299   80.611206  2456.380127        0.0    0.076172      -99.923584     1.0      2456.379883         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:26]  --------------------------------------------------------------------------------
[08/09 16:22:26]  Iteration: 80 (0 solution, 79 counterexamples)
[08/09 16:22:29]  Generator returned sat in 1.627544 secs.
[08/09 16:22:30]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:22:32]  Improved gap from 369/8192 to 60.9375
[08/09 16:22:33]  Improved number of small numbers from 59 to 90 out of a max of 110
[08/09 16:22:33]  Verifer returned sat in 3.756698 secs.
[08/09 16:22:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3101.230469    2593.852051  4699.394531  3101.230469    0.045166  2593.852051        0.0  507.378418      507.378210     3.0      2593.852051            -1             -1
1    3101.230469    2593.852295  4699.394531  3101.230469  203.555420  2593.852295        0.0  507.378174      407.378210     2.0      2593.852051         False           True
2    3101.230469    2793.807129  4699.394531  3101.230469  203.555420  2793.807129        0.0  307.423340      307.378210     3.0      2593.852051          True           True
3    3101.230469    2793.852295  4699.394531  3101.230469  203.555556  2793.852295        0.0  307.378174      207.378210     4.0      2593.852051          True           True
4    3101.230469    2993.852258  4699.394531  3101.230469  307.333333  2993.852258        0.0  107.378210      107.378210     5.0      3101.230469          True           True
5    3148.018925    3084.629846  4699.394531  3148.018925  154.166667  3084.629846        0.0   63.389079       54.166667     6.0      3101.230469         False           True
6    3162.213180    3101.275635  4731.033610  3162.213180   77.583333  3101.275635        0.0   60.937545        0.000000     2.0      3101.230469         False           True
7    3162.213180    3162.213180  4770.096110  3162.213180   39.291667  3162.213180        0.0    0.000000      -60.937500     2.0      3101.230469         False           True
8    3223.150680    3223.150680  4770.096191  3223.150680   60.937500  3223.150680        0.0    0.000000      -99.999919     1.0      3223.150680          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:34]  --------------------------------------------------------------------------------
[08/09 16:22:34]  Iteration: 81 (0 solution, 80 counterexamples)
[08/09 16:22:39]  Generator returned sat in 3.028242 secs.
[08/09 16:22:39]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:22:41]  Improved gap from 119144405/2359296 to 68.75
[08/09 16:22:41]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:22:41]  Verifer returned sat in 2.327677 secs.
[08/09 16:22:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    3189.791504    2954.679199  4338.567627  3189.791504    0.022461  2954.679199        0.0  235.112305      235.112305     1.0      2954.679199            -1             -1
1    3189.791504    3054.656738  4338.567627  3189.791504    0.022461  3054.656738        0.0  135.134766      135.112305     2.0      2954.679199         False          False
2    3189.791504    3054.679199  4338.567627  3189.791504  135.089844  3054.679199        0.0  135.112305       35.112305     3.0      2954.679199          True           True
3    3189.791504    3182.521973  4338.567627  3189.791504  135.089844  3182.521973        0.0    7.269531      -64.887695     4.0      2954.679199          True           True
4    3454.701660    3354.678955  4338.567627  3454.701660  272.179688  3354.678955        0.0  100.022705      100.022461     1.0      3454.701660          True           True
5    3491.268799    3454.679199  4338.567627  3491.268799  136.589844  3454.679199        0.0   36.589600       36.589600     2.0      3454.701660         False          False
6    3523.474121    3454.724121  4369.772705  3523.474121   68.794922  3454.724121        0.0   68.750000        0.000000     2.0      3454.701660         False           True
7    3523.474121    3523.474121  4401.022705  3523.474121   34.897461  3523.474121        0.0    0.000000      -68.750000     2.0      3454.701660         False           True
8    3595.269043    3592.224121  4401.022705  3595.269043   71.794922  3592.224121        0.0    3.044922      -96.955078     1.0      3595.269043          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:42]  --------------------------------------------------------------------------------
[08/09 16:22:42]  Iteration: 82 (0 solution, 81 counterexamples)
[08/09 16:22:50]  Generator returned sat in 5.879677 secs.
[08/09 16:22:50]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:22:51]  Improved gap from 23/512 to 79.6875
[08/09 16:22:51]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:22:51]  Verifer returned sat in 1.404175 secs.
[08/09 16:22:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2330.932129    2031.645020  4417.092041  2330.932129  299.287109  2031.645020        0.0  299.287109      199.287109     8.0      2031.645020            -1             -1
1    2330.932129    2231.645020  4417.092041  2330.932129  299.242188  2231.645020        0.0   99.287109       99.287109     8.0      2330.932129         False           True
2    2530.842285    2304.322754  4417.092041  2530.842285  299.197266  2304.322754        0.0  226.519531      199.197266     3.0      2530.842285         False           True
3    2611.332520    2370.334961  4417.092041  2611.332520  307.009766  2370.334961        0.0  240.997559      179.687500     2.0      2530.842285         False          False
4    2611.332520    2530.797363  4417.092041  2611.332520  153.504883  2530.797363        0.0   80.535156       79.687500     3.0      2530.842285         False          False
5    2611.332520    2531.645020  4437.404541  2611.332520   76.752441  2531.645020        0.0   79.687500        0.000000     3.0      2530.842285         False          False
6    2611.332520    2611.332520  4457.717041  2611.332520   38.376221  2611.332520        0.0    0.000000      -79.687500     4.0      2530.842285         False          False
7    2770.707520    2691.064941  4477.984619  2770.707520  159.375000  2691.064941        0.0   79.642578       -0.044922     1.0      2770.707520          True           True
8    2770.752441    2770.752441  4498.297119  2770.752441   79.687500  2770.752441        0.0    0.000000      -79.687500     1.0      2770.707520         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:52]  --------------------------------------------------------------------------------
[08/09 16:22:52]  Iteration: 83 (0 solution, 82 counterexamples)
[08/09 16:22:57]  Generator returned sat in 3.238018 secs.
[08/09 16:22:57]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:22:58]  Improved gap from 0 to 73.4375
[08/09 16:22:58]  Improved number of small numbers from 60 to 78 out of a max of 110
[08/09 16:22:58]  Verifer returned sat in 0.893234 secs.
[08/09 16:22:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1536.722412    1140.102051  4391.172119  1536.722412  389.742676  1140.102051        0.0  396.620361      396.620137     3.0      1140.102051            -1             -1
1    1536.722412    1240.102275  4391.172119  1536.722412  389.739990  1240.102275        0.0  296.620137      296.620137     3.0      1536.722412         False          False
2    1629.842275    1240.102275  4391.172119  1629.842275  389.740000  1240.102275        0.0  389.740000      289.740000     3.0      1536.722412         False          False
3    1629.842275    1340.102275  4391.172119  1629.842275  389.740000  1340.102275        0.0  289.740000      189.740000     4.0      1536.722412         False          False
4    1629.842275    1536.719727  4391.172119  1629.842275    0.010000  1536.719727        0.0   93.122549       89.740000     5.0      1536.722412         False          False
5    1629.842275    1556.404541  4401.432119  1629.842275    0.010000  1556.404541        0.0   73.437734        0.000000     4.0      1536.722412         False           True
6    1629.842275    1629.842275  4427.994619  1629.842275    0.010000  1629.842275        0.0    0.000000      -73.437500     5.0      1536.722412         False          False
7    1776.717275    1703.279775  4454.557119  1776.717275  146.875000  1703.279775        0.0   73.437500        0.000000     1.0      1776.717275          True           True
8    1776.717275    1776.717275  4454.557129  1776.717275    0.010000  1776.717275        0.0    0.000000      -99.999990     2.0      1776.717275         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:22:59]  --------------------------------------------------------------------------------
[08/09 16:22:59]  Iteration: 84 (0 solution, 83 counterexamples)
[08/09 16:23:03]  Generator returned sat in 1.750007 secs.
[08/09 16:23:03]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:03]  Improved gap from 1175/16 to 73.4375
[08/09 16:23:04]  Improved number of small numbers from 55 to 82 out of a max of 110
[08/09 16:23:04]  Verifer returned sat in 1.235113 secs.
[08/09 16:23:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1449.557129    1050.182373  4354.544678  1449.557129  399.374756  1050.182373        0.0  399.374756      299.374902     4.0      1050.182373            -1             -1
1    1449.557129    1157.062256  4354.544678  1449.557129  399.374756  1157.062256        0.0  292.494873      199.374902     4.0      1050.182373         False           True
2    1550.184570    1250.182275  4354.544678  1550.184570  393.122314  1250.182275        0.0  300.002295      200.002344     4.0      1550.184570          True           True
3    1643.304775    1353.584775  4354.544678  1643.304775  393.122500  1353.584775        0.0  289.720000      193.122549     4.0      1550.184570         False           True
4    1643.304775    1550.182129  4354.544678  1643.304775    0.010000  1550.182129        0.0   93.122646       93.122549     3.0      1550.184570         False           True
5    1643.304775    1569.867188  4361.422129  1643.304775    0.010000  1569.867188        0.0   73.437588        0.000000     3.0      1550.184570         False           True
6    1643.304775    1643.304775  4387.984629  1643.304775    0.010000  1643.304775        0.0    0.000000      -73.437500     4.0      1550.184570         False           True
7    1790.179775    1716.742275  4414.547129  1790.179775  146.875000  1716.742275        0.0   73.437500        0.000000     1.0      1790.179775          True           True
8    1790.179775    1790.179775  4414.547363  1790.179775    0.010000  1790.179775        0.0    0.000000      -99.999766     2.0      1790.179775         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:05]  --------------------------------------------------------------------------------
[08/09 16:23:05]  Iteration: 85 (0 solution, 84 counterexamples)
[08/09 16:23:09]  Generator returned sat in 1.761000 secs.
[08/09 16:23:09]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:09]  Improved gap from 1175/16 to 73.4375
[08/09 16:23:10]  Improved number of small numbers from 62 to 84 out of a max of 110
[08/09 16:23:10]  Verifer returned sat in 1.194155 secs.
[08/09 16:23:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     968.922363     568.919678  4212.369629   968.922363    0.002686   568.919678        0.0  400.002686      400.002588     7.0       568.919678            -1             -1
1     968.922363     568.919922  4212.369629   968.922363  393.122559   568.919922        0.0  400.002441      300.002588     7.0       568.919678         False           True
2     968.922363     668.919775  4212.369629   968.922363  393.120117   668.919775        0.0  300.002588      200.002588     8.0       968.922363          True           True
3    1062.042275     772.332275  4212.369629  1062.042275  393.122500   772.332275        0.0  289.710000      193.122500     4.0       968.922363         False           True
4    1062.042275     968.919678  4212.369629  1062.042275    0.010000   968.919678        0.0   93.122598       93.122500     5.0       968.922363         False           True
5    1062.042275     988.604736  4219.247129  1062.042275    0.010000   988.604736        0.0   73.437539        0.000000     3.0       968.922363         False           True
6    1062.042275    1062.042275  4245.809629  1062.042275    0.010000  1062.042275        0.0    0.000000      -73.437500     4.0       968.922363         False           True
7    1208.917275    1135.479775  4272.372129  1208.917275  146.875000  1135.479775        0.0   73.437500        0.000000     1.0      1208.917275          True           True
8    1208.917275    1208.917275  4272.372314  1208.917275    0.010000  1208.917275        0.0    0.000000      -99.999814     2.0      1208.917275         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:11]  --------------------------------------------------------------------------------
[08/09 16:23:11]  Iteration: 86 (0 solution, 85 counterexamples)
[08/09 16:23:15]  Generator returned sat in 2.055658 secs.
[08/09 16:23:15]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:15]  Improved gap from 1/1200 to 73.4375
[08/09 16:23:16]  Improved number of small numbers from 55 to 68 out of a max of 110
[08/09 16:23:16]  Verifer returned sat in 0.786803 secs.
[08/09 16:23:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -127.665283    -127.665283  4113.002129  -127.665283  296.615234  -127.665283        0.0    0.000000      -99.999902     1.0      -127.665283            -1             -1
1     168.947021      72.334619  4113.002129   168.947021  296.612305    72.334619        0.0   96.612402       96.612402     1.0       168.947021         False          False
2     368.944619     165.454619  4113.002129   368.944619  296.610000   165.454619        0.0  203.490000      196.610000     2.0       368.944619         False          False
3     462.064619     172.334619  4113.002129   462.064619  296.610000   172.334619        0.0  289.730000      189.730000     2.0       368.944619         False           True
4     462.064619     368.942139  4113.002129   462.064619    0.010000   368.942139        0.0   93.122480       89.730000     3.0       368.944619         False           True
5     462.064619     388.626953  4123.272129   462.064619    0.010000   388.626953        0.0   73.437666        0.000000     3.0       368.944619         False           True
6     462.064619     462.064619  4149.834629   462.064619    0.010000   462.064619        0.0    0.000000      -73.437500     4.0       368.944619         False           True
7     608.939619     535.502119  4176.397129   608.939619  146.875000   535.502119        0.0   73.437500        0.000000     1.0       608.939619          True           True
8     608.939619     608.939619  4202.959473   608.939619    0.010000   608.939619        0.0    0.000000      -73.437656     2.0       608.939619         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:16]  --------------------------------------------------------------------------------
[08/09 16:23:16]  Iteration: 87 (0 solution, 86 counterexamples)
[08/09 16:23:30]  Generator returned sat in 10.965007 secs.
[08/09 16:23:30]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:30]  Improved gap from 1/400 to 71.875
[08/09 16:23:31]  Improved number of small numbers from 55 to 73 out of a max of 110
[08/09 16:23:31]  Verifer returned sat in 1.108351 secs.
[08/09 16:23:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     997.383301     697.385986  3287.950879   997.383301  300.000000   697.385986        0.0  299.997314      199.997432     4.0       697.385986            -1             -1
1     997.383545     897.385869  3287.950879   997.383545  299.997559   897.385869        0.0   99.997676       99.997676     4.0       997.383545         False          False
2    1284.855869     897.385869  3287.950879  1284.855869  387.470000   897.385869        0.0  387.470000      287.470000     4.0       997.383545         False          False
3    1284.855869     997.385869  3287.950879  1284.855869  387.470000   997.385869        0.0  287.470000      187.470000     2.0       997.383545         False          False
4    1284.855869    1197.385742  3287.950879  1284.855869    0.010000  1197.385742        0.0   87.470127       87.470000     3.0       997.383545         False          False
5    1284.855869    1212.980713  3300.480879  1284.855869    0.010000  1212.980713        0.0   71.875156        0.000000     4.0       997.383545         False          False
6    1284.855869    1284.855869  3328.605879  1284.855869    0.010000  1284.855869        0.0    0.000000      -71.875000     5.0       997.383545         False          False
7    1428.605869    1356.730869  3356.730879  1428.605869  143.750000  1356.730869        0.0   71.875000        0.000000     1.0      1428.605869          True           True
8    1428.605869    1428.605869  3356.730957  1428.605869    0.010000  1428.605869        0.0    0.000000      -99.999922     2.0      1428.605869         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:31]  --------------------------------------------------------------------------------
[08/09 16:23:31]  Iteration: 88 (0 solution, 87 counterexamples)
[08/09 16:23:35]  Generator returned sat in 1.767474 secs.
[08/09 16:23:36]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:36]  Improved gap from 7187/100 to 71.875
[08/09 16:23:37]  Improved number of small numbers from 55 to 73 out of a max of 110
[08/09 16:23:37]  Verifer returned sat in 0.981990 secs.
[08/09 16:23:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1047.375732     656.143066  3429.193447  1047.375732  387.482666   656.143066        0.0  391.232666      391.232432     9.0       656.143066            -1             -1
1    1047.375732     756.143301  3429.193447  1047.375732  387.480000   756.143301        0.0  291.232432      291.232432     3.0      1047.375732         False           True
2    1143.623301     756.143301  3429.193447  1143.623301  387.480000   756.143301        0.0  387.480000      287.480000     3.0      1047.375732         False          False
3    1143.623301     856.143301  3429.193447  1143.623301  387.480000   856.143301        0.0  287.480000      187.480000     4.0      1047.375732         False          False
4    1143.623301    1047.375977  3429.193447  1143.623301    0.010000  1047.375977        0.0   96.247324       87.480000     3.0      1047.375732         False          False
5    1143.623301    1071.748291  3441.713447  1143.623301    0.010000  1071.748291        0.0   71.875010        0.000000     4.0      1047.375732         False          False
6    1143.623301    1143.623301  3469.838447  1143.623301    0.010000  1143.623301        0.0    0.000000      -71.875000     5.0      1047.375732         False          False
7    1287.373301    1215.498301  3497.963447  1287.373301  143.750000  1215.498301        0.0   71.875000        0.000000     1.0      1287.373301          True           True
8    1287.373301    1287.373301  3526.088379  1287.373301    0.010000  1287.373301        0.0    0.000000      -71.875068     2.0      1287.373301         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:37]  --------------------------------------------------------------------------------
[08/09 16:23:37]  Iteration: 89 (0 solution, 88 counterexamples)
[08/09 16:23:41]  Generator returned sat in 1.610451 secs.
[08/09 16:23:41]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:42]  Improved gap from 2/175 to 71.875
[08/09 16:23:42]  Improved number of small numbers from 55 to 73 out of a max of 110
[08/09 16:23:42]  Verifer returned sat in 0.894464 secs.
[08/09 16:23:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1144.263428     728.680664  3356.655947  1144.263428  387.462646   728.680664        0.0  415.582764      415.582627     7.0       728.680664            -1             -1
1    1144.263428     828.680801  3356.655947  1144.263428  387.459961   828.680801        0.0  315.582627      315.582627     3.0      1144.263428         False           True
2    1216.140801     828.680801  3356.655947  1216.140801  387.460000   828.680801        0.0  387.460000      287.460000     3.0      1144.263428         False          False
3    1216.140801     928.680801  3356.655947  1216.140801  387.460000   928.680801        0.0  287.460000      187.460000     4.0      1144.263428         False          False
4    1216.140801    1119.893066  3356.655947  1216.140801    0.010000  1119.893066        0.0   96.247734       87.460000     5.0      1144.263428         False          False
5    1216.140801    1144.265625  3369.195947  1216.140801    0.010000  1144.265625        0.0   71.875176        0.000000     4.0      1144.263428         False           True
6    1216.140801    1216.140801  3397.320947  1216.140801    0.010000  1216.140801        0.0    0.000000      -71.875000     5.0      1144.263428         False          False
7    1359.890801    1288.015801  3425.445947  1359.890801  143.750000  1288.015801        0.0   71.875000        0.000000     1.0      1359.890801          True           True
8    1359.890801    1359.890801  3453.570801  1359.890801    0.010000  1359.890801        0.0    0.000000      -71.875146     2.0      1359.890801         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:43]  --------------------------------------------------------------------------------
[08/09 16:23:43]  Iteration: 90 (0 solution, 89 counterexamples)
[08/09 16:23:51]  Generator returned sat in 5.949950 secs.
[08/09 16:23:51]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:23:52]  Improved gap from 0 to 79.6875
[08/09 16:23:53]  Improved number of small numbers from 49 to 108 out of a max of 110
[08/09 16:23:53]  Verifer returned sat in 1.808139 secs.
[08/09 16:23:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     416.809570     316.854248  3356.656006   416.809570  399.286621   316.854248        0.0   99.955322       99.955322     3.0       316.854248            -1             -1
1     716.095947     416.854248  3356.656006   716.095947  399.241699   416.854248        0.0  299.241699      299.241699     1.0       716.095947         False          False
2     716.095947     474.758545  3356.656006   716.095947  299.196777   474.758545        0.0  241.337402      199.241699     2.0       716.095947         False          False
3     796.541748     517.835449  3356.656006   796.541748  321.783203   517.835449        0.0  278.706299      179.687500     3.0       716.095947         False          False
4     796.541748     716.051270  3356.656006   796.541748  160.891602   716.051270        0.0   80.490479       79.687500     4.0       716.095947         False          False
5     796.541748     716.854248  3376.968506   796.541748   80.445801   716.854248        0.0   79.687500        0.000000     3.0       716.095947         False           True
6     796.541748     796.541748  3397.280762   796.541748   40.222900   796.541748        0.0    0.000000      -79.687744     4.0       716.095947         False          False
7     956.006348     876.229492  3417.503906   956.006348  159.464600   876.229492        0.0   79.776855        0.000000     1.0       956.006348          True           True
8     956.006348     956.006348  3417.503906   956.006348   79.732300   956.006348        0.0    0.000000     -100.000000     2.0       956.006348         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:23:54]  --------------------------------------------------------------------------------
[08/09 16:23:54]  Iteration: 91 (0 solution, 90 counterexamples)
[08/09 16:23:58]  Generator returned sat in 2.007897 secs.
[08/09 16:23:58]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:00]  Improved gap from 0 to 68.75
[08/09 16:24:01]  Improved number of small numbers from 55 to 72 out of a max of 110
[08/09 16:24:01]  Verifer returned sat in 2.792622 secs.
[08/09 16:24:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0     -39.709717    -239.709473  3813.219971   -39.709717    0.020752  -239.709473        0.0  199.999756      100.000005     4.0      -239.709473            -1             -1
1     -39.709717     -39.730490  3813.219971   -39.709717    0.020833   -39.730490        0.0    0.020773        0.000005     3.0      -239.709473         False           True
2      29.040343     -39.709657  3844.469906    29.040343   68.770833   -39.709657        0.0   68.750000        0.000000     1.0      -239.709473          True           True
3      50.984788      29.040343  3875.719906    50.984788   90.694444    29.040343        0.0   21.944444      -46.805556     2.0      -239.709473         False          False
4     165.082010     165.061177  3875.719906   165.082010  136.041667   165.061177        0.0    0.020833      -32.708333     1.0       165.082010          True           True
5     267.457010     197.790343  3905.969971   267.457010  102.395833   197.790343        0.0   69.666667       -0.083268     1.0       165.082010         False          False
6     316.540343     267.540343  3937.219906   316.540343  118.750000   267.540343        0.0   49.000000      -19.750000     1.0       165.082010         False          False
7     386.790343     336.290343  3968.469727   386.790343  119.250000   336.290343        0.0   50.500000      -18.250179     1.0       165.082010         False          False
8     421.904927     405.040527  3968.469727   421.904927   85.614583   405.040527        0.0   16.864399      -83.135596     1.0       165.082010         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:01]  --------------------------------------------------------------------------------
[08/09 16:24:01]  Iteration: 92 (0 solution, 91 counterexamples)
[08/09 16:24:08]  Generator returned sat in 3.898575 secs.
[08/09 16:24:08]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:10]  Improved gap from 1/1000 to 39.0625
[08/09 16:24:10]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/09 16:24:10]  Verifer returned sat in 1.953833 secs.
[08/09 16:24:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1081.507324     981.462646  3907.532227  1081.507324  100.088867   981.462646        0.0  100.044678      100.044678     9.0       981.462646            -1             -1
1    1081.507324    1042.400146  3907.532227  1081.507324  100.044434  1042.400146        0.0   39.107178        0.044678     7.0      1081.507324         False           True
2    1481.418213    1081.462891  3907.532227  1481.418213  439.018066  1081.462891        0.0  399.955322      299.955566     3.0      1081.507324         False           True
3    1559.587891    1181.462891  3907.532227  1559.587891  478.125000  1181.462891        0.0  378.125000      278.125244     2.0      1081.507324         False           True
4    1559.587891    1381.462646  3907.532227  1559.587891  239.062500  1381.462646        0.0  178.125244      178.125244     3.0      1081.507324         False          False
5    1620.525146    1481.462646  3907.532227  1620.525146  239.062500  1481.462646        0.0  139.062500      139.062500     3.0      1620.525146          True           True
6    1620.525146    1560.715332  3907.532227  1620.525146  119.531250  1560.715332        0.0   59.809814       39.062500     2.0      1620.525146         False           True
7    1620.525146    1581.462646  3968.469727  1620.525146   59.765625  1581.462646        0.0   39.062500        0.000000     3.0      1620.525146         False          False
8    1620.525146    1620.525146  3968.469727  1620.525146   29.882812  1620.525146        0.0    0.000000     -100.000000     4.0      1620.525146         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:10]  --------------------------------------------------------------------------------
[08/09 16:24:10]  Iteration: 93 (0 solution, 92 counterexamples)
[08/09 16:24:16]  Generator returned sat in 3.351443 secs.
[08/09 16:24:16]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:18]  Improved gap from 0 to 68.75
[08/09 16:24:18]  Improved number of small numbers from 66 to 110 out of a max of 110
[08/09 16:24:18]  Verifer returned sat in 1.492970 secs.
[08/09 16:24:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1320.359619    1220.382080  3907.532227  1320.359619  400.044189  1220.382080        0.0   99.977539       99.977539     2.0       1220.38208            -1             -1
1    1620.426270    1220.382080  3907.532227  1620.426270  400.044189  1220.382080        0.0  400.044189      300.044189     2.0       1220.38208         False          False
2    1620.426270    1320.382080  3907.532227  1620.426270    0.021973  1320.382080        0.0  300.044189      200.044189     2.0       1620.42627         False          False
3    1789.132080    1520.381836  3907.532227  1789.132080  468.750000  1520.381836        0.0  268.750244      268.750000     3.0       1620.42627         False          False
4    1789.132080    1620.382080  3907.532227  1789.132080  234.375000  1620.382080        0.0  168.750000      168.750000     4.0       1620.42627         False          False
5    1789.132080    1620.404053  3907.532227  1789.132080  117.187500  1620.404053        0.0  168.728027       68.750000     5.0       1620.42627         False           True
6    1789.132080    1720.382080  3938.782227  1789.132080   58.593750  1720.382080        0.0   68.750000        0.000000     4.0       1620.42627         False           True
7    1789.132080    1789.132080  3970.032227  1789.132080   29.296875  1789.132080        0.0    0.000000      -68.750000     5.0       1620.42627         False           True
8    1957.882080    1857.882080  3970.032227  1957.882080  168.750000  1857.882080        0.0  100.000000        0.000000     1.0       1957.88208          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:18]  --------------------------------------------------------------------------------
[08/09 16:24:18]  Iteration: 94 (0 solution, 93 counterexamples)
[08/09 16:24:24]  Generator returned sat in 2.733866 secs.
[08/09 16:24:24]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:27]  Improved gap from 1875/32 to 62.5
[08/09 16:24:27]  Improved number of small numbers from 53 to 108 out of a max of 110
[08/09 16:24:27]  Verifer returned sat in 3.559089 secs.
[08/09 16:24:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2084.236328    1924.191895  3904.472168  2084.236328  100.132812  1924.191895        0.0  160.044434      160.044434     2.0      1924.191895            -1             -1
1    2084.236328    2024.191895  3904.472168  2084.236328  100.088623  2024.191895        0.0   60.044434       60.044434     3.0      2084.236328         False          False
2    2124.236328    2084.236328  3904.472168  2124.236328  100.044434  2084.236328        0.0   40.000000        0.044434     3.0      2124.236328         False           True
3    2389.881836    2124.192139  3904.472168  2389.881836  305.645508  2124.192139        0.0  265.689697      165.689941     2.0      2124.236328         False           True
4    2389.881836    2313.426025  3904.472168  2389.881836  152.822754  2313.426025        0.0   76.455811       65.689941     2.0      2124.236328         False          False
5    2389.881836    2324.192139  3938.782227  2389.881836   76.411377  2324.192139        0.0   65.689697        0.000000     3.0      2124.236328         False          False
6    2477.014893    2476.970703  3938.782227  2477.014893  152.822754  2476.970703        0.0    0.044189      -12.866943     1.0      2477.014893          True           True
7    2553.382080    2490.882080  3975.281982  2553.382080   76.411377  2490.882080        0.0   62.500000        0.000000     1.0      2477.014893         False          False
8    2553.382080    2553.382080  3975.281982  2553.382080   38.205688  2553.382080        0.0    0.000000     -100.000000     2.0      2477.014893         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:28]  --------------------------------------------------------------------------------
[08/09 16:24:28]  Iteration: 95 (0 solution, 94 counterexamples)
[08/09 16:24:33]  Generator returned sat in 3.051270 secs.
[08/09 16:24:34]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:37]  Improved gap from 363/8192 to 59.375
[08/09 16:24:38]  Improved number of small numbers from 50 to 91 out of a max of 110
[08/09 16:24:38]  Verifer returned sat in 3.971399 secs.
[08/09 16:24:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2585.340332    1968.629639  3760.034424  2585.340332    0.044189  1968.629639        0.0  616.710693      516.710693     7.0      1968.629639            -1             -1
1    2585.340332    2068.629639  3760.034424  2585.340332    0.044434  2068.629639        0.0  516.710693      416.710693     7.0      1968.629639         False           True
2    2585.340332    2168.629639  3760.034424  2585.340332    0.044434  2168.629639        0.0  416.710693      316.710693     8.0      1968.629639          True           True
3    2585.340332    2268.629639  3760.034424  2585.340332  211.111111  2268.629639        0.0  316.710693      216.710693     5.0      1968.629639          True           True
4    2585.340332    2468.629426  3760.034424  2585.340332  316.666667  2468.629426        0.0  116.710906      116.710693     5.0      2585.340332          True           True
5    2626.962759    2568.629426  3760.034424  2626.962759  158.333333  2568.629426        0.0   58.333333       58.333120     6.0      2585.340332         False           True
6    2647.796092    2588.420898  3780.867970  2647.796092   79.166667  2588.420898        0.0   59.375194        0.000000     2.0      2585.340332         False           True
7    2647.796092    2647.796092  3821.492970  2647.796092   39.583333  2647.796092        0.0    0.000000      -59.375000     2.0      2585.340332         False           True
8    2707.171092    2707.171092  3821.493164  2707.171092   59.375000  2707.171092        0.0    0.000000      -99.999806     1.0      2707.171092          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:38]  --------------------------------------------------------------------------------
[08/09 16:24:38]  Iteration: 96 (0 solution, 95 counterexamples)
[08/09 16:24:49]  Generator returned sat in 8.030105 secs.
[08/09 16:24:49]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:24:52]  Improved gap from 0 to 50.0
[08/09 16:24:53]  Improved number of small numbers from 42 to 70 out of a max of 110
[08/09 16:24:53]  Verifer returned sat in 4.045905 secs.
[08/09 16:24:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2046.419678    2046.397705  3782.266357  2046.419678    0.022217  2046.397705        0.0    0.021973        0.021973     1.0      2046.397705            -1             -1
1    2046.441895    2046.397705  3782.266602  2046.441895    0.044189  2046.397705        0.0    0.044189      -99.955566     1.0      2046.397705         False          False
2    2146.397705    2146.397506  3816.649658  2146.397705  100.000000  2146.397506        0.0    0.000200      -65.616699     1.0      2046.397705         False          False
3    2501.992341    2212.014648  3816.649658  2501.992341  355.594835  2212.014648        0.0  289.977692      189.977936     1.0      2046.397705         False          False
4    2501.992341    2412.014404  3816.649658  2501.992341  177.797418  2412.014404        0.0   89.977936       89.977936     2.0      2046.397705         False          False
5    2501.992341    2451.992341  3826.671722  2501.992341   88.898709  2451.992341        0.0   50.000000        0.000000     3.0      2046.397705         False          False
6    2585.340404    2585.318309  3826.671722  2585.340404  133.348063  2585.318309        0.0    0.022095      -16.651937     1.0      2585.340404          True           True
7    2651.992341    2601.992341  3876.671722  2651.992341   66.674032  2601.992341        0.0   50.000000        0.000000     1.0      2585.340404         False          False
8    2651.992341    2651.992341  3876.671875  2651.992341   33.337016  2651.992341        0.0    0.000000      -99.999847     2.0      2585.340404         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:24:53]  --------------------------------------------------------------------------------
[08/09 16:24:53]  Iteration: 97 (0 solution, 96 counterexamples)
[08/09 16:25:01]  Generator returned sat in 5.177794 secs.
[08/09 16:25:01]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:03]  Improved gap from 0 to 62.5
[08/09 16:25:04]  Improved number of small numbers from 48 to 95 out of a max of 110
[08/09 16:25:04]  Verifer returned sat in 2.879702 secs.
[08/09 16:25:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1844.954590    1644.910645  4183.753174  1844.954590  200.044189  1644.910645        0.0  200.043945      200.043701     7.0      1644.910645            -1             -1
1    1844.954590    1744.910889  4183.753174  1844.954590  200.000000  1744.910889        0.0  100.043701      100.043701     7.0      1844.954590         False           True
2    2046.302734    1807.410889  4183.753174  2046.302734  301.391846  1807.410889        0.0  238.891846      201.391846     8.0      1844.954590         False           True
3    2108.802979    1844.910889  4183.753174  2108.802979  301.392090  1844.910889        0.0  263.892090      163.892090     7.0      1844.954590         False           True
4    2108.802979    2033.410889  4183.753174  2108.802979  150.696045  2033.410889        0.0   75.392090       63.892090     3.0      1844.954590         False           True
5    2108.802979    2046.302734  4219.861084  2108.802979   75.348022  2046.302734        0.0   62.500244        0.000000     4.0      1844.954590         False          False
6    2196.998779    2196.954738  4219.861084  2196.998779  150.696045  2196.954738        0.0    0.044041      -11.804199     1.0      2196.998779          True           True
7    2272.302760    2208.802979  4256.361302  2272.302760   75.348022  2208.802979        0.0   63.499782        0.000000     1.0      2196.998779         False          False
8    2272.302760    2272.302760  4256.361328  2272.302760   37.674011  2272.302760        0.0    0.000000      -99.999974     2.0      2196.998779         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:05]  --------------------------------------------------------------------------------
[08/09 16:25:05]  Iteration: 98 (0 solution, 97 counterexamples)
[08/09 16:25:09]  Generator returned sat in 2.105261 secs.
[08/09 16:25:10]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:11]  Improved gap from 181/8192 to 39.0625
[08/09 16:25:12]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:25:12]  Verifer returned sat in 2.034030 secs.
[08/09 16:25:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    8410.129639    8110.218018  4183.753174  8410.129639  399.956055  8110.218018        0.0  299.911621      299.911621     3.0      8110.218018            -1             -1
1    8510.129883    8210.218018  4183.753174  8510.129883  399.911865  8210.218018        0.0  299.911865      299.911865     3.0      8510.129883         False          False
2    8610.129883    8210.218018  4183.753174  8610.129883  399.911865  8210.218018        0.0  399.911865      299.911865     3.0      8510.129883         False          False
3    8610.218018    8410.174072  4183.753174  8610.218018  400.000000  8410.174072        0.0  200.043945      200.000000     3.0      8510.129883         False          False
4    8610.218018    8510.174072  4183.753174  8610.218018  200.000000  8510.174072        0.0  100.043945      100.000000     3.0      8510.129883         False          False
5    8610.218018    8599.324463  4183.753174  8610.218018  100.000000  8599.324463        0.0   10.893555        0.000000     4.0      8510.129883         False          False
6    8699.324463    8699.280518  4183.753174  8699.324463  100.000000  8699.280518        0.0    0.043945      -10.893555     1.0      8699.324463          True           True
7    8749.280518    8710.218018  4244.690674  8749.280518   50.000000  8710.218018        0.0   39.062500        0.000000     1.0      8699.324463         False          False
8    8749.280518    8749.280518  4305.627930  8749.280518   25.000000  8749.280518        0.0    0.000000      -39.062744     2.0      8699.324463         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:12]  --------------------------------------------------------------------------------
[08/09 16:25:12]  Iteration: 99 (0 solution, 98 counterexamples)
[08/09 16:25:17]  Generator returned sat in 2.048657 secs.
[08/09 16:25:17]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:20]  Improved gap from 71319/8192 to 50.0
[08/09 16:25:21]  Improved number of small numbers from 37 to 69 out of a max of 110
[08/09 16:25:21]  Verifer returned sat in 4.377969 secs.
[08/09 16:25:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    8873.982910    8674.026855  4104.937500  8873.982910  355.633789  8674.026855        0.0  199.956055      199.955943     7.0      8674.026855            -1             -1
1    9029.616699    8774.026855  4104.937500  9029.616699  355.589844  8774.026855        0.0  255.589844      255.589733     7.0      9029.616699         False           True
2    9129.616699    8774.027016  4104.937500  9129.616699  355.589844  8774.027016        0.0  355.589684      255.589733     8.0      9029.616699         False           True
3    9129.660913    8874.027100  4104.937500  9129.660913  355.633898  8874.027100        0.0  255.633813      155.633946     3.0      9029.616699         False           True
4    9129.660913    9040.708252  4104.937500  9129.660913  177.816949  9040.708252        0.0   88.952661       55.633946     3.0      9029.616699         False          False
5    9129.660913    9079.660913  4149.303554  9129.660913   88.908474  9079.660913        0.0   50.000000        0.000000     4.0      9029.616699         False          False
6    9213.023625    9212.979557  4149.303554  9213.023625  133.362712  9212.979557        0.0    0.044067      -16.637288     1.0      9213.023625          True           True
7    9279.660913    9229.660913  4199.303554  9279.660913   66.681356  9229.660913        0.0   50.000000        0.000000     1.0      9213.023625         False          False
8    9279.660913    9279.660913  4199.303711  9279.660913   33.340678  9279.660913        0.0    0.000000      -99.999843     2.0      9213.023625         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:22]  --------------------------------------------------------------------------------
[08/09 16:25:22]  Iteration: 100 (0 solution, 99 counterexamples)
[08/09 16:25:31]  Generator returned sat in 6.640821 secs.
[08/09 16:25:31]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:25:32]  Improved gap from 0 to 73.4375
[08/09 16:25:32]  Improved number of small numbers from 55 to 82 out of a max of 110
[08/09 16:25:32]  Verifer returned sat in 0.883495 secs.
[08/09 16:25:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    8862.158203    8563.568359  4124.771240  8862.158203  298.589844  8563.568359        0.0  298.589844      198.589977     7.0      8563.568359            -1             -1
1    8862.158203    8763.568115  4124.771240  8862.158203  298.588623  8763.568115        0.0   98.590088       98.589977     7.0      8862.158203         False           True
2    9062.155518    8856.690741  4124.771240  9062.155518  298.587402  8856.690741        0.0  205.464776      198.587291     8.0      9062.155518         False           True
3    9155.278241    8863.568241  4124.771240  9155.278241  298.587500  8863.568241        0.0  291.710000      191.710015     2.0      9062.155518         False           True
4    9155.278241    9062.154541  4124.771240  9155.278241    0.010000  9062.154541        0.0   93.123700       91.710015     3.0      9062.155518         False          False
5    9155.278241    9081.840576  4133.061226  9155.278241    0.010000  9081.840576        0.0   73.437665        0.000000     3.0      9062.155518         False           True
6    9155.278241    9155.278241  4159.623726  9155.278241    0.010000  9155.278241        0.0    0.000000      -73.437500     4.0      9062.155518         False           True
7    9302.153241    9228.715741  4186.186226  9302.153241  146.875000  9228.715741        0.0   73.437500        0.000000     1.0      9302.153241          True           True
8    9302.153241    9302.153241  4212.748535  9302.153241    0.010000  9302.153241        0.0    0.000000      -73.437690     2.0      9302.153241         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:33]  --------------------------------------------------------------------------------
[08/09 16:25:33]  Iteration: 101 (0 solution, 100 counterexamples)
[08/09 16:25:38]  Generator returned sat in 2.787228 secs.
[08/09 16:25:38]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:25:39]  Improved gap from 359/8192 to 73.4375
[08/09 16:25:39]  Improved number of small numbers from 47 to 110 out of a max of 110
[08/09 16:25:39]  Verifer returned sat in 0.703539 secs.
[08/09 16:25:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    9015.322266    8524.653320  4116.811279  9015.322266    0.021729  8524.653320        0.0  490.668945      390.669189     8.0      8524.653320            -1             -1
1    9015.322266    8724.653076  4116.811279  9015.322266  283.793945  8724.653076        0.0  290.669189      290.669189     8.0      8524.653320         False           True
2    9015.322266    8824.631104  4116.811279  9015.322266  283.771729  8824.631104        0.0  190.691162      190.669189     8.0      9015.322266          True           True
3    9108.403076    8824.653076  4116.811279  9108.403076  283.771973  8824.653076        0.0  283.750000      183.750000     7.0      9015.322266         False           True
4    9108.403076    9015.300293  4116.811279  9108.403076    2.000000  9015.300293        0.0   93.102783       83.750000     7.0      9015.322266         False           True
5    9108.403076    9034.965576  4133.061279  9108.403076    2.000000  9034.965576        0.0   73.437500        0.000000     3.0      9015.322266         False           True
6    9108.403076    9108.403076  4159.623779  9108.403076    2.000000  9108.403076        0.0    0.000000      -73.437500     4.0      9015.322266         False           True
7    9255.278076    9181.840576  4186.186279  9255.278076  146.875000  9181.840576        0.0   73.437500        0.000000     1.0      9255.278076          True           True
8    9255.278076    9255.278076  4186.186279  9255.278076    2.000000  9255.278076        0.0    0.000000     -100.000000     2.0      9255.278076         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:40]  --------------------------------------------------------------------------------
[08/09 16:25:40]  Iteration: 102 (0 solution, 101 counterexamples)
[08/09 16:25:45]  Generator returned sat in 2.413745 secs.
[08/09 16:25:45]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:25:45]  Improved gap from 359/16384 to 73.4375
[08/09 16:25:46]  Improved number of small numbers from 62 to 110 out of a max of 110
[08/09 16:25:46]  Verifer returned sat in 0.693364 secs.
[08/09 16:25:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    8759.236572    8466.444824  3924.997803  8759.236572    0.041748  8466.444824        0.0  292.791748      192.791748     9.0      8466.444824            -1             -1
1    8759.236572    8666.444580  3924.997803  8759.236572  292.749756  8666.444580        0.0   92.791992       92.791748     6.0      8466.444824         False           True
2    8959.152832    8759.236572  3924.997803  8959.152832  292.708252  8759.236572        0.0  199.916260      192.708008     6.0      8959.152832          True           True
3    9052.194824    8766.444824  3924.997803  9052.194824  292.958252  8766.444824        0.0  285.750000      185.750000     2.0      8959.152832         False           True
4    9052.194824    8959.111572  3924.997803  9052.194824    1.500000  8959.111572        0.0   93.083252       85.750000     3.0      8959.152832         False          False
5    9052.194824    8978.757324  3939.247803  9052.194824    1.500000  8978.757324        0.0   73.437500        0.000000     3.0      8959.152832         False           True
6    9052.194824    9052.194824  3965.810303  9052.194824    1.500000  9052.194824        0.0    0.000000      -73.437500     4.0      8959.152832         False           True
7    9199.069824    9125.632324  3992.372803  9199.069824  146.875000  9125.632324        0.0   73.437500        0.000000     1.0      9199.069824          True           True
8    9199.069824    9199.069824  3992.373047  9199.069824    1.500000  9199.069824        0.0    0.000000      -99.999756     2.0      9199.069824         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:46]  --------------------------------------------------------------------------------
[08/09 16:25:46]  Iteration: 103 (0 solution, 102 counterexamples)
[08/09 16:25:51]  Generator returned sat in 2.433004 secs.
[08/09 16:25:52]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:25:52]  Improved gap from 0 to 73.4375
[08/09 16:25:52]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:25:52]  Verifer returned sat in 0.619447 secs.
[08/09 16:25:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    8569.473389    8269.407471  4093.233643  8569.473389    0.021729  8269.407471        0.0  300.065918      200.065918     2.0      8269.407471            -1             -1
1    8569.473389    8469.407471  4093.233643  8569.473389  300.043945  8469.407471        0.0  100.065918      100.065918     2.0      8269.407471         False          False
2    8769.429443    8562.488525  4093.233643  8769.429443  300.021973  8562.488525        0.0  206.940918      200.021973     3.0      8769.429443         False          False
3    8862.510498    8572.760498  4093.233643  8862.510498  300.021973  8572.760498        0.0  289.750000      193.103027     2.0      8769.429443         False           True
4    8862.510498    8769.407471  4093.233643  8862.510498    0.500000  8769.407471        0.0   93.103027       93.103027     3.0      8769.429443         False          False
5    8862.510498    8789.072998  4100.130615  8862.510498    0.500000  8789.072998        0.0   73.437500        0.000000     3.0      8769.429443         False           True
6    8862.510498    8862.510498  4126.693115  8862.510498    0.500000  8862.510498        0.0    0.000000      -73.437500     4.0      8769.429443         False           True
7    9009.385498    8935.947998  4153.255615  9009.385498  146.875000  8935.947998        0.0   73.437500        0.000000     1.0      9009.385498          True           True
8    9009.385498    9009.385498  4179.817871  9009.385498    0.500000  9009.385498        0.0    0.000000      -73.437744     2.0      9009.385498         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:25:53]  --------------------------------------------------------------------------------
[08/09 16:25:53]  Iteration: 104 (0 solution, 103 counterexamples)
[08/09 16:26:06]  Generator returned sat in 10.510969 secs.
[08/09 16:26:06]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:26:10]  Improved gap from 5140101/229376 to 62.5
[08/09 16:26:11]  Improved number of small numbers from 56 to 91 out of a max of 110
[08/09 16:26:11]  Verifer returned sat in 4.853439 secs.
[08/09 16:26:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    8834.657959    8329.281250  4133.359863  8834.657959  203.555420  8329.281250        0.0  505.376709      505.376709     1.0      8329.281250            -1             -1
1    8834.657959    8329.324707  4133.359863  8834.657959  203.555420  8329.324707        0.0  505.333252      405.376709     2.0      8329.281250         False          False
2    8834.657959    8429.281250  4133.359863  8834.657959  203.555556  8429.281250        0.0  405.376709      305.376709     3.0      8329.281250          True           True
3    8834.657959    8529.281250  4133.359863  8834.657959  203.555556  8529.281250        0.0  305.376709      205.376709     4.0      8329.281250          True           True
4    8834.657959    8729.281037  4133.359863  8834.657959  305.333333  8729.281037        0.0  105.376922      105.376709     5.0      8834.657959          True           True
5    8883.947703    8827.404002  4133.359863  8883.947703  154.666667  8827.404002        0.0   56.543701       54.666453     6.0      8834.657959         False           True
6    8906.737336    8834.701660  4155.903778  8906.737336   79.333333  8834.701660        0.0   72.035675        0.000000     2.0      8834.657959         False           True
7    8906.737336    8906.737336  4193.403778  8906.737336   41.666667  8906.737336        0.0    0.000000      -62.500000     2.0      8834.657959         False           True
8    8969.237336    8969.237336  4193.403809  8969.237336   62.500000  8969.237336        0.0    0.000000      -99.999969     1.0      8969.237336          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:26:12]  --------------------------------------------------------------------------------
[08/09 16:26:12]  Iteration: 105 (0 solution, 104 counterexamples)
[08/09 16:26:19]  Generator returned sat in 4.334358 secs.
[08/09 16:26:19]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:26:20]  Improved gap from 53 to 68.75
[08/09 16:26:20]  Improved number of small numbers from 107 to 110 out of a max of 110
[08/09 16:26:20]  Verifer returned sat in 1.382798 secs.
[08/09 16:26:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    7729.297917    7729.281250  4133.359863  7729.297917  399.899902  7729.281250        0.0    0.016667        0.016667     2.0      7729.281250            -1             -1
1    8129.181396    7729.314453  4133.359863  8129.181396  399.900146  7729.314453        0.0  399.866943      299.900146     1.0      7729.281250         False          False
2    8129.214600    7829.281250  4133.359863  8129.214600  399.900146  7829.281250        0.0  299.933350      199.933350     2.0      7729.281250         False          False
3    8229.181396    7953.547852  4133.359863  8229.181396  399.900146  7953.547852        0.0  275.633545      199.900146     3.0      7729.281250         False          False
4    8229.181396    8129.181152  4133.359863  8229.181396  114.133301  8129.181152        0.0  100.000244       99.900146     4.0      7729.281250         False          False
5    8300.381104    8142.025694  4133.359863  8300.381104  171.199951  8142.025694        0.0  158.355409       71.099854     3.0      8300.381104          True           True
6    8300.397917    8229.281250  4162.243164  8300.397917  158.372222  8229.281250        0.0   71.116667       -0.000033     2.0      8300.381104         False          False
7    8369.147949    8300.414551  4193.476562  8369.147949  139.866699  8300.414551        0.0   68.733398       -0.016602     1.0      8300.381104         False          False
8    8388.031250    8369.164551  4224.726318  8388.031250   87.616699  8369.164551        0.0   18.866699      -49.883545     1.0      8300.381104         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:26:21]  --------------------------------------------------------------------------------
[08/09 16:26:21]  Iteration: 106 (0 solution, 105 counterexamples)
[08/09 16:26:26]  Generator returned sat in 2.403654 secs.
[08/09 16:26:26]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:26:28]  Improved gap from 0 to 68.75
[08/09 16:26:29]  Improved number of small numbers from 48 to 77 out of a max of 110
[08/09 16:26:29]  Verifer returned sat in 2.848084 secs.
[08/09 16:26:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    7940.787842    7709.581396  4053.059814  7940.787842    0.043701  7709.581396        0.0  231.206445      131.206543     4.0      7709.581396            -1             -1
1    7998.392871    7868.712134  4053.059814  7998.392871  288.811475  7868.712134        0.0  129.680737       88.811572     2.0      7709.581396         False           True
2    7998.392871    7940.831543  4053.059814  7998.392871  129.637207  7940.831543        0.0   57.561328      -11.188428     2.0      7998.392871         False          False
3    8070.425049    8070.381396  4053.059814  8070.425049  129.593506  8070.381396        0.0    0.043652      -39.156250     1.0      8070.425049         False          False
4    8252.781396    8207.124976  4053.059814  8252.781396  182.400000  8207.124976        0.0   45.656421       43.200098     1.0      8070.425049         False          False
5    8378.331396    8231.164551  4053.059814  8378.331396  171.206421  8231.164551        0.0  147.166846       68.750098     2.0      8070.425049         False          False
6    8378.331396    8309.581396  4084.309717  8378.331396  147.166504  8309.581396        0.0   68.750000        0.000000     2.0      8070.425049         False          False
7    8431.181396    8378.331396  4115.559570  8431.181396  121.600000  8378.331396        0.0   52.850000      -15.900146     3.0      8070.425049         False          False
8    8560.731396    8447.081543  4115.559570  8560.731396  182.400000  8447.081543        0.0  113.649854       13.649854     1.0      8560.731396          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:26:30]  --------------------------------------------------------------------------------
[08/09 16:26:30]  Iteration: 107 (0 solution, 106 counterexamples)
[08/09 16:26:36]  Generator returned sat in 3.267337 secs.
[08/09 16:26:36]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:26:40]  Improved gap from 2756161/71680 to 50.0
[08/09 16:26:41]  Improved number of small numbers from 55 to 88 out of a max of 110
[08/09 16:26:41]  Verifer returned sat in 4.829711 secs.
[08/09 16:26:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    6801.565430    6401.609131  5020.839600  6801.565430  399.956299  6401.609131        0.0  399.956299      299.956466     2.0      6401.609131            -1             -1
1    6801.565430    6601.608887  5020.839600  6801.565430  399.956299  6601.608887        0.0  199.956543      199.956466     2.0      6401.609131         False          False
2    7001.521973    6601.609025  5020.839600  7001.521973  399.913086  6601.609025        0.0  399.912947      299.913009     3.0      7001.521973         False          False
3    7074.942359    6801.608887  5020.839600  7074.942359  473.333333  6801.608887        0.0  273.333472      273.333395     2.0      7001.521973         False          False
4    7074.942359    6901.608887  5020.839600  7074.942359  238.666667  6901.608887        0.0  173.333472      173.333395     3.0      7001.521973         False          False
5    7074.942359    6901.652588  5020.839600  7074.942359  121.333333  6901.652588        0.0  173.289771       73.333395     4.0      7001.521973         False          False
6    7074.942359    7024.942139  5047.506204  7074.942359   62.666667  7024.942139        0.0   50.000220        0.000000     4.0      7001.521973         False           True
7    7074.942359    7074.942359  5097.506204  7074.942359   33.333333  7074.942359        0.0    0.000000      -50.000000     5.0      7001.521973         False           True
8    7124.942359    7124.942359  5097.506348  7124.942359   50.000000  7124.942359        0.0    0.000000      -99.999857     1.0      7124.942359          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:26:41]  --------------------------------------------------------------------------------
[08/09 16:26:41]  Iteration: 108 (0 solution, 107 counterexamples)
[08/09 16:26:47]  Generator returned sat in 3.211899 secs.
[08/09 16:26:48]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:26:49]  Improved gap from 355/16384 to 45.3125
[08/09 16:26:50]  Improved number of small numbers from 51 to 110 out of a max of 110
[08/09 16:26:50]  Verifer returned sat in 1.936864 secs.
[08/09 16:26:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    6729.532959    6194.989746  5327.45874  6729.532959    0.043457  6194.989746        0.0  534.543213      534.542969     1.0      6194.989746            -1             -1
1    6729.532959    6294.989990  5327.45874  6729.532959    0.043457  6294.989990        0.0  434.542969      434.542969     2.0      6194.989746         False          False
2    6729.532959    6295.033203  5327.45874  6729.532959  334.500000  6295.033203        0.0  434.499756      334.542969     3.0      6194.989746          True           True
3    6729.532959    6394.989990  5327.45874  6729.532959  334.500000  6394.989990        0.0  334.542969      234.542969     4.0      6194.989746          True           True
4    6729.532959    6586.970703  5327.45874  6729.532959  334.500000  6586.970703        0.0  142.562256      134.542969     5.0      6729.532959          True           True
5    6756.220703    6694.989990  5327.45874  6756.220703  169.250000  6694.989990        0.0   61.230713       61.230713     6.0      6729.532959         False           True
6    6781.614990    6736.259033  5340.83374  6781.614990   86.625000  6736.259033        0.0   45.355957        0.000000     2.0      6729.532959         False           True
7    6781.614990    6781.614990  5395.52124  6781.614990   45.312500  6781.614990        0.0    0.000000      -45.312500     2.0      6729.532959         False           True
8    6826.927490    6826.927490  5450.20874  6826.927490   45.312500  6826.927490        0.0    0.000000      -45.312500     1.0      6826.927490          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:26:50]  --------------------------------------------------------------------------------
[08/09 16:26:50]  Iteration: 109 (0 solution, 108 counterexamples)
[08/09 16:27:00]  Generator returned sat in 6.919362 secs.
[08/09 16:27:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:27:02]  Improved gap from 177/8192 to 39.0625
[08/09 16:27:03]  Improved number of small numbers from 48 to 81 out of a max of 110
[08/09 16:27:03]  Verifer returned sat in 3.002803 secs.
[08/09 16:27:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    8475.938965    8375.938965  5246.083740  8475.938965  399.105713  8375.938965        0.0  100.000000       99.999891     9.0      8375.938965            -1             -1
1    8775.044922    8475.938965  5246.083740  8775.044922  399.105957  8475.938965        0.0  299.105957      299.105848     2.0      8375.938965         False           True
2    8875.044922    8475.939209  5246.083740  8875.044922  399.105957  8475.939209        0.0  399.105713      299.105848     2.0      8375.938965         False          False
3    8954.852539    8675.938965  5246.083740  8954.852539  478.913330  8675.938965        0.0  278.913574      278.913465     3.0      8375.938965         False          False
4    8954.852539    8775.044909  5246.083740  8954.852539  239.956665  8775.044909        0.0  179.807630      178.913465     4.0      8375.938965         False          False
5    9015.001574    8875.938965  5246.083740  9015.001574  239.956665  8875.938965        0.0  139.062609      139.062500     3.0      9015.001574          True           True
6    9015.001574    8954.218994  5246.083740  9015.001574  120.478333  8954.218994        0.0   60.782580       39.062500     4.0      9015.001574         False          False
7    9015.001574    8975.939074  5307.021240  9015.001574   60.739166  8975.939074        0.0   39.062500        0.000000     3.0      9015.001574         False           True
8    9015.001574    9015.001574  5367.958496  9015.001574   30.869583  9015.001574        0.0    0.000000      -39.062744     4.0      9015.001574         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:27:04]  --------------------------------------------------------------------------------
[08/09 16:27:04]  Iteration: 110 (0 solution, 109 counterexamples)
[08/09 16:27:09]  Generator returned sat in 2.381295 secs.
[08/09 16:27:09]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:27:12]  Improved gap from 16739/32768 to 40.625
[08/09 16:27:13]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/09 16:27:13]  Verifer returned sat in 3.546528 secs.
[08/09 16:27:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    9908.615234    9329.408691  4908.235352   9908.615234    0.043213   9329.408691        0.0  579.206543      479.206787     6.0      9329.408691            -1             -1
1    9908.615234    9429.408691  4908.235352   9908.615234    0.043213   9429.408691        0.0  479.206543      379.206787     2.0      9329.408691         False           True
2    9908.615234    9529.408691  4908.235352   9908.615234    0.043213   9529.408691        0.0  379.206543      279.206787     3.0      9329.408691         False          False
3    9908.615234    9629.408447  4908.235352   9908.615234  318.000000   9629.408447        0.0  279.206787      179.206787     4.0      9329.408691          True           True
4    9947.408447    9829.408447  4908.235352   9947.408447  318.000000   9829.408447        0.0  118.000000      118.000000     5.0      9947.408447          True           True
5    9988.908447    9908.658447  4908.235352   9988.908447  159.500000   9908.658447        0.0   80.250000       59.500000     2.0      9947.408447         False           True
6    9988.908447    9947.451904  4948.735352   9988.908447   80.250000   9947.451904        0.0   41.456543        0.000000     2.0      9947.408447         False          False
7    9988.908447    9988.908447  5008.110352   9988.908447   40.625000   9988.908447        0.0    0.000000      -40.625000     3.0      9947.408447         False          False
8   10029.533447   10029.533447  5008.110352  10029.533447   40.625000  10029.533447        0.0    0.000000     -100.000000     1.0     10029.533447          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:27:13]  --------------------------------------------------------------------------------
[08/09 16:27:13]  Iteration: 111 (0 solution, 110 counterexamples)
[08/09 16:27:20]  Generator returned sat in 3.693034 secs.
[08/09 16:27:20]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:27:24]  Improved gap from 992117/24576 to 50.0
[08/09 16:27:25]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/09 16:27:25]  Verifer returned sat in 4.502741 secs.
[08/09 16:27:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    9762.976562    9463.599854  4709.191895   9762.976562    0.043213   9463.599854        0.0  299.376709      299.376709     8.0      9463.599854            -1             -1
1    9762.976562    9563.599854  4709.191895   9762.976562    0.043457   9563.599854        0.0  199.376709      199.376709     8.0      9463.599854         False           True
2    9762.976562    9563.600098  4709.191895   9762.976562    0.043457   9563.600098        0.0  199.376465       99.376709     8.0      9463.599854          True           True
3    9762.976562    9664.556396  4709.191895   9762.976562  199.333333   9664.556396        0.0   98.420166       -0.623291     5.0      9463.599854          True           True
4    9963.556396    9863.599854  4709.191895   9963.556396  299.000000   9863.599854        0.0   99.956543       99.956543     1.0      9963.556396          True           True
5   10013.599854    9938.056641  4709.191895  10013.599854  150.000000   9938.056641        0.0   75.543213       50.000000     2.0      9963.556396         False          False
6   10013.599854    9963.599854  4759.191895  10013.599854   75.500000   9963.599854        0.0   50.000000        0.000000     2.0      9963.556396         False          False
7   10013.599854   10013.599854  4809.191895  10013.599854   38.250000  10013.599854        0.0    0.000000      -50.000000     3.0      9963.556396         False          False
8   10070.974854   10063.599854  4809.192139  10070.974854   57.375000  10063.599854        0.0    7.375000      -92.624756     1.0     10070.974854          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:27:25]  --------------------------------------------------------------------------------
[08/09 16:27:25]  Iteration: 112 (0 solution, 111 counterexamples)
[08/09 16:27:32]  Generator returned sat in 4.450329 secs.
[08/09 16:27:33]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 16:27:36]  Improved gap from 0 to 50.0
[08/09 16:27:37]  Improved number of small numbers from 43 to 73 out of a max of 110
[08/09 16:27:37]  Verifer returned sat in 4.201336 secs.
[08/09 16:27:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   10192.399658   10092.399658  4944.560303  10192.399658    0.043213  10092.399658        0.0  100.000000       99.999822     2.0     10092.399658            -1             -1
1   10192.399658   10192.399658  4944.560303  10192.399658    0.021729  10192.399658        0.0    0.000000       -0.000178     2.0     10192.399658         False          False
2   10549.226318   10192.399897  4944.560303  10549.226318  356.826660  10192.399897        0.0  356.826422      256.826483     1.0     10192.399658         False          False
3   10549.226557   10370.291748  4944.560303  10549.226557  356.826660  10370.291748        0.0  178.934809      156.826721     2.0     10192.399658         False          False
4   10549.226557   10459.248291  4944.560303  10549.226557  178.913330  10459.248291        0.0   89.978266       56.826721     3.0     10192.399658         False          False
5   10549.226557   10499.226557  4987.733582  10549.226557   89.956665  10499.226557        0.0   50.000000        0.000000     4.0     10192.399658         False          False
6   10634.161555   10631.259058  4987.733582  10634.161555  134.934998  10631.259058        0.0    2.902496      -15.065002     1.0     10634.161555          True           True
7   10699.226557   10649.226557  5037.733582  10699.226557   67.967499  10649.226557        0.0   50.000000        0.000000     1.0     10634.161555         False          False
8   10699.226557   10699.226557  5037.733643  10699.226557   34.483749  10699.226557        0.0    0.000000      -99.999939     2.0     10634.161555         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:27:37]  --------------------------------------------------------------------------------
[08/09 16:27:37]  Iteration: 113 (0 solution, 112 counterexamples)
[08/09 16:27:49]  Generator returned sat in 8.340935 secs.
[08/09 16:27:49]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:27:51]  Improved gap from 485983/36864 to 68.75
[08/09 16:27:51]  Improved number of small numbers from 47 to 108 out of a max of 110
[08/09 16:27:51]  Verifer returned sat in 2.407208 secs.
[08/09 16:27:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   10337.139893   10115.096924  4921.863281  10337.139893    0.042969  10115.096924        0.0  222.042969      222.042969     1.0     10115.096924            -1             -1
1   10337.139893   10215.096680  4921.863281  10337.139893    0.042969  10215.096680        0.0  122.043213      122.042969     2.0     10115.096924         False          False
2   10337.139893   10315.096924  4921.863281  10337.139893  121.999756  10315.096924        0.0   22.042969       22.042969     3.0     10115.096924          True           True
3   10683.205078   10337.183350  4921.863281  10683.205078  368.108154  10337.183350        0.0  346.021729      268.108154     1.0     10115.096924          True           True
4   10683.205078   10515.096680  4921.863281  10683.205078  112.043213  10515.096680        0.0  168.108398      168.108154     2.0     10115.096924         False          False
5   10683.205078   10515.139893  4921.863281  10683.205078  168.064819  10515.139893        0.0  168.065186       68.108154     3.0     10683.205078          True           True
6   10683.205078   10615.096924  4950.656494  10683.205078  101.021484  10615.096924        0.0   68.108154       -3.098633     4.0     10683.205078         False           True
7   10755.053711   10686.303711  4981.906494  10755.053711  139.956787  10686.303711        0.0   68.750000        0.000000     1.0     10683.205078         False           True
8   10772.907227   10755.053711  4981.906494  10772.907227   86.603516  10755.053711        0.0   17.853516      -82.146484     2.0     10683.205078         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:27:52]  --------------------------------------------------------------------------------
[08/09 16:27:52]  Iteration: 114 (0 solution, 113 counterexamples)
[08/09 16:28:00]  Generator returned sat in 4.566656 secs.
[08/09 16:28:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:01]  Improved gap from 231847/16384 to 39.0625
[08/09 16:28:02]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:28:02]  Verifer returned sat in 1.998572 secs.
[08/09 16:28:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   10351.112549   10251.090576  4860.031250  10351.112549    0.043213  10251.090576        0.0  100.021973        0.021973     2.0     10251.090576            -1             -1
1   10351.112549   10351.090820  4920.968506  10351.112549    0.021484  10351.090820        0.0    0.021729      -39.040771     3.0     10351.112549         False          False
2   10860.039795   10390.153320  4920.968506  10860.039795  508.948975  10390.153320        0.0  469.886475      369.886475     1.0     10351.112549         False          False
3   10929.215820   10490.153320  4920.968506  10929.215820  539.062500  10490.153320        0.0  439.062500      339.062500     2.0     10351.112549         False          False
4   10929.215820   10690.153076  4920.968506  10929.215820  270.531250  10690.153076        0.0  239.062744      239.062500     3.0     10351.112549         False          False
5   10929.215820   10790.153076  4920.968506  10929.215820  136.265625  10790.153076        0.0  139.062744      139.062500     4.0     10351.112549         False          False
6   10929.215820   10860.061279  4920.968506  10929.215820  136.265625  10860.061279        0.0   69.154541       39.062500     4.0     10929.215820          True           True
7   10929.215820   10890.153320  4981.906006  10929.215820   69.132812  10890.153320        0.0   39.062500        0.000000     5.0     10929.215820         False           True
8   10929.215820   10929.215820  5042.843506  10929.215820   35.566406  10929.215820        0.0    0.000000      -39.062500     6.0     10929.215820         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:02]  --------------------------------------------------------------------------------
[08/09 16:28:02]  Iteration: 115 (0 solution, 114 counterexamples)
[08/09 16:28:08]  Generator returned sat in 3.033954 secs.
[08/09 16:28:09]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:11]  Improved gap from 11/128 to 40.625
[08/09 16:28:11]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:28:11]  Verifer returned sat in 2.683138 secs.
[08/09 16:28:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   10873.797852   10733.172852  4477.948975  10873.797852    0.042969  10733.172852        0.0  140.625000      140.625000     2.0     10733.172852            -1             -1
1   10873.797852   10833.172852  4477.948975  10873.797852    0.042969  10833.172852        0.0   40.625000       40.625000     3.0     10733.172852         False          False
2   10873.797852   10833.172852  4537.323975  10873.797852    0.042969  10833.172852        0.0   40.625000        0.000000     3.0     10733.172852          True           True
3   11144.172852   10873.797852  4537.323975  11144.172852  311.000000  10873.797852        0.0  270.375000      170.375000     4.0     10733.172852         False           True
4   11184.797852   11069.008789  4537.323975  11184.797852  311.000000  11069.008789        0.0  115.789062      111.000000     2.0     11184.797852          True           True
5   11225.508789   11146.215820  4537.323975  11225.508789  156.500000  11146.215820        0.0   79.292969       51.710938     2.0     11184.797852         False          False
6   11225.508789   11184.840820  4585.613037  11225.508789   79.250000  11184.840820        0.0   40.667969        0.000000     2.0     11184.797852         False          False
7   11225.508789   11225.508789  4644.988037  11225.508789   40.625000  11225.508789        0.0    0.000000      -40.625000     3.0     11184.797852         False          False
8   11266.133789   11266.133789  4704.363037  11266.133789   40.625000  11266.133789        0.0    0.000000      -40.625000     1.0     11266.133789          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:12]  --------------------------------------------------------------------------------
[08/09 16:28:12]  Iteration: 116 (0 solution, 115 counterexamples)
[08/09 16:28:20]  Generator returned sat in 5.423179 secs.
[08/09 16:28:21]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:25]  Improved gap from 0 to 50.0
[08/09 16:28:25]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:28:25]  Verifer returned sat in 4.308190 secs.
[08/09 16:28:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12229.646240   11731.603271  4998.598633  12229.646240    0.042725  11731.603271        0.0  498.042969      498.042969     3.0     11731.603271            -1             -1
1   12229.646240   11831.603271  4998.598633  12229.646240    0.042725  11831.603271        0.0  398.042969      398.042969     3.0     11731.603271         False           True
2   12229.646240   11831.603516  4998.598633  12229.646240    0.042969  11831.603516        0.0  398.042725      298.042969     4.0     11731.603271          True           True
3   12229.646240   11931.603516  4998.598633  12229.646240  198.666667  11931.603516        0.0  298.042725      198.042969     5.0     11731.603271          True           True
4   12229.646240   12131.603271  4998.598633  12229.646240  298.000000  12131.603271        0.0   98.042969       98.042969     6.0     12229.646240          True           True
5   12281.603271   12205.560547  4998.598633  12281.603271  150.000000  12205.560547        0.0   76.042725       50.000000     7.0     12229.646240         False           True
6   12281.603271   12231.603271  5048.598633  12281.603271   76.000000  12231.603271        0.0   50.000000        0.000000     2.0     12229.646240         False           True
7   12281.603271   12281.603271  5098.598633  12281.603271   39.000000  12281.603271        0.0    0.000000      -50.000000     3.0     12229.646240         False          False
8   12340.103271   12331.603271  5148.598389  12340.103271   58.500000  12331.603271        0.0    8.500000      -41.500244     1.0     12340.103271          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:25]  --------------------------------------------------------------------------------
[08/09 16:28:25]  Iteration: 117 (0 solution, 116 counterexamples)
[08/09 16:28:31]  Generator returned sat in 2.671780 secs.
[08/09 16:28:31]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:34]  Improved gap from 11/256 to 50.0
[08/09 16:28:34]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:28:34]  Verifer returned sat in 2.790335 secs.
[08/09 16:28:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12130.736084   12030.693115  4699.508789  12130.736084    0.042969  12030.693115        0.0  100.042969      100.042969     2.0     12030.693115            -1             -1
1   12130.736084   12130.693115  4699.508789  12130.736084    0.042969  12130.693115        0.0    0.042969        0.042969     2.0     12030.693115         False          False
2   12482.255615   12130.693115  4699.508789  12482.255615  351.562500  12130.693115        0.0  351.562500      251.562500     2.0     12030.693115         False          False
3   12482.255615   12230.693115  4699.508789  12482.255615  351.562500  12230.693115        0.0  251.562500      151.562500     2.0     12030.693115         False          False
4   12482.255615   12392.822021  4699.508789  12482.255615  176.781250  12392.822021        0.0   89.433594       51.562500     3.0     12030.693115         False          False
5   12482.255615   12430.693115  4747.946289  12482.255615   89.390625  12430.693115        0.0   51.562500        0.000000     4.0     12030.693115         False          False
6   12564.779053   12564.736084  4747.946289  12564.779053  134.085938  12564.736084        0.0    0.042969      -17.476562     1.0     12564.779053          True           True
7   12632.779053   12582.779053  4797.422852  12632.779053   68.042969  12582.779053        0.0   50.000000        0.000000     1.0     12564.779053         False          False
8   12632.779053   12632.779053  4847.422852  12632.779053   35.021484  12632.779053        0.0    0.000000      -50.000000     2.0     12564.779053         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:35]  --------------------------------------------------------------------------------
[08/09 16:28:35]  Iteration: 118 (0 solution, 117 counterexamples)
[08/09 16:28:43]  Generator returned sat in 5.306070 secs.
[08/09 16:28:43]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/09 16:28:44]  Improved gap from 11/512 to 73.4375
[08/09 16:28:44]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/09 16:28:44]  Verifer returned sat in 0.579119 secs.
[08/09 16:28:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12405.187012   12205.229980  4737.379883  12405.187012  306.332031  12205.229980        0.0  199.957031       99.957031     1.0     12205.229980            -1             -1
1   12511.519043   12405.229980  4737.379883  12511.519043  306.289062  12405.229980        0.0  106.289062      106.289062     1.0     12511.519043         False          False
2   12705.272949   12498.269043  4737.379883  12705.272949  300.042969  12498.269043        0.0  207.003906      200.042969     2.0     12705.272949         False          False
3   12798.312012   12511.562012  4737.379883  12798.312012  300.042969  12511.562012        0.0  286.750000      193.082031     2.0     12705.272949         False           True
4   12798.312012   12705.229980  4737.379883  12798.312012    1.000000  12705.229980        0.0   93.082031       93.082031     3.0     12705.272949         False           True
5   12798.312012   12705.315918  4744.297852  12798.312012    1.000000  12705.315918        0.0   92.996094        0.000000     3.0     12705.272949         False           True
6   12798.312012   12798.312012  4770.860352  12798.312012    1.000000  12798.312012        0.0    0.000000      -73.437500     4.0     12705.272949         False           True
7   12945.187012   12871.749512  4797.422852  12945.187012  146.875000  12871.749512        0.0   73.437500        0.000000     1.0     12945.187012          True           True
8   12945.187012   12945.187012  4797.422852  12945.187012    1.000000  12945.187012        0.0    0.000000     -100.000000     2.0     12945.187012         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:28:44]  --------------------------------------------------------------------------------
[08/09 16:28:44]  Iteration: 119 (0 solution, 118 counterexamples)
[08/09 16:29:04]  Generator returned sat in 16.503624 secs.
[08/09 16:29:04]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:07]  Improved gap from 218993/14336 to 46.875
[08/09 16:29:07]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/09 16:29:07]  Verifer returned sat in 2.811098 secs.
[08/09 16:29:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   11721.437012   11090.394287  4744.297363  11721.437012    0.042725  11090.394287        0.0  631.042725      531.042725     8.0     11090.394287            -1             -1
1   11721.437012   11290.394287  4744.297363  11721.437012    0.042725  11290.394287        0.0  431.042725      431.042725     8.0     11090.394287         False           True
2   11721.437012   11390.351074  4744.297363  11721.437012  328.999756  11390.351074        0.0  331.085938      331.042725     9.0     11090.394287          True           True
3   11721.437012   11390.394287  4744.297363  11721.437012  329.000000  11390.394287        0.0  331.042725      231.042725     5.0     11090.394287          True           True
4   11721.437012   11590.394043  4744.297363  11721.437012  331.000000  11590.394043        0.0  131.042969      131.042725     5.0     11721.437012          True           True
5   11757.894043   11690.394287  4744.297363  11757.894043  167.500000  11690.394287        0.0   67.499756       67.499756     6.0     11721.437012         False           True
6   11776.144287   11721.437256  4758.547363  11776.144287   85.750000  11721.437256        0.0   54.707031        0.000000     2.0     11721.437012         False           True
7   11776.144287   11776.144287  4811.672363  11776.144287   44.875000  11776.144287        0.0    0.000000      -46.875000     2.0     11721.437012         False           True
8   11823.019287   11823.019287  4811.672363  11823.019287   46.875000  11823.019287        0.0    0.000000     -100.000000     1.0     11823.019287          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:08]  --------------------------------------------------------------------------------
[08/09 16:29:08]  Iteration: 120 (0 solution, 119 counterexamples)
[08/09 16:29:16]  Generator returned sat in 5.002766 secs.
[08/09 16:29:16]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:17]  Improved gap from 0 to 75.0
[08/09 16:29:17]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:29:17]  Verifer returned sat in 0.852744 secs.
[08/09 16:29:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   11784.841064   11386.798340  4385.359863  11784.841064    0.042725  11386.798340        0.0  398.042725      398.042725     1.0     11386.798340            -1             -1
1   11784.841064   11486.798096  4385.359863  11784.841064    0.042725  11486.798096        0.0  298.042969      298.042725     2.0     11386.798340         False          False
2   11784.841064   11486.798340  4385.359863  11784.841064    0.021240  11486.798340        0.0  298.042725      198.042725     3.0     11784.841064          True           True
3   11874.798340   11586.798340  4385.359863  11874.798340  388.000000  11586.798340        0.0  288.000000      188.000000     4.0     11784.841064         False           True
4   11874.798340   11784.819824  4385.359863  11874.798340    2.000000  11784.819824        0.0   89.978516       88.000000     5.0     11784.841064         False           True
5   11874.798340   11799.798340  4397.359863  11874.798340    2.000000  11799.798340        0.0   75.000000        0.000000     3.0     11784.841064         False           True
6   11874.798340   11874.798340  4422.359863  11874.798340    2.000000  11874.798340        0.0    0.000000      -75.000000     4.0     11784.841064         False           True
7   12024.798340   11949.798340  4447.359863  12024.798340  150.000000  11949.798340        0.0   75.000000        0.000000     1.0     12024.798340          True           True
8   12024.798340   12024.798340  4447.359863  12024.798340    2.000000  12024.798340        0.0    0.000000     -100.000000     2.0     12024.798340         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:18]  --------------------------------------------------------------------------------
[08/09 16:29:18]  Iteration: 121 (0 solution, 120 counterexamples)
[08/09 16:29:24]  Generator returned sat in 3.019831 secs.
[08/09 16:29:24]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:25]  Improved gap from 149/2 to 75.0
[08/09 16:29:25]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/09 16:29:25]  Verifer returned sat in 1.105884 secs.
[08/09 16:29:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   11673.862549   11274.862549  4385.359863  11673.862549  299.064209  11274.862549        0.0  399.000000      399.000000     3.0     11274.862549            -1             -1
1   11673.862549   11374.862549  4385.359863  11673.862549  299.064209  11374.862549        0.0  299.000000      299.000000     3.0     11274.862549         False           True
2   11673.905273   11374.862549  4385.359863  11673.905273  299.042725  11374.862549        0.0  299.042725      199.042725     3.0     11673.905273          True           True
3   11763.862549   11474.862549  4385.359863  11763.862549  389.000000  11474.862549        0.0  289.000000      189.000000     4.0     11673.905273         False           True
4   11763.862549   11673.883789  4385.359863  11763.862549    2.000000  11673.883789        0.0   89.978760       89.000000     3.0     11673.905273         False           True
5   11763.862549   11688.862549  4396.359863  11763.862549    2.000000  11688.862549        0.0   75.000000        0.000000     3.0     11673.905273         False           True
6   11763.862549   11763.862549  4421.359863  11763.862549    2.000000  11763.862549        0.0    0.000000      -75.000000     4.0     11673.905273         False           True
7   11913.862549   11838.862549  4446.359863  11913.862549  150.000000  11838.862549        0.0   75.000000        0.000000     1.0     11913.862549          True           True
8   11913.862549   11913.862549  4471.359863  11913.862549    2.000000  11913.862549        0.0    0.000000      -75.000000     2.0     11913.862549         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:26]  --------------------------------------------------------------------------------
[08/09 16:29:26]  Iteration: 122 (0 solution, 121 counterexamples)
[08/09 16:29:32]  Generator returned sat in 2.773797 secs.
[08/09 16:29:32]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:32]  Improved gap from 905567/12288 to 73.4375
[08/09 16:29:33]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/09 16:29:33]  Verifer returned sat in 0.693642 secs.
[08/09 16:29:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   11520.415527   11220.372314  4348.010498  11520.415527  299.999756  11220.372314        0.0  300.043213      208.203613     9.0     11220.372314            -1             -1
1   11520.415527   11412.211670  4348.010498  11520.415527  300.000000  11412.211670        0.0  108.203857      108.203613     4.0     11220.372314         False           True
2   11712.168701   11412.254639  4348.010498  11712.168701  299.957031  11412.254639        0.0  299.914062      199.956787     5.0     11712.168701          True           True
3   11805.208252   11520.458252  4348.010498  11805.208252  392.953613  11520.458252        0.0  284.750000      192.996338     2.0     11712.168701         False           True
4   11805.208252   11712.126221  4348.010498  11805.208252    2.000000  11712.126221        0.0   93.082031       92.996338     3.0     11712.168701         False           True
5   11805.208252   11712.211914  4355.014160  11805.208252    2.000000  11712.211914        0.0   92.996338        0.000000     3.0     11712.168701         False           True
6   11805.208252   11805.208252  4381.576660  11805.208252    2.000000  11805.208252        0.0    0.000000      -73.437500     4.0     11712.168701         False           True
7   11952.083252   11878.645752  4408.139160  11952.083252  146.875000  11878.645752        0.0   73.437500        0.000000     1.0     11952.083252          True           True
8   11952.083252   11952.083252  4434.701660  11952.083252    2.000000  11952.083252        0.0    0.000000      -73.437500     2.0     11952.083252         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:33]  --------------------------------------------------------------------------------
[08/09 16:29:33]  Iteration: 123 (0 solution, 122 counterexamples)
[08/09 16:29:43]  Generator returned sat in 6.327722 secs.
[08/09 16:29:43]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:29:45]  Improved gap from 351/8192 to 39.0625
[08/09 16:29:46]  Improved number of small numbers from 50 to 97 out of a max of 110
[08/09 16:29:46]  Verifer returned sat in 2.966856 secs.
[08/09 16:29:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12475.335205   11902.523682  3757.698730  12475.335205    0.042969  11902.523682        0.0  572.811523      572.811523     3.0     11902.523682            -1             -1
1   12475.335205   12002.523682  3757.698730  12475.335205  372.768311  12002.523682        0.0  472.811523      472.811523     3.0     11902.523682         False          False
2   12475.335205   12102.523682  3757.698730  12475.335205  372.768311  12102.523682        0.0  372.811523      372.811523     4.0     11902.523682         False          False
3   12475.335205   12102.523682  3757.698730  12475.335205  372.768555  12102.523682        0.0  372.811523      272.811523     4.0     11902.523682          True           True
4   12475.335205   12302.523682  3757.698730  12475.335205  188.384277  12302.523682        0.0  172.811523      172.811523     5.0     11902.523682         False           True
5   12491.407959   12394.923340  3757.698730  12491.407959  188.884277  12394.923340        0.0   96.484619       88.884277     6.0     12491.407959          True           True
6   12491.407959   12491.365341  3757.698730  12491.407959   96.442139  12491.365341        0.0    0.042618      -11.115723     2.0     12491.407959         False           True
7   12541.586411   12502.523682  3818.636002  12541.586411   50.221069  12502.523682        0.0   39.062729        0.000000     1.0     12491.407959         False          False
8   12541.586411   12541.586411  3879.573486  12541.586411   27.110535  12541.586411        0.0    0.000000      -39.062515     2.0     12491.407959         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:29:47]  --------------------------------------------------------------------------------
[08/09 16:29:47]  Iteration: 124 (0 solution, 123 counterexamples)
[08/09 16:29:59]  Generator returned sat in 9.128459 secs.
[08/09 16:29:59]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:30:00]  Improved gap from 175/16384 to 73.4375
[08/09 16:30:00]  Improved number of small numbers from 50 to 110 out of a max of 110
[08/09 16:30:00]  Verifer returned sat in 0.485835 secs.
[08/09 16:30:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12296.784424   12037.784424  3622.437744  12296.784424  258.999756  12037.784424        0.0  259.000000      258.999756     3.0     12037.784424            -1             -1
1   12296.784424   12137.784668  3622.437744  12296.784424  258.978760  12137.784668        0.0  158.999756      158.999756     3.0     12296.784424         False          False
2   12530.888184   12137.784668  3622.437744  12530.888184  393.103516  12137.784668        0.0  393.103516      293.103516     3.0     12296.784424         False          False
3   12530.888184   12246.138184  3622.437744  12530.888184  393.103516  12246.138184        0.0  284.750000      193.103516     4.0     12296.784424         False          False
4   12530.888184   12437.784424  3622.437744  12530.888184    2.000000  12437.784424        0.0   93.103760       93.103516     3.0     12296.784424         False          False
5   12530.888184   12457.450684  3629.334229  12530.888184    2.000000  12457.450684        0.0   73.437500        0.000000     4.0     12296.784424         False          False
6   12530.888184   12530.888184  3655.896729  12530.888184    2.000000  12530.888184        0.0    0.000000      -73.437500     5.0     12296.784424         False          False
7   12677.763184   12604.325684  3682.459229  12677.763184  146.875000  12604.325684        0.0   73.437500        0.000000     1.0     12677.763184          True           True
8   12677.763184   12677.763184  3682.459229  12677.763184    2.000000  12677.763184        0.0    0.000000     -100.000000     2.0     12677.763184         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:00]  --------------------------------------------------------------------------------
[08/09 16:30:00]  Iteration: 125 (0 solution, 124 counterexamples)
[08/09 16:30:10]  Generator returned sat in 5.959498 secs.
[08/09 16:30:10]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:30:12]  Improved gap from 175/8192 to 68.75
[08/09 16:30:12]  Improved number of small numbers from 45 to 110 out of a max of 110
[08/09 16:30:12]  Verifer returned sat in 2.157450 secs.
[08/09 16:30:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   13794.489746   13294.468262  3080.459229  13794.489746    0.042725  13294.468262        0.0  500.021484      400.021484     9.0     13294.468262            -1             -1
1   13794.489746   13494.468262  3080.459229  13794.489746    0.021484  13494.468262        0.0  300.021484      300.021484     2.0     13794.489746         False           True
2   13794.489746   13594.468262  3080.459229  13794.489746  300.021240  13594.468262        0.0  200.021484      200.021484     3.0     13794.489746         False          False
3   13946.457520   13639.468262  3080.459229  13946.457520  351.989258  13639.468262        0.0  306.989258      251.989258     4.0     13794.489746         False           True
4   13946.457520   13794.446777  3080.459229  13946.457520  174.500000  13794.446777        0.0  152.010742      151.989258     5.0     13794.489746         False           True
5   13946.457520   13794.468262  3080.459229  13946.457520  151.989258  13794.468262        0.0  151.989258       51.989258     6.0     13794.489746         False           True
6   13946.457520   13894.468262  3111.709229  13946.457520  102.000000  13894.468262        0.0   51.989258      -16.760742     4.0     13794.489746         False           True
7   14023.968262   13963.218262  3142.959229  14023.968262  129.500000  13963.218262        0.0   60.750000       -8.000000     1.0     13794.489746         False           True
8   14049.604004   14031.968262  3174.208984  14049.604004   86.385742  14031.968262        0.0   17.635742      -51.114502     1.0     13794.489746         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:13]  --------------------------------------------------------------------------------
[08/09 16:30:13]  Iteration: 126 (0 solution, 125 counterexamples)
[08/09 16:30:21]  Generator returned sat in 4.943977 secs.
[08/09 16:30:21]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 16:30:21]  Improved gap from 175/8192 to 73.4375
[08/09 16:30:22]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/09 16:30:22]  Verifer returned sat in 0.547634 secs.
[08/09 16:30:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12601.436035   12501.414795  3973.512451  12601.436035    0.042725  12501.414795        0.0  100.02124      100.021240     4.0     12501.414795            -1             -1
1   12601.436035   12601.414795  3973.512451  12601.436035    0.021484  12601.414795        0.0    0.02124        0.021240     5.0     12601.436035         False          False
2   12985.164795   12601.414795  3973.512451  12985.164795  383.750000  12601.414795        0.0  383.75000      283.750000     5.0     12601.436035         False           True
3   12985.164795   12701.414795  3973.512451  12985.164795  383.750000  12701.414795        0.0  283.75000      183.750000     2.0     12601.436035         False           True
4   12985.164795   12892.061035  3973.512451  12985.164795    2.000000  12892.061035        0.0   93.10376       83.750000     3.0     12601.436035         False          False
5   12985.164795   12911.727295  3989.762451  12985.164795    2.000000  12911.727295        0.0   73.43750        0.000000     4.0     12601.436035         False          False
6   12985.164795   12985.164795  4016.324951  12985.164795    2.000000  12985.164795        0.0    0.00000      -73.437500     5.0     12601.436035         False          False
7   13132.039795   13058.602295  4042.887451  13132.039795  146.875000  13058.602295        0.0   73.43750        0.000000     1.0     13132.039795          True           True
8   13132.039795   13132.039795  4042.887695  13132.039795    2.000000  13132.039795        0.0    0.00000      -99.999756     2.0     13132.039795         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:22]  --------------------------------------------------------------------------------
[08/09 16:30:22]  Iteration: 127 (0 solution, 126 counterexamples)
[08/09 16:30:40]  Generator returned sat in 14.396385 secs.
[08/09 16:30:40]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 16:30:41]  Improved gap from 1/80 to 71.875
[08/09 16:30:41]  Improved number of small numbers from 60 to 78 out of a max of 110
[08/09 16:30:41]  Verifer returned sat in 0.951192 secs.
[08/09 16:30:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   11953.691162   11744.933350  3973.512451  11953.691162  208.761475  11744.933350        0.0  208.757812      208.757617     5.0     11744.933350            -1             -1
1   11953.693359   11844.933545  3973.512451  11953.693359  208.760010  11844.933545        0.0  108.759814      108.759814     5.0     11953.693359         False           True
2   12241.182295   11844.933545  3973.512451  12241.182295  396.248750  11844.933545        0.0  396.248750      296.248750     5.0     11953.693359         False           True
3   12241.182295   11953.692295  3973.512451  12241.182295  396.248750  11953.692295        0.0  287.490000      196.248750     3.0     11953.693359         False           True
4   12241.182295   12144.933350  3973.512451  12241.182295    0.010000  12144.933350        0.0   96.248945       96.248750     3.0     11953.693359         False          False
5   12241.182295   12169.307129  3977.263701  12241.182295    0.010000  12169.307129        0.0   71.875166        0.000000     4.0     11953.693359         False          False
6   12241.182295   12241.182295  4005.388701  12241.182295    0.010000  12241.182295        0.0    0.000000      -71.875000     5.0     11953.693359         False          False
7   12384.932295   12313.057295  4033.513701  12384.932295  143.750000  12313.057295        0.0   71.875000        0.000000     1.0     12384.932295          True           True
8   12384.932295   12384.932295  4061.638672  12384.932295    0.010000  12384.932295        0.0    0.000000      -71.875029     2.0     12384.932295         False          False
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:42]  --------------------------------------------------------------------------------
[08/09 16:30:42]  Iteration: 128 (0 solution, 127 counterexamples)
[08/09 16:30:55]  Generator returned sat in 10.302156 secs.
[08/09 16:30:56]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:30:58]  Improved gap from 1611199/131072 to 42.1875
[08/09 16:30:58]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/09 16:30:58]  Verifer returned sat in 2.302540 secs.
[08/09 16:30:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12029.505127   11512.962158  4205.483887  12029.505127    0.042480  11512.962158        0.0  516.542969      516.542969     9.0     11512.962158            -1             -1
1   12029.505127   11612.919434  4205.483887  12029.505127    0.042480  11612.919434        0.0  416.585693      416.542969     3.0     11512.962158         False           True
2   12029.505127   11612.962158  4205.483887  12029.505127    0.042725  11612.962158        0.0  416.542969      316.542969     4.0     11512.962158          True           True
3   12029.505127   11712.962402  4205.483887  12029.505127  316.500000  11712.962402        0.0  316.542725      216.542969     4.0     11512.962158          True           True
4   12029.505127   11912.962158  4205.483887  12029.505127  316.500000  11912.962158        0.0  116.542969      116.542969     5.0     12029.505127          True           True
5   12072.712158   11991.337158  4205.483887  12072.712158  159.750000  11991.337158        0.0   81.375000       59.750000     6.0     12029.505127         False           True
6   12072.712158   12029.547607  4245.733887  12072.712158   81.375000  12029.547607        0.0   43.164551        0.000000     2.0     12029.505127         False           True
7   12072.712158   12072.712158  4303.546387  12072.712158   42.187500  12072.712158        0.0    0.000000      -42.187500     3.0     12029.505127         False          False
8   12114.899658   12114.899658  4361.358643  12114.899658   42.187500  12114.899658        0.0    0.000000      -42.187744     1.0     12114.899658          True           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:30:58]  --------------------------------------------------------------------------------
[08/09 16:30:58]  Iteration: 129 (0 solution, 128 counterexamples)
[08/09 16:31:05]  Generator returned sat in 3.296449 secs.
[08/09 16:31:05]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 16:31:08]  Improved gap from 349/16384 to 39.0625
[08/09 16:31:08]  Improved number of small numbers from 58 to 110 out of a max of 110
[08/09 16:31:08]  Verifer returned sat in 2.714710 secs.
[08/09 16:31:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14299.287109   13660.224365  4205.483887  14299.287109    0.042480  13660.224365        0.0  639.062744      639.062744     9.0     13660.224365            -1             -1
1   14299.287109   13760.224365  4205.483887  14299.287109    0.042480  13760.224365        0.0  539.062744      539.062744     3.0     13660.224365         False           True
2   14299.287109   13860.224365  4205.483887  14299.287109    0.042725  13860.224365        0.0  439.062744      439.062744     4.0     13660.224365         False          False
3   14299.287109   13860.224365  4205.483887  14299.287109  149.285714  13860.224365        0.0  439.062744      339.062744     4.0     13660.224365          True           True
4   14299.287109   14060.224365  4205.483887  14299.287109   76.142857  14060.224365        0.0  239.062744      239.062744     5.0     13660.224365         False           True
5   14299.287109   14160.224365  4205.483887  14299.287109   76.142857  14160.224365        0.0  139.062744      139.062744     6.0     14299.287109          True           True
6   14299.287109   14260.182129  4205.483887  14299.287109   39.571429  14260.182129        0.0   39.104980       39.062744     7.0     14299.287109         False           True
7   14299.287109   14260.224609  4266.421143  14299.287109   21.285714  14260.224609        0.0   39.062500        0.000000     8.0     14299.287109         False           True
8   14299.287109   14299.287109  4266.421143  14299.287109   12.142857  14299.287109        0.0    0.000000     -100.000000     9.0     14299.287109         False           True
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[08/09 16:31:09]  --------------------------------------------------------------------------------
[08/09 16:31:09]  Iteration: 130 (0 solution, 129 counterexamples)
[08/09 16:31:21]  Generator returned unsat in 8.932543 secs.
[08/09 16:31:21]  [96mNo more solutions found[0m
[08/09 16:31:21]  Final solutions:
[08/09 16:31:21]  Took 815.604226 secs.
