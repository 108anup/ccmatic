[08/15 12:53:04]  --------------------------------------------------------------------------------
[08/15 12:53:04]  Iteration: 1 (0 solution, 0 counterexamples)
[08/15 12:53:04]  Generator returned sat in 0.004885 secs.
[08/15 12:53:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:05]  Improved gap from 0.1 to 100
[08/15 12:53:05]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 12:53:05]  Verifer returned sat in 0.315704 secs.
[08/15 12:53:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0         -529.0         -829.0     829.0       -529.0     266.0       -829.0        0.0    300.0           300.0     9.0           -829.0            -1             -1     -1
1         -529.0         -795.0     829.0       -529.0     265.9       -795.0        0.0    266.0           200.0     8.0           -529.0         False           True  False
2         -529.0         -629.1     829.0       -529.0     265.9       -629.1        0.0    100.1           100.0     4.0           -529.0         False          False  False
3         -529.0         -629.0     829.0       -529.0     100.1       -629.0        0.0    100.0             0.0     4.0           -529.0         False          False  False
4          -27.8         -529.0     829.0        -27.8     601.2       -529.0      201.2    300.0           200.0     5.0           -529.0         False          False  False
5         1407.6         -429.0     829.0       1407.6    1735.4       -429.0     1536.6    300.0           200.0     2.0           -529.0         False          False   True
6         4979.6         -229.0     829.0       4979.6    3872.0       -229.0     5008.6    200.0           200.0     3.0           -529.0         False          False   True
7        13324.6         -129.0     829.0      13324.6    8545.0       -129.0    13253.6    200.0           200.0     3.0           -529.0         False          False   True
8        31015.6         -129.0     829.0      31015.6   17891.0       -129.0    30844.6    300.0           200.0     3.0           -529.0         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=200.[0m
[08/15 12:53:05]  --------------------------------------------------------------------------------
[08/15 12:53:05]  Iteration: 2 (0 solution, 1 counterexamples)
[08/15 12:53:05]  Generator returned sat in 0.042173 secs.
[08/15 12:53:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:06]  Improved gap from 0.000625 to 100
[08/15 12:53:06]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 12:53:06]  Verifer returned sat in 0.288033 secs.
[08/15 12:53:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     -229.13125     -427.80500  629.02375   -229.13125  300.000000   -427.80500    0.00000  198.67375       198.67375     9.0       -427.80500            -1             -1     -1
1     -127.80625     -327.80500  629.02375   -127.80625  299.998750   -327.80500    0.00000  199.99875       199.99875     9.0       -127.80625         False           True  False
2     -127.80625     -229.13125  629.02375   -127.80625  199.998750   -229.13125    0.00000  101.32500        99.99875     9.0       -127.80625         False           True  False
3      572.19750     -127.80500  629.02375    572.19750  801.328750   -127.80500    0.00125  700.00125       700.00125     1.0       -127.80625         False           True  False
4      572.19750     -127.80375  629.02375    572.19750    0.010000   -127.80375    0.00125  700.00000       600.00125     2.0       -127.80625         False          False   True
5      572.19750      -27.80500  629.02375    572.19750  299.011875    -27.80500    0.00125  600.00125       500.00125     3.0       -127.80625         False          False   True
6      572.19750       72.59550  629.02375    572.19750  600.001250     72.59550    0.00125  499.60075       400.00125     4.0       -127.80625         False          False   True
7      972.19875      272.19375  629.02375    972.19875  899.602000    272.19375    0.00250  700.00250       700.00125     5.0       -127.80625         False          False   True
8      972.19875      272.19500  629.02375    972.19875    0.010000    272.19500    0.00250  700.00125       600.00125     6.0       -127.80625         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=560001/800.[0m
[08/15 12:53:06]  --------------------------------------------------------------------------------
[08/15 12:53:06]  Iteration: 3 (0 solution, 2 counterexamples)
[08/15 12:53:07]  Generator returned sat in 0.063830 secs.
[08/15 12:53:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:07]  Improved gap from 0.0 to 100
[08/15 12:53:08]  Improved number of small numbers from 78 to 80 out of a max of 114
[08/15 12:53:08]  Verifer returned sat in 1.758432 secs.
[08/15 12:53:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -229.131348    -262.447770  629.02375  -229.131348    0.049805  -262.447770    0.050000   33.266423       33.266423     9.0       -262.44777            -1             -1     -1
1    -229.131348    -229.231104  629.02375  -229.131348    0.050049  -229.231104    0.050000    0.049756      -66.733577     3.0       -262.44777         False           True   True
2     137.602230    -129.181104  629.02375   137.602230  366.783333  -129.181104    0.050000  266.733333      200.000000     1.0       -262.44777         False          False   True
3     237.652230     -62.447770  629.02375   237.652230  366.783333   -62.447770    0.050000  300.050000      200.050000     2.0       -262.44777         False          False   True
4     521.993896      37.552230  629.02375   521.993896  584.391667    37.552230  184.391667  300.050000      200.050000     3.0       -262.44777         False          False   True
5     622.118896     137.552230  629.02375   622.118896  400.175000   137.552230  184.516667  300.050000      200.050000     4.0       -262.44777         False          False   True
6     722.168896     337.552230  629.02375   722.168896  400.100000   337.552230  184.566667  200.050000      200.050000     3.0        537.60223          True           True   True
7    1122.118896     429.552230  629.02375  1122.118896  600.000000   429.552230  484.516667  208.050000      200.050000     3.0        537.60223         False          False   True
8    1502.068896     437.652344  629.02375  1502.068896  588.000000   437.652344  764.466667  299.949886      200.050000     3.0        537.60223         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=4001/20.[0m
[08/15 12:53:09]  --------------------------------------------------------------------------------
[08/15 12:53:09]  Iteration: 4 (0 solution, 3 counterexamples)
[08/15 12:53:09]  Generator returned sat in 0.162961 secs.
[08/15 12:53:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:10]  Improved gap from 0.025 to 100
[08/15 12:53:10]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:53:10]  Verifer returned sat in 0.982164 secs.
[08/15 12:53:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -659.937988    -859.937988  1126.513672  -659.937988    0.050049  -859.937988   0.050049  199.949951       99.949951     8.0      -859.937988            -1             -1     -1
1    -659.937988    -660.037842  1126.513672  -659.937988  199.900000  -660.037842   0.050049    0.049805       -0.050049     4.0      -859.937988         False           True   True
2    -460.137695    -659.937988  1126.513672  -460.137695  199.850098  -659.937988   0.050049  199.750244       99.750244     1.0      -460.187744          True           True  False
3    -259.787842    -459.937988  1126.513672  -259.787842  400.100098  -459.937988   0.050049  200.100098      200.100098     1.0      -460.187744         False          False  False
4     340.212158    -459.887939  1126.513672   340.212158  800.100098  -459.887939   0.100098  800.000000      700.050049     2.0      -460.187744         False          False  False
5     340.212158    -359.937744  1126.513672   340.212158  199.149902  -359.937744   0.100098  700.049805      600.050049     3.0      -460.187744         False          False   True
6     340.212158    -259.937988  1126.513672   340.212158  499.150146  -259.937988   0.100098  600.050049      500.050049     4.0       340.112061          True           True  False
7     439.312256    -159.937988  1126.513672   439.312256  699.150146  -159.937988   0.100098  599.150146      499.150146     4.0       340.112061         False           True  False
8     839.262207      40.062012  1126.513672   839.262207  999.100098    40.062012  99.150146  700.050049      700.050049     5.0       340.112061         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=2, buffer=2867405/4096.[0m
[08/15 12:53:11]  --------------------------------------------------------------------------------
[08/15 12:53:11]  Iteration: 5 (0 solution, 4 counterexamples)
[08/15 12:53:11]  Generator returned sat in 0.216857 secs.
[08/15 12:53:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:12]  Improved number of small numbers from 58 to 65 out of a max of 113
[08/15 12:53:12]  Verifer returned sat in 1.268642 secs.
[08/15 12:53:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -659.938232    -860.000488  1126.513672  -659.938232    0.049805  -860.000488    0.050049  200.012207      100.012268     9.0      -860.000488            -1             -1     -1
1    -659.938232    -727.292175  1126.513672  -659.938232  200.000000  -727.292175    0.050049   67.303894        0.012268     9.0      -860.000488         False           True   True
2    -527.254639    -659.975525  1126.513672  -527.254639  199.987488  -659.975525    0.050049  132.670837       32.695862     1.0      -527.304688          True           True  False
3    -459.937988    -460.000549  1126.513672  -459.937988  199.987488  -460.000549    0.050049    0.012512        0.012512     1.0      -527.304688         False          False  False
4     -59.975525    -459.975525  1126.513672   -59.975525  399.974976  -459.975525  100.037537  299.962463      199.987488     1.0      -527.304688         False          False  False
5      40.036987    -360.000549  1126.513672    40.036987  399.974976  -360.000549  100.050049  299.987488      199.987488     2.0      -527.304688         False          False   True
6     189.011963    -259.600549  1126.513672   189.011963  448.962463  -259.600549  149.025024  299.587488      199.987488     3.0        39.986938          True           True   True
7     189.024475     -60.000549  1126.513672   189.024475  299.600000   -60.000549  149.025024  100.000000      100.000000     2.0        39.986938         False           True   True
8     688.224475      39.999268  1126.513672   688.224475  599.200000    39.999268  448.237537  199.987671      199.987488     2.0        39.986938         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=3276595/16384.[0m
[08/15 12:53:13]  --------------------------------------------------------------------------------
[08/15 12:53:13]  Iteration: 6 (0 solution, 5 counterexamples)
[08/15 12:53:14]  Generator returned sat in 0.316581 secs.
[08/15 12:53:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:14]  Improved gap from 0.1 to 100
[08/15 12:53:14]  Improved number of small numbers from 102 to 102 out of a max of 114
[08/15 12:53:14]  Verifer returned sat in 0.791025 secs.
[08/15 12:53:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -627.404688    -727.404688  1126.513672  -627.404688  200.000000  -727.404688        0.1   99.900000       99.900000     1.0      -727.404688            -1             -1     -1
1    -527.404688    -627.404688  1126.513672  -527.404688  199.900000  -627.404688        0.1   99.900000       99.900000     1.0      -527.504688         False          False   True
2    -527.204687    -527.404688  1126.513672  -527.204687  100.100000  -527.404688        0.1    0.100000        0.100000     1.0      -527.304688         False          False   True
3    -438.460243    -438.660243  1126.513672  -438.460243   88.844444  -438.660243        0.1    0.100000      -11.155556     1.0      -438.560243         False          False   True
4    -305.293576    -327.404688  1126.513672  -305.293576  133.266667  -327.404688        0.1   22.011111       22.011111     1.0      -438.560243         False          False   True
5    -127.404687    -327.404688  1126.513672  -127.404687  199.900000  -327.404688        0.1  199.900000       99.900000     1.0      -438.560243         False          False   True
6     -27.454687    -127.404687  1126.513672   -27.454687  299.850000  -127.404687        0.1   99.850000       99.850000     1.0      -438.560243         False          False   True
7     322.470312     -27.404688  1126.513672   322.470312  449.775000   -27.404688        0.1  349.775000      349.775000     1.0      -438.560243         False          False   True
8     647.357813      47.157812  1126.513672   647.357813  674.662500    47.157812        0.1  600.100000      574.662500     2.0      -438.560243         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=45981/80.[0m
[08/15 12:53:15]  --------------------------------------------------------------------------------
[08/15 12:53:15]  Iteration: 7 (0 solution, 6 counterexamples)
[08/15 12:53:15]  Generator returned sat in 0.023346 secs.
[08/15 12:53:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:16]  Improved gap from 0.0 to 100
[08/15 12:53:17]  Improved number of small numbers from 33 to 38 out of a max of 114
[08/15 12:53:17]  Verifer returned sat in 1.796163 secs.
[08/15 12:53:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -869.705078   -1119.740276  1418.849261  -869.705078    0.099854 -1119.740276  150.135146   99.900052       -0.099948     1.0     -1119.740276            -1             -1     -1
1    -769.605130   -1019.740276  1418.849261  -769.605130  200.000000 -1019.740276  150.135146  100.000000        0.000000     1.0     -1119.740276         False          False   True
2    -620.780130    -819.740276  1418.849261  -620.780130  248.825000  -819.740276  150.135146   48.825000       48.825000     1.0     -1119.740276         False          False   True
3    -569.555130    -719.790276  1418.849261  -569.555130  100.050000  -719.790276  150.135146    0.100000        0.050000     1.0      -719.690276         False          False   True
4    -420.580130    -685.740276  1418.849261  -420.580130  149.075000  -685.740276  150.235146  114.925000       48.925000     1.0      -719.690276         False          False   True
5    -369.505130    -570.715276  1418.849261  -369.505130  166.000000  -570.715276  150.235146   50.975000        0.000000     1.0      -719.690276         False          False   True
6    -172.480130    -419.740276  1418.849261  -172.480130  248.000000  -419.740276  198.335146   48.925000       48.925000     1.0      -719.690276         False          False   True
7     -72.380130    -319.740276  1418.849261   -72.380130  149.025000  -319.740276  198.435146   48.925000       48.925000     1.0      -719.690276         False          False   True
8      60.694870    -270.715088  1418.849261    60.694870  182.000000  -270.715088  231.510146   99.899812       48.925000     1.0      -719.690276         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1957/40.[0m
[08/15 12:53:18]  --------------------------------------------------------------------------------
[08/15 12:53:18]  Iteration: 8 (0 solution, 7 counterexamples)
[08/15 12:53:18]  Generator returned sat in 0.029908 secs.
[08/15 12:53:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:18]  Improved number of small numbers from 59 to 113 out of a max of 113
[08/15 12:53:18]  Verifer returned sat in 0.339531 secs.
[08/15 12:53:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -938.605713    -978.555420  1365.664551  -938.605713  162.549805  -978.555420    0.000000   39.949707       27.949707     7.0      -978.555420            -1             -1     -1
1    -816.055420    -938.555420  1365.664551  -816.055420  162.500000  -938.555420    0.050049  122.449951       50.449951     1.0      -816.105469         False           True  False
2    -716.005615    -816.055664  1365.664551  -716.005615  222.499756  -816.055664    0.099854   99.950195       50.449951     1.0      -816.105469         False          False   True
3    -493.505615    -669.555420  1365.664551  -493.505615  322.450195  -669.555420  122.599854   53.449951       50.449951     1.0      -816.105469         False          False   True
4    -393.455566    -575.555420  1365.664551  -393.455566  153.500000  -575.555420  122.649902   59.449951       50.449951     1.0      -816.105469         False          False   True
5    -272.405518    -482.055664  1365.664551  -272.405518  180.500000  -482.055664  143.699951   65.950195       50.449951     1.0      -816.105469         False          False   True
6    -172.355713    -366.555420  1365.664551  -172.355713  166.000000  -366.555420  143.749756   50.449951       50.449951     1.0      -816.105469         False          False   True
7     -72.305664    -266.555420  1365.664551   -72.305664  150.500000  -266.555420  143.799805   50.449951       50.449951     1.0      -816.105469         False          False   True
8      30.744385    -216.055664  1365.664551    30.744385  153.500000  -216.055664  146.849854   99.950195       50.449951     1.0      -816.105469         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=206643/4096.[0m
[08/15 12:53:19]  --------------------------------------------------------------------------------
[08/15 12:53:19]  Iteration: 9 (0 solution, 8 counterexamples)
[08/15 12:53:19]  Generator returned sat in 0.029873 secs.
[08/15 12:53:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:20]  Improved gap from 0.1 to 46.875
[08/15 12:53:20]  Improved number of small numbers from 110 to 114 out of a max of 114
[08/15 12:53:20]  Verifer returned sat in 0.569518 secs.
[08/15 12:53:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -714.105469    -814.055420  1365.664307  -714.105469   103.474854  -814.055420     0.000000   99.949951       99.949951     9.0      -814.055420            -1             -1     -1
1    -710.630371    -714.055420  1365.664307  -710.630371   103.425049  -714.055420     0.000000    3.425049        3.425049     1.0      -710.630371         False           True  False
2    -710.630371    -714.055420  1365.664551  -710.630371     0.050049  -714.055420     0.000000    3.425049      -96.574707     1.0      -710.630371         False          False  False
3     815.944580    -614.055664  1365.664551   815.944580  1530.000000  -614.055664  1326.525146  103.475098        3.475098     1.0      -710.630371         False          False  False
4    1476.469482    -414.055664  1365.664551  1476.469482   764.000000  -414.055664  1887.050049    3.475098        3.475098     1.0      -710.630371         False          False   True
5    1853.994385    -410.530273  1365.664551  1853.994385   381.000000  -410.530273  2164.574951   99.949707        3.475098     1.0      -710.630371         False          False   True
6    1943.544678    -267.855469  1372.589355  1943.544678   189.500000  -267.855469  2164.574951   46.825195       -0.049805     1.0      -710.630371         False          False   True
7    1990.469482    -220.980469  1425.714355  1990.469482    93.750000  -220.980469  2164.574951   46.875000        0.000000     1.0      -710.630371         False          False   True
8    1990.469482    -174.105469  1425.714355  1990.469482    45.875000  -174.105469  2164.574951    0.000000     -100.000000     2.0      -710.630371         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=7117/2048.[0m
[08/15 12:53:20]  --------------------------------------------------------------------------------
[08/15 12:53:20]  Iteration: 10 (0 solution, 9 counterexamples)
[08/15 12:53:21]  Generator returned sat in 0.047658 secs.
[08/15 12:53:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:22]  Improved gap from 46.775390625 to 46.875
[08/15 12:53:22]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:53:22]  Verifer returned sat in 1.037420 secs.
[08/15 12:53:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1457.825684   -1457.828125  1365.674561 -1457.825684     0.002686 -1457.828125     0.000000    0.002441        0.002441     2.0     -1457.828125            -1             -1     -1
1   -1357.828125   -1457.828125  1365.674561 -1357.828125   100.000000 -1457.828125     0.000000  100.000000        0.000000     2.0     -1457.828125         False           True  False
2   -1257.825439   -1357.828125  1365.674561 -1257.825439   200.002686 -1357.828125     0.000000  100.002686        0.002686     2.0     -1457.828125         False           True  False
3     156.171875   -1257.828125  1365.674561   156.171875  1514.000000 -1257.828125  1313.995117  100.004883        0.004883     2.0     -1457.828125          True           True  False
4     812.166992   -1057.828369  1365.674561   812.166992   756.000000 -1057.828369  1869.990234    0.005127        0.004883     1.0     -1057.823242          True           True   True
5    1189.161865   -1057.820801  1365.674561  1189.161865   377.000000 -1057.820801  2146.985107   99.997559        0.004883     1.0     -1057.823242         False          False   True
6    1276.664307    -917.195801  1378.167236  1276.664307   187.500000  -917.195801  2146.985107   46.875000        0.000000     1.0     -1057.823242         False          False   True
7    1323.539307    -870.320801  1431.292236  1323.539307    93.750000  -870.320801  2146.985107   46.875000        0.000000     2.0     -1057.823242         False          False   True
8    1323.539307    -823.445801  1484.416992  1323.539307     0.010000  -823.445801  2146.985107    0.000000      -46.875244     2.0      -823.445801          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=5/1024.[0m
[08/15 12:53:22]  --------------------------------------------------------------------------------
[08/15 12:53:22]  Iteration: 11 (0 solution, 10 counterexamples)
[08/15 12:53:23]  Generator returned sat in 0.406108 secs.
[08/15 12:53:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:24]  Improved gap from 0.000625 to 100
[08/15 12:53:24]  Improved number of small numbers from 73 to 77 out of a max of 114
[08/15 12:53:24]  Verifer returned sat in 1.169816 secs.
[08/15 12:53:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -244.430664    -344.430566  1365.674561  -244.430664  400.200195  -344.430566        0.1   99.899902       -0.100098     2.0      -344.430566            -1             -1     -1
1      55.769434    -244.430566  1365.674561    55.769434  400.100000  -244.430566        0.1  300.100000      200.100000     1.0        55.669434         False          False   True
2     155.669434    -144.430566  1365.674561   155.669434  400.000000  -144.430566        0.1  300.000000      200.000000     2.0       155.569434         False          False   True
3     155.669434      55.469434  1365.674561   155.669434    0.100000    55.469434        0.1  100.100000      100.000000     3.0       155.569434         False          False   True
4     455.569434     140.969434  1365.674561   455.569434  400.000000   140.969434        0.1  314.500000      299.900000     3.0       155.569434         False          False   True
5     926.469434     155.569434  1365.674561   926.469434  785.400000   155.569434        0.1  770.800000      670.800000     4.0       155.569434         False          False   True
6     926.469434     326.269434  1365.674561   926.469434  449.000000   326.269434        0.1  600.100000      570.800000     3.0       155.569434         False           True  False
7     926.469434     455.569434  1365.674561   926.469434  405.200000   455.569434        0.1  470.800000      470.800000     3.0       155.569434         False          False  False
8     926.569434     555.569336  1365.674561   926.569434  470.900000   555.569336        0.1  370.900098      370.900000     4.0       155.569434         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1374003/2048.[0m
[08/15 12:53:25]  --------------------------------------------------------------------------------
[08/15 12:53:25]  Iteration: 12 (0 solution, 11 counterexamples)
[08/15 12:53:26]  Generator returned sat in 0.378873 secs.
[08/15 12:53:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:26]  Improved gap from 0.0 to 100
[08/15 12:53:26]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/15 12:53:26]  Verifer returned sat in 0.486355 secs.
[08/15 12:53:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1521.005371   -1921.105469  1414.674561 -1521.005371     0.024902 -1921.105469    0.100098  400.000000      300.000000     3.0     -1921.105469            -1             -1   False
1   -1521.005371   -1821.105469  1414.674561 -1521.005371   399.975000 -1821.105469    0.100098  300.000000      200.000000     4.0     -1921.105469         False          False   False
2   -1521.005371   -1621.130371  1414.674561 -1521.005371   299.975098 -1621.130371    0.100098  100.024902      100.000000     4.0     -1521.105469         False          False   False
3   -1521.005371   -1621.105469  1414.674561 -1521.005371    38.375000 -1621.105469    0.100098  100.000000        0.000000     4.0     -1521.105469         False          False   False
4   -1521.005371   -1521.105469  1414.674561 -1521.005371    75.750000 -1521.105469    0.100098    0.000000     -100.000000     5.0     -1521.105469         False          False   False
5   -1370.505371   -1421.105469  1414.674561 -1370.505371   150.500000 -1421.105469    0.100098   50.500000      -49.500000     1.0     -1521.105469         False          False   False
6   -1121.005371   -1221.105469  1414.674561 -1121.005371   300.000000 -1221.105469    0.100098  100.000000      100.000000     1.0     -1521.105469         False          False   False
7    -622.005371   -1221.080811  1414.674561  -622.005371   599.000000 -1221.080811    0.100098  598.975342      499.000000     2.0     -1521.105469         False          False   False
8     -23.980713   -1121.105469  1414.674561   -23.980713  1197.000000 -1121.105469  497.099854  600.024902      500.024902     3.0     -1521.105469         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1024051/2048.[0m
[08/15 12:53:27]  --------------------------------------------------------------------------------
[08/15 12:53:27]  Iteration: 13 (0 solution, 12 counterexamples)
[08/15 12:53:27]  Generator returned sat in 0.049298 secs.
[08/15 12:53:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:27]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/15 12:53:27]  Verifer returned sat in 0.145965 secs.
[08/15 12:53:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1521.005371   -1921.105469  1414.674561 -1521.005371     0.024902 -1921.105469    0.100098  400.000000      300.000000     4.0     -1921.105469            -1             -1   False
1   -1521.005371   -1821.105469  1414.674561 -1521.005371   399.975000 -1821.105469    0.100098  300.000000      200.000000     4.0     -1921.105469         False          False   False
2   -1521.005371   -1621.130371  1414.674561 -1521.005371   299.975098 -1621.130371    0.100098  100.024902      100.000000     4.0     -1521.105469         False          False   False
3   -1521.005371   -1621.105469  1414.674561 -1521.005371    37.500000 -1621.105469    0.100098  100.000000        0.000000     4.0     -1521.105469         False          False   False
4   -1521.005371   -1521.105469  1414.674561 -1521.005371    75.000000 -1521.105469    0.100098    0.000000     -100.000000     5.0     -1521.105469         False          False   False
5   -1371.005371   -1421.105469  1414.674561 -1371.005371   150.000000 -1421.105469    0.100098   50.000000      -50.000000     1.0     -1521.105469         False          False   False
6   -1121.005371   -1221.105469  1414.674561 -1121.005371   300.000000 -1221.105469    0.100098  100.000000      100.000000     1.0     -1521.105469         False          False   False
7    -621.005371   -1221.080811  1414.674561  -621.005371   600.000000 -1221.080811    0.100098  599.975342      500.000000     2.0     -1521.105469         False          False   False
8     -20.980713   -1121.105469  1414.674561   -20.980713  1200.000000 -1121.105469  500.099854  600.024902      500.024902     3.0     -1521.105469         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1024051/2048.[0m
[08/15 12:53:28]  --------------------------------------------------------------------------------
[08/15 12:53:28]  Iteration: 14 (0 solution, 13 counterexamples)
[08/15 12:53:29]  Generator returned sat in 0.053441 secs.
[08/15 12:53:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:29]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/15 12:53:29]  Verifer returned sat in 0.146870 secs.
[08/15 12:53:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1521.005371   -1921.105469  1414.674316 -1521.005371     0.024902 -1921.105469    0.100098  400.000000      300.000000     4.0     -1921.105469            -1             -1   False
1   -1521.005371   -1821.105469  1414.674316 -1521.005371   399.975098 -1821.105469    0.100098  300.000000      200.000000     4.0     -1921.105469         False          False   False
2   -1521.005371   -1621.130615  1414.674316 -1521.005371   299.974854 -1621.130615    0.100098  100.025146      100.000000     4.0     -1521.105469         False          False   False
3   -1521.005371   -1621.105469  1414.674316 -1521.005371    37.000000 -1621.105469    0.100098  100.000000        0.000000     4.0     -1521.105469         False          False   False
4   -1521.005371   -1521.105469  1414.674316 -1521.005371    75.000000 -1521.105469    0.100098    0.000000     -100.000000     5.0     -1521.105469         False          False   False
5   -1370.005371   -1421.105469  1414.674316 -1370.005371   151.000000 -1421.105469    0.100098   51.000000      -49.000000     1.0     -1521.105469         False          False   False
6   -1118.005371   -1221.105713  1414.674316 -1118.005371   303.000000 -1221.105713    0.100098  103.000244      103.000000     1.0     -1521.105469         False          False   False
7    -614.005615   -1221.080811  1414.674316  -614.005615   607.000000 -1221.080811    0.100098  606.975098      506.999756     2.0     -1521.105469         False          False   False
8      -5.980713   -1118.105469  1414.674316    -5.980713  1215.000000 -1118.105469  508.100342  604.024414      507.024414     3.0     -1521.105469         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=519193/1024.[0m
[08/15 12:53:29]  --------------------------------------------------------------------------------
[08/15 12:53:29]  Iteration: 15 (0 solution, 14 counterexamples)
[08/15 12:53:30]  Generator returned sat in 0.532027 secs.
[08/15 12:53:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:30]  Improved gap from 49.489375 to 100
[08/15 12:53:31]  Improved number of small numbers from 97 to 102 out of a max of 114
[08/15 12:53:31]  Verifer returned sat in 0.727551 secs.
[08/15 12:53:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1621.005371   -1970.594238  1414.674316 -1621.005371     0.024658 -1970.594238     0.100098   349.48877        300.0000     6.0     -1970.594238            -1             -1     -1
1   -1621.005371   -1821.105469  1414.674316 -1621.005371   349.486250 -1821.105469     0.100098   200.00000        200.0000     6.0     -1970.594238         False          False   True
2   -1621.005371   -1721.105469  1414.674316 -1621.005371   199.997559 -1721.105469     0.100098   100.00000        100.0000     7.0     -1621.105469         False          False   True
3   -1621.005371   -1721.100469  1414.674316 -1621.005371     1.007324 -1721.100469     0.100098    99.99500          0.0000     8.0     -1621.105469         False          False   True
4   -1621.005371   -1621.105469  1414.674316 -1621.005371     0.010000 -1621.105469     0.100098     0.00000       -100.0000     9.0     -1621.105469         False          False   True
5   -1219.985371   -1421.105469  1414.674316 -1219.985371   401.020000 -1421.105469     0.100098   201.02000        201.0200     1.0     -1621.105469         False           True  False
6     -17.965371   -1321.105469  1414.674316   -17.965371  1403.040000 -1321.105469     0.100098  1303.04000       1303.0400     2.0     -1621.105469         False          False  False
7    2286.064629   -1221.105469  1414.674316  2286.064629  3607.070000 -1221.105469     0.100098  3507.07000       3507.0700     3.0     -1621.105469         False          False  False
8    6794.134629   -1121.105469  1414.674316  6794.134629  8015.140000 -1121.105469  4408.167598  3507.07250       3507.0725     3.0     -1621.105469         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1402829/400.[0m
[08/15 12:53:32]  --------------------------------------------------------------------------------
[08/15 12:53:32]  Iteration: 16 (0 solution, 15 counterexamples)
[08/15 12:53:34]  Generator returned sat in 1.538039 secs.
[08/15 12:53:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:36]  Improved gap from 0.000625 to 39.0625
[08/15 12:53:36]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/15 12:53:36]  Verifer returned sat in 2.058373 secs.
[08/15 12:53:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1747.994385   -2125.116699  1580.620361 -1747.994385    0.002686 -2125.116699   0.000000  377.122314      339.057373     5.0     -2125.116699            -1             -1   False
1   -1747.991699   -2087.051514  1580.620361 -1747.991699  377.125000 -2087.051514   0.000000  339.059814      239.060059     5.0     -2125.116699         False          False   False
2   -1747.991699   -1926.114258  1580.620361 -1747.991699    0.002500 -1926.114258   0.000000  178.122559      139.060059     4.0     -1747.991699         False          False   False
3   -1687.051758   -1787.051758  1580.620361 -1687.051758  239.062500 -1787.051758   0.000000  100.000000      100.000000     4.0     -1747.991699         False          False   False
4   -1447.986816   -1687.051758  1580.620361 -1447.986816  339.064941 -1687.051758   0.002441  239.062500      239.062500     2.0     -1747.991699         False          False   False
5   -1447.986816   -1587.051758  1580.620361 -1447.986816    1.000000 -1587.051758   0.002441  139.062500      139.062500     2.0     -1747.991699         False          False    True
6   -1447.986816   -1587.049316  1580.620361 -1447.986816    0.010000 -1587.049316   0.002441  139.060059       39.062500     3.0     -1747.991699         False          False    True
7   -1447.986816   -1487.051758  1641.557861 -1447.986816    0.010000 -1487.051758   0.002441   39.062500        0.000000     4.0     -1747.991699         False          False    True
8   -1447.986816   -1447.989258  1641.557861 -1447.986816    0.010000 -1447.989258   0.002441    0.000000     -100.000000     5.0     -1747.991699         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3825/16.[0m
[08/15 12:53:37]  --------------------------------------------------------------------------------
[08/15 12:53:37]  Iteration: 17 (0 solution, 16 counterexamples)
[08/15 12:53:37]  Generator returned sat in 0.072090 secs.
[08/15 12:53:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:39]  Improved gap from 39.0625 to 39.0625
[08/15 12:53:39]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:53:39]  Verifer returned sat in 2.126379 secs.
[08/15 12:53:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -517.110352    -717.110352  1380.627930  -517.110352    0.002500  -717.110352   0.000000  200.000000      100.000244     9.0      -717.110352            -1             -1     -1
1    -517.110352    -556.172852  1380.627930  -517.110352  199.999756  -556.172852   0.000000   39.062500        0.000244     4.0      -717.110352         False           True  False
2    -517.110352    -517.110352  1441.562744  -517.110352    0.002441  -517.110352   0.000000    0.000000      -39.064941     4.0      -517.110352         False          False  False
3    -278.047852    -378.045410  1441.562744  -278.047852  239.062500  -378.045410   0.000000   99.997559       99.997559     1.0      -517.110352         False          False  False
4     -38.980469    -278.045410  1441.562744   -38.980469  339.064941  -278.045410   0.002441  239.062500      239.062500     1.0      -517.110352         False          False  False
5     -38.980469    -278.042969  1441.562744   -38.980469    1.000000  -278.042969   0.002441  239.060059      139.062500     2.0      -517.110352         False          False   True
6     -38.980469    -178.045410  1441.562744   -38.980469    0.010000  -178.045410   0.002441  139.062500       39.062500     3.0      -517.110352         False          False   True
7     -38.980469     -78.045410  1502.500244   -38.980469    0.010000   -78.045410   0.002441   39.062500        0.000000     4.0      -517.110352         False          False   True
8     -38.980469     -38.982910  1502.500488   -38.980469    0.010000   -38.982910   0.002441    0.000000      -99.999756     5.0      -517.110352         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3825/16.[0m
[08/15 12:53:40]  --------------------------------------------------------------------------------
[08/15 12:53:40]  Iteration: 18 (0 solution, 17 counterexamples)
[08/15 12:53:42]  Generator returned sat in 1.592912 secs.
[08/15 12:53:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:43]  Improved gap from 0.00125 to 68.75
[08/15 12:53:44]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/15 12:53:44]  Verifer returned sat in 1.852570 secs.
[08/15 12:53:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -828.035400   -1028.032852  1460.307861  -828.035400    0.001221 -1028.032852    0.00125  199.996201       99.996377     2.0     -1028.032852            -1             -1     -1
1    -828.032852    -828.035352  1460.307861  -828.032852  199.998750  -828.035352    0.00125    0.001250       -0.001074     1.0     -1028.032852         False          False   True
2    -728.032852    -828.032852  1460.307861  -728.032852  100.001250  -828.032852    0.00125   99.998750       -0.001074     1.0      -728.034102         False          False   True
3    -678.032852    -728.032852  1491.557686  -678.032852  149.998750  -728.032852    0.00125   49.998750      -18.751250     1.0      -728.034102         False          False   True
4    -278.031602    -559.286602  1491.557686  -278.031602  450.000000  -559.286602  281.24375    0.011250        0.007500     1.0      -728.034102         False          False   True
5    -278.031602    -559.282852  1522.807686  -278.031602    0.010000  -559.282852  281.24375    0.007500      -68.742500     2.0      -728.034102         False          False   True
6     125.085898    -390.532852  1522.807686   125.085898  403.125000  -390.532852  515.61125    0.007500        0.007500     1.0      -728.034102         False          False   True
7     125.088398    -390.524102  1551.562686   125.088398    0.010000  -390.524102  515.61125    0.001250      -71.235000     1.0      -728.034102         False          False   True
8     378.230898    -319.287842  1551.562686   378.230898  253.143750  -319.287842  597.51125  100.007490        0.007500     1.0      -728.034102         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/400.[0m
[08/15 12:53:45]  --------------------------------------------------------------------------------
[08/15 12:53:45]  Iteration: 19 (0 solution, 18 counterexamples)
[08/15 12:53:47]  Generator returned sat in 1.727677 secs.
[08/15 12:53:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:47]  Improved gap from 0.0004166666666666667 to 100
[08/15 12:53:48]  Improved number of small numbers from 88 to 98 out of a max of 114
[08/15 12:53:48]  Verifer returned sat in 1.049117 secs.
[08/15 12:53:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1019.288086   -1119.287842  1551.562744 -1019.288086     0.050049 -1119.287842       0.05    99.949756       99.949756     1.0     -1119.287842            -1             -1     -1
1    -919.287842   -1019.287842  1551.562744  -919.287842   199.950000 -1019.287842       0.05    99.950000       99.950000     1.0     -1119.287842         False          False   True
2    -819.287842    -919.287842  1551.562744  -819.287842   199.950000  -919.287842       0.05    99.950000       99.950000     1.0     -1119.287842         False          False   True
3    -819.187842    -819.287842  1551.562744  -819.187842   100.050000  -819.287842       0.05     0.050000        0.050000     1.0      -819.237842         False          False   True
4     -70.162842    -819.287842  1551.562744   -70.162842   749.075000  -819.287842       0.05   749.075000      649.075000     1.0      -819.237842         False          False   True
5     703.374658    -719.287842  1551.562744   703.374658  1522.612500  -719.287842       0.05  1422.612500     1322.612500     2.0      -819.237842         False          False   True
6     804.374658    -519.287842  1551.562744   804.374658  1523.612500  -519.287842       0.05  1323.612500     1323.612500     3.0      -819.237842         False           True  False
7    1005.374658    -419.287842  1551.562744  1005.374658  1524.612500  -419.287842       0.05  1424.612500     1424.612500     4.0      1005.324658          True           True  False
8    1106.374658    -319.288086  1551.562744  1106.374658  1525.612500  -319.288086       0.10  1425.562744     1425.562500     5.0      1005.324658         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=22809/16.[0m
[08/15 12:53:49]  --------------------------------------------------------------------------------
[08/15 12:53:49]  Iteration: 20 (0 solution, 19 counterexamples)
[08/15 12:53:49]  Generator returned sat in 0.111343 secs.
[08/15 12:53:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:50]  Improved gap from 0.00125 to 100
[08/15 12:53:50]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:53:50]  Verifer returned sat in 0.650680 secs.
[08/15 12:53:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1469.056641   -1544.069092  1651.652588 -1469.056641     0.025000 -1544.069092   0.025146    74.987305       -0.025146     1.0     -1544.069092            -1             -1     -1
1   -1369.031494   -1469.056641  1651.652588 -1369.031494   175.012451 -1469.056641   0.025146   100.000000        0.000000     1.0     -1544.069092         False          False   True
2   -1269.056396   -1369.031738  1651.652588 -1269.056396   199.975098 -1369.031738   0.025146    99.950195       -0.024902     1.0     -1544.069092         False          False   True
3   -1269.006592   -1269.056641  1651.652588 -1269.006592   100.000000 -1269.056641   0.025146     0.024902      -99.975098     1.0     -1269.031738         False          False   True
4    -569.006592   -1169.056641  1651.652588  -569.006592   700.024902 -1169.056641   0.025146   600.024902      500.024902     1.0     -1269.031738         False          False   True
5     481.005859    -969.056641  1651.652588   481.005859  1650.037354  -969.056641   0.025146  1450.037354     1450.037354     2.0     -1269.031738         False          False   True
6     682.005859    -870.056641  1651.652588   682.005859  1651.037354  -870.056641   0.025146  1552.037354     1551.037354     3.0       681.980713          True           True  False
7     782.005859    -769.056641  1651.652588   782.005859  1652.037354  -769.056641   0.025146  1551.037354     1551.037354     4.0       681.980713         False           True  False
8     884.005859    -669.056641  1651.652588   884.005859  1653.037354  -669.056641   2.024902  1551.037598     1551.037598     5.0       681.980713         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3176525/2048.[0m
[08/15 12:53:51]  --------------------------------------------------------------------------------
[08/15 12:53:51]  Iteration: 21 (0 solution, 20 counterexamples)
[08/15 12:53:51]  Generator returned sat in 0.100255 secs.
[08/15 12:53:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:52]  Improved number of small numbers from 102 to 113 out of a max of 113
[08/15 12:53:52]  Verifer returned sat in 0.337301 secs.
[08/15 12:53:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1469.056885   -1543.531982  1651.652344 -1469.056885     0.025146 -1543.531982   0.025146    74.449951       -0.025391     6.0     -1543.531982            -1             -1     -1
1   -1369.031494   -1468.575195  1651.652344 -1369.031494   174.475342 -1468.575195   0.025146    99.518555        0.000000     1.0     -1543.531982         False           True   True
2   -1269.056396   -1369.031982  1651.652344 -1269.056396   199.493652 -1369.031982   0.025146    99.950439       -0.024902     1.0     -1543.531982         False          False   True
3   -1269.006836   -1269.031982  1651.652344 -1269.006836   100.000000 -1269.031982   0.025146     0.000000      -99.975342     1.0     -1269.031982         False          False   True
4    -569.006836   -1169.056641  1651.652344  -569.006836   700.000000 -1169.056641   0.025146   600.024658      500.024658     1.0     -1269.031982         False          False   True
5     481.005615    -969.056641  1651.652344   481.005615  1650.037109  -969.056641   0.025146  1450.037109     1450.037109     2.0     -1269.031982         False          False   True
6     682.005615    -870.056641  1651.652344   682.005615  1651.037109  -870.056641   0.025146  1552.037109     1551.037109     3.0       681.980469          True           True  False
7     782.005615    -769.056641  1651.652344   782.005615  1652.037109  -769.056641   0.025146  1551.037109     1551.037109     4.0       681.980469         False           True  False
8     884.005615    -669.056885  1651.652344   884.005615  1653.037109  -669.056885   2.024658  1551.037842     1551.037598     5.0       681.980469         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3176525/2048.[0m
[08/15 12:53:52]  --------------------------------------------------------------------------------
[08/15 12:53:52]  Iteration: 22 (0 solution, 21 counterexamples)
[08/15 12:53:55]  Generator returned sat in 1.984027 secs.
[08/15 12:53:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:55]  Improved gap from 0.0 to 100
[08/15 12:53:56]  Improved number of small numbers from 98 to 114 out of a max of 114
[08/15 12:53:56]  Verifer returned sat in 0.456166 secs.
[08/15 12:53:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     -66.994629    -366.994629  549.590088   -66.994629    0.050000  -366.994629    0.000000  300.000000      300.000000     6.0      -366.994629            -1             -1   False
1     -66.994629    -366.994629  549.590088   -66.994629  300.000000  -366.994629    0.000000  300.000000      200.000000     6.0      -366.994629         False          False   False
2     -66.994629    -166.994629  549.590088   -66.994629  300.000000  -166.994629    0.000000  100.000000      100.000000     7.0      -366.994629         False          False   False
3     133.105469    -166.094482  549.590088   133.105469  300.100098  -166.094482    0.050049  299.149902      200.050049     8.0      -366.994629         False          False   False
4     133.105469     -66.994629  549.590088   133.105469  299.100098   -66.994629    0.050049  200.050049      100.050049     9.0      -366.994629         False          False    True
5     382.055420     133.005371  549.590088   382.055420  449.000000   133.005371   49.000000  200.050049      200.050049     3.0       333.055420          True           True   False
6     630.005371     133.105469  549.590088   630.005371  448.000000   133.105469  196.949951  299.949951      200.050049     2.0       333.055420         False          False    True
7     777.055420     233.005371  549.590088   777.055420  447.000000   233.005371  244.000000  300.050049      200.050049     3.0       333.055420         False          False    True
8     923.005371     433.005371  549.590088   923.005371  446.000000   433.005371  289.949951  200.050049      200.050049     3.0       333.055420         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819405/4096.[0m
[08/15 12:53:56]  --------------------------------------------------------------------------------
[08/15 12:53:56]  Iteration: 23 (0 solution, 22 counterexamples)
[08/15 12:53:58]  Generator returned sat in 0.658888 secs.
[08/15 12:53:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:00]  Improved gap from 0.2 to 100
[08/15 12:54:00]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:54:00]  Verifer returned sat in 2.230183 secs.
[08/15 12:54:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -666.144775    -866.144775  549.590088  -666.144775    0.049805  -866.144775    0.000000  200.000000      199.849609     2.0      -866.144775            -1             -1   False
1    -666.094727    -865.994385  549.590088  -666.094727  200.050049  -865.994385    0.000000  199.899658       99.899658     2.0      -866.144775         False          False   False
2    -665.994629    -666.044678  549.590088  -665.994629  199.999756  -666.044678    0.000000    0.050049       -0.000244     1.0      -665.994629         False          False   False
3    -466.094482    -600.061279  549.590088  -466.094482  199.950195  -600.061279    0.000000  133.966797       99.899902     1.0      -466.094482         False          False   False
4    -366.044434    -466.044434  549.590088  -366.044434  234.016846  -466.044434    0.000000  100.000000       99.949951     1.0      -466.094482         False          False   False
5    -148.061035    -365.994629  549.590088  -148.061035  317.983398  -365.994629  117.983398   99.950195       99.949951     1.0      -466.094482         False          False   False
6      68.972168    -265.994629  549.590088    68.972168  316.983398  -265.994629  235.016602   99.950195       99.949951     1.0      -466.094482         False          False    True
7     285.005371    -165.994385  549.590088   285.005371  315.983398  -165.994385  351.049805   99.949951       99.949951     1.0      -466.094482         False          False    True
8     500.038818     -65.994629  549.590088   500.038818  314.983398   -65.994629  466.083252   99.950195       99.949951     1.0      -466.094482         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=409395/4096.[0m
[08/15 12:54:01]  --------------------------------------------------------------------------------
[08/15 12:54:01]  Iteration: 24 (0 solution, 23 counterexamples)
[08/15 12:54:02]  Generator returned sat in 1.035944 secs.
[08/15 12:54:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:04]  Improved gap from 0.000625 to 68.75
[08/15 12:54:05]  Improved number of small numbers from 69 to 76 out of a max of 114
[08/15 12:54:05]  Verifer returned sat in 2.489674 secs.
[08/15 12:54:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -834.761963    -934.777129  518.357666  -834.761963  168.769775  -934.777129    0.00000  100.015166        0.015244     1.0      -934.777129            -1             -1   False
1    -766.009629    -834.759766  549.590088  -766.009629  168.767500  -834.759766    0.00000   68.750137        0.000000     1.0      -766.009629         False          False   False
2    -665.994629    -666.009629  549.590088  -665.994629  168.765137  -666.009629    0.00250    0.012500        0.012500     1.0      -665.997129         False          False   False
3    -566.007129    -634.759629  549.590088  -566.007129  100.000000  -634.759629    0.00250   68.750000        0.000000     1.0      -566.009629         False          False    True
4      15.269121    -466.009629  549.590088    15.269121  650.026250  -466.009629  481.26625    0.012500        0.012500     1.0      -566.009629         False          False    True
5      15.269121    -466.009629  580.840088    15.269121    0.010000  -466.009629  481.26625    0.012500      -68.737500     1.0      -566.009629         False          False    True
6     315.276621    -297.259629  580.840088   315.276621  300.020000  -297.259629  612.52375    0.012500        0.012500     1.0      -566.009629         False          False    True
7     315.276621    -297.259629  612.090088   315.276621    0.010000  -297.259629  612.52375    0.012500      -68.737500     1.0      -566.009629         False          False    True
8     568.409121    -228.509521  612.090088   568.409121  253.145000  -228.509521  696.90625  100.012393        0.012500     1.0      -566.009629         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/80.[0m
[08/15 12:54:05]  --------------------------------------------------------------------------------
[08/15 12:54:05]  Iteration: 25 (0 solution, 24 counterexamples)
[08/15 12:54:19]  Generator returned sat in 12.339585 secs.
[08/15 12:54:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:19]  Improved gap from 0.0008333333333333334 to 39.0625
[08/15 12:54:19]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:54:19]  Verifer returned sat in 0.800774 secs.
[08/15 12:54:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -235.741455    -235.742676 -80.677002  -235.741455    0.001221  -235.742676   0.000000    0.001221        0.001221     2.0      -235.742676            -1             -1   False
1    -135.741455    -235.741455 -80.677002  -135.741455  100.001221  -235.741455   0.000000  100.000000        0.001221     2.0      -235.742676         False          False   False
2    -135.741455    -135.742676 -80.677002  -135.741455   99.998779  -135.742676   0.000000    0.001221      -99.998779     2.0      -135.741455         False          False   False
3     403.321045      64.257080 -80.677002   403.321045  539.063721    64.257080   0.001221  339.062744      339.062500     1.0      -135.741455         False          False   False
4     403.321045     164.256104 -80.677002   403.321045    1.000000   164.256104   0.001221  239.063721      239.062500     2.0      -135.741455         False          False    True
5     403.321045     164.257324 -80.677002   403.321045    0.010000   164.257324   0.001221  239.062500      139.062500     3.0      -135.741455         False          False    True
6     403.321045     364.255859 -80.677002   403.321045    0.010000   364.255859   0.001221   39.063965       39.062500     4.0      -135.741455         False          False    True
7     403.321045     364.257324 -19.739502   403.321045    0.010000   364.257324   0.001221   39.062500        0.000000     5.0      -135.741455         False          False    True
8     403.321045     403.319824  41.197998   403.321045    0.010000   403.319824   0.001221    0.000000      -39.062500     6.0       403.319824          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5425/16.[0m
[08/15 12:54:20]  --------------------------------------------------------------------------------
[08/15 12:54:20]  Iteration: 26 (0 solution, 25 counterexamples)
[08/15 12:54:21]  Generator returned sat in 0.392059 secs.
[08/15 12:54:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:22]  Improved gap from 0.01030517578125 to 100
[08/15 12:54:22]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:54:22]  Verifer returned sat in 1.014191 secs.
[08/15 12:54:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -345.812744    -445.862549 -80.677002  -345.812744    0.050049  -445.862549    0.000000  100.049805      100.049805     2.0      -445.862549            -1             -1   False
1    -345.812744    -345.862549 -80.677002  -345.812744   99.999756  -345.862549    0.000000    0.049805        0.049805     2.0      -445.862549         False          False   False
2    -245.862793    -345.862549 -80.677002  -245.862793   99.999756  -345.862549    0.000000   99.999756       -0.000244     2.0      -445.862549         False          False   False
3      23.937256    -245.862549 -80.677002    23.937256  369.799805  -245.862549   83.949951  185.849854       85.849854     1.0      -445.862549         False          False   False
4     123.987305     -59.862549 -80.677002   123.987305  285.899902   -59.862549   84.000000   99.849854       85.849854     1.0      -445.862549         False          False    True
5     311.087402      39.987305 -80.677002   311.087402  286.949951    39.987305  171.100098  100.000000       85.849854     2.0      -445.862549         False          False    True
6     548.487305      57.037354 -80.677002   548.487305  337.399902    57.037354  308.500000  182.949951       85.849854     2.0      -445.862549         False          False    True
7     686.687256     254.137451 -80.677002   686.687256  321.149902   254.137451  346.699951   85.849854       85.849854     1.0      -445.862549         False          False    True
8     919.412354     340.037354 -80.677002   919.412354  318.574951   340.037354  479.425049   99.949951       85.849854     1.0      -445.862549         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=351641/4096.[0m
[08/15 12:54:23]  --------------------------------------------------------------------------------
[08/15 12:54:23]  Iteration: 27 (0 solution, 26 counterexamples)
[08/15 12:54:24]  Generator returned sat in 0.161649 secs.
[08/15 12:54:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:25]  Improved number of small numbers from 87 to 87 out of a max of 113
[08/15 12:54:25]  Verifer returned sat in 0.778125 secs.
[08/15 12:54:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -345.812744    -445.862549 -80.677002  -345.812744    0.050049  -445.862549    0.000000  100.049805      100.049805     2.0      -445.862549            -1             -1   False
1    -345.812744    -345.862549 -80.677002  -345.812744   99.999756  -345.862549    0.000000    0.049805        0.049805     2.0      -445.862549         False          False   False
2    -245.862793    -345.862549 -80.677002  -245.862793   99.999756  -345.862549    0.000000   99.999756       -0.000244     2.0      -445.862549         False          False   False
3      23.937500    -245.196126 -80.677002    23.937500  369.800049  -245.196126   83.950195  185.183431       85.849854     1.0      -445.862549         False          False   False
4     123.987305     -59.862549 -80.677002   123.987305  285.233236   -59.862549   84.000000   99.849854       85.849854     1.0      -445.862549         False          False    True
5     309.754069      39.987305 -80.677002   309.754069  285.616618    39.987305  169.766764  100.000000       85.849854     2.0      -445.862549         False          False    True
6     545.487305      57.037354 -80.677002   545.487305  335.733236    57.037354  305.500000  182.949951       85.849854     2.0      -445.862549         False          False    True
7     681.520711     254.137451 -80.677002   681.520711  318.983358   254.137451  341.533407   85.849854       85.849854     1.0      -445.862549         False          False    True
8     912.162537     340.037354 -80.677002   912.162537  316.491679   340.037354  472.175232   99.949951       85.849854     1.0      -445.862549         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=351641/4096.[0m
[08/15 12:54:25]  --------------------------------------------------------------------------------
[08/15 12:54:25]  Iteration: 28 (0 solution, 27 counterexamples)
[08/15 12:54:27]  Generator returned sat in 0.697393 secs.
[08/15 12:54:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:27]  Improved gap from 0.0 to 100
[08/15 12:54:29]  Improved number of small numbers from 77 to 83 out of a max of 114
[08/15 12:54:29]  Verifer returned sat in 1.477522 secs.
[08/15 12:54:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -332.596436    -532.596462 -80.677246  -332.596436    0.099854  -532.596462    0.000000  200.000027      100.000027     2.0      -532.596462            -1             -1   False
1    -332.596436    -332.596462 -80.677246  -332.596436  199.900146  -332.596462    0.000000    0.000027        0.000027     2.0      -532.596462         False          False   False
2    -332.496462    -332.596462 -80.677246  -332.496462    0.100000  -332.596462    0.000000    0.100000      -99.900000     2.0      -332.496462         False          False   False
3     -53.453605    -132.596462 -80.677246   -53.453605  279.142857  -132.596462   10.957143   68.185714       68.185714     1.0      -332.496462         False          False   False
4     216.932109    -132.596462 -80.677246   216.932109  338.571429  -132.596462  181.342857  168.185714       68.185714     1.0      -332.496462         False          False    True
5     317.032109      35.689252 -80.677246   317.032109  268.285714    35.689252  181.442857   99.900000       68.185714     1.0      -332.496462         False          False    True
6     534.417823     154.403538 -80.677246   534.417823  317.285714   154.403538  298.828571   81.185714       68.185714     1.0      -332.496462         False          False    True
7     754.374966     245.403538 -80.677246   754.374966  301.142857   245.403538  418.785714   90.185714       68.185714     1.0      -332.496462         False          False    True
8    1002.760681     367.403320 -80.677246  1002.760681  338.571429   367.403320  567.171429   68.185932       68.185714     1.0      -332.496462         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=4773/70.[0m
[08/15 12:54:29]  --------------------------------------------------------------------------------
[08/15 12:54:29]  Iteration: 29 (0 solution, 28 counterexamples)
[08/15 12:54:32]  Generator returned sat in 2.013925 secs.
[08/15 12:54:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:32]  Improved gap from 0.1 to 100
[08/15 12:54:33]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/15 12:54:33]  Verifer returned sat in 0.369442 secs.
[08/15 12:54:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -332.596680    -631.896484  18.622803  -332.596680    0.099854  -631.896484     0.000000  299.299805      199.299805     1.0      -631.896484            -1             -1   False
1    -332.596680    -431.896484  18.622803  -332.596680   99.400146  -431.896484     0.000000   99.299805       99.299805     2.0      -631.896484         False          False   False
2    -332.596436    -332.696289  18.622803  -332.596436   99.300049  -332.696289     0.000000    0.099854       -0.699951     3.0      -332.596436          True           True   False
3    -132.396240    -231.896484  18.622803  -132.396240  200.300049  -231.896484     0.100098   99.400146       99.400146     1.0      -332.596436         False           True   False
4     -32.496338    -231.896484  18.622803   -32.496338  199.300049  -231.896484     0.100098  199.300049       99.300049     1.0      -332.596436         False          False    True
5     465.803711     -31.896484  18.622803   465.803711  697.600098   -31.896484   398.300049   99.400146       99.400146     1.0      -332.596436         False          False    True
6    1063.003662     -31.896484  18.622803  1063.003662  696.600098   -31.896484   895.500000  199.400146       99.400146     1.0      -332.596436         False          False    True
7    1559.203613     167.603516  18.622803  1559.203613  695.600098   167.603516  1291.699951   99.900146       99.400146     1.0      -332.596436         False          False    True
8    2153.903564     168.103516  18.622803  2153.903564  694.600098   168.103516  1786.399902  199.400146       99.400146     2.0      -332.596436         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=407143/4096.[0m
[08/15 12:54:33]  --------------------------------------------------------------------------------
[08/15 12:54:33]  Iteration: 30 (0 solution, 29 counterexamples)
[08/15 12:54:43]  Generator returned sat in 8.949299 secs.
[08/15 12:54:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:44]  Improved gap from 0.01125 to 78.125
[08/15 12:54:44]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:54:44]  Verifer returned sat in 0.866394 secs.
[08/15 12:54:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     816.008545     616.108643   93.612793   816.008545    0.100098   616.108643        0.0  199.899902       99.900146     2.0       616.108643            -1             -1   False
1    1110.483398     816.108398   93.612793  1110.483398  494.374756   816.108398        0.0  294.375000      294.375000     1.0       616.108643         False          False   False
2    1110.683594     916.108398   93.612793  1110.683594  294.575195   916.108398        0.0  194.575195      194.575195     2.0      1110.683594         False          False   False
3    1110.683594    1016.108398   93.612793  1110.683594   85.550049  1016.108398        0.0   94.575195       94.575195     3.0      1110.683594         False          False   False
4    1110.683594    1110.583740   93.612793  1110.683594   84.550049  1110.583740        0.0    0.099854       -5.424805     3.0      1110.683594         False          False   False
5    1194.133789    1116.108398  115.487793  1194.133789   83.550049  1116.108398        0.0   78.025391       -0.099609     1.0      1110.683594         False          False   False
6    1198.658447    1194.233398  137.362793  1198.658447   82.550049  1194.233398        0.0    4.425049      -73.699951     1.0      1110.683594         False          False   False
7    1275.783447    1272.358398  159.237793  1275.783447   81.550049  1272.358398        0.0    3.425049      -74.699951     1.0      1110.683594         False          False   False
8    1352.908447    1350.483398  181.112793  1352.908447   80.550049  1350.483398        0.0    2.425049      -75.699951     1.0      1110.683594         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=11779/40.[0m
[08/15 12:54:45]  --------------------------------------------------------------------------------
[08/15 12:54:45]  Iteration: 31 (0 solution, 30 counterexamples)
[08/15 12:54:48]  Generator returned sat in 2.815162 secs.
[08/15 12:54:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:49]  Improved gap from 0.02496337890625 to 100
[08/15 12:54:50]  Improved number of small numbers from 60 to 85 out of a max of 114
[08/15 12:54:50]  Verifer returned sat in 1.608600 secs.
[08/15 12:54:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     389.236816     289.337158  420.384222   389.236816    0.099854   289.337158    0.000000   99.899658       -0.100153     1.0       289.337158            -1             -1   False
1     489.337158     389.337158  420.384222   489.337158  200.000000   389.337158    0.000000  100.000000        0.000188     1.0       289.337158         False          False   False
2     589.237061     489.436970  420.384222   589.237061  199.899902   489.436970    0.000000   99.800091       -0.099909     1.0       589.237061         False          False   False
3     988.636970     689.336970  420.384222   988.636970  499.200000   689.336970  276.100000   23.200000       23.200000     1.0       589.237061         False          False   False
4    1214.036970     789.336970  420.384222  1214.036970  248.600000   789.336970  401.500000   23.200000       23.200000     1.0       589.237061         False          False    True
5    1314.136970     880.053711  420.384222  1314.136970  123.300000   880.053711  401.600000   32.483259       23.200000     1.0       589.237061         False          False    True
6    1342.303711     940.603637  420.384222  1342.303711   60.650000   940.603637  401.600000    0.100074      -48.633259     1.0       589.237061         False          False    True
7    1841.403637     989.336970  420.384222  1841.403637  499.200000   989.336970  728.866667  123.200000       23.200000     1.0       589.237061         False          False    True
8    1966.803637    1112.636963  420.384222  1966.803637  248.600000  1112.636963  754.266667   99.900007       23.200000     1.0       589.237061         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=116/5.[0m
[08/15 12:54:51]  --------------------------------------------------------------------------------
[08/15 12:54:51]  Iteration: 32 (0 solution, 31 counterexamples)
[08/15 12:54:52]  Generator returned sat in 0.292303 secs.
[08/15 12:54:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:52]  Improved gap from 6.3 to 100
[08/15 12:54:53]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/15 12:54:53]  Verifer returned sat in 0.641354 secs.
[08/15 12:54:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1501.229492   -1501.229736  275.834229 -1501.229492   100.666504 -1501.229736     0.000000    0.000244       -0.566650     1.0     -1501.229736            -1             -1    True
1   -1400.613037   -1400.662842  275.834229 -1400.613037   100.616699 -1400.662842     0.000000    0.049805        0.049805     1.0     -1400.613037         False          False    True
2   -1300.046143   -1300.662842  275.834229 -1300.046143   100.616699 -1300.662842     0.000000    0.616699        0.616699     1.0     -1400.613037         False          False    True
3   -1300.046143   -1300.662842  275.834229 -1300.046143     0.049805 -1300.662842     0.000000    0.616699      -99.383301     1.0     -1300.046143         False          False    True
4   -1000.712891   -1200.662842  275.834229 -1000.712891   299.949951 -1200.662842     0.000000  199.949951       99.949951     1.0     -1300.046143         False          False    True
5    -301.762939   -1000.662842  275.834229  -301.762939   898.899902 -1000.662842     0.000000  698.899902      698.899902     1.0     -1300.046143         False          False    True
6    1246.136963    -900.662842  275.834229  1246.136963  2246.799805  -900.662842  1447.849854  698.949951      698.949951     2.0     -1300.046143         False          False    True
7    1669.586914    -800.663086  275.834229  1669.586914  1122.399902  -800.663086  1771.299805  698.950195      698.949951     3.0      -101.712891          True           True    True
8    1669.586914    -700.663086  275.834229  1669.586914   560.199951  -700.663086  1771.299805  598.950195      598.949951     4.0      -101.712891         False           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=2862899/4096.[0m
[08/15 12:54:53]  --------------------------------------------------------------------------------
[08/15 12:54:53]  Iteration: 33 (0 solution, 32 counterexamples)
[08/15 12:54:58]  Generator returned sat in 3.947311 secs.
[08/15 12:54:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:00]  Improved number of small numbers from 63 to 77 out of a max of 113
[08/15 12:55:00]  Verifer returned sat in 1.168169 secs.
[08/15 12:55:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1500.713135   -1500.763037  275.834229 -1500.713135   100.199951 -1500.763037    0.000000    0.049902       -0.050293     2.0     -1500.763037            -1             -1    True
1   -1400.613037   -1500.662842  275.834229 -1400.613037   100.150000 -1500.662842    0.000000  100.049805        0.049805     1.0     -1400.613037         False          False    True
2   -1261.805908   -1300.662842  275.834229 -1261.805908   238.856934 -1300.662842    0.000000   38.856934       38.856934     1.0     -1400.613037         False          False    True
3   -1261.805908   -1300.662842  275.834229 -1261.805908    38.806680 -1300.662842    0.000000   38.856934      -61.143066     1.0     -1261.805908         False          False    True
4    -943.302529   -1200.662842  275.834229  -943.302529   357.360313 -1200.662842    0.000000  257.360313      157.360312     1.0     -1261.805908         False          False    True
5    -215.622373   -1046.662842  275.834229  -215.622373   985.040469 -1046.662842    0.000000  831.040469      785.040469     2.0     -1261.805908         False          False    True
6     810.897861    -943.302529  275.834229   810.897861  1857.560703  -943.302529  926.470137  827.730254      785.090566     3.0     -1261.805908         False          False    True
7     910.947959    -800.663086  275.834229   910.947959   927.780352  -800.663086  926.520234  785.090811      785.090566     3.0       -15.572275          True           True    True
8     910.947959    -700.663086  275.834229   910.947959   462.890176  -700.663086  926.520234  685.090811      685.090566     4.0       -15.572275         False           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=40196637/51200.[0m
[08/15 12:55:00]  --------------------------------------------------------------------------------
[08/15 12:55:00]  Iteration: 34 (0 solution, 33 counterexamples)
[08/15 12:55:03]  Generator returned sat in 1.651063 secs.
[08/15 12:55:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:03]  Improved gap from 0.0 to 100
[08/15 12:55:04]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:55:04]  Verifer returned sat in 0.619733 secs.
[08/15 12:55:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -815.922607   -1315.822266  275.83374  -815.922607    0.099854 -1315.822266   0.000000  499.899658      399.899658     4.0     -1315.822266            -1             -1   False
1    -815.922607   -1115.922363  275.83374  -815.922607    0.099854 -1115.922363   0.000000  299.999756      299.899658     4.0     -1315.822266         False          False   False
2    -215.622314   -1115.822266  275.83374  -215.622314  900.300049 -1115.822266   0.100098  900.099854      800.099854     4.0     -1315.822266         False          False   False
3    -215.622314   -1015.822266  275.83374  -215.622314  698.000000 -1015.822266   0.100098  800.099854      700.099854     5.0      -215.722412         False          False    True
4    -215.622314    -915.822266  275.83374  -215.622314  699.000000  -915.822266   0.100098  700.099854      600.099854     6.0      -215.722412         False           True   False
5    -215.622314    -815.822266  275.83374  -215.622314  700.000000  -815.822266   0.100098  600.099854      500.099854     4.0      -215.722412         False           True   False
6    -114.722168    -715.822266  275.83374  -114.722168  701.000000  -715.822266   0.100098  601.000000      501.000000     5.0      -215.722412         False          False   False
7     -13.722168    -515.822266  275.83374   -13.722168  702.000000  -515.822266   0.100098  502.000000      502.000000     6.0      -215.722412         False           True   False
8     187.277832    -415.822266  275.83374   187.277832  703.000000  -415.822266   0.100098  603.000000      603.000000     7.0      -215.722412         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=3277209/4096.[0m
[08/15 12:55:04]  --------------------------------------------------------------------------------
[08/15 12:55:04]  Iteration: 35 (0 solution, 34 counterexamples)
[08/15 12:55:10]  Generator returned sat in 4.452144 secs.
[08/15 12:55:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:10]  Improved gap from 0.0016666666666666668 to 100
[08/15 12:55:10]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/15 12:55:10]  Verifer returned sat in 0.502836 secs.
[08/15 12:55:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -315.422363    -415.522461 -524.466309  -315.422363    0.100000  -415.522461    0.000000  100.100098      100.099854     1.0      -415.522461            -1             -1   False
1    -315.422363    -315.522461 -524.466309  -315.422363  100.099854  -315.522461    0.000000    0.100098        0.099854     2.0      -415.522461         False          False   False
2    -215.622559    -315.422363 -524.466309  -215.622559   99.899902  -315.422363    0.000000   99.799805       -0.100342     3.0      -215.622559          True           True   False
3    -113.322266    -215.522217 -524.466309  -113.322266  202.100098  -215.522217    2.000000  100.199951        0.199951     1.0      -215.622559         False           True   False
4     -12.422119    -115.322510 -524.466309   -12.422119  201.100098  -115.322510    2.900146  100.000244        0.199951     2.0      -215.622559         False          False    True
5      87.677734     -14.522217 -524.466309    87.677734  200.100098   -14.522217    3.000000   99.199951        0.199951     1.0        84.677734          True           True    True
6     187.577881     184.477783 -524.466309   187.577881  199.100098   184.477783    3.000000    0.100098        0.100098     1.0        84.677734         False          False    True
7     787.477783     184.477783 -524.466309   787.477783  600.000000   184.477783  502.800049  100.199951        0.199951     1.0        84.677734         False          False    True
8    1286.277832     284.477783 -524.466309  1286.277832  599.000000   284.477783  901.600098  100.199951        0.199951     2.0        84.677734         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/15 12:55:11]  --------------------------------------------------------------------------------
[08/15 12:55:11]  Iteration: 36 (0 solution, 35 counterexamples)
[08/15 12:55:13]  Generator returned sat in 0.576299 secs.
[08/15 12:55:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:13]  Improved gap from 0.0008333333333333334 to 39.0625
[08/15 12:55:13]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/15 12:55:13]  Verifer returned sat in 0.523594 secs.
[08/15 12:55:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     -51.520996    -151.519531 -524.466553   -51.520996  199.999756  -151.519531   0.000000  99.998535       -0.001465     1.0      -151.519531            -1             -1   False
1      48.480225     -51.519531 -524.466553    48.480225  199.999756   -51.519531   0.000000  99.999756       -0.000244     1.0      -151.519531         False          False   False
2     148.480225     108.481445 -524.466309   148.480225  199.999756   108.481445   0.000000  39.998779        0.000000     1.0      -151.519531         False          False   False
3     248.483887     209.481689 -524.466309   248.483887  140.002441   209.481689   0.001221  39.000977        0.002441     1.0       248.482666         False          False   False
4     348.485352     348.480225 -524.466309   348.485352  139.002441   348.480225   0.002686   0.002441        0.002441     1.0       248.482666         False          False    True
5     486.485352     448.480225 -524.466309   486.485352  138.002441   448.480225  38.002686   0.002441        0.002441     1.0       248.482666         False          False    True
6     623.485352     452.476562 -524.466309   623.485352  137.002441   452.476562  75.002686  96.006104        0.002441     1.0       248.482666         False          False    True
7     663.481689     548.480225 -464.465088   663.481689  136.002441   548.480225  75.002686  39.998779        0.000000     2.0       248.482666         False          False    True
8     663.481689     588.479004 -404.463867   663.481689    0.010000   588.479004  75.002686   0.000000      -39.998779     2.0       588.479004          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=3, buffer=5/2048.[0m
[08/15 12:55:14]  --------------------------------------------------------------------------------
[08/15 12:55:14]  Iteration: 37 (0 solution, 36 counterexamples)
[08/15 12:55:29]  Generator returned sat in 13.689448 secs.
[08/15 12:55:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:30]  Improved number of small numbers from 67 to 75 out of a max of 113
[08/15 12:55:30]  Verifer returned sat in 1.132981 secs.
[08/15 12:55:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -747.855469    -847.855516 -524.466309  -747.855469     0.100098  -847.855516       0.00  100.000047      100.000047     2.0      -847.855516            -1             -1    True
1    -747.855469    -847.855516 -524.466309  -747.855469   100.000000  -847.855516       0.00  100.000047        0.000047     2.0      -847.855516         False          False    True
2    -647.955516    -698.065516 -524.466309  -647.955516   199.900000  -698.065516       0.00   50.110000       -0.100000     1.0      -847.855516         False          False    True
3    -547.855516    -647.855516 -524.466309  -547.855516   150.210000  -647.855516       0.00  100.000000        0.000000     1.0      -547.855516         False          False    True
4    -248.435516    -447.855516 -524.466309  -248.435516   399.420000  -447.855516       0.00  199.420000      199.420000     1.0      -547.855516         False          False    True
5     549.984484    -447.855469 -524.466309   549.984484   997.840000  -447.855469     397.64  600.199953      500.200000     2.0      -547.855516         False          False    True
6     549.984484    -248.335516 -524.466309   549.984484   499.920000  -248.335516     397.64  400.680000      400.200000     2.0      -547.855516         False          False    True
7    1347.904484    -147.855516 -524.466309  1347.904484  1198.600000  -147.855516     995.56  500.200000      500.200000     3.0      -547.855516         False          False    True
8    1448.004484    -147.755371 -524.466309  1448.004484   600.300000  -147.755371     995.66  600.099855      500.200000     4.0       452.344484          True           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=2501/5.[0m
[08/15 12:55:31]  --------------------------------------------------------------------------------
[08/15 12:55:31]  Iteration: 38 (0 solution, 37 counterexamples)
[08/15 12:55:36]  Generator returned sat in 3.876330 secs.
[08/15 12:55:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:38]  Improved gap from 38.8 to 100
[08/15 12:55:38]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:55:38]  Verifer returned sat in 2.079797 secs.
[08/15 12:55:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     253.884521      50.084717 -524.466309   253.884521    0.100098    50.084717    0.050049  203.749756      199.949951     2.0        50.084717            -1             -1     -1
1     253.884521     153.884521 -524.466309   253.884521    0.050049   153.884521    0.050049   99.949951       99.949951     2.0       253.834473         False          False   True
2     553.884521     253.884277 -524.466309   553.884521  399.949951   253.884277    0.050049  299.950195      299.949951     1.0       253.834473         False          False   True
3     553.884521     353.884521 -524.466309   553.884521    0.050049   353.884521    0.050049  199.949951      199.949951     2.0       553.834473         False          False   True
4     553.884521     353.884521 -524.466309   553.884521  152.000000   353.884521    0.050049  199.949951       99.949951     2.0       553.834473         False          False   True
5     757.934570     553.884277 -524.466309   757.934570  404.000000   553.884277    0.050049  204.000244      204.000000     1.0       553.834473         False          False   True
6    1511.934326     653.884521 -524.466309  1511.934326  958.000000   653.884521  258.000000  600.049805      600.049805     2.0       553.834473         False          False   True
7    1511.934326     653.884521 -524.466309  1511.934326    1.000000   653.884521  258.000000  600.049805      500.049805     2.0       553.834473         False          False   True
8    1511.934326     757.934326 -524.466309  1511.934326  152.000000   757.934326  258.000000  496.000000      400.049805     3.0       553.834473         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=614451/1024.[0m
[08/15 12:55:39]  --------------------------------------------------------------------------------
[08/15 12:55:39]  Iteration: 39 (0 solution, 38 counterexamples)
[08/15 12:55:40]  Generator returned sat in 0.552590 secs.
[08/15 12:55:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:41]  Improved number of small numbers from 102 to 113 out of a max of 113
[08/15 12:55:41]  Verifer returned sat in 0.192294 secs.
[08/15 12:55:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     253.884277      52.084717 -524.466309   253.884277    0.099854    52.084717    0.049805  201.749756      199.949951     2.0        52.084717            -1             -1     -1
1     253.884277     153.884521 -524.466309   253.884277    0.049805   153.884521    0.049805   99.949951       99.949951     2.0       253.834473         False          False   True
2     553.884277     253.884277 -524.466309   553.884277  399.949951   253.884277    0.049805  299.950195      299.949951     1.0       253.834473         False          False   True
3     553.884277     353.884521 -524.466309   553.884277    0.050049   353.884521    0.049805  199.949951      199.949951     2.0       553.834473         False          False   True
4     553.884277     353.884521 -524.466309   553.884277  152.000000   353.884521    0.049805  199.949951       99.949951     2.0       553.834473         False          False   True
5     758.934326     553.884277 -524.466309   758.934326  405.000000   553.884277    0.049805  205.000244      205.000000     1.0       553.834473         False          False   True
6    1514.934082     653.884521 -524.466309  1514.934082  961.000000   653.884521  257.999756  603.049805      603.049805     2.0       553.834473         False          False   True
7    1514.934082     653.884521 -524.466309  1514.934082    1.000000   653.884521  257.999756  603.049805      503.049805     2.0       553.834473         False          False   True
8    1514.934082     758.934326 -524.466309  1514.934082  153.000000   758.934326  257.999756  498.000000      403.049805     3.0       553.834473         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=617523/1024.[0m
[08/15 12:55:41]  --------------------------------------------------------------------------------
[08/15 12:55:41]  Iteration: 40 (0 solution, 39 counterexamples)
[08/15 12:55:54]  Generator returned sat in 12.091327 secs.
[08/15 12:55:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:56]  Improved gap from 0.0 to 68.75
[08/15 12:55:56]  Improved number of small numbers from 81 to 114 out of a max of 114
[08/15 12:55:56]  Verifer returned sat in 1.553579 secs.
[08/15 12:55:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     200.117432      53.884277 -524.466309   200.117432    0.099854    53.884277        0.0  146.233154      146.233154     6.0        53.884277            -1             -1     -1
1     200.217529     152.017578 -524.466309   200.217529  146.333252   152.017578        0.0   48.199951       46.333252     3.0        53.884277         False           True  False
2     253.984131     253.884033 -524.466309   253.984131  101.966553   253.884033        0.0    0.100098        0.099854     1.0       253.984131         False          False  False
3     400.117432     352.106445 -524.466309   400.117432  146.233398   352.106445        0.0   48.010986       46.233154     1.0       253.984131         False          False  False
4     500.217529     451.484375 -524.466309   500.217529  148.111084   451.484375        0.0   48.733154       46.333252     1.0       253.984131         False          False  False
5     600.217773     500.317627 -524.466309   600.217773  148.733398   500.317627        0.0   99.900146       46.333496     1.0       253.984131         False          False  False
6     622.534424     553.884277 -493.216309   622.534424  122.216797   553.884277        0.0   68.650146       -0.099854     2.0       253.984131         False          False  False
7     653.773193     622.634277 -461.966309   653.773193   99.888916   622.634277        0.0   31.138916      -37.611084     1.0       253.984131         False          False  False
8     707.209229     691.384277 -461.966309   707.209229   84.574951   691.384277        0.0   15.824951      -84.175049     1.0       253.984131         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=94891/2048.[0m
[08/15 12:55:57]  --------------------------------------------------------------------------------
[08/15 12:55:57]  Iteration: 41 (0 solution, 40 counterexamples)
[08/15 12:56:01]  Generator returned sat in 2.828726 secs.
[08/15 12:56:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:01]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/15 12:56:01]  Verifer returned sat in 0.326832 secs.
[08/15 12:56:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     132.770508    -167.029541 -524.466553   132.770508    0.100000  -167.029541   0.000000  299.800049      199.800049     5.0      -167.029541            -1             -1   False
1     132.770508      32.970215 -524.466553   132.770508  299.800000    32.970215   0.000000   99.800293       99.800049     3.0      -167.029541         False          False   False
2     666.537109     132.870117 -524.466553   666.537109  633.566895   132.870117   0.000000  533.666992      533.566650     1.0      -167.029541         False          False   False
3     666.537109     132.970459 -524.466553   666.537109  355.644531   132.970459   0.000000  533.566650      433.566650     2.0       666.537109         False          False   False
4     666.537109     332.970215 -524.466553   666.537109  533.466797   332.970215   0.000000  333.566895      333.566650     3.0       666.537109         False          False   False
5    1133.170410     432.970215 -524.466553  1133.170410  800.200195   432.970215   0.100098  700.100098      700.099854     4.0       666.537109         False          False   False
6    1133.170410     531.970459 -524.466553  1133.170410  401.100098   531.970459   0.100098  601.099854      600.099854     5.0       666.537109         False          False    True
7    1133.170410     532.970459 -524.466553  1133.170410  400.000000   532.970459   0.100098  600.099854      500.099854     6.0       666.537109         False          False    True
8    1133.170410     732.970215 -524.466553  1133.170410  600.000000   732.970215   0.100098  400.100098      400.099854     4.0       666.537109         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2867609/4096.[0m
[08/15 12:56:02]  --------------------------------------------------------------------------------
[08/15 12:56:02]  Iteration: 42 (0 solution, 41 counterexamples)
[08/15 12:56:04]  Generator returned sat in 1.203092 secs.
[08/15 12:56:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:05]  Improved gap from 10.0 to 100
[08/15 12:56:05]  Improved number of small numbers from 68 to 105 out of a max of 114
[08/15 12:56:05]  Verifer returned sat in 0.994556 secs.
[08/15 12:56:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     -67.376709    -467.328857 -524.466553   -67.376709    0.023926  -467.328857    0.00000  399.952148      299.952356     9.0      -467.328857            -1             -1     -1
1     132.432861    -267.329102 -524.466553   132.432861  599.761719  -267.329102    0.00000  399.761963      399.761926     7.0      -467.328857         False           True  False
2     332.408936    -267.328857 -524.466553   332.408936  599.738037  -267.328857    0.00000  599.737793      499.738000     3.0       332.408936          True           True  False
3     332.408936     -67.352783 -524.466553   332.408936  176.539683   -67.352783    0.00000  399.761719      399.738000     3.0       332.408936         False          False  False
4     332.408936     -67.328857 -524.466553   332.408936  265.809524   -67.328857    0.00000  399.737793      299.738000     4.0       332.408936         False          False  False
5     332.408936     132.670935 -524.466553   332.408936  399.714286   132.670935    0.00000  199.738000      199.738000     4.0       332.408936         False          False  False
6     733.242364     133.194824 -524.466553   733.242364  600.571429   133.194824    0.02381  600.023730      500.547619     5.0       332.408936         False          False  False
7     733.242364     332.432861 -524.466553   733.242364  301.285714   332.432861    0.02381  400.785693      400.547619     2.0       332.408936         False          False   True
8     733.242364     332.671143 -524.466553   733.242364  400.761719   332.671143    0.02381  400.547412      300.547619     3.0       332.408936         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=21023/42.[0m
[08/15 12:56:06]  --------------------------------------------------------------------------------
[08/15 12:56:06]  Iteration: 43 (0 solution, 42 counterexamples)
[08/15 12:56:15]  Generator returned sat in 7.998111 secs.
[08/15 12:56:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:16]  Improved gap from 0.0 to 39.0625
[08/15 12:56:16]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/15 12:56:16]  Verifer returned sat in 0.473129 secs.
[08/15 12:56:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     -67.376953    -267.276855 -524.466797   -67.376953  199.900146  -267.276855        0.0  199.899902      199.899902     2.0      -267.276855            -1             -1   False
1     -67.376709    -167.276855 -524.466797   -67.376709  199.900146  -167.276855        0.0   99.900146       99.900146     2.0      -267.276855         False          False   False
2     271.785645     -67.276855 -524.466797   271.785645  439.062500   -67.276855        0.0  339.062500      339.062500     1.0      -267.276855         False          False   False
3     371.785645      32.723145 -524.466797   371.785645  439.062500    32.723145        0.0  339.062500      339.062500     2.0      -267.276855         False          False   False
4     371.785645     131.885742 -524.466797   371.785645    1.000000   131.885742        0.0  239.899902      239.062500     3.0      -267.276855         False          False   False
5     371.785645     232.723145 -524.466797   371.785645    1.000000   232.723145        0.0  139.062500      139.062500     4.0      -267.276855         False          False   False
6     371.785645     332.623047 -524.466797   371.785645    1.000000   332.623047        0.0   39.162598       39.062500     4.0       371.785645          True           True   False
7     371.785645     332.723145 -463.529297   371.785645    1.000000   332.723145        0.0   39.062500        0.000000     5.0       371.785645         False           True   False
8     371.785645     371.785645 -402.592041   371.785645    1.000000   371.785645        0.0    0.000000      -39.062744     6.0       371.785645         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1389209/4096.[0m
[08/15 12:56:17]  --------------------------------------------------------------------------------
[08/15 12:56:17]  Iteration: 44 (0 solution, 43 counterexamples)
[08/15 12:56:22]  Generator returned sat in 3.660954 secs.
[08/15 12:56:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:22]  Improved gap from 0.0 to 100
[08/15 12:56:22]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/15 12:56:22]  Verifer returned sat in 0.378078 secs.
[08/15 12:56:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -470.176758   -1169.476807 -524.467041  -470.176758  699.399902 -1169.476807   0.099854  699.200195      699.200195     7.0     -1169.476807            -1             -1     -1
1    -470.076904   -1069.576660 -524.467041  -470.076904  699.300049 -1069.576660   0.099854  599.399902      599.300049     7.0      -470.176758         False          False   True
2    -469.976807   -1069.476807 -524.467041  -469.976807  599.500000 -1069.476807   0.099854  599.400146      499.400146     8.0      -470.076660         False          False   True
3    -270.177002    -869.576904 -524.467041  -270.177002  799.199951  -869.576904   0.099854  599.300049      599.199951     6.0      -470.076660         False           True  False
4     -69.277100    -869.476807 -524.467041   -69.277100  800.199951  -869.476807   0.899902  799.299805      699.299805     7.0      -470.076660         False          False  False
5     -69.277100    -669.576660 -524.467041   -69.277100  799.199951  -669.576660   0.899902  599.399658      599.299805     8.0      -470.076660         False          False   True
6     131.523193    -669.476807 -524.467041   131.523193  800.199951  -669.476807   1.700195  799.299805      699.299805     7.0      -470.076660         False           True  False
7     131.523193    -470.277100 -524.467041   131.523193  799.199951  -470.277100   1.700195  600.100098      599.299805     8.0      -470.076660         False          False   True
8     331.623047    -369.477051 -524.467041   331.623047  800.199951  -369.477051   1.800049  699.300049      699.299805     6.0      -470.076660         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=716083/1024.[0m
[08/15 12:56:23]  --------------------------------------------------------------------------------
[08/15 12:56:23]  Iteration: 45 (0 solution, 44 counterexamples)
[08/15 12:56:39]  Generator returned sat in 14.579437 secs.
[08/15 12:56:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:40]  Improved gap from 0.0 to 68.75
[08/15 12:56:41]  Improved number of small numbers from 55 to 63 out of a max of 114
[08/15 12:56:41]  Verifer returned sat in 2.440168 secs.
[08/15 12:56:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1568.287109   -1668.388203 -615.727041 -1568.287109  100.001221 -1668.388203    0.099854  100.00124       100.00124     5.0     -1668.388203            -1             -1     -1
1   -1568.287109   -1568.388203 -615.727041 -1568.287109  100.001221 -1568.388203    0.099854    0.00124         0.00124     6.0     -1668.388203         False           True   True
2   -1468.289600   -1499.636953 -615.727041 -1468.289600   99.998750 -1499.636953    0.099854   31.24750        -0.00125     1.0     -1468.389453          True           True  False
3   -1399.538350   -1468.388203 -584.477041 -1399.538350   99.998750 -1468.388203    0.099854   68.75000         0.00000     1.0     -1468.389453         False          False  False
4   -1169.288350   -1299.646953 -584.477041 -1169.288350  299.000000 -1299.646953  130.347354    0.01125         0.00250     1.0     -1468.389453         False          False  False
5   -1169.288350   -1299.638203 -553.227041 -1169.288350    0.010000 -1299.638203  130.347354    0.00250       -68.74750     2.0     -1468.389453         False          False   True
6    -870.292725   -1130.896973 -553.227041  -870.292725  298.998125 -1130.896973  260.592979    0.01127         0.00250     1.0     -1130.885703          True           True  False
7    -870.292725   -1130.886953 -524.467041  -870.292725    0.010000 -1130.886953  260.592979    0.00125       -71.23750     2.0     -1130.885703         False          False   True
8    -618.153975   -1059.648193 -524.467041  -618.153975  252.140000 -1059.648193  341.491729  100.00249         0.00250     1.0     -1130.885703         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/400.[0m
[08/15 12:56:42]  --------------------------------------------------------------------------------
[08/15 12:56:42]  Iteration: 46 (0 solution, 45 counterexamples)
[08/15 12:56:53]  Generator returned sat in 9.608708 secs.
[08/15 12:56:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:54]  Improved gap from 0.00125 to 79.6875
[08/15 12:56:55]  Improved number of small numbers from 61 to 74 out of a max of 114
[08/15 12:56:55]  Verifer returned sat in 1.778389 secs.
[08/15 12:56:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1948.538574   -2148.540850 -616.352041 -1948.538574    0.001221 -2148.540850    0.00000  200.002275      100.002275     7.0     -2148.540850            -1             -1     -1
1   -1948.538574   -2048.539551 -616.352041 -1948.538574  200.001465 -2048.539551    0.00000  100.000977        0.002275     3.0     -2148.540850         False           True  False
2   -1848.539795   -1848.540850 -616.352041 -1848.539795  199.999756 -1848.540850    0.00000    0.001055        0.001055     1.0     -1848.539795         False          False  False
3   -1768.850850   -1848.538350 -596.042041 -1768.850850   79.690000 -1848.538350    0.00000   79.687500        0.000000     1.0     -1768.850850         False          False  False
4   -1399.534600   -1668.850850 -596.042041 -1399.534600  449.003750 -1668.850850  269.31375    0.002500        0.002500     1.0     -1768.850850         False          False  False
5   -1399.527100   -1668.842100 -576.665771 -1399.527100    0.010000 -1668.842100  269.31375    0.001250      -80.613730     1.0     -1768.850850         False          False   True
6   -1308.678975   -1588.227100 -556.353291 -1308.678975   90.849375 -1588.227100  269.31375   10.234375      -69.453125     1.0     -1768.850850         False          False   True
7   -1187.757725   -1508.539600 -536.040791 -1187.757725  131.155625 -1508.539600  269.31375   51.468125      -28.219375     1.0     -1768.850850         False          False   True
8   -1158.070225   -1428.852051 -515.728516 -1158.070225   81.155625 -1428.852051  269.31375    1.468076      -78.219600     1.0     -1768.850850         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/15 12:56:55]  --------------------------------------------------------------------------------
[08/15 12:56:55]  Iteration: 47 (0 solution, 46 counterexamples)
[08/15 12:57:01]  Generator returned sat in 4.712642 secs.
[08/15 12:57:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:03]  Improved gap from 0.0 to 39.0625
[08/15 12:57:03]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/15 12:57:03]  Verifer returned sat in 1.696331 secs.
[08/15 12:57:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1908.909424   -2108.909424 -675.650879 -1908.909424    0.002441 -2108.909424   0.000000  200.000000      100.000244     8.0     -2108.909424            -1             -1     -1
1   -1908.909424   -2008.909668 -675.650879 -1908.909424  199.997559 -2008.909668   0.000000  100.000244        0.000244     2.0     -2108.909424         False           True  False
2   -1868.844482   -1908.904541 -615.716064 -1868.844482  140.065186 -1908.904541   0.000000   40.060059        0.000000     1.0     -1868.844482         False          False  False
3   -1768.842041   -1768.844482 -615.716064 -1768.842041  140.062500 -1768.844482   0.000000    0.002441        0.002441     1.0     -1768.842041         False          False  False
4   -1429.779541   -1668.844727 -615.716064 -1429.779541  339.064941 -1668.844727   0.002441  239.062744      239.062500     1.0     -1768.842041         False          False  False
5   -1429.779541   -1668.842285 -615.716064 -1429.779541    0.010000 -1668.842285   0.002441  239.060303      139.062500     2.0     -1768.842041         False          False   True
6   -1429.779541   -1568.844482 -615.716064 -1429.779541    0.010000 -1568.844482   0.002441  139.062500       39.062500     3.0     -1768.842041         False          False   True
7   -1429.779541   -1468.844482 -554.778564 -1429.779541    0.010000 -1468.844482   0.002441   39.062500        0.000000     4.0     -1768.842041         False          False   True
8   -1429.779541   -1429.781982 -554.778320 -1429.779541    0.010000 -1429.781982   0.002441    0.000000      -99.999756     5.0     -1768.842041         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3825/16.[0m
[08/15 12:57:04]  --------------------------------------------------------------------------------
[08/15 12:57:04]  Iteration: 48 (0 solution, 47 counterexamples)
[08/15 12:57:15]  Generator returned sat in 9.300482 secs.
[08/15 12:57:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:27]  Improved gap from 0.001220703125 to 39.0625
[08/15 12:57:27]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:57:27]  Verifer returned sat in 12.450276 secs.
[08/15 12:57:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1657.123291   -1657.123291 -803.776123 -1657.123291  176.130000 -1657.123291   0.000000    0.000000      -76.130127     9.0     -1657.123291            -1             -1     -1
1   -1480.994385   -1580.993164 -803.776123 -1480.994385  176.128906 -1580.993164   0.000000   99.998779       -0.001221     1.0     -1480.994385         False           True  False
2   -1180.994385   -1480.993164 -803.776123 -1180.994385  399.998779 -1480.993164   0.000000  299.998779      199.998779     1.0     -1480.994385         False          False  False
3   -1180.994385   -1280.993164 -803.776123 -1180.994385  299.997314 -1280.993164   0.000000   99.998779       99.998779     2.0     -1180.994385         False          False  False
4    -941.929443   -1180.993164 -803.776123  -941.929443  339.063721 -1180.993164   0.001221  239.062500      239.062500     1.0     -1180.994385         False          False  False
5    -941.929443   -1180.992188 -803.776123  -941.929443    0.010000 -1180.992188   0.001221  239.061523      139.062500     2.0     -1180.994385         False          False   True
6    -941.929443    -980.994385 -803.776123  -941.929443    1.000000  -980.994385   0.001221   39.063721       39.062500     3.0     -1180.994385         False          False   True
7    -941.929443    -980.993164 -742.838623  -941.929443    1.000000  -980.993164   0.001221   39.062500        0.000000     4.0     -1180.994385         False          False   True
8    -941.929443    -941.930664 -681.901123  -941.929443    1.000000  -941.930664   0.001221    0.000000      -39.062500     5.0     -1180.994385         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3825/16.[0m
[08/15 12:57:28]  --------------------------------------------------------------------------------
[08/15 12:57:28]  Iteration: 49 (0 solution, 48 counterexamples)
[08/15 12:57:30]  Generator returned sat in 0.840101 secs.
[08/15 12:57:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:30]  Improved gap from 0.00125 to 100
[08/15 12:57:31]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/15 12:57:31]  Verifer returned sat in 0.529265 secs.
[08/15 12:57:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -203.029297    -203.079590 -803.776123  -203.029297    0.025146  -203.079590   0.000000    0.050293        0.000244     9.0       -203.07959            -1             -1     -1
1    -103.054688    -203.029541 -803.776123  -103.054688  100.024902  -203.029541   0.000000   99.974854       -0.025146     2.0       -203.07959         False           True  False
2    -103.004639    -103.029541 -803.776123  -103.004639  100.024902  -103.029541   0.000000    0.024902      -99.975098     1.0       -203.07959         False          False  False
3     492.045654      -3.029541 -803.776123   492.045654  595.075195    -3.029541   0.000000  495.075195      395.075195     1.0       -203.07959         False          False  False
4     593.045654     196.970459 -803.776123   593.045654  596.075195   196.970459   0.000000  396.075195      396.075195     2.0       -203.07959         False          False  False
5     794.045654     296.970459 -803.776123   794.045654  597.075195   296.970459   0.000000  497.075195      497.075195     3.0       -203.07959         False          False  False
6     895.045654     396.970459 -803.776123   895.045654  598.075195   396.970459   0.000000  498.075195      498.075195     4.0       -203.07959         False          False  False
7     996.045654     496.970459 -803.776123   996.045654  599.075195   496.970459   0.000000  499.075195      499.075195     4.0       -203.07959         False          False  False
8    1097.045654     496.995361 -803.776123  1097.045654  600.075195   496.995361   0.025146  600.025146      500.050049     5.0       -203.07959         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2048205/4096.[0m
[08/15 12:57:31]  --------------------------------------------------------------------------------
[08/15 12:57:31]  Iteration: 50 (0 solution, 49 counterexamples)
[08/15 12:57:46]  Generator returned sat in 12.735239 secs.
[08/15 12:57:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:47]  Improved gap from 0.0 to 100
[08/15 12:57:47]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 12:57:47]  Verifer returned sat in 1.064716 secs.
[08/15 12:57:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -464.604688    -464.804688 -803.776123  -464.604688    200.00  -464.804688        0.1     0.10            0.10     7.0      -464.804688            -1             -1     -1
1    -264.804688    -364.804688 -803.776123  -264.804688    199.90  -364.804688        0.1    99.90           99.90     1.0      -264.904688         False           True   True
2    -264.804688    -364.804688 -803.776123  -264.804688     99.80  -364.804688        0.1    99.90           -0.10     1.0      -264.904688         False          False   True
3    -164.704688    -264.804688 -803.776123  -164.704688    200.00  -264.804688        0.1   100.00            0.00     1.0      -264.904688         False          False   True
4      34.295313     -64.804688 -803.776123    34.295313    299.00   -64.804688        0.1    99.00           99.00     1.0      -264.904688         False          False   True
5     382.795313      35.195312 -803.776123   382.795313    447.50    35.195312        0.1   347.50          347.50     1.0      -264.904688         False          False   True
6     705.545313     105.345313 -803.776123   705.545313    670.25   105.345313        0.1   600.10          570.25     2.0      -264.904688         False          False   True
7     705.545313     235.195312 -803.776123   705.545313    521.20   235.195312        0.1   470.25          470.25     3.0       705.445312          True           True  False
8     705.545313     335.195312 -803.776123   705.545313    411.60   335.195312        0.1   370.25          370.25     4.0       705.445312         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=11407/20.[0m
[08/15 12:57:48]  --------------------------------------------------------------------------------
[08/15 12:57:48]  Iteration: 51 (0 solution, 50 counterexamples)
[08/15 12:57:58]  Generator returned sat in 9.193529 secs.
[08/15 12:57:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:02]  Improved gap from 0.0 to 79.6875
[08/15 12:58:03]  Improved number of small numbers from 68 to 81 out of a max of 114
[08/15 12:58:03]  Verifer returned sat in 4.290163 secs.
[08/15 12:58:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1154.675293   -1354.625244 -803.776123 -1154.675293    0.049805 -1354.625244       0.00  199.949951       99.950130     9.0     -1354.625244            -1             -1     -1
1   -1103.087891   -1154.625423 -803.776123 -1103.087891  251.537354 -1154.625423       0.00   51.537533       51.537533     1.0     -1354.625244         False           True  False
2    -774.887923   -1103.038086 -803.776123  -774.887923  379.737500 -1103.038086       0.05  328.100163      279.687500     1.0     -1354.625244         False          False  False
3    -774.887923    -954.625423 -803.776123  -774.887923  328.100000  -954.625423       0.05  179.687500      179.687500     2.0      -774.937923         False          False   True
4    -774.887923    -855.512923 -803.776123  -774.887923  163.050000  -855.512923       0.05   80.575000       79.687500     3.0      -774.937923         False          False   True
5    -774.887923    -854.625423 -783.463623  -774.887923   80.525000  -854.625423       0.05   79.687500        0.000000     4.0      -774.937923         False          False   True
6    -774.887923    -774.937923 -763.151123  -774.887923   39.262500  -774.937923       0.05    0.000000      -79.687500     5.0      -774.937923         False          False   True
7    -666.412923    -695.250423 -742.838623  -666.412923  108.475000  -695.250423       0.05   28.787500      -50.900000     1.0      -774.937923         False           True  False
8    -561.831673    -615.562744 -742.838623  -561.831673  133.368750  -615.562744       0.05   53.681071      -46.318750     1.0      -774.937923         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=4475/16.[0m
[08/15 12:58:03]  --------------------------------------------------------------------------------
[08/15 12:58:03]  Iteration: 52 (0 solution, 51 counterexamples)
[08/15 12:58:08]  Generator returned sat in 3.048273 secs.
[08/15 12:58:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:09]  Improved gap from 0.0 to 68.75
[08/15 12:58:10]  Improved number of small numbers from 94 to 114 out of a max of 114
[08/15 12:58:10]  Verifer returned sat in 1.472715 secs.
[08/15 12:58:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1277.145264   -1377.143066 -681.258545 -1277.145264    0.002686 -1377.143066       0.00   99.997803       99.997803     7.0     -1377.143066            -1             -1     -1
1   -1277.140625   -1277.143066 -681.258545 -1277.140625  100.002441 -1277.143066       0.00    0.002441        0.002441     1.0     -1377.143066         False           True  False
2   -1208.388184   -1277.138184 -650.013428 -1208.388184   68.754883 -1277.138184       0.00   68.750000        0.000000     1.0     -1208.388184         False          False  False
3    -774.888184   -1208.385254 -650.013428  -774.888184  502.250000 -1208.385254      64.75  368.747070      268.750000     1.0     -1208.388184         False          False  False
4    -774.888184   -1008.388184 -650.013428  -774.888184  252.125000 -1008.388184      64.75  168.750000      168.750000     2.0     -1208.388184         False          False   True
5    -774.888184   -1008.385254 -650.013428  -774.888184    0.010000 -1008.385254      64.75  168.747070       68.750000     3.0     -1208.388184         False          False   True
6    -774.888184    -908.388184 -618.763428  -774.888184    0.010000  -908.388184      64.75   68.750000        0.000000     4.0     -1208.388184         False          False   True
7    -774.888184    -839.638184 -590.010742  -774.888184    0.010000  -839.638184      64.75    0.000000      -71.247314     5.0     -1208.388184         False          False   True
8    -522.763184    -768.390381 -590.010742  -522.763184  252.125000  -768.390381      64.75  180.877197       80.877686     1.0      -587.513184          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1075/4.[0m
[08/15 12:58:10]  --------------------------------------------------------------------------------
[08/15 12:58:10]  Iteration: 53 (0 solution, 52 counterexamples)
[08/15 12:58:12]  Generator returned sat in 0.622860 secs.
[08/15 12:58:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:15]  Improved gap from 68.75 to 68.75
[08/15 12:58:15]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:58:15]  Verifer returned sat in 2.331469 secs.
[08/15 12:58:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2187.882812    2119.132812 -4177.535645  2187.882812    0.002441  2119.132812   0.000000   68.750000       68.748779     7.0      2119.132812            -1             -1     -1
1    2187.882812    2119.134033 -4146.285645  2187.882812    0.001465  2119.134033   0.000000   68.748779       -0.001221     4.0      2187.882812         False           True  False
2    2187.885254    2187.884033 -4115.035889  2187.885254   68.751221  2187.884033   0.000000    0.001221      -68.749023     1.0      2187.882812         False          False  False
3    2692.134033    2256.634277 -4115.035889  2692.134033  504.250000  2256.634277  66.749756  368.750000      268.750000     1.0      2187.882812         False          False  False
4    2692.134033    2456.634277 -4115.035889  2692.134033  252.125000  2456.634277  66.749756  168.750000      168.750000     2.0      2187.882812         False          False   True
5    2692.134033    2456.635254 -4115.035889  2692.134033    0.010000  2456.635254  66.749756  168.749023       68.750000     3.0      2187.882812         False          False   True
6    2692.134033    2556.634277 -4083.785889  2692.134033    0.010000  2556.634277  66.749756   68.750000        0.000000     4.0      2187.882812         False          False   True
7    2692.134033    2625.384277 -4055.034424  2692.134033    0.010000  2625.384277  66.749756    0.000000      -71.248535     5.0      2187.882812         False          False   True
8    2944.259033    2696.633057 -4055.034424  2944.259033  252.125000  2696.633057  66.749756  180.876221       80.876465     1.0      2877.509277          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1075/4.[0m
[08/15 12:58:16]  --------------------------------------------------------------------------------
[08/15 12:58:16]  Iteration: 54 (0 solution, 53 counterexamples)
[08/15 12:58:18]  Generator returned sat in 0.881718 secs.
[08/15 12:58:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:20]  Improved gap from 66.75 to 68.75
[08/15 12:58:21]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:58:21]  Verifer returned sat in 2.536501 secs.
[08/15 12:58:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2558.134277    2358.138184 -3144.518311  2558.134277    0.001465  2358.138184        0.0  199.996094       99.996338     2.0      2358.138184            -1             -1   False
1    2558.136963    2558.135498 -3144.518311  2558.136963  199.998779  2558.135498        0.0    0.001465       -0.000977     1.0      2358.138184         False          False   False
2    2658.138184    2558.137939 -3144.518311  2658.138184  100.002686  2558.137939        0.0  100.000244        0.000244     1.0      2658.138184         False          False   False
3    3067.387939    2758.137939 -3144.518311  3067.387939  509.250000  2758.137939       39.5  269.750000      269.750000     1.0      2658.138184         False          False   False
4    3067.387939    2858.137939 -3144.518311  3067.387939  253.625000  2858.137939       39.5  169.750000      169.750000     2.0      2658.138184         False          False    True
5    3067.387939    2958.136719 -3144.518311  3067.387939    0.010000  2958.136719       39.5   69.751221       69.750000     3.0      2658.138184         False          False    True
6    3067.387939    2958.138184 -3114.268311  3067.387939    0.010000  2958.138184       39.5   69.749756        0.000000     4.0      2658.138184         False          False    True
7    3067.387939    3027.887939 -3084.018311  3067.387939    0.010000  3027.887939       39.5    0.000000      -69.750000     5.0      2658.138184         False          False    True
8    3321.012939    3097.637939 -3084.018311  3321.012939  253.625000  3097.637939       39.5  183.875000       83.875000     1.0      3281.512939          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1079/4.[0m
[08/15 12:58:21]  --------------------------------------------------------------------------------
[08/15 12:58:21]  Iteration: 55 (0 solution, 54 counterexamples)
[08/15 12:58:30]  Generator returned sat in 6.845478 secs.
[08/15 12:58:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:32]  Improved gap from 0.0 to 40.625
[08/15 12:58:32]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 12:58:32]  Verifer returned sat in 1.828018 secs.
[08/15 12:58:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2607.364502    2507.364502 -3361.776123  2607.364502  181.554688  2507.364502    0.000000  100.000000       59.351562     2.0      2507.364502            -1             -1   False
1    2688.895752    2607.387939 -3361.776123  2688.895752  181.531250  2607.387939    0.000000   81.507812       40.882812     1.0      2688.895752         False          False   False
2    2788.895752    2665.294189 -3361.776123  2788.895752  181.507812  2665.294189    0.000000  123.601562       40.882812     2.0      2788.895752         False          False   False
3    3067.387939    2788.895752 -3361.776123  3067.387939  402.093750  2788.895752  178.468750  100.023438       40.906250     2.0      2788.895752         False          False   False
4    3167.411377    2889.872314 -3361.776123  3167.411377  200.046875  2889.872314  178.492188   99.046875       40.906250     1.0      2788.895752         False          False    True
5    3167.411377    2948.012939 -3302.682373  3167.411377   99.023438  2948.012939  178.492188   40.906250        0.000000     2.0      2788.895752         False          False    True
6    3410.223877    2988.942627 -3302.682373  3410.223877  283.718750  2988.942627  280.398438  140.882812       40.906250     1.0      2788.895752         False          False    True
7    3410.223877    3088.919189 -3243.612061  3410.223877  140.859375  3088.919189  280.398438   40.906250       -0.023438     2.0      2788.895752         False          False    True
8    3569.364502    3129.848877 -3243.612061  3569.364502  200.046875  3129.848877  298.609375  140.906250       40.906250     1.0      2788.895752         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1309/32.[0m
[08/15 12:58:33]  --------------------------------------------------------------------------------
[08/15 12:58:33]  Iteration: 56 (0 solution, 55 counterexamples)
[08/15 12:58:38]  Generator returned sat in 3.717524 secs.
[08/15 12:58:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:39]  Improved gap from 0.0 to 100
[08/15 12:58:40]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/15 12:58:40]  Verifer returned sat in 1.369490 secs.
[08/15 12:58:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2683.505544    2583.305420 -3397.068727  2683.505544    0.2000  2583.305420     0.1000  100.100124           100.1     9.0      2583.305420            -1             -1     -1
1    2683.505544    2683.305544 -3397.068727  2683.505544    0.1000  2683.305544     0.1000    0.100000             0.1     2.0      2683.405544         False           True   True
2    2886.105544    2683.405544 -3397.068727  2886.105544  202.7000  2683.405544   102.6000  100.100000             0.2     3.0      2683.405544         False           True  False
3    2988.605544    2883.305544 -3397.068727  2988.605544  202.6000  2883.305544   105.1000    0.200000             0.2     1.0      2883.505544         False           True   True
4    3088.705544    2883.605469 -3397.068727  3088.705544  100.3000  2883.605469   105.2000   99.900075             0.2     1.0      2883.505544         False          False   True
5    3088.705544    2983.305544 -3397.068727  3088.705544   49.1500  2983.305544   105.2000    0.200000           -99.8     2.0      2883.505544         False          False   True
6    3537.355544    3083.305544 -3397.068727  3537.355544  448.8500  3083.305544   353.8500  100.200000             0.2     1.0      3183.505544          True           True  False
7    3660.580544    3283.305544 -3397.068727  3660.580544  223.4250  3283.305544   377.0750    0.200000             0.2     1.0      3183.505544         False          False   True
8    3771.093044    3283.605713 -3397.068727  3771.093044  110.7125  3283.605713   387.5875   99.899831             0.2     1.0      3183.505544         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/15 12:58:40]  --------------------------------------------------------------------------------
[08/15 12:58:40]  Iteration: 57 (0 solution, 56 counterexamples)
[08/15 12:58:47]  Generator returned sat in 4.943088 secs.
[08/15 12:58:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:47]  Improved gap from 0.000625 to 100
[08/15 12:58:48]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/15 12:58:48]  Verifer returned sat in 0.846967 secs.
[08/15 12:58:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3088.405518    2988.405273 -3802.268555  3088.405518    0.100098  2988.405273    0.000000  100.000244       99.900146     9.0      2988.405273            -1             -1     -1
1    3088.505127    2988.505371 -3802.268555  3088.505127  100.099854  2988.505371    0.000000   99.999756       -0.000244     2.0      2988.405273         False           True  False
2    3188.605469    3188.405518 -3802.268555  3188.605469  200.100098  3188.405518    0.000000    0.199951        0.100098     1.0      2988.405273         False          False  False
3    3188.605469    3188.505371 -3802.268555  3188.605469    0.100098  3188.505371    0.000000    0.100098      -99.899902     2.0      3188.605469         False          False  False
4    3388.605469    3288.505371 -3802.268555  3388.605469  200.100098  3288.505371    0.000000  100.100098        0.100098     1.0      3188.605469         False          False  False
5    3588.505371    3389.505127 -3802.268555  3588.505371  300.000000  3389.505127    0.100098  198.900146       99.899902     1.0      3188.605469         False          False  False
6    3688.605225    3588.505127 -3802.268555  3688.605225  299.000000  3588.505127    0.199951   99.900146       99.899902     1.0      3188.605469         False          False   True
7    3886.705078    3688.505371 -3802.268555  3886.705078  298.000000  3688.505371   98.299805   99.899902       99.899902     1.0      3188.605469         False          False   True
8    4083.805176    3788.505127 -3802.268555  4083.805176  297.000000  3788.505127  195.399902   99.900146       99.899902     1.0      3188.605469         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=204595/2048.[0m
[08/15 12:58:48]  --------------------------------------------------------------------------------
[08/15 12:58:48]  Iteration: 58 (0 solution, 57 counterexamples)
[08/15 12:59:08]  Generator returned sat in 17.358309 secs.
[08/15 12:59:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:59:09]  Improved gap from 0.0008333333333333334 to 78.125
[08/15 12:59:09]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/15 12:59:09]  Verifer returned sat in 0.904553 secs.
[08/15 12:59:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2989.255127    2690.055420 -3865.843750  2989.255127  299.200000  2690.055420   0.050049  299.149658      199.949707     8.0      2690.055420            -1             -1     -1
1    2989.255371    2889.255127 -3865.843750  2989.255371  299.149902  2889.255127   0.050049   99.950195       99.949951     3.0      2989.205322         False           True   True
2    3188.405273    2989.255371 -3865.843750  3188.405273  299.100098  2989.255371   0.050049  199.099854      199.099854     1.0      3188.355225         False          False   True
3    3188.405273    3089.255371 -3865.843750  3188.405273   83.125000  3089.255371   0.050049   99.099854       99.099854     2.0      3188.355225         False          False   True
4    3188.405273    3188.305176 -3865.843750  3188.405273   82.125000  3188.305176   0.050049    0.050049       -0.900146     3.0      3188.355225         False          False   True
5    3269.480225    3189.255371 -3846.018555  3269.480225   81.125000  3189.255371   0.050049   80.174805        0.000000     1.0      3188.355225         False          False   True
6    3269.480225    3269.430176 -3824.143555  3269.480225   80.125000  3269.430176   0.050049    0.000000      -78.125000     2.0      3188.355225         False          False   True
7    3348.605225    3347.555176 -3802.268555  3348.605225   79.125000  3347.555176   0.050049    1.000000      -77.125000     1.0      3188.355225         False          False   True
8    3425.730225    3425.680176 -3802.268555  3425.730225   78.125000  3425.680176   0.050049    0.000000     -100.000000     1.0      3188.355225         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=407859/2048.[0m
[08/15 12:59:09]  --------------------------------------------------------------------------------
[08/15 12:59:09]  Iteration: 59 (0 solution, 58 counterexamples)
[08/15 12:59:24]  Generator returned sat in 13.188704 secs.
[08/15 12:59:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:59:25]  Improved gap from 0.0 to 100
[08/15 12:59:26]  Improved number of small numbers from 72 to 78 out of a max of 114
[08/15 12:59:26]  Verifer returned sat in 1.297426 secs.
[08/15 12:59:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2975.696289    2975.693975 -3802.268555  2975.696289     0.001250  2975.693975    0.00000    0.002314        0.002314     2.0      2975.693975            -1             -1    True
1    2975.696289    2975.693975 -3802.268555  2975.696289     0.001465  2975.693975    0.00000    0.002314      -99.997686     2.0      2975.693975         False          False    True
2    3426.697725    3075.693975 -3802.268555  3426.697725   451.003750  3075.693975    0.00000  351.003750      251.003750     1.0      2975.693975         False          False    True
3    3426.697725    3275.693975 -3802.268555  3426.697725     0.001250  3275.693975    0.00000  151.003750      151.003750     2.0      3426.697725         False          False    True
4    3426.697725    3275.693975 -3802.268555  3426.697725   151.002500  3275.693975    0.00000  151.003750       51.003750     2.0      3426.697725         False          False    True
5    3728.698975    3426.698975 -3802.268555  3728.698975   453.005000  3426.698975    0.00000  302.000000      253.005000     1.0      3426.697725         False          False    True
6    4509.211475    3575.693975 -3802.268555  4509.211475  1082.512500  3575.693975  333.51625  600.001250      600.001250     2.0      3426.697725         False          False    True
7    4509.211475    3575.693975 -3802.268555  4509.211475     0.010000  3575.693975  333.51625  600.001250      500.001250     2.0      3426.697725         False          False    True
8    4509.211475    3775.693848 -3802.268555  4509.211475   151.020000  3775.693848  333.51625  400.001377      400.001250     3.0      3426.697725         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=480001/800.[0m
[08/15 12:59:26]  --------------------------------------------------------------------------------
[08/15 12:59:26]  Iteration: 60 (0 solution, 59 counterexamples)
[08/15 12:59:34]  Generator returned sat in 5.102143 secs.
[08/15 12:59:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:59:35]  Improved gap from 0.000625 to 68.75
[08/15 12:59:35]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:59:35]  Verifer returned sat in 1.467364 secs.
[08/15 12:59:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3042.114014    2942.109131 -4056.293701  3042.114014  271.247314  2942.109131   0.002686  100.002197      100.002197     5.0      2942.109131            -1             -1     -1
1    3213.356689    3042.108887 -4056.293701  3213.356689  271.244873  3042.108887   0.002686  171.245117      171.244873     5.0      3213.354004         False           True   True
2    3313.356445    3042.111328 -4056.293701  3313.356445  271.244873  3042.111328   0.002686  271.242432      171.244629     3.0      3213.354004         False           True  False
3    3313.356445    3242.108887 -4056.293701  3313.356445  271.242432  3242.108887   0.002686   71.244873       71.244629     2.0      3313.353760         False          False  False
4    3541.111328    3342.108887 -4056.293701  3541.111328  298.999756  3342.108887  27.754883  171.247559      171.247314     1.0      3313.353760         False          False  False
5    3541.111328    3342.111328 -4056.293701  3541.111328    0.010000  3342.111328  27.754883  171.245117       71.247314     2.0      3313.353760         False          False   True
6    3541.111328    3442.109131 -4027.541016  3541.111328    0.010000  3442.109131  27.754883   71.247314        0.000000     3.0      3313.353760         False          False   True
7    3541.111328    3513.356445 -3996.291260  3541.111328    0.010000  3513.356445  27.754883    0.000000      -68.750244     4.0      3313.353760         False          False   True
8    3711.358887    3582.106689 -3996.291260  3711.358887  170.247559  3582.106689  27.754883  101.497314        1.497314     1.0      3683.604004          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=701429/4096.[0m
[08/15 12:59:36]  --------------------------------------------------------------------------------
[08/15 12:59:36]  Iteration: 61 (0 solution, 60 counterexamples)
[08/15 12:59:47]  Generator returned sat in 9.763641 secs.
[08/15 12:59:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:59:48]  Improved gap from 39.9975 to 100
[08/15 12:59:49]  Improved number of small numbers from 64 to 70 out of a max of 114
[08/15 12:59:49]  Verifer returned sat in 1.304791 secs.
[08/15 12:59:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3220.108887    2560.114766 -3674.299961  3220.108887    0.000732  2560.114766   0.000000  659.994121      659.993496     7.0      2560.114766            -1             -1    True
1    3220.109453    2560.115391 -3674.299961  3220.109453  659.994688  2560.115391   0.000000  659.994063      559.994063     7.0      2560.114766         False          False    True
2    3341.110703    2660.115391 -3674.299961  3341.110703  780.995312  2660.115391   0.000625  680.994688      580.994688     7.0      2560.114766         False          False    True
3    3341.110703    2860.114766 -3674.299961  3341.110703   53.330625  2860.114766   0.000625  480.995313      480.994687     8.0      3341.110078         False          False    True
4    3541.111328    2860.115391 -3674.299961  3541.111328  680.995937  2860.115391   0.001250  680.994688      580.994688     7.0      3341.110078         False           True   False
5    3541.111328    3020.108828 -3674.299961  3541.111328    0.010000  3020.108828   0.001250  521.001250      480.994687     8.0      3341.110078         False          False    True
6    3741.111953    3060.115479 -3674.299961  3741.111953  721.001875  3060.115479   0.001875  680.994600      580.994688     7.0      3341.110078         False           True   False
7    3741.111953    3220.108828 -3674.299961  3741.111953    0.010000  3220.108828   0.001875  521.001250      480.994687     8.0      3341.110078         False          False    True
8    3941.112578    3360.115234 -3674.299961  3941.112578  721.001875  3360.115234   0.002500  580.994844      580.994688     5.0      3341.110078         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=1859183/3200.[0m
[08/15 12:59:50]  --------------------------------------------------------------------------------
[08/15 12:59:50]  Iteration: 62 (0 solution, 61 counterexamples)
[08/15 12:59:58]  Generator returned sat in 6.504552 secs.
[08/15 12:59:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:59:58]  Improved gap from 0.0 to 100
[08/15 12:59:59]  Improved number of small numbers from 70 to 83 out of a max of 114
[08/15 12:59:59]  Verifer returned sat in 0.939320 secs.
[08/15 12:59:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3160.114746    2460.114990 -3574.299961  3160.114746    0.001221  2460.114990    0.000000  699.999756      699.999355     9.0      2460.114990            -1             -1     -1
1    3160.114746    2460.115391 -3574.299961  3160.114746    0.000732  2460.115391    0.000000  699.999355      599.999355     5.0      3160.114746         False           True  False
2    3160.117266    2660.115391 -3574.299961  3160.117266  700.001875  2660.115391    0.000000  500.001875      500.001875     6.0      3160.114746         False          False  False
3    3360.116641    2660.116016 -3574.299961  3360.116641  700.001250  2660.116016    0.000625  700.000000      600.000625     7.0      3360.116016         False          False  False
4    3360.116641    2860.115391 -3574.299961  3360.116641    0.010000  2860.115391    0.000625  500.000625      500.000625     8.0      3360.116016         False          False   True
5    3659.136016    2860.115967 -3574.299961  3659.136016  799.020000  2860.115967   99.020000  700.000049      600.000625     7.0      3360.116016         False           True  False
6    3659.136016    3060.115391 -3574.299961  3659.136016    0.010000  3060.115391   99.020000  500.000625      500.000625     8.0      3360.116016         False          False   True
7    3958.154141    3060.115479 -3574.299961  3958.154141  799.018750  3060.115479  198.038125  700.000537      600.000625     9.0      3360.116016         False           True  False
8    3958.154141    3160.115479 -3574.299961  3958.154141    0.010000  3160.115479  198.038125  600.000537      500.000625     7.0      3360.116016         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=960001/1600.[0m
[08/15 13:00:00]  --------------------------------------------------------------------------------
[08/15 13:00:00]  Iteration: 63 (0 solution, 62 counterexamples)
[08/15 13:00:12]  Generator returned sat in 10.204385 secs.
[08/15 13:00:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:00:12]  Improved gap from 0.0 to 100
[08/15 13:00:13]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 13:00:13]  Verifer returned sat in 0.481097 secs.
[08/15 13:00:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2260.215332    2260.115234 -3574.300049  2260.215332    0.049805  2260.115234   0.050049    0.050049      -99.949951     2.0      2260.115234            -1             -1     -1
1    2660.115234    2460.115234 -3574.300049  2660.115234  399.949951  2460.115234   0.050049  199.949951      199.949951     1.0      2260.115234         False          False   True
2    3062.315430    2560.115234 -3574.300049  3062.315430  602.150146  2560.115234   0.100098  502.100098      502.100098     2.0      2260.115234         False          False   True
3    3162.265381    2560.115234 -3574.300049  3162.265381  602.050049  2560.115234   0.100098  602.050049      502.050049     2.0      3162.165283         False          False   True
4    3162.265381    2660.115479 -3574.300049  3162.265381  601.050049  2660.115479   0.100098  502.049805      402.050049     3.0      3162.165283         False          False   True
5    3261.265625    2760.115234 -3574.300049  3261.265625  601.050049  2760.115234   0.100098  501.050293      401.050293     4.0      3162.165283         False           True  False
6    3361.265381    2960.115234 -3574.300049  3361.265381  601.050049  2960.115234   0.100098  401.050049      401.050049     5.0      3162.165283         False           True  False
7    3561.265381    2961.115479 -3574.300049  3561.265381  601.050049  2961.115479   0.100098  600.049805      501.050049     6.0      3162.165283         False           True  False
8    3562.265625    3160.115234 -3574.300049  3562.265625  601.050049  3160.115234   0.100098  402.050293      402.050293     6.0      3162.165283         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=1028301/2048.[0m
[08/15 13:00:13]  --------------------------------------------------------------------------------
[08/15 13:00:13]  Iteration: 64 (0 solution, 63 counterexamples)
[08/15 13:00:22]  Generator returned sat in 6.318103 secs.
[08/15 13:00:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:00:23]  Improved gap from 7.6875 to 68.75
[08/15 13:00:24]  Improved number of small numbers from 67 to 80 out of a max of 114
[08/15 13:00:24]  Verifer returned sat in 2.397318 secs.
[08/15 13:00:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3443.406738    3363.573200 -3594.466797  3443.406738    0.002500  3363.573200    0.00000   79.833538       79.833457     6.0      3363.573200            -1             -1     -1
1    3443.406738    3374.656533 -3574.300293  3443.406738   79.830811  3374.656533    0.00000   68.750205       -0.000039     2.0      3363.573200         False           True  False
2    3454.484867    3443.409180 -3574.300049  3454.484867   79.828333  3443.409180    0.00000   11.075687      -88.921667     1.0      3454.484867         False          False  False
3    3543.408936    3543.406533 -3574.300049  3543.408936   99.999756  3543.406533    0.00000    0.002402      -99.997598     1.0      3454.484867         False          False  False
4    3812.156533    3740.909033 -3574.300049  3812.156533  268.750000  3740.909033    0.00000   71.247500       68.750000     1.0      3454.484867         False          False  False
5    4289.287783    3843.403809 -3574.300049  4289.287783  548.378750  3843.403809  377.13125   68.752725       68.750000     1.0      3454.484867         False          False  False
6    4289.287783    3843.406533 -3543.050049  4289.287783    0.010000  3843.406533  377.13125   68.750000        0.000000     2.0      3454.484867         False          False   True
7    4289.287783    3912.156533 -3511.800049  4289.287783    0.010000  3912.156533  377.13125    0.000000      -68.750000     3.0      3454.484867         False          False   True
8    4545.159033    3980.906738 -3511.800049  4545.159033  255.871250  3980.906738  395.50250  168.749795       68.750000     1.0      4149.656533          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=275/4.[0m
[08/15 13:00:25]  --------------------------------------------------------------------------------
[08/15 13:00:25]  Iteration: 65 (0 solution, 64 counterexamples)
[08/15 13:00:45]  Generator returned sat in 18.411114 secs.
[08/15 13:00:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:00:46]  Improved gap from 4.0025 to 68.75
[08/15 13:00:46]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 13:00:46]  Verifer returned sat in 0.889711 secs.
[08/15 13:00:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3451.784912    3283.033447 -4120.165039  3451.784912    0.001221  3283.033447    0.000000  168.751465      168.749023     2.0      3283.033447            -1             -1   False
1    3451.784912    3383.035889 -4120.165039  3451.784912  168.750000  3383.035889    0.000000   68.749023       68.749023     3.0      3283.033447         False          False   False
2    3551.784668    3451.784668 -4120.165039  3551.784668  168.748779  3451.784668    0.000000  100.000000       68.748779     4.0      3551.784668          True           True   False
3    3551.784668    3551.783447 -4120.165039  3551.784668    0.001221  3551.783447    0.000000    0.001221      -31.251221     2.0      3551.784668         False           True   False
4    3954.908447    3680.538330 -4120.165039  3954.908447  403.125000  3680.538330  203.122559   71.247559       68.750000     1.0      3551.784668         False          False   False
5    3954.908447    3683.035889 -4088.915039  3954.908447    0.010000  3683.035889  203.122559   68.750000        0.000000     2.0      3551.784668         False          False    True
6    3954.908447    3751.785889 -4057.665039  3954.908447    0.010000  3751.785889  203.122559    0.000000      -68.750000     3.0      3551.784668         False          False    True
7    4254.912109    3920.535889 -4057.665039  4254.912109  300.003662  3920.535889  265.626221   68.750000       68.750000     1.0      3989.285889          True           True   False
8    4254.912109    3920.537354 -4057.665039  4254.912109    0.010000  3920.537354  265.626221   68.748535      -31.250000     2.0      3989.285889         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=275/4.[0m
[08/15 13:00:47]  --------------------------------------------------------------------------------
[08/15 13:00:47]  Iteration: 66 (0 solution, 65 counterexamples)
[08/15 13:00:55]  Generator returned sat in 5.882847 secs.
[08/15 13:00:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:00:55]  Improved gap from 0.000625 to 100
[08/15 13:00:56]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 13:00:56]  Verifer returned sat in 0.463985 secs.
[08/15 13:00:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3556.428223    3556.378418 -4120.165039  3556.428223    0.050000  3556.378418   0.000000    0.049805       -0.150146     2.0      3556.378418            -1             -1   False
1    3656.528320    3653.378662 -4120.165039  3656.528320  100.149902  3653.378662   0.000000    3.149658       -0.050049     1.0      3556.378418         False          False   False
2    3753.478516    3656.578613 -4120.165039  3753.478516  100.099854  3656.578613   0.000000   96.899902       -3.099854     1.0      3753.478516         False          False   False
3    3756.628662    3756.578369 -4120.165039  3756.628662  100.050049  3756.578369   0.000000    0.050293      -99.949707     1.0      3756.628662         False          False   False
4    3955.778320    3856.578613 -4120.165039  3955.778320  199.199951  3856.578613   0.000000   99.199707       -0.800049     1.0      3756.628662         False          False   False
5    4058.778564    3957.578613 -4120.165039  4058.778564  202.199951  3957.578613   0.050049  101.149902        2.150146     1.0      3756.628662         False          False   False
6    4158.828613    4156.578369 -4120.165039  4158.828613  201.199951  4156.578369   0.100098    2.150146        2.150146     1.0      3756.628662         False          False    True
7    4356.878418    4159.578613 -4120.165039  4356.878418  200.199951  4159.578613  98.149902   99.149902        2.150146     1.0      3756.628662         False          False    True
8    4456.928467    4258.778320 -4120.165039  4456.928467  199.199951  4258.778320  98.199951   99.950195        2.150146     1.0      3756.628662         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=8807/4096.[0m
[08/15 13:00:56]  --------------------------------------------------------------------------------
[08/15 13:00:56]  Iteration: 67 (0 solution, 66 counterexamples)
[08/15 13:01:10]  Generator returned sat in 12.007184 secs.
[08/15 13:01:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:01:13]  Improved gap from 0.05 to 39.0625
[08/15 13:01:13]  Improved number of small numbers from 81 to 114 out of a max of 114
[08/15 13:01:13]  Verifer returned sat in 2.437723 secs.
[08/15 13:01:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3568.853516    3407.615967 -4181.102539  3568.853516    0.049805  3407.615967    0.000000  161.237549      100.000244     6.0      3407.615967            -1             -1     -1
1    3568.903320    3468.853271 -4181.102539  3568.903320  161.287354  3468.853271    0.000000  100.050049        0.050049     2.0      3407.615967         False           True  False
2    3607.865723    3568.853271 -4120.165039  3607.865723  139.012451  3568.853271    0.000000   39.012451       -0.050049     3.0      3607.865723         False          False  False
3    3607.965820    3607.915771 -4120.165039  3607.965820   39.112549  3607.915771    0.000000    0.050049      -99.949951     1.0      3607.965820         False          False  False
4    3808.215576    3807.915771 -4120.165039  3808.215576  200.299805  3807.915771    0.199951    0.099854        0.099854     1.0      3607.965820         False          False  False
5    3908.265625    3808.065918 -4120.165039  3908.265625  100.149902  3808.065918    0.250000   99.949707        0.099854     1.0      3607.965820         False          False   True
6    3908.265625    3907.915771 -4059.227783  3908.265625   50.074951  3907.915771    0.250000    0.099854      -38.962891     2.0      3607.965820         False          False   True
7    4209.165771    4046.978516 -4059.227783  4209.165771  301.000000  4046.978516  162.087402    0.099854        0.099854     1.0      3607.965820         False          False   True
8    4359.565918    4047.128174 -4059.227783  4359.565918  150.500000  4047.128174  212.487549   99.950195        0.099854     1.0      3607.965820         False          False   True
high_util=False, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=409/4096.[0m
[08/15 13:01:14]  --------------------------------------------------------------------------------
[08/15 13:01:14]  Iteration: 68 (0 solution, 67 counterexamples)
[08/15 13:01:18]  Generator returned sat in 2.307142 secs.
[08/15 13:01:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:01:21]  Improved gap from 39.00634765625 to 39.0625
[08/15 13:01:22]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/15 13:01:22]  Verifer returned sat in 3.367299 secs.
[08/15 13:01:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5377.007812    5375.607801 -3725.142578  5377.007812  101.600000  5375.607801        0.0    1.400011       -0.099784     7.0      5375.607801            -1             -1     -1
1    5477.107801    5377.107666 -3725.142578  5477.107801  101.500000  5377.107666        0.0  100.000135        0.000205     1.0      5477.107801         False           True  False
2    5477.307617    5477.207764 -3725.142578  5477.307617  100.199951  5477.207764        0.0    0.099854      -99.799979     1.0      5477.307617         False          False  False
3    5577.307617    5577.207801 -3681.142783  5577.307617  100.099854  5577.207801        0.0    0.099816      -55.800184     1.0      5577.307617         False          False  False
4    5777.807801    5733.107801 -3681.142783  5777.807801  200.600000  5733.107801       44.5    0.200000        0.200000     1.0      5577.307617         False          False  False
5    5877.907801    5822.557617 -3681.142783  5877.907801  100.300000  5822.557617       44.6   10.750184        0.200000     1.0      5577.307617         False          False   True
6    5917.307617    5833.307801 -3620.742783  5917.307617   50.150000  5833.307801       44.6   39.399816       -0.000184     2.0      5577.307617         False          False   True
7    6135.007801    5944.457801 -3620.742783  6135.007801  257.100000  5944.457801      162.1   28.450000        0.200000     1.0      5577.307617         False          False   True
8    6235.107801    5973.007812 -3620.742783  6235.107801  128.550000  5973.007812      162.2   99.899989        0.200000     1.0      5577.307617         False          False   True
high_util=False, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/15 13:01:22]  --------------------------------------------------------------------------------
[08/15 13:01:22]  Iteration: 69 (0 solution, 68 counterexamples)
[08/15 13:01:31]  Generator returned sat in 6.515305 secs.
[08/15 13:01:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:01:33]  Improved gap from 0.1 to 79.6875
[08/15 13:01:33]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 13:01:33]  Verifer returned sat in 2.308349 secs.
[08/15 13:01:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5605.747803    5526.060303 -3874.095459  5605.747803    0.100000  5526.060303    0.000000  79.687500       79.687500     2.0      5526.060303            -1             -1   False
1    5605.747803    5526.060303 -3853.782959  5605.747803    0.100098  5526.060303    0.000000  79.687500        0.000000     2.0      5526.060303         False          False   False
2    5632.172607    5632.072998 -3853.782959  5632.172607  106.112305  5632.072998    0.000000   0.099609      -73.575195     1.0      5526.060303         False          False   False
3    5885.335449    5805.747803 -3853.782959  5885.335449  253.262451  5805.747803    0.000000  79.587646       79.587646     1.0      5526.060303         False          False   False
4    6086.435303    5905.647705 -3853.782959  6086.435303  280.687500  5905.647705  101.099854  79.687744       79.587646     1.0      5526.060303         False          False   False
5    6086.435303    5905.747803 -3833.470459  6086.435303    1.000000  5905.747803  101.099854  79.587646       -0.099854     2.0      5526.060303         False          False    True
6    6145.185059    5985.435303 -3813.895264  6145.185059  138.337402  5985.435303  101.099854  58.649902      -21.774902     1.0      5526.060303         False          False    True
7    6246.547607    6065.860352 -3793.583008  6246.547607  160.012451  6065.860352  101.099854  79.587402       -0.100098     1.0      5526.060303         False          False    True
8    6328.072754    6145.547852 -3793.582764  6328.072754  161.112549  6145.547852  101.099854  81.425049      -18.574707     1.0      5526.060303         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=325991/4096.[0m
[08/15 13:01:34]  --------------------------------------------------------------------------------
[08/15 13:01:34]  Iteration: 70 (0 solution, 69 counterexamples)
[08/15 13:01:54]  Generator returned sat in 18.009076 secs.
[08/15 13:01:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:01:57]  Improved gap from 39.95 to 40.625
[08/15 13:01:57]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 13:01:57]  Verifer returned sat in 2.866034 secs.
[08/15 13:01:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5703.569824    5603.944824 -3933.676514  5703.569824    0.031250  5603.944824    0.00000   99.62500        99.62500     1.0      5603.944824            -1             -1    True
1    5703.569824    5603.944824 -3933.301514  5703.569824    0.031250  5603.944824    0.00000   99.62500         0.00000     1.0      5603.944824         False          False    True
2    5803.538574    5803.507324 -3933.301514  5803.538574  199.593750  5803.507324    0.00000    0.03125        -0.03125     1.0      5603.944824         False          False    True
3    5844.194824    5803.569824 -3873.926514  5844.194824   40.687500  5803.569824    0.00000   40.62500         0.00000     1.0      5844.194824         False          False    True
4    6002.194824    5944.194824 -3873.926514  6002.194824  198.625000  5944.194824    0.03125   57.96875        57.96875     1.0      5844.194824         False          False    True
5    6043.538574    5944.226074 -3873.239014  6043.538574   99.312500  5944.226074    0.03125   99.28125         0.00000     2.0      5844.194824         False          False    True
6    6083.976074    6043.538574 -3813.895264  6083.976074  139.718750  6043.538574    0.03125   40.40625        -0.21875     1.0      5844.194824         False          False    True
7    6282.538574    6084.163574 -3813.895264  6282.538574  238.968750  6084.163574   40.40625  157.96875        57.96875     1.0      5844.194824         False          False    True
8    6282.538574    6184.163574 -3813.895264  6282.538574  119.484375  6184.163574   40.40625   57.96875       -42.03125     2.0      5844.194824         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1855/32.[0m
[08/15 13:01:58]  --------------------------------------------------------------------------------
[08/15 13:01:58]  Iteration: 71 (0 solution, 70 counterexamples)
[08/15 13:02:15]  Generator returned sat in 14.775301 secs.
[08/15 13:02:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:02:15]  Improved gap from 0.05 to 100
[08/15 13:02:15]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/15 13:02:15]  Verifer returned sat in 0.417938 secs.
[08/15 13:02:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5745.169678    5545.194336 -3813.895264  5745.169678    0.050000  5545.194336   0.000000  199.975342      199.975098     2.0      5545.194336            -1             -1    True
1    5745.169678    5645.194336 -3813.895264  5745.169678    0.050000  5645.194336   0.000000   99.975342       99.975098     2.0      5545.194336         False          False    True
2    5745.169678    5745.144531 -3813.895264  5745.169678    0.025146  5745.144531   0.000000    0.025146       -0.024902     3.0      5745.169678         False          False    True
3    6346.169678    5745.194580 -3813.895264  6346.169678  601.025146  5745.194580   0.925049  600.050049      500.050049     1.0      5745.169678         False           True   False
4    6346.169678    5944.194580 -3813.895264  6346.169678  600.025146  5944.194580   0.925049  401.050049      400.050049     2.0      5745.169678         False          False    True
5    6546.144775    6044.194336 -3813.895264  6546.144775  601.025146  6044.194336   0.925049  501.025391      500.025146     3.0      5745.169678         False          False    True
6    6646.144531    6144.194580 -3813.895264  6646.144531  601.025146  6144.194580   0.925049  501.024902      500.024902     4.0      6645.219482          True           True   False
7    6746.144775    6244.194336 -3813.895264  6746.144775  601.025146  6244.194336   0.925049  501.025391      500.025146     5.0      6645.219482         False           True   False
8    6846.144531    6245.194580 -3813.895264  6846.144531  601.025146  6245.194580   0.925049  600.024902      500.024902     6.0      6645.219482         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2048205/4096.[0m
[08/15 13:02:16]  --------------------------------------------------------------------------------
[08/15 13:02:16]  Iteration: 72 (0 solution, 71 counterexamples)
[08/15 13:02:37]  Generator returned sat in 19.013915 secs.
[08/15 13:02:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:02:51]  Improved gap from 0.0 to 39.0625
[08/15 13:02:52]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/15 13:02:52]  Verifer returned sat in 14.244965 secs.
[08/15 13:02:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6197.137207    5956.081787 -4304.902588  6197.137207  241.055176  5956.081787   0.000000  241.055420      160.935303     3.0      5956.081787            -1             -1   False
1    6197.137207    6036.201904 -4304.902588  6197.137207  241.052734  6036.201904   0.000000  160.935303       60.935303     4.0      6197.137207         False          False   False
2    6197.142090    6197.139404 -4304.902588  6197.142090  160.940186  6197.139404   0.000000    0.002686      -39.059814     1.0      6197.142090         False          False   False
3    6336.201904    6297.139404 -4304.902588  6336.201904  139.062500  6297.139404   0.000000   39.062500        0.000000     1.0      6336.201904         False          False   False
4    6536.199463    6436.201904 -4304.902588  6536.199463  239.060059  6436.201904   0.000000   99.997559       99.997559     1.0      6336.201904         False          False   False
5    6754.731934    6536.201904 -4304.902588  6754.731934  318.530029  6536.201904  79.467529  139.062500      139.062500     1.0      6336.201904         False          False   False
6    6754.731934    6636.199707 -4304.902588  6754.731934    1.000000  6636.199707  79.467529   39.064697       39.062500     2.0      6336.201904         False          False    True
7    6754.731934    6636.201904 -4243.965088  6754.731934    0.010000  6636.201904  79.467529   39.062500        0.000000     3.0      6336.201904         False          False    True
8    6754.731934    6675.264404 -4243.965088  6754.731934    0.010000  6675.264404  79.467529    0.000000     -100.000000     4.0      6336.201904         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2225/16.[0m
[08/15 13:02:52]  --------------------------------------------------------------------------------
[08/15 13:02:52]  Iteration: 73 (0 solution, 72 counterexamples)
[08/15 13:02:58]  Generator returned sat in 3.704309 secs.
[08/15 13:02:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:03:08]  Improved gap from 0.0 to 39.0625
[08/15 13:03:09]  Improved number of small numbers from 86 to 90 out of a max of 114
[08/15 13:03:09]  Verifer returned sat in 11.037073 secs.
[08/15 13:03:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6237.214404    6115.639404 -3356.510088  6237.214404    0.049805  6115.639404     0.0000  121.575000      121.525000     6.0      6115.639404            -1             -1   False
1    6315.639404    6115.689404 -3356.510088  6315.639404  200.000000  6115.689404    78.4250  121.525000       21.525000     6.0      6115.639404         False          False   False
2    6394.064404    6237.214404 -3356.510010  6394.064404  199.950000  6237.214404    78.4250   78.425000       -0.049922     7.0      6315.639404         False          False    True
3    6395.814404    6315.689404 -3295.572588  6395.814404   80.175000  6315.689404    78.4250    1.700000      -37.362500     1.0      6317.389404         False           True   False
4    6533.226904    6454.751904 -3295.572588  6533.226904  139.112500  6454.751904    78.4250    0.050000        0.050000     1.0      6317.389404         False          False   False
5    6771.264404    6454.851807 -3295.572588  6771.264404  238.087500  6454.851807   194.9875  121.425098       21.525000     1.0      6317.389404         False          False   False
6    6771.264404    6555.639404 -3235.522588  6771.264404  120.043750  6555.639404   194.9875   20.637500      -18.425000     2.0      6317.389404         False          False    True
7    6991.576904    6594.701904 -3235.522588  6991.576904  240.950000  6594.701904   275.3500  121.525000       21.525000     1.0      6317.389404         False          False    True
8    6991.576904    6694.701904 -3235.522461  6991.576904  121.475000  6694.701904   275.3500   21.525000      -78.474873     2.0      6317.389404         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=861/40.[0m
[08/15 13:03:10]  --------------------------------------------------------------------------------
[08/15 13:03:10]  Iteration: 74 (0 solution, 73 counterexamples)
[08/15 13:03:24]  Generator returned sat in 11.336340 secs.
[08/15 13:03:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:03:24]  Improved gap from 0.0 to 100
[08/15 13:03:25]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/15 13:03:25]  Verifer returned sat in 0.646847 secs.
[08/15 13:03:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5914.589600    5720.389404 -3356.510254  5914.589600    0.099854  5720.389404   0.000000  194.200195      100.000000     5.0      5720.389404            -1             -1   False
1    5914.589600    5814.589600 -3356.510254  5914.589600    0.100098  5814.589600   0.000000  100.000000        0.000000     3.0      5720.389404         False          False   False
2    5914.589600    5914.589600 -3356.510254  5914.589600    0.100098  5914.589600   0.000000    0.000000     -100.000000     3.0      5720.389404         False          False   False
3    6210.389404    6114.389404 -3356.510254  6210.389404  295.799805  6114.389404   0.000000   96.000000       95.799805     1.0      5720.389404         False          False   False
4    6310.389404    6214.589600 -3356.510254  6310.389404  196.000000  6214.589600   0.000000   95.799805       95.799805     1.0      5720.389404         False          False   False
5    6413.589600    6312.589355 -3356.510254  6413.589600  199.000000  6312.589355   3.100098   97.900146       95.899902     1.0      5720.389404         False          False   False
6    6513.689453    6413.589355 -3356.510254  6513.689453  198.000000  6413.589355   3.199951   96.900146       95.899902     1.0      5720.389404         False          False    True
7    6613.789307    6514.589600 -3356.510254  6613.789307  197.000000  6514.589600   3.299805   95.899902       95.899902     1.0      5720.389404         False          False    True
8    6713.889404    6610.589355 -3356.510254  6713.889404  196.000000  6610.589355   3.399902   99.900146       95.899902     1.0      5720.389404         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=196403/2048.[0m
[08/15 13:03:25]  --------------------------------------------------------------------------------
[08/15 13:03:25]  Iteration: 75 (0 solution, 74 counterexamples)
[08/15 13:03:37]  Generator returned sat in 9.469437 secs.
[08/15 13:03:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:03:38]  Improved gap from 0.05 to 100
[08/15 13:03:38]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/15 13:03:38]  Verifer returned sat in 0.960879 secs.
[08/15 13:03:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7366.889404    6966.839111 -4508.910156  7366.889404    0.049805  6966.839111        0.0  400.050293      399.900146     4.0      6966.839111            -1             -1   False
1    7366.889404    6966.989258 -4508.910156  7366.889404  399.999756  6966.989258        0.0  399.900146      299.900146     4.0      6966.839111         False          False   False
2    7366.939453    7166.989258 -4508.910156  7366.939453  399.950195  7166.989258        0.0  199.950195      199.950195     5.0      7366.939453         False          False   False
3    7867.039062    7166.989258 -4508.910156  7867.039062  700.049805  7166.989258        0.0  700.049805      600.049805     5.0      7366.939453         False           True   False
4    7867.039062    7366.989258 -4508.910156  7867.039062  700.049805  7366.989258        0.0  500.049805      500.049805     2.0      7366.939453         False           True   False
5    8067.039062    7367.039307 -4508.910156  8067.039062  700.049805  7367.039307        0.0  699.999756      600.049805     3.0      7366.939453         False          False   False
6    8067.089111    7466.989258 -4508.910156  8067.089111  700.049805  7466.989258        0.0  600.099854      500.099854     4.0      7366.939453         False          False   False
7    8167.039062    7666.989258 -4508.910156  8167.039062  700.049805  7666.989258        0.0  500.049805      500.049805     5.0      7366.939453         False          False   False
8    8367.039062    7666.989502 -4508.910156  8367.039062  700.049805  7666.989502        0.0  700.049561      600.049805     6.0      8367.039062          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6001/10.[0m
[08/15 13:03:39]  --------------------------------------------------------------------------------
[08/15 13:03:39]  Iteration: 76 (0 solution, 75 counterexamples)
[08/15 13:03:47]  Generator returned sat in 5.675279 secs.
[08/15 13:03:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:03:49]  Improved gap from 39.6 to 40.625
[08/15 13:03:50]  Improved number of small numbers from 82 to 92 out of a max of 114
[08/15 13:03:50]  Verifer returned sat in 3.135175 secs.
[08/15 13:03:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7590.264160    7580.305924 -5122.376953  7590.264160    9.858154  7580.305924      0.000    9.958236        9.958105     4.0      7580.305924            -1             -1    True
1    7590.264160    7590.164062 -5072.860352  7590.264160    9.858398  7590.164062      0.000    0.100098      -40.525293     4.0      7580.305924         False          False    True
2    7730.989258    7730.789258 -5072.860352  7730.989258  140.825195  7730.789258      0.000    0.200000        0.199805     1.0      7580.305924         False          False    True
3    7730.989258    7730.889258 -5013.585156  7730.989258    0.099854  7730.889258      0.000    0.100000      -40.525000     2.0      7730.989258         False          False    True
4    7880.472591    7871.514258 -5013.585156  7880.472591  149.583333  7871.514258      0.100    8.858333        8.858333     1.0      7730.989258         False          False    True
5    7947.405924    7871.514258 -4989.376953  7947.405924   75.791667  7871.514258      0.100   75.791667       -0.000130     1.0      7730.989258         False          False    True
6    8011.339258    7947.405924 -4953.410156  8011.339258  139.725000  7947.405924      0.100   63.833333       -0.100000     1.0      7730.989258         False          False    True
7    8163.022591    8011.339355 -4953.410156  8163.022591  215.516667  8011.339355     42.825  108.858236        8.858333     1.0      7730.989258         False          False    True
8    8163.022591    8111.339355 -4953.410156  8163.022591  108.758333  8111.339355     42.825    8.858236      -91.141667     2.0      7730.989258         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1063/120.[0m
[08/15 13:03:51]  --------------------------------------------------------------------------------
[08/15 13:03:51]  Iteration: 77 (0 solution, 76 counterexamples)
[08/15 13:03:59]  Generator returned sat in 5.663061 secs.
[08/15 13:03:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:04:01]  Improved gap from 0.05 to 39.0625
[08/15 13:04:02]  Improved number of small numbers from 66 to 87 out of a max of 114
[08/15 13:04:02]  Verifer returned sat in 3.312130 secs.
[08/15 13:04:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5601.781738    5601.781611 -5013.585205  5601.781738  200.050049  5601.781611     0.0000   0.000127      -99.999873     5.0      5601.781611            -1             -1   False
1    5801.781611    5728.006592 -5013.585205  5801.781611  200.000000  5728.006592     0.0000  73.775020        0.000000     1.0      5801.781611         False          False   False
2    5862.769043    5862.718994 -5013.585205  5862.769043  134.762451  5862.718994     0.0000   0.050049      -39.012568     1.0      5862.769043         False          False   False
3    5997.431396    5997.381611 -5013.585205  5997.431396  134.712402  5997.381611     0.0000   0.049785       -4.350215     1.0      5997.431396         False          False   False
4    6391.981611    6101.781611 -5013.585205  6391.981611  394.600000  6101.781611   290.1000   0.100000        0.100000     1.0      5997.431396         False          False   False
5    6590.181611    6201.781611 -5013.585205  6590.181611  198.300000  6201.781611   388.3000   0.100000        0.100000     1.0      5997.431396         False          False    True
6    6690.231611    6201.931641 -5013.585205  6690.231611  100.150000  6201.931641   388.3500  99.949971        0.100000     1.0      5997.431396         False          False    True
7    6690.231611    6301.831611 -4952.697705  6690.231611   51.075000  6301.831611   388.3500   0.050000      -39.012500     2.0      5997.431396         False          False    True
8    6891.231611    6341.731445 -4952.697705  6891.231611  201.050000  6341.731445   450.2375  99.262666        0.100000     1.0      5997.431396         False          False    True
high_util=False, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/15 13:04:03]  --------------------------------------------------------------------------------
[08/15 13:04:03]  Iteration: 78 (0 solution, 77 counterexamples)
[08/15 13:04:12]  Generator returned sat in 6.931143 secs.
[08/15 13:04:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:04:15]  Improved gap from 0.0025 to 68.75
[08/15 13:04:16]  Improved number of small numbers from 62 to 82 out of a max of 114
[08/15 13:04:16]  Verifer returned sat in 3.745670 secs.
[08/15 13:04:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7086.535889    7086.485778 -5012.747803  7086.535889   97.883545  7086.485778       0.00    0.050111      -97.733271     4.0      7086.485778            -1             -1     -1
1    7184.319111    7184.269287 -5012.747754  7184.319111   97.833333  7184.269287       0.00    0.049824      -99.950000     1.0      7184.319111         False           True  False
2    7455.419189    7284.269287 -5012.747754  7455.419189  271.149902  7284.269287       0.00  171.149902       71.150078     1.0      7184.319111         False          False  False
3    7455.419189    7455.419111 -5012.747754  7455.419189  171.100098  7455.419111       0.00    0.000078      -28.849922     2.0      7455.419189         False          False  False
4    8007.819111    7584.269111 -5012.747754  8007.819111  552.400000  7584.269111     352.35   71.200000       71.200000     1.0      7455.419189         False          False  False
5    8213.819111    7615.819336 -5012.747754  8213.819111  277.200000  7615.819336     458.35  139.649775       71.200000     2.0      7455.419189         False          False   True
6    8213.819111    7686.719111 -4983.947754  8213.819111  139.600000  7686.719111     458.35   68.750000        0.000000     2.0      7455.419189         False          False   True
7    8213.869111    7755.469111 -4952.697754  8213.869111   68.800000  7755.469111     458.35    0.050000      -68.700000     3.0      7455.419189         False          False   True
8    8469.619111    7824.219238 -4952.697754  8469.619111  255.800000  7824.219238     474.20  171.199873       71.200000     1.0      7995.419111          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=356/5.[0m
[08/15 13:04:16]  --------------------------------------------------------------------------------
[08/15 13:04:16]  Iteration: 79 (0 solution, 78 counterexamples)
[08/15 13:04:27]  Generator returned sat in 7.942180 secs.
[08/15 13:04:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:04:29]  Improved gap from 0.0 to 68.75
[08/15 13:04:30]  Improved number of small numbers from 59 to 82 out of a max of 114
[08/15 13:04:30]  Verifer returned sat in 3.313159 secs.
[08/15 13:04:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7336.731445    7179.981611 -5012.747559  7336.731445    0.050000  7179.981611       0.00  156.749834       99.850029     2.0      7179.981611            -1             -1   False
1    7336.831611    7336.781738 -5012.747559  7336.831611  156.850000  7336.781738       0.00    0.049873       -0.049805     1.0      7179.981611         False          False   False
2    7405.631592    7336.881592 -4981.497803  7405.631592   68.849854  7336.881592       0.00   68.750000       -0.000068     1.0      7405.631592         False          False   False
3    7405.731445    7405.681611 -4950.297754  7405.731445   68.849854  7405.681611       0.00    0.049834      -68.700166     1.0      7405.631592         False          False   False
4    7743.231611    7574.356611 -4950.297754  7743.231611  337.550000  7574.356611       0.05  168.825000      168.750000     1.0      7405.631592         False          False   False
5    7743.231611    7574.431641 -4950.297754  7743.231611  168.775000  7574.431641       0.05  168.749971       68.750000     2.0      7405.631592         False          False    True
6    7743.231611    7674.431611 -4919.047754  7743.231611   83.387500  7674.431611       0.05   68.750000        0.000000     3.0      7405.631592         False          False    True
7    7743.231611    7743.181611 -4887.797754  7743.231611   40.693750  7743.181611       0.05    0.000000      -68.750000     4.0      7405.631592         False          False    True
8    7995.469111    7811.931641 -4887.797754  7995.469111  252.237500  7811.931641       0.05  183.487471       83.487500     1.0      7995.419111          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=675/4.[0m
[08/15 13:04:31]  --------------------------------------------------------------------------------
[08/15 13:04:31]  Iteration: 80 (0 solution, 79 counterexamples)
[08/15 13:04:39]  Generator returned sat in 5.609099 secs.
[08/15 13:04:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:04:42]  Improved gap from 68.75 to 68.75
[08/15 13:04:43]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/15 13:04:43]  Verifer returned sat in 3.888615 secs.
[08/15 13:04:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7368.797852    7338.464508 -4811.804443  7368.797852    0.050049  7338.464508       0.00   30.333343       30.333301     3.0      7338.464508            -1             -1   False
1    7368.797852    7368.747803 -4810.837891  7368.797852   30.283333  7368.747803       0.00    0.050049      -68.700146     3.0      7338.464508         False          False   False
2    7566.047852    7437.498047 -4810.837891  7566.047852  197.300049  7437.498047       0.00  128.549805       28.549854     1.0      7338.464508         False          False   False
3    7566.047852    7565.997842 -4810.837734  7566.047852    0.050049  7565.997842       0.00    0.050010      -71.449990     2.0      7566.047852         False          False   False
4    7906.297842    7735.047842 -4810.837734  7906.297842  340.300000  7735.047842       0.05  171.200000      168.750000     1.0      7566.047852         False          False   False
5    7906.297842    7737.498047 -4810.837734  7906.297842  171.150000  7737.498047       0.05  168.749795       68.750000     2.0      7566.047852         False          False    True
6    7906.297842    7837.497842 -4779.587734  7906.297842   84.575000  7837.497842       0.05   68.750000        0.000000     3.0      7566.047852         False          False    True
7    7906.297842    7906.247842 -4748.337891  7906.297842   41.287500  7906.247842       0.05    0.000000      -68.750156     4.0      7566.047852         False          False    True
8    8162.097842    7974.998047 -4748.337891  8162.097842  255.800000  7974.998047       0.05  187.049795       87.049844     1.0      8162.047842          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=675/4.[0m
[08/15 13:04:44]  --------------------------------------------------------------------------------
[08/15 13:04:44]  Iteration: 81 (0 solution, 80 counterexamples)
[08/15 13:05:03]  Generator returned sat in 16.616844 secs.
[08/15 13:05:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:05:05]  Improved gap from 0.0 to 79.6875
[08/15 13:05:06]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 13:05:06]  Verifer returned sat in 2.901197 secs.
[08/15 13:05:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7173.552979    7073.502686 -5063.587646  7173.552979    0.049805  7073.502686   0.050049  100.000244      100.000000     5.0      7073.502686            -1             -1     -1
1    7173.652832    7173.502686 -5063.587646  7173.652832  100.100098  7173.502686   0.050049    0.100098        0.099854     2.0      7073.502686         False          False   True
2    7173.652832    7173.502930 -5043.275146  7173.652832    0.050000  7173.502930   0.050049    0.099854      -79.587646     3.0      7173.602783         False          False   True
3    7349.996582    7349.896484 -5043.275146  7349.996582  176.443604  7349.896484   0.050049    0.050049       -3.243896     1.0      7173.602783         False          False   True
4    7575.365234    7453.140137 -5043.275146  7575.365234  225.418701  7453.140137  42.537354   79.687744       79.637451     1.0      7173.602783         False          False   True
5    7575.365234    7453.190430 -5022.962646  7575.365234    1.000000  7453.190430  42.537354   79.637451       -0.050049     2.0      7173.602783         False          False   True
6    7635.071533    7532.877930 -5002.650146  7635.071533  139.343750  7532.877930  42.537354   59.656250      -20.031250     1.0      7173.602783         False          False   True
7    7735.577881    7612.565430 -4983.175049  7735.577881  160.162598  7612.565430  42.537354   80.475098       -0.049805     1.0      7173.602783         False          False   True
8    7813.896729    7693.090576 -4983.175049  7813.896729  158.793945  7693.090576  42.537354   78.268799      -21.730957     1.0      7173.602783         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=326195/4096.[0m
[08/15 13:05:06]  --------------------------------------------------------------------------------
[08/15 13:05:06]  Iteration: 82 (0 solution, 81 counterexamples)
[08/15 13:05:22]  Generator returned sat in 13.080961 secs.
[08/15 13:05:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:05:23]  Improved gap from 0.00125 to 100
[08/15 13:05:24]  Improved number of small numbers from 60 to 102 out of a max of 114
[08/15 13:05:24]  Verifer returned sat in 1.435458 secs.
[08/15 13:05:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7390.185303    7090.285156 -5180.369873  7390.185303    0.100098  7090.285156        0.0  299.900146      199.900146     5.0      7090.285156            -1             -1     -1
1    7466.914795    7290.285156 -5180.369873  7466.914795  376.629639  7290.285156        0.0  176.629639      176.629639     5.0      7090.285156         False           True  False
2    7666.814941    7390.285156 -5180.369873  7666.814941  376.529785  7390.285156        0.0  276.529785      276.529785     2.0      7666.814941          True           True  False
3    7666.814941    7467.014648 -5180.369873  7666.814941   77.302058  7467.014648        0.0  199.800293      176.529785     2.0      7666.814941         False          False  False
4    7666.814941    7490.285400 -5180.369873  7666.814941  116.953086  7490.285400        0.0  176.529541       76.529785     3.0      7666.814941         False          False  False
5    7666.814941    7590.285188 -5180.369873  7666.814941  176.429630  7590.285188        0.0   76.529753      -23.470215     4.0      7666.814941         False           True  False
6    7855.929633    7690.285188 -5180.369873  7855.929633  265.644444  7690.285188        0.0  165.644444       65.644476     1.0      7666.814941         False           True  False
7    8089.751855    7890.185188 -5180.369873  8089.751855  399.466667  7890.185188        0.0  199.566667      199.466698     1.0      7666.814941         False          False  False
8    8490.385188    7890.285400 -5180.369873  8490.385188  600.200000  7890.285400        0.0  600.099788      500.100032     2.0      7666.814941         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2048819/4096.[0m
[08/15 13:05:24]  --------------------------------------------------------------------------------
[08/15 13:05:24]  Iteration: 83 (0 solution, 82 counterexamples)
[08/15 13:05:36]  Generator returned sat in 9.416991 secs.
[08/15 13:05:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:05:39]  Improved gap from 2.0 to 68.75
[08/15 13:05:39]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/15 13:05:39]  Verifer returned sat in 2.873557 secs.
[08/15 13:05:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7866.714844    7666.814941 -5756.899902  7866.714844    0.100098  7666.814941   0.000000  199.899902       99.900146     4.0      7666.814941            -1             -1   False
1    7866.714844    7766.814697 -5756.899902  7866.714844    0.100098  7766.814697   0.000000   99.900146       -0.099854     3.0      7666.814941         False          False   False
2    7866.914795    7866.814697 -5725.650146  7866.914795  100.100098  7866.814697   0.000000    0.100098      -68.650146     1.0      7666.814941         False          False   False
3    8375.064697    8035.564941 -5725.650146  8375.064697  508.250000  8035.564941  70.749756  268.750000      268.750000     1.0      7666.814941         False          False   False
4    8375.064697    8135.564941 -5725.650146  8375.064697  253.125000  8135.564941  70.749756  168.750000      168.750000     2.0      7666.814941         False          False    True
5    8375.064697    8166.814941 -5725.650146  8375.064697  127.562500  8166.814941  70.749756  137.500000       68.750000     3.0      7666.814941         False          False    True
6    8375.064697    8235.564941 -5694.400146  8375.064697   64.781250  8235.564941  70.749756   68.750000        0.000000     4.0      7666.814941         False          False    True
7    8375.064697    8304.314941 -5665.550049  8375.064697   33.390625  8304.314941  70.749756    0.000000      -71.149902     5.0      7666.814941         False          False    True
8    8628.189697    8375.464844 -5665.550049  8628.189697  253.125000  8375.464844  70.749756  181.975098       81.975098     1.0      8557.439941          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1075/4.[0m
[08/15 13:05:40]  --------------------------------------------------------------------------------
[08/15 13:05:40]  Iteration: 84 (0 solution, 83 counterexamples)
[08/15 13:05:51]  Generator returned sat in 9.133350 secs.
[08/15 13:05:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:05:59]  Improved gap from 0.05 to 39.0625
[08/15 13:06:00]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/15 13:06:00]  Verifer returned sat in 8.266979 secs.
[08/15 13:06:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8253.054688    8133.517197 -6657.019902  8253.054688    0.049805  8133.517197    0.00000  119.537490       99.949990     3.0      8133.517197            -1             -1   False
1    8253.154697    8253.054932 -6657.019902  8253.154697  119.637500  8253.054932    0.00000    0.099766        0.050000     1.0      8133.517197         False          False   False
2    8253.154697    8253.104736 -6657.019902  8253.154697    0.049805  8253.104736    0.00000    0.049961      -99.950000     2.0      8253.154697         False          False   False
3    8453.104736    8414.042197 -6657.019902  8453.104736  200.000000  8414.042197    0.00000   39.062539        0.000039     1.0      8253.154697         False          False   False
4    8654.304697    8553.104697 -6657.019902  8654.304697  240.262500  8553.104697   81.11875   20.081250       20.081250     1.0      8253.154697         False          False   False
5    8754.354697    8613.070557 -6657.019902  8754.354697  120.131250  8613.070557   81.16875   60.115391       20.081250     1.0      8253.154697         False          False    True
6    8754.354697    8653.104697 -6596.082402  8754.354697   60.065625  8653.104697   81.16875   20.081250      -18.981250     2.0      8253.154697         False          False    True
7    8974.335947    8692.167236 -6596.082402  8974.335947  240.062500  8692.167236  162.08750  120.081211       20.081250     1.0      8253.154697         False          False    True
8    8974.335947    8792.167236 -6535.145020  8974.335947  120.031250  8792.167236  162.08750   20.081211      -18.981367     2.0      8253.154697         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=3, buffer=3213/160.[0m
[08/15 13:06:01]  --------------------------------------------------------------------------------
[08/15 13:06:01]  Iteration: 85 (0 solution, 84 counterexamples)
[08/15 13:06:48]  Generator returned sat in 45.142520 secs.
[08/15 13:06:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:06:52]  Improved gap from 6.001736111111111 to 79.6875
[08/15 13:06:52]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/15 13:06:52]  Verifer returned sat in 3.460759 secs.
[08/15 13:06:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8165.318359    7985.629639 -6677.332275  8165.318359    0.001465  7985.629639   0.001221  179.687500      179.687500     9.0      7985.629639            -1             -1     -1
1    8165.319824    8085.629639 -6677.332275  8165.319824  179.688965  8085.629639   0.002686   79.687500       79.687500     3.0      7985.629639         False           True   True
2    8165.319824    8085.629639 -6657.019775  8165.319824    0.001221  8085.629639   0.002686   79.687500        0.000000     3.0      8165.317139          True           True   True
3    8345.005859    8261.230713 -6657.019775  8345.005859  259.373535  8261.230713   0.002686   83.772461       79.686035     1.0      8165.317139         False           True  False
4    8527.720703    8365.316162 -6657.019775  8527.720703  266.487305  8365.316162  82.716064   79.688477       79.687500     1.0      8165.317139         False          False  False
5    8527.720703    8365.317139 -6636.707275  8527.720703    0.010000  8365.317139  82.716064   79.687500        0.000000     2.0      8165.317139         False          False   True
6    8586.876953    8445.004639 -6616.395020  8586.876953  138.843750  8445.004639  82.716064   59.156250      -20.531494     3.0      8165.317139         False          False   True
7    8688.029541    8524.692383 -6597.016357  8688.029541  160.308838  8524.692383  82.716064   80.621094       -0.000244     1.0      8605.313477          True           True  False
8    8766.250977    8605.314697 -6597.016357  8766.250977  158.842529  8605.314697  82.716064   78.220215      -21.778809     1.0      8605.313477         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1275/16.[0m
[08/15 13:06:53]  --------------------------------------------------------------------------------
[08/15 13:06:53]  Iteration: 86 (0 solution, 85 counterexamples)
[08/15 13:07:13]  Generator returned sat in 17.318562 secs.
[08/15 13:07:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:07:19]  Improved gap from 0.1 to 39.0625
[08/15 13:07:20]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 13:07:20]  Verifer returned sat in 6.935141 secs.
[08/15 13:07:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   10385.140869   10385.040771 -9076.943115  10385.140869    0.100000  10385.040771    0.000000    0.100098       -0.099365     5.0     10385.040771            -1             -1   False
1   10385.340820   10385.240479 -9016.005859  10385.340820    0.300049  10385.240479    0.000000    0.100342      -38.962158     1.0     10385.040771         False          False   False
2   10785.340576   10424.303223 -9016.005859  10785.340576  400.100098  10424.303223  222.074951  138.962402       38.962646     1.0     10385.040771         False          False   False
3   11046.378174   10524.403320 -9016.005859  11046.378174  400.000000  10524.403320  383.112549  138.862305       38.962646     2.0     10663.265625         False          False    True
4   11107.515869   10724.302979 -9016.005859  11107.515869  200.000000  10724.302979  383.112549    0.100342        0.100342     1.0     10663.265625         False          False    True
5   11446.478027   10793.834473 -9016.005859  11446.478027  339.062500  10793.834473  583.212402   69.431152       38.962646     1.0     10663.265625         False          False    True
6   11546.578125   10878.399902 -9016.005859  11546.578125  169.531250  10878.399902  583.312500   84.865723       38.962646     1.0     10663.265625         False          False    True
7   11546.578125   10924.302979 -8955.068359  11546.578125   84.765625  10924.302979  583.312500   38.962646       -0.099854     2.0     10663.265625         False          False    True
8   11707.615479   10963.365723 -8955.068359  11707.615479  200.000000  10963.365723  605.287354  138.962402       38.962646     1.0     10663.265625         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=159591/4096.[0m
[08/15 13:07:20]  --------------------------------------------------------------------------------
[08/15 13:07:20]  Iteration: 87 (0 solution, 86 counterexamples)
[08/15 13:07:31]  Generator returned sat in 7.702237 secs.
[08/15 13:07:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:07:31]  Improved gap from 0.0016666666666666668 to 100
[08/15 13:07:32]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 13:07:32]  Verifer returned sat in 0.848904 secs.
[08/15 13:07:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    9876.230713    9776.030762 -8955.068359   9876.230713     0.100098   9776.030762    0.000000  100.199951      100.199951     5.0      9776.030762            -1             -1   False
1    9876.230713    9876.030762 -8955.068359   9876.230713     0.200195   9876.030762    0.000000    0.199951        0.199951     2.0      9776.030762         False          False   False
2    9876.230713    9876.030762 -8955.068359   9876.230713     0.099854   9876.030762    0.000000    0.199951      -99.800049     2.0      9876.230713         False          False   False
3   11078.430664    9976.030762 -8955.068359  11078.430664  1202.399902   9976.030762  502.099854  600.300049      500.300049     1.0      9876.230713         False          False   False
4   11078.430664   10076.030762 -8955.068359  11078.430664   600.199951  10076.030762  502.099854  500.300049      400.300049     2.0      9876.230713         False          False    True
5   11178.330566   10276.030762 -8955.068359  11178.330566   600.199951  10276.030762  502.099854  400.199951      400.199951     3.0      9876.230713         False          False    True
6   11378.330566   10276.130859 -8955.068359  11378.330566   600.199951  10276.130859  502.099854  600.099854      500.199951     4.0      9876.230713         False          False    True
7   11378.430664   10476.030762 -8955.068359  11378.430664   600.199951  10476.030762  502.099854  400.300049      400.300049     5.0      9876.230713         False          False    True
8   11578.330566   10576.030518 -8955.068359  11578.330566   600.199951  10576.030518  502.099854  500.200195      500.199951     6.0      9876.230713         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=2049229/4096.[0m
[08/15 13:07:32]  --------------------------------------------------------------------------------
[08/15 13:07:32]  Iteration: 88 (0 solution, 87 counterexamples)
[08/15 13:07:46]  Generator returned sat in 11.258634 secs.
[08/15 13:07:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:07:47]  Improved gap from 0.1 to 100
[08/15 13:07:47]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/15 13:07:47]  Verifer returned sat in 1.043164 secs.
[08/15 13:07:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   10677.930420   10478.130615 -8955.068604  10677.930420    0.100098  10478.130615   0.099854  199.699951      199.699951     7.0     10478.130615            -1             -1     -1
1   10678.030518   10578.130371 -8955.068604  10678.030518  199.800049  10578.130371   0.099854   99.800293       99.800049     3.0     10478.130615         False           True   True
2   10678.130371   10578.130615 -8955.068604  10678.130371   99.900146  10578.130615   0.099854   99.899902       -0.100098     3.0     10678.030518         False          False   True
3   11178.430420   10678.130615 -8955.068604  11178.430420  600.199951  10678.130615   0.099854  500.199951      400.199951     1.0     10678.030518         False          False   True
4   11278.430420   10878.030762 -8955.068604  11278.430420  600.199951  10878.030762   0.099854  400.299805      400.199951     2.0     10678.030518         False          False   True
5   11478.330566   10878.130615 -8955.068604  11478.330566  600.199951  10878.130615   0.099854  600.100098      500.100098     3.0     10678.030518         False          False   True
6   11478.430420   11078.130615 -8955.068604  11478.430420  600.199951  11078.130615   0.099854  400.199951      400.199951     4.0     10678.030518         False          False   True
7   11678.430420   11078.130615 -8955.068604  11678.430420  600.199951  11078.130615   0.099854  600.199951      500.199951     4.0     10678.030518         False          False   True
8   11678.430420   11278.130371 -8955.068604  11678.430420  600.199951  11278.130371   0.099854  400.200195      400.199951     5.0     10678.030518         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=2049229/4096.[0m
[08/15 13:07:48]  --------------------------------------------------------------------------------
[08/15 13:07:48]  Iteration: 89 (0 solution, 88 counterexamples)
[08/15 13:08:05]  Generator returned sat in 13.876532 secs.
[08/15 13:08:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:08:06]  Improved gap from 61.9975 to 100
[08/15 13:08:07]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/15 13:08:07]  Verifer returned sat in 2.248906 secs.
[08/15 13:08:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    9357.364502    9340.703434 -8955.068604   9357.364502  116.661133   9340.703434    0.00125   16.659818       -0.001432     9.0      9340.703434            -1             -1     -1
1    9457.364684    9357.364684 -8955.068604   9457.364684  116.660000   9357.364684    0.00125   99.998750       -0.001250     1.0      9457.363434         False           True   True
2    9814.699684    9457.364684 -8955.068604   9814.699684  457.333750   9457.364684    0.00125  357.333750      257.333750     1.0      9457.363434         False          False   True
3    9814.699684    9657.364684 -8955.068604   9814.699684    0.001250   9657.364684    0.00125  157.333750      157.333750     2.0      9814.698434         False          False   True
4    9814.699684    9657.364684 -8955.068604   9814.699684  157.332500   9657.364684    0.00125  157.333750       57.333750     2.0      9814.698434         False          False   True
5   10042.364684    9857.364684 -8955.068604  10042.364684  384.998750   9857.364684    0.00125  184.998750      184.998750     1.0      9814.698434         False          False   True
6   10633.864059    9957.364502 -8955.068604  10633.864059  776.498125   9957.364502    0.00250  676.497057      676.496875     2.0      9814.698434         False          False   True
7   10633.864059   10042.364684 -8955.068604  10633.864059    0.010000  10042.364684    0.00250  591.496875      576.496875     2.0      9814.698434         False          False   True
8   10633.864059   10157.364502 -8955.068604  10633.864059  191.515000  10157.364502    0.00250  476.497057      476.496875     3.0      9814.698434         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=216479/320.[0m
[08/15 13:08:08]  --------------------------------------------------------------------------------
[08/15 13:08:08]  Iteration: 90 (0 solution, 89 counterexamples)
[08/15 13:08:16]  Generator returned sat in 5.108045 secs.
[08/15 13:08:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:08:16]  Improved gap from 39.9 to 100
[08/15 13:08:17]  Improved number of small numbers from 61 to 76 out of a max of 114
[08/15 13:08:17]  Verifer returned sat in 1.234192 secs.
[08/15 13:08:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    9349.020020    9149.020020 -8746.723977   9349.020020  200.099854  9149.020020        0.0  200.000000      199.999962     2.0      9149.020020            -1             -1   False
1    9349.020020    9149.020264 -8746.723977   9349.020020  200.000000  9149.020264        0.0  199.999756       99.999962     2.0      9349.020020         False          False   False
2    9349.120117    9349.020058 -8746.723977   9349.120117  200.099854  9349.020058        0.0    0.100060        0.100060     1.0      9349.020020         False          False   False
3    9442.950922    9409.223761 -8746.723977   9442.950922   93.930864  9409.223761        0.0   33.727160       -6.069136     1.0      9442.950922         False          False   False
4    9549.120058    9549.020058 -8746.723977   9549.120058  139.896296  9549.020058        0.0    0.100000        0.100000     1.0      9442.950922         False          False   False
5    9757.864502    9649.020058 -8746.723977   9757.864502  208.844444  9649.020058        0.0  108.844444      108.844444     1.0      9442.950922         False          False   False
6    9961.286724    9649.020058 -8746.723977   9961.286724  312.266667  9649.020058        0.0  312.266667      212.266667     1.0      9442.950922         False          False   False
7   10116.420058    9849.020058 -8746.723977  10116.420058  467.400000  9849.020058        0.0  267.400000      267.400000     2.0      9442.950922         False          False   False
8   10549.120058    9949.020020 -8746.723977  10549.120058  700.100000  9949.020020        0.0  600.100038      600.100000     3.0      9442.950922         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2458419/4096.[0m
[08/15 13:08:18]  --------------------------------------------------------------------------------
[08/15 13:08:18]  Iteration: 91 (0 solution, 90 counterexamples)
[08/15 13:08:52]  Generator returned sat in 32.007040 secs.
[08/15 13:08:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:08:57]  Improved gap from 0.0 to 68.75
[08/15 13:08:57]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/15 13:08:57]  Verifer returned sat in 4.294522 secs.
[08/15 13:08:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8392.969971    8366.070068 -8239.724121  8392.969971    0.100098  8366.070068    0.000000   26.899902       -0.100098     4.0      8366.070068            -1             -1     -1
1    8493.270264    8393.070312 -8239.724121  8493.270264  127.200195  8393.070312    0.000000  100.199951        0.200195     1.0      8366.070068         False           True  False
2    8493.270264    8493.170166 -8239.724121  8493.270264  100.100098  8493.170166    0.000000    0.100098      -99.799805     2.0      8493.270264         False          False  False
3    8593.170166    8593.070068 -8208.474365  8593.170166  100.000000  8593.070068    0.000000    0.100098      -68.650146     1.0      8593.170166         False          False  False
4    8933.570068    8761.820312 -8208.474365  8933.570068  340.500000  8761.820312  100.599854   71.149902       71.149902     1.0      8593.170166         False          False  False
5    9033.670166    8846.245361 -8208.474365  9033.670166  171.250000  8846.245361  100.699951   86.724854       71.149902     1.0      8593.170166         False          False   True
6    9033.670166    8861.820312 -8179.624268  9033.670166   86.625000  8861.820312  100.699951   71.149902        0.000000     2.0      8593.170166         False          False   True
7    9033.670166    8932.970215 -8148.374268  9033.670166   42.312500  8932.970215  100.699951    0.000000      -68.750000     3.0      8593.170166         False          False   True
8    9290.395020    9001.720215 -8148.374268  9290.395020  256.724854  9001.720215  117.524902  171.149902       71.149902     1.0      9172.870117          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=145715/2048.[0m
[08/15 13:08:58]  --------------------------------------------------------------------------------
[08/15 13:08:58]  Iteration: 92 (0 solution, 91 counterexamples)
[08/15 13:09:06]  Generator returned sat in 5.268430 secs.
[08/15 13:09:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:09:10]  Improved gap from 0.0 to 79.6875
[08/15 13:09:10]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 13:09:10]  Verifer returned sat in 4.456446 secs.
[08/15 13:09:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8466.458252    8346.208252 -8530.591553  8466.458252    0.010498  8346.208252   0.010254  120.239746      120.239502     2.0      8346.208252            -1             -1     -1
1    8466.458252    8446.114502 -8530.591553  8466.458252  120.239746  8446.114502   0.010254   20.333496       20.239502     3.0      8346.208252         False          False   True
2    8625.895752    8466.458496 -8530.591553  8625.895752  179.770996  8466.458496   0.010254  159.427002       79.677002     1.0      8346.208252          True           True  False
3    8646.229248    8646.208496 -8530.591553  8646.229248  179.760498  8646.208496   0.010254    0.010498        0.010498     1.0      8646.218994         False          False  False
4    8887.099121    8746.197754 -8530.591553  8887.099121  240.880371  8746.197754  61.203125   79.698242       79.687500     1.0      8646.218994         False          False  False
5    8887.099121    8746.208496 -8510.279053  8887.099121    1.000000  8746.208496  61.203125   79.687500        0.000000     2.0      8646.218994         False          False   True
6    8946.286621    8825.895996 -8489.966797  8946.286621  138.875000  8825.895996  61.203125   59.187500      -20.500244     3.0      8646.218994         False          False   True
7    9047.380371    8906.500000 -8470.570801  9047.380371  160.281250  8906.500000  61.203125   79.677246       -0.010498     1.0      8986.177246          True           True  False
8    9128.994873    8986.187744 -8470.570801  9128.994873  161.291748  8986.187744  61.203125   81.604004      -18.395996     1.0      8986.177246         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1275/16.[0m
[08/15 13:09:11]  --------------------------------------------------------------------------------
[08/15 13:09:11]  Iteration: 93 (0 solution, 92 counterexamples)
[08/15 13:09:37]  Generator returned sat in 22.956033 secs.
[08/15 13:09:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:09:38]  Improved gap from 0.0025 to 68.75
[08/15 13:09:39]  Improved number of small numbers from 93 to 114 out of a max of 114
[08/15 13:09:39]  Verifer returned sat in 1.828622 secs.
[08/15 13:09:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    9046.218994    8646.218994 -8530.591797  9046.218994  300.100098  8646.218994        0.0  400.000000      400.000000     5.0      8646.218994            -1             -1   False
1    9046.218994    8746.118896 -8530.591797  9046.218994  300.100098  8746.118896        0.0  300.100098      300.000000     3.0      8646.218994         False          False   False
2    9046.218994    8746.218994 -8530.591797  9046.218994  300.100098  8746.218994        0.0  300.000000      200.000000     3.0      8646.218994         False          False   False
3    9195.318848    8869.419189 -8530.591797  9195.318848  449.099854  8869.419189        0.0  325.899658      249.099854     4.0      8646.218994         False          False   False
4    9195.318848    9043.819092 -8530.591797  9195.318848  110.600098  9043.819092        0.0  151.499756      149.099854     5.0      8646.218994         False          False   False
5    9195.318848    9046.218994 -8530.591797  9195.318848  147.850098  9046.218994        0.0  149.099854       49.099854     6.0      8646.218994         False          False   False
6    9195.318848    9146.218994 -8499.341797  9195.318848  149.000000  9146.218994        0.0   49.099854      -19.650146     4.0      9195.318848          True           True   False
7    9283.618896    9214.968994 -8468.091797  9283.618896  137.399902  9214.968994        0.0   68.649902       -0.100098     1.0      9195.318848         False          False   False
8    9299.543945    9283.718994 -8436.841797  9299.543945   84.574951  9283.718994        0.0   15.824951      -52.925049     1.0      9195.318848         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=614605/2048.[0m
[08/15 13:09:39]  --------------------------------------------------------------------------------
[08/15 13:09:39]  Iteration: 94 (0 solution, 93 counterexamples)
[08/15 13:09:50]  Generator returned sat in 7.674072 secs.
[08/15 13:09:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:09:50]  Improved gap from 0.0025 to 100
[08/15 13:09:51]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/15 13:09:51]  Verifer returned sat in 0.472291 secs.
[08/15 13:09:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    9044.519043    8846.319092 -8530.591797   9044.519043    0.099854  8846.319092   0.000000  198.199951       99.900146     9.0      8846.319092            -1             -1     -1
1    9046.218994    9044.618896 -8530.591797   9046.218994  199.899902  9044.618896   0.000000    1.600098        1.600098     1.0      8846.319092         False           True  False
2    9244.518799    9046.318848 -8530.591797   9244.518799  199.899902  9046.318848   0.000000  198.199951       99.899902     1.0      8846.319092         False          False  False
3    9644.418945    9244.618896 -8530.591797   9644.418945  598.100098  9244.618896   0.000000  399.800049      399.800049     1.0      8846.319092         False          False  False
4    9843.718994    9344.618896 -8530.591797   9843.718994  599.100098  9344.618896   0.000000  499.100098      499.100098     2.0      8846.319092         False          False  False
5    9944.718994    9344.718994 -8530.591797   9944.718994  600.100098  9344.718994   0.000000  600.000000      500.100098     3.0      8846.319092         False          False  False
6    9945.819092    9542.618896 -8530.591797   9945.819092  601.100098  9542.618896   0.000000  403.200195      401.200195     4.0      8846.319092         False          False  False
7   10144.718994    9644.518799 -8530.591797  10144.718994  602.100098  9644.518799   0.000000  500.200195      500.100098     4.0      8846.319092         False          False  False
8   10247.618896    9644.619141 -8530.591797  10247.618896  603.100098  9644.619141   2.899902  600.099854      500.100098     5.0      8846.319092         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1024205/2048.[0m
[08/15 13:09:51]  --------------------------------------------------------------------------------
[08/15 13:09:51]  Iteration: 95 (0 solution, 94 counterexamples)
[08/15 13:10:06]  Generator returned sat in 11.834179 secs.
[08/15 13:10:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:10:14]  Improved gap from 0.00020833333333333335 to 39.0625
[08/15 13:10:14]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/15 13:10:14]  Verifer returned sat in 8.063590 secs.
[08/15 13:10:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1044.269043     891.744141 -8530.592041  1044.269043  152.625000   891.744141    0.000000  152.524902      101.000000     9.0       891.744141            -1             -1     -1
1    1044.319092     943.269043 -8530.592041  1044.319092  152.574951   943.269043    0.000000  101.050049        1.050049     7.0      1044.319092         False           True  False
2    1095.794189    1044.319092 -8530.592041  1095.794189  152.525146  1044.319092    0.000000   51.475098      -47.474854     2.0      1095.794189         False          False  False
3    1196.794189    1143.269043 -8530.592041  1196.794189  152.475098  1143.269043    0.000000   53.525146      -46.474854     1.0      1196.794189         False          False  False
4    1344.269043    1343.269043 -8530.592041  1344.269043  201.000000  1343.269043    0.000000    1.000000        1.000000     1.0      1196.794189         False          False  False
5    1642.769043    1394.618896 -8530.592041  1642.769043  299.500000  1394.618896  198.449951   49.700195        1.050049     1.0      1196.794189         False          False  False
6    1742.818848    1444.369141 -8530.592041  1742.818848  149.750000  1444.369141  198.499756   99.949951        1.050049     1.0      1196.794189         False          False   True
7    1742.818848    1543.269043 -8470.541992  1742.818848   74.875000  1543.269043  198.499756    1.050049      -38.899902     2.0      1196.794189         False          False   True
8    1942.768799    1583.218994 -8470.541992  1942.768799  201.000000  1583.218994  258.499756  101.050049        1.050049     1.0      1196.794189         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=4301/4096.[0m
[08/15 13:10:15]  --------------------------------------------------------------------------------
[08/15 13:10:15]  Iteration: 96 (0 solution, 95 counterexamples)
[08/15 13:10:58]  Generator returned sat in 39.739108 secs.
[08/15 13:10:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:11:00]  Improved gap from 0.4 to 79.6875
[08/15 13:11:01]  Improved number of small numbers from 63 to 68 out of a max of 114
[08/15 13:11:01]  Verifer returned sat in 2.811788 secs.
[08/15 13:11:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1282.236299    1081.499023 -8570.379541  1282.236299    0.199951  1081.499023     0.1000  200.637275        100.6375     7.0      1081.499023            -1             -1     -1
1    1282.236299    1181.498799 -8570.379541  1282.236299    0.100098  1181.498799     0.1000  100.637500          0.6375     8.0      1282.136299         False           True   True
2    1382.236299    1381.498799 -8570.379541  1382.236299  200.637500  1381.498799     0.1000    0.637500          0.6375     1.0      1282.136299         False           True  False
3    1706.748799    1420.761299 -8570.379541  1706.748799  325.150000  1420.761299   224.5125   61.475000          0.7375     1.0      1282.136299         False          False  False
4    1806.848799    1581.498799 -8570.379541  1806.848799  161.575000  1581.498799   224.6125    0.737500          0.7375     1.0      1282.136299         False          False   True
5    1885.898799    1582.336299 -8550.904541  1885.898799   79.787500  1582.336299   224.6125   78.950000         -0.7375     1.0      1282.136299         False          False   True
6    1886.736299    1662.023799 -8530.592041  1886.736299   79.787500  1662.023799   224.6125    0.100000        -79.5875     1.0      1282.136299         False          False   True
7    1966.423799    1741.711299 -8510.279541  1966.423799   79.787500  1741.711299   224.6125    0.100000        -79.5875     1.0      1282.136299         False          False   True
8    2046.111299    1821.398926 -8510.279541  2046.111299   79.787500  1821.398926   224.6125    0.099873        -99.9000     1.0      1282.136299         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=59/80.[0m
[08/15 13:11:01]  --------------------------------------------------------------------------------
[08/15 13:11:01]  Iteration: 97 (0 solution, 96 counterexamples)
[08/15 13:11:20]  Generator returned sat in 16.181907 secs.
[08/15 13:11:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:11:23]  Improved gap from 0.0 to 79.6875
[08/15 13:11:24]  Improved number of small numbers from 70 to 76 out of a max of 114
[08/15 13:11:24]  Verifer returned sat in 3.576169 secs.
[08/15 13:11:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1387.498779    1287.198877 -8676.079492  1387.498779    0.100098  1287.198877       0.10  100.199902      100.199902     7.0      1287.198877            -1             -1     -1
1    1387.598877    1387.098633 -8676.079492  1387.598877  100.300000  1387.098633       0.20    0.300244        0.200000     8.0      1287.198877         False           True   True
2    1487.598633    1387.398877 -8676.079492  1487.598633  100.300000  1387.398877       0.20   99.999756        0.199756     2.0      1287.198877          True           True   True
3    1706.748877    1527.923877 -8676.079492  1706.748877  319.150000  1527.923877     119.35   59.475000        0.200000     1.0      1287.198877         False          False   True
4    1806.848877    1686.661377 -8676.079492  1806.848877  159.575000  1686.661377     119.45    0.737500        0.200000     1.0      1287.198877         False          False   True
5    1885.898877    1687.498877 -8656.066992  1885.898877   79.787500  1687.498877     119.45   78.950000       -0.737500     1.0      1287.198877         False          False   True
6    1886.736377    1767.186377 -8635.754492  1886.736377   79.787500  1767.186377     119.45    0.100000      -79.587500     1.0      1287.198877         False          False   True
7    1966.423877    1846.873877 -8615.442139  1966.423877   79.787500  1846.873877     119.45    0.100000      -79.587646     1.0      1287.198877         False          False   True
8    2046.111377    1926.561523 -8615.441895  2046.111377   79.787500  1926.561523     119.45    0.099854      -99.899902     1.0      1287.198877         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/15 13:11:25]  --------------------------------------------------------------------------------
[08/15 13:11:25]  Iteration: 98 (0 solution, 97 counterexamples)
[08/15 13:11:50]  Generator returned sat in 22.501122 secs.
[08/15 13:11:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:11:58]  Improved gap from 0.0 to 76.5625
[08/15 13:11:58]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/15 13:11:58]  Verifer returned sat in 7.515633 secs.
[08/15 13:11:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1245.151855    1145.026855 -8635.767090  1245.151855    0.025146  1145.026855    0.100098  100.024902       23.412109     7.0      1145.026855            -1             -1     -1
1    1321.739502    1245.076904 -8635.767090  1321.739502  176.612549  1245.076904    0.100098   76.562500       -0.000244     1.0      1145.026855         False           True   True
2    1421.764404    1421.639404 -8635.767090  1421.764404  176.587402  1421.639404    0.100098    0.024902        0.024658     1.0      1421.664307         False          False   True
3    1740.252197    1520.534912 -8635.767090  1740.252197  318.512695  1520.534912  218.562500    1.154785        0.050049     1.0      1421.664307         False          False   True
4    1898.353760    1618.623779 -8635.767090  1898.353760  159.256348  1618.623779  276.664062    3.065918        0.050049     1.0      1421.664307         False          False   True
5    1974.916016    1621.714355 -8612.404541  1974.916016   79.628174  1621.714355  276.664062   76.537598       -0.025146     1.0      1421.664307         False          False   True
6    2039.229980    1698.277100 -8588.967041  2039.229980  140.851562  1698.277100  276.664062   64.288818      -12.273682     1.0      1421.664307         False          False   True
7    2135.238037    1774.839600 -8572.726318  2135.238037  160.296875  1774.839600  276.664062   83.734375       -0.024902     1.0      1421.664307         False          False   True
8    2210.760010    1858.598877 -8572.726318  2210.760010  159.256348  1858.598877  276.664062   75.497070      -24.502930     1.0      1421.664307         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=205/4096.[0m
[08/15 13:11:59]  --------------------------------------------------------------------------------
[08/15 13:11:59]  Iteration: 99 (0 solution, 98 counterexamples)
[08/15 13:12:32]  Generator returned sat in 30.199974 secs.
[08/15 13:12:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:12:35]  Improved gap from 10.078521728515625 to 68.75
[08/15 13:12:36]  Improved number of small numbers from 60 to 81 out of a max of 114
[08/15 13:12:36]  Verifer returned sat in 3.493556 secs.
[08/15 13:12:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1446.849365   -1671.916240 -5767.277832 -1446.849365    0.100098 -1671.916240        0.0  225.066875      200.000244     9.0     -1671.916240            -1             -1     -1
1   -1446.849365   -1546.849609 -5767.277832 -1446.849365   99.899902 -1546.849609        0.0  100.000244      100.000244     3.0     -1671.916240         False           True  False
2   -1446.849365   -1546.849609 -5767.277832 -1446.849365   99.900000 -1546.849609        0.0  100.000244        0.000244     3.0     -1671.916240         False          False  False
3   -1378.099609   -1446.849574 -5736.027868 -1378.099609  168.750000 -1446.849574        0.0   68.749964       -0.000036     4.0     -1671.916240         False          False  False
4   -1109.249574   -1279.249574 -5736.027868 -1109.249574  337.600000 -1279.249574        0.1  169.900000      168.750000     1.0     -1109.349574          True           True  False
5   -1109.249574   -1194.349609 -5736.027868 -1109.249574  169.800000 -1194.349609        0.1   85.000036       68.750000     2.0     -1109.349574         False          False   True
6   -1109.249574   -1178.099574 -5704.777868 -1109.249574   84.900000 -1178.099574        0.1   68.750000        0.000000     3.0     -1109.349574         False          False   True
7   -1109.249574   -1109.349574 -5673.528076 -1109.249574   42.450000 -1109.349574        0.1    0.000000      -68.750208     4.0     -1109.349574         False          False   True
8    -854.399574   -1040.599365 -5673.528076  -854.399574  254.850000 -1040.599365        0.1  186.099792       86.099792     1.0     -1109.349574         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=675/4.[0m
[08/15 13:12:36]  --------------------------------------------------------------------------------
[08/15 13:12:36]  Iteration: 100 (0 solution, 99 counterexamples)
[08/15 13:12:52]  Generator returned sat in 12.331352 secs.
[08/15 13:12:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:12:55]  Improved gap from 64.75053385416666 to 68.75
[08/15 13:12:56]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/15 13:12:56]  Verifer returned sat in 3.866557 secs.
[08/15 13:12:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2126.221436   -2194.971240 -5740.16141 -2126.221436    0.100000 -2194.971240        0.0   68.749805       68.749805     1.0      -2194.97124            -1             -1   False
1   -2126.221436   -2194.971240 -5708.91141 -2126.221436    0.100000 -2194.971240        0.0   68.749805       -0.000195     1.0      -2194.97124         False          False   False
2   -1857.471240   -2126.221191 -5708.91141 -1857.471240  337.500000 -2126.221191        0.0  268.749951      168.750000     1.0      -2194.97124         False          False   False
3   -1857.471240   -1979.931240 -5708.91141 -1857.471240    0.100098 -1979.931240        0.0  122.460000       68.750000     2.0      -1857.47124         False          False   False
4   -1657.371240   -1826.221240 -5708.91141 -1657.371240  322.560000 -1826.221240        0.1  168.750000      168.750000     1.0      -1857.47124         False          False   False
5   -1657.371240   -1826.121094 -5708.91141 -1657.371240  162.280000 -1826.121094        0.1  168.649854       68.750000     2.0      -1857.47124         False          False    True
6   -1657.371240   -1726.221240 -5677.66141 -1657.371240   82.140000 -1726.221240        0.1   68.750000        0.000000     3.0      -1857.47124         False          False    True
7   -1657.371240   -1657.471240 -5646.41141 -1657.371240   42.070000 -1657.471240        0.1    0.000000      -68.750000     4.0      -1857.47124         False          False    True
8   -1404.246240   -1588.721191 -5646.41141 -1404.246240  253.125000 -1588.721191        0.1  184.374951       84.375000     1.0      -1404.34624          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=675/4.[0m
[08/15 13:12:56]  --------------------------------------------------------------------------------
[08/15 13:12:56]  Iteration: 101 (0 solution, 100 counterexamples)
[08/15 13:13:06]  Generator returned unsat in 6.488038 secs.
[08/15 13:13:06]  [96mNo more solutions found[0m
[08/15 13:13:06]  Final solutions:
[08/15 13:13:06]  Took 1202.245108 secs.
