[08/10 15:28:54]  --------------------------------------------------------------------------------
[08/10 15:28:54]  Iteration: 1 (0 solution, 0 counterexamples)
[08/10 15:28:54]  Generator returned sat in 0.004806 secs.
[08/10 15:28:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:54]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:28:54]  Verifer returned sat in 0.408797 secs.
[08/10 15:28:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0          100.0            0.0       0.0        100.0     100.0          0.0        0.1     99.9            99.9     9.0              0.0            -1             -1     -1
1          100.1            0.0       0.0        100.1     100.0          0.0        0.1    100.0             0.0     9.0              0.0         False           True   True
2          200.2          200.0       0.0        200.2     200.1        200.0        0.1      0.1             0.1     1.0              0.0         False           True  False
3          400.2          200.2       0.0        400.2     200.1        200.2      100.0    100.0             0.2     1.0              0.0         False          False  False
4         1102.8          300.3       0.0       1102.8     802.6        300.3      702.6     99.9             0.2     1.0              0.0         False          False   True
5         3210.7          400.0       0.0       3210.7    2207.8        400.0     2710.5    100.2             0.2     2.0              0.0         False          False   True
6         7928.1          500.3       0.0       7928.1    4817.6        500.3     7327.9     99.9             0.2     1.0              0.0         False          False   True
7        18065.6          700.0       0.0      18065.6   10237.4        700.0    17365.4      0.2             0.2     1.0              0.0         False          False   True
8        39341.6          700.0       0.0      39341.6   21276.2        700.0    38541.4    100.2             0.2     1.0              0.0         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=1/5.[0m
[08/10 15:28:55]  --------------------------------------------------------------------------------
[08/10 15:28:55]  Iteration: 2 (0 solution, 1 counterexamples)
[08/10 15:28:55]  Generator returned sat in 0.213827 secs.
[08/10 15:28:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:56]  Improved number of small numbers from 103 to 105 out of a max of 113
[08/10 15:28:56]  Verifer returned sat in 0.772698 secs.
[08/10 15:28:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     563.753174     365.853271  428.425293   563.753174     0.099854   365.853271        0.1   197.799902      197.799663     5.0       365.853271            -1             -1     -1
1     563.753174     366.053333  428.425293   563.753174   197.799805   366.053333        0.1   197.599840       97.799663     2.0       365.853271         False           True   True
2     563.953333     563.753333  428.425470   563.953333   197.800000   563.753333        0.1     0.100000       -2.000000     1.0       365.853271         False          False   True
3     665.953333     565.853333  428.425470   665.953333   102.100000   565.853333        0.1   100.000000        0.000000     1.0       665.853333         False          False   True
4     768.153333     765.853271  428.425470   768.153333   202.200000   765.853271        0.1     2.200062        2.200000     1.0       665.853333         False          False   True
5    1168.353271     768.153333  428.425470  1168.353271   402.400000   768.153333        0.1   400.099938      302.399938     1.0       665.853333         False          False   True
6    1571.053333     865.853333  428.425470  1571.053333   802.800000   865.853333        0.1   705.100000      605.100000     2.0       665.853333         False          False   True
7    2469.553333     965.853333  428.425470  2469.553333  1603.600000   965.853333        0.1  1503.600000     1403.600000     3.0       665.853333         False          False   True
8    4171.153333    1065.853333  428.425470  4171.153333  3205.200000  1065.853333     1601.6  1503.700000     1403.700000     4.0       665.853333         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14037/10.[0m
[08/10 15:28:56]  --------------------------------------------------------------------------------
[08/10 15:28:56]  Iteration: 3 (0 solution, 2 counterexamples)
[08/10 15:28:57]  Generator returned sat in 0.135657 secs.
[08/10 15:28:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:57]  Improved gap from 0 to 100
[08/10 15:28:57]  Improved number of small numbers from 98 to 98 out of a max of 114
[08/10 15:28:57]  Verifer returned sat in 0.715927 secs.
[08/10 15:28:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     765.763333     764.913333  428.42547   765.763333  100.925000   764.913333    0.000000    0.850000          0.8500     1.0       764.913333            -1             -1    True
1     865.838333     764.913333  428.42547   865.838333  100.925000   764.913333    0.025000  100.900000          0.9000     1.0       764.913333         False          False    True
2     965.813333     864.988333  428.42547   965.813333  200.875000   864.988333    0.025000  100.800000          0.8750     2.0       764.913333         False          False    True
3    1065.863333    1064.913333  428.42547  1065.863333  200.850000  1064.913333    0.050000    0.900000          0.9000     1.0      1065.813333          True           True   False
4    1165.888333    1164.913333  428.42547  1165.888333  100.925000  1164.913333    0.075000    0.900000          0.9000     1.0      1065.813333         False          False    True
5    1215.950833    1164.913333  428.42547  1215.950833   50.962500  1164.913333    0.075000   50.962500        -49.0375     1.0      1065.813333         False          False    True
6    1839.282083    1264.913333  428.42547  1839.282083  674.293750  1264.913333  473.468750  100.900000          0.9000     1.0      1065.813333         False          False    True
7    2076.028958    1396.514896  428.42547  2076.028958  337.646875  1396.514896  610.215625   69.298438          0.9000     1.0      1065.813333         False          False    True
8    2176.053958    1465.813333  428.42547  2176.053958  169.323438  1465.813333  610.240625  100.000000          0.9000     2.0      1065.813333         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=9/10.[0m
[08/10 15:28:58]  --------------------------------------------------------------------------------
[08/10 15:28:58]  Iteration: 4 (0 solution, 3 counterexamples)
[08/10 15:28:58]  Generator returned sat in 0.214803 secs.
[08/10 15:28:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:59]  Improved gap from 0 to 100
[08/10 15:29:00]  Improved number of small numbers from 87 to 92 out of a max of 114
[08/10 15:29:00]  Verifer returned sat in 1.081173 secs.
[08/10 15:29:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     864.922083     864.921387  328.416095   864.922083    0.002500   864.921387    0.000000    0.000697       -0.000625     5.0       864.921387            -1             -1     -1
1     864.923096     864.922708  328.416095   864.923096    0.001709   864.922708    0.000000    0.000387      -99.999613     1.0       864.923096         False           True  False
2    1064.923958     964.922708  328.416095  1064.923958  200.001250   964.922708    0.000000  100.001250        0.001250     1.0       864.923096         False          False  False
3    1164.923333    1163.924271  328.416095  1164.923333  200.000625  1163.924271    0.000000    0.999062        0.000625     1.0      1164.923333         False          False  False
4    1264.924583    1264.922708  328.416095  1264.924583  101.000313  1264.922708    0.000625    0.001250        0.001250     1.0      1164.923333         False          False  False
5    1264.933333    1264.932083  328.416095  1264.933333    0.010000  1264.932083    0.000625    0.000625      -99.990000     1.0      1164.923333         False          False   True
6    1565.957083    1464.922708  328.416095  1565.957083  301.024375  1464.922708  101.033125    0.001250        0.001250     1.0      1164.923333         False          False   True
7    1565.965833    1464.922708  328.416095  1565.965833    0.010000  1464.922708  101.033125    0.010000      -99.990000     1.0      1164.923333         False          False   True
8    1766.970833    1564.922852  328.416095  1766.970833  201.015000  1564.922852  102.046875  100.001107        0.001250     1.0      1164.923333         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/800.[0m
[08/10 15:29:00]  --------------------------------------------------------------------------------
[08/10 15:29:00]  Iteration: 5 (0 solution, 4 counterexamples)
[08/10 15:29:01]  Generator returned sat in 0.272880 secs.
[08/10 15:29:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:01]  Improved gap from 0 to 100
[08/10 15:29:03]  Improved number of small numbers from 63 to 67 out of a max of 114
[08/10 15:29:03]  Verifer returned sat in 1.942157 secs.
[08/10 15:29:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1055.022949     964.922708  228.416095  1055.022949    0.099854   964.922708     0.000000   90.100241       90.100241     6.0       964.922708            -1             -1     -1
1    1075.122708    1055.122708  228.416095  1075.122708  110.200000  1055.122708    10.000000   10.000000        0.200000     1.0       964.922708         False           True  False
2    1175.222708    1065.222708  228.416095  1175.222708  110.100000  1065.222708    10.100000   99.900000        0.200000     1.0      1165.122708         False          False   True
3    1275.122708    1264.922708  228.416095  1275.122708  199.800000  1264.922708    10.100000    0.100000        0.100000     1.0      1165.122708         False          False   True
4    1976.922708    1264.922708  228.416095  1976.922708  701.900000  1264.922708   611.800000  100.200000        0.200000     1.0      1165.122708         False          False   True
5    1981.122708    1369.222708  228.416095  1981.122708  104.400000  1369.222708   611.800000    0.100000      -95.600000     1.0      1165.122708         False          False   True
6    2643.222708    1531.989375  228.416095  2643.222708  662.200000  1531.989375  1078.100000   33.133333        0.200000     1.0      1165.122708         False          False   True
7    2743.122708    1664.922708  228.416095  2743.122708  133.033333  1664.922708  1078.100000    0.100000        0.100000     1.0      1165.122708         False          False   True
8    3611.539375    1665.122803  228.416095  3611.539375  868.516667  1665.122803  1846.416667   99.999906        0.200000     1.0      1165.122708         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:29:03]  --------------------------------------------------------------------------------
[08/10 15:29:03]  Iteration: 6 (0 solution, 5 counterexamples)
[08/10 15:29:04]  Generator returned sat in 0.472110 secs.
[08/10 15:29:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:04]  Improved gap from 17/10 to 100
[08/10 15:29:05]  Improved number of small numbers from 104 to 104 out of a max of 114
[08/10 15:29:05]  Verifer returned sat in 0.806720 secs.
[08/10 15:29:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1031.989375     931.989375  228.416095   1031.989375      0.05   931.989375       0.05    99.95           99.95     6.0       931.989375            -1             -1     -1
1    1032.089375    1031.989375  228.416095   1032.089375    100.05  1031.989375       0.05     0.05            0.05     1.0       931.989375         False           True   True
2    1131.939375    1032.089375  228.416095   1131.939375     99.90  1032.089375       0.05    99.80           -0.10     1.0      1131.889375         False          False   True
3    1132.039375    1131.989375  228.416095   1132.039375     99.90  1131.989375       0.05     0.00         -100.00     1.0      1131.889375         False          False   True
4    1633.839375    1232.989375  228.416095   1633.839375    501.80  1232.989375       0.05   400.80          301.80     1.0      1131.889375         False          False   True
5    2540.139375    1431.989375  228.416095   2540.139375   1307.10  1431.989375       0.05  1108.10         1108.10     2.0      1131.889375         False          False   True
6    4648.089375    1531.989375  228.416095   4648.089375   3216.05  1531.989375       0.05  3116.05         3116.05     3.0      1131.889375         False          False   True
7    7962.139375    1631.989375  228.416095   7962.139375   6430.10  1631.989375       0.05  6330.10         6330.10     4.0      7962.089375          True           True  False
8   14490.239375    1731.989375  228.416095  14490.239375  12858.20  1731.989375    6428.10  6330.15         6330.15     4.0      7962.089375         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=126603/20.[0m
[08/10 15:29:05]  --------------------------------------------------------------------------------
[08/10 15:29:05]  Iteration: 7 (0 solution, 6 counterexamples)
[08/10 15:29:06]  Generator returned sat in 0.606831 secs.
[08/10 15:29:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:06]  Improved gap from 1/800 to 100
[08/10 15:29:07]  Improved number of small numbers from 63 to 67 out of a max of 114
[08/10 15:29:07]  Verifer returned sat in 1.166710 secs.
[08/10 15:29:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1031.983154    1031.980508  128.424962  1031.983154  100.00625  1031.980508    0.00125    0.001396        0.001396     3.0      1031.980508            -1             -1     -1
1    1131.988008    1131.980508  128.424962  1131.988008  100.00625  1131.980508    0.00125    0.006250        0.006250     1.0      1031.980508         False           True   True
2    1231.988008    1231.980508  128.424962  1231.988008  100.00625  1231.980508    0.00125    0.006250        0.006250     1.0      1031.980508         False          False   True
3    1331.988008    1231.980508  128.424962  1331.988008  100.00625  1231.980508    0.00125  100.006250        0.006250     1.0      1031.980508         False          False   True
4    1633.481758    1431.980508  128.424962  1633.481758  401.50000  1431.980508  201.49375    0.007500        0.007500     1.0      1031.980508         False          False   True
5    1633.484258    1431.989258  128.424962  1633.484258    0.01000  1431.989258  201.49375    0.001250      -99.990000     1.0      1031.980508         False          False   True
6    2035.000508    1631.980508  128.424962  2035.000508  401.51750  1631.980508  403.01250    0.007500        0.007500     1.0      1031.980508         False          False   True
7    2035.003008    1631.989258  128.424962  2035.003008    0.01000  1631.989258  403.01250    0.001250      -99.990000     1.0      1031.980508         False          False   True
8    2436.519258    1731.980713  128.424962  2436.519258  401.51750  1731.980713  604.53125  100.007295        0.007500     1.0      1031.980508         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/400.[0m
[08/10 15:29:08]  --------------------------------------------------------------------------------
[08/10 15:29:08]  Iteration: 8 (0 solution, 7 counterexamples)
[08/10 15:29:08]  Generator returned sat in 0.402287 secs.
[08/10 15:29:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:09]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 15:29:09]  Verifer returned sat in 0.415625 secs.
[08/10 15:29:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1836.561523    1031.980713  128.425049  1836.561523    0.049805  1031.980713  604.531006  200.049805      100.050049     2.0      1031.980713            -1             -1   False
1    1836.561523    1231.930420  128.425049  1836.561523    0.049805  1231.930420  604.531006    0.100098        0.050049     2.0      1031.980713         False          False   False
2    1836.561523    1231.980469  128.425049  1836.561523    0.050000  1231.980469  604.531006    0.050049      -99.949951     3.0      1031.980713         False          False   False
3    2283.611572    1384.780518  128.425049  2283.611572  447.100098  1384.780518  604.531006  294.300049      247.100098     1.0      1031.980713         False          False   False
4    2436.411621    1531.980469  128.425049  2436.411621  447.100098  1531.980469  604.531006  299.900146      299.900146     2.0      1031.980713         False          False   False
5    2583.611572    1631.930420  128.425049  2583.611572  447.100098  1631.930420  604.531006  347.150146      347.100098     3.0      1031.980713         False          False   False
6    2683.561523    1679.130615  128.425049  2683.561523  447.100098  1679.130615  604.531006  399.899902      347.050049     3.0      1031.980713         False          False   False
7    2730.761719    1831.930664  128.425049  2730.761719  447.100098  1831.930664  604.531006  294.300049      294.250244     3.0      1031.980713         False          False   False
8    2883.561768    1831.980469  128.425049  2883.561768  447.100098  1831.980469  604.531006  447.050293      347.050293     4.0      1031.980713         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=710861/2048.[0m
[08/10 15:29:10]  --------------------------------------------------------------------------------
[08/10 15:29:10]  Iteration: 9 (0 solution, 8 counterexamples)
[08/10 15:29:10]  Generator returned sat in 0.042018 secs.
[08/10 15:29:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:10]  Improved gap from 1/100 to 48.4375
[08/10 15:29:11]  Improved number of small numbers from 101 to 114 out of a max of 114
[08/10 15:29:11]  Verifer returned sat in 0.776787 secs.
[08/10 15:29:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1837.011230    1234.055420   26.349854  1837.011230  299.999756  1234.055420  602.906006    0.049805        0.049805     9.0      1234.055420            -1             -1     -1
1    2136.911377    1334.055420   26.349854  2136.911377  299.949951  1334.055420  602.906006  199.949951      199.949951     1.0      1534.005371         False           True  False
2    2236.561279    1434.055420   26.349854  2236.561279  299.599854  1434.055420  602.906006  199.599854      199.599854     2.0      1633.655273         False          False  False
3    2236.561279    1534.055420   26.349854  2236.561279   50.937500  1534.055420  602.906006   99.599854       99.599854     2.0      1633.655273         False          False  False
4    2236.561279    1633.605225   26.349854  2236.561279   50.437500  1633.605225  602.906006    0.050049       -0.400146     3.0      1633.655273         False          False  False
5    2286.448730    1634.055469   76.862549  2286.448730   49.937500  1634.055469  602.906006   49.487256        0.000000     1.0      1633.655273         False          False  False
6    2286.448730    1683.542725  128.424805  2286.448730   49.437500  1683.542725  602.906006    0.000000      -48.437744     2.0      1633.655273         False          False  False
7    2335.386230    1731.980469  179.987305  2335.386230   48.937500  1731.980469  602.906006    0.499756      -47.937744     1.0      1633.655273         False          False  False
8    2383.323975    1780.417969  179.987305  2383.323975   48.437500  1780.417969  602.906006    0.000000     -100.000000     1.0      1633.655273         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=200.[0m
[08/10 15:29:11]  --------------------------------------------------------------------------------
[08/10 15:29:11]  Iteration: 10 (0 solution, 9 counterexamples)
[08/10 15:29:12]  Generator returned sat in 0.476911 secs.
[08/10 15:29:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:13]  Improved gap from 1/300 to 0
[08/10 15:29:13]  Improved number of small numbers from 61 to 71 out of a max of 114
[08/10 15:29:13]  Verifer returned sat in 1.226058 secs.
[08/10 15:29:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      740.01167     640.011475   26.349854    740.01167  100.00000   640.011475    0.00125  99.998945       99.998750     1.0       640.011475            -1             -1     -1
1      740.01167     640.011670   26.349854    740.01167   99.99875   640.011670    0.00125  99.998750       -0.001250     2.0       740.010420         False          False   True
2      740.01417     740.011670  126.348604    740.01417  100.00125   740.011670    0.00125   0.001250        0.000000     1.0       740.010420         False           True  False
3      840.01792     789.012695  126.348604    840.01792  100.00500   789.012695    0.00250  51.002725        0.002500     1.0       740.010420         False          False  False
4      840.01792     840.015420  226.346104    840.01792   51.00250   840.015420    0.00250   0.000000        0.000000     2.0       740.010420         False          False   True
5      840.02792     840.015420  326.336104    840.02792    0.01000   840.015420    0.00250   0.010000        0.000000     2.0       840.025420          True           True  False
6      840.02792     840.025420  426.335938    840.02792    0.01000   840.025420    0.00250   0.000000       -0.000166     2.0       840.025420         False           True  False
7      840.03792     840.034170  526.325928    840.03792    0.01000   840.034170    0.00250   0.001250       -0.000176     1.0       840.025420         False           True  False
8      840.04667     840.036865  626.317139    840.04667    0.01000   840.036865    0.00250   0.007305       -0.000215     1.0       840.025420         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/400.[0m
[08/10 15:29:14]  --------------------------------------------------------------------------------
[08/10 15:29:14]  Iteration: 11 (0 solution, 10 counterexamples)
[08/10 15:29:14]  Generator returned sat in 0.094941 secs.
[08/10 15:29:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:15]  Improved gap from 1/600 to 100
[08/10 15:29:15]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:29:15]  Verifer returned sat in 0.397031 secs.
[08/10 15:29:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     340.017822     339.917725  326.343506   340.017822    0.100098   339.917725    0.000000    0.100098        0.000000     6.0       339.917725            -1             -1     -1
1     340.117920     340.017822  326.343506   340.117920    0.200195   340.017822    0.000000    0.100098      -99.899902     2.0       339.917725         False           True  False
2     540.017822     539.917969  326.343506   540.017822  200.000000   539.917969    0.000000    0.099854        0.000000     1.0       339.917725         False          False  False
3     739.917969     540.117920  326.343506   739.917969  200.000000   540.117920   99.699951  100.100098        0.200195     1.0       339.917725         False          False  False
4     840.018066     739.817871  326.343506   840.018066  200.200195   739.817871   99.800049    0.400146        0.200195     1.0       339.917725         False          False   True
5    1239.417969     740.218018  326.343506  1239.417969  399.800049   740.218018  399.199951  100.000000        0.200195     2.0       339.917725         False          False   True
6    1339.718018     840.317871  326.343506  1339.718018  200.300049   840.317871  399.500000   99.900146        0.200195     1.0       339.917725         False          False   True
7    1540.017822     940.018066  326.343506  1540.017822  300.199951   940.018066  499.799805  100.199951        0.200195     2.0       339.917725         False          False   True
8    1640.018066    1040.317871  326.343506  1640.018066  200.200195  1040.317871  499.800049   99.900146        0.200195     1.0       339.917725         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=205/1024.[0m
[08/10 15:29:15]  --------------------------------------------------------------------------------
[08/10 15:29:15]  Iteration: 12 (0 solution, 11 counterexamples)
[08/10 15:29:16]  Generator returned sat in 0.368581 secs.
[08/10 15:29:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:17]  Improved gap from 3/400 to 100
[08/10 15:29:17]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:29:17]  Verifer returned sat in 1.038712 secs.
[08/10 15:29:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -195.645508    -595.695312  1262.006836  -195.645508  598.099854  -595.695312   0.000000  400.049805      400.000000     8.0      -595.695312            -1             -1     -1
1       2.354736    -595.645508  1262.006836     2.354736  598.050049  -595.645508   0.000000  598.000244      498.000244     2.0         2.354736         False           True  False
2      44.209717    -477.355957  1262.006836    44.209717  639.855225  -477.355957   0.000000  521.565674      439.855225     3.0         2.354736         False          False  False
3     167.075195    -395.645264  1262.006836   167.075195  644.431152  -395.645264   0.000000  562.720459      462.720703     4.0         2.354736         False          False  False
4     167.075195    -195.645508  1262.006836   167.075195  522.765625  -195.645508   0.000000  362.720703      362.720703     5.0         2.354736         False          False  False
5     466.237305    -195.645264  1262.006836   466.237305  661.882812  -195.645264  63.832764  598.049805      498.050049     5.0         2.354736         False          False  False
6     466.237305       2.354736  1262.006836   466.237305  332.441406     2.354736  63.832764  400.049805      398.050049     6.0         2.354736         False          False   True
7     630.908203      44.259766  1262.006836   630.908203  564.720703    44.259766  63.832764  522.815674      462.720947     5.0         2.354736         False           True  False
8     630.908203     204.354492  1262.006836   630.908203  522.765625   204.354492  63.832764  362.720947      362.720947     4.0         2.354736         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2040013/4096.[0m
[08/10 15:29:18]  --------------------------------------------------------------------------------
[08/10 15:29:18]  Iteration: 13 (0 solution, 12 counterexamples)
[08/10 15:29:19]  Generator returned sat in 0.386825 secs.
[08/10 15:29:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:19]  Improved gap from 0 to 100
[08/10 15:29:20]  Improved number of small numbers from 75 to 91 out of a max of 114
[08/10 15:29:20]  Verifer returned sat in 1.068094 secs.
[08/10 15:29:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -143.895264    -243.695557  1262.006836  -143.895264    0.100098  -243.695557    0.099854   99.700439       99.700342     1.0      -243.695557            -1             -1     -1
1    -143.695557    -143.895264  1262.006836  -143.695557   99.900146  -143.895264    0.099854    0.099854       -0.099951     1.0      -243.695557         False          False   True
2    -143.495605    -143.695312  1262.006836  -143.495605    0.299805  -143.695312    0.099854    0.099854      -99.900000     1.0      -143.595459         False          False   True
3     245.604541     -39.995459  1262.006836   245.604541  389.200000   -39.995459  189.100000   96.500000        0.200000     1.0      -143.595459         False          False   True
4     345.704541     156.304541  1262.006836   345.704541  196.600000   156.304541  189.200000    0.200000        0.200000     1.0      -143.595459         False          False   True
5     445.804541     256.304541  1262.006836   445.804541  100.300000   256.304541  189.300000    0.200000        0.200000     1.0      -143.595459         False          False   True
6     497.754541     256.304541  1262.006836   497.754541   52.150000   256.304541  189.300000   52.150000      -47.850000     1.0      -143.595459         False          False   True
7     914.129541     356.304541  1262.006836   914.129541  468.525000   356.304541  457.625000  100.200000        0.200000     1.0      -143.595459         False          False   True
8    1050.192041     456.304688  1262.006836  1050.192041  236.262500   456.304688  493.687500  100.199854        0.200000     2.0      -143.595459         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:29:20]  --------------------------------------------------------------------------------
[08/10 15:29:20]  Iteration: 14 (0 solution, 13 counterexamples)
[08/10 15:29:22]  Generator returned sat in 0.736063 secs.
[08/10 15:29:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:22]  Improved gap from 0 to 100
[08/10 15:29:22]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 15:29:22]  Verifer returned sat in 0.363437 secs.
[08/10 15:29:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     -53.995605    -154.295654  1661.206787   -53.995605  200.100098  -154.295654    0.100098  100.199951      100.199951     5.0      -154.295654            -1             -1     -1
1      45.904541     -54.295654  1661.206787    45.904541  200.100098   -54.295654  100.000000    0.200195        0.200195     6.0      -154.295654         False           True   True
2     145.804443     -54.295654  1661.206787   145.804443  100.100098   -54.295654  100.000000  100.100098        0.100098     6.0        45.804443          True           True   True
3     145.804443      45.704346  1661.206787   145.804443  100.000000    45.704346  100.000000    0.100098      -99.899902     2.0        45.804443         False           True  False
4     345.704346     245.704346  1661.206787   345.704346  200.000000   245.704346  100.000000    0.000000        0.000000     1.0        45.804443         False          False  False
5     695.704346     245.704590  1661.206787   695.704346  350.000000   245.704590  349.799805  100.199951        0.200195     1.0        45.804443         False          False  False
6     943.504395     346.004639  1661.206787   943.504395  348.000000   346.004639  497.599854   99.899902        0.200195     1.0        45.804443         False          False   True
7    1189.604492     446.004639  1661.206787  1189.604492  346.000000   446.004639  643.699951   99.899902        0.200195     1.0        45.804443         False          False   True
8    1433.704590     546.004639  1661.206787  1433.704590  344.000000   546.004639  787.800049   99.899902        0.200195     1.0        45.804443         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/1024.[0m
[08/10 15:29:23]  --------------------------------------------------------------------------------
[08/10 15:29:23]  Iteration: 15 (0 solution, 14 counterexamples)
[08/10 15:29:23]  Generator returned sat in 0.397799 secs.
[08/10 15:29:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:24]  Improved gap from 1/600 to 0
[08/10 15:29:24]  Improved number of small numbers from 73 to 89 out of a max of 114
[08/10 15:29:24]  Verifer returned sat in 0.937941 secs.
[08/10 15:29:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     -53.995850    -153.996582  1661.206787   -53.995850  100.001465  -153.996582   0.000732  100.000000       99.999857     6.0      -153.996582            -1             -1     -1
1     -53.994873     -53.996582  1661.206787   -53.994873  100.000977   -53.996582   0.000732    0.000977        0.000833     2.0       -53.995605         False           True   True
2     146.001709     -53.996338  1661.206787   146.001709  199.997559   -53.996338   0.000732  199.997314       99.997415     2.0       -53.995605         False           True  False
3     342.002728     146.003561  1661.206787   342.002728  395.998333   146.003561  96.000833   99.998333       99.998333     1.0       -53.995605         False           True  False
4     442.003561     244.003145  1661.206787   442.003561  199.999167   244.003145  96.001667  101.998750       99.998333     2.0       -53.995605         False          False   True
5     442.004395     345.994395  1661.206787   442.004395  101.999583   345.994395  96.001667    0.008333       -0.000833     2.0       346.002728          True           True   True
6     442.006061     346.003561  1761.205811   442.006061    0.010000   346.003561  96.001667    0.000833       -0.000143     1.0       346.002728         False           True  False
7     442.015228     346.012728  1861.187744   442.015228    0.010000   346.012728  96.001667    0.000833       -0.009043     1.0       346.002728         False          False  False
8     442.024395     346.022705  1861.187744   442.024395    0.010000   346.022705  96.001667    0.000023      -99.999876     1.0       346.002728         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=59999/600.[0m
[08/10 15:29:25]  --------------------------------------------------------------------------------
[08/10 15:29:25]  Iteration: 16 (0 solution, 15 counterexamples)
[08/10 15:29:28]  Generator returned sat in 2.047221 secs.
[08/10 15:29:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:29]  Improved number of small numbers from 58 to 64 out of a max of 113
[08/10 15:29:29]  Verifer returned sat in 1.078531 secs.
[08/10 15:29:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -409.062500    -409.262272  1816.47262  -409.062500  1621.999756  -409.262272      0.100    0.099772      -99.900228     2.0      -409.262272            -1             -1     -1
1    1212.837728    -209.262272  1816.47262  1212.837728  1622.000000  -209.262272   1322.200   99.900000       99.900000     1.0      -409.262272         False          False   True
2    2734.837728    -109.262272  1816.47262  2734.837728  1621.900000  -109.262272   2744.200   99.900000       99.900000     1.0        -9.362272         False          False   True
3    4256.737728      -9.262272  1816.47262  4256.737728  1621.800000    -9.262272   4166.100   99.900000       99.900000     1.0        90.637728         False          False   True
4    4966.237728      -9.162272  1816.47262  4966.237728   809.400000    -9.162272   4775.600  199.800000       99.900000     2.0        90.637728         False          False   True
5    5169.637728     190.637728  1816.47262  5169.637728   403.200000   190.637728   4879.000  100.000000       99.900000     2.0        90.637728         False          False   True
6    5269.737728     290.737549  1816.47262  5269.737728   200.100000   290.737549   4879.100   99.900179       99.900000     1.0        90.637728         False          False   True
7    5269.737728     346.012728  1816.47262  5269.737728    98.550000   346.012728   4879.100   44.625000       -0.100000     2.0        90.637728         False          False   True
8    6034.512728     390.737793  1816.47262  6034.512728   809.400000   390.737793   5443.875  199.899935       99.900000     1.0        90.637728         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=999/10.[0m
[08/10 15:29:29]  --------------------------------------------------------------------------------
[08/10 15:29:29]  Iteration: 17 (0 solution, 16 counterexamples)
[08/10 15:29:30]  Generator returned sat in 0.136070 secs.
[08/10 15:29:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:31]  Improved number of small numbers from 64 to 64 out of a max of 113
[08/10 15:29:31]  Verifer returned sat in 1.203333 secs.
[08/10 15:29:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -409.062500    -409.262272  1816.47262  -409.062500  1621.999756  -409.262272      0.100    0.099772      -99.900228     2.0      -409.262272            -1             -1     -1
1    1219.687728    -230.037272  1816.47262  1219.687728  1628.850000  -230.037272   1329.050  120.675000       99.900000     1.0      -409.262272         False          False   True
2    2727.837728    -109.262272  1816.47262  2727.837728  1628.825000  -109.262272   2737.200   99.900000       99.900000     1.0        -9.362272         False          False   True
3    4256.737728      -9.337272  1816.47262  4256.737728  1628.800000    -9.337272   4166.100   99.975000       99.900000     1.0        90.637728         False          False   True
4    4969.162728      -9.262272  1816.47262  4969.162728   812.400000    -9.262272   4778.525  199.900000       99.900000     2.0        90.637728         False          False   True
5    5173.462728     190.637728  1816.47262  5173.462728   404.200000   190.637728   4882.825  100.000000       99.900000     2.0        90.637728         False          False   True
6    5273.562728     290.737549  1816.47262  5273.562728   200.100000   290.737549   4882.925   99.900179       99.900000     1.0        90.637728         False          False   True
7    5273.562728     347.662728  1816.47262  5273.562728    98.050000   347.662728   4882.925   42.975000       -0.100000     2.0        90.637728         False          False   True
8    6042.987728     390.737793  1816.47262  6042.987728   812.400000   390.737793   5452.350  199.899935       99.900000     1.0        90.637728         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=999/10.[0m
[08/10 15:29:32]  --------------------------------------------------------------------------------
[08/10 15:29:32]  Iteration: 18 (0 solution, 17 counterexamples)
[08/10 15:29:33]  Generator returned sat in 0.899987 secs.
[08/10 15:29:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:34]  Improved gap from 1/800 to 23.4375
[08/10 15:29:35]  Improved number of small numbers from 39 to 49 out of a max of 114
[08/10 15:29:35]  Verifer returned sat in 1.965778 secs.
[08/10 15:29:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4598.957520    3269.905273 -1737.212637  4598.957520  100.007568  3269.905273  1329.049805    0.002441       -0.002627     1.0      3269.905273            -1             -1     -1
1    4698.960205    3269.910342 -1737.212637  4698.960205  100.005127  3269.910342  1329.049805  100.000059        0.000059     1.0      3369.910400         False          False   True
2    4799.977646    3469.910342 -1737.212637  4799.977646  201.017500  3469.910342  1330.062305    0.005000        0.005000     1.0      3369.910400         False          False   True
3    5000.987646    3470.897842 -1737.212637  5000.987646  201.015000  3470.897842  1431.072305   99.017500        0.005000     1.0      3569.915342         False          False   True
4    5100.985146    3669.910342 -1737.212637  5100.985146  199.015000  3669.910342  1431.072305    0.002500        0.002500     1.0      3569.915342         False          False   True
5    5200.990146    3695.347842 -1737.212637  5200.990146  100.007500  3695.347842  1431.074805   74.567500        0.005000     1.0      3569.915342         False          False   True
6    5224.430146    3769.917842 -1660.657637  5224.430146   98.007500  3769.917842  1431.074805   23.437500        0.000000     1.0      3569.915342         False          False   True
7    5250.496396    3793.355342 -1586.723887  5250.496396   49.503750  3793.355342  1431.074805   26.066250        0.000000     2.0      3569.915342         False          False   True
8    5250.496396    3819.421592 -1586.723877  5250.496396    0.010000  3819.421592  1431.074805    0.000000      -99.999990     2.0      3819.421592          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/200.[0m
[08/10 15:29:36]  --------------------------------------------------------------------------------
[08/10 15:29:36]  Iteration: 19 (0 solution, 18 counterexamples)
[08/10 15:29:37]  Generator returned sat in 0.871180 secs.
[08/10 15:29:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:39]  Improved gap from 1/20 to 15.625
[08/10 15:29:40]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/10 15:29:40]  Verifer returned sat in 2.223061 secs.
[08/10 15:29:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4633.757812    4633.557861 -1905.962402  4633.757812   15.925049  4633.557861      0.000   0.199951       -0.099600     9.0      4633.557861            -1             -1     -1
1    4649.382812    4633.857422 -1821.587637  4649.382812   15.824951  4633.857422      0.000  15.525391       -0.099834     1.0      4649.382812         False           True  False
2    4649.582520    4649.482646 -1737.212637  4649.582520   15.725098  4649.482646      0.000   0.099873      -15.525127     1.0      4649.582520         False          False  False
3    4765.407646    4765.107646 -1737.212637  4765.407646  115.925000  4765.107646      0.100   0.200000        0.200000     1.0      4649.582520         False          False  False
4    4880.632646    4789.695312 -1737.212637  4880.632646  115.425000  4789.695312     15.325  75.612334        0.200000     1.0      4649.582520         False          False   True
5    4919.945312    4865.407646 -1680.449951  4919.945312  114.925000  4865.407646     15.325  39.212666       -3.724648     1.0      4649.582520         False          False   True
6    4939.195146    4908.345146 -1596.075137  4939.195146   58.462500  4908.345146     15.325  15.525000       -0.100000     1.0      4649.582520         False          False   True
7    4953.901396    4923.970146 -1511.700137  4953.901396   30.231250  4923.970146     15.325  14.606250       -1.018750     1.0      4649.582520         False          False   True
8    4955.410771    4939.595146 -1427.325195  4955.410771   16.115625  4939.595146     15.325   0.490625      -15.134434     1.0      4649.582520         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:29:40]  --------------------------------------------------------------------------------
[08/10 15:29:40]  Iteration: 20 (0 solution, 19 counterexamples)
[08/10 15:29:41]  Generator returned sat in 0.153511 secs.
[08/10 15:29:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:43]  Improved gap from 0 to 15.625
[08/10 15:29:43]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:29:43]  Verifer returned sat in 2.161388 secs.
[08/10 15:29:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4385.026367    4184.926514 -1737.212646  4385.026367    0.100000  4184.926514   0.099854  200.000000      100.000000     6.0      4184.926514            -1             -1     -1
1    4385.026367    4284.926514 -1737.212646  4385.026367  200.000000  4284.926514   0.099854  100.000000        0.000000     5.0      4184.926514         False           True   True
2    4484.626465    4484.426514 -1737.212646  4484.626465  199.600098  4484.426514   0.099854    0.100098       -0.399902     1.0      4484.526611          True           True  False
3    4603.526367    4584.926514 -1737.212646  4603.526367  119.000000  4584.926514   0.199951   18.399902       18.399902     1.0      4603.326416         False          False  False
4    4703.626465    4684.926514 -1737.212646  4703.626465  118.500000  4684.926514   0.300049   18.399902       18.399902     1.0      4603.326416         False          False   True
5    4803.226562    4759.601562 -1737.212646  4803.226562  118.000000  4759.601562   0.300049   43.324951       18.000000     1.0      4603.326416         False          False   True
6    4819.401611    4803.026367 -1671.487549  4819.401611   59.500000  4803.026367   0.300049   16.075195       -0.099854     1.0      4603.326416         False          False   True
7    4833.576416    4819.201416 -1587.112549  4833.576416   30.250000  4819.201416   0.300049   14.074951       -1.550049     1.0      4603.326416         False          False   True
8    4835.126465    4834.826416 -1587.112549  4835.126465   15.625000  4834.826416   0.300049    0.000000     -100.000000     1.0      4603.326416         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=37683/2048.[0m
[08/10 15:29:44]  --------------------------------------------------------------------------------
[08/10 15:29:44]  Iteration: 21 (0 solution, 20 counterexamples)
[08/10 15:29:45]  Generator returned sat in 0.707272 secs.
[08/10 15:29:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:46]  Improved gap from 0 to 100
[08/10 15:29:46]  Improved number of small numbers from 57 to 114 out of a max of 114
[08/10 15:29:46]  Verifer returned sat in 0.807187 secs.
[08/10 15:29:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4703.451416    4603.326172 -2055.612549  4703.451416    0.024902  4603.326172    0.099854  100.025391      100.025391     9.0      4603.326172            -1             -1     -1
1    4703.451416    4703.301514 -2055.612549  4703.451416    0.025146  4703.301514    0.099854    0.050049        0.025391     9.0      4603.326172         False           True   True
2    4703.451416    4703.326416 -2055.612549  4703.451416    0.025146  4703.326416    0.099854    0.025146      -99.974609     4.0      4603.326172          True           True  False
3    5025.226562    4803.326172 -2055.612549  5025.226562  321.800293  4803.326172  119.850342  102.050049        2.050049     1.0      4603.326172          True           True  False
4    5183.076660    4905.401367 -2055.612549  5183.076660  259.900146  4905.401367  177.700439   99.974854        2.050049     1.0      4603.326172         False          False   True
5    5313.101807    5005.401123 -2055.612549  5313.101807  230.000000  5005.401123  207.725586   99.975098        2.050049     1.0      4603.326172         False          False   True
6    5478.164062    5105.401123 -2055.612549  5478.164062  265.037354  5105.401123  272.787842   99.975098        2.050049     1.0      4603.326172         False          False   True
7    5660.745117    5205.401367 -2055.612549  5660.745117  282.556152  5205.401367  355.368896   99.974854        2.050049     1.0      4603.326172         False          False   True
8    5851.048340    5305.401367 -2055.612549  5851.048340  290.278076  5305.401367  445.672119   99.974854        2.050049     1.0      4603.326172         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=8397/4096.[0m
[08/10 15:29:47]  --------------------------------------------------------------------------------
[08/10 15:29:47]  Iteration: 22 (0 solution, 21 counterexamples)
[08/10 15:29:48]  Generator returned sat in 0.605215 secs.
[08/10 15:29:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:48]  Improved gap from 1/10 to 0
[08/10 15:29:48]  Improved number of small numbers from 109 to 114 out of a max of 114
[08/10 15:29:48]  Verifer returned sat in 0.428790 secs.
[08/10 15:29:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5176.063965    4975.964111 -2055.612549  5176.063965  200.149902  4975.964111   0.000000  200.099854      100.099854     7.0      4975.964111            -1             -1     -1
1    5176.114258    5175.964111 -2055.612549  5176.114258  200.150146  5175.964111   0.050049    0.100098        0.100098     4.0      4975.964111         False           True  False
2    5276.164062    5275.964111 -2055.612549  5276.164062  100.149902  5275.964111   0.099854    0.100098        0.100098     1.0      5276.064209         False          False   True
3    5377.714111    5375.964111 -2055.612549  5377.714111  101.650146  5375.964111   1.649902    0.100098        0.100098     1.0      5276.064209         False          False   True
4    5477.764160    5376.114062 -2055.612549  5477.764160  100.150146  5376.114062   1.699951   99.950146        0.100098     1.0      5276.064209         False          False   True
5    5477.764160    5475.964111 -1955.712646  5477.764160   98.650146  5475.964111   1.699951    0.100098        0.000000     2.0      5276.064209         False          False   True
6    5478.164062    5476.114258 -1856.262451  5478.164062    0.500000  5476.114258   1.699951    0.349854       -0.149902     1.0      5276.064209         False          False   True
7    5478.314209    5476.614258 -1756.262695  5478.314209    0.500000  5476.614258   1.699951    0.000000        0.000000     1.0      5276.064209         False          False   True
8    5478.814209    5476.614258 -1656.762695  5478.814209    0.500000  5476.614258   1.699951    0.500000        0.000000     1.0      5276.064209         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=205/2048.[0m
[08/10 15:29:49]  --------------------------------------------------------------------------------
[08/10 15:29:49]  Iteration: 23 (0 solution, 22 counterexamples)
[08/10 15:29:51]  Generator returned sat in 1.352081 secs.
[08/10 15:29:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:51]  Improved gap from 0 to 100
[08/10 15:29:52]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/10 15:29:52]  Verifer returned sat in 0.487914 secs.
[08/10 15:29:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5275.914062    5075.964111 -2055.612549  5275.914062    0.049805  5075.964111     0.000000  199.949951      199.949951     3.0      5075.964111            -1             -1    True
1    5275.914062    5175.963867 -2055.612549  5275.914062  199.949951  5175.963867     0.000000   99.950195       99.949951     2.0      5075.964111         False          False    True
2    5275.914062    5175.964111 -2055.612549  5275.914062   99.950195  5175.964111     0.000000   99.949951       -0.050049     3.0      5275.914062         False          False    True
3    5443.880615    5275.964111 -2055.612549  5443.880615  267.916504  5275.964111     0.000000  167.916504       67.916504     1.0      5275.914062         False          False    True
4    5945.880615    5443.930664 -2055.612549  5945.880615  669.916504  5443.930664   369.916504  132.033447      100.000000     1.0      5275.914062         False          False    True
5    5945.880615    5475.964111 -2055.612549  5945.880615  131.983398  5475.964111   369.916504  100.000000        0.000000     2.0      5275.914062         False          False    True
6    6579.864014    5610.597412 -2055.612549  6579.864014  733.983398  5610.597412   803.899902  165.366699      100.000000     1.0      5275.914062         False          False    True
7    6579.864014    5775.964111 -2055.612549  6579.864014  165.316650  5775.964111   803.899902    0.000000        0.000000     2.0      5275.914062         False          False    True
8    7411.247559    5775.964111 -2055.612549  7411.247559  831.383545  5775.964111  1435.283447  200.000000      100.000000     2.0      5275.914062         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:29:52]  --------------------------------------------------------------------------------
[08/10 15:29:52]  Iteration: 24 (0 solution, 23 counterexamples)
[08/10 15:29:56]  Generator returned sat in 3.374039 secs.
[08/10 15:29:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:57]  Improved gap from 0 to 100
[08/10 15:29:58]  Improved number of small numbers from 60 to 69 out of a max of 114
[08/10 15:29:58]  Verifer returned sat in 1.355867 secs.
[08/10 15:29:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5371.811514    5271.806641 -2351.454951  5371.811514  100.002686  5271.806641     0.0025  100.002373          0.0025     3.0      5271.806641            -1             -1     -1
1    5371.811514    5371.806514 -2351.454951  5371.811514  100.000000  5371.806514     0.0025    0.002500        -99.9975     4.0      5371.809014         False          False   True
2    5871.809014    5571.806396 -2351.454951  5871.809014  500.000000  5571.806396     0.0025  300.000117        300.0000     1.0      5371.809014         False          False   True
3    5871.809014    5671.806514 -2351.454951  5871.809014  300.000000  5671.806514     0.0025  200.000000        200.0000     2.0      5871.806514         False          False   True
4    5871.809014    5671.809014 -2351.454951  5871.809014    0.010000  5671.809014     0.0025  199.997500        100.0000     3.0      5871.806514         False          False   True
5    5871.809014    5871.794189 -2351.454951  5871.809014    0.010000  5871.794189     0.0025    0.012324          0.0000     4.0      5871.806514         False          False   True
6    5871.809014    5871.806514 -2351.454951  5871.809014    0.010000  5871.806514     0.0025    0.000000       -100.0000     5.0      5871.806514         False          False   True
7    6073.829014    5971.806514 -2351.454951  6073.829014  202.020000  5971.806514     0.0025  102.020000          2.0200     1.0      5871.806514         False           True  False
8    6677.846514    6073.828857 -2351.454951  6677.846514  706.037500  6073.828857   204.0150  400.002656        302.0250     1.0      5871.806514         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=12081/40.[0m
[08/10 15:29:59]  --------------------------------------------------------------------------------
[08/10 15:29:59]  Iteration: 25 (0 solution, 24 counterexamples)
[08/10 15:30:00]  Generator returned sat in 0.528216 secs.
[08/10 15:30:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:00]  Improved gap from 1/10 to 100
[08/10 15:30:01]  Improved number of small numbers from 71 to 83 out of a max of 114
[08/10 15:30:01]  Verifer returned sat in 1.037687 secs.
[08/10 15:30:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5471.694092    5371.694189 -2351.454834  5471.694092  100.299805  5371.694189    0.000000   99.999902       99.899902     1.0      5371.694189            -1             -1   False
1    5471.894189    5471.794189 -2351.454834  5471.894189  100.200000  5471.794189    0.000000    0.100000        0.100000     1.0      5471.894189         False          False   False
2    5571.994189    5471.794189 -2351.454834  5571.994189  100.200000  5471.794189    0.000000  100.200000        0.200000     1.0      5471.894189         False          False   False
3    5672.094189    5638.627523 -2351.454834  5672.094189  200.300000  5638.627523    0.100000   33.366667        0.200000     1.0      5471.894189         False          False   False
4    5772.194189    5771.794189 -2351.454834  5772.194189  133.466667  5771.794189    0.200000    0.200000        0.200000     1.0      5471.894189         False          False    True
5    5921.994189    5871.794189 -2351.454834  5921.994189  150.000000  5871.794189   50.000000    0.200000        0.200000     1.0      5471.894189         False          False    True
6    6121.794189    5871.994189 -2351.454834  6121.794189  200.000000  5871.994189  149.800000  100.000000        0.200000     2.0      5471.894189         False          False    True
7    6138.477523    5972.094189 -2351.454834  6138.477523  116.683333  5972.094189  149.800000   16.583333      -83.116667     1.0      5988.677523          True           True    True
8    6581.335856    6071.794189 -2351.454834  6581.335856  459.441667  6071.794189  409.341667  100.200000        0.200000     1.0      5988.677523         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:30:02]  --------------------------------------------------------------------------------
[08/10 15:30:02]  Iteration: 26 (0 solution, 25 counterexamples)
[08/10 15:30:04]  Generator returned sat in 1.391257 secs.
[08/10 15:30:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:04]  Improved gap from 0 to 100
[08/10 15:30:04]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:30:04]  Verifer returned sat in 0.444502 secs.
[08/10 15:30:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4551.404053    4351.454346 -2351.455078  4551.404053  199.999756  4351.454346    0.000000  199.949707       99.949707     2.0      4351.454346            -1             -1   False
1    4551.404297    4451.454346 -2351.455078  4551.404297  199.949951  4451.454346    0.000000   99.949951       -0.050049     2.0      4551.404297         False          False   False
2    4651.354248    4551.454346 -2351.455078  4651.354248  199.899902  4551.454346    0.000000   99.899902       -0.100098     1.0      4651.354248         False          False   False
3    4908.504150    4680.729248 -2351.455078  4908.504150  357.049805  4680.729248    0.050049  227.724854      156.999756     1.0      4651.354248         False          False   False
4    5008.554199    4822.179199 -2351.455078  5008.554199  327.774902  4822.179199    0.100098  186.274902      156.999756     2.0      4651.354248         False          False    True
5    5191.504150    4951.454102 -2351.455078  5191.504150  369.224854  4951.454102   83.050049  157.000000      156.999756     2.0      4651.354248         False          False    True
6    5433.003906    5029.454346 -2351.455078  5433.003906  398.499756  5029.454346  224.549805  178.999756      156.999756     2.0      4651.354248         False          False    True
7    5601.229248    5151.454102 -2351.455078  5601.229248  347.225098  5151.454102  292.775146  157.000000      156.999756     2.0      4651.354248         False          False    True
8    5772.004150    5151.454346 -2351.455078  5772.004150  327.774902  5151.454346  363.550049  256.999756      156.999756     3.0      4651.354248         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=643071/4096.[0m
[08/10 15:30:05]  --------------------------------------------------------------------------------
[08/10 15:30:05]  Iteration: 27 (0 solution, 26 counterexamples)
[08/10 15:30:07]  Generator returned sat in 0.826780 secs.
[08/10 15:30:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:08]  Improved number of small numbers from 74 to 76 out of a max of 113
[08/10 15:30:08]  Verifer returned sat in 1.247716 secs.
[08/10 15:30:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4551.403809    4351.504053 -2351.455078  4551.403809  199.999756  4351.504053    0.000000  199.899756       99.899756     2.0      4351.504053            -1             -1   False
1    4551.404053    4488.504053 -2351.455078  4551.404053  199.900000  4488.504053    0.000000   62.900000       -0.100000     2.0      4551.404053         False          False   False
2    4551.604053    4551.504053 -2351.455078  4551.604053   63.100000  4551.504053    0.000000    0.100000      -99.900000     1.0      4551.604053         False          False   False
3    4751.804053    4686.037386 -2351.455078  4751.804053  200.300000  4686.037386    0.100000   65.666667        0.200000     1.0      4551.604053         False          False   False
4    4851.904053    4798.370719 -2351.455078  4851.904053  165.766667  4798.370719    0.200000   53.333333        0.200000     1.0      4551.604053         False          False    True
5    4952.004053    4951.504053 -2351.455078  4952.004053  153.433333  4951.504053    0.300000    0.200000        0.200000     1.0      4551.604053         False          False    True
6    5150.304053    4997.481831 -2351.455078  5150.304053  198.500000  4997.481831   98.600000   54.222222        0.200000     1.0      4551.604053         False          False    True
7    5250.304053    5051.704053 -2351.455078  5250.304053  154.222222  5051.704053   98.600000  100.000000        0.200000     2.0      4551.604053         False          False    True
8    5966.915164    5151.504150 -2351.455078  5966.915164  816.611111  5151.504150  715.211111  100.199902        0.200000     2.0      4551.604053         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:30:08]  --------------------------------------------------------------------------------
[08/10 15:30:08]  Iteration: 28 (0 solution, 27 counterexamples)
[08/10 15:30:10]  Generator returned sat in 0.311023 secs.
[08/10 15:30:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:10]  Improved gap from 1/40 to 100
[08/10 15:30:11]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 15:30:11]  Verifer returned sat in 1.302449 secs.
[08/10 15:30:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4506.767334    4406.867354 -2351.455078  4506.767334    0.100098  4406.867354        0.0   99.899980        -0.10002     2.0      4406.867354            -1             -1   False
1    4606.967354    4506.867354 -2351.455078  4606.967354  200.100000  4506.867354        0.0  100.100000         0.10000     1.0      4406.867354         False          False   False
2    4705.567354    4705.567354 -2351.455078  4705.567354  198.700000  4705.567354        0.0    0.000000        -1.30000     1.0      4705.567354         False          False   False
3    4767.767354    4767.667354 -2351.455078  4767.767354   62.200000  4767.667354        0.0    0.100000       -39.10000     1.0      4767.767354         False          False   False
4    4949.567354    4841.067354 -2351.455078  4949.567354  181.900000  4841.067354       42.5   66.000000         0.20000     1.0      4767.767354         False          False   False
5    5049.667354    4907.167354 -2351.455078  5049.667354  166.100000  4907.167354       42.6   99.900000         0.20000     1.0      4767.767354         False          False    True
6    5049.667354    5006.867354 -2351.455078  5049.667354   99.800000  5006.867354       42.6    0.200000       -99.80000     2.0      4767.767354         False          False    True
7    5728.967354    5206.867354 -2351.455078  5728.967354  679.500000  5206.867354      521.9    0.200000         0.20000     1.0      4767.767354         False          False    True
8    5910.667354    5306.867188 -2351.455078  5910.667354  181.900000  5306.867188      603.6    0.200166         0.20000     1.0      4767.767354         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:30:12]  --------------------------------------------------------------------------------
[08/10 15:30:12]  Iteration: 29 (0 solution, 28 counterexamples)
[08/10 15:30:13]  Generator returned sat in 0.613885 secs.
[08/10 15:30:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:13]  Improved gap from 1/1600 to 100
[08/10 15:30:14]  Improved number of small numbers from 96 to 114 out of a max of 114
[08/10 15:30:14]  Verifer returned sat in 0.527587 secs.
[08/10 15:30:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5149.057187    5048.957275 -2993.544922  5149.057187  100.100098  5048.957275     0.000000  100.099912        0.099912     6.0      5048.957275            -1             -1     -1
1    5149.057187    5148.957275 -2993.544922  5149.057187   99.999756  5148.957275     0.000000    0.099912      -99.900088     6.0      5149.057187         False           True  False
2    5398.157227    5348.857178 -2993.544922  5398.157227  249.199951  5348.857178     0.099854   49.200195       49.100098     1.0      5149.057187         False           True  False
3    5398.157227    5348.957275 -2993.544922  5398.157227    0.100098  5348.957275     0.099854   49.100098      -50.899902     2.0      5398.057373         False          False   True
4    5950.757324    5449.090576 -2993.544922  5950.757324  601.700195  5449.090576   352.699951  148.966797       49.100098     1.0      5398.057373         False          False   True
5    5950.857178    5548.957275 -2993.544922  5950.857178  149.066650  5548.957275   352.699951   49.199951      -50.800049     2.0      5398.057373         False          False   True
6    6601.490723    5648.957275 -2993.544922  6601.490723  699.833496  5648.957275   803.433350  149.100098       49.100098     1.0      5398.057373         False          False   True
7    6601.490723    5748.957275 -2993.544922  6601.490723  149.000000  5748.957275   803.433350   49.100098      -50.899902     2.0      5398.057373         False          False   True
8    7451.624023    5848.957275 -2993.544922  7451.624023  899.233398  5848.957275  1453.566650  149.100098       49.100098     1.0      5398.057373         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=100557/2048.[0m
[08/10 15:30:14]  --------------------------------------------------------------------------------
[08/10 15:30:14]  Iteration: 30 (0 solution, 29 counterexamples)
[08/10 15:30:17]  Generator returned sat in 1.485405 secs.
[08/10 15:30:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:18]  Improved number of small numbers from 79 to 86 out of a max of 113
[08/10 15:30:18]  Verifer returned sat in 0.815090 secs.
[08/10 15:30:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5249.057373    5048.957275 -2993.544922  5249.057373  200.100098  5048.957275    0.000000  200.100098      100.100098     6.0      5048.957275            -1             -1     -1
1    5249.057373    5190.357275 -2993.544922  5249.057373  200.000000  5190.357275    0.000000   58.700098        0.100098     6.0      5249.057373         False           True  False
2    5390.257275    5249.457275 -2993.544922  5390.257275  199.900000  5249.457275   41.100000   99.700000        0.200000     1.0      5349.157275         False           True  False
3    5490.357275    5402.290609 -2993.544922  5490.357275  199.800000  5402.290609   41.200000   46.866667        0.200000     1.0      5449.157275         False          False   True
4    5621.157275    5495.623942 -2993.544922  5621.157275  177.666667  5495.623942   72.000000   53.533333        0.200000     1.0      5449.157275         False          False   True
5    5721.257275    5648.957275 -2993.544922  5721.257275  153.633333  5648.957275   72.100000    0.200000        0.200000     1.0      5449.157275         False          False   True
6    5921.807275    5748.957275 -2993.544922  5921.807275  200.750000  5748.957275  172.650000    0.200000        0.200000     1.0      5449.157275         False          False   True
7    6095.940609    5848.957275 -2993.544922  6095.940609  174.333333  5848.957275  246.783333    0.200000        0.200000     1.0      5449.157275         False          False   True
8    6273.407275    5849.257080 -2993.544922  6273.407275  177.666667  5849.257080  324.250000   99.900195        0.200000     1.0      5449.157275         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=1/5.[0m
[08/10 15:30:18]  --------------------------------------------------------------------------------
[08/10 15:30:18]  Iteration: 31 (0 solution, 30 counterexamples)
[08/10 15:30:19]  Generator returned sat in 0.169259 secs.
[08/10 15:30:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:20]  Improved gap from 1/600 to 100
[08/10 15:30:20]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:30:20]  Verifer returned sat in 0.572812 secs.
[08/10 15:30:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5246.190918    5129.090820 -2976.611816  5246.190918  116.999756  5129.090820    0.000000  117.100098      117.100098     2.0       5129.09082            -1             -1     -1
1    5246.190918    5129.090820 -2976.611816  5246.190918  116.999756  5129.090820    0.000000  117.100098       17.100098     2.0       5129.09082         False           True  False
2    5246.390869    5246.290527 -2976.611816  5246.390869  117.300049  5246.290527    0.000000    0.100342      -82.699951     1.0       5129.09082         False           True  False
3    5446.390625    5406.957520 -2976.611816  5446.390625  200.100098  5406.957520    0.099854   39.333252       17.199951     1.0       5129.09082         False          False  False
4    5546.490723    5528.990723 -2976.611816  5546.490723  139.433350  5528.990723    0.199951   17.300049       17.199951     1.0       5129.09082         False          False   True
5    5729.640625    5629.090820 -2976.611816  5729.640625  200.449951  5629.090820   83.349854   17.199951       17.199951     1.0       5129.09082         False          False   True
6    5904.340820    5699.579590 -2976.611816  5904.340820  191.900146  5699.579590  158.050049   46.711182       17.199951     1.0       5129.09082         False          False   True
7    6004.440674    5806.857422 -2976.611816  6004.440674  146.811035  5806.857422  158.149902   39.433350       17.199951     1.0       5129.09082         False          False   True
8    6104.440674    5829.090820 -2976.611816  6104.440674  139.433350  5829.090820  158.149902  117.199951       17.199951     2.0       5129.09082         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=70451/4096.[0m
[08/10 15:30:21]  --------------------------------------------------------------------------------
[08/10 15:30:21]  Iteration: 32 (0 solution, 31 counterexamples)
[08/10 15:30:28]  Generator returned sat in 5.834073 secs.
[08/10 15:30:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:28]  Improved gap from 1/1200 to 0
[08/10 15:30:29]  Improved number of small numbers from 61 to 82 out of a max of 114
[08/10 15:30:29]  Verifer returned sat in 1.040966 secs.
[08/10 15:30:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5046.300293    4946.303711 -2976.611816  5046.300293  100.001465  4946.303711   0.000000  99.996582       99.996432     1.0      4946.303711            -1             -1    True
1    5046.305420    5046.302002 -2976.611816  5046.305420  100.001709  5046.302002   0.000000   0.003418        0.001559     1.0      4946.303711         False          False    True
2    5046.305420    5046.303861 -2876.613483  5046.305420    0.001709  5046.303861   0.000000   0.001559       -0.000107     2.0      5046.305420         False          False    True
3    5148.310527    5145.303861 -2876.613483  5148.310527  102.006667  5145.303861   2.001667   1.005000        0.003333     1.0      5046.305420         False           True   False
4    5248.312194    5146.310527 -2876.613483  5248.312194  101.006667  5146.310527   2.003333  99.998333        0.003333     1.0      5046.305420         False          False    True
5    5248.320527    5246.308861 -2776.625150  5248.320527  100.006667  5246.308861   2.003333   0.008333        0.000000     2.0      5046.305420         False          False    True
6    5248.322194    5246.317194 -2676.626953  5248.322194    0.010000  5246.317194   2.003333   0.001667       -0.000137     2.0      5246.318861          True           True   False
7    5248.330527    5246.320527 -2576.635254  5248.330527    0.010000  5246.320527   2.003333   0.006667       -0.000104     1.0      5246.318861         False           True   False
8    5248.333861    5246.328857 -2476.638672  5248.333861    0.010000  5246.328857   2.003333   0.001670       -0.000189     1.0      5246.318861         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/300.[0m
[08/10 15:30:29]  --------------------------------------------------------------------------------
[08/10 15:30:29]  Iteration: 33 (0 solution, 32 counterexamples)
[08/10 15:30:38]  Generator returned sat in 7.745156 secs.
[08/10 15:30:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:38]  Improved gap from 1/800 to 100
[08/10 15:30:39]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 15:30:39]  Verifer returned sat in 0.994270 secs.
[08/10 15:30:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4746.327148    4546.327298 -2576.635254  4746.327148    0.001250  4546.327298    0.00000  199.999850       199.99985     2.0      4546.327298            -1             -1    True
1    4746.327148    4646.327298 -2576.635254  4746.327148    0.001250  4646.327298    0.00000   99.999850        99.99985     2.0      4546.327298         False          False    True
2    4746.327148    4646.327298 -2576.635254  4746.327148   99.999756  4646.327298    0.00000   99.999850        -0.00015     2.0      4546.327298         False          False    True
3    4746.329798    4746.328548 -2576.635254  4746.329798  100.002500  4746.328548    0.00000    0.001250       -99.99750     1.0      4546.327298         False          False    True
4    5047.832298    4913.326048 -2576.635254  5047.832298  301.503750  4913.326048    1.50500  133.001250       100.00000     1.0      4546.327298         False          False    True
5    5047.832298    4946.327298 -2576.635254  5047.832298    0.010000  4946.327298    1.50500  100.000000         0.00000     2.0      4546.327298         False          False    True
6    5249.342298    5046.327298 -2576.635254  5249.342298  301.510000  5046.327298    3.01500  200.000000       100.00000     3.0      4546.327298         False          False    True
7    5249.342298    5246.326048 -2576.635254  5249.342298    0.010000  5246.326048    3.01500    0.001250         0.00000     2.0      5246.327298          True           True    True
8    5583.851048    5246.328613 -2576.635254  5583.851048  334.510000  5246.328613  137.52375  199.998685       100.00000     1.0      5246.327298         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:30:40]  --------------------------------------------------------------------------------
[08/10 15:30:40]  Iteration: 34 (0 solution, 33 counterexamples)
[08/10 15:30:44]  Generator returned sat in 2.842516 secs.
[08/10 15:30:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:44]  Improved gap from 1/600 to 100
[08/10 15:30:45]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 15:30:45]  Verifer returned sat in 1.175553 secs.
[08/10 15:30:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4895.529785    4761.529798 -2576.635254  4895.529785    0.100098  4761.529798      0.000  133.999987       99.899987     4.0      4761.529798            -1             -1   False
1    4895.629798    4795.629798 -2576.635254  4895.629798  134.100000  4795.629798      0.000  100.000000        0.000000     4.0      4761.529798         False          False   False
2    5046.317298    4989.854798 -2576.635254  5046.317298  250.687500  4989.854798      0.000   56.462500       50.687500     1.0      4761.529798         False          False   False
3    5146.517298    5086.854798 -2576.635254  5146.517298  156.662500  5086.854798      0.100   59.562500       50.787500     1.0      5146.417298         False          False   False
4    5247.617298    5170.304798 -2576.635254  5247.617298  160.662500  5170.304798      1.200   76.112500       50.787500     1.0      5146.417298         False          False    True
5    5356.842298    5295.629798 -2576.635254  5356.842298  185.337500  5295.629798     10.425   50.787500       50.787500     1.0      5146.417298         False          False    True
6    5456.942298    5394.629798 -2576.635254  5456.942298  150.887500  5394.629798     10.525   51.787500       50.787500     1.0      5146.417298         False          False    True
7    5557.042298    5495.629798 -2576.635254  5557.042298  151.887500  5495.629798     10.625   50.787500       50.787500     1.0      5146.417298         False          False    True
8    5666.917298    5495.729736 -2576.635254  5666.917298  160.662500  5495.729736     20.500  150.687562       50.787500     2.0      5146.417298         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=4063/80.[0m
[08/10 15:30:46]  --------------------------------------------------------------------------------
[08/10 15:30:46]  Iteration: 35 (0 solution, 34 counterexamples)
[08/10 15:30:52]  Generator returned sat in 5.079440 secs.
[08/10 15:30:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:52]  Improved number of small numbers from 79 to 113 out of a max of 113
[08/10 15:30:52]  Verifer returned sat in 0.414270 secs.
[08/10 15:30:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5095.429932    4895.429688 -2676.435303  5095.429932    0.100098  4895.429688    0.000000  200.000244      200.000000     4.0      4895.429688            -1             -1   False
1    5495.729736    4895.429932 -2676.435303  5495.729736  600.300049  4895.429932  100.199951  500.099854      400.099854     4.0      4895.429688         False          False   False
2    5595.829834    5095.429932 -2676.435303  5595.829834  600.199951  5095.429932  100.300049  400.099854      400.099854     4.0      5495.529785         False          False    True
3    5696.429932    5095.429932 -2676.435303  5696.429932  500.699951  5095.429932  100.900146  500.099854      400.099854     4.0      5595.529785         False          False    True
4    5696.429932    5295.429688 -2676.435303  5696.429932  499.199951  5295.429688  100.900146  300.100098      300.099854     4.0      5595.529785         False          False    True
5    5896.529785    5296.729980 -2676.435303  5896.529785  500.199951  5296.729980  101.000000  498.799805      400.099854     5.0      5595.529785         False          False    True
6    5896.529785    5395.429932 -2676.435303  5896.529785  498.699951  5395.429932  101.000000  400.099854      300.099854     6.0      5595.529785         False          False    True
7    5996.129883    5595.429932 -2676.435303  5996.129883  499.699951  5595.429932  101.000000  299.699951      299.699951     5.0      5595.529785         False          False    True
8    6197.129883    5595.629639 -2676.435303  6197.129883  500.699951  5595.629639  101.600098  499.900146      400.099854     4.0      5595.529785         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1638809/4096.[0m
[08/10 15:30:53]  --------------------------------------------------------------------------------
[08/10 15:30:53]  Iteration: 36 (0 solution, 35 counterexamples)
[08/10 15:30:56]  Generator returned sat in 1.753435 secs.
[08/10 15:30:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:56]  Improved gap from 0 to 0
[08/10 15:30:57]  Improved number of small numbers from 60 to 76 out of a max of 114
[08/10 15:30:57]  Verifer returned sat in 1.074613 secs.
[08/10 15:30:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5894.811279    5694.811084 -3575.816455  5894.811279    0.099854  5694.811084    0.00125  199.998945       99.998945     2.0      5694.811084            -1             -1     -1
1    5994.812334    5894.811035 -3575.816455  5994.812334  300.000000  5894.811035    0.00125  100.000049      100.000000     1.0      5694.811084         False          False   True
2    5994.812334    5994.811084 -3575.816455  5994.812334   99.999756  5994.811084    0.00125    0.000000        0.000000     2.0      5994.811084         False          False   True
3    6294.824834    5994.811279 -3575.816455  6294.824834  300.012500  5994.811279    0.00250  300.011055      200.011250     1.0      5994.811084         False          False   True
4    6294.824834    6144.824707 -3575.816455  6294.824834  299.512500  6144.824707    0.00250  149.997627      100.011250     2.0      5994.811084         False          False   True
5    6294.824834    6294.809814 -3575.816455  6294.824834    0.010000  6294.809814    0.00250    0.012520        0.011250     3.0      5994.811084         False          False   True
6    6294.824834    6294.811279 -3475.827705  6294.824834    0.010000  6294.811279    0.00250    0.011055        0.000000     4.0      5994.811084         False          False   True
7    6294.824834    6294.822334 -3375.827881  6294.824834    0.010000  6294.822334    0.00250    0.000000       -0.000176     5.0      5994.811084         False          False   True
8    6294.834834    6294.823730 -3275.837891  6294.834834    0.010000  6294.823730    0.00250    0.008604       -0.000186     1.0      5994.811084         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=160009/800.[0m
[08/10 15:30:58]  --------------------------------------------------------------------------------
[08/10 15:30:58]  Iteration: 37 (0 solution, 36 counterexamples)
[08/10 15:30:59]  Generator returned sat in 0.570484 secs.
[08/10 15:30:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:00]  Improved gap from 0 to 0
[08/10 15:31:01]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 15:31:01]  Verifer returned sat in 1.505073 secs.
[08/10 15:31:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5845.805908    5745.807334 -3875.809326  5845.805908    0.099609  5745.807334   0.000000  99.998574       -0.001380     2.0      5745.807334            -1             -1   False
1    5845.810667    5845.807373 -3775.812705  5845.810667  100.003333  5845.807373   0.000000   0.003294        0.000000     1.0      5745.807334         False          False   False
2    5845.810667    5845.810667 -3675.812705  5845.810667    0.001465  5845.810667   0.000000   0.000000        0.000000     2.0      5845.810667         False          False   False
3    5946.815667    5945.810667 -3675.812705  5946.815667  101.005000  5945.810667   1.001667   0.003333        0.003333     1.0      5845.810667         False          False   False
4    6047.317334    6045.810667 -3675.812705  6047.317334  100.505000  6045.810667   1.503333   0.003333        0.003333     1.0      5845.810667         False          False    True
5    6147.319001    6046.312334 -3675.812705  6147.319001  100.005000  6046.312334   1.505000  99.501667        0.003333     1.0      5845.810667         False          False    True
6    6147.322334    6145.815667 -3575.819580  6147.322334   99.505000  6145.815667   1.505000   0.001667       -0.000208     1.0      5845.810667         False          False    True
7    6147.330667    6145.819001 -3475.827881  6147.330667    0.010000  6145.819001   1.505000   0.006667       -0.000176     1.0      5845.810667         False          False    True
8    6147.334001    6145.827393 -3475.827881  6147.334001    0.010000  6145.827393   1.505000   0.001608      -99.996842     1.0      5845.810667         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/300.[0m
[08/10 15:31:01]  --------------------------------------------------------------------------------
[08/10 15:31:01]  Iteration: 38 (0 solution, 37 counterexamples)
[08/10 15:31:05]  Generator returned sat in 2.633659 secs.
[08/10 15:31:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:06]  Improved gap from 0 to 23.4375
[08/10 15:31:07]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:31:07]  Verifer returned sat in 1.312513 secs.
[08/10 15:31:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4731.143311    4631.127686 -2661.160889  4731.143311  100.062256  4631.127686    0.000000  100.015625       99.984619     1.0      4631.127686            -1             -1   False
1    4731.174561    4731.158691 -2661.160889  4731.174561  100.046875  4731.158691    0.000000    0.015869        0.015869     1.0      4731.174561         False          False   False
2    4831.205566    4831.158691 -2661.160889  4831.205566  100.046875  4831.158691    0.015625    0.031250        0.031250     1.0      4731.174561         False          False   False
3    5612.674316    4831.174316 -2661.160889  5612.674316  781.500000  4831.174316  681.484375  100.015625        0.031250     2.0      4731.174561         False          False    True
4    5902.908691    5031.096191 -2661.160889  5902.908691  390.250000  5031.096191  871.718750    0.093750        0.031250     1.0      5031.189941          True           True    True
5    6097.439941    5034.361816 -2661.160889  6097.439941  194.625000  5034.361816  966.250000   96.828125        0.031250     1.0      5031.189941         False          False    True
6    6097.439941    5131.174316 -2584.614014  6097.439941   96.812500  5131.174316  966.250000    0.015625      -23.421875     2.0      5031.189941         False          False    True
7    6147.330566    5154.612061 -2511.082764  6147.330566   49.906250  5154.612061  966.250000   26.468506        0.000000     1.0      5181.080566          True           True   False
8    6147.330566    5181.080566 -2434.520264  6147.330566   26.453125  5181.080566  966.250000    0.000000      -23.437500     2.0      5181.080566         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/32.[0m
[08/10 15:31:07]  --------------------------------------------------------------------------------
[08/10 15:31:07]  Iteration: 39 (0 solution, 38 counterexamples)
[08/10 15:31:13]  Generator returned sat in 4.128696 secs.
[08/10 15:31:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:13]  Improved gap from 1/600 to 100
[08/10 15:31:14]  Improved number of small numbers from 82 to 106 out of a max of 114
[08/10 15:31:14]  Verifer returned sat in 0.936048 secs.
[08/10 15:31:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5909.025146    5455.080566 -3585.083008  5909.025146  453.944580  5455.080566   0.000000  453.944580      353.944580     4.0      5455.080566            -1             -1   False
1    5909.025146    5655.080566 -3585.083008  5909.025146  453.844482  5655.080566   0.000000  253.944580      253.944580     2.0      5909.025146         False          False   False
2    6108.825195    5754.980713 -3585.083008  6108.825195  453.744629  5754.980713   0.000000  353.844482      353.744629     3.0      6108.825195         False          False   False
3    6108.825195    5755.080566 -3585.083008  6108.825195  235.762963  5755.080566   0.000000  353.744629      253.744629     4.0      6108.825195         False          False   False
4    6108.825195    5955.080566 -3585.083008  6108.825195  353.644444  5955.080566   0.000000  153.744629      153.744629     3.0      6108.825195         False          False   False
5    6485.547233    5955.180420 -3585.083008  6485.547233  530.466667  5955.180420  30.216667  500.150146      400.250000     4.0      6108.825195         False          False   False
6    6485.547233    6055.230469 -3585.083008  6485.547233  266.733333  6055.230469  30.216667  400.100098      300.250000     5.0      6108.825195         False          False    True
7    6485.547233    6155.080566 -3585.083008  6485.547233  400.100000  6155.080566  30.216667  300.250000      200.250000     3.0      6108.825195         False           True   False
8    6785.447233    6355.080566 -3585.083008  6785.447233  600.150000  6355.080566  30.216667  400.150000      400.150000     4.0      6108.825195         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1601/4.[0m
[08/10 15:31:14]  --------------------------------------------------------------------------------
[08/10 15:31:14]  Iteration: 40 (0 solution, 39 counterexamples)
[08/10 15:31:41]  Generator returned sat in 25.399997 secs.
[08/10 15:31:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:42]  Improved number of small numbers from 75 to 84 out of a max of 113
[08/10 15:31:42]  Verifer returned sat in 1.006482 secs.
[08/10 15:31:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5908.975098    5830.795654 -3585.083252  5908.975098   78.279541  5830.795654       0.05   78.129443       78.129337     1.0      5830.795654            -1             -1     -1
1    5909.075146    5908.975146 -3585.083008  5909.075146   78.229492  5908.975146       0.05    0.050000      -21.770370     1.0      5909.025146         False          False   True
2    5987.254639    5987.154776 -3585.083008  5987.254639   78.229492  5987.154776       0.05    0.049863      -43.590878     1.0      5909.025146         False          False   True
3    6065.434406    6065.334406 -3585.083008  6065.434406   78.229630  6065.334406       0.05    0.050000      -65.411111     1.0      5909.025146         False          False   True
4    6183.228850    6183.128850 -3585.083008  6183.228850  117.844444  6183.128850       0.05    0.050000      -47.616667     1.0      5909.025146         False          False   True
5    6360.445517    6230.795517 -3585.083008  6360.445517  177.266667  6230.795517       0.05  129.600000       29.600000     1.0      5909.025146         False          False   True
6    6497.245517    6430.795517 -3585.083008  6497.245517  266.400000  6430.795517       0.05   66.400000       66.400000     1.0      5909.025146         False          False   True
7    6830.945517    6430.795517 -3585.083008  6830.945517  400.100000  6430.795517       0.10  400.050000      300.050000     1.0      5909.025146         False          False   True
8    6830.945517    6530.795654 -3585.083008  6830.945517  202.050000  6530.795654       0.10  300.049863      200.050000     2.0      5909.025146         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6001/20.[0m
[08/10 15:31:43]  --------------------------------------------------------------------------------
[08/10 15:31:43]  Iteration: 41 (0 solution, 40 counterexamples)
[08/10 15:31:50]  Generator returned sat in 6.183046 secs.
[08/10 15:31:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:51]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 15:31:51]  Verifer returned sat in 0.368985 secs.
[08/10 15:31:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5728.495361    5428.395508 -3182.682861  5728.495361  299.799805  5428.395508   0.099854  300.000000      300.000000     4.0      5428.395508            -1             -1     -1
1    5728.495361    5428.495605 -3182.682861  5728.495361  299.799805  5428.495605   0.099854  299.899902      200.000000     4.0      5428.395508         False          False   True
2    5728.495361    5528.395752 -3182.682861  5728.495361  299.800049  5528.395752   0.099854  199.999756      100.000000     5.0      5428.395508         False          False   True
3    6028.095703    5728.395508 -3182.682861  6028.095703  499.600098  5728.395508   0.099854  299.600342      299.600342     4.0      5428.395508          True           True  False
4    6228.595459    5828.395508 -3182.682861  6228.595459  500.100098  5828.395508   0.099854  400.100098      400.100098     2.0      5428.395508         False          False  False
5    6329.095459    5828.395508 -3182.682861  6329.095459  500.600098  5828.395508   0.099854  500.600098      400.600098     2.0      5428.395508         False          False  False
6    6329.595459    6028.395508 -3182.682861  6329.595459  501.100098  6028.395508   0.099854  301.100098      301.100098     3.0      5428.395508         False          False  False
7    6530.095459    6128.395508 -3182.682861  6530.095459  501.600098  6128.395508   0.199951  401.500000      401.500000     4.0      5428.395508         False          False  False
8    6628.695557    6228.395508 -3182.682861  6628.695557  500.100098  6228.395508   0.199951  400.100098      400.100098     5.0      5428.395508         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=803/2.[0m
[08/10 15:31:51]  --------------------------------------------------------------------------------
[08/10 15:31:51]  Iteration: 42 (0 solution, 41 counterexamples)
[08/10 15:31:53]  Generator returned sat in 0.409539 secs.
[08/10 15:31:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:53]  Improved gap from 0 to 100
[08/10 15:31:54]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/10 15:31:54]  Verifer returned sat in 0.413702 secs.
[08/10 15:31:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5528.345459    5428.395264 -3182.682861  5528.345459    0.050000  5428.395264   0.000000   99.950195       99.950195     9.0      5428.395264            -1             -1     -1
1    5827.745361    5528.395264 -3182.682861  5827.745361  399.350098  5528.395264   0.000000  299.350098      299.350098     1.0      5428.395264         False           True  False
2    5827.795410    5528.845459 -3182.682861  5827.795410  299.400146  5528.845459   0.000000  298.949951      199.400146     2.0      5827.795410         False          False  False
3    6026.895508    5728.395264 -3182.682861  6026.895508  498.050049  5728.395264   0.000000  298.500244      298.500244     3.0      5827.795410         False          False  False
4    6226.945312    5827.845459 -3182.682861  6226.945312  498.550049  5827.845459   0.000000  399.099854      398.550049     2.0      5827.795410         False          False  False
5    6326.895508    5927.395264 -3182.682861  6326.895508  499.050049  5927.395264   0.000000  399.500244      398.500244     3.0      5827.795410         False          False  False
6    6426.945312    6026.895264 -3182.682861  6426.945312  499.550049  6026.895264   0.000000  400.050049      398.550049     4.0      5827.795410         False          False  False
7    6526.945312    6126.445312 -3182.682861  6526.945312  500.050049  6126.445312   0.000000  400.500000      398.550049     4.0      5827.795410         False          False  False
8    6626.995361    6128.395264 -3182.682861  6626.995361  500.550049  6128.395264   0.050049  498.550049      398.550049     5.0      5827.795410         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1632461/4096.[0m
[08/10 15:31:54]  --------------------------------------------------------------------------------
[08/10 15:31:54]  Iteration: 43 (0 solution, 42 counterexamples)
[08/10 15:32:01]  Generator returned sat in 5.742777 secs.
[08/10 15:32:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:03]  Improved gap from 0 to 18.75
[08/10 15:32:03]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:32:03]  Verifer returned sat in 1.578779 secs.
[08/10 15:32:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5708.195068    5508.095459 -3362.383057  5708.195068    0.099854  5508.095459   0.000000  200.099609      100.099609     5.0      5508.095459            -1             -1   False
1    5708.195068    5708.095459 -3362.383057  5708.195068  199.999756  5708.095459   0.000000    0.099609        0.099609     2.0      5508.095459         False          False   False
2    5877.695312    5808.095215 -3362.383057  5877.695312  169.599854  5808.095215   0.000000   69.600098       69.599854     1.0      5877.695312         False          False   False
3    6049.095215    5877.795410 -3362.383057  6049.095215  241.000000  5877.795410  31.199951  140.099854      109.799805     1.0      5877.695312         False          False   False
4    6148.995361    5995.695068 -3362.383057  6148.995361  240.000000  5995.695068  31.199951  122.100342      109.699951     2.0      5877.695312         False          False    True
5    6148.995361    6054.695312 -3362.383057  6148.995361  122.000000  6054.695312  31.199951   63.100098        9.699951     2.0      5877.695312         False          False    True
6    6148.995361    6108.095459 -3281.133057  6148.995361   63.000000  6108.095459  31.199951    9.699951       -9.050049     3.0      5877.695312         False          False    True
7    6172.795410    6126.845459 -3199.883057  6172.795410   33.500000  6126.845459  31.199951   14.750000       -4.000000     1.0      5877.695312         False          False    True
8    6176.795410    6145.595459 -3118.633057  6176.795410   18.750000  6145.595459  31.199951    0.000000      -18.750000     1.0      5877.695312         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=112435/1024.[0m
[08/10 15:32:04]  --------------------------------------------------------------------------------
[08/10 15:32:04]  Iteration: 44 (0 solution, 43 counterexamples)
[08/10 15:32:08]  Generator returned sat in 2.660681 secs.
[08/10 15:32:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:09]  Improved gap from 2/37 to 100
[08/10 15:32:09]  Improved number of small numbers from 113 to 113 out of a max of 114
[08/10 15:32:09]  Verifer returned sat in 1.413334 secs.
[08/10 15:32:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5829.210313    5632.510312 -3362.383057  5829.210313    0.20000  5632.510312    0.10000  196.6000            99.9     6.0      5632.510312            -1             -1     -1
1    5829.210313    5729.210313 -3362.383057  5829.210313    0.10000  5729.210313    0.10000   99.9000            -0.1     7.0      5829.110312         False          False   True
2    5929.310312    5829.210313 -3362.383057  5929.310312  200.00000  5829.210313    0.10000  100.0000             0.0     1.0      5829.110312         False          False   True
3    5929.310312    5929.210313 -3362.383057  5929.310312   99.90000  5929.210313    0.10000    0.0000          -100.0     2.0      5929.210313         False          False   True
4    6129.610312    6029.210313 -3362.383057  6129.610312  200.30000  6029.210313    0.20000  100.2000             0.2     1.0      5929.210313         False          False   True
5    6129.610312    6129.210313 -3362.383057  6129.610312   99.15000  6129.210313    0.20000    0.2000           -99.8     2.0      5929.210313         False          False   True
6    6330.985312    6229.522813 -3362.383057  6330.985312  201.57500  6229.522813    1.57500   99.8875             0.2     1.0      5929.210313         False          False   True
7    6330.985312    6329.210313 -3362.383057  6330.985312   99.78750  6329.210313    1.57500    0.2000           -99.8     2.0      5929.210313         False          False   True
8    6532.679063    6429.210313 -3362.383057  6532.679063  201.89375  6429.210313    3.26875  100.2000             0.2     1.0      5929.210313         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:32:10]  --------------------------------------------------------------------------------
[08/10 15:32:10]  Iteration: 45 (0 solution, 44 counterexamples)
[08/10 15:32:25]  Generator returned sat in 13.317491 secs.
[08/10 15:32:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:25]  Improved gap from 1/20 to 100
[08/10 15:32:26]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 15:32:26]  Verifer returned sat in 1.010497 secs.
[08/10 15:32:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5336.060303    5335.910156 -3362.383057  5336.060303    0.050000  5335.910156    0.050049    0.100098        0.100098     1.0      5335.910156            -1             -1     -1
1    5336.060303    5335.910156 -3362.383057  5336.060303    0.050049  5335.910156    0.050049    0.100098      -99.899902     1.0      5335.910156         False          False   True
2    5536.060059    5535.910156 -3362.383057  5536.060059  200.099854  5535.910156    0.050049    0.099854        0.099854     1.0      5335.910156         False          False   True
3    5536.060059    5535.910156 -3362.383057  5536.060059    0.050049  5535.910156    0.050049    0.099854      -99.900146     1.0      5536.010010         False          False   True
4    5834.010254    5735.910156 -3362.383057  5834.010254  298.050049  5735.910156   96.550049    1.550049        1.550049     1.0      5536.010010         False          False   True
5    5834.010254    5735.910156 -3362.383057  5834.010254    1.500000  5735.910156   96.550049    1.550049      -98.449951     1.0      5536.010010         False          False   True
6    6131.960205    5935.910156 -3362.383057  6131.960205  299.500000  5935.910156  194.500000    1.550049        1.550049     1.0      5536.010010         False          False   True
7    6131.960205    5935.910156 -3362.383057  6131.960205    1.500000  5935.910156  194.500000    1.550049      -98.449951     1.0      5536.010010         False          False   True
8    6429.910156    6035.910156 -3362.383057  6429.910156  299.500000  6035.910156  292.449951  101.550049        1.550049     1.0      5536.010010         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=6349/4096.[0m
[08/10 15:32:26]  --------------------------------------------------------------------------------
[08/10 15:32:26]  Iteration: 46 (0 solution, 45 counterexamples)
[08/10 15:32:29]  Generator returned sat in 1.288573 secs.
[08/10 15:32:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:29]  Improved gap from 0 to 100
[08/10 15:32:30]  Improved number of small numbers from 98 to 114 out of a max of 114
[08/10 15:32:30]  Verifer returned sat in 0.449924 secs.
[08/10 15:32:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5336.060059    5236.060303 -3362.383301  5336.060059    0.049805  5236.060303   0.012695   99.987061       99.987061     1.0      5236.060303            -1             -1     -1
1    5336.060059    5236.060303 -3362.383301  5336.060059    0.049805  5236.060303   0.012695   99.987061       -0.012939     1.0      5236.060303         False          False   True
2    5337.585449    5336.060303 -3362.383301  5337.585449  101.512451  5336.060303   0.012695    1.512451      -98.487549     1.0      5236.060303         False          False   True
3    5437.572754    5437.547607 -3362.383301  5437.572754  101.499756  5437.547607   0.012695    0.012451      -98.500244     1.0      5437.560059         False          False   True
4    5637.047607    5636.060303 -3362.383301  5637.047607  199.487305  5636.060303   0.962402    0.024902        0.024902     1.0      5437.560059         False          False   True
5    5638.522705    5636.060303 -3362.383301  5638.522705    1.500000  5636.060303   0.962402    1.500000      -98.500000     1.0      5437.560059         False          False   True
6    5935.022705    5836.060303 -3362.383301  5935.022705  298.000000  5836.060303  98.937500    0.024902        0.024902     1.0      5437.560059         False          False   True
7    5936.497803    5837.547852 -3362.383301  5936.497803    1.500000  5837.547852  98.937500    0.012451      -98.500000     1.0      5437.560059         False          False   True
8    6135.972900    5936.060303 -3362.383301  6135.972900  199.487549  5936.060303  99.887695  100.024902        0.024902     1.0      5437.560059         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=51/2048.[0m
[08/10 15:32:30]  --------------------------------------------------------------------------------
[08/10 15:32:30]  Iteration: 47 (0 solution, 46 counterexamples)
[08/10 15:32:39]  Generator returned sat in 7.656223 secs.
[08/10 15:32:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:40]  Improved gap from 1/2400 to 100
[08/10 15:32:40]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:32:40]  Verifer returned sat in 0.807530 secs.
[08/10 15:32:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5287.077881    5093.077637 -3362.383301  5287.077881    0.001221  5093.077637   0.001465  193.998779       93.998779     1.0      5093.077637            -1             -1     -1
1    5287.080322    5287.077637 -3362.383301  5287.080322  194.001221  5287.077637   0.001465    0.001221       -5.998779     1.0      5093.077637         False          False   True
2    5493.077881    5393.077637 -3362.383301  5493.077881  205.998779  5393.077637   0.001465   99.998779       99.998779     1.0      5093.077637         False          False   True
3    5493.077881    5393.077637 -3362.383301  5493.077881   46.999756  5393.077637   0.001465   99.998779       -0.001221     1.0      5493.076416         False          False   True
4    5591.078857    5493.077637 -3362.383301  5591.078857  197.999756  5493.077637   0.001465   97.999756       -2.000244     1.0      5493.076416         False          False   True
5    5795.078857    5657.746094 -3362.383301  5795.078857  301.999756  5657.746094   0.001465  137.331299      101.999756     1.0      5493.076416         False          False   True
6    6093.081543    5693.077881 -3362.383301  6093.081543  435.333984  5693.077881   0.002686  400.000977      300.001221     2.0      5493.076416         False          False   True
7    6093.081543    5893.077637 -3362.383301  6093.081543    0.010000  5893.077637   0.002686  200.001221      200.001221     2.0      6093.078857          True           True   True
8    6093.081543    5993.077637 -3362.383301  6093.081543  198.000000  5993.077637   0.002686  100.001221      100.001221     3.0      6093.078857         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1228805/4096.[0m
[08/10 15:32:41]  --------------------------------------------------------------------------------
[08/10 15:32:41]  Iteration: 48 (0 solution, 47 counterexamples)
[08/10 15:32:47]  Generator returned sat in 4.144856 secs.
[08/10 15:32:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:47]  Improved gap from 5/16384 to 100
[08/10 15:32:48]  Improved number of small numbers from 23 to 45 out of a max of 114
[08/10 15:32:48]  Verifer returned sat in 1.713562 secs.
[08/10 15:32:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5327.059570    5127.059326 -3764.363759  5327.059570    0.001221  5127.059326    0.000153  200.000092      100.000347     5.0      5127.059326            -1             -1     -1
1    5327.059570    5227.059254 -3764.363759  5327.059570  100.000000  5227.059254    0.000153  100.000164        0.000347     5.0      5127.059326         False           True   True
2    5327.059570    5327.059254 -3764.363759  5327.059570  100.000000  5327.059254    0.000153    0.000164      -99.999653     3.0      5127.059326          True           True  False
3    5727.059407    5427.059254 -3764.363759  5727.059407  400.000000  5427.059254  199.999847  100.000305        0.000488     1.0      5127.059326          True           True  False
4    5827.059102    5527.059712 -3764.363759  5827.059102  200.000000  5527.059712  199.999847   99.999542        0.000183     1.0      5127.059326         False          False   True
5    6078.059788    5651.559597 -3764.363759  6078.059788  351.000229  5651.559597  351.000229   75.499962        0.000488     1.0      5127.059326         False          False   True
6    6178.059941    5739.309807 -3764.363759  6178.059941  175.500114  5739.309807  351.000381   87.749752        0.000488     1.0      5127.059326         False          False   True
7    6178.060246    5827.059712 -3764.363759  6178.060246   87.750057  5827.059712  351.000381    0.000153      -99.999207     1.0      5127.059326         False          False   True
8    6416.810151    5927.059082 -3764.363759  6416.810151  238.750057  5927.059082  389.750591  100.000477        0.000488     1.0      5127.059326         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/2048.[0m
[08/10 15:32:49]  --------------------------------------------------------------------------------
[08/10 15:32:49]  Iteration: 49 (0 solution, 48 counterexamples)
[08/10 15:32:54]  Generator returned sat in 3.517550 secs.
[08/10 15:32:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:56]  Improved number of small numbers from 46 to 48 out of a max of 113
[08/10 15:32:56]  Verifer returned sat in 1.597727 secs.
[08/10 15:32:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5327.059570    5127.059082 -3764.363770  5327.059570    0.001221  5127.059082    0.000153  200.000336      100.000336     8.0      5127.059082            -1             -1     -1
1    5327.059570    5227.059254 -3764.363770  5327.059570  100.000000  5227.059254    0.000153  100.000164        0.000336     6.0      5127.059082         False           True   True
2    5327.059570    5327.059254 -3764.363759  5327.059570  100.000000  5327.059254    0.000153    0.000164      -99.999653     3.0      5127.059082          True           True  False
3    5727.059407    5429.059254 -3764.363759  5727.059407  400.000000  5429.059254  199.999847   98.000305        0.000488     1.0      5127.059082          True           True  False
4    5827.059102    5527.059712 -3764.363759  5827.059102  198.000000  5527.059712  199.999847   99.999542        0.000183     1.0      5127.059082         False          False   True
5    6076.059788    5656.559597 -3764.363759  6076.059788  349.000229  5656.559597  349.000229   70.499962        0.000488     1.0      5127.059082         False          False   True
6    6178.059941    5742.809578 -3764.363759  6178.059941  172.500114  5742.809578  351.000381   84.249981        0.000488     1.0      5127.059082         False          False   True
7    6178.060017    5827.059597 -3764.363759  6178.060017   84.250057  5827.059597  351.000381    0.000038      -99.999435     1.0      5127.059082         False          False   True
8    6413.309979    5927.059082 -3764.363759  6413.309979  235.250000  5927.059082  386.250420  100.000477        0.000488     1.0      5127.059082         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/2048.[0m
[08/10 15:32:56]  --------------------------------------------------------------------------------
[08/10 15:32:56]  Iteration: 50 (0 solution, 49 counterexamples)
[08/10 15:33:25]  Generator returned sat in 26.935458 secs.
[08/10 15:33:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:33:26]  Improved gap from 1/600 to 100
[08/10 15:33:26]  Improved number of small numbers from 78 to 92 out of a max of 114
[08/10 15:33:26]  Verifer returned sat in 1.219534 secs.
[08/10 15:33:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4988.696777    4788.697021 -3764.36377  4988.696777     0.1000  4788.697021        0.1  199.899756       99.899951     1.0      4788.697021            -1             -1     -1
1    5088.697021    4988.696826 -3764.36377  5088.697021   299.9000  4988.696826        0.1   99.900195       99.900195     1.0      4788.697021         False          False   True
2    5113.071826    5088.696826 -3764.36377  5113.071826   124.2750  5088.696826        0.1   24.275000       24.275000     1.0      5112.971826         False          False   True
3    5127.159326    5113.071826 -3764.36377  5127.159326    38.3625  5113.071826        0.1   13.987500      -61.637500     1.0      5127.059326         False          False   True
4    5188.896826    5188.696826 -3764.36377  5188.896826    75.7250  5188.696826        0.1    0.100000      -99.900000     1.0      5127.059326         False          False   True
5    5339.246826    5288.697021 -3764.36377  5339.246826   150.4500  5288.697021        0.1   50.449805      -49.550000     1.0      5127.059326         False          False   True
6    5588.697021    5389.996826 -3764.36377  5588.697021   299.9000  5389.996826        0.1  198.600195       99.900195     1.0      5127.059326         False          False   True
7    5988.896826    5588.696826 -3764.36377  5988.896826   598.8000  5588.696826        0.1  400.100000      400.100000     1.0      5127.059326         False          False   True
8    6785.396826    5588.796875 -3764.36377  6785.396826  1196.6000  5588.796875      696.5  500.099951      400.200000     2.0      5127.059326         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2001/5.[0m
[08/10 15:33:27]  --------------------------------------------------------------------------------
[08/10 15:33:27]  Iteration: 51 (0 solution, 50 counterexamples)
[08/10 15:33:48]  Generator returned sat in 19.655622 secs.
[08/10 15:33:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:33:49]  Improved gap from 1/100 to 17.1875
[08/10 15:33:50]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:33:50]  Verifer returned sat in 1.283921 secs.
[08/10 15:33:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6437.734375    6237.684326 -5113.351318  6437.734375  200.099854  6237.684326   0.050049  200.000000      200.000000     5.0      6237.684326            -1             -1     -1
1    6437.784424    6237.684326 -5113.351318  6437.784424  200.050049  6237.684326   0.050049  200.050049      100.050049     5.0      6437.734375         False           True   True
2    6768.209473    6337.684326 -5113.351318  6768.209473  530.475098  6337.684326   0.100098  430.425049      330.425049     4.0      6437.734375         False           True  False
3    6768.209473    6437.684326 -5113.351318  6768.209473  426.000000  6437.684326   0.100098  330.425049      230.425049     5.0      6768.109375         False          False   True
4    6768.209473    6637.684082 -5113.351318  6768.209473  215.000000  6637.684082   0.100098  130.425293      130.425049     3.0      6768.109375         False           True  False
5    6768.209473    6711.309082 -5113.351318  6768.209473  109.500000  6711.309082   0.100098   56.800293       30.425049     4.0      6768.109375         False          False  False
6    6768.209473    6737.684326 -5043.776367  6768.209473   56.750000  6737.684326   0.100098   30.425049        0.000000     5.0      6768.109375         False          False  False
7    6768.209473    6768.109375 -4960.963867  6768.209473   30.375000  6768.109375   0.100098    0.000000      -17.187500     6.0      6768.109375         False           True  False
8    6785.396973    6785.296875 -4960.963623  6785.396973   17.187500  6785.296875   0.100098    0.000000      -99.999756     1.0      6768.109375         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1353421/4096.[0m
[08/10 15:33:50]  --------------------------------------------------------------------------------
[08/10 15:33:50]  Iteration: 52 (0 solution, 51 counterexamples)
[08/10 15:34:07]  Generator returned sat in 14.434083 secs.
[08/10 15:34:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:07]  Improved gap from 7887/80 to 100
[08/10 15:34:08]  Improved number of small numbers from 60 to 70 out of a max of 114
[08/10 15:34:08]  Verifer returned sat in 1.322149 secs.
[08/10 15:34:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6143.202148    6043.101973 -4918.868965  6143.202148  300.049805  6043.101973       0.05  100.050176       99.950176     2.0      6043.101973            -1             -1     -1
1    6343.151973    6143.201973 -4918.868965  6343.151973  300.000000  6143.201973       0.05  199.900000      199.900000     1.0      6343.101973         False           True   True
2    6443.251973    6143.202148 -4918.868965  6443.251973  300.000000  6143.202148       0.05  299.999824      200.000000     2.0      6343.101973         False          False   True
3    6443.251973    6343.152100 -4918.868965  6443.251973   23.243750  6343.152100       0.05  100.049873      100.000000     2.0      6443.201973         False           True  False
4    6443.251973    6343.202148 -4918.868965  6443.251973   48.487500  6343.202148       0.05   99.999824        0.000000     3.0      6443.201973         False           True  False
5    6443.251973    6443.201973 -4918.868965  6443.251973   98.975000  6443.201973       0.05    0.000000     -100.000000     4.0      6443.201973         False           True  False
6    6643.201973    6641.351973 -4918.868965  6643.201973  199.950000  6641.351973       0.05    1.800000       -0.050000     1.0      6443.201973         False           True  False
7    7043.301973    6643.201973 -4918.868965  7043.301973  401.900000  6643.201973       0.05  400.050000      300.050000     1.0      6443.201973         False          False  False
8    7449.051973    6743.202148 -4918.868965  7449.051973  805.800000  6743.202148     305.80  400.049824      300.050000     2.0      6443.201973         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6001/20.[0m
[08/10 15:34:09]  --------------------------------------------------------------------------------
[08/10 15:34:09]  Iteration: 53 (0 solution, 52 counterexamples)
[08/10 15:34:15]  Generator returned sat in 4.535288 secs.
[08/10 15:34:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:15]  Improved gap from 403/800 to 100
[08/10 15:34:16]  Improved number of small numbers from 60 to 64 out of a max of 114
[08/10 15:34:16]  Verifer returned sat in 1.352834 secs.
[08/10 15:34:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6243.203223    6043.201973 -4918.868965  6243.203223  200.001221  6043.201973    0.00125  200.000000       200.00000     7.0      6043.201973            -1             -1     -1
1    6243.204473    6043.201973 -4918.868965  6243.204473  200.001250  6043.201973    0.00250  200.000000       100.00000     7.0      6043.201973         False           True   True
2    6343.203223    6243.201973 -4918.868965  6343.203223  299.998750  6243.201973    0.00250   99.998750        99.99875     7.0      6043.201973         False           True   True
3    6343.203223    6243.201973 -4918.868965  6343.203223    1.000833  6243.201973    0.00250   99.998750        -0.00125     7.0      6343.200723          True           True  False
4    6543.205723    6343.201973 -4918.868965  6543.205723  300.001250  6343.201973    0.00375  200.000000       100.00000     1.0      6343.200723         False           True  False
5    6543.205723    6543.200723 -4918.868965  6543.205723    0.010000  6543.200723    0.00375    0.001250         0.00000     2.0      6343.200723         False          False   True
6    6842.703223    6643.201904 -4918.868965  6842.703223  299.498750  6643.201904   99.50125  100.000068       100.00000     1.0      6343.200723         False          False   True
7    6842.703223    6643.703223 -4918.868965  6842.703223    0.010000  6643.703223   99.50125   99.498750         0.00000     2.0      6343.200723         False          False   True
8    7043.205723    6843.201904 -4918.868965  7043.205723  300.001250  6843.201904  100.00375  100.000068       100.00000     1.0      6343.200723         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:34:17]  --------------------------------------------------------------------------------
[08/10 15:34:17]  Iteration: 54 (0 solution, 53 counterexamples)
[08/10 15:34:19]  Generator returned sat in 0.653399 secs.
[08/10 15:34:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:21]  Improved number of small numbers from 63 to 63 out of a max of 113
[08/10 15:34:21]  Verifer returned sat in 1.344745 secs.
[08/10 15:34:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6243.203223    6043.201973 -4918.868965  6243.203223  200.001221  6043.201973    0.00125  200.000000       200.00000     7.0      6043.201973            -1             -1     -1
1    6243.204473    6043.201973 -4918.868965  6243.204473  200.001250  6043.201973    0.00250  200.000000       100.00000     7.0      6043.201973         False           True   True
2    6343.203223    6243.201973 -4918.868965  6343.203223  299.998750  6243.201973    0.00250   99.998750        99.99875     7.0      6043.201973         False           True   True
3    6343.203223    6243.201973 -4918.868965  6343.203223    1.334167  6243.201973    0.00250   99.998750        -0.00125     7.0      6343.200723          True           True  False
4    6543.205723    6343.201973 -4918.868965  6543.205723  300.001250  6343.201973    0.00375  200.000000       100.00000     1.0      6343.200723         False           True  False
5    6543.205723    6543.200723 -4918.868965  6543.205723    0.010000  6543.200723    0.00375    0.001250         0.00000     2.0      6343.200723         False          False   True
6    6842.703223    6643.201904 -4918.868965  6842.703223  299.498750  6643.201904   99.50125  100.000068       100.00000     1.0      6343.200723         False          False   True
7    6842.703223    6643.703223 -4918.868965  6842.703223    0.010000  6643.703223   99.50125   99.498750         0.00000     2.0      6343.200723         False          False   True
8    7043.205723    6843.201904 -4918.868965  7043.205723  300.001250  6843.201904  100.00375  100.000068       100.00000     1.0      6343.200723         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:34:21]  --------------------------------------------------------------------------------
[08/10 15:34:21]  Iteration: 55 (0 solution, 54 counterexamples)
[08/10 15:34:28]  Generator returned sat in 4.757102 secs.
[08/10 15:34:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:28]  Improved gap from 1/3200 to 100
[08/10 15:34:29]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/10 15:34:29]  Verifer returned sat in 0.649147 secs.
[08/10 15:34:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5843.193125    5843.191875 -4718.861611  5843.193125     0.001250  5843.191875     0.00000    0.001250       -0.001250     8.0      5843.191875            -1             -1     -1
1    5943.194375    5843.194375 -4718.861611  5943.194375   100.002500  5843.194375     0.00000  100.000000        0.000000     1.0      5843.191875         False           True  False
2    6343.203125    6043.193125 -4718.861611  6343.203125   500.008750  6043.193125     0.00125  300.008750      300.007500     1.0      5843.191875         False          False  False
3    6343.203125    6043.194375 -4718.861611  6343.203125     0.001250  6043.194375     0.00125  300.007500      200.007500     2.0      6343.201875         False          False   True
4    6343.203125    6243.194375 -4718.861611  6343.203125   300.006250  6243.194375     0.00125  100.007500      100.007500     3.0      6343.201875         False          False   True
5    7443.208125    6243.194375 -4718.861611  7443.208125  1200.012500  6243.194375   800.00625  400.007500      300.007500     3.0      6343.201875         False          False   True
6    7443.208125    6343.203125 -4718.861611  7443.208125     0.010000  6343.203125   800.00625  299.998750      200.007500     2.0      6343.201875         False          False   True
7    7593.242500    6543.194375 -4718.861611  7593.242500   450.033125  6543.194375   800.00625  250.041875      250.041875     3.0      6343.201875         False          False   True
8    8693.266875    6543.194375 -4718.861611  8693.266875  1350.066250  6543.194375  1750.06500  400.007500      300.007500     3.0      6343.201875         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=120003/400.[0m
[08/10 15:34:29]  --------------------------------------------------------------------------------
[08/10 15:34:29]  Iteration: 56 (0 solution, 55 counterexamples)
[08/10 15:34:43]  Generator returned sat in 11.555622 secs.
[08/10 15:34:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:43]  Improved number of small numbers from 104 to 113 out of a max of 113
[08/10 15:34:43]  Verifer returned sat in 0.286712 secs.
[08/10 15:34:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5473.603125    5173.603027 -4149.270508  5473.603125    0.100098  5173.603027    0.100098  299.900000      199.900000     8.0      5173.603027            -1             -1     -1
1    5774.003174    5373.603027 -4149.270508  5774.003174  600.300049  5373.603027    0.300049  400.100098      400.100098     8.0      5173.603027         False           True   True
2    5974.103271    5373.603271 -4149.270508  5974.103271  600.200195  5373.603271  100.400146  500.099854      400.100098     4.0      5873.703125          True           True   True
3    6074.103271    5473.603027 -4149.270508  6074.103271  600.099854  5473.603027  100.400146  500.100098      400.100098     3.0      5973.703125         False           True   True
4    6074.103271    5573.603271 -4149.270508  6074.103271  152.000000  5573.603271  100.400146  400.099854      300.100098     4.0      5973.703125         False          False   True
5    6074.103271    5673.603027 -4149.270508  6074.103271  228.000000  5673.603027  100.400146  300.100098      200.100098     5.0      5973.703125         False           True  False
6    6116.003174    5860.603027 -4149.270508  6116.003174  342.000000  5860.603027  100.400146  155.000000      142.000000     5.0      5973.703125         False           True  False
7    6474.003174    5973.603027 -4149.270508  6474.003174  513.000000  5973.603027  100.400146  400.000000      400.000000     5.0      5973.703125         False           True  False
8    6843.503174    6073.603027 -4149.270508  6843.503174  769.500000  6073.603027  369.800049  400.100098      400.100098     2.0      5973.703125         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=819405/2048.[0m
[08/10 15:34:44]  --------------------------------------------------------------------------------
[08/10 15:34:44]  Iteration: 57 (0 solution, 56 counterexamples)
[08/10 15:34:58]  Generator returned sat in 12.741662 secs.
[08/10 15:34:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:59]  Improved gap from 9/800 to 100
[08/10 15:35:00]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 15:35:00]  Verifer returned sat in 1.528030 secs.
[08/10 15:35:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6285.108887    6184.111396 -4149.270508  6285.108887    0.001465  6184.111396    0.00125  100.996240       100.99624     7.0      6184.111396            -1             -1     -1
1    6285.110146    6284.110352 -4149.270508  6285.110146  100.997500  6284.110352    0.00250    0.997295         0.99625     7.0      6184.111396         False           True   True
2    6285.110146    6284.111396 -4149.270508  6285.110146    0.001465  6284.111396    0.00250    0.996250       -99.00375     3.0      6285.107646          True           True   True
3    6485.108896    6484.111396 -4149.270508  6485.108896  200.995000  6484.111396    0.00250    0.995000         0.99500     1.0      6285.107646         False           True  False
4    6585.111396    6584.111396 -4149.270508  6585.111396  100.997500  6584.111396    0.00375    0.996250         0.99625     1.0      6285.107646         False          False  False
5    6585.111396    6584.111396 -4149.270508  6585.111396    0.010000  6584.111396    0.00375    0.996250       -99.00375     1.0      6285.107646         False          False   True
6    7032.135146    6784.111396 -4149.270508  7032.135146  448.020000  6784.111396  247.02750    0.996250         0.99625     1.0      6285.107646         False          False   True
7    7032.135146    6784.111396 -4149.270508  7032.135146    0.010000  6784.111396  247.02750    0.996250       -99.00375     1.0      6285.107646         False          False   True
8    7329.158896    6884.111572 -4149.270508  7329.158896  298.020000  6884.111572  344.05125  100.996074         0.99625     1.0      6285.107646         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=797/800.[0m
[08/10 15:35:00]  --------------------------------------------------------------------------------
[08/10 15:35:00]  Iteration: 58 (0 solution, 57 counterexamples)
[08/10 15:35:11]  Generator returned sat in 8.313673 secs.
[08/10 15:35:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:13]  Improved gap from 0 to 15.625
[08/10 15:35:13]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:35:13]  Verifer returned sat in 2.522557 secs.
[08/10 15:35:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7186.136230    7086.236328 -4170.620605  7186.136230    0.099854  7086.236328        0.0   99.899902       99.899902     6.0      7086.236328            -1             -1     -1
1    7264.886230    7186.236328 -4170.620605  7264.886230  178.649902  7186.236328        0.0   78.649902       78.649902     1.0      7086.236328         False           True  False
2    7264.886230    7186.236328 -4149.270508  7264.886230   78.550049  7186.236328        0.0   78.649902        0.000000     1.0      7264.886230         False          False  False
3    7593.236328    7264.986328 -4149.270508  7593.236328  407.000000  7264.986328        0.0  328.250000      228.350098     1.0      7264.886230         False          False  False
4    7593.236328    7458.961182 -4149.270508  7593.236328  205.000000  7458.961182        0.0  134.275146      128.350098     2.0      7264.886230         False          False  False
5    7593.236328    7464.886230 -4149.270508  7593.236328  104.000000  7464.886230        0.0  128.350098       28.350098     3.0      7264.886230         False          False  False
6    7593.236328    7564.886475 -4077.620605  7593.236328   53.500000  7564.886475        0.0   28.349854        0.000000     4.0      7264.886230         False          False  False
7    7593.236328    7593.236328 -3993.245605  7593.236328   28.250000  7593.236328        0.0    0.000000      -15.625000     5.0      7593.236328          True           True  False
8    7608.861328    7608.861328 -3993.245361  7608.861328   15.625000  7608.861328        0.0    0.000000      -99.999756     1.0      7593.236328         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=4569/20.[0m
[08/10 15:35:14]  --------------------------------------------------------------------------------
[08/10 15:35:14]  Iteration: 59 (0 solution, 58 counterexamples)
[08/10 15:35:27]  Generator returned sat in 11.635207 secs.
[08/10 15:35:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:28]  Improved gap from 1/2 to 100
[08/10 15:35:29]  Improved number of small numbers from 42 to 58 out of a max of 114
[08/10 15:35:29]  Verifer returned sat in 1.661325 secs.
[08/10 15:35:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7278.085938    7278.036035 -4170.620605  7278.085938    0.099854  7278.036035   0.000000    0.049902       -0.049951     8.0      7278.036035            -1             -1    True
1    7378.085962    7278.135986 -4170.620605  7378.085962  100.049927  7278.135986   0.000000   99.949976       -0.049927     1.0      7278.036035         False          False    True
2    7378.135986    7378.135889 -4170.620605  7378.135986  100.000000  7378.135889   0.000000    0.000098      -99.999902     1.0      7378.135986         False          False    True
3    7593.236328    7554.902799 -4170.620605  7593.236328  215.100439  7554.902799   0.000000   38.333529       15.100439     1.0      7378.135986         False          False    True
4    7693.336182    7678.135889 -4170.620605  7693.336182  138.433382  7678.135889   0.049927   15.150366       15.150366     1.0      7378.135986         False          False    True
5    7747.902507    7747.802653 -4170.620605  7747.902507   69.716691  7747.802653   0.049927    0.049927      -30.283309     1.0      7378.135986         False          False    True
6    7932.685962    7878.135889 -4170.620605  7932.685962  184.833382  7878.135889  39.399707   15.150366       15.150366     1.0      7378.135986         False          False    True
7    8010.452287    7971.002653 -4170.620605  8010.452287   92.916691  7971.002653  39.399707    0.049927       -7.083309     1.0      7378.135986         False          False    True
8    8156.835742    7978.135986 -4170.620605  8156.835742  146.433382  7978.135986  63.549487  115.150269       15.150366     1.0      7378.135986         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=620559/40960.[0m
[08/10 15:35:30]  --------------------------------------------------------------------------------
[08/10 15:35:30]  Iteration: 60 (0 solution, 59 counterexamples)
[08/10 15:35:37]  Generator returned sat in 5.573753 secs.
[08/10 15:35:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:38]  Improved gap from 0 to 100
[08/10 15:35:38]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 15:35:38]  Verifer returned sat in 0.538625 secs.
[08/10 15:35:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7577.186035    7278.111084 -4170.620605  7577.186035  300.000000  7278.111084   0.000000  299.074951      299.050049     6.0      7278.111084            -1             -1     -1
1    7578.111084    7278.135986 -4170.620605  7578.111084  300.000000  7278.135986   0.000000  299.975098      199.975098     7.0      7278.111084         False           True  False
2    7578.111084    7478.135986 -4170.620605  7578.111084  299.950195  7478.135986   0.000000   99.975098       99.975098     3.0      7578.111084          True           True  False
3    7880.635986    7577.185791 -4170.620605  7880.635986  402.500000  7577.185791   2.475098  300.975098      300.024902     4.0      7578.111084         False          False  False
4    7980.660889    7578.135986 -4170.620605  7980.660889  401.000000  7578.135986   2.500000  400.024902      300.024902     2.0      7578.111084         False          False   True
5    7980.660889    7778.135742 -4170.620605  7980.660889  399.500000  7778.135742   2.500000  200.025146      200.024902     3.0      7578.111084         False          False   True
6    8180.635742    7778.160889 -4170.620605  8180.635742  400.000000  7778.160889   2.500000  399.974854      299.999756     4.0      7578.111084         False          False   True
7    8181.160889    7978.135742 -4170.620605  8181.160889  400.500000  7978.135742   2.500000  200.525146      200.524902     4.0      7578.111084         False          False   True
8    8381.635742    7978.135986 -4170.620605  8381.635742  401.000000  7978.135986   3.474854  400.024902      300.024902     5.0      7578.111084         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=614451/2048.[0m
[08/10 15:35:39]  --------------------------------------------------------------------------------
[08/10 15:35:39]  Iteration: 61 (0 solution, 60 counterexamples)
[08/10 15:35:51]  Generator returned sat in 10.073284 secs.
[08/10 15:35:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:52]  Improved gap from 1/400 to 14.0625
[08/10 15:35:52]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 15:35:52]  Verifer returned sat in 1.463891 secs.
[08/10 15:35:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7542.460693    7528.198486 -4256.558105  7542.460693   14.212646  7528.198486   0.050049   14.212158       14.012207     7.0      7528.198486            -1             -1     -1
1    7542.460693    7528.398438 -4170.620605  7542.460693   14.162354  7528.398438   0.050049   14.012207       -0.050293     7.0      7542.410645         False           True   True
2    7542.560791    7542.460938 -4170.620605  7542.560791   14.112305  7542.460938   0.050049    0.049805      -99.950195     1.0      7542.510742         False           True  False
3    7930.510986    7728.398438 -4170.620605  7930.510986  388.000000  7728.398438   0.050049  202.062500      188.000000     1.0      7542.510742         False          False  False
4    7930.510986    7842.460938 -4170.620605  7930.510986  195.000000  7842.460938   0.050049   88.000000       88.000000     2.0      7542.510742         False          False  False
5    7941.010986    7890.660645 -4169.120605  7941.010986   98.500000  7890.660645   0.050049   50.300293        0.000000     3.0      7542.510742         False          False  False
6    7941.010986    7940.960938 -4095.195557  7941.010986   50.250000  7940.960938   0.050049    0.000000      -26.074951     2.0      7542.510742         False          False  False
7    7967.135986    7967.035889 -4009.258057  7967.135986   26.125000  7967.035889   0.050049    0.050049      -14.012451     1.0      7542.510742         False          False  False
8    7981.148438    7981.098389 -4009.258057  7981.148438   14.062500  7981.098389   0.050049    0.000000     -100.000000     1.0      7542.510742         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3761/20.[0m
[08/10 15:35:53]  --------------------------------------------------------------------------------
[08/10 15:35:53]  Iteration: 62 (0 solution, 61 counterexamples)
[08/10 15:36:02]  Generator returned sat in 6.700809 secs.
[08/10 15:36:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:03]  Improved number of small numbers from 85 to 93 out of a max of 113
[08/10 15:36:03]  Verifer returned sat in 0.825342 secs.
[08/10 15:36:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7671.986084    7171.785889 -3995.195557   7671.986084   500.200000  7171.785889     0.000000   500.200195      404.950195     7.0      7171.785889            -1             -1    True
1    7671.986084    7267.035889 -3995.195557   7671.986084   500.150000  7267.035889     0.000000   404.950195      304.950195     7.0      7671.986084         False          False    True
2    7767.135986    7467.035889 -3995.195557   7767.135986   500.100098  7467.035889     0.000000   300.100098      300.100098     8.0      7767.135986         False          False    True
3    7967.085889    7467.035889 -3995.195557   7967.085889   500.050000  7467.035889     0.000000   500.050000      400.050000     8.0      7967.085889         False          False    True
4    7967.085889    7567.035889 -3995.195557   7967.085889   248.025000  7567.035889     0.000000   400.050000      300.050000     9.0      7967.085889         False          False    True
5    8240.073389    7672.035889 -3995.195557   8240.073389   673.037500  7672.035889     0.000000   568.037500      473.037500     4.0      7967.085889         False           True   False
6    8887.592139    7767.185889 -3995.195557   8887.592139  1215.556250  7767.185889     0.000000  1120.406250     1020.556250     4.0      7967.085889         False          False   False
7    9891.670264    7967.035889 -3995.195557   9891.670264  2124.484375  7967.035889   904.028125  1020.606250     1020.606250     5.0      7967.085889         False          False   False
8   10993.548389    8067.035645 -3995.195557  10993.548389  2122.484375  8067.035645  1905.906250  1020.606494     1020.606250     4.0      7967.085889         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=163297/160.[0m
[08/10 15:36:03]  --------------------------------------------------------------------------------
[08/10 15:36:03]  Iteration: 63 (0 solution, 62 counterexamples)
[08/10 15:36:23]  Generator returned sat in 17.340393 secs.
[08/10 15:36:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:23]  Improved gap from 0 to 100
[08/10 15:36:24]  Improved number of small numbers from 68 to 91 out of a max of 114
[08/10 15:36:24]  Verifer returned sat in 1.254944 secs.
[08/10 15:36:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7549.176025    7349.275879 -3995.195557  7549.176025    0.050049  7349.275879       0.00  199.900146      199.900013     8.0      7349.275879            -1             -1     -1
1    7549.176025    7449.276012 -3995.195557  7549.176025    0.050049  7449.276012       0.00   99.900013       99.900013     8.0      7349.275879         False           True  False
2    8049.376012    7549.226074 -3995.195557  8049.376012  600.100000  7549.226074       0.05  500.099938      500.050000     1.0      7349.275879          True           True  False
3    8049.376012    7549.276123 -3995.195557  8049.376012   50.076543  7549.276123       0.05  500.049889      400.050000     2.0      8049.326012         False          False   True
4    8049.376012    7649.276123 -3995.195557  8049.376012   76.614815  7649.276123       0.05  400.049889      300.050000     3.0      8049.326012         False           True  False
5    8049.376012    7849.275879 -3995.195557  8049.376012  116.422222  7849.275879       0.05  200.050133      200.050000     4.0      8049.326012         False           True  False
6    8049.376012    7883.525879 -3995.195557  8049.376012  176.133333  7883.525879       0.05  165.800133      100.050000     5.0      8049.326012         False           True  False
7    8149.275879    8049.276012 -3995.195557  8149.275879  265.700000  8049.276012       0.05   99.949867       99.949867     6.0      8049.326012         False           True  False
8    8449.376012    8149.275879 -3995.195557  8449.376012  400.050000  8149.275879       0.05  300.050133      300.050000     1.0      8049.326012         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=10001/20.[0m
[08/10 15:36:25]  --------------------------------------------------------------------------------
[08/10 15:36:25]  Iteration: 64 (0 solution, 63 counterexamples)
[08/10 15:37:11]  Generator returned sat in 44.745853 secs.
[08/10 15:37:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:12]  Improved gap from 0 to 100
[08/10 15:37:13]  Improved number of small numbers from 59 to 73 out of a max of 114
[08/10 15:37:13]  Verifer returned sat in 1.522318 secs.
[08/10 15:37:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7825.090820    7525.141012 -4171.060557  7825.090820  401.349854  7525.141012       0.00  299.949808      299.949808     8.0      7525.141012            -1             -1    True
1    7926.441012    7574.928512 -4171.060557  7926.441012  401.300000  7574.928512       0.05  351.462500      301.250000     9.0      7926.391012         False          False    True
2    7976.278512    7725.140869 -4171.060557  7976.278512  401.300000  7725.140869       0.05  251.087643      251.087500     9.0      7926.391012         False           True    True
3    7976.278512    7825.140869 -4171.060557  7976.278512   13.509375  7825.140869       0.05  151.087643      151.087500     3.0      7976.228512         False           True   False
4    7976.278512    7925.140869 -4171.060557  7976.278512   26.018750  7925.140869       0.05   51.087643       51.087500     4.0      7976.228512         False          False   False
5    7976.278512    7925.141113 -4171.060557  7976.278512   51.037500  7925.141113       0.05   51.087399      -48.912500     5.0      7976.228512         False          False   False
6    8026.266113    8025.141012 -4171.060557  8026.266113  101.075000  8025.141012       0.05    1.075101      -98.924899     1.0      7976.228512         False          False   False
7    8226.341012    8225.141012 -4171.060557  8226.341012  201.150000  8225.141012       0.05    1.150000        1.150000     1.0      7976.228512         False          False   False
8    8626.491012    8226.340820 -4171.060557  8626.491012  401.300000  8226.340820       0.10  400.050192      301.250000     1.0      7976.228512         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1205/4.[0m
[08/10 15:37:14]  --------------------------------------------------------------------------------
[08/10 15:37:14]  Iteration: 65 (0 solution, 64 counterexamples)
[08/10 15:37:25]  Generator returned sat in 9.148331 secs.
[08/10 15:37:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:25]  Improved gap from 1/40 to 100
[08/10 15:37:26]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:37:26]  Verifer returned sat in 0.464534 secs.
[08/10 15:37:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7320.901123    7122.651123 -4171.060547  7320.901123  298.150146  7122.651123   0.049805  198.200195       99.950195     5.0      7122.651123            -1             -1     -1
1    7420.851074    7320.900879 -4171.060547  7420.851074  298.150146  7320.900879   0.100098   99.850098       99.849854     1.0      7122.651123         False           True   True
2    7520.900879    7320.950928 -4171.060547  7520.900879  199.899902  7320.950928   0.149902  199.800049       99.849854     2.0      7520.750977         False          False   True
3    7521.000977    7520.751221 -4171.060547  7521.000977  199.900146  7520.751221   0.149902    0.099854       -0.050049     1.0      7520.750977         False           True   True
4    7720.951172    7520.901123 -4171.060547  7720.951172  200.050049  7520.901123   0.200195  199.849854       99.849854     1.0      7520.750977         False          False   True
5    7720.951172    7720.700928 -4171.060547  7720.951172    0.500000  7720.700928   0.200195    0.050049       -0.150146     2.0      7520.750977         False          False   True
6    7921.776123    7820.900879 -4171.060547  7921.776123  200.875000  7820.900879   1.025146   99.850098       99.849854     1.0      7920.750977          True           True  False
7    7921.776123    7920.167725 -4171.060547  7921.776123    0.500000  7920.167725   1.025146    0.583252       -0.150146     2.0      7920.750977         False          False   True
8    8121.826172    7920.901123 -4171.060547  8121.826172  200.633301  7920.901123   1.075195  199.849854       99.849854     1.0      7920.750977         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=408985/4096.[0m
[08/10 15:37:26]  --------------------------------------------------------------------------------
[08/10 15:37:26]  Iteration: 66 (0 solution, 65 counterexamples)
[08/10 15:37:38]  Generator returned sat in 9.931008 secs.
[08/10 15:37:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:39]  Improved gap from 818377/16384 to 100
[08/10 15:37:39]  Improved number of small numbers from 50 to 114 out of a max of 114
[08/10 15:37:39]  Verifer returned sat in 0.340833 secs.
[08/10 15:37:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7420.700684    7320.700684 -4171.060791  7420.700684  100.050293  7320.700684    0.000000  100.000000       99.999756     2.0      7320.700684            -1             -1    True
1    7420.750977    7420.700928 -4171.060791  7420.750977  100.050293  7420.700928    0.000000    0.050049        0.050049     1.0      7320.700684         False          False    True
2    7520.750977    7420.750977 -4171.060791  7520.750977  100.050049  7420.750977    0.000000  100.000000        0.050049     2.0      7520.750977         False          False    True
3    7520.851074    7520.750977 -4171.060791  7520.851074  100.100098  7520.750977    0.000000    0.100098      -99.849854     2.0      7520.750977         False          False    True
4    7720.801270    7620.725586 -4171.060791  7720.801270  200.050293  7620.725586    0.050293  100.025391        0.050049     1.0      7520.750977         False          False    True
5    7720.801270    7720.750977 -4171.060791  7720.801270  100.025146  7720.750977    0.050293    0.000000      -99.949951     2.0      7520.750977         False          False    True
6    8020.801270    7820.700928 -4171.060791  8020.801270  300.000000  7820.700928  100.050293  100.050049        0.050049     1.0      7520.750977         False          False    True
7    8070.751221    7920.750977 -4171.060791  8070.751221  150.000000  7920.750977  100.050293   49.949951      -50.000000     2.0      7520.750977         False          False    True
8    8320.826660    8020.700928 -4171.060791  8320.826660  300.025391  8020.700928  200.075684  100.050049        0.050049     1.0      7520.750977         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/4096.[0m
[08/10 15:37:39]  --------------------------------------------------------------------------------
[08/10 15:37:39]  Iteration: 67 (0 solution, 66 counterexamples)
[08/10 15:38:33]  Generator returned sat in 50.976057 secs.
[08/10 15:38:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:38:34]  Improved number of small numbers from 91 to 91 out of a max of 113
[08/10 15:38:34]  Verifer returned sat in 0.673696 secs.
[08/10 15:38:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7320.726074    7120.853564 -4071.11084  7320.726074  100.050293  7120.853564    0.000000  199.872510       99.975098     2.0      7120.853564            -1             -1    True
1    7420.750977    7320.738525 -4071.11084  7420.750977  299.897412  7320.738525    0.000000  100.012451      100.000000     1.0      7120.853564         False          False    True
2    7520.750977    7320.750977 -4071.11084  7520.750977  200.012451  7320.750977    0.000000  200.000000      100.000000     2.0      7520.750977         False          False    True
3    7520.763428    7453.814551 -4071.11084  7520.763428  200.012451  7453.814551    0.000000   66.948877        0.012451     2.0      7520.750977         False          False    True
4    7720.801270    7520.775879 -4071.11084  7720.801270  266.986719  7520.775879    0.050293  199.975098      100.000000     1.0      7520.750977         False          False    True
5    7720.801270    7720.750977 -4071.11084  7720.801270  132.993359  7720.750977    0.050293    0.000000        0.000000     2.0      7520.750977         False          False    True
6    7987.797949    7820.700928 -4071.11084  7987.797949  266.996680  7820.700928   67.046973  100.050049      100.000000     1.0      7520.750977         False          False    True
7    8020.746240    7920.750977 -4071.11084  8020.746240  132.998340  7920.750977   67.046973   32.948291       32.948291     2.0      7520.750977         False          False    True
8    8254.784668    7953.711719 -4071.11084  8254.784668  266.986719  7953.711719  134.033691  167.039258      100.000000     1.0      7520.750977         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:38:34]  --------------------------------------------------------------------------------
[08/10 15:38:34]  Iteration: 68 (0 solution, 67 counterexamples)
[08/10 15:38:58]  Generator returned sat in 21.654956 secs.
[08/10 15:38:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:00]  Improved gap from 0 to 35.9375
[08/10 15:39:01]  Improved number of small numbers from 65 to 73 out of a max of 114
[08/10 15:39:01]  Verifer returned sat in 3.121899 secs.
[08/10 15:39:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7339.557373    7339.457227 -4261.854736  7339.557373   0.100098  7339.457227        0.0   0.100146        0.100000     2.0      7339.457227            -1             -1   False
1    7358.025977    7357.925977 -4239.879395  7358.025977  18.568750  7357.925977        0.0   0.100000      -59.456055     1.0      7339.457227         False          False   False
2    7453.319727    7417.482227 -4175.817090  7453.319727  95.393750  7417.482227        0.0  35.837500       -0.100000     1.0      7339.457227         False          False   False
3    7512.775977    7453.419727 -4135.173340  7512.775977  95.293750  7453.419727        0.0  59.356250        0.000000     1.0      7512.775977         False          False   False
4    7512.775977    7512.775977 -4071.110840  7512.775977  57.481250  7512.775977        0.0   0.000000      -35.937500     2.0      7512.775977         False          False   False
5    7590.700977    7548.713477 -4013.098389  7590.700977  77.925000  7548.713477        0.0  41.987500       -0.000049     1.0      7512.775977         False          False   False
6    7614.829102    7590.800977 -3949.135840  7614.829102  66.115625  7590.800977        0.0  24.028125      -11.909375     1.0      7512.775977         False          False   False
7    7659.991602    7626.738477 -3885.073340  7659.991602  69.190625  7626.738477        0.0  33.253125       -2.684375     1.0      7512.775977         False          False   False
8    7684.219727    7662.676025 -3885.073242  7684.219727  57.481250  7662.676025        0.0  21.543701      -78.456152     1.0      7512.775977         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 15:39:02]  --------------------------------------------------------------------------------
[08/10 15:39:02]  Iteration: 69 (0 solution, 68 counterexamples)
[08/10 15:39:18]  Generator returned sat in 13.466739 secs.
[08/10 15:39:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:18]  Improved gap from 7/5 to 100
[08/10 15:39:19]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 15:39:19]  Verifer returned sat in 1.256351 secs.
[08/10 15:39:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6893.697266    6893.695977 -3885.07334  6893.697266  100.002441  6893.695977    0.000000    0.001289       -0.001211     9.0      6893.695977            -1             -1     -1
1    6993.698477    6893.698477 -3885.07334  6993.698477  100.002500  6893.698477    0.000000  100.000000        0.000000     1.0      6893.695977         False           True  False
2    7193.699727    6993.699727 -3885.07334  7193.699727  300.001250  6993.699727    0.001250  199.998750      100.000000     1.0      6893.695977         False          False  False
3    7193.699727    7093.698477 -3885.07334  7193.699727    0.248750  7093.698477    0.001250  100.000000        0.000000     2.0      7193.698477         False          False   True
4    7393.700977    7193.698477 -3885.07334  7393.700977  300.001250  7193.698477    0.002500  200.000000      100.000000     3.0      7193.698477         False          False   True
5    7393.700977    7293.698477 -3885.07334  7393.700977    0.010000  7293.698477    0.002500  100.000000        0.000000     2.0      7193.698477         False           True   True
6    7743.219102    7493.698242 -3885.07334  7743.219102  449.518125  7493.698242  149.520625  100.000234      100.000000     1.0      7193.698477         False          False   True
7    7743.219102    7593.697227 -3885.07334  7743.219102    0.010000  7593.697227  149.520625    0.001250        0.000000     2.0      7193.698477         False          False   True
8    8342.735977    7593.699707 -3885.07334  8342.735977  599.518125  7593.699707  549.037500  199.998770      100.000000     1.0      7193.698477         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:39:20]  --------------------------------------------------------------------------------
[08/10 15:39:20]  Iteration: 70 (0 solution, 69 counterexamples)
[08/10 15:39:28]  Generator returned sat in 6.243281 secs.
[08/10 15:39:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:31]  Improved gap from 1/800 to 35.9375
[08/10 15:39:32]  Improved number of small numbers from 76 to 104 out of a max of 114
[08/10 15:39:32]  Verifer returned sat in 3.967597 secs.
[08/10 15:39:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    9085.338623    8977.425977 -5977.113281  9085.338623    0.100000  8977.425977        0.0  107.912646       99.600342     4.0      8977.425977            -1             -1   False
1    9085.538477    9085.438477 -5977.113281  9085.538477  108.112500  9085.438477        0.0    0.100000       -0.199805     1.0      8977.425977         False          False   False
2    9125.375732    9085.738281 -5916.850830  9125.375732   39.937256  9085.738281        0.0   39.637451       -0.100098     1.0      9125.375732         False          False   False
3    9125.575928    9125.475977 -5852.788574  9125.575928   39.837646  9125.475977        0.0    0.099951      -35.837646     1.0      9125.575928         False          False   False
4    9201.500977    9161.413574 -5792.875977  9201.500977   76.025000  9161.413574        0.0   40.087402        0.000000     1.0      9125.575928         False          False   False
5    9201.500977    9201.500977 -5728.813477  9201.500977   39.987549  9201.500977        0.0    0.000000      -35.937500     2.0      9125.575928         False          False   False
6    9261.382324    9237.438477 -5664.750977  9261.382324   59.881348  9237.438477        0.0   23.943848      -11.993652     1.0      9125.575928         False          False   False
7    9295.419727    9273.375977 -5600.688477  9295.419727   57.981250  9273.375977        0.0   22.043750      -13.893750     1.0      9125.575928         False          False   False
8    9331.357178    9311.313477 -5600.688477  9331.357178   57.981201  9311.313477        0.0   20.043701      -77.956299     1.0      9125.575928         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/5.[0m
[08/10 15:39:33]  --------------------------------------------------------------------------------
[08/10 15:39:33]  Iteration: 71 (0 solution, 70 counterexamples)
[08/10 15:39:44]  Generator returned sat in 8.522182 secs.
[08/10 15:39:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:44]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 15:39:44]  Verifer returned sat in 0.451323 secs.
[08/10 15:39:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8465.427246    8165.427002 -5600.688477  8465.427246    0.001221  8165.427002   0.000000  300.000244      300.000244     8.0      8165.427002            -1             -1   False
1    8465.428223    8167.427246 -5600.688477  8465.428223  300.001221  8167.427246   0.000000  298.000977      200.001221     7.0      8165.427002         False          False   False
2    8665.425781    8267.425781 -5600.688477  8665.425781  497.998535  8267.425781   0.000000  398.000000      299.998779     8.0      8165.427002         False          False   False
3    8765.429688    8367.422119 -5600.688477  8765.429688  498.003906  8367.422119   0.001465  398.006104      300.001221     9.0      8165.427002         False          False   False
4    8765.429688    8465.427246 -5600.688477  8765.429688    0.010000  8465.427246   0.001465  300.000977      200.001221     9.0      8765.428223          True           True    True
5    8765.429688    8665.427002 -5600.688477  8765.429688  300.000000  8665.427002   0.001465  100.001221      100.001221     3.0      8765.428223         False           True   False
6    9065.429688    8765.425781 -5600.688477  9065.429688  400.001221  8765.425781   0.001465  300.002441      300.001221     4.0      8765.428223         False          False   False
7    9165.430908    8765.427246 -5600.688477  9165.430908  400.003662  8765.427246   0.002686  400.000977      300.001221     5.0      8765.428223         False          False   False
8    9165.430908    8965.427002 -5600.688477  9165.430908    0.010000  8965.427002   0.002686  200.001221      200.001221     3.0      8765.428223         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=1228805/4096.[0m
[08/10 15:39:45]  --------------------------------------------------------------------------------
[08/10 15:39:45]  Iteration: 72 (0 solution, 71 counterexamples)
[08/10 15:40:08]  Generator returned sat in 20.303397 secs.
[08/10 15:40:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:08]  Improved gap from 0 to 100
[08/10 15:40:09]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/10 15:40:09]  Verifer returned sat in 0.832118 secs.
[08/10 15:40:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8665.402813    8565.403437 -6000.664912  8665.402813    0.000625  8565.403437    0.000625   99.998750       99.998750     5.0      8565.403437            -1             -1     -1
1    8665.404062    8665.402813 -6000.664912  8665.404062  100.000000  8665.402813    0.000625    0.000625        0.000000     1.0      8565.403437         False           True   True
2    8765.403437    8765.402187 -6000.664912  8765.403437  100.000000  8765.402187    0.000625    0.000625       -0.000625     1.0      8565.403437         False          False   True
3    8765.429688    8765.403437 -6000.664912  8765.429688    0.026875  8765.403437    0.000625    0.025625      -99.974375     1.0      8765.429062         False          False   True
4    9066.944375    8965.395937 -6000.664912  9066.944375  301.540313  8965.395937  101.539687    0.008750        0.001250     1.0      8765.429062         False          False   True
5    9066.945625    8965.405312 -6000.664912  9066.945625    0.010000  8965.405312  101.539687    0.000625      -99.997500     1.0      8765.429062         False          False   True
6    9368.464687    9165.403437 -6000.664912  9368.464687  301.519687  9165.403437  203.060000    0.001250        0.001250     1.0      8765.429062         False          False   True
7    9368.473438    9165.412813 -6000.664912  9368.473438    0.010000  9165.412813  203.060000    0.000625      -99.990000     1.0      8765.429062         False          False   True
8    9670.013125    9265.403437 -6000.664912  9670.013125  301.540313  9265.403437  304.608437  100.001250        0.001250     1.0      8765.429062         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/800.[0m
[08/10 15:40:09]  --------------------------------------------------------------------------------
[08/10 15:40:09]  Iteration: 73 (0 solution, 72 counterexamples)
[08/10 15:40:20]  Generator returned sat in 8.409604 secs.
[08/10 15:40:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:21]  Improved number of small numbers from 104 to 113 out of a max of 113
[08/10 15:40:21]  Verifer returned sat in 0.307505 secs.
[08/10 15:40:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8663.689453    8563.689697 -6098.951172  8663.689453  300.925000  8563.689697   0.024902   99.974854       -0.025146     2.0      8563.689697            -1             -1     -1
1    8864.614746    8663.689697 -6098.951172  8864.614746  300.900146  8663.689697   0.024902  200.900146      100.900146     1.0      8864.589844         False          False   True
2    8964.589600    8763.689697 -6098.951172  8964.589600  300.875000  8763.689697   0.024902  200.875000      100.875000     2.0      8964.564697         False          False   True
3    9159.789795    8866.089600 -6098.951172  9159.789795  396.075195  8866.089600   0.024902  293.675293      196.075195     2.0      8964.564697         False          False   True
4    9263.689697    8964.589600 -6098.951172  9263.689697  397.575195  8964.589600   0.024902  299.075195      199.975098     2.0      8964.564697         False          False   True
5    9363.689697    9163.689697 -6098.951172  9363.689697  399.075195  9163.689697   0.024902  199.975098      199.975098     2.0      8964.564697         False          False   True
6    9564.289795    9263.689453 -6098.951172  9564.289795  400.575195  9263.689453   0.550049  300.050293      300.050049     2.0      8964.564697         False          False   True
7    9662.814697    9363.689453 -6098.951172  9662.814697  398.575195  9363.689453   0.550049  298.575195      298.574951     2.0      8964.564697         False          False   True
8    9764.314697    9363.714844 -6098.951172  9764.314697  400.075195  9363.714844   0.574951  400.024902      300.050049     3.0      8964.564697         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1229005/4096.[0m
[08/10 15:40:21]  --------------------------------------------------------------------------------
[08/10 15:40:21]  Iteration: 74 (0 solution, 73 counterexamples)
[08/10 15:40:43]  Generator returned sat in 19.058934 secs.
[08/10 15:40:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:43]  Improved gap from 0 to 100
[08/10 15:40:44]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/10 15:40:44]  Verifer returned sat in 0.766670 secs.
[08/10 15:40:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8864.364502    8764.264893 -6199.726318  8864.364502  100.300000  8764.264893    0.000000  100.099609       99.899658     3.0      8764.264893            -1             -1   False
1    8864.464844    8864.464600 -6199.726318  8864.464844  100.199951  8864.464600    0.000000    0.000244        0.000000     1.0      8864.464844         False          False   False
2    8964.564697    8964.464600 -6199.726318  8964.564697  100.100098  8964.464600    0.000000    0.100098        0.099854     1.0      8964.564697         False          False   False
3    9226.664795    9031.664551 -6199.726318  9226.664795  262.200195  9031.664551  162.000000   33.000244        0.199951     1.0      8964.564697         False          False   False
4    9326.764648    9164.464600 -6199.726318  9326.764648  133.100098  9164.464600  162.099854    0.200195        0.199951     1.0      8964.564697         False          False    True
5    9395.114502    9232.914795 -6199.726318  9395.114502   68.550049  9232.914795  162.099854    0.099854      -31.450195     1.0      8964.564697         False          False    True
6    9528.739746    9364.464600 -6199.726318  9528.739746  133.725098  9364.464600  164.074951    0.200195        0.199951     1.0      8964.564697         False          False    True
7    9597.402100    9431.664795 -6199.726318  9597.402100   68.862549  9431.664795  164.074951    1.662354      -31.137695     1.0      8964.564697         False          False    True
8    9728.839844    9464.464844 -6199.726318  9728.839844  133.100098  9464.464844  164.175049  100.199951        0.199951     1.0      8964.564697         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=819/4096.[0m
[08/10 15:40:44]  --------------------------------------------------------------------------------
[08/10 15:40:44]  Iteration: 75 (0 solution, 74 counterexamples)
[08/10 15:40:49]  Generator returned sat in 1.714396 secs.
[08/10 15:40:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:49]  Improved number of small numbers from 71 to 113 out of a max of 113
[08/10 15:40:49]  Verifer returned sat in 0.416285 secs.
[08/10 15:40:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8864.464844    8764.264648 -6199.726562  8864.464844  100.399902  8764.264648    0.000000  100.200195       99.949707     2.0      8764.264648            -1             -1   False
1    8864.564697    8864.515137 -6199.726562  8864.564697  100.300049  8864.515137    0.000000    0.049561        0.049561     1.0      8864.564697         False          False   False
2    8964.564697    8962.464600 -6199.726562  8964.564697  100.049561  8962.464600    0.000000    2.100098        0.049561     1.0      8964.564697         False          False   False
3    9226.664795    9031.564941 -6199.726562  9226.664795  264.200195  9031.564941  162.049805   33.050049        0.099854     1.0      8964.564697         False          False   False
4    9326.714844    9164.464355 -6199.726562  9326.714844  133.100098  9164.464355  162.099854    0.150635        0.099854     1.0      8964.564697         False          False    True
5    9394.114258    9231.964600 -6199.726318  9394.114258   67.550049  9231.964600  162.099854    0.049805      -32.500488     1.0      8964.564697         False          False    True
6    9528.314453    9364.514893 -6199.726318  9528.314453  134.250000  9364.514893  163.699707    0.099854        0.099854     1.0      8964.564697         False          False    True
7    9596.339600    9431.664551 -6199.726318  9596.339600   68.125000  9431.664551  163.699707    0.975342      -31.875000     1.0      8964.564697         False          False    True
8    9728.464355    9464.515137 -6199.726318  9728.464355  133.100098  9464.515137  163.849609  100.099609        0.099854     1.0      8964.564697         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=409/4096.[0m
[08/10 15:40:50]  --------------------------------------------------------------------------------
[08/10 15:40:50]  Iteration: 76 (0 solution, 75 counterexamples)
[08/10 15:40:54]  Generator returned sat in 1.786242 secs.
[08/10 15:40:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:55]  Improved gap from 263581/8192 to 100
[08/10 15:40:56]  Improved number of small numbers from 61 to 65 out of a max of 114
[08/10 15:40:56]  Verifer returned sat in 1.490608 secs.
[08/10 15:40:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8729.047852    8629.148031 -6018.709456  8729.047852  141.950000  8629.148031   0.000000   99.899821       99.899821     7.0      8629.148031            -1             -1   False
1    8771.048031    8729.098031 -6018.709456  8771.048031  141.900000  8729.098031   0.050000   41.900000       41.850000     1.0      8770.998031         False          False   False
2    8870.998031    8729.148031 -6018.709456  8870.998031  141.850000  8729.148031   0.050000  141.800000       41.800000     2.0      8870.948031         False          False    True
3    9020.131364    8924.081364 -6018.709456  9020.131364  290.933333  8924.081364  49.133333   46.916667       41.850000     1.0      8870.948031         False          False    True
4    9120.181364    9029.148031 -6018.709456  9120.181364  146.966667  9029.148031  49.183333   41.850000       41.850000     1.0      8870.948031         False          False    True
5    9153.314697    9104.081364 -6018.709456  9153.314697   74.983333  9104.081364  49.183333    0.050000      -25.016667     1.0      8870.948031         False          False    True
6    9340.231364    9229.148031 -6018.709456  9340.231364  186.966667  9229.148031  69.233333   41.850000       41.850000     1.0      8870.948031         False          False    True
7    9393.364697    9324.081364 -6018.709456  9393.364697   94.983333  9324.081364  69.233333    0.050000       -5.016667     1.0      8870.948031         False          False    True
8    9540.281364    9329.148193 -6018.709456  9540.281364  146.966667  9329.148193  69.283333  141.849837       41.850000     1.0      8870.948031         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=837/20.[0m
[08/10 15:40:57]  --------------------------------------------------------------------------------
[08/10 15:40:57]  Iteration: 77 (0 solution, 76 counterexamples)
[08/10 15:41:23]  Generator returned sat in 23.321018 secs.
[08/10 15:41:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:24]  Improved gap from 1/600 to 100
[08/10 15:41:25]  Improved number of small numbers from 57 to 61 out of a max of 114
[08/10 15:41:25]  Verifer returned sat in 1.928243 secs.
[08/10 15:41:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8120.183864    7920.183239 -5409.744665  8120.183864  199.999756  7920.183239   0.000625  200.000000        100.0000     7.0      7920.183239            -1             -1     -1
1    8120.183864    8120.182614 -5409.744665  8120.183864  199.999268  8120.182614   0.000625    0.000625          0.0000     6.0      8120.183239         False           True   True
2    8320.181989    8120.183239 -5409.744665  8320.181989  199.998750  8120.183239   0.001250  199.997500         99.9975     3.0      8320.180739         False           True  False
3    8320.181989    8320.180114 -5409.744665  8320.181989    0.000625  8320.180114   0.001250    0.000625         -0.0025     2.0      8320.180739         False          False   True
4    8520.680114    8320.192614 -5409.744665  8520.680114  200.498750  8320.192614   0.499375  199.988125         99.9975     1.0      8320.180739         False          False   True
5    8520.680114    8519.845322 -5409.744665  8520.680114    0.010000  8519.845322   0.499375    0.335417         -0.0025     2.0      8320.180739         False          False   True
6    8720.680739    8620.183105 -5409.744665  8720.680739  200.336042  8620.183105   0.500000   99.997633         99.9975     1.0      8320.180739         False          False   True
7    8720.680739    8720.180114 -5409.744665  8720.680739    0.010000  8720.180114   0.500000    0.000625         -0.0025     2.0      8320.180739         False          False   True
8    8921.178864    8720.183350 -5409.744665  8921.178864  200.498750  8720.183350   0.998125  199.997389         99.9975     1.0      8320.180739         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=39999/400.[0m
[08/10 15:41:25]  --------------------------------------------------------------------------------
[08/10 15:41:25]  Iteration: 78 (0 solution, 77 counterexamples)
[08/10 15:41:56]  Generator returned sat in 28.561439 secs.
[08/10 15:41:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:58]  Improved gap from 1/20 to 100
[08/10 15:41:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:41:58]  Verifer returned sat in 1.301372 secs.
[08/10 15:41:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8336.553955    8236.579102 -5409.744873  8336.553955   99.975098  8236.579102   0.000000   99.974854       99.974854     6.0      8236.579102            -1             -1   False
1    8336.553955    8336.529297 -5409.744873  8336.553955   99.950195  8336.529297   0.000000    0.024658       -0.025146     6.0      8336.553955         False          False   False
2    8336.604248    8336.579102 -5409.744873  8336.604248    0.074951  8336.579102   0.000000    0.025146      -99.974854     1.0      8336.604248         False          False   False
3    8623.545898    8530.545654 -5409.744873  8623.545898  286.966797  8530.545654  48.041748   44.958496       38.925049     1.0      8336.604248         False          False   False
4    8723.570801    8636.578857 -5409.744873  8723.570801  144.983398  8636.578857  48.066650   38.925293       38.925049     1.0      8336.604248         False          False    True
5    8758.637207    8710.545898 -5409.744873  8758.637207   73.991699  8710.545898  48.066650    0.024658      -26.008545     1.0      8336.604248         False          False    True
6    8943.595947    8836.579102 -5409.744873  8943.595947  184.983398  8836.579102  68.091797   38.925049       38.925049     1.0      8336.604248         False          False    True
7    8998.662598    8930.545654 -5409.744873  8998.662598   93.991699  8930.545654  68.091797    0.025146       -6.008301     1.0      8336.604248         False          False    True
8    9143.620850    8936.579102 -5409.744873  9143.620850  144.983398  8936.579102  68.116699  138.925049       38.925049     1.0      8336.604248         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=159437/4096.[0m
[08/10 15:41:59]  --------------------------------------------------------------------------------
[08/10 15:41:59]  Iteration: 79 (0 solution, 78 counterexamples)
[08/10 15:42:44]  Generator returned sat in 43.048086 secs.
[08/10 15:42:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:45]  Improved gap from 1/2000 to 100
[08/10 15:42:45]  Improved number of small numbers from 96 to 114 out of a max of 114
[08/10 15:42:45]  Verifer returned sat in 0.539708 secs.
[08/10 15:42:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8333.378906    8136.579102 -5409.744873  8333.378906    0.100098  8136.579102   0.000000  196.799805       96.799805     3.0      8136.579102            -1             -1   False
1    8336.578857    8333.479004 -5409.744873  8336.578857  199.999756  8333.479004   0.000000    3.099854       -0.000244     1.0      8136.579102         False          False   False
2    8533.479004    8336.679199 -5409.744873  8533.479004  200.000000  8336.679199   0.000000  196.799805       96.899902     1.0      8136.579102         False          False   False
3    8536.579102    8436.579102 -5409.744873  8536.579102  199.899902  8436.579102   0.000000  100.000000        0.000000     2.0      8536.579102         False          False   False
4    8736.079102    8635.279053 -5409.744873  8736.079102  299.500000  8635.279053   0.000000  100.800049       99.500000     1.0      8536.579102         False          False   False
5    8936.579102    8736.579102 -5409.744873  8936.579102  301.300049  8736.579102   0.099854  199.900146      199.900146     1.0      8536.579102         False          False   False
6    9037.479004    8836.479248 -5409.744873  9037.479004  300.800049  8836.479248   0.999756  200.000000      199.900146     2.0      8536.579102         False          False    True
7    9137.779053    8836.579102 -5409.744873  9137.779053  300.300049  8836.579102   1.299805  299.900146      199.900146     3.0      8536.579102         False          False    True
8    9137.779053    9036.578857 -5409.744873  9137.779053  299.800049  9036.578857   1.299805   99.900391       99.900146     2.0      8536.579102         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=818791/4096.[0m
[08/10 15:42:46]  --------------------------------------------------------------------------------
[08/10 15:42:46]  Iteration: 80 (0 solution, 79 counterexamples)
[08/10 15:42:50]  Generator returned sat in 2.081095 secs.
[08/10 15:42:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:51]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:42:51]  Verifer returned sat in 0.178631 secs.
[08/10 15:42:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8332.929199    8136.579102 -5409.744873  8332.929199    0.100098  8136.579102   0.000000  196.350098       96.350098     4.0      8136.579102            -1             -1   False
1    8336.578857    8332.979004 -5409.744873  8336.578857  199.999756  8332.979004   0.000000    3.599854       -0.000244     1.0      8136.579102         False          False   False
2    8533.479004    8336.679199 -5409.744873  8533.479004  200.500000  8336.679199   0.000000  196.799805       96.899902     1.0      8136.579102         False          False   False
3    8536.579102    8436.829102 -5409.744873  8536.579102  199.899902  8436.829102   0.000000   99.750000        0.000000     2.0      8536.579102         False          False   False
4    8736.079102    8635.279053 -5409.744873  8736.079102  299.250000  8635.279053   0.000000  100.800049       99.500000     1.0      8536.579102         False          False   False
5    8936.579102    8736.579102 -5409.744873  8936.579102  301.300049  8736.579102   0.099854  199.900146      199.900146     1.0      8536.579102         False          False   False
6    9037.479004    8836.479248 -5409.744873  9037.479004  300.800049  8836.479248   0.999756  200.000000      199.900146     2.0      8536.579102         False          False    True
7    9137.779053    8836.579102 -5409.744873  9137.779053  300.300049  8836.579102   1.299805  299.900146      199.900146     3.0      8536.579102         False          False    True
8    9137.779053    9036.578857 -5409.744873  9137.779053  299.800049  9036.578857   1.299805   99.900391       99.900146     2.0      8536.579102         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=818791/4096.[0m
[08/10 15:42:51]  --------------------------------------------------------------------------------
[08/10 15:42:51]  Iteration: 81 (0 solution, 80 counterexamples)
[08/10 15:42:57]  Generator returned sat in 2.517089 secs.
[08/10 15:42:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:57]  Improved number of small numbers from 109 to 113 out of a max of 113
[08/10 15:42:57]  Verifer returned sat in 0.166595 secs.
[08/10 15:42:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8332.928955    8136.579102 -5409.745361  8332.928955    0.099854  8136.579102   0.000000  196.349854       96.349854     3.0      8136.579102            -1             -1   False
1    8336.578369    8332.978760 -5409.745361  8336.578369  199.999268  8332.978760   0.000000    3.599609       -0.000732     1.0      8136.579102         False          False   False
2    8533.478516    8336.678955 -5409.745361  8533.478516  200.499756  8336.678955   0.000000  196.799561       96.899414     1.0      8136.579102         False          False   False
3    8536.578857    8437.029053 -5409.745361  8536.578857  199.899902  8437.029053   0.000000   99.549805       -0.000244     2.0      8536.578857         False          False   False
4    8735.979004    8635.278809 -5409.745361  8735.979004  298.949951  8635.278809   0.000000  100.700195       99.399902     1.0      8536.578857         False          False   False
5    8936.078857    8736.578613 -5409.745361  8936.078857  300.800049  8736.578613   0.099854  199.400391      199.399902     1.0      8536.578857         False          False   False
6    9036.978516    8836.479004 -5409.745361  9036.978516  300.300049  8836.479004   0.999512  199.500000      199.399902     2.0      8536.578857         False          False    True
7    9137.278564    8836.579102 -5409.745361  9137.278564  299.800049  8836.579102   1.299561  299.399902      199.399902     3.0      8536.578857         False          False    True
8    9137.278564    9036.578369 -5409.745361  9137.278564  299.300049  9036.578369   1.299561   99.400635       99.399902     2.0      8536.578857         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=408371/2048.[0m
[08/10 15:42:58]  --------------------------------------------------------------------------------
[08/10 15:42:58]  Iteration: 82 (0 solution, 81 counterexamples)
[08/10 15:43:31]  Generator returned sat in 30.500044 secs.
[08/10 15:43:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:43:32]  Improved number of small numbers from 51 to 113 out of a max of 113
[08/10 15:43:32]  Verifer returned sat in 0.586131 secs.
[08/10 15:43:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8202.863770    8198.838867 -5409.745361  8202.863770     0.099609  8198.838867        0.0    4.024902       -0.024902     2.0      8198.838867            -1             -1    True
1    8402.863770    8202.888672 -5409.745361  8402.863770   204.024902  8202.888672        0.0  199.975098       99.975098     1.0      8198.838867         False          False    True
2    8602.863770    8402.888428 -5409.745361  8602.863770   399.975098  8402.888428        0.0  199.975342      199.975098     1.0      8198.838867         False          False    True
3    8602.863770    8468.863770 -5409.745361  8602.863770     0.024902  8468.863770        0.0  134.000000       99.975098     2.0      8602.863770         False          False    True
4    8602.913574    8602.888672 -5409.745361  8602.913574   134.049805  8602.888672        0.0    0.024902        0.024902     1.0      8602.863770         False          False    True
5    9002.963379    8602.938721 -5409.745361  9002.963379   400.074707  8602.938721        0.0  400.024658      300.074707     1.0      8602.863770         False          False    True
6    9302.075928    8702.888672 -5409.745361  9302.075928   699.137207  8702.888672        0.0  599.187256      499.187256     2.0      8602.863770         False          False    True
7    9867.606934    8902.888672 -5409.745361  9867.606934  1164.718262  8902.888672        0.0  964.718262      964.718262     3.0      8602.863770         False          False    True
8    9867.606934    9002.888428 -5409.745361  9867.606934   151.000000  9002.888428        0.0  864.718506      864.718262     4.0      9867.606934          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3951589/4096.[0m
[08/10 15:43:32]  --------------------------------------------------------------------------------
[08/10 15:43:32]  Iteration: 83 (0 solution, 82 counterexamples)
[08/10 15:44:05]  Generator returned sat in 30.103962 secs.
[08/10 15:44:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:44:06]  Improved gap from 1/20 to 100
[08/10 15:44:07]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 15:44:07]  Verifer returned sat in 1.271306 secs.
[08/10 15:44:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7955.298584    7955.248672 -5409.745361  7955.298584      0.05  7955.248672        0.0    0.049912        0.049912     1.0      7955.248672            -1             -1    True
1    8155.098672    7955.348672 -5409.745361  8155.098672    199.85  7955.348672        0.0  199.750000       99.850000     1.0      7955.248672         False          False    True
2    8155.198672    8155.148672 -5409.745361  8155.198672    199.85  8155.148672        0.0    0.050000       -0.050000     1.0      7955.248672         False          False    True
3    8155.298672    8155.248672 -5409.745361  8155.298672      0.15  8155.248672        0.0    0.050000      -99.950000     1.0      8155.298672         False          False    True
4    8354.398672    8351.698672 -5409.745361  8354.398672    199.15  8351.698672        0.0    2.700000       -0.850000     1.0      8155.298672         False          False    True
5    8946.198672    8355.248672 -5409.745361  8946.198672    594.50  8355.248672        0.0  590.950000      490.950000     1.0      8155.298672         False          False    True
6    9148.848672    8455.248779 -5409.745361  9148.848672    793.60  8455.248779        0.0  693.599893      593.600000     2.0      8155.298672         False          False    True
7    9148.848672    8655.248535 -5409.745361  9148.848672    397.30  8655.248535        0.0  493.600137      493.600000     3.0      9148.848672          True           True   False
8    9148.848672    8755.248535 -5409.745361  9148.848672    199.15  8755.248535        0.0  393.600137      393.600000     4.0      9148.848672         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2431591/4096.[0m
[08/10 15:44:07]  --------------------------------------------------------------------------------
[08/10 15:44:07]  Iteration: 84 (0 solution, 83 counterexamples)
[08/10 15:44:14]  Generator returned sat in 4.019996 secs.
[08/10 15:44:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:44:16]  Improved gap from 0 to 95.3125
[08/10 15:44:17]  Improved number of small numbers from 74 to 76 out of a max of 114
[08/10 15:44:17]  Verifer returned sat in 2.310855 secs.
[08/10 15:44:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8466.935059    8466.933672 -5921.432861  8466.935059   95.316162  8466.933672    0.00000    0.001387       -0.001113     1.0      8466.933672            -1             -1    True
1    8562.248672    8466.936172 -5916.745361  8562.248672   95.315000  8466.936172    0.00000   95.312500        0.000000     1.0      8562.248672         False          False    True
2    8657.546172    8657.544922 -5916.745361  8657.546172  190.610000  8657.544922    0.00000    0.001250       -4.702500     1.0      8562.248672         False          False    True
3    8662.248672    8662.248672 -5914.022861  8662.248672    4.703750  8662.248672    0.00000    0.000000      -97.277500     1.0      8662.248672         False          False    True
4    8860.267422    8859.526172 -5914.022861  8860.267422  198.018750  8859.526172    0.73375    0.007500        0.007500     1.0      8662.248672         False          False    True
5    8860.269922    8859.534922 -5914.022861  8860.269922    0.010000  8859.534922    0.73375    0.001250      -99.990000     1.0      8662.248672         False          False    True
6    9060.268672    9059.526172 -5914.022861  9060.268672  200.000000  9059.526172    0.73500    0.007500        0.007500     1.0      8662.248672         False          False    True
7    9060.271172    9059.534922 -5912.041611  9060.271172    0.010000  9059.534922    0.73500    0.001250      -98.008750     1.0      8662.248672         False          False    True
8    9258.288672    9157.544922 -5912.041611  9258.288672  198.018750  9157.544922    0.73625  100.007500        0.007500     1.0      8662.248672         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/400.[0m
[08/10 15:44:17]  --------------------------------------------------------------------------------
[08/10 15:44:17]  Iteration: 85 (0 solution, 84 counterexamples)
[08/10 15:44:53]  Generator returned sat in 33.041744 secs.
[08/10 15:44:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:44:54]  Improved gap from 3/10 to 48.4375
[08/10 15:44:54]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 15:44:54]  Verifer returned sat in 1.283089 secs.
[08/10 15:44:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6917.267334    6817.367432 -4271.864258  6917.267334  100.099854  6817.367432   0.000000   99.899902       99.899902     1.0      6817.367432            -1             -1   False
1    6917.367432    6917.367432 -4271.864258  6917.367432  100.000000  6917.367432   0.000000    0.000000        0.000000     1.0      6917.367432         False          False   False
2    7017.367432    6917.367432 -4271.864258  7017.367432  100.000000  6917.367432   0.000000  100.000000        0.000000     1.0      6917.367432         False          False   False
3    7120.067627    7114.817383 -4271.864258  7120.067627  202.700195  7114.817383   2.500000    2.750244        0.200195     1.0      6917.367432         False          False   False
4    7220.167480    7213.080078 -4271.864258  7220.167480  102.850098  7213.080078   2.599854    4.487549        0.200195     1.0      6917.367432         False          False    True
5    7268.604980    7217.667480 -4220.601807  7268.604980   52.925049  7217.667480   2.599854   48.337646       -0.099854     1.0      6917.367432         False          False    True
6    7273.192383    7266.104980 -4169.039307  7273.192383   52.925049  7266.104980   2.599854    4.487549      -43.949951     1.0      6917.367432         False          False    True
7    7321.629883    7314.542480 -4117.476807  7321.629883   52.925049  7314.542480   2.599854    4.487549      -43.949951     1.0      6917.367432         False          False    True
8    7370.067383    7362.979980 -4065.914307  7370.067383   52.925049  7362.979980   2.599854    4.487549      -43.949951     1.0      6917.367432         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=205/1024.[0m
[08/10 15:44:55]  --------------------------------------------------------------------------------
[08/10 15:44:55]  Iteration: 86 (0 solution, 85 counterexamples)
[08/10 15:45:01]  Generator returned sat in 3.287744 secs.
[08/10 15:45:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:45:02]  Improved gap from 1/1200 to 23.4375
[08/10 15:45:02]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 15:45:02]  Verifer returned sat in 1.037127 secs.
[08/10 15:45:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6777.342773    6777.142578 -4271.864258  6777.342773    0.299805  6777.142578     0.100098   0.100098       -0.100098     6.0      6777.142578            -1             -1     -1
1    6777.542480    6777.342773 -4271.864258  6777.542480    0.299805  6777.342773     0.100098   0.099609      -99.900391     1.0      6777.142578         False           True   True
2    7383.567627    6977.342773 -4271.864258  7383.567627  606.124756  6977.342773   382.887451  23.337402       23.337402     1.0      6777.142578         False          False   True
3    8113.230225    7077.342773 -4271.864258  8113.230225  753.000000  7077.342773  1012.550049  23.337402       23.337402     1.0      6777.142578         False          False   True
4    8467.892822    7174.317383 -4271.864258  8467.892822  378.000000  7174.317383  1267.212646  26.362793       23.337402     1.0      6777.142578         False          False   True
5    8632.030029    7203.929932 -4271.864258  8632.030029  190.500000  7203.929932  1331.349854  96.750244       23.337402     1.0      6777.142578         False          False   True
6    8632.030029    7277.342773 -4195.301758  8632.030029   96.750000  7277.342773  1331.349854  23.337402       -0.100098     2.0      6777.142578         False          False   True
7    8655.567627    7300.780273 -4118.739258  8655.567627   46.875000  7300.780273  1331.349854  23.437500        0.000000     1.0      7324.217773          True           True  False
8    8655.567627    7324.217773 -4118.739258  8655.567627   21.937500  7324.217773  1331.349854   0.000000     -100.000000     2.0      7324.217773         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=47795/2048.[0m
[08/10 15:45:03]  --------------------------------------------------------------------------------
[08/10 15:45:03]  Iteration: 87 (0 solution, 86 counterexamples)
[08/10 15:45:21]  Generator returned sat in 15.008545 secs.
[08/10 15:45:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:45:21]  Improved gap from 375/16 to 23.4375
[08/10 15:45:23]  Improved number of small numbers from 62 to 68 out of a max of 114
[08/10 15:45:23]  Verifer returned sat in 1.726067 secs.
[08/10 15:45:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5485.586670    5381.536842 -4281.872591  5485.586670     0.050  5381.536842       0.05  103.999827      103.999827     2.0      5381.536842            -1             -1     -1
1    5486.986842    5480.186842 -4281.872591  5486.986842   105.400  5480.186842       1.45    5.350000        4.000000     2.0      5381.536842         False          False   True
2    5587.036842    5581.536842 -4281.872591  5587.036842   105.400  5581.536842       1.50    4.000000        4.000000     1.0      5381.536842         False          False   True
3    5688.436842    5680.686842 -4281.872591  5688.436842   105.400  5680.686842       2.90    4.850000        4.000000     1.0      5381.536842         False          False   True
4    5788.486842    5781.536842 -4281.872591  5788.486842   104.900  5781.536842       2.95    4.000000        4.000000     1.0      5381.536842         False          False   True
5    5888.886842    5781.586914 -4281.872591  5888.886842   104.400  5781.586914       3.35  103.949928        4.000000     2.0      5381.536842         False          False   True
6    5888.886842    5881.536842 -4208.385010  5888.886842   103.900  5881.536842       3.35    4.000000      -22.512419     2.0      5381.536842         False          False   True
7    5934.836842    5908.049316 -4131.822591  5934.836842    49.950  5908.049316       3.35   23.437526        0.000000     1.0      5381.536842         False          False   True
8    5934.836842    5931.486842 -4131.822510  5934.836842    22.975  5931.486842       3.35    0.000000      -99.999919     2.0      5381.536842         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=4.[0m
[08/10 15:45:23]  --------------------------------------------------------------------------------
[08/10 15:45:23]  Iteration: 88 (0 solution, 87 counterexamples)
[08/10 15:46:01]  Generator returned sat in 35.294303 secs.
[08/10 15:46:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:03]  Improved gap from 0 to 35.9375
[08/10 15:46:04]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 15:46:04]  Verifer returned sat in 2.431323 secs.
[08/10 15:46:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4530.368092    4419.155592 -3330.703613  4530.368092  111.162354  4419.155592       0.05  111.162500       99.950228     5.0      4419.155592            -1             -1     -1
1    4530.368092    4527.068092 -3330.703613  4530.368092  111.112549  4527.068092       0.05    3.250000       -0.049772     6.0      4530.318092         False          False   True
2    4530.468092    4530.368092 -3266.641341  4530.468092    3.350000  4530.368092       0.05    0.050000      -35.887500     1.0      4530.418092         False           True  False
3    4602.243092    4566.305592 -3202.578841  4602.243092   71.825000  4566.305592       0.05   35.887500       -0.050000     1.0      4530.418092         False          False  False
4    4641.430592    4602.243092 -3141.716341  4641.430592   75.075000  4602.243092       0.05   39.137500        0.000000     1.0      4530.418092         False          False  False
5    4641.430592    4641.380592 -3077.653841  4641.430592   39.087500  4641.380592       0.05    0.000000      -35.937500     2.0      4530.418092         False          False  False
6    4698.436842    4677.318092 -3013.591341  4698.436842   57.006250  4677.318092       0.05   21.068750      -14.868750     1.0      4530.418092         False          False  False
7    4734.374342    4713.255592 -2949.529053  4734.374342   57.006250  4713.255592       0.05   21.068750      -14.868962     1.0      4530.418092         False          False  False
8    4770.311842    4752.193115 -2949.529053  4770.311842   57.006250  4752.193115       0.05   18.068727      -78.931462     1.0      4530.418092         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/2048.[0m
[08/10 15:46:05]  --------------------------------------------------------------------------------
[08/10 15:46:05]  Iteration: 89 (0 solution, 88 counterexamples)
[08/10 15:46:13]  Generator returned sat in 5.176095 secs.
[08/10 15:46:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:15]  Improved gap from 0 to 100
[08/10 15:46:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:46:15]  Verifer returned sat in 2.307079 secs.
[08/10 15:46:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4760.873535    4260.896729 -3261.232422  4760.873535  499.999756  4260.896729   0.022949  499.953857      399.954102     4.0      4260.896729            -1             -1     -1
1    4760.896729    4360.987549 -3261.232422  4760.896729  499.977051  4360.987549   0.022949  399.886230      299.977295     5.0      4760.873779         False          False   True
2    4860.964844    4461.021484 -3261.232422  4860.964844  499.954346  4461.021484   0.045654  399.897705      300.022705     5.0      4860.919189         False           True  False
3    4940.885254    4566.305664 -3261.232422  4940.885254  479.818115  4566.305664   0.045654  374.533936      279.943115     5.0      4940.839600         False           True   True
4    4960.964844    4760.896484 -3261.232422  4960.964844  394.613525  4760.896484   0.045654  200.022705      200.022705     3.0      4940.839600         False           True  False
5    5160.203369    4860.896484 -3261.232422  5160.203369  399.261230  4860.896484   0.045654  299.261230      299.261230     4.0      4940.839600         False          False  False
6    5262.510254    4960.873779 -3261.232422  5262.510254  401.568115  4960.873779   1.591064  300.045410      300.022705     3.0      4940.839600         False          False  False
7    5362.532959    4960.896729 -3261.232422  5362.532959  400.068115  4960.896729   1.613770  400.022461      300.022705     4.0      4940.839600         False          False   True
8    5362.532959    5160.896484 -3261.232422  5362.532959  398.568115  5160.896484   1.613770  200.022705      200.022705     3.0      4940.839600         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1228893/4096.[0m
[08/10 15:46:16]  --------------------------------------------------------------------------------
[08/10 15:46:16]  Iteration: 90 (0 solution, 89 counterexamples)
[08/10 15:46:57]  Generator returned sat in 37.680622 secs.
[08/10 15:46:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:58]  Improved gap from 47/8192 to 100
[08/10 15:46:59]  Improved number of small numbers from 76 to 80 out of a max of 114
[08/10 15:46:59]  Verifer returned sat in 1.708146 secs.
[08/10 15:46:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5236.885254    5136.910254 -3261.232422  5236.885254    0.025146  5136.910254     0.0000   99.975000          99.975     9.0      5136.910254            -1             -1     -1
1    5336.960254    5236.910254 -3261.232422  5336.960254  200.050000  5236.910254     0.0250  100.025000         100.025     1.0      5136.910254         False           True  False
2    5436.985254    5236.910254 -3261.232422  5436.985254  200.050000  5236.910254     0.0500  200.025000         100.025     1.0      5136.910254         False          False   True
3    5436.985254    5436.910254 -3261.232422  5436.985254  100.100000  5436.910254     0.0500    0.025000           0.025     2.0      5436.935254         False          False   True
4    5637.010254    5436.935254 -3261.232422  5637.010254  200.050000  5436.935254     0.0750  200.000000         100.025     3.0      5436.935254         False           True  False
5    5637.010254    5636.910254 -3261.232422  5637.010254    2.000000  5636.910254     0.0750    0.025000           0.025     2.0      5436.935254         False           True   True
6    5837.985254    5636.960449 -3261.232422  5837.985254  201.000000  5636.960449     1.0500  199.974805         100.025     1.0      5836.935254          True           True  False
7    5837.985254    5836.910254 -3261.232422  5837.985254    2.000000  5836.910254     1.0500    0.025000           0.025     2.0      5836.935254         False          False   True
8    6038.947754    5836.960449 -3261.232422  6038.947754  200.987500  5836.960449     2.0125  199.974805         100.025     1.0      5836.935254         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=4001/40.[0m
[08/10 15:46:59]  --------------------------------------------------------------------------------
[08/10 15:46:59]  Iteration: 91 (0 solution, 90 counterexamples)
[08/10 15:47:31]  Generator returned sat in 28.928640 secs.
[08/10 15:47:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:47:32]  Improved gap from 185447/4096 to 100
[08/10 15:47:33]  Improved number of small numbers from 49 to 56 out of a max of 114
[08/10 15:47:33]  Verifer returned sat in 1.953118 secs.
[08/10 15:47:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5137.972900    5137.966394 -3261.232422  5137.972900    0.025146  5137.966394    0.000000    0.006506        0.006506     8.0      5137.966394            -1             -1     -1
1    5213.326969    5196.295536 -3261.232422  5213.326969   75.360575  5196.295536    0.000000   17.031433      -24.639425     1.0      5137.966394         False           True  False
2    5271.649825    5271.643538 -3261.232422  5271.649825   75.354289  5271.643538    0.000000    0.006287      -66.316569     1.0      5271.649825         False          False  False
3    5337.972681    5337.966394 -3261.232422  5337.972681   66.329142  5337.966394    0.000000    0.006287      -99.993713     1.0      5337.972681         False          False  False
4    5537.960107    5491.732297 -3261.232422  5537.960107  199.993713  5491.732297    0.000000   46.227810       -0.006287     1.0      5337.972681         False          False  False
5    5939.941248    5537.966394 -3261.232422  5939.941248  448.208950  5537.966394    0.000000  401.974854      301.974854     1.0      5337.972681         False          False  False
6    6343.941248    5737.966394 -3261.232422  6343.941248  805.974854  5737.966394  303.993713  301.981140      301.981140     2.0      5337.972681         False          False  False
7    6443.947534    5837.966309 -3261.232422  6443.947534  401.987427  5837.966309  304.000000  301.981226      301.981140     3.0      5337.972681         False          False   True
8    6443.947534    5837.966553 -3261.232422  6443.947534  199.993713  5837.966553  304.000000  301.980981      201.981140     4.0      5337.972681         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=4947659/16384.[0m
[08/10 15:47:34]  --------------------------------------------------------------------------------
[08/10 15:47:34]  Iteration: 92 (0 solution, 91 counterexamples)
[08/10 15:48:09]  Generator returned sat in 31.427347 secs.
[08/10 15:48:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:11]  Improved gap from 0 to 23.4375
[08/10 15:48:11]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:48:11]  Verifer returned sat in 1.730071 secs.
[08/10 15:48:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5624.764648    5601.322266 -3337.792480  5624.764648    0.002441  5601.322266   0.002441   23.439941       23.439941     4.0      5601.322266            -1             -1     -1
1    5624.764648    5601.324707 -3261.232422  5624.764648    0.002686  5601.324707   0.002441   23.437500        0.000000     5.0      5601.322266         False          False   True
2    5648.204590    5624.764648 -3184.672363  5648.204590   46.877441  5624.764648   0.002441   23.437500        0.000000     1.0      5601.322266          True           True  False
3    6068.642090    5748.202148 -3184.672363  6068.642090  443.875000  5748.202148  97.002441  223.437500      223.437500     1.0      5601.322266         False          False  False
4    6068.642090    5848.202148 -3184.672363  6068.642090  223.437500  5848.202148  97.002441  123.437500      123.437500     2.0      5601.322266         False          False   True
5    6068.642090    5948.199707 -3184.672363  6068.642090    0.010000  5948.199707  97.002441   23.439941       23.437500     3.0      5601.322266         False          False   True
6    6068.642090    5948.202148 -3108.109863  6068.642090    0.010000  5948.202148  97.002441   23.437500        0.000000     4.0      5601.322266         False          False   True
7    6068.642090    5971.639648 -3031.547607  6068.642090    0.010000  5971.639648  97.002441    0.000000      -23.437744     5.0      5601.322266         False          False   True
8    6190.579590    5995.077393 -3031.547607  6190.579590  121.937500  5995.077393  97.002441   98.499756       -1.500244     1.0      6093.577148          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 15:48:11]  --------------------------------------------------------------------------------
[08/10 15:48:11]  Iteration: 93 (0 solution, 92 counterexamples)
[08/10 15:48:33]  Generator returned sat in 18.375179 secs.
[08/10 15:48:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:34]  Improved number of small numbers from 68 to 70 out of a max of 113
[08/10 15:48:34]  Verifer returned sat in 0.911965 secs.
[08/10 15:48:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5624.764404    5424.864648 -2961.324863   5624.764404     0.100098  5424.864648     0.000000   199.899756      199.899756     2.0      5424.864648            -1             -1    True
1    5624.764404    5524.864648 -2961.324863   5624.764404     0.100098  5524.864648     0.000000    99.899756       99.899756     2.0      5424.864648         False          False    True
2    5874.664648    5624.864648 -2961.324863   5874.664648   349.800000  5624.864648     0.000000   249.800000      249.800000     1.0      5424.864648         False          False    True
3    5874.664648    5724.864648 -2961.324863   5874.664648     0.100000  5724.864648     0.000000   149.800000      149.800000     2.0      5874.664648         False          False    True
4    5874.664648    5724.864648 -2961.324863   5874.664648   149.700000  5724.864648     0.000000   149.800000       49.800000     2.0      5874.664648         False          False    True
5    6123.764648    5874.764648 -2961.324863   6123.764648   398.900000  5874.764648     0.000000   249.000000      198.900000     1.0      5874.664648         False          False    True
6    6797.014648    5980.864648 -2961.324863   6797.014648   922.250000  5980.864648     0.000000   816.150000      772.150000     2.0      5874.664648         False          False    True
7    7952.864648    6124.864648 -2961.324863   7952.864648  1972.000000  6124.864648     0.000000  1828.000000     1828.000000     2.0      5874.664648         False          False    True
8   10268.364648    6224.864502 -2961.324863  10268.364648  4143.500000  6224.864502  2215.399902  1828.100244     1828.100098     3.0      5874.664648         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3743949/2048.[0m
[08/10 15:48:35]  --------------------------------------------------------------------------------
[08/10 15:48:35]  Iteration: 94 (0 solution, 93 counterexamples)
[08/10 15:48:57]  Generator returned sat in 19.111280 secs.
[08/10 15:48:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:57]  Improved gap from 1/800 to 100
[08/10 15:48:59]  Improved number of small numbers from 49 to 55 out of a max of 114
[08/10 15:48:59]  Verifer returned sat in 1.435825 secs.
[08/10 15:48:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3979.683838    3979.682680 -1516.145395  3979.683838   100.003906  3979.682680    0.000000    0.001158       -0.001342     1.0       3979.68268            -1             -1    True
1    4079.685180    3979.685180 -1516.145395  4079.685180   100.002500  3979.685180    0.000000  100.000000        0.000000     1.0       4079.68518         False          False    True
2    4179.687680    4179.685180 -1516.145395  4179.687680   200.002500  4179.685180    0.000000    0.002500        0.002500     1.0       4079.68518         False          False    True
3    4179.687680    4179.685180 -1516.145395  4179.687680     0.001250  4179.685180    0.000000    0.002500      -99.997500     1.0       4179.68768         False          False    True
4    4377.689555    4284.685180 -1516.145395  4377.689555   198.004375  4284.685180    0.000000   93.004375       -1.995625     1.0       4179.68768         False          False    True
5    4884.691742    4379.685180 -1516.145395  4884.691742   600.006562  4379.685180    0.000000  505.006562      405.006562     1.0       4179.68768         False          False    True
6    5477.695023    4479.685303 -1516.145395  5477.695023  1098.009844  4479.685303  398.007344  600.002377      500.002500     2.0       4179.68768         False          False    True
7    5477.695023    4679.685180 -1516.145395  5477.695023     0.010000  4679.685180  398.007344  400.002500      400.002500     3.0       5079.68768          True           True    True
8    5477.695023    4679.686279 -1516.145395  5477.695023   198.500000  4679.686279  398.007344  400.001400      300.002500     4.0       5079.68768         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=200001/400.[0m
[08/10 15:48:59]  --------------------------------------------------------------------------------
[08/10 15:48:59]  Iteration: 95 (0 solution, 94 counterexamples)
[08/10 15:49:14]  Generator returned sat in 11.609361 secs.
[08/10 15:49:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:49:15]  Improved gap from 0 to 100
[08/10 15:49:16]  Improved number of small numbers from 60 to 64 out of a max of 114
[08/10 15:49:16]  Verifer returned sat in 1.894555 secs.
[08/10 15:49:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3880.194092    3880.193180 -1416.653385  3880.194092    0.000732  3880.193180     0.0005    0.000412        0.000412     4.0       3880.19318            -1             -1     -1
1    3980.195180    3980.193180 -1416.653385  3980.195180  100.001500  3980.193180     0.0005    0.001500        0.001500     1.0       3880.19318         False           True   True
2    4080.194680    4080.193180 -1416.653385  4080.194680  100.001000  4080.193180     0.0005    0.001000        0.001000     1.0       4080.19418         False          False   True
3    4080.194680    4080.193180 -1416.653385  4080.194680    0.000500  4080.193180     0.0005    0.001000      -99.999000     1.0       4080.19418         False          False   True
4    4379.694680    4280.185680 -1416.653385  4379.694680  299.501000  4280.185680    99.5000    0.009000        0.001500     1.0       4080.19418         False          False   True
5    4379.695680    4280.195180 -1416.653385  4379.695680    0.010000  4280.195180    99.5000    0.000500      -99.997500     1.0       4080.19418         False          False   True
6    4679.218180    4480.193180 -1416.653385  4679.218180  299.523000  4480.193180   199.0235    0.001500        0.001500     1.0       4080.19418         False          False   True
7    4679.226680    4480.202680 -1416.653385  4679.226680    0.010000  4480.202680   199.0235    0.000500      -99.990000     1.0       4080.19418         False          False   True
8    4978.771680    4580.193359 -1416.653385  4978.771680  299.545500  4580.193359   298.5770  100.001320        0.001500     1.0       4080.19418         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/2000.[0m
[08/10 15:49:17]  --------------------------------------------------------------------------------
[08/10 15:49:17]  Iteration: 96 (0 solution, 95 counterexamples)
[08/10 15:50:53]  Generator returned sat in 93.190240 secs.
[08/10 15:50:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:50:54]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 15:50:54]  Verifer returned sat in 0.498098 secs.
[08/10 15:50:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4145.394531    3845.594727 -1416.65332  4145.394531  299.899902  3845.594727        0.0  299.799805      199.799805     2.0      3845.594727            -1             -1   False
1    4145.494873    4045.594482 -1416.65332  4145.494873  299.900146  4045.594482        0.0   99.900391       99.900146     2.0      3845.594727         False          False   False
2    4379.694580    4145.594727 -1416.65332  4379.694580  334.100098  4145.594727        0.0  234.099854      234.099854     1.0      3845.594727         False          False   False
3    4379.694580    4245.494629 -1416.65332  4379.694580   60.666667  4245.494629        0.0  134.199951      134.099854     2.0      4379.694580         False          False   False
4    4379.694580    4245.594727 -1416.65332  4379.694580   90.000000  4245.594727        0.0  134.099854       34.099854     3.0      4379.694580         False          False   False
5    4379.694580    4345.594727 -1416.65332  4379.694580  134.000000  4345.594727        0.0   34.099854      -65.900146     4.0      4379.694580         False          False   False
6    4545.594727    4445.594727 -1416.65332  4545.594727  200.000000  4445.594727        0.0  100.000000        0.000000     1.0      4379.694580         False          False   False
7    4744.594727    4645.594482 -1416.65332  4744.594727  299.000000  4645.594482        0.0   99.000244       99.000000     1.0      4379.694580         False          False   False
8    5093.094482    4692.994873 -1416.65332  5093.094482  447.500000  4692.994873        0.0  400.099609      347.499756     2.0      4379.694580         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=711885/2048.[0m
[08/10 15:50:54]  --------------------------------------------------------------------------------
[08/10 15:50:54]  Iteration: 97 (0 solution, 96 counterexamples)
[08/10 15:51:50]  Generator returned sat in 51.890490 secs.
[08/10 15:51:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:51:51]  Improved number of small numbers from 77 to 87 out of a max of 113
[08/10 15:51:51]  Verifer returned sat in 0.862910 secs.
[08/10 15:51:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4379.694336    3979.200195 -1316.656445  4379.694336   400.494141  3979.200195     0.000000  400.494141      400.493923     3.0      3979.200195            -1             -1    True
1    4379.694336    3979.200439 -1316.656445  4379.694336   400.494141  3979.200439     0.000000  400.493896      300.493923     3.0      3979.200195         False          False    True
2    4379.694336    4079.200413 -1316.656445  4379.694336     4.021729  4079.200413     0.000000  300.493923      200.493923     4.0      4379.694336         False          False    True
3    4379.694336    4279.200413 -1316.656445  4379.694336     4.021484  4279.200413     0.000000  100.493923      100.493923     5.0      4379.694336         False          False    True
4    4379.694336    4379.200195 -1316.656445  4379.694336     0.010742  4379.200195     0.000000    0.494141        0.493923     6.0      4379.694336         False          False    True
5    4379.694336    4379.693955 -1316.656445  4379.694336     0.010000  4379.693955     0.000000    0.000381      -99.506077     7.0      4379.694336         False          False    True
6    4979.201038    4479.200413 -1316.656445  4979.201038   599.507083  4479.200413     0.000000  500.000625      400.000625     1.0      4379.694336         False           True   False
7    6076.714580    4679.200413 -1316.656445  6076.714580  1597.514167  4679.200413   997.513542  400.000625      400.000625     2.0      4379.694336         False          False   False
8    6474.971038    4679.200439 -1316.656445  6474.971038   798.257083  4679.200439  1295.770000  500.000599      400.000625     3.0      4379.694336         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=640001/1600.[0m
[08/10 15:51:51]  --------------------------------------------------------------------------------
[08/10 15:51:51]  Iteration: 98 (0 solution, 97 counterexamples)
[08/10 15:52:31]  Generator returned sat in 36.107349 secs.
[08/10 15:52:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:52:31]  Improved gap from 0 to 100
[08/10 15:52:32]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 15:52:32]  Verifer returned sat in 0.639113 secs.
[08/10 15:52:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4315.560791    4151.727783 -1316.656494  4315.560791  164.133333  4151.727783   0.000000  163.833008       99.899902     8.0      4151.727783            -1             -1     -1
1    4315.760986    4215.661133 -1316.656494  4315.760986  164.033203  4215.661133   0.000000  100.099854        0.100098     3.0      4315.760986         False           True  False
2    4379.694336    4315.660889 -1316.656494  4379.694336  164.033203  4315.660889   0.000000   64.033447      -35.966553     2.0      4315.760986         False          False  False
3    4479.694092    4415.660889 -1316.656494  4479.694092  164.033203  4415.660889   0.000000   64.033203      -35.966797     1.0      4315.760986         False          False  False
4    4548.627441    4548.527832 -1316.656494  4548.627441  132.966553  4548.527832   0.000000    0.099609      -67.033447     1.0      4315.760986         False          False  False
5    4715.961182    4650.527588 -1316.656494  4715.961182  167.433350  4650.527588   0.100098   65.333496        0.200195     1.0      4315.760986         False          False  False
6    4816.061035    4752.527588 -1316.656494  4816.061035  165.433350  4752.527588   0.199951   63.333496        0.200195     1.0      4315.760986         False          False   True
7    4916.160889    4815.960938 -1316.656494  4916.160889  163.433350  4815.960938   0.299805   99.900146        0.200195     1.0      4315.760986         False          False   True
8    4977.694092    4915.660889 -1316.656494  4977.694092  161.433350  4915.660889   0.299805   61.733398      -38.266602     2.0      4315.760986         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/1024.[0m
[08/10 15:52:32]  --------------------------------------------------------------------------------
[08/10 15:52:32]  Iteration: 99 (0 solution, 98 counterexamples)
[08/10 15:52:52]  Generator returned sat in 16.124823 secs.
[08/10 15:52:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:52:53]  Improved gap from 1/5 to 100
[08/10 15:52:54]  Improved number of small numbers from 73 to 76 out of a max of 114
[08/10 15:52:54]  Verifer returned sat in 1.708198 secs.
[08/10 15:52:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4521.602832    4321.603027 -1522.598438  4521.602832  199.899902  4321.603027     0.1000  199.899805          99.900     2.0      4321.603027            -1             -1     -1
1    4521.602832    4521.402832 -1522.598438  4521.602832  199.800049  4521.402832     0.1000    0.100000          -0.100     2.0      4521.502832         False          False   True
2    4726.202832    4521.602832 -1522.598438  4726.202832  204.700000  4521.602832   104.4000  100.200000           0.200     1.0      4521.502832         False          False   True
3    4830.602832    4721.602832 -1522.598438  4830.602832  204.600000  4721.602832   108.8000    0.200000           0.200     1.0      4721.802832         False          False   True
4    4930.702832    4821.502832 -1522.598438  4930.702832  100.300000  4821.502832   108.9000    0.300000           0.200     1.0      4721.802832         False          False   True
5    4978.552832    4821.602832 -1522.598438  4978.552832   48.150000  4821.602832   108.9000   48.050000         -51.950     2.0      4721.802832         False          False   True
6    5103.077832    4994.077832 -1522.598438  5103.077832  172.575000  4994.077832   108.9000    0.100000         -27.425     1.0      4721.802832         False          False   True
7    5324.002832    5121.602832 -1522.598438  5324.002832  221.025000  5121.602832   202.2000    0.200000           0.200     1.0      4721.802832         False          False   True
8    5432.315332    5121.902832 -1522.598438  5432.315332  108.512500  5121.902832   210.5125   99.900000           0.200     1.0      4721.802832         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:52:55]  --------------------------------------------------------------------------------
[08/10 15:52:55]  Iteration: 100 (0 solution, 99 counterexamples)
[08/10 15:54:12]  Generator returned sat in 73.635744 secs.
[08/10 15:54:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:54:12]  Improved number of small numbers from 76 to 113 out of a max of 113
[08/10 15:54:12]  Verifer returned sat in 0.413033 secs.
[08/10 15:54:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     788.115479      88.115479  2710.88916   788.115479   199.899902    88.115479     0.000000  700.000000      600.000244     2.0        88.115479            -1             -1   False
1     788.115479     188.115234  2710.88916   788.115479   199.799805   188.115234     0.000000  600.000244      500.000244     2.0       788.115479         False          False   False
2    1392.215332     388.115234  2710.88916  1392.215332  1204.100098   388.115234   504.000000  500.100098      500.100098     3.0       788.115479         False          False   False
3    2096.115234     388.115479  2710.88916  2096.115234  1204.000000   388.115479  1107.899902  600.099854      500.100098     4.0       988.215332         False          False    True
4    2096.115234     488.115479  2710.88916  2096.115234   600.000000   488.115479  1107.899902  500.099854      400.100098     5.0       988.215332         False          False    True
5    2096.115234     688.115234  2710.88916  2096.115234   298.500000   688.115234  1107.899902  300.100098      300.100098     6.0       988.215332         False          False    True
6    2096.115234     788.015381  2710.88916  2096.115234   147.750000   788.015381  1107.899902  200.199951      200.100098     7.0       988.215332         False          False    True
7    2096.115234     788.115479  2710.88916  2096.115234    72.375000   788.115479  1107.899902  200.099854      100.100098     8.0       988.215332         False          False    True
8    2641.265381     988.115234  2710.88916  2641.265381   745.250000   988.115234  1153.050049  500.100098      500.100098     6.0       988.215332         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1024205/2048.[0m
[08/10 15:54:13]  --------------------------------------------------------------------------------
[08/10 15:54:13]  Iteration: 101 (0 solution, 100 counterexamples)
[08/10 15:54:55]  Generator returned sat in 39.180742 secs.
[08/10 15:54:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:54:56]  Improved gap from 1987/20 to 100
[08/10 15:54:56]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:54:56]  Verifer returned sat in 0.449296 secs.
[08/10 15:54:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     188.065186      88.465088  2810.539307   188.065186  100.099854    88.465088   0.000000   99.600098       99.600098     3.0        88.465088            -1             -1   False
1     188.515137     188.114990  2810.539307   188.515137  100.050049   188.114990   0.000000    0.400146        0.050049     1.0       188.515137         False          False   False
2     188.515137     188.465088  2810.539307   188.515137    0.350098   188.465088   0.000000    0.050049      -99.949951     2.0       188.515137         False          False   False
3     588.364990     338.640137  2810.539307   588.364990  399.899902   338.640137   0.000000  249.724854      199.899902     1.0       188.515137         False          False   False
4     588.364990     388.465088  2810.539307   588.364990  249.675049   388.465088   0.000000  199.899902       99.899902     2.0       188.515137         False          False   False
5     588.364990     588.315186  2810.539307   588.364990  199.850098   588.315186   0.000000    0.049805       -0.100098     3.0       188.515137         False          False   False
6     987.665283     591.115234  2810.539307   987.665283  399.350098   591.115234  99.250000  297.300049      199.950195     1.0       188.515137         False          False   False
7    1087.715332     693.115234  2810.539307  1087.715332  397.350098   693.115234  99.300049  295.300049      199.950195     2.0       188.515137         False          False    True
8    1187.765381     888.465088  2810.539307  1187.765381  395.350098   888.465088  99.350098  199.950195      199.950195     2.0       188.515137         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=204749/1024.[0m
[08/10 15:54:57]  --------------------------------------------------------------------------------
[08/10 15:54:57]  Iteration: 102 (0 solution, 101 counterexamples)
[08/10 15:55:13]  Generator returned sat in 13.535673 secs.
[08/10 15:55:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:55:14]  Improved gap from 3/40 to 100
[08/10 15:55:14]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:55:14]  Verifer returned sat in 0.492083 secs.
[08/10 15:55:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     126.348633      25.948486  2810.539307   126.348633  197.200195    25.948486   0.000000  100.400146        3.250244     9.0        25.948486            -1             -1     -1
1     223.098389     126.398682  2810.539307   223.098389  197.149902   126.398682   0.000000   96.699707        0.000000     1.0       223.098389         False           True  False
2     422.948486     223.098633  2810.539307   422.948486  296.549805   223.098633   0.000000  199.849854       99.850098     1.0       223.098389         False          False  False
3     423.048584     422.998535  2810.539307   423.048584  199.949951   422.998535   0.000000    0.050049       -0.049805     1.0       423.048584         False          False  False
4     722.998535     423.098389  2810.539307   722.998535  300.000000   423.098389   0.000000  299.900146      199.900146     1.0       423.048584         False          False  False
5     722.998535     588.815186  2810.539307   722.998535  299.849854   588.815186   0.000000  134.183350       99.900146     2.0       423.048584         False          False  False
6     923.098389     723.048584  2810.539307   923.098389  334.283203   723.048584   0.050049  199.999756      199.949951     1.0       423.048584         False          False  False
7    1055.381836     823.098389  2810.539307  1055.381836  332.283203   823.098389  32.333496  199.949951      199.949951     2.0       423.048584         False          False   True
8    1185.715088     923.098389  2810.539307  1185.715088  330.283203   923.098389  62.666748  199.949951      199.949951     2.0       423.048584         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=818995/4096.[0m
[08/10 15:55:15]  --------------------------------------------------------------------------------
[08/10 15:55:15]  Iteration: 103 (0 solution, 102 counterexamples)
[08/10 15:57:09]  Generator returned sat in 110.516926 secs.
[08/10 15:57:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:09]  Improved gap from 1/800 to 100
[08/10 15:57:10]  Improved number of small numbers from 61 to 71 out of a max of 114
[08/10 15:57:10]  Verifer returned sat in 1.326272 secs.
[08/10 15:57:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     455.581787     455.481689  2610.499355   455.581787     0.099854   455.481689        0.0    0.100098        0.099951     1.0       455.481689            -1             -1    True
1     606.081787     555.481836  2610.499355   606.081787   150.600098   555.481836        0.0   50.599951       50.599951     1.0       455.481689         False          False    True
2     606.281836     606.181836  2610.499355   606.281836    50.800000   606.181836        0.0    0.100000      -49.200000     1.0       606.281836         False          False    True
3     656.981836     655.481836  2610.499355   656.981836    50.800000   655.481836        0.0    1.500000      -98.500000     1.0       606.281836         False          False    True
4     755.581836     755.481836  2610.499355   755.581836   100.100000   755.481836        0.0    0.100000      -99.900000     1.0       606.281836         False          False    True
5     954.181836     855.481836  2610.499355   954.181836   198.700000   855.481836        0.0   98.700000       -1.300000     1.0       606.281836         False          False    True
6    1251.381836    1055.481836  2610.499355  1251.381836   395.900000  1055.481836        0.0  195.900000      195.900000     1.0       606.281836         False          False    True
7    1845.781836    1055.481836  2610.499355  1845.781836   790.300000  1055.481836        0.0  790.300000      690.300000     1.0       606.281836         False          False    True
8    2634.581836    1255.481689  2610.499355  2634.581836  1579.100000  1255.481689      688.8  690.300146      690.300000     2.0       606.281836         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6903/10.[0m
[08/10 15:57:11]  --------------------------------------------------------------------------------
[08/10 15:57:11]  Iteration: 104 (0 solution, 103 counterexamples)
[08/10 15:57:30]  Generator returned sat in 15.385796 secs.
[08/10 15:57:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:30]  Improved gap from 489/10 to 100
[08/10 15:57:31]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:57:31]  Verifer returned sat in 0.489861 secs.
[08/10 15:57:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     555.681396     453.281494  2610.499268   555.681396    0.100000   453.281494   0.000000  102.399902      100.199951     5.0       453.281494            -1             -1    True
1     555.781494     548.781494  2610.499268   555.781494  102.500000   548.781494   0.100098    6.899902        0.199951     5.0       453.281494         False          False    True
2     555.781494     555.681396  2610.499268   555.781494    0.099854   555.681396   0.100098    0.000000      -99.800049     6.0       555.681396         False          False    True
3     655.681396     655.481445  2610.499268   655.681396   99.899902   655.481445   0.100098    0.099854      -99.900146     1.0       555.681396         False           True   False
4     855.781494     755.481445  2610.499268   855.781494  200.199951   755.481445   0.100098  100.199951        0.199951     1.0       555.681396         False          False   False
5     960.281494     855.781494  2610.499268   960.281494  204.699951   855.781494   4.600098   99.899902        0.199951     1.0       555.681396         False          False   False
6    1063.581543     955.781494  2610.499268  1063.581543  203.199951   955.781494   7.900146   99.899902        0.199951     1.0       555.681396         False          False    True
7    1165.381592    1055.681396  2610.499268  1165.381592  201.699951  1055.681396   9.700195  100.000000        0.199951     2.0       555.681396         False          False    True
8    1265.581543    1155.781494  2610.499268  1265.581543  200.199951  1155.781494   9.900146   99.899902        0.199951     1.0       555.681396         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:57:31]  --------------------------------------------------------------------------------
[08/10 15:57:31]  Iteration: 105 (0 solution, 104 counterexamples)
[08/10 15:57:39]  Generator returned sat in 3.855262 secs.
[08/10 15:57:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:39]  Improved number of small numbers from 109 to 113 out of a max of 113
[08/10 15:57:39]  Verifer returned sat in 0.217192 secs.
[08/10 15:57:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     555.681152     453.281250  2612.699219   555.681152    0.099854   453.281250   0.000000  102.399902      102.399902     5.0       453.281250            -1             -1    True
1     555.781250     545.081299  2612.699219   555.781250  102.500000   545.081299   0.100098   10.599854        2.399902     5.0       453.281250         False          False    True
2     555.781250     555.681152  2612.699219   555.781250    0.099854   555.681152   0.100098    0.000000      -97.600098     6.0       555.681152         False          False    True
3     655.606445     655.481201  2612.699219   655.606445   99.825195   655.481201   0.100098    0.025146      -97.774902     1.0       555.681152         False           True   False
4     855.781250     753.281250  2612.699219   855.781250  200.199951   753.281250   0.100098  102.399902        2.399902     1.0       555.681152         False          False   False
5     959.581299     855.781250  2612.699219   959.581299  206.199951   855.781250   3.900146   99.899902        2.399902     1.0       555.681152         False          False   False
6    1063.881348     955.781250  2612.699219  1063.881348  204.199951   955.781250   8.200195   99.899902        2.399902     1.0       555.681152         False          False    True
7    1166.181396    1055.681152  2612.699219  1166.181396  202.199951  1055.681152  10.500244  100.000000        2.399902     2.0       555.681152         False          False    True
8    1266.381348    1155.781250  2612.699219  1266.381348  200.199951  1155.781250  10.700195   99.899902        2.399902     1.0       555.681152         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=4915/2048.[0m
[08/10 15:57:40]  --------------------------------------------------------------------------------
[08/10 15:57:40]  Iteration: 106 (0 solution, 105 counterexamples)
[08/10 15:58:00]  Generator returned sat in 16.784128 secs.
[08/10 15:58:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:58:00]  Improved gap from 1/600 to 0
[08/10 15:58:01]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:58:01]  Verifer returned sat in 0.520359 secs.
[08/10 15:58:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     763.377686     663.376465  2313.200684   763.377686    0.001221   663.376465   0.000000  100.001221      100.000244     9.0       663.376465            -1             -1     -1
1     763.377686     663.377441  2313.200684   763.377686   99.998750   663.377441   0.000000  100.000244        0.000244     2.0       663.376465         False           True  False
2     763.377686     763.377441  2413.200439   763.377686   99.998779   763.377441   0.000000    0.000244        0.000000     3.0       663.376465         False          False  False
3    1063.881348     863.377686  2413.200439  1063.881348  300.503906   863.377686   0.002441  200.501221      200.501221     1.0       663.376465         False          False  False
4    1063.881348     963.377686  2413.200439  1063.881348  151.751953   963.377686   0.002441  100.501221      100.501221     2.0       663.376465         False          False   True
5    1063.881348    1063.376465  2413.200439  1063.881348    0.010000  1063.376465   0.002441    0.502441        0.501221     3.0       663.376465         False          False   True
6    1063.881348    1063.377686  2512.699219  1063.881348    0.010000  1063.377686   0.002441    0.501221        0.000000     4.0       663.376465         False          False   True
7    1063.881348    1063.878906  2612.698975  1063.881348    0.500000  1063.878906   0.002441    0.000000       -0.000244     5.0      1063.878906          True           True  False
8    1064.381348    1063.880127  2612.698975  1064.381348    0.500000  1063.880127   0.002441    0.498779      -99.500244     1.0      1063.878906         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=821253/4096.[0m
[08/10 15:58:01]  --------------------------------------------------------------------------------
[08/10 15:58:01]  Iteration: 107 (0 solution, 106 counterexamples)
[08/10 15:58:21]  Generator returned sat in 15.891214 secs.
[08/10 15:58:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:58:21]  Improved gap from 1/800 to 100
[08/10 15:58:22]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 15:58:22]  Verifer returned sat in 0.327078 secs.
[08/10 15:58:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     564.628906     464.528906  2512.049219   564.628906      0.20   464.528906       0.00   100.10           100.1     2.0       464.528906            -1             -1   False
1     564.628906     559.278906  2512.049219   564.628906      0.10   559.278906       0.00     5.35             0.1     2.0       564.628906         False          False   False
2     564.628906     564.528906  2512.049219   564.628906      0.10   564.528906       0.00     0.10           -99.9     3.0       564.628906         False          False   False
3     764.728906     665.278906  2512.049219   764.728906    200.20   665.278906       0.00    99.45             0.2     1.0       564.628906         False          False   False
4     864.528906     764.528906  2512.049219   864.528906    199.25   764.528906       0.00   100.00             0.0     2.0       564.628906         False          False   False
5     968.278906     864.628906  2512.049219   968.278906    203.75   864.628906       3.55   100.10             0.2     1.0       564.628906         False          False   False
6    1070.428906     964.828906  2512.049219  1070.428906    202.25   964.828906       5.70    99.90             0.2     1.0       564.628906         False          False    True
7    1171.278906    1065.278906  2512.049219  1171.278906    200.75  1065.278906       6.55    99.45             0.2     1.0       564.628906         False          False    True
8    1271.078906    1164.528906  2512.049219  1271.078906    199.25  1164.528906       6.55   100.00             0.0     2.0       564.628906         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:58:22]  --------------------------------------------------------------------------------
[08/10 15:58:22]  Iteration: 108 (0 solution, 107 counterexamples)
[08/10 15:59:35]  Generator returned sat in 68.738827 secs.
[08/10 15:59:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:59:35]  Improved gap from 2016259/20480 to 100
[08/10 15:59:35]  Improved number of small numbers from 95 to 114 out of a max of 114
[08/10 15:59:35]  Verifer returned sat in 0.362157 secs.
[08/10 15:59:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     564.628662     463.678467  2512.049072   564.628662    0.200195   463.678467   0.000000  100.950195      100.950195     9.0       463.678467            -1             -1     -1
1     564.628662     557.678711  2512.049072   564.628662    0.100098   557.678711   0.000000    6.949951        0.950195     4.0       564.628662         False           True  False
2     564.628662     563.678711  2512.049072   564.628662    0.100098   563.678711   0.000000    0.949951      -99.049805     5.0       564.628662         False           True  False
3     764.653564     663.678467  2512.049072   764.653564  200.974854   663.678467   0.000000  100.975098        0.975098     1.0       564.628662         False           True  False
4     862.678467     763.678711  2512.049072   862.678467  199.000000   763.678711   0.000000   98.999756       -1.000000     2.0       564.628662         False          False  False
5     968.678711     864.628418  2512.049072   968.678711  205.000000   864.628418   4.025146  100.025146        0.975098     1.0       564.628662         False          False  False
6    1071.653564     964.828613  2512.049072  1071.653564  203.000000   964.828613   7.000000   99.824951        0.975098     1.0       564.628662         False          False   True
7    1172.828613    1064.678711  2512.049072  1172.828613  201.000000  1064.678711   8.175049   99.974854        0.975098     1.0       564.628662         False          False   True
8    1271.853760    1163.753662  2512.049072  1271.853760  199.000000  1163.753662   8.175049   99.925049        0.000244     2.0       564.628662         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1997/2048.[0m
[08/10 15:59:36]  --------------------------------------------------------------------------------
[08/10 15:59:36]  Iteration: 109 (0 solution, 108 counterexamples)
[08/10 16:00:07]  Generator returned sat in 27.949849 secs.
[08/10 16:00:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:00:10]  Improved gap from 1/2400 to 25.0
[08/10 16:00:10]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/10 16:00:10]  Verifer returned sat in 2.480910 secs.
[08/10 16:00:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     663.678467     463.678467  2512.048828   663.678467    0.002441   463.678467   0.000000  200.000000      199.999756     2.0       463.678467            -1             -1   False
1     663.678467     563.678467  2512.048828   663.678467  199.997314   563.678467   0.000000  100.000000       99.999756     2.0       463.678467         False          False   False
2     663.678467     638.678467  2512.049072   663.678467   99.997500   638.678467   0.000000   25.000000        0.000000     3.0       663.678467         False          False   False
3     888.680908     762.174561  2512.049072   888.680908  250.002441   762.174561   0.002441  126.503906      125.000000     1.0       663.678467         False          False   False
4     888.680908     863.675781  2512.049072   888.680908  126.501221   863.675781   0.002441   25.002686       25.000000     2.0       663.678467         False          False    True
5     888.680908     863.678467  2587.049072   888.680908    0.010000   863.678467   0.002441   25.000000        0.000000     3.0       663.678467         False          False    True
6     888.680908     888.678467  2636.299805   888.680908    0.010000   888.678467   0.002441    0.000000      -50.749268     4.0       663.678467         False          False    True
7    1013.184814     939.427734  2662.545166  1013.184814  124.503906   939.427734   0.002441   73.754639        0.000000     1.0      1013.182373          True           True   False
8    1013.184814    1013.182373  2737.545166  1013.184814   73.751953  1013.182373   0.002441    0.000000      -25.000000     2.0      1013.182373         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=125.[0m
[08/10 16:00:11]  --------------------------------------------------------------------------------
[08/10 16:00:11]  Iteration: 110 (0 solution, 109 counterexamples)
[08/10 16:01:23]  Generator returned sat in 68.531502 secs.
[08/10 16:01:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:01:24]  Improved gap from 1/800 to 96.875
[08/10 16:01:25]  Improved number of small numbers from 65 to 76 out of a max of 114
[08/10 16:01:25]  Verifer returned sat in 1.818289 secs.
[08/10 16:01:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     541.805908     541.800967  2655.222900   541.805908    0.002686   541.800967     0.0025    0.002441       -0.002324     4.0       541.800967            -1             -1     -1
1     541.810791     541.805908  2658.347666   541.810791    0.007324   541.805908     0.0025    0.002383      -96.872676     1.0       541.800967         False           True   True
2     737.118408     737.113467  2658.347666   737.118408  195.310000   737.113467     0.0025    0.002441       -1.565059     1.0       541.800967         False          False   True
3     738.685967     738.680967  2659.420166   738.685967    1.570000   738.680967     0.0025    0.002500      -98.925000     1.0       738.683467         False          False   True
4     938.203467     937.608467  2659.420166   938.203467  199.520000   937.608467     0.5825    0.012500        0.012500     1.0       738.683467         False          False   True
5     938.203467     937.608467  2659.420166   938.203467    0.010000   937.608467     0.5825    0.012500      -99.987500     1.0       738.683467         False          False   True
6    1138.205967    1137.608467  2659.420166  1138.205967  200.015000  1137.608467     0.5850    0.012500        0.012500     1.0       738.683467         False          False   True
7    1138.205967    1137.608467  2662.545166  1138.205967    0.010000  1137.608467     0.5850    0.012500      -96.862500     1.0       738.683467         False          False   True
8    1337.713467    1234.483643  2662.545166  1337.713467  199.520000  1234.483643     3.2175  100.012324        0.012500     1.0       738.683467         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/80.[0m
[08/10 16:01:26]  --------------------------------------------------------------------------------
[08/10 16:01:26]  Iteration: 111 (0 solution, 110 counterexamples)
[08/10 16:01:36]  Generator returned sat in 6.465313 secs.
[08/10 16:01:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:01:37]  Improved gap from 775/8 to 98.4375
[08/10 16:01:39]  Improved number of small numbers from 35 to 45 out of a max of 114
[08/10 16:01:39]  Verifer returned sat in 2.724854 secs.
[08/10 16:01:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     784.193604     784.183671  2657.408691   784.193604    0.004883   784.183671   0.004868    0.005064        0.004839     6.0       784.183671            -1             -1     -1
1     882.635777     784.193408  2658.961670   882.635777   98.447237   784.193408   0.004868   98.437500       -0.000009     1.0       784.183671         False           True   True
2     981.677421     981.667685  2658.961670   981.677421  197.479145   981.667685   0.004868    0.004868       -0.958365     1.0       784.183671         False          False   True
3     982.686895     982.677158  2659.420166   982.686895    1.014342   982.677158   0.004868    0.004868      -99.490395     1.0       982.682027         False          False   True
4    1182.197027    1182.172421  2659.420166  1182.197027  199.515000  1182.172421   0.009737    0.014868        0.014868     1.0       982.682027         False          False   True
5    1182.197027    1182.172421  2659.420166  1182.197027    0.010000  1182.172421   0.009737    0.014868      -99.985132     1.0       982.682027         False          False   True
6    1382.201895    1382.172421  2659.420166  1382.201895  200.019737  1382.172421   0.014605    0.014868        0.014868     1.0       982.682027         False          False   True
7    1382.201895    1382.172421  2660.982666  1382.201895    0.010000  1382.172421   0.014605    0.014868      -98.422632     1.0       982.682027         False          False   True
8    1581.702027    1480.610107  2660.982666  1581.702027  199.515000  1480.610107   1.077237  100.014682        0.014868     1.0       982.682027         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=113/7600.[0m
[08/10 16:01:40]  --------------------------------------------------------------------------------
[08/10 16:01:40]  Iteration: 112 (0 solution, 111 counterexamples)
[08/10 16:01:59]  Generator returned sat in 16.001735 secs.
[08/10 16:02:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:01]  Improved gap from 0 to 23.4375
[08/10 16:02:01]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:02:01]  Verifer returned sat in 1.350695 secs.
[08/10 16:02:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     980.072266     780.072510  2561.520264   980.072266    0.099854   780.072510     0.100098  199.899658       99.899658     7.0       780.072510            -1             -1     -1
1     980.472412     980.072510  2561.520264   980.472412  200.299805   980.072510     0.199951    0.199951        0.199951     1.0       780.072510         False           True   True
2     980.472412     980.072510  2638.082764   980.472412    0.100098   980.072510     0.199951    0.199951      -23.237549     1.0       980.272461         False          False   True
3    1741.272461    1103.510010  2638.082764  1741.272461  761.000000  1103.510010   637.562500    0.199951        0.199951     1.0       980.272461         False          False   True
4    2123.072510    1203.509766  2638.082764  2123.072510  382.000000  1203.509766   919.362549    0.200195        0.199951     1.0       980.272461         False          False   True
5    2315.372314    1229.397217  2638.082764  2315.372314  192.500000  1229.397217  1011.662354   74.312744        0.199951     1.0       980.272461         False          False   True
6    2338.809570    1303.809814  2714.345459  2338.809570   97.750000  1303.809814  1011.662354   23.337402       -0.100098     1.0       980.272461         False          False   True
7    2362.347168    1327.247314  2790.907959  2362.347168   46.875000  1327.247314  1011.662354   23.437500        0.000000     1.0       980.272461         False          False   True
8    2362.347168    1350.684814  2867.470215  2362.347168   21.437500  1350.684814  1011.662354    0.000000      -23.437744     2.0       980.272461         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/10 16:02:02]  --------------------------------------------------------------------------------
[08/10 16:02:02]  Iteration: 113 (0 solution, 112 counterexamples)
[08/10 16:02:14]  Generator returned sat in 8.171113 secs.
[08/10 16:02:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:15]  Improved gap from 0 to 46.875
[08/10 16:02:15]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 16:02:15]  Verifer returned sat in 1.118612 secs.
[08/10 16:02:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1062.484863     862.485107  2561.520264  1062.484863  200.200195   862.485107   0.100098  199.899658       99.899902     9.0       862.485107            -1             -1     -1
1    1062.685059    1062.484863  2561.520264  1062.685059  200.099854  1062.484863   0.100098    0.100098        0.100098     1.0      1062.584961         False           True   True
2    1142.884766    1142.684814  2561.520264  1142.884766   80.299805  1142.684814   0.100098    0.099854      -19.700195     1.0      1142.784668         False          False   True
3    1253.885010    1253.684814  2561.520264  1253.885010  111.100098  1253.684814   0.100098    0.100098       -8.699951     1.0      1142.784668         False          False   True
4    1362.885010    1353.509766  2561.520264  1362.885010  109.100098  1353.509766   0.200195    9.175049        0.199951     1.0      1142.784668         False          False   True
5    1409.760010    1362.784912  2614.345215  1409.760010   56.050049  1362.784912   0.200195   46.774902       -0.100098     1.0      1142.784668         False          False   True
6    1417.035156    1409.659912  2667.470215  1417.035156   54.050049  1409.659912   0.200195    7.175049      -39.699951     1.0      1142.784668         False          False   True
7    1461.910156    1456.534912  2720.595215  1461.910156   52.050049  1456.534912   0.200195    5.175049      -41.699951     1.0      1142.784668         False          False   True
8    1506.785156    1503.409912  2720.595459  1506.785156   50.050049  1503.409912   0.200195    3.175049      -96.824707     1.0      1142.784668         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 16:02:16]  --------------------------------------------------------------------------------
[08/10 16:02:16]  Iteration: 114 (0 solution, 113 counterexamples)
[08/10 16:03:07]  Generator returned sat in 47.680204 secs.
[08/10 16:03:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:03:08]  Improved gap from 1/1200 to 0
[08/10 16:03:09]  Improved number of small numbers from 63 to 85 out of a max of 114
[08/10 16:03:09]  Verifer returned sat in 1.288906 secs.
[08/10 16:03:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1051.385010     951.388916  2561.520020  1051.385010  100.000000   951.388916    0.00000   99.996094       99.996006     5.0       951.388916            -1             -1     -1
1    1051.387695    1051.386230  2561.520264  1051.387695   99.998779  1051.386230    0.00000    0.001465       -0.001064     1.0      1051.387695         False           True  False
2    1051.389893    1051.388760  2661.519014  1051.389893    0.003662  1051.388760    0.00000    0.001133       -0.000117     1.0      1051.389893         False          False  False
3    1251.392510    1151.389893  2661.519014  1251.392510  200.003750  1151.389893    0.00125  100.001367      100.001250     1.0      1051.389893         False          False  False
4    1251.392510    1250.389893  2661.519014  1251.392510    2.000000  1250.389893    0.00125    1.001367        0.001250     2.0      1051.389893         False          False   True
5    1251.392510    1251.390010  2761.517764  1251.392510    1.000000  1251.390010    0.00125    0.001250        0.000000     3.0      1051.389893         False          False   True
6    1252.391260    1251.391260  2860.519014  1252.391260    1.000000  1251.391260    0.00125    0.998750        0.000000     4.0      1051.389893         False          False   True
7    1252.391260    1252.390010  2960.517764  1252.391260    0.010000  1252.390010    0.00125    0.000000       -0.001250     2.0      1252.390010          True           True  False
8    1252.401260    1252.391357  3060.508789  1252.401260    0.010000  1252.391357    0.00125    0.008652       -0.000225     1.0      1252.390010         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=80001/800.[0m
[08/10 16:03:09]  --------------------------------------------------------------------------------
[08/10 16:03:09]  Iteration: 115 (0 solution, 114 counterexamples)
[08/10 16:03:30]  Generator returned sat in 17.325165 secs.
[08/10 16:03:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:03:38]  Improved gap from 1/800 to 0
[08/10 16:03:38]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:03:38]  Verifer returned sat in 7.788955 secs.
[08/10 16:03:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1178.782715    1107.677734  2405.229248  1178.782715    0.002441  1107.677734   0.000000  71.104980       71.102783     6.0      1107.677734            -1             -1   False
1    1178.782715    1107.679932  2434.124023  1178.782715    0.002686  1107.679932   0.000000  71.102783       -0.002441     5.0      1107.677734         False          False   False
2    1178.787354    1178.785156  2534.121338  1178.787354   71.107422  1178.785156   0.000000   0.002197       -0.000488     1.0      1107.677734         False          False   False
3    1249.892578    1246.120117  2563.016602  1249.892578   71.107422  1246.120117   0.000000   3.772461        0.000000     1.0      1107.677734         False          False   False
4    1351.395020    1301.400146  2563.016602  1351.395020  105.274902  1301.400146   0.000000  49.994873        1.502441     1.0      1107.677734         False          False   False
5    1451.397705    1449.889893  2563.016602  1451.397705  149.997559  1449.889893   0.002686   1.505127        1.502441     1.0      1107.677734         False          False   False
6    1451.397705    1449.892578  2661.514160  1451.397705    0.010000  1449.892578   0.002686   1.502441        0.000000     2.0      1107.677734         False          False    True
7    1451.397705    1451.395020  2761.511475  1451.397705    1.500000  1451.395020   0.002686   0.000000       -0.002686     3.0      1107.677734         False          False    True
8    1452.897705    1451.397705  2761.511719  1452.897705    1.500000  1451.397705   0.002686   1.497314      -98.502441     1.0      1107.677734         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3077/2048.[0m
[08/10 16:03:39]  --------------------------------------------------------------------------------
[08/10 16:03:39]  Iteration: 116 (0 solution, 115 counterexamples)
[08/10 16:04:11]  Generator returned sat in 28.605184 secs.
[08/10 16:04:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:04:12]  Improved gap from 1/20 to 48.4375
[08/10 16:04:13]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:04:13]  Verifer returned sat in 0.899760 secs.
[08/10 16:04:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1083.570068     983.570068  2529.339111  1083.570068    0.049805   983.570068        0.0  100.000000      100.000000     4.0       983.570068            -1             -1   False
1    1083.570068    1035.132812  2529.339111  1083.570068   99.999756  1035.132812        0.0   48.437256        0.000000     3.0       983.570068         False          False   False
2    1430.420166    1083.570312  2529.339111  1430.420166  395.287354  1083.570312        0.0  346.849854      246.850098     1.0       983.570068         False          False   False
3    1430.420166    1283.570068  2529.339111  1430.420166   53.437500  1283.570068        0.0  146.850098      146.850098     2.0      1430.420166         False          False   False
4    1430.420166    1378.932861  2529.339111  1430.420166   52.437500  1378.932861        0.0   51.487305       46.850098     3.0      1430.420166         False          False   False
5    1430.420166    1383.570312  2580.901367  1430.420166   51.437500  1383.570312        0.0   46.849854       -1.587646     4.0      1430.420166         False          False   False
6    1434.007812    1432.007812  2632.463867  1434.007812   50.437500  1432.007812        0.0    2.000000      -46.437500     1.0      1430.420166         False          False   False
7    1481.445312    1480.445312  2684.026367  1481.445312   49.437500  1480.445312        0.0    1.000000      -47.437500     1.0      1430.420166         False          False   False
8    1528.882812    1528.882812  2684.026367  1528.882812   48.437500  1528.882812        0.0    0.000000     -100.000000     1.0      1430.420166         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=505651/2048.[0m
[08/10 16:04:13]  --------------------------------------------------------------------------------
[08/10 16:04:13]  Iteration: 117 (0 solution, 116 counterexamples)
[08/10 16:06:15]  Generator returned sat in 117.558885 secs.
[08/10 16:06:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:06:16]  Improved gap from 1/16384 to 1.5625
[08/10 16:06:16]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 16:06:16]  Verifer returned sat in 0.881739 secs.
[08/10 16:06:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1681.807812    1581.807617  2429.519043  1681.807812  100.000000  1581.807617        0.0  100.000195      100.000195     2.0      1581.807617            -1             -1   False
1    1681.807812    1581.807812  2429.519043  1681.807812   99.949951  1581.807812        0.0  100.000000        0.000195     2.0      1681.807812         False          False   False
2    1681.857812    1681.857812  2527.906250  1681.857812  100.050000  1681.857812        0.0    0.000000       -1.562598     1.0      1681.807812         False          False   False
3    1983.470313    1683.420410  2527.906250  1983.470313  301.612500  1683.420410        0.0  300.049902      200.049902     1.0      1681.807812         False          False   False
4    1983.470313    1836.982910  2527.906250  1983.470313    2.000000  1836.982910        0.0  146.487402      100.049902     2.0      1681.807812         False          False   False
5    1983.470313    1883.420410  2527.906250  1983.470313    2.000000  1883.420410        0.0  100.049902        0.049902     3.0      1681.807812         False          False   False
6    1983.470313    1983.420410  2626.343750  1983.470313    2.000000  1983.420410        0.0    0.049902       -1.512598     4.0      1681.807812         False          False   False
7    1985.420410    1985.370117  2724.394043  1985.420410    2.000000  1985.370117        0.0    0.050293       -1.512207     1.0      1985.420410          True           True   False
8    1987.370117    1986.932812  2822.831299  1987.370117    2.000000  1986.932812        0.0    0.437305       -1.125244     1.0      1985.420410         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2001/10.[0m
[08/10 16:06:17]  --------------------------------------------------------------------------------
[08/10 16:06:17]  Iteration: 118 (0 solution, 117 counterexamples)
[08/10 16:07:29]  Generator returned sat in 68.906422 secs.
[08/10 16:07:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:07:31]  Improved gap from 0 to 48.4375
[08/10 16:07:32]  Improved number of small numbers from 75 to 82 out of a max of 114
[08/10 16:07:32]  Verifer returned sat in 1.954462 secs.
[08/10 16:07:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1584.403320    1407.740951  2526.923210  1584.403320  177.212402  1407.740951       0.05  176.612370       99.949870     1.0      1407.740951            -1             -1     -1
1    1584.953451    1584.403451  2526.923210  1584.953451  177.162500  1584.403451       0.05    0.500000        0.500000     1.0      1584.903451         False          False   True
2    1684.503451    1684.403451  2526.923210  1684.503451  100.050000  1684.403451       0.05    0.050000        0.050000     1.0      1684.453451         False          False   True
3    1784.953451    1726.915951  2526.923210  1784.953451  100.500000  1726.915951       0.05   57.987500        0.500000     1.0      1684.453451         False          False   True
4    1885.053451    1884.403451  2526.923210  1885.053451  158.087500  1884.403451       0.10    0.550000        0.550000     1.0      1684.453451         False          False   True
5    1885.053451    1884.403451  2578.485710  1885.053451    0.500000  1884.403451       0.10    0.550000      -47.887500     1.0      1684.453451         False          False   True
6    1983.003451    1932.840951  2628.423096  1983.003451   98.500000  1932.840951       0.10   50.062500       -0.000114     1.0      1684.453451         False          False   True
7    2034.403451    1985.370117  2676.973389  2034.403451  101.462500  1985.370117       0.10   48.933333       -0.049821     1.0      1684.453451         False          False   True
8    2034.453451    2034.353271  2676.973389  2034.453451   48.983333  2034.353271       0.10    0.000179      -99.999821     1.0      1684.453451         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=11/20.[0m
[08/10 16:07:32]  --------------------------------------------------------------------------------
[08/10 16:07:32]  Iteration: 119 (0 solution, 118 counterexamples)
[08/10 16:08:06]  Generator returned sat in 29.149156 secs.
[08/10 16:08:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:06]  Improved gap from 0 to 0
[08/10 16:08:07]  Improved number of small numbers from 60 to 87 out of a max of 114
[08/10 16:08:07]  Verifer returned sat in 1.569058 secs.
[08/10 16:08:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1582.990723    1482.990723  2528.334229  1582.990723    0.001250  1482.990723    0.00000  100.000000       99.998291     2.0      1482.990723            -1             -1   False
1    1582.992188    1482.992432  2528.334473  1582.992188  100.001465  1482.992432    0.00000   99.999756        0.000000     2.0      1482.990723         False          False   False
2    1586.992188    1582.992201  2624.334460  1586.992188  103.999756  1582.992201    0.00000    3.999987       -0.000013     1.0      1482.990723         False          False   False
3    1686.995951    1686.992201  2624.334460  1686.995951  104.003750  1686.992201    0.00125    0.002500        0.002500     1.0      1482.990723         False          False   False
4    1788.997201    1786.992201  2624.334460  1788.997201  102.003750  1786.992201    2.00250    0.002500        0.002500     1.0      1482.990723         False          False    True
5    1888.998451    1789.003451  2624.334460  1888.998451  100.003750  1789.003451    2.00375   97.991250        0.002500     1.0      1482.990723         False          False    True
6    1889.010951    1886.995850  2724.319460  1889.010951   98.003750  1886.995850    2.00375    0.011351        0.000000     1.0      1482.990723         False          False    True
7    1889.010951    1887.007201  2824.319336  1889.010951    0.010000  1887.007201    2.00375    0.000000       -0.000124     2.0      1482.990723         False          False    True
8    1889.020951    1887.008301  2824.319336  1889.020951    0.010000  1887.008301    2.00375    0.008900      -99.990124     1.0      1482.990723         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/400.[0m
[08/10 16:08:08]  --------------------------------------------------------------------------------
[08/10 16:08:08]  Iteration: 120 (0 solution, 119 counterexamples)
[08/10 16:08:17]  Generator returned sat in 4.431371 secs.
[08/10 16:08:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:17]  Improved gap from 1/20 to 0
[08/10 16:08:18]  Improved number of small numbers from 64 to 74 out of a max of 114
[08/10 16:08:18]  Verifer returned sat in 1.397162 secs.
[08/10 16:08:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     888.484701     788.487201  3222.839460   888.484701  200.001465   788.487201   0.000000   99.997500       99.997500     2.0       788.487201            -1             -1   False
1     988.488034     888.485352  3222.839460   988.488034  200.000833   888.485352   0.000833  100.001849      100.000000     1.0       988.487201         False          False   False
2     988.488034     988.486367  3222.839460   988.488034  100.000977   988.486367   0.000833    0.000833        0.000000     2.0       988.487201         False          False    True
3    1088.487201    1088.485534  3222.839600  1088.487201  100.000000  1088.485534   0.000833    0.000833       -0.000693     1.0      1088.486367         False          False    True
4    1088.496367    1088.487201  3322.830322  1088.496367    0.010000  1088.487201   0.000833    0.008333       -0.000804     1.0      1088.486367         False          False    True
5    1088.498034    1088.496367  3422.829346  1088.498034    0.010000  1088.496367   0.000833    0.000833       -0.000114     1.0      1088.486367         False          False    True
6    1088.507201    1088.505534  3522.812012  1088.507201    0.010000  1088.505534   0.000833    0.000833       -0.008281     1.0      1088.486367         False          False    True
7    1088.516367    1088.514701  3622.811035  1088.516367    0.010000  1088.514701   0.000833    0.000833       -0.000091     1.0      1088.486367         False          False    True
8    1088.525534    1088.524658  3622.811279  1088.525534    0.010000  1088.524658   0.000833    0.000042      -99.990680     1.0      1088.486367         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=100.[0m
[08/10 16:08:19]  --------------------------------------------------------------------------------
[08/10 16:08:19]  Iteration: 121 (0 solution, 120 counterexamples)
[08/10 16:08:32]  Generator returned sat in 9.146417 secs.
[08/10 16:08:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:33]  Improved number of small numbers from 59 to 113 out of a max of 113
[08/10 16:08:33]  Verifer returned sat in 0.464672 secs.
[08/10 16:08:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     588.886963     388.912354  3522.414307   588.886963  299.974854   388.912354   0.000000  199.974609       99.974854     4.0       388.912354            -1             -1   False
1     688.887207     588.912109  3522.414307   688.887207  299.974854   588.912109   0.000000   99.975098       99.975098     1.0       388.912354         False          False   False
2     989.587158     590.487305  3522.414307   989.587158  400.675049   590.487305   0.025146  399.074707      300.649902     2.0       388.912354         False          False   False
3     989.587158     688.912109  3522.414307   989.587158  399.049805   688.912109   0.025146  300.649902      200.649902     2.0       989.562012         False          False    True
4    1088.487061     888.887207  3522.414307  1088.487061  399.549805   888.887207   0.025146  199.574707      199.549805     3.0       989.562012         False          False    True
5    1288.962158     888.912354  3522.414307  1288.962158  400.049805   888.912354   0.025146  400.024658      300.024902     4.0       989.562012         False          False    True
6    1289.487305    1088.487061  3522.414307  1289.487305  400.549805  1088.487061   0.025146  200.975098      200.550049     2.0       989.562012         False          False    True
7    1489.562012    1186.362305  3522.414307  1489.562012  401.049805  1186.362305   0.025146  303.174561      300.624756     3.0       989.562012         False          False    True
8    1587.937256    1288.912109  3522.414307  1587.937256  401.549805  1288.912109   0.025146  299.000000      299.000000     4.0       989.562012         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=615731/2048.[0m
[08/10 16:08:34]  --------------------------------------------------------------------------------
[08/10 16:08:34]  Iteration: 122 (0 solution, 121 counterexamples)
[08/10 16:09:06]  Generator returned sat in 28.288298 secs.
[08/10 16:09:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:09:07]  Improved number of small numbers from 66 to 82 out of a max of 113
[08/10 16:09:07]  Verifer returned sat in 1.013040 secs.
[08/10 16:09:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -377.863037    -984.762842  4021.439258  -377.863037    0.099854  -984.762842        0.0  606.899805      606.899805     6.0      -984.762842            -1             -1   False
1    -377.863037    -984.762842  4021.439258  -377.863037    0.100098  -984.762842        0.0  606.899805      506.899805     6.0      -984.762842         False          False   False
2    -377.863037    -784.762939  4021.439258  -377.863037    0.100098  -784.762939        0.0  406.899902      406.899805     7.0      -984.762842         False          False   False
3    -377.863037    -784.762842  4021.439258  -377.863037  116.488889  -784.762842        0.0  406.899805      306.899805     5.0      -984.762842         False          False   False
4    -377.863037    -584.762842  4021.439258  -377.863037  272.733333  -584.762842        0.0  206.899805      206.899805     6.0      -984.762842         False          False   False
5      22.337158    -584.762695  4021.439258    22.337158  607.100000  -584.762695        0.1  606.999854      507.000000     7.0      -984.762842         False          False   False
6      22.337158    -484.762842  4021.439258    22.337158    2.000000  -484.762842        0.1  507.000000      407.000000     8.0      -984.762842         False          False    True
7      22.337158    -377.762842  4021.439258    22.337158  151.000000  -377.762842        0.1  400.000000      307.000000     3.0        22.237158          True           True   False
8      22.337158    -284.762695  4021.439258    22.337158  328.000000  -284.762695        0.1  306.999854      207.000000     4.0        22.237158         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=507.[0m
[08/10 16:09:08]  --------------------------------------------------------------------------------
[08/10 16:09:08]  Iteration: 123 (0 solution, 122 counterexamples)
[08/10 16:09:44]  Generator returned sat in 32.172842 secs.
[08/10 16:09:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:09:45]  Improved gap from 0 to 100
[08/10 16:09:46]  Improved number of small numbers from 61 to 72 out of a max of 114
[08/10 16:09:46]  Verifer returned sat in 1.488594 secs.
[08/10 16:09:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -980.863037    -980.963135  3654.842689  -980.863037  100.300000  -980.963135      0.000    0.100098       -0.099951     7.0      -980.963135            -1             -1     -1
1    -880.763184    -980.763086  3654.842689  -880.763184  100.199951  -980.763086      0.000   99.999902       -0.000098     1.0      -880.763184         False           True  False
2    -579.463086    -780.763086  3654.842689  -579.463086  401.300000  -780.763086    201.100    0.200000        0.200000     1.0      -880.763184         False          False  False
3    -178.463086    -780.463086  3654.842689  -178.463086  401.200000  -780.463086    502.100   99.900000        0.200000     1.0      -680.563086         False          False   True
4     -77.763086    -580.763086  3654.842689   -77.763086  200.600000  -580.763086    502.800    0.200000        0.200000     1.0      -680.563086         False          False   True
5      22.336914    -480.763086  3654.842689    22.336914  100.300000  -480.763086    502.900    0.200000        0.200000     1.0      -680.563086         False          False   True
6      72.286914    -480.763086  3654.842689    72.286914   50.150000  -480.763086    502.900   50.150000      -49.850000     1.0      -680.563086         False          False   True
7     197.061914    -354.488086  3654.842689   197.061914  174.925000  -354.488086    502.900   48.650000      -25.075000     1.0      -680.563086         False          False   True
8     349.011914    -280.762939  3654.842689   349.011914  200.600000  -280.762939    529.575  100.199854        0.200000     1.0      -680.563086         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 16:09:47]  --------------------------------------------------------------------------------
[08/10 16:09:47]  Iteration: 124 (0 solution, 123 counterexamples)
[08/10 16:10:05]  Generator returned sat in 13.759231 secs.
[08/10 16:10:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:10:05]  Improved gap from 1/10 to 100
[08/10 16:10:06]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 16:10:06]  Verifer returned sat in 0.689008 secs.
[08/10 16:10:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -881.613281    -981.812988  3654.842773  -881.613281    0.049805  -981.812988    0.050049  100.149658       99.949951     9.0      -981.812988            -1             -1     -1
1    -881.613281    -981.613281  3654.842773  -881.613281  100.100098  -981.613281    0.050049   99.949951       -0.050049     9.0      -981.812988         False           True   True
2    -881.513184    -881.613037  3654.842773  -881.513184  100.050049  -881.613037    0.050049    0.049805      -99.949951     1.0      -881.563232          True           True  False
3    -681.213135    -715.379883  3654.842773  -681.213135  200.349854  -715.379883    0.050049   34.116699        0.350098     1.0      -881.563232         False          False  False
4    -581.113281    -581.613281  3654.842773  -581.113281  134.216553  -581.613281    0.100098    0.399902        0.399902     1.0      -881.563232         False          False  False
5    -581.013184    -581.613281  3654.842773  -581.013184    0.500000  -581.613281    0.100098    0.500000      -99.500000     1.0      -881.563232         False          False   True
6    -281.513428    -381.613281  3654.842773  -281.513428  299.999756  -381.613281   99.699951    0.399902        0.399902     1.0      -881.563232         False          False   True
7    -281.413330    -381.163330  3654.842773  -281.413330    0.500000  -381.163330   99.699951    0.050049      -99.500000     1.0      -881.563232         False          False   True
8     -81.013428    -281.613281  3654.842773   -81.013428  200.449951  -281.613281  100.199951  100.399902        0.399902     1.0      -881.563232         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=819/2048.[0m
[08/10 16:10:06]  --------------------------------------------------------------------------------
[08/10 16:10:06]  Iteration: 125 (0 solution, 124 counterexamples)
[08/10 16:11:18]  Generator returned sat in 67.628680 secs.
[08/10 16:11:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:19]  Improved gap from 1/800 to 48.4375
[08/10 16:11:19]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:11:19]  Verifer returned sat in 0.698966 secs.
[08/10 16:11:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1728.495850   -1828.947998  4450.160156 -1728.495850  100.457520 -1828.947998   0.000000  100.452148       48.434814     9.0     -1828.947998            -1             -1     -1
1   -1728.493164   -1776.930664  4501.722656 -1728.493164  100.454834 -1776.930664   0.000000   48.437500        0.000000     5.0     -1728.493164         False           True  False
2   -1676.928223   -1676.930664  4501.722656 -1676.928223  100.002441 -1676.930664   0.000000    0.002441      -48.435059     1.0     -1676.928223         False          False  False
3   -1628.490723   -1628.493164  4553.285156 -1628.490723   48.439941 -1628.493164   0.000000    0.002441      -48.435059     1.0     -1628.490723         False          False  False
4   -1429.538330   -1480.058350  4553.285156 -1429.538330  198.954834 -1480.058350   0.002441   50.517578       50.514893     1.0     -1628.490723         False          False  False
5   -1429.538330   -1480.055664  4602.770020 -1429.538330    0.010000 -1480.055664   0.002441   50.514893       -0.000244     2.0     -1628.490723         False          False   True
6   -1381.615723   -1429.538086  4653.291260 -1381.615723   98.437500 -1429.538086   0.002441   47.919922       -1.556396     1.0     -1628.490723         False          False   True
7   -1330.058105   -1380.061768  4703.290039 -1330.058105   99.477539 -1380.061768   0.002441   50.001221        0.000000     1.0     -1628.490723         False          False   True
8   -1330.058105   -1330.060547  4703.290283 -1330.058105   49.998291 -1330.060547   0.002441    0.000000      -99.999756     2.0     -1628.490723         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=206909/4096.[0m
[08/10 16:11:20]  --------------------------------------------------------------------------------
[08/10 16:11:20]  Iteration: 126 (0 solution, 125 counterexamples)
[08/10 16:11:45]  Generator returned sat in 21.258615 secs.
[08/10 16:11:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:47]  Improved gap from 1/10 to 10.9375
[08/10 16:11:47]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:11:47]  Verifer returned sat in 1.964239 secs.
[08/10 16:11:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1117.238037   -1117.287842  5118.025146 -1117.238037  199.999756 -1117.287842        0.0    0.049805      -99.950195     4.0     -1117.287842            -1             -1   False
1    -917.337891    -928.225586  5118.025391  -917.337891  199.949951  -928.225586        0.0   10.887695       -0.049805     1.0      -917.337891         False          False   False
2    -728.325684    -917.287842  5118.025391  -728.325684  199.899902  -917.287842        0.0  188.962158       88.962402     1.0      -728.325684         False          False   False
3    -507.287842    -717.288086  5118.025391  -507.287842  410.000000  -717.288086        0.0  210.000244      210.000244     1.0      -728.325684         False          False   False
4    -507.287842    -635.412842  5118.025391  -507.287842  203.000000  -635.412842        0.0  128.125000      110.000244     2.0      -728.325684         False          False   False
5    -507.287842    -555.088135  5118.025391  -507.287842   99.500000  -555.088135        0.0   47.800293       10.000244     3.0      -728.325684         False          False   False
6    -507.287842    -507.337891  5197.137695  -507.287842   47.750000  -507.337891        0.0    0.050049      -10.887451     4.0      -728.325684         False          False   False
7    -485.462891    -496.400391  5286.200195  -485.462891   21.875000  -496.400391        0.0   10.937500        0.000000     1.0      -728.325684         False          False   False
8    -485.462891    -485.462891  5375.262695  -485.462891    8.937500  -485.462891        0.0    0.000000      -10.937500     2.0      -728.325684         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=215091/1024.[0m
[08/10 16:11:48]  --------------------------------------------------------------------------------
[08/10 16:11:48]  Iteration: 127 (0 solution, 126 counterexamples)
[08/10 16:12:36]  Generator returned sat in 43.896348 secs.
[08/10 16:12:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:12:37]  Improved gap from 95/3 to 100
[08/10 16:12:37]  Improved number of small numbers from 68 to 78 out of a max of 114
[08/10 16:12:37]  Verifer returned sat in 0.929062 secs.
[08/10 16:12:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -812.437988    -912.437964  5118.025391  -812.437988    0.200195  -912.437964        0.0   99.999976       99.999976     1.0      -912.437964            -1             -1    True
1    -812.437988    -912.437964  5118.025391  -812.437988    0.100098  -912.437964        0.0   99.999976       -0.000024     1.0      -812.437988         False          False    True
2    -612.437964    -712.437964  5118.025391  -612.437964  300.000000  -712.437964        0.0  100.000000      100.000000     1.0      -812.437988         False          False    True
3    -612.437964    -712.437964  5118.025391  -612.437964   45.111111  -712.437964        0.0  100.000000        0.000000     1.0      -612.437964         False          False    True
4    -543.771297    -547.771297  5118.025391  -543.771297  168.666667  -547.771297        0.0    4.000000      -31.333333     1.0      -612.437964         False          False    True
5    -111.437964    -511.638184  5118.025391  -111.437964  436.333333  -511.638184        0.1  400.100220      300.900000     1.0      -612.437964         False          False    True
6    -111.437964    -312.437964  5118.025391  -111.437964    0.500000  -312.437964        0.1  200.900000      200.900000     2.0      -612.437964         False          False    True
7    -111.337964    -212.437964  5118.025391  -111.337964  201.000000  -212.437964        0.1  101.000000      101.000000     3.0      -111.437964          True           True   False
8     -43.671297    -212.437744  5118.025391   -43.671297  168.666667  -212.437744        0.1  168.666447       68.666667     4.0      -111.437964         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3009/10.[0m
[08/10 16:12:38]  --------------------------------------------------------------------------------
[08/10 16:12:38]  Iteration: 128 (0 solution, 127 counterexamples)
[08/10 16:13:17]  Generator returned sat in 35.033102 secs.
[08/10 16:13:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:13:18]  Improved gap from 0 to 48.4375
[08/10 16:13:18]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 16:13:18]  Verifer returned sat in 0.641027 secs.
[08/10 16:13:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -758.400391    -758.600342  4964.187744  -758.400391  399.349854  -758.600342   0.049805    0.150146        0.150146     2.0      -758.600342            -1             -1     -1
1    -359.200684    -758.450439  4964.187744  -359.200684  399.349854  -758.450439   0.049805  399.199951      299.349854     2.0      -758.600342         False          False   True
2    -359.100586    -558.600586  4964.187744  -359.100586  399.300049  -558.600586   0.049805  199.450195      199.449951     2.0      -359.150391         False          False   True
3    -359.100586    -558.550537  4964.187744  -359.100586   50.937500  -558.550537   0.049805  199.400146       99.449951     3.0      -359.150391         False          False   True
4    -359.100586    -359.200439  4964.187744  -359.100586   50.437500  -359.200439   0.049805    0.050049       -0.550049     3.0      -359.150391         False          False   True
5    -309.213135    -358.600342  5014.850342  -309.213135   49.937500  -358.600342   0.049805   49.337402        0.000000     1.0      -359.150391         False          False   True
6    -309.113037    -309.212891  5066.362793  -309.113037   49.437500  -309.212891   0.049805    0.050049      -48.387451     1.0      -359.150391         False          False   True
7    -260.225586    -260.775391  5117.925293  -260.225586   48.937500  -260.775391   0.049805    0.500000      -47.937500     1.0      -359.150391         False          False   True
8    -212.288086    -212.337891  5117.925293  -212.288086   48.437500  -212.337891   0.049805    0.000000     -100.000000     1.0      -359.150391         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1226343/4096.[0m
[08/10 16:13:19]  --------------------------------------------------------------------------------
[08/10 16:13:19]  Iteration: 129 (0 solution, 128 counterexamples)
[08/10 16:13:29]  Generator returned sat in 5.129910 secs.
[08/10 16:13:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:13:29]  Improved gap from 751/16 to 46.875
[08/10 16:13:30]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 16:13:30]  Verifer returned sat in 0.866177 secs.
[08/10 16:13:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -502.157715    -802.194824  4907.782227  -502.157715    0.012207  -802.194824   0.049805  299.987305      199.987305     6.0      -802.194824            -1             -1     -1
1    -502.157715    -602.194824  4907.782227  -502.157715  299.987305  -602.194824   0.049805   99.987305       99.987305     3.0      -802.194824         False           True   True
2    -302.169922    -502.194824  4907.782227  -302.169922  299.975098  -502.194824   0.049805  199.975098      199.975098     1.0      -302.219727         False          False   True
3    -302.169922    -502.182617  4907.782227  -302.169922   56.875000  -502.182617   0.049805  199.962891       99.975098     2.0      -302.219727         False          False   True
4    -302.169922    -304.182617  4907.782227  -302.169922   54.875000  -304.182617   0.049805    1.962891       -0.024902     3.0      -302.219727         False          False   True
5    -251.257812    -302.194824  4956.895020  -251.257812   52.875000  -302.194824   0.049805   50.887207        0.000000     1.0      -302.219727         False          False   True
6    -251.257812    -251.307617  5010.020020  -251.257812   50.875000  -251.307617   0.049805    0.000000      -46.875000     2.0      -302.219727         False          False   True
7    -202.382812    -204.432617  5063.145020  -202.382812   48.875000  -204.432617   0.049805    2.000000      -44.875000     1.0      -302.219727         False          False   True
8    -157.507812    -157.557617  5116.269775  -157.507812   46.875000  -157.557617   0.049805    0.000000      -46.875244     1.0      -302.219727         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=204787/1024.[0m
[08/10 16:13:30]  --------------------------------------------------------------------------------
[08/10 16:13:30]  Iteration: 130 (0 solution, 129 counterexamples)
[08/10 16:14:04]  Generator returned sat in 29.281897 secs.
[08/10 16:14:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:05]  Improved gap from 367/8 to 48.4375
[08/10 16:14:05]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 16:14:05]  Verifer returned sat in 0.796061 secs.
[08/10 16:14:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -521.017578    -521.117920  4726.705078  -521.017578  399.949951  -521.117920   0.050049    0.050293        0.050049     5.0      -521.117920            -1             -1     -1
1    -121.117920    -421.117920  4726.705078  -121.117920  399.949951  -421.117920   0.050049  299.949951      299.949707     1.0      -521.117920         False           True   True
2    -121.117920    -321.117920  4726.705078  -121.117920   53.487549  -321.117920   0.050049  199.949951      199.949707     2.0      -121.167969         False          False   True
3    -121.117920    -221.117920  4726.705078  -121.117920   53.437500  -221.117920   0.050049   99.949951       99.949707     3.0      -121.167969         False          False   True
4    -121.117920    -122.067627  4726.705078  -121.117920   52.437500  -122.067627   0.050049    0.899658       -0.050293     4.0      -121.167969         False          False   True
5     -70.580078    -121.117676  4776.217529   -70.580078   51.437500  -121.117676   0.050049   50.487549        0.000000     1.0      -121.167969         False          False   True
6     -70.580078     -70.630127  4827.780029   -70.580078   50.437500   -70.630127   0.050049    0.000000      -48.437500     2.0      -121.167969         False          False   True
7     -21.142578     -22.192627  4879.342529   -21.142578   49.437500   -22.192627   0.050049    1.000000      -47.437500     1.0      -121.167969         False          False   True
8      26.294922      26.244873  4879.342773    26.294922   48.437500    26.244873   0.050049    0.000000      -99.999756     1.0      -121.167969         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1228799/4096.[0m
[08/10 16:14:06]  --------------------------------------------------------------------------------
[08/10 16:14:06]  Iteration: 131 (0 solution, 130 counterexamples)
[08/10 16:14:31]  Generator returned sat in 21.424604 secs.
[08/10 16:14:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:32]  Improved gap from 0 to 100
[08/10 16:14:32]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:14:32]  Verifer returned sat in 0.713954 secs.
[08/10 16:14:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1276.172607     979.172363  3128.714844  1276.172607    0.049805   979.172363   0.049805  296.950439      199.250244     9.0       979.172363            -1             -1     -1
1    1276.172607    1076.872559  3128.714844  1276.172607  199.200195  1076.872559   0.049805  199.250244       99.250244     3.0       979.172363         False           True   True
2    1276.172607    1176.922607  3128.714844  1276.172607  199.200195  1176.922607   0.049805   99.200195       -0.749756     3.0       979.172363         False          False   True
3    1476.222168    1376.872559  3128.714844  1476.222168  299.249756  1376.872559   0.049805   99.299805       99.299805     1.0       979.172363         False          False   True
4    1576.272461    1376.922363  3128.714844  1576.272461  199.350098  1376.922363   0.100098  199.250000       99.299805     2.0       979.172363         False          False   True
5    1576.272461    1576.122314  3128.714844  1576.272461    2.000000  1576.122314   0.100098    0.050049       -0.700195     2.0       979.172363         False          False   True
6    1776.322266    1676.872314  3128.714844  1776.322266  200.099854  1676.872314   0.149902   99.300049       99.299805     1.0       979.172363         False          False   True
7    1776.322266    1776.122559  3128.714844  1776.322266    2.000000  1776.122559   0.149902    0.049805       -0.700195     2.0       979.172363         False          False   True
8    1976.372559    1776.872559  3128.714844  1976.372559  200.100098  1776.872559   0.200195  199.299805       99.299805     1.0       979.172363         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=101683/1024.[0m
[08/10 16:14:33]  --------------------------------------------------------------------------------
[08/10 16:14:33]  Iteration: 132 (0 solution, 131 counterexamples)
[08/10 16:14:47]  Generator returned sat in 9.705376 secs.
[08/10 16:14:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:48]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 16:14:48]  Verifer returned sat in 0.231332 secs.
[08/10 16:14:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1276.172607    1078.723389  3029.489502  1276.172607    0.012451  1078.723389   0.049805  197.399414      100.024902     9.0      1078.723389            -1             -1     -1
1    1276.172607    1276.097900  3029.489502  1276.172607    0.012451  1276.097900   0.049805    0.024902        0.024902     2.0      1078.723389         False           True   True
2    1276.172607    1276.097900  3029.489502  1276.172607    0.012451  1276.097900   0.049805    0.024902      -99.975098     2.0      1078.723389         False          False   True
3    1476.222168    1476.048096  3029.489502  1476.222168  200.074463  1476.048096   0.049805    0.124268        0.074463     1.0      1078.723389         False          False   True
4    1675.260254    1476.097900  3029.489502  1675.260254  199.162354  1476.097900   0.100098  199.062256       99.062256     2.0      1078.723389         False          False   True
5    1675.260254    1675.147705  3029.489502  1675.260254    2.000000  1675.147705   0.100098    0.012451       -0.937744     2.0      1078.723389         False          False   True
6    1875.272705    1676.872314  3029.489502  1875.272705  200.024902  1676.872314   0.112549  198.287842       99.062256     1.0      1078.723389         False          False   True
7    1875.272705    1875.147705  3029.489502  1875.272705    2.000000  1875.147705   0.112549    0.012451       -0.937744     2.0      1078.723389         False          False   True
8    2075.285156    1876.097900  3029.489502  2075.285156  200.024902  1876.097900   0.125000  199.062256       99.062256     1.0      1078.723389         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=405759/4096.[0m
[08/10 16:14:49]  --------------------------------------------------------------------------------
[08/10 16:14:49]  Iteration: 133 (0 solution, 132 counterexamples)
[08/10 16:15:39]  Generator returned sat in 45.386122 secs.
[08/10 16:15:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:15:39]  Improved gap from 0 to 0
[08/10 16:15:40]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 16:15:40]  Verifer returned sat in 0.649350 secs.
[08/10 16:15:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1974.610107    1674.710156  2530.876953  1974.610107  299.949951  1674.710156   0.000000  299.899951      299.899902     7.0      1674.710156            -1             -1   False
1    1974.660156    1674.760010  2530.876953  1974.660156  299.950000  1674.760010   0.050049  299.850098      199.899902     3.0      1674.710156         False          False   False
2    1974.760254    1874.709961  2530.876953  1974.760254  299.950195  1874.709961   0.050049  100.000244      100.000000     3.0      1674.710156         False          False    True
3    1974.760254    1874.710205  2530.876953  1974.760254    0.050049  1874.710205   0.050049  100.000000        0.000000     4.0      1974.710205         False          False    True
4    1974.760254    1974.710205  2630.876953  1974.760254    0.500000  1974.710205   0.050049    0.000000        0.000000     3.0      1974.710205         False          False    True
5    1975.260254    1974.710205  2730.376953  1975.260254    0.500000  1974.710205   0.050049    0.500000        0.000000     3.0      1974.710205         False          False    True
6    1975.260254    1975.210205  2830.376953  1975.260254    0.500000  1975.210205   0.050049    0.000000        0.000000     2.0      1974.710205         False          False    True
7    1975.760254    1975.659912  2929.876953  1975.760254    0.500000  1975.659912   0.050049    0.050293        0.000000     1.0      1974.710205         False          False    True
8    1976.209961    1975.710205  2929.876953  1976.209961    0.500000  1975.710205   0.050049    0.449707      -99.550293     2.0      1974.710205         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=409395/2048.[0m
[08/10 16:15:40]  --------------------------------------------------------------------------------
[08/10 16:15:40]  Iteration: 134 (0 solution, 133 counterexamples)
[08/10 16:16:03]  Generator returned sat in 18.003029 secs.
[08/10 16:16:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:16:03]  Improved gap from 0 to 100
[08/10 16:16:03]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 16:16:03]  Verifer returned sat in 0.419519 secs.
[08/10 16:16:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1973.160156    1873.310156  2530.876953  1973.160156      0.05  1873.310156       0.00    99.85           99.70     1.0      1873.310156            -1             -1    True
1    1973.510156    1973.210156  2530.876953  1973.510156    100.20  1973.210156       0.00     0.30            0.05     1.0      1873.310156         False          False    True
2    2073.410156    2073.360156  2530.876953  2073.410156    100.20  2073.360156       0.00     0.05           -0.05     1.0      1873.310156         False          False    True
3    2073.510156    2073.460156  2530.876953  2073.510156      0.15  2073.460156       0.00     0.05          -99.95     1.0      2073.510156         False          False    True
4    2273.610156    2272.660156  2530.876953  2273.610156    200.15  2272.660156       0.05     0.90            0.10     1.0      2073.510156         False          False    True
5    2273.710156    2273.610156  2530.876953  2273.710156      1.00  2273.610156       0.05     0.05          -99.80     1.0      2073.510156         False          False    True
6    2473.910156    2472.660156  2530.876953  2473.910156    200.25  2472.660156       0.35     0.90            0.10     1.0      2073.510156         False          False    True
7    2474.010156    2473.610156  2530.876953  2474.010156      1.00  2473.610156       0.35     0.05          -99.80     1.0      2073.510156         False          False    True
8    2674.910156    2573.460156  2530.876953  2674.910156    200.95  2573.460156       1.35   100.10            0.10     1.0      2073.510156         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/10.[0m
[08/10 16:16:04]  --------------------------------------------------------------------------------
[08/10 16:16:04]  Iteration: 135 (0 solution, 134 counterexamples)
[08/10 16:16:16]  Generator returned sat in 7.306628 secs.
[08/10 16:16:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:16:17]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 16:16:17]  Verifer returned sat in 0.167859 secs.
[08/10 16:16:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1973.159912    1873.347900  2530.876709  1973.159912    0.049805  1873.347900   0.000000   99.812012       99.699707     1.0      1873.347900            -1             -1    True
1    1973.510254    1973.172607  2530.876709  1973.510254  100.162354  1973.172607   0.000000    0.337646        0.050049     1.0      1873.347900         False          False    True
2    2073.410156    2073.322754  2530.876709  2073.410156  100.237549  2073.322754   0.000000    0.087402       -0.050049     1.0      1873.347900         False          False    True
3    2073.510254    2073.497803  2530.876709  2073.510254    0.187500  2073.497803   0.000000    0.012451      -99.949951     1.0      2073.510254         False          False    True
4    2273.647705    2273.084961  2530.876709  2273.647705  200.149902  2273.084961   0.087646    0.475098        0.099854     1.0      2073.510254         False          False    True
5    2273.672607    2273.572510  2530.876709  2273.672607    0.500000  2273.572510   0.087646    0.012451      -99.875244     1.0      2073.510254         False          False    True
6    2473.909912    2473.084961  2530.876709  2473.909912  200.249756  2473.084961   0.349854    0.475098        0.099854     1.0      2073.510254         False          False    True
7    2473.934814    2473.572510  2530.876709  2473.934814    0.500000  2473.572510   0.349854    0.012451      -99.875244     1.0      2073.510254         False          False    True
8    2674.409912    2573.460205  2530.876709  2674.409912  200.487549  2573.460205   0.849854  100.099854        0.099854     1.0      2073.510254         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=409/4096.[0m
[08/10 16:16:17]  --------------------------------------------------------------------------------
[08/10 16:16:17]  Iteration: 136 (0 solution, 135 counterexamples)
[08/10 16:17:28]  Generator returned sat in 66.667660 secs.
[08/10 16:17:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:17:30]  Improved number of small numbers from 67 to 74 out of a max of 113
[08/10 16:17:30]  Verifer returned sat in 1.344853 secs.
[08/10 16:17:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2523.093506    1037.008467  2530.876709  2523.093506  1486.085205  1037.008467    0.00000  1486.085039     1386.085039     7.0      1037.008467            -1             -1   False
1    2523.093506    1237.008467  2530.876709  2523.093506  1486.083750  1237.008467    0.00000  1286.085039     1286.085039     7.0      2523.093506         False          False   False
2    2723.090967    1337.008467  2530.876709  2723.090967  1486.082500  1337.008467    0.00125  1386.081250     1386.081250     8.0      2723.089717         False          False   False
3    2723.090967    1437.008467  2530.876709  2723.090967   544.041250  1437.008467    0.00125  1286.081250     1286.081250     9.0      2723.089717         False          False    True
4    2923.092217    1537.007217  2530.876709  2923.092217  1486.082500  1537.007217    0.00250  1386.082500     1386.081250     8.0      2723.089717         False           True   False
5    2923.092217    1537.008467  2530.876709  2923.092217     0.010000  1537.008467    0.00250  1386.081250     1286.081250     9.0      2723.089717         False          False    True
6    2923.092217    1737.008467  2530.876709  2923.092217   198.020000  1737.008467    0.00250  1186.081250     1186.081250     8.0      2723.089717         False           True   False
7    2923.092217    1737.008467  2530.876709  2923.092217   694.040000  1737.008467    0.00250  1186.081250     1086.081250     8.0      2723.089717         False          False   False
8    3323.092217    1937.008301  2530.876709  3323.092217  1586.081250  1937.008301    0.00250  1386.081416     1386.081250     9.0      2723.089717         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=221773/160.[0m
[08/10 16:17:31]  --------------------------------------------------------------------------------
[08/10 16:17:31]  Iteration: 137 (0 solution, 136 counterexamples)
[08/10 16:19:08]  Generator returned sat in 92.848913 secs.
[08/10 16:19:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:19:09]  Improved gap from 0 to 100
[08/10 16:19:09]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:19:09]  Verifer returned sat in 0.723332 secs.
[08/10 16:19:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1136.418213    1036.418457  2531.466553  1136.418213    0.100000  1036.418457   0.100098   99.899658       -0.100098     3.0      1036.418457            -1             -1     -1
1    1236.418457    1136.418457  2531.466553  1236.418457  199.899902  1136.418457   0.100098   99.899902       -0.099854     1.0      1036.418457         False           True   True
2    1336.318359    1236.418213  2531.466553  1336.318359  199.799805  1236.418213   0.100098   99.800049       -0.199951     1.0      1336.218262         False          False   True
3    1633.318115    1336.418213  2531.466553  1633.318115  396.799805  1336.418213   0.100098  296.799805      196.799805     1.0      1336.218262         False          False   True
4    1734.818115    1436.518311  2531.466553  1734.818115  398.299805  1436.518311   0.100098  298.199707      198.299805     2.0      1336.218262         False          False   True
5    1836.418213    1636.418213  2531.466553  1836.418213  399.799805  1636.418213   0.100098  199.899902      199.899902     2.0      1336.218262         False          False   True
6    2037.818115    1734.818359  2531.466553  2037.818115  401.299805  1734.818359   0.100098  302.899658      301.299805     2.0      1336.218262         False          False   True
7    2137.718262    1836.418213  2531.466553  2137.718262  402.799805  1836.418213   0.100098  301.199951      301.199951     2.0      1336.218262         False          False   True
8    2240.818115    1836.518066  2531.466553  2240.818115  404.299805  1836.518066   3.100098  401.199951      301.299805     3.0      1336.218262         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=308531/1024.[0m
[08/10 16:19:10]  --------------------------------------------------------------------------------
[08/10 16:19:10]  Iteration: 138 (0 solution, 137 counterexamples)
[08/10 16:19:37]  Generator returned sat in 22.811722 secs.
[08/10 16:19:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:19:38]  Improved gap from 21/100 to 48.4375
[08/10 16:19:38]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 16:19:38]  Verifer returned sat in 0.434228 secs.
[08/10 16:19:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1488.043213    1136.324463  2531.466553  1488.043213  451.71875  1136.324463    0.00000  351.71875       351.62500     4.0      1136.324463            -1             -1   False
1    1587.949463    1136.418213  2531.466553  1587.949463  451.62500  1136.418213   99.90625  351.62500       251.62500     4.0      1488.043213         False          False   False
2    1687.855713    1336.418213  2531.466553  1687.855713  451.53125  1336.418213   99.90625  251.53125       251.53125     4.0      1587.949463         False          False    True
3    1687.855713    1436.418213  2531.466553  1687.855713   55.93750  1436.418213   99.90625  151.53125       151.53125     5.0      1587.949463         False          False    True
4    1687.855713    1534.918213  2531.466553  1687.855713   54.43750  1534.918213   99.90625   53.03125        51.53125     3.0      1587.949463         False          False    True
5    1687.855713    1536.418213  2579.935303  1687.855713   52.93750  1536.418213   99.90625   51.53125         0.00000     4.0      1587.949463         False          False    True
6    1687.855713    1587.949463  2631.497803  1687.855713   51.43750  1587.949463   99.90625    0.00000       -48.43750     5.0      1587.949463         False          False    True
7    1737.793213    1636.386963  2683.060303  1737.793213   49.93750  1636.386963   99.90625    1.50000       -46.93750     1.0      1587.949463         False          False    True
8    1784.730713    1684.824463  2683.060303  1784.730713   48.43750  1684.824463   99.90625    0.00000      -100.00000     1.0      1587.949463         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2013/8.[0m
[08/10 16:19:39]  --------------------------------------------------------------------------------
[08/10 16:19:39]  Iteration: 139 (0 solution, 138 counterexamples)
[08/10 16:20:28]  Generator returned sat in 44.910822 secs.
[08/10 16:20:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:29]  Improved gap from 16001/8192 to 1.5625
[08/10 16:20:30]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 16:20:30]  Verifer returned sat in 0.858456 secs.
[08/10 16:20:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     882.208984     733.971680  2531.466064   882.208984  348.437500   733.971680    0.000000  148.237305      148.237061     9.0       733.971680            -1             -1     -1
1    1082.309082     733.971924  2531.466064  1082.309082  348.337402   733.971924  200.099854  148.237305       48.237305     3.0       882.209229         False           True  False
2    1282.409180     932.671875  2531.466064  1282.409180  348.337402   932.671875  300.199951   49.537354       48.237305     1.0       882.209229         False          False   True
3    1382.509277    1033.971924  2531.466064  1382.509277  149.637451  1033.971924  300.300049   48.237305       48.237305     1.0      1082.209229         False          False   True
4    1483.409424    1133.871582  2531.466064  1483.409424  149.137451  1133.871582  301.200195   48.337646       48.237305     1.0      1082.209229         False          False   True
5    1583.709229    1133.971924  2531.466064  1583.709229  148.637451  1133.971924  301.500000  148.237305       48.237305     2.0      1082.209229         False          False   True
6    1583.709229    1280.109375  2583.228760  1583.709229  148.137451  1280.109375  301.500000    2.099854        0.000000     2.0      1082.209229         False          False   True
7    1583.709229    1282.209229  2681.666260  1583.709229    2.000000  1282.209229  301.500000    0.000000       -1.562500     3.0      1082.209229         False          False   True
8    1585.709229    1283.771729  2681.666260  1585.709229    2.000000  1283.771729  301.500000    0.437500      -99.562500     1.0      1082.209229         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=49395/1024.[0m
[08/10 16:20:30]  --------------------------------------------------------------------------------
[08/10 16:20:30]  Iteration: 140 (0 solution, 139 counterexamples)
[08/10 16:20:41]  Generator returned sat in 6.480997 secs.
[08/10 16:20:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:42]  Improved gap from 1 to 0
[08/10 16:20:42]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 16:20:42]  Verifer returned sat in 0.849273 secs.
[08/10 16:20:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     727.936768     627.936523  2531.466064   727.936768  151.099854   627.936523   0.000000  100.000244       98.800293     5.0       627.936523            -1             -1   False
1     778.986572     727.986572  2531.466064   778.986572  151.050049   727.986572   0.000000   51.000000       49.850098     1.0       778.986572         False          False   False
2     878.986572     828.136475  2531.466064   878.986572  151.000000   828.136475   0.000000   50.850098       49.850098     1.0       878.986572         False          False   False
3     979.086426     928.636475  2531.466064   979.086426  150.949951   928.636475   0.050049   50.399902       49.899902     1.0       979.036377         False          False   False
4    1079.136475    1029.136475  2531.466064  1079.136475  150.449951  1029.136475   0.100098   49.899902       49.899902     1.0       979.036377         False          False    True
5    1179.186523    1029.186768  2531.466064  1179.186523  149.949951  1029.186768   0.150146  149.849609       49.899902     2.0       979.036377         False          False    True
6    1179.186523    1177.986816  2581.566162  1179.186523  149.449951  1177.986816   0.150146    1.049561        0.000000     2.0       979.036377         False          False    True
7    1179.186523    1179.036377  2681.566162  1179.186523    1.000000  1179.036377   0.150146    0.000000        0.000000     3.0       979.036377         False          False    True
8    1180.186523    1179.086426  2681.566162  1180.186523    1.000000  1179.086426   0.150146    0.949951      -99.000000     1.0       979.036377         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=102195/2048.[0m
[08/10 16:20:43]  --------------------------------------------------------------------------------
[08/10 16:20:43]  Iteration: 141 (0 solution, 140 counterexamples)
[08/10 16:21:42]  Generator returned sat in 54.201953 secs.
[08/10 16:21:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:21:43]  Improved gap from 0 to 46.875
[08/10 16:21:43]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 16:21:43]  Verifer returned sat in 0.930582 secs.
[08/10 16:21:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     736.536621     626.336426  2531.466064   736.536621    0.099854   626.336426   0.000000  110.200195      100.100342     8.0       626.336426            -1             -1     -1
1     736.536621     736.436279  2531.466064   736.536621  110.199951   736.436279   0.000000    0.100342        0.100342     9.0       626.336426         False           True  False
2     846.636230     818.636230  2531.466064   846.636230  110.199951   818.636230  10.000000   18.000000        0.199951     1.0       626.336426          True           True  False
3     938.736328     928.636230  2531.466064   938.736328  110.100098   928.636230  10.000000    0.100098       -7.699951     1.0       928.736328         False          False   True
4    1046.736328    1036.436279  2531.466064  1046.736328  108.100098  1036.436279  10.100098    0.199951        0.199951     1.0       928.736328         False          False   True
5    1102.586426    1038.636475  2575.316162  1102.586426   56.050049  1038.636475  10.100098   53.849854       -0.099854     1.0       928.736328         False          False   True
6    1102.786621    1092.586426  2628.440918  1102.786621   54.050049  1092.586426  10.100098    0.100098      -46.774902     1.0       928.736328         False          False   True
7    1154.736572    1139.461426  2681.565918  1154.736572   52.050049  1139.461426  10.100098    5.175049      -41.699951     1.0       928.736328         False          False   True
8    1199.611572    1186.336670  2681.566162  1199.611572   50.050049  1186.336670  10.100098    3.174805      -96.824707     1.0       928.736328         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 16:21:44]  --------------------------------------------------------------------------------
[08/10 16:21:44]  Iteration: 142 (0 solution, 141 counterexamples)
[08/10 16:22:03]  Generator returned sat in 14.740997 secs.
[08/10 16:22:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:22:05]  Improved number of small numbers from 89 to 89 out of a max of 113
[08/10 16:22:05]  Verifer returned sat in 1.167109 secs.
[08/10 16:22:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     936.536621     436.536621  2731.365723   936.536621     0.200000   436.536621    0.000000  500.000000      500.000000     9.0       436.536621            -1             -1     -1
1     936.536621     536.536621  2731.365723   936.536621     0.100000   536.536621    0.000000  400.000000      400.000000     7.0       936.536621         False           True  False
2    1036.736621     636.536621  2731.365723  1036.736621   500.200000   636.536621    0.100000  400.100000      400.100000     8.0       936.536621         False          False  False
3    1036.736621     702.272335  2731.365723  1036.736621   400.100000   702.272335    0.100000  334.364286      300.100000     8.0      1036.636621         False          False   True
4    1036.736621     790.033050  2731.365723  1036.736621   332.917857   790.033050    0.100000  246.603571      200.100000     7.0      1036.636621         False          False   True
5    1083.340193     836.536621  2731.365723  1083.340193   293.207143   836.536621    0.100000  246.703571      146.703571     8.0      1036.636621         False          False   True
6    1083.340193     936.536621  2731.365723  1083.340193   246.603571   936.536621    0.100000  146.703571       46.703571     9.0      1036.636621         False          False   True
7    1536.636621    1136.536621  2731.365723  1536.636621   600.000000  1136.536621    0.100000  400.000000      400.000000     1.0      1036.636621         False           True  False
8    2258.391978    1236.536621  2731.365723  2258.391978  1121.755357  1236.536621  621.755357  400.100000      400.100000     2.0      1036.636621         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=4001/10.[0m
[08/10 16:22:06]  --------------------------------------------------------------------------------
[08/10 16:22:06]  Iteration: 143 (0 solution, 142 counterexamples)
[08/10 16:24:10]  Generator returned sat in 119.322476 secs.
[08/10 16:24:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:24:11]  Improved gap from 0 to 100
[08/10 16:24:12]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 16:24:12]  Verifer returned sat in 1.528918 secs.
[08/10 16:24:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     836.741621     736.740907  2731.365479   836.741621    0.001465   736.740907   0.000714  100.000000      100.000000     9.0       736.740907            -1             -1     -1
1     836.741621     836.740907  2731.365479   836.741621    0.000732   836.740907   0.000714    0.000000        0.000000     5.0       836.740907         False           True   True
2    1036.736621     836.741621  2731.365479  1036.736621  199.995000   836.741621   0.001429  199.993571       99.994286     1.0       836.740907         False           True  False
3    1036.736621    1036.734121  2731.365479  1036.736621  100.010357  1036.734121   0.001429    0.001071       -0.005714     2.0      1036.735193         False          False   True
4    1236.737335    1036.740907  2731.365479  1236.737335  200.001786  1036.740907   0.002143  199.994286       99.994286     1.0      1036.735193         False           True  False
5    1236.737335    1236.734478  2731.365479  1236.737335    0.010000  1236.734478   0.002143    0.000714       -0.005714     2.0      1036.735193         False          False   True
6    1436.738050    1336.740723  2731.365479  1436.738050  200.001429  1336.740723   0.002857   99.994470       99.994286     1.0      1436.735193          True           True  False
7    1436.738050    1436.734478  2731.365479  1436.738050    0.010000  1436.734478   0.002857    0.000714       -0.005714     2.0      1436.735193         False          False   True
8    1636.739121    1436.740967  2731.365479  1636.739121  200.001786  1436.740967   0.003929  199.994226       99.994286     1.0      1436.735193         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=17499/175.[0m
[08/10 16:24:12]  --------------------------------------------------------------------------------
[08/10 16:24:12]  Iteration: 144 (0 solution, 143 counterexamples)
[08/10 16:24:48]  Generator returned sat in 30.593915 secs.
[08/10 16:24:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:24:49]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 16:24:49]  Verifer returned sat in 0.401669 secs.
[08/10 16:24:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1036.781006     736.781006  2731.365479  1036.781006  599.149902   736.781006   0.050049  299.949951      199.949951     8.0       736.781006            -1             -1     -1
1    1335.981201     936.730957  2731.365479  1335.981201  599.150146   936.730957   0.050049  399.200195      399.150146     9.0       736.781006         False          False   True
2    1435.980957     936.781006  2731.365479  1435.980957  499.199951   936.781006   0.050049  499.149902      399.149902     4.0      1435.930908          True           True  False
3    1435.980957    1036.781006  2731.365479  1435.980957  495.149902  1036.781006   0.050049  399.149902      299.149902     3.0      1435.930908         False          False  False
4    1532.980957    1139.581055  2731.365479  1532.980957  496.149902  1139.581055   0.050049  393.349854      296.149902     4.0      1435.930908         False          False  False
5    1636.781006    1236.781006  2731.365479  1636.781006  497.149902  1236.781006   0.050049  399.949951      299.949951     5.0      1435.930908         False          False  False
6    1734.980957    1436.781006  2731.365479  1734.980957  498.149902  1436.781006   0.050049  298.149902      298.149902     3.0      1435.930908         False          False  False
7    1935.980957    1535.881104  2731.365479  1935.980957  499.149902  1535.881104   0.050049  400.049805      399.149902     3.0      1435.930908         False          False  False
8    2036.081055    1636.781006  2731.365479  2036.081055  500.149902  1636.781006   0.099854  399.200195      399.200195     3.0      1435.930908         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=408781/1024.[0m
[08/10 16:24:49]  --------------------------------------------------------------------------------
[08/10 16:24:49]  Iteration: 145 (0 solution, 144 counterexamples)
[08/10 16:26:15]  Generator returned sat in 80.950905 secs.
[08/10 16:26:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:26:16]  Improved number of small numbers from 82 to 113 out of a max of 113
[08/10 16:26:16]  Verifer returned sat in 0.313006 secs.
[08/10 16:26:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     936.831055     736.780762  2731.365234   936.831055    0.024902   736.780762   0.049805  200.000488      200.000244     7.0       736.780762            -1             -1     -1
1     936.831055     836.781006  2731.365234   936.831055    0.024902   836.781006   0.049805  100.000244      100.000244     4.0       736.780762         False           True   True
2     936.831055     936.755859  2731.365234   936.831055    0.025146   936.755859   0.049805    0.025391        0.000244     3.0       736.780762         False          False   True
3    1336.830811     936.781006  2731.365234  1336.830811  400.025146   936.781006   0.049805  400.000000      300.000000     4.0       736.780762         False          False   True
4    1336.855957    1036.781006  2731.365234  1336.855957  400.025146  1036.781006   0.049805  300.025146      200.025146     2.0       736.780762         False          False   True
5    1436.855957    1236.781006  2731.365234  1436.855957  400.025146  1236.781006   0.049805  200.025146      200.025146     3.0       736.780762         False          False   True
6    1636.855957    1236.781006  2731.365234  1636.855957  400.025146  1236.781006   0.049805  400.025146      300.025146     3.0       736.780762         False          False   True
7    1636.855957    1436.781006  2731.365234  1636.855957  400.025146  1436.781006   0.049805  200.025146      200.025146     3.0       736.780762         False          False   True
8    1836.855957    1536.781006  2731.365234  1836.855957  400.025146  1536.781006   0.049805  300.025146      300.025146     3.0       736.780762         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1229005/4096.[0m
[08/10 16:26:16]  --------------------------------------------------------------------------------
[08/10 16:26:16]  Iteration: 146 (0 solution, 145 counterexamples)
[08/10 16:27:13]  Generator returned sat in 52.152924 secs.
[08/10 16:27:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:27:14]  Improved gap from 0 to 100
[08/10 16:27:14]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 16:27:14]  Verifer returned sat in 0.558599 secs.
[08/10 16:27:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     446.780762     446.706299  2731.365234   446.780762    0.012451   446.706299   0.049805    0.024658        0.024658     3.0       446.706299            -1             -1     -1
1     446.780762     446.706299  2731.365234   446.780762    0.012451   446.706299   0.049805    0.024658      -99.975342     3.0       446.706299         False          False   True
2    1041.855713     557.593994  2731.365234  1041.855713  595.099609   557.593994   0.049805  484.211914      395.099609     1.0       446.706299         False          False   True
3    1041.855713     646.706299  2731.365234  1041.855713  396.087158   646.706299   0.049805  395.099609      295.099609     2.0      1041.805908         False          False   True
4    1041.855713     747.706055  2731.365234  1041.855713  395.087158   747.706055   0.049805  294.099854      195.099609     3.0      1041.805908         False          False   True
5    1141.843018     946.706055  2731.365234  1141.843018  394.087158   946.706055   0.049805  195.087158      195.086914     4.0      1041.805908         False          False   True
6    1339.855469    1046.706299  2731.365234  1339.855469  393.099609  1046.706299   0.049805  293.099365      293.099365     2.0      1041.805908         False           True  False
7    1444.805908    1146.706055  2731.365234  1444.805908  398.049805  1146.706055   0.049805  298.050049      298.049805     2.0      1041.805908         False          False  False
8    1546.780762    1146.718750  2731.365234  1546.780762  400.024902  1146.718750   0.049805  400.012207      300.024658     3.0      1041.805908         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=809189/2048.[0m
[08/10 16:27:15]  --------------------------------------------------------------------------------
[08/10 16:27:15]  Iteration: 147 (0 solution, 146 counterexamples)
[08/10 16:27:46]  Generator returned sat in 25.678196 secs.
[08/10 16:27:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:27:47]  Improved gap from 1/600 to 48.4375
[08/10 16:27:48]  Improved number of small numbers from 73 to 110 out of a max of 114
[08/10 16:27:48]  Verifer returned sat in 2.011788 secs.
[08/10 16:27:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1269.545654     844.428467  2333.632324  1269.545654    0.010254   844.428467        0.0  425.117188      425.106689     6.0       844.428467            -1             -1    True
1    1269.545654     844.439209  2333.632324  1269.545654    0.010498   844.439209        0.0  425.106445      325.106689     6.0       844.428467         False          False    True
2    1269.545898    1044.438965  2333.632324  1269.545898  425.106689  1044.438965        0.0  225.106934      225.106934     5.0       844.428467         False          False    True
3    1269.545898    1144.438965  2333.632324  1269.545898  106.552083  1144.438965        0.0  125.106934      125.106934     5.0      1269.545898         False          False    True
4    1269.545898    1244.397380  2333.632324  1269.545898   52.276042  1244.397380        0.0   25.148519       25.106934     6.0      1269.545898         False          False    True
5    1269.545898    1244.438965  2380.570068  1269.545898   25.138021  1244.438965        0.0   25.106934      -27.955322     7.0      1269.545898         False          False    True
6    1345.938965    1297.501465  2432.132324  1345.938965  101.500000  1297.501465        0.0   48.437500        0.000000     1.0      1269.545898         False           True   False
7    1375.532715    1345.949463  2483.684326  1375.532715   78.031250  1345.949463        0.0   29.583252      -18.854248     1.0      1269.545898         False          False   False
8    1398.225505    1394.386963  2535.246826  1398.225505   52.276042  1394.386963        0.0    3.838542      -44.598958     1.0      1269.545898         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=665819/2048.[0m
[08/10 16:27:49]  --------------------------------------------------------------------------------
[08/10 16:27:49]  Iteration: 148 (0 solution, 147 counterexamples)
[08/10 16:28:16]  Generator returned sat in 22.346119 secs.
[08/10 16:28:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:16]  Improved gap from 0 to 39.0625
[08/10 16:28:17]  Improved number of small numbers from 94 to 114 out of a max of 114
[08/10 16:28:17]  Verifer returned sat in 0.453518 secs.
[08/10 16:28:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     975.083252     974.983154  2203.088379   975.083252  194.612549   974.983154   0.050049    0.050049        0.050049     2.0       974.983154            -1             -1     -1
1    1169.595459    1074.982910  2203.088379  1169.595459  194.562256  1074.982910   0.050049   94.562500       94.562256     1.0      1169.545410         False          False   True
2    1269.595459    1169.545410  2203.088379  1269.595459  194.562500  1169.545410   0.050049  100.000000       94.562256     2.0      1169.545410         False          False   True
3    1269.595459    1269.495605  2203.088379  1269.595459   73.775146  1269.495605   0.050049    0.049805       -5.437744     2.0      1269.545410         False          False   True
4    1342.320801    1342.220459  2203.088379  1342.320801   72.775146  1342.220459   0.050049    0.050293      -32.712402     1.0      1269.545410         False          False   True
5    1414.045654    1374.983154  2264.025879  1414.045654   71.775146  1374.983154   0.050049   39.012451       -0.050049     1.0      1269.545410         False          False   True
6    1445.808350    1414.045654  2324.963379  1445.808350   70.775146  1414.045654   0.050049   31.712646       -7.349854     1.0      1269.545410         False          False   True
7    1483.870850    1453.108154  2385.900879  1483.870850   69.775146  1453.108154   0.050049   30.712646       -8.349854     1.0      1269.545410         False          False   True
8    1521.933350    1492.170654  2446.838135  1521.933350   68.775146  1492.170654   0.050049   29.712646       -9.350098     1.0      1269.545410         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=387533/4096.[0m
[08/10 16:28:17]  --------------------------------------------------------------------------------
[08/10 16:28:17]  Iteration: 149 (0 solution, 148 counterexamples)
[08/10 16:28:32]  Generator returned sat in 10.244835 secs.
[08/10 16:28:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:34]  Improved gap from 617/16 to 39.0625
[08/10 16:28:34]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 16:28:34]  Verifer returned sat in 1.100215 secs.
[08/10 16:28:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     930.393311     830.493164  2203.088379   930.393311  194.612549   830.493164   0.000000  99.900146       99.900146     2.0       830.493164            -1             -1   False
1    1025.005615     930.493164  2203.088379  1025.005615  194.512451   930.493164   0.099854  94.412598       94.412598     1.0      1024.905762         False          False   False
2    1124.905518    1025.005615  2203.088379  1124.905518  194.312500  1025.005615   0.099854  99.800049       94.312500     1.0      1124.805664         False          False    True
3    1124.905518    1124.705566  2203.088379  1124.905518   74.675049  1124.705566   0.099854   0.100098       -5.687500     2.0      1124.805664         False          False    True
4    1197.980469    1197.780762  2203.088379  1197.980469   73.175049  1197.780762   0.099854   0.099854      -32.612549     1.0      1124.805664         False          False    True
5    1269.555664    1230.493164  2264.025879  1269.555664   71.675049  1230.493164   0.099854  38.962646       -0.099854     1.0      1124.805664         False          False    True
6    1300.768066    1269.555664  2324.963379  1300.768066   70.175049  1269.555664   0.099854  31.112549       -7.949951     1.0      1124.805664         False          False    True
7    1338.330566    1308.618164  2385.900635  1338.330566   68.675049  1308.618164   0.099854  29.612549       -9.450195     1.0      1124.805664         False          False    True
8    1375.893066    1347.680908  2446.838135  1375.893066   67.175049  1347.680908   0.099854  28.112305      -10.950195     1.0      1124.805664         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=193357/2048.[0m
[08/10 16:28:34]  --------------------------------------------------------------------------------
[08/10 16:28:34]  Iteration: 150 (0 solution, 149 counterexamples)
[08/10 16:28:46]  Generator returned sat in 6.636921 secs.
[08/10 16:28:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:47]  Improved gap from 153857/4096 to 39.0625
[08/10 16:28:47]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:28:47]  Verifer returned sat in 1.018560 secs.
[08/10 16:28:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     868.598145     674.685791  2265.083252   868.598145  256.412598   674.685791        0.0  193.912354      100.099854     2.0       674.685791            -1             -1    True
1     868.598145     868.498291  2265.083252   868.598145  193.812256   868.498291        0.0    0.099854        0.099854     2.0       868.598145         False          False    True
2    1062.310791     868.498291  2265.083252  1062.310791  193.812500   868.498291        0.0  193.812500       93.812500     2.0       868.598145         False          False    True
3    1062.310791    1062.210693  2265.083252  1062.310791   75.675049  1062.210693        0.0    0.100098       -6.187500     2.0      1062.310791         False          False    True
4    1135.885742    1135.785645  2265.083252  1135.885742   73.675049  1135.785645        0.0    0.100098      -32.612549     1.0      1062.310791         False          False    True
5    1207.460693    1168.498291  2326.020752  1207.460693   71.675049  1168.498291        0.0   38.962402       -0.100098     1.0      1062.310791         False          False    True
6    1238.173340    1207.560791  2386.958252  1238.173340   69.675049  1207.560791        0.0   30.612549       -8.449951     1.0      1062.310791         False          False    True
7    1275.235840    1246.623291  2447.895752  1275.235840   67.675049  1246.623291        0.0   28.612549      -10.449951     1.0      1062.310791         False          False    True
8    1312.298340    1285.685791  2508.833252  1312.298340   65.675049  1285.685791        0.0   26.612549      -12.449951     1.0      1062.310791         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=384665/4096.[0m
[08/10 16:28:48]  --------------------------------------------------------------------------------
[08/10 16:28:48]  Iteration: 151 (0 solution, 150 counterexamples)
[08/10 16:29:23]  Generator returned sat in 29.636248 secs.
[08/10 16:29:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:29:23]  Improved gap from 0 to 100
[08/10 16:29:24]  Improved number of small numbers from 62 to 70 out of a max of 114
[08/10 16:29:24]  Verifer returned sat in 1.292972 secs.
[08/10 16:29:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1171.857666     971.907458  2061.674085  1171.857666   256.412598   971.907458        0.0   199.950208      199.950208     1.0       971.907458            -1             -1    True
1    1171.857666     971.907458  2061.674085  1171.857666     0.049805   971.907458        0.0   199.950208       99.950208     1.0      1171.857666         False          False    True
2    1211.810791    1171.907458  2061.674085  1211.810791   239.903333  1171.907458        0.0    39.903333       39.903333     1.0      1171.857666         False          False    True
3    1211.910791    1211.860791  2061.674085  1211.910791    40.003333  1211.860791        0.0     0.050000      -59.996667     1.0      1211.910791         False          False    True
4    1291.867458    1291.867458  2061.674085  1291.867458    80.006667  1291.867458        0.0     0.000000      -80.040000     1.0      1211.910791         False          False    True
5    1451.880791    1451.830791  2061.674085  1451.880791   160.013333  1451.830791        0.0     0.050000      -20.026667     1.0      1211.910791         False          False    True
6    1771.857458    1571.907458  2061.674085  1771.857458   320.026667  1571.907458        0.0   199.950000      199.950000     1.0      1211.910791         False          False    True
7    2211.960791    1571.907458  2061.674085  2211.960791   640.053333  1571.907458        0.0   640.053333      540.053333     1.0      1211.910791         False          False    True
8    2852.014124    1771.907227  2061.674085  2852.014124  1280.106667  1771.907227        0.0  1080.106898     1080.106667     2.0      1211.910791         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2212161/2048.[0m
[08/10 16:29:25]  --------------------------------------------------------------------------------
[08/10 16:29:25]  Iteration: 152 (0 solution, 151 counterexamples)
[08/10 16:30:18]  Generator returned sat in 47.962571 secs.
[08/10 16:30:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:19]  Improved gap from 0 to 0
[08/10 16:30:19]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:30:19]  Verifer returned sat in 0.820843 secs.
[08/10 16:30:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     849.031006     849.031006  2061.674072   849.031006    0.024902   849.031006   0.000000    0.000000       -0.174805     1.0       849.031006            -1             -1   False
1     949.180908     949.156006  2061.674072   949.180908  100.149902   949.156006   0.000000    0.024902       -0.024902     1.0       849.031006         False          False   False
2    1049.281006    1049.205811  2061.674072  1049.281006  100.125000  1049.205811   0.025146    0.050049        0.050049     1.0      1049.255859         False          False   False
3    1153.281006    1149.205811  2061.674072  1153.281006  104.050049  1149.205811   4.025146    0.050049        0.050049     1.0      1049.255859         False          False    True
4    1255.281006    1149.205811  2061.674072  1255.281006  102.050049  1149.205811   6.025146  100.050049        0.050049     1.0      1049.255859         False          False    True
5    1255.281006    1249.230713  2161.599121  1255.281006  100.050049  1249.230713   6.025146    0.025146       -0.024902     2.0      1049.255859         False          False    True
6    1255.755859    1249.280762  2261.148926  1255.755859    0.500000  1249.280762   6.025146    0.449951       -0.000244     1.0      1049.255859         False          False    True
7    1255.805908    1249.755859  2361.098877  1255.805908    0.500000  1249.755859   6.025146    0.024902       -0.000244     1.0      1049.255859         False          False    True
8    1256.281006    1249.805908  2361.098877  1256.281006    0.500000  1249.805908   6.025146    0.449951      -99.525146     1.0      1049.255859         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=205/4096.[0m
[08/10 16:30:20]  --------------------------------------------------------------------------------
[08/10 16:30:20]  Iteration: 153 (0 solution, 152 counterexamples)
[08/10 16:30:34]  Generator returned sat in 8.538334 secs.
[08/10 16:30:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:34]  Improved gap from 1/800 to 100
[08/10 16:30:34]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 16:30:34]  Verifer returned sat in 0.355186 secs.
[08/10 16:30:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     849.255859     849.255859  2061.674072   849.255859     200.0   849.255859        0.0      0.0             0.0     3.0       849.255859            -1             -1    True
1    1049.255859     849.255859  2061.674072  1049.255859     200.0   849.255859        0.0    200.0           100.0     3.0       849.255859         False          False    True
2    1049.255859     949.255859  2061.674072  1049.255859     199.9   949.255859        0.0    100.0             0.0     2.0      1049.255859         False          False    True
3    1446.955859    1049.255859  2061.674072  1446.955859     497.7  1049.255859        0.0    397.7           297.7     3.0      1049.255859         False          False    True
4    1547.455859    1249.255859  2061.674072  1547.455859     498.2  1249.255859        0.0    298.2           298.2     2.0      1049.255859         False          False    True
5    1747.955859    1249.255859  2061.674072  1747.955859     498.7  1249.255859        0.0    498.7           398.7     2.0      1049.255859         False          False    True
6    1748.455859    1448.255859  2061.674072  1748.455859     499.2  1448.255859        0.0    300.2           299.2     3.0      1049.255859         False          False    True
7    1947.955859    1547.855859  2061.674072  1947.955859     499.7  1547.855859        0.0    400.1           398.7     3.0      1049.255859         False          False    True
8    2048.055859    1549.255859  2061.674072  2048.055859     500.2  1549.255859        0.1    498.7           398.7     4.0      1049.255859         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3987/10.[0m
[08/10 16:30:35]  --------------------------------------------------------------------------------
[08/10 16:30:35]  Iteration: 154 (0 solution, 153 counterexamples)
[08/10 16:31:07]  Generator returned sat in 27.292206 secs.
[08/10 16:31:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:31:08]  Improved gap from 1/1200 to 39.0625
[08/10 16:31:09]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 16:31:09]  Verifer returned sat in 0.927473 secs.
[08/10 16:31:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     575.530762     575.530762  2061.674072   575.530762    0.050000   575.530762        0.0    0.000000       -0.149658     2.0       575.530762            -1             -1    True
1     871.143066     575.680664  2061.674072   871.143066  295.612305   575.680664        0.0  295.462402      195.462646     1.0       575.530762         False          False    True
2     871.243164     775.680420  2061.674072   871.243164  295.562500   775.680420        0.0   95.562744       95.562744     2.0       871.243164         False          False    True
3     871.243164     871.192871  2061.674072   871.243164   71.775146   871.192871        0.0    0.050293       -4.437256     2.0       871.243164         False          False    True
4     942.968018     942.917969  2061.674072   942.968018   71.775146   942.917969        0.0    0.050049      -32.712402     1.0       871.243164         False          False    True
5    1014.693115     975.680420  2122.611572  1014.693115   71.775146   975.680420        0.0   39.012695       -0.049805     1.0       871.243164         False          False    True
6    1047.455566    1014.743164  2183.548828  1047.455566   71.775146  1014.743164        0.0   32.712402       -6.350098     1.0       871.243164         False          False    True
7    1086.518311    1053.805664  2244.486328  1086.518311   71.775146  1053.805664        0.0   32.712646       -6.349854     1.0       871.243164         False          False    True
8    1125.580811    1092.868164  2244.486572  1125.580811   71.775146  1092.868164        0.0   32.712646      -67.287109     1.0       871.243164         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=800819/4096.[0m
[08/10 16:31:09]  --------------------------------------------------------------------------------
[08/10 16:31:09]  Iteration: 155 (0 solution, 154 counterexamples)
[08/10 16:31:24]  Generator returned sat in 9.375982 secs.
[08/10 16:31:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:31:25]  Improved gap from 79027/2048 to 39.0625
[08/10 16:31:25]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 16:31:25]  Verifer returned sat in 1.038434 secs.
[08/10 16:31:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -278.299316    -278.299316  2061.674072  -278.299316  200.150000  -278.299316   0.000000    0.000000       -0.199951     2.0      -278.299316            -1             -1    True
1     -78.149170    -178.099609  2061.674072   -78.149170  200.150146  -178.099609   0.000000   99.950439       99.950195     1.0      -278.299316         False          False    True
2      22.000488     -78.099609  2061.674072    22.000488  200.100098   -78.099609   0.049805  100.050293      100.050049     1.0        21.950684         False          False    True
3      22.000488      21.900635  2061.674072    22.000488   72.775146    21.900635   0.049805    0.050049        0.050049     2.0        21.950684         False          False    True
4      94.225586      89.138184  2061.674072    94.225586   72.275146    89.138184   0.049805    5.037598      -27.724854     1.0        21.950684         False          False    True
5     160.963135     121.900635  2122.611572   160.963135   71.775146   121.900635   0.049805   39.012695       -0.049805     1.0        21.950684         False          False    True
6     193.225586     160.963135  2183.549072   193.225586   71.275146   160.963135   0.049805   32.212646       -6.849854     1.0        21.950684         False          False    True
7     231.788086     200.025635  2244.486572   231.788086   70.775146   200.025635   0.049805   31.712646       -7.349854     1.0        21.950684         False          False    True
8     270.350586     239.088135  2244.486572   270.350586   70.275146   239.088135   0.049805   31.212646      -68.787354     1.0        21.950684         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=409805/4096.[0m
[08/10 16:31:26]  --------------------------------------------------------------------------------
[08/10 16:31:26]  Iteration: 156 (0 solution, 155 counterexamples)
[08/10 16:31:44]  Generator returned sat in 13.045277 secs.
[08/10 16:31:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:31:45]  Improved gap from 1/10 to 35.9375
[08/10 16:31:46]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 16:31:46]  Verifer returned sat in 1.171280 secs.
[08/10 16:31:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -473.724609    -473.924561  1858.198975  -473.724609  100.100000  -473.924561   0.099854   0.100098        0.099854     1.0      -473.924561            -1             -1     -1
1    -373.724609    -373.924316  1858.198975  -373.724609  100.100098  -373.924316   0.099854   0.099854        0.099854     1.0      -473.924561         False          False   True
2    -337.987061    -373.924316  1922.261475  -337.987061   35.837402  -373.924316   0.099854  35.837402       -0.100098     1.0      -338.086914         False          False   True
3    -292.924316    -337.986816  1943.461670  -292.924316   80.900146  -337.986816   0.099854  44.962646      -33.837158     1.0      -338.086914         False          False   True
4    -258.986816    -259.186768  2007.523926  -258.986816   78.900146  -259.186768   0.099854   0.100098      -35.837402     1.0      -338.086914         False          False   True
5    -182.186768    -220.124512  2066.461670  -182.186768   76.900146  -220.124512   0.099854  37.837891       -0.099609     1.0      -338.086914         False          False   True
6    -145.124512    -182.187012  2129.499023  -145.124512   74.900146  -182.187012   0.099854  36.962646        0.000000     1.0      -338.086914         False          False   True
7    -109.187012    -145.224365  2193.561523  -109.187012   72.900146  -145.224365   0.099854  35.937500        0.000000     2.0      -338.086914         False          False   True
8    -109.187012    -109.286865  2257.624023  -109.187012    1.500000  -109.286865   0.099854   0.000000      -35.937500     2.0      -109.286865          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 16:31:46]  --------------------------------------------------------------------------------
[08/10 16:31:46]  Iteration: 157 (0 solution, 156 counterexamples)
[08/10 16:32:51]  Generator returned sat in 58.899611 secs.
[08/10 16:32:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:32:52]  Improved gap from 89865/4096 to 100
[08/10 16:32:53]  Improved number of small numbers from 99 to 99 out of a max of 114
[08/10 16:32:53]  Verifer returned sat in 1.937988 secs.
[08/10 16:32:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -373.824609    -577.524609  1861.799268  -373.824609    0.100000  -577.524609        0.0  203.700000      103.700000     9.0      -577.524609            -1             -1     -1
1    -373.724609    -377.524609  1861.799268  -373.724609  203.800000  -377.524609        0.1    3.700000        3.700000     9.0      -577.524609         False           True  False
2    -273.824609    -377.524609  1861.799268  -273.824609  103.600000  -377.524609        0.1  103.600000        3.600000     9.0      -273.924609          True           True   True
3    -173.824609    -177.524609  1861.799268  -173.824609  203.600000  -177.524609        0.1    3.600000        3.600000     1.0      -273.924609         False           True  False
4     -73.624609     -77.524609  1861.799268   -73.624609  103.800000   -77.524609        0.2    3.700000        3.700000     1.0      -273.924609         False          False  False
5     -23.424609     -40.324609  1861.799268   -23.424609   53.900000   -40.324609        0.2   16.700000      -46.100000     1.0      -273.924609         False          False   True
6     126.475391     107.808724  1861.799268   126.475391  166.600000   107.808724        0.3   18.366667        3.700000     1.0      -273.924609         False          False   True
7     193.408724     193.008724  1861.799268   193.408724   85.300000   193.008724        0.3    0.100000      -29.366667     1.0      -273.924609         False          False   True
8     326.575391     222.475391  1861.799268   326.575391  133.266667   222.475391        0.4  103.700000        3.700000     1.0      -273.924609         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=37/10.[0m
[08/10 16:32:53]  --------------------------------------------------------------------------------
[08/10 16:32:53]  Iteration: 158 (0 solution, 157 counterexamples)
[08/10 16:35:34]  Generator returned sat in 154.788572 secs.
[08/10 16:35:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:36]  Improved gap from 0 to 23.4375
[08/10 16:35:36]  Improved number of small numbers from 78 to 99 out of a max of 114
[08/10 16:35:36]  Verifer returned sat in 2.330220 secs.
[08/10 16:35:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -243.674316    -443.574463  1727.849121  -243.674316    0.099854  -443.574463     0.0000  199.900146       99.900146     2.0      -443.574463            -1             -1   False
1    -223.137207    -243.574463  1727.849121  -223.137207  220.437256  -243.574463     0.0000   20.437256       20.437256     1.0      -443.574463         False          False   False
2    -199.599365    -223.036865  1783.874023  -199.599365   43.975098  -223.036865     0.0000   23.437500        0.000000     1.0      -199.599365         False          False   False
3    -199.399414    -199.499463  1783.874121  -199.399414   23.637451  -199.499463     0.0000    0.100049      -99.799951     1.0      -199.399414         False          False   False
4      44.575537       0.400537  1783.874121    44.575537  244.075000     0.400537    20.7375   23.437500       23.437500     1.0      -199.399414         False          False   False
5     144.675537      23.938232  1783.874121   144.675537  123.537500    23.938232    20.8375   99.899805       23.437500     1.0      -199.399414         False          False    True
6     144.675537     100.400537  1860.436621   144.675537   63.268750   100.400537    20.8375   23.437500        0.000000     2.0      -199.399414         False          False    True
7     144.675537     123.838037  1936.999023   144.675537    1.000000   123.838037    20.8375    0.000000      -23.437598     3.0      -199.399414         False          False    True
8     268.113037     147.275635  1936.999023   268.113037  123.437500   147.275635    20.8375   99.999902       -0.000098     1.0       247.275537          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 16:35:37]  --------------------------------------------------------------------------------
[08/10 16:35:37]  Iteration: 159 (0 solution, 158 counterexamples)
[08/10 16:36:36]  Generator returned sat in 53.755995 secs.
[08/10 16:36:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:37]  Improved gap from 791/80 to 23.4375
[08/10 16:36:38]  Improved number of small numbers from 60 to 70 out of a max of 114
[08/10 16:36:38]  Verifer returned sat in 1.756815 secs.
[08/10 16:36:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      47.140625    -152.809463  1437.084121    47.140625      0.05  -152.809463       0.00  199.950088       99.950088     9.0      -152.809463            -1             -1     -1
1      47.340537      47.190537  1437.084121    47.340537    200.15    47.190537       0.05    0.100000        0.100000     1.0      -152.809463         False           True  False
2     147.290537     147.190537  1437.084121   147.290537    100.05   147.190537       0.05    0.050000        0.050000     1.0       147.240537         False          False   True
3     962.040537     147.190537  1437.084121   962.040537    814.80   147.190537     714.75  100.100000        0.100000     1.0       147.240537         False          False   True
4    1270.340537     347.190537  1437.084121  1270.340537    408.40   347.190537     923.05    0.100000        0.100000     1.0       147.240537         False          False   True
5    1475.440537     347.190674  1437.084121  1475.440537    205.20   347.190674    1028.15  100.099863        0.100000     2.0       147.240537         False          False   True
6    1478.940674     447.340537  1513.496582  1478.940674    103.60   447.340537    1028.15    3.450137      -19.987402     1.0       147.240537         False          False   True
7    1525.290537     470.778076  1587.134121  1525.290537     49.80   470.778076    1028.15   26.362461        0.000000     1.0       147.240537         False          False   True
8    1525.290537     497.140537  1587.134277  1525.290537     22.90   497.140537    1028.15    0.000000      -99.999844     2.0       147.240537         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/10 16:36:39]  --------------------------------------------------------------------------------
[08/10 16:36:39]  Iteration: 160 (0 solution, 159 counterexamples)
[08/10 16:37:17]  Generator returned sat in 33.091058 secs.
[08/10 16:37:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:18]  Improved gap from 1/1200 to 0
[08/10 16:37:19]  Improved number of small numbers from 60 to 93 out of a max of 114
[08/10 16:37:19]  Verifer returned sat in 1.507598 secs.
[08/10 16:37:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     375.840332     275.840332  1108.434082   375.840332    0.100000   275.840332        0.0  100.000000       99.999756     5.0       275.840332            -1             -1   False
1     375.840332     375.740479  1108.434121   375.840332    0.100000   375.740479        0.0    0.099854       -0.000205     5.0       275.840332         False          False   False
2     475.840332     375.840537  1108.434121   475.840332  100.099854   375.840537        0.0   99.999795       -0.000205     1.0       275.840332         False          False   False
3     962.040537     575.840537  1108.434121   962.040537  586.200000   575.840537      386.0    0.200000        0.200000     1.0       275.840332         False          False   False
4    1256.440537     627.340537  1108.434121  1256.440537  294.600000   627.340537      580.4   48.700000        0.200000     1.0       275.840332         False          False    True
5    1356.540537     700.340537  1108.434121  1356.540537  148.800000   700.340537      580.5   75.700000        0.200000     1.0       275.840332         False          False    True
6    1356.740537     776.140625  1208.033936  1356.740537   75.900000   776.140625      580.5    0.099912       -0.000186     1.0       275.840332         False          False    True
7    1357.640625     776.340576  1307.134033  1357.640625    1.000000   776.340576      580.5    0.800049        0.000000     1.0       275.840332         False          False    True
8    1357.840576     777.240723  1307.134033  1357.840576    1.000000   777.240723      580.5    0.099854      -99.800049     1.0       275.840332         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/5.[0m
[08/10 16:37:19]  --------------------------------------------------------------------------------
[08/10 16:37:19]  Iteration: 161 (0 solution, 160 counterexamples)
[08/10 16:38:05]  Generator returned sat in 39.897530 secs.
[08/10 16:38:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:05]  Improved gap from 1/40 to 100
[08/10 16:38:07]  Improved number of small numbers from 66 to 70 out of a max of 114
[08/10 16:38:07]  Verifer returned sat in 1.435999 secs.
[08/10 16:38:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     575.590332     475.540332  908.734326   575.590332     0.100098   475.540332    0.050000  100.000000      100.000000     1.0       475.540332            -1             -1     -1
1     575.590332     475.540332  908.734326   575.590332     0.050049   475.540332    0.050000  100.000000        0.000000     1.0       575.540332         False          False   True
2     708.673584     675.540332  908.734326   708.673584   233.083252   675.540332    0.050000   33.083252       33.083252     1.0       575.540332         False          False   True
3     708.773665     708.673665  908.734326   708.773665    33.183333   708.673665    0.050000    0.050000      -66.816667     1.0       708.723665         False          False   True
4     775.590332     775.540332  908.734326   775.590332    66.866667   775.540332    0.050000    0.000000     -100.000000     1.0       708.723665         False          False   True
5     909.823665     906.523665  908.734326   909.823665   134.233333   906.523665    0.050000    3.250000      -65.766667     1.0       708.723665         False          False   True
6    1175.540332    1037.156999  908.734326  1175.540332   268.966667  1037.156999    0.050000  138.333333       99.950000     1.0       708.723665         False          False   True
7    1575.640332    1175.540332  908.734326  1575.640332   538.433333  1175.540332    0.050000  400.050000      400.050000     1.0       708.723665         False          False   True
8    2252.956999    1275.540283  908.734326  2252.956999  1077.366667  1275.540283  577.316667  400.100049      400.100000     2.0       708.723665         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=4001/10.[0m
[08/10 16:38:07]  --------------------------------------------------------------------------------
[08/10 16:38:07]  Iteration: 162 (0 solution, 161 counterexamples)
[08/10 16:39:30]  Generator returned sat in 77.771026 secs.
[08/10 16:39:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:31]  Improved gap from 1989/20 to 100
[08/10 16:39:31]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 16:39:31]  Verifer returned sat in 0.573787 secs.
[08/10 16:39:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     146.190430      46.290283  1237.984131   146.190430  199.999756    46.290283   0.000000  99.900146       -0.099854     2.0        46.290283            -1             -1   False
1     246.190430     146.290283  1237.984131   246.190430  199.900146   146.290283   0.000000  99.900146       -0.099854     1.0       246.190430         False          False   False
2     346.090088     246.290283  1237.984131   346.090088  199.799805   246.290283   0.000000  99.799805       -0.200195     1.0       346.090088         False          False   False
3     445.990234     346.290283  1237.984131   445.990234  199.699951   346.290283   0.000000  99.699951       -0.300049     1.0       445.990234         False          False   False
4     497.290283     479.156982  1237.984131   497.290283  151.000000   479.156982   0.000000  18.133301      -49.000000     1.0       445.990234         False          False   False
5     646.590332     580.657227  1237.984131   646.590332  167.433350   580.657227   0.099854  65.833252        0.200195     1.0       445.990234         False          False   False
6     746.690430     682.156982  1237.984131   746.690430  165.933350   682.156982   0.199951  64.333496        0.200195     1.0       445.990234         False          False    True
7     846.790283     746.590332  1237.984131   846.790283  164.433350   746.590332   0.299805  99.900146        0.200195     1.0       445.990234         False          False    True
8     909.823486     846.290283  1237.984131   909.823486  162.933350   846.290283   0.299805  63.233398      -36.766602     2.0       445.990234         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/1024.[0m
[08/10 16:39:32]  --------------------------------------------------------------------------------
[08/10 16:39:32]  Iteration: 163 (0 solution, 162 counterexamples)
[08/10 16:40:03]  Generator returned sat in 25.658397 secs.
[08/10 16:40:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:40:04]  Improved gap from 1/10 to 0
[08/10 16:40:05]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 16:40:05]  Verifer returned sat in 0.897833 secs.
[08/10 16:40:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     146.190430     -53.659668  1237.984131   146.190430  199.850000   -53.659668   0.000000  199.850098      199.850098     9.0       -53.659668            -1             -1     -1
1     146.190430     -53.359375  1237.984131   146.190430  199.799805   -53.359375   0.000000  199.549805       99.850098     9.0       146.190430         False           True  False
2     146.390381     146.340332  1237.984131   146.390381  199.749756   146.340332   0.000000    0.050049        0.050049     1.0       146.390381         False           True  False
3     347.340332     146.340332  1237.984131   347.340332  201.000000   146.340332   1.100098  199.899902       99.899902     1.0       146.390381         False          False  False
4     347.440430     346.290283  1237.984131   347.440430  200.000000   346.290283   1.100098    0.050049        0.000000     1.0       146.390381         False          False   True
5     348.390381     347.240479  1336.134277   348.390381    1.000000   347.240479   1.100098    0.049805       -0.899902     1.0       146.390381         False          False   True
6     349.340576     348.190186  1436.034180   349.340576    1.000000   348.190186   1.100098    0.050293       -0.049805     1.0       146.390381         False          False   True
7     350.290283     348.290283  1535.134033   350.290283    1.000000   348.290283   1.100098    0.899902       -0.000244     1.0       146.390381         False          False   True
8     350.390381     349.240479  1535.134277   350.390381    1.000000   349.240479   1.100098    0.049805      -99.899902     1.0       146.390381         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=204595/2048.[0m
[08/10 16:40:05]  --------------------------------------------------------------------------------
[08/10 16:40:05]  Iteration: 164 (0 solution, 163 counterexamples)
[08/10 16:41:46]  Generator returned sat in 94.541604 secs.
[08/10 16:41:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:41:49]  Improved gap from 1/5 to 10.9375
[08/10 16:41:50]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:41:50]  Verifer returned sat in 3.400301 secs.
[08/10 16:41:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2557.855957    2557.767334 -1373.442871  2557.855957    0.044434  2557.767334    0.000000   0.088623        0.088623     7.0      2557.767334            -1             -1     -1
1    2568.793213    2557.900391 -1284.513428  2568.793213   11.025879  2557.900391    0.000000  10.892822       -0.044678     1.0      2557.767334         False           True  False
2    2568.882080    2568.837891 -1273.544678  2568.882080   10.981689  2568.837891    0.000000   0.044189      -88.987061     1.0      2568.882080         False          False  False
3    2663.132080    2658.400146 -1273.544678  2663.132080   94.294189  2658.400146    0.000000   4.731934      -94.737061     1.0      2568.882080         False          False  False
4    2758.532959    2758.156738 -1273.544678  2758.532959  100.132812  2758.156738    0.000000   0.376221      -99.336182     1.0      2568.882080         False          False  False
5    2957.913086    2957.869141 -1273.544678  2957.913086  199.756348  2957.869141    0.000000   0.043945        0.043945     1.0      2568.882080         False          False  False
6    3346.400391    3057.869141 -1273.544678  3346.400391  388.531250  3057.869141  288.442627   0.088623        0.088623     1.0      2568.882080         False          False  False
7    3542.577393    3157.869141 -1273.544678  3542.577393  196.265625  3157.869141  384.619629   0.088623        0.088623     1.0      2568.882080         False          False   True
8    3642.621582    3158.001953 -1273.544678  3642.621582  100.132812  3158.001953  384.663818  99.955811        0.088623     1.0      2568.882080         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=363/4096.[0m
[08/10 16:41:51]  --------------------------------------------------------------------------------
[08/10 16:41:51]  Iteration: 165 (0 solution, 164 counterexamples)
[08/10 16:42:06]  Generator returned sat in 9.991866 secs.
[08/10 16:42:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:42:10]  Improved gap from 36445/4096 to 10.9375
[08/10 16:42:11]  Improved number of small numbers from 70 to 80 out of a max of 114
[08/10 16:42:11]  Verifer returned sat in 3.988794 secs.
[08/10 16:42:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2125.678223    2125.650391 -1215.741699  2125.678223    0.028076  2125.650391    0.000000   0.027832        0.027631     3.0      2125.650391            -1             -1   False
1    2136.643799    2125.706312 -1126.734919  2136.643799   10.993408  2125.706312    0.000000  10.937487       -0.000013     1.0      2125.650391         False          False   False
2    2226.594470    2136.643812 -1116.713623  2226.594470  100.888158  2136.643812    0.000000  89.950658       -0.028046     1.0      2125.650391         False          False   False
3    2326.622430    2226.622559 -1116.713537  2326.622430  189.978618  2226.622559    0.000000  99.999872        0.000000     1.0      2125.650391         False          False   False
4    2326.622430    2326.622430 -1116.713537  2326.622430   99.972168  2326.622430    0.000000   0.000000     -100.000000     2.0      2125.650391         False          False   False
5    2526.538549    2526.510588 -1116.713537  2526.538549  199.916118  2526.510588    0.000000   0.027961       -0.083882     1.0      2125.650391         False          False   False
6    2915.377364    2530.272924 -1116.713537  2915.377364  388.866776  2530.272924  288.699013  96.405428        0.055921     1.0      2125.650391         False          False   False
7    3015.405325    2726.622430 -1116.713537  3015.405325  196.433388  2726.622430  288.726974   0.055921        0.055921     1.0      2125.650391         False          False    True
8    3115.566098    2726.706299 -1116.713537  3115.566098  100.216694  2726.706299  288.887747  99.972052        0.055921     1.0      2125.650391         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=17/304.[0m
[08/10 16:42:11]  --------------------------------------------------------------------------------
[08/10 16:42:11]  Iteration: 166 (0 solution, 165 counterexamples)
[08/10 16:42:33]  Generator returned sat in 15.875685 secs.
[08/10 16:42:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:42:34]  Improved gap from 115/16384 to 0
[08/10 16:42:35]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 16:42:35]  Verifer returned sat in 1.120858 secs.
[08/10 16:42:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     419.496098      19.493598   890.415295   419.496098    0.027832    19.493598    0.00125  400.001250      400.001250     6.0        19.493598            -1             -1     -1
1     419.497348     119.493408   890.415295   419.497348  400.002500   119.493408    0.00250  300.001440      300.001250     7.0        19.493598         False          False   True
2     419.497348     119.493598   890.415295   419.497348  300.001250   119.493598    0.00250  300.001250      200.001250     6.0       419.494848          True           True   True
3     419.497348     319.493408   890.415295   419.497348  300.001250   319.493408    0.00250  100.001440      100.001250     6.0       419.494848         False          False   True
4     419.497348     417.993408   890.415295   419.497348    1.500000   417.993408    0.00250    1.501440        0.001250     6.0       419.494848         False          False   True
5     419.497348     419.493598   990.414045   419.497348    1.500000   419.493598    0.00250    0.001250        0.000000     6.0       419.494848         False          False   True
6     420.996098     419.494848  1088.915295   420.996098    1.500000   419.494848    0.00250    1.498750        0.000000     7.0       419.494848         False          False   True
7     420.996098     420.993598  1188.915283   420.996098    0.010000   420.993598    0.00250    0.000000       -0.000012     2.0       419.494848         False           True  False
8     421.006098     420.994873  1288.905273   421.006098    0.010000   420.994873    0.00250    0.008725       -0.000021     1.0       419.494848         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=240001/800.[0m
[08/10 16:42:35]  --------------------------------------------------------------------------------
[08/10 16:42:35]  Iteration: 167 (0 solution, 166 counterexamples)
[08/10 16:44:20]  Generator returned sat in 99.059262 secs.
[08/10 16:44:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:44:21]  Improved gap from 0 to 100
[08/10 16:44:21]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:44:21]  Verifer returned sat in 0.737019 secs.
[08/10 16:44:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      13.493652     -86.656494  996.565186    13.493652    0.049805   -86.656494   0.050049  100.100098      100.100098     9.0       -86.656494            -1             -1     -1
1      13.493652      13.343506  996.565186    13.493652    0.050000    13.343506   0.050049    0.100098        0.100098     2.0       -86.656494         False           True   True
2      13.493652      13.343506  996.565186    13.493652    0.050000    13.343506   0.050049    0.100098      -99.899902     2.0       -86.656494         False          False   True
3     411.043701     115.143555  996.565186   411.043701  397.650146   115.143555   0.050049  295.850098      197.650146     1.0       -86.656494         False          False   True
4     513.343750     214.643555  996.565186   513.343750  398.150146   214.643555   0.050049  298.650146      199.950195     2.0       -86.656494         False          False   True
5     613.343750     411.043457  996.565186   613.343750  398.650146   411.043457   0.050049  202.250244      199.950195     2.0       -86.656494         False          False   True
6     810.243652     513.343506  996.565186   810.243652  399.150146   513.343506   0.050049  296.850098      296.850098     2.0       -86.656494         False          False   True
7     913.043701     613.343506  996.565186   913.043701  399.650146   613.343506   0.050049  299.650146      299.650146     2.0       -86.656494         False          False   True
8    1013.543701     613.393555  996.565186  1013.543701  400.150146   613.393555   0.100098  400.050049      300.100098     3.0       -86.656494         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=614605/2048.[0m
[08/10 16:44:22]  --------------------------------------------------------------------------------
[08/10 16:44:22]  Iteration: 168 (0 solution, 167 counterexamples)
[08/10 16:45:11]  Generator returned sat in 43.595832 secs.
[08/10 16:45:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:45:13]  Improved number of small numbers from 73 to 85 out of a max of 113
[08/10 16:45:13]  Verifer returned sat in 1.159862 secs.
[08/10 16:45:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2073.131348   -2473.131445  996.565186 -2073.131348     0.050049 -2473.131445      0.000   400.000098      400.000098     7.0     -2473.131445            -1             -1   False
1   -2073.131348   -2373.131592  996.565186 -2073.131348     0.050049 -2373.131592      0.000   300.000244      300.000098     7.0     -2473.131445         False          False   False
2   -2073.131348   -2273.131445  996.565186 -2073.131348   299.950000 -2273.131445      0.000   200.000098      200.000098     8.0     -2473.131445         False          False   False
3   -1866.864779   -2173.131445  996.565186 -1866.864779   406.266667 -2173.131445      0.000   306.266667      306.266667     7.0     -2473.131445          True           True   False
4    -964.731445   -2073.181396  996.565186  -964.731445  1208.400000 -2073.181396      0.050  1108.399951     1108.350000     8.0     -2473.131445         False          False   False
5    -964.731445   -2073.131445  996.565186  -964.731445   606.200000 -2073.131445      0.050  1108.350000     1008.350000     9.0      -964.781445          True           True    True
6    -764.781445   -1947.456445  996.565186  -764.781445  1308.300000 -1947.456445      0.050  1182.625000     1108.300000     4.0      -964.781445         False           True   False
7     465.393555   -1773.131445  996.565186   465.393555  2412.800000 -1773.131445   1130.175  1108.350000     1108.350000     4.0      -964.781445         False          False   False
8     565.443555   -1673.131592  996.565186   565.443555  1208.400000 -1673.131592   1130.225  1108.350146     1108.350000     5.0      -964.781445         False          False    True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=22167/20.[0m
[08/10 16:45:14]  --------------------------------------------------------------------------------
[08/10 16:45:14]  Iteration: 169 (0 solution, 168 counterexamples)
[08/10 16:45:30]  Generator returned sat in 10.355691 secs.
[08/10 16:45:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:45:32]  Improved number of small numbers from 70 to 84 out of a max of 113
[08/10 16:45:32]  Verifer returned sat in 1.256446 secs.
[08/10 16:45:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2273.031250   -2872.981201  1296.415088 -2273.031250     0.049805 -2872.981201       0.00  599.949951      499.950098     7.0     -2872.981201            -1             -1    True
1   -2273.031250   -2672.981348  1296.415088 -2273.031250   599.900146 -2672.981348       0.00  399.950098      399.950098     8.0     -2872.981201         False          False    True
2   -2073.131348   -2672.931348  1296.415088 -2073.131348   599.850000 -2672.931348       0.05  599.750000      499.800000     7.0     -2073.181348          True           True   False
3   -2070.881592   -2572.981201  1296.415088 -2070.881592   601.999756 -2572.981201       0.05  502.049609      402.049756     7.0     -2073.181348         False          False    True
4   -2070.881592   -2472.981348  1296.415088 -2070.881592     2.000000 -2472.981348       0.05  402.049756      302.049756     8.0     -2073.181348         False          False    True
5   -2070.881592   -2272.981348  1296.415088 -2070.881592   402.000000 -2272.981348       0.05  202.049756      202.049756     4.0     -2073.181348         False           True   False
6    -871.031348   -2172.981348  1296.415088  -871.031348  1401.900000 -2172.981348     802.15  499.800000      499.800000     5.0     -2073.181348         False          False   False
7    -668.381348   -2072.981445  1296.415088  -668.381348   702.450000 -2072.981445     904.80  499.800098      499.800000     5.0     -2073.181348         False          False    True
8    -668.381348   -1972.981445  1296.415088  -668.381348   352.725000 -1972.981445     904.80  399.800098      399.800000     3.0     -2073.181348         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=2, buffer=2499/5.[0m
[08/10 16:45:32]  --------------------------------------------------------------------------------
[08/10 16:45:32]  Iteration: 170 (0 solution, 169 counterexamples)
[08/10 16:46:36]  Generator returned sat in 57.670636 secs.
[08/10 16:46:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:46:37]  Improved gap from 1/40 to 23.4375
[08/10 16:46:38]  Improved number of small numbers from 69 to 78 out of a max of 114
[08/10 16:46:38]  Verifer returned sat in 1.513641 secs.
[08/10 16:46:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2175.131348   -2371.312988  1296.415088 -2175.131348    0.045654 -2371.312988   0.045455  196.136186       96.136364     4.0     -2371.312988            -1             -1     -1
1   -2175.131348   -2175.222257  1296.415088 -2175.131348  102.090820 -2175.222257   0.045455    0.045455       -3.863636     5.0     -2371.312988         False          False   True
2   -2073.131348   -2073.222257  1296.415088 -2073.131348  102.045455 -2073.222257   0.045455    0.045455       -1.863636     1.0     -2073.176802          True           True  False
3   -1971.131348   -1971.313166  1296.415088 -1971.131348  102.045455 -1971.313166   0.090909    0.090909        0.090909     1.0     -2073.176802         False          False  False
4   -1869.676802   -1871.313166  1296.415088 -1869.676802  101.545455 -1871.313166   1.545455    0.090909        0.090909     1.0     -2073.176802         False          False   True
5   -1768.722257   -1871.176802  1296.415088 -1768.722257  101.045455 -1871.176802   2.500000   99.954545        0.090909     1.0     -2073.176802         False          False   True
6   -1768.131348   -1771.176802  1369.898193 -1768.131348  100.545455 -1771.176802   2.500000    0.545455      -25.835076     1.0     -2073.176802         False          False   True
7   -1718.904075   -1744.796120  1446.460449 -1718.904075   49.772727 -1744.796120   2.500000   23.392045       -0.045548     1.0     -2073.176802         False          False   True
8   -1717.909757   -1721.358398  1446.460693 -1717.909757   24.386364 -1721.358398   2.500000    0.948642      -99.050985     1.0     -2073.176802         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/11.[0m
[08/10 16:46:39]  --------------------------------------------------------------------------------
[08/10 16:46:39]  Iteration: 171 (0 solution, 170 counterexamples)
[08/10 16:47:06]  Generator returned sat in 21.040452 secs.
[08/10 16:47:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:47:07]  Improved gap from 94053/4096 to 23.4375
[08/10 16:47:08]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 16:47:08]  Verifer returned sat in 1.504083 secs.
[08/10 16:47:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2870.931396   -2966.543701  1296.415039 -2870.931396    0.012451 -2966.543701   0.000000   95.612305       95.612305     3.0     -2966.543701            -1             -1   False
1   -2868.056396   -2870.918945  1296.415039 -2868.056396   98.487305 -2870.918945   0.000000    2.862549       -1.512695     1.0     -2966.543701         False          False   False
2   -2766.531250   -2768.031494  1296.415039 -2766.531250  104.387695 -2768.031494   0.000000    1.500244        0.012451     1.0     -2966.543701         False          False   False
3   -2663.656494   -2667.531250  1296.415039 -2663.656494  104.375000 -2667.531250   2.862305    1.012451        0.024902     1.0     -2666.518799         False          False   False
4   -2560.793945   -2566.543701  1296.415039 -2560.793945  103.875000 -2566.543701   5.724854    0.024902        0.024902     1.0     -2666.518799         False          False    True
5   -2457.443848   -2566.531250  1296.415039 -2457.443848  103.375000 -2566.531250   9.074951  100.012451        0.024902     2.0     -2666.518799         False          False    True
6   -2454.581299   -2466.506348  1372.940186 -2454.581299  102.875000 -2466.506348   9.074951    2.850098      -20.587402     1.0     -2666.518799         False          False    True
7   -2407.493896   -2439.993896  1446.427734 -2407.493896   49.937500 -2439.993896   9.074951   23.425049       -0.012451     1.0     -2666.518799         False          False    True
8   -2407.450195   -2416.556396  1446.427734 -2407.450195   23.468750 -2416.556396   9.074951    0.031250      -99.968750     1.0     -2666.518799         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=51/2048.[0m
[08/10 16:47:08]  --------------------------------------------------------------------------------
[08/10 16:47:08]  Iteration: 172 (0 solution, 171 counterexamples)
[08/10 16:48:59]  Generator returned sat in 104.950999 secs.
[08/10 16:49:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:01]  Improved gap from 0 to 14.0625
[08/10 16:49:02]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 16:49:02]  Verifer returned sat in 1.858104 secs.
[08/10 16:49:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2870.931396   -2870.931396  1200.802490 -2870.931396    0.300000 -2870.931396        0.0    0.000000       -0.000244     9.0     -2870.931396            -1             -1     -1
1   -2870.731201   -2870.831299  1286.440430 -2870.731201    0.200195 -2870.831299        0.0    0.100098      -14.162109     1.0     -2870.731201         False           True  False
2   -2429.343750   -2848.443848  1286.440430 -2429.343750  441.487549 -2848.443848        0.0  419.100098      327.225342     1.0     -2870.731201         False          False  False
3   -2429.343750   -2656.569092  1286.440430 -2429.343750  419.000000 -2656.569092        0.0  227.225342      227.225342     2.0     -2429.343750         False          False  False
4   -2429.343750   -2556.569092  1286.440430 -2429.343750  210.000000 -2556.569092        0.0  127.225342      127.225342     3.0     -2429.343750         False          False  False
5   -2429.343750   -2482.693848  1286.440430 -2429.343750  105.500000 -2482.693848        0.0   53.350098       27.225342     4.0     -2429.343750         False          False  False
6   -2429.343750   -2456.569092  1359.215088 -2429.343750   53.250000 -2456.569092        0.0   27.225342        0.000000     5.0     -2429.343750         False           True  False
7   -2429.343750   -2429.343750  1445.152588 -2429.343750   27.125000 -2429.343750        0.0    0.000000      -14.062500     6.0     -2429.343750         False           True  False
8   -2415.281250   -2415.281250  1445.152832 -2415.281250   14.062500 -2415.281250        0.0    0.000000      -99.999756     1.0     -2429.343750         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=335181/1024.[0m
[08/10 16:49:02]  --------------------------------------------------------------------------------
[08/10 16:49:02]  Iteration: 173 (0 solution, 172 counterexamples)
[08/10 16:50:12]  Generator returned sat in 63.751426 secs.
[08/10 16:50:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:12]  Improved gap from 0 to 100
[08/10 16:50:13]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 16:50:13]  Verifer returned sat in 0.623695 secs.
[08/10 16:50:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2809.069336   -2809.269287  1139.140381 -2809.069336    0.199951 -2809.269287    0.000000   0.199951        0.199951     8.0     -2809.269287            -1             -1   False
1   -2809.069336   -2809.269043  1139.140381 -2809.069336    0.099854 -2809.269043    0.000000   0.199707      -99.800049     8.0     -2809.069336         False          False   False
2   -2709.168945   -2709.269287  1139.140381 -2709.168945  100.100098 -2709.269287    0.000000   0.100342      -99.899658     1.0     -2809.069336         False          False   False
3   -2543.102539   -2543.202393  1139.140381 -2543.102539  166.166748 -2543.202393    0.000000   0.099854      -33.833252     1.0     -2809.069336         False          False   False
4   -2409.168945   -2476.469238  1139.140381 -2409.168945  134.033447 -2476.469238    0.000000  67.300293        0.100342     1.0     -2809.069336         False          False   False
5   -2309.069336   -2309.269287  1139.140381 -2309.069336  167.399902 -2309.269287    0.000000   0.199951        0.199951     1.0     -2809.069336         False          False   False
6   -2108.269287   -2209.269287  1139.140381 -2108.269287  201.000000 -2209.269287  100.800049   0.199951        0.199951     1.0     -2809.069336         False          False   False
7   -1909.469238   -2205.969238  1139.140381 -1909.469238  199.000000 -2205.969238  199.600098  96.899902        0.199951     1.0     -2809.069336         False          False    True
8   -1809.369141   -2108.969238  1139.140381 -1809.369141  197.000000 -2108.969238  199.700195  99.899902        0.199951     1.0     -2809.069336         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=819/4096.[0m
[08/10 16:50:13]  --------------------------------------------------------------------------------
[08/10 16:50:13]  Iteration: 174 (0 solution, 173 counterexamples)
[08/10 16:52:45]  Generator returned sat in 145.931102 secs.
[08/10 16:52:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:52:47]  Improved gap from 1/1200 to 17.1875
[08/10 16:52:47]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 16:52:47]  Verifer returned sat in 1.199432 secs.
[08/10 16:52:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2543.302734   -2643.702393   982.427734 -2543.302734    0.100098 -2643.702393   0.100098  100.299561       99.999756     2.0     -2643.702393            -1             -1     -1
1   -2543.302734   -2643.402588   982.427734 -2543.302734  100.200000 -2643.402588   0.100098   99.999756       -0.000244     3.0     -2643.702393         False          False   True
2   -2543.202637   -2543.402588   982.427734 -2543.202637  100.099854 -2543.402588   0.100098    0.099854      -99.900146     1.0     -2543.302734         False          False   True
3   -2117.302490   -2343.402588   982.427734 -2117.302490  426.000000 -2343.402588   0.100098  226.000000      226.000000     1.0     -2543.302734         False          False   True
4   -2117.302490   -2243.402588   982.427734 -2117.302490  215.000000 -2243.402588   0.100098  126.000000      126.000000     2.0     -2543.302734         False          False   True
5   -2117.302490   -2174.252441   982.427734 -2117.302490  109.500000 -2174.252441   0.100098   56.849854       26.000000     3.0     -2543.302734         False          False   True
6   -2117.302490   -2134.490234  1056.327637 -2117.302490   56.750000 -2134.490234   0.100098   17.087646       -0.100098     4.0     -2543.302734         False          False   True
7   -2104.015137   -2117.302490  1139.140137 -2104.015137   30.375000 -2117.302490   0.100098   13.187256       -4.000244     1.0     -2543.302734         False          False   True
8   -2100.014893   -2100.114990  1139.140381 -2100.014893   17.187500 -2100.114990   0.100098    0.000000      -99.999756     1.0     -2543.302734         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2261/10.[0m
[08/10 16:52:47]  --------------------------------------------------------------------------------
[08/10 16:52:47]  Iteration: 175 (0 solution, 174 counterexamples)
[08/10 16:54:02]  Generator returned sat in 68.840149 secs.
[08/10 16:54:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:54:03]  Improved gap from 1/2400 to 48.4375
[08/10 16:54:04]  Improved number of small numbers from 84 to 95 out of a max of 114
[08/10 16:54:04]  Verifer returned sat in 1.316041 secs.
[08/10 16:54:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2690.840088   -2690.940186   879.302734 -2690.840088    0.100098 -2690.940186      0.000   0.100098        0.100000     5.0     -2690.940186            -1             -1     -1
1   -2690.840088   -2690.940088   930.865234 -2690.840088    0.049805 -2690.940088      0.000   0.100000      -48.337500     2.0     -2690.840088         False           True  False
2   -2545.452588   -2545.502588   930.865234 -2545.452588  145.487500 -2545.502588      0.000   0.050000       -2.950000     1.0     -2690.840088         False          False  False
3   -2400.015088   -2487.965088   930.865234 -2400.015088  145.487500 -2487.965088      0.000  87.950000       42.487500     1.0     -2690.840088         False          False  False
4   -2285.489990   -2342.552490   930.865234 -2285.489990  202.475098 -2342.552490     14.475  42.587500       42.537598     1.0     -2690.840088         False          False  False
5   -2285.489990   -2342.502588   982.427734 -2285.489990    1.500000 -2342.502588     14.475  42.537598       -5.899902     2.0     -2690.840088         False          False   True
6   -2227.527588   -2290.390088  1030.315186 -2227.527588  100.500000 -2290.390088     14.475  48.387500       -0.050049     1.0     -2690.840088         False          False   True
7   -2178.127588   -2241.952393  1080.965234 -2178.127588   97.787500 -2241.952393     14.475  49.349805        0.000000     1.0     -2690.840088         False          False   True
8   -2178.127588   -2192.602588  1080.965332 -2178.127588   49.300049 -2192.602588     14.475   0.000000      -99.999902     2.0     -2690.840088         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=87117/2048.[0m
[08/10 16:54:05]  --------------------------------------------------------------------------------
[08/10 16:54:05]  Iteration: 176 (0 solution, 175 counterexamples)
[08/10 16:54:39]  Generator returned sat in 27.950565 secs.
[08/10 16:54:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:54:39]  Improved gap from 0 to 0
[08/10 16:54:40]  Improved number of small numbers from 68 to 86 out of a max of 114
[08/10 16:54:40]  Verifer returned sat in 0.913263 secs.
[08/10 16:54:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2692.604463   -2692.606201   880.968506 -2692.604463    0.001250 -2692.606201   0.000625    0.001113        0.000625     9.0     -2692.606201            -1             -1     -1
1   -2692.604463   -2692.605713   880.975830 -2692.604463    0.000732 -2692.605713   0.000625    0.000625      -99.992051     9.0     -2692.605088         False           True   True
2   -2392.613213   -2492.613213   880.975830 -2392.613213  299.991875 -2492.613213   0.000625   99.999375       99.999199     1.0     -2692.605088         False           True  False
3   -2192.621338   -2392.613281   880.975830 -2192.621338  299.991250 -2392.613281   0.000625  199.991318      199.991074     1.0     -2192.621963         False          False  False
4   -2192.621338   -2292.613281   880.975830 -2192.621338    0.010000 -2292.613281   0.000625   99.991318       99.991074     2.0     -2192.621963         False          False  False
5   -2192.621338   -2192.622588   880.976074 -2192.621338    0.010000 -2192.622588   0.000625    0.000625       -0.008682     3.0     -2192.621963         False          False  False
6   -2192.611963   -2192.613213   980.975342 -2192.611963    0.010000 -2192.613213   0.000625    0.000625       -0.000039     1.0     -2192.621963         False          False  False
7   -2192.602588   -2192.603838  1080.965820 -2192.602588    0.010000 -2192.603838   0.000625    0.000625       -0.000186     1.0     -2192.621963         False          False  False
8   -2192.593213   -2192.602539  1080.966064 -2192.593213    0.010000 -2192.602539   0.000625    0.008701      -99.990566     1.0     -2192.621963         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409583/2048.[0m
[08/10 16:54:41]  --------------------------------------------------------------------------------
[08/10 16:54:41]  Iteration: 177 (0 solution, 176 counterexamples)
[08/10 16:58:29]  Generator returned sat in 222.638839 secs.
[08/10 16:58:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:58:31]  Improved gap from 1/800 to 48.4375
[08/10 16:58:32]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/10 16:58:32]  Verifer returned sat in 2.277157 secs.
[08/10 16:58:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2587.382080   -2787.381963   875.744756 -2587.382080    0.002686 -2787.381963     0.0025  199.997383       99.997383     8.0     -2787.381963            -1             -1     -1
1   -2587.376963   -2587.381963   875.744756 -2587.376963  200.002500 -2587.381963     0.0025    0.002500        0.002500     1.0     -2787.381963         False           True   True
2   -2387.376963   -2487.381963   875.744756 -2387.376963  200.002500 -2487.381963    51.5675   48.437500       48.437500     1.0     -2787.381963         False          False   True
3   -2387.376963   -2441.061963   880.987256 -2387.376963   48.435000 -2441.061963    51.5675    2.117500      -46.320000     2.0     -2438.944463         False          False   True
4   -2192.616963   -2292.626963   880.987256 -2192.616963  196.877500 -2292.626963    51.5700   48.440000       48.437500     1.0     -2438.944463         False          False   True
5   -2192.616963   -2292.624463   932.549756 -2192.616963    0.010000 -2292.624463    51.5700   48.437500        0.000000     2.0     -2438.944463         False          False   True
6   -2144.170713   -2244.186963   979.429932 -2144.170713   96.883750 -2244.186963    51.5700   48.446250       -4.673574     3.0     -2438.944463         False          False   True
7   -2093.179463   -2191.066963  1030.992188 -2093.179463   99.437500 -2191.066963    51.5700   46.317500       -2.120068     1.0     -2144.749463          True           True  False
8   -2087.716963   -2142.629395  1030.992432 -2087.716963   51.780000 -2142.629395    51.5700    3.342432      -96.657324     1.0     -2144.749463         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/10 16:58:33]  --------------------------------------------------------------------------------
[08/10 16:58:33]  Iteration: 178 (0 solution, 177 counterexamples)
[08/10 16:59:49]  Generator returned sat in 70.097482 secs.
[08/10 16:59:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:59:51]  Improved number of small numbers from 58 to 87 out of a max of 113
[08/10 16:59:51]  Verifer returned sat in 1.089332 secs.
[08/10 16:59:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2468.784424   -3168.834473  875.744756 -2468.784424   126.537354 -3168.834473       0.00   700.050049      700.050039     9.0     -3168.834473            -1             -1     -1
1   -2468.784424   -3168.834229  875.744756 -2468.784424   126.537354 -3168.834229       0.00   700.049805      600.050039     9.0     -3168.834473         False           True  False
2   -2468.784424   -2968.884521  875.744756 -2468.784424   126.537598 -2968.884521       0.00   500.100098      500.050039     3.0     -3168.834473          True           True  False
3   -2468.784424   -2968.834229  875.744756 -2468.784424   126.487500 -2968.834229       0.00   500.049805      400.050039     4.0     -2468.784424         False          False  False
4   -2468.784424   -2868.834463  875.744756 -2468.784424   250.975000 -2868.834463       0.00   400.050039      300.050039     5.0     -2468.784424         False          False  False
5   -2368.884463   -2768.834463  875.744756 -2368.884463   499.950000 -2768.834463       0.00   399.950000      299.950000     6.0     -2468.784424         False          False  False
6   -1770.934463   -2568.834463  875.744756 -1770.934463   997.900000 -2568.834463       0.00   797.900000      797.900000     7.0     -2468.784424         False          False  False
7    -575.034463   -2568.834463  875.744756  -575.034463  1993.800000 -2568.834463       0.00  1993.800000     1893.800000     7.0     -2468.784424         False          False  False
8    1416.765537   -2368.834473  875.744756  1416.765537  3985.600000 -2368.834473    1891.75  1893.850010     1893.850000     3.0     -2468.784424         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=37877/20.[0m
[08/10 16:59:51]  --------------------------------------------------------------------------------
[08/10 16:59:51]  Iteration: 179 (0 solution, 178 counterexamples)
[08/10 17:00:29]  Generator returned sat in 32.345389 secs.
[08/10 17:00:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:31]  Improved gap from 0 to 100
[08/10 17:00:32]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 17:00:32]  Verifer returned sat in 1.898477 secs.
[08/10 17:00:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2166.264648   -3064.364463  875.744756 -2166.264648    0.100098 -3064.364463  797.900000  100.199814      100.199814     8.0     -3064.364463            -1             -1   False
1   -2166.164463   -3064.364463  875.744756 -2166.164463  100.300000 -3064.364463  798.000000  100.200000        0.200000     8.0     -3064.364463         False          False   False
2   -2066.364463   -2964.364258  875.744756 -2066.364463  200.000000 -2964.364258  798.000000   99.999795        0.000000     9.0     -3064.364463         False          False    True
3   -2066.364463   -2864.364463  875.744756 -2066.364463    0.100000 -2864.364463  798.000000    0.000000     -100.000000     2.0     -2864.364463          True           True   False
4   -1964.314463   -2764.364463  875.744756 -1964.314463  102.050000 -2764.364463  798.000000    2.050000      -97.950000     1.0     -2864.364463         False          False   False
5   -1763.339463   -2564.364463  875.744756 -1763.339463  203.025000 -2564.364463  800.825000    0.200000        0.200000     1.0     -2864.364463         False          False   False
6   -1662.026963   -2464.364463  875.744756 -1662.026963  101.512500 -2464.364463  802.137500    0.200000        0.200000     1.0     -2864.364463         False          False    True
7   -1611.470713   -2413.708213  875.744756 -1611.470713   50.756250 -2413.708213  802.137500    0.100000      -49.243750     1.0     -2864.364463         False          False    True
8   -1437.742588   -2364.364258  875.744756 -1437.742588  173.828125 -2364.364258  826.421875  100.199795        0.200000     1.0     -2864.364463         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 17:00:33]  --------------------------------------------------------------------------------
[08/10 17:00:33]  Iteration: 180 (0 solution, 179 counterexamples)
[08/10 17:02:56]  Generator returned sat in 137.469768 secs.
[08/10 17:02:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:58]  Improved gap from 1/40 to 48.4375
[08/10 17:02:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:02:58]  Verifer returned sat in 1.467482 secs.
[08/10 17:02:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2256.956787   -3255.006836   966.387451 -2256.956787    0.049805 -3255.006836  798.000000  200.050049      100.050293     9.0     -3255.006836            -1             -1     -1
1   -2256.956787   -3055.007080   966.387451 -2256.956787    0.050049 -3055.007080  798.000000    0.050293        0.050293     2.0     -3255.006836         False           True  False
2   -2126.125732   -2955.106934   966.387451 -2126.125732  130.881348 -2955.106934  798.050049   30.931152       30.831299     1.0     -3255.006836         False          False  False
3   -2026.175537   -2900.419434   966.387451 -2026.175537  130.881348 -2900.419434  798.050049   76.193848       30.781494     1.0     -3255.006836         False          False   True
4   -1926.075684   -2755.007080   966.387451 -1926.075684  176.293701 -2755.007080  798.100098   30.831299       30.831299     1.0     -3255.006836         False          False   True
5   -1926.075684   -2754.957031  1015.649902 -1926.075684    0.500000 -2754.957031  798.100098   30.781250      -19.906250     2.0     -3255.006836         False          False   True
6   -1857.781982   -2704.269531  1067.212402 -1857.781982   99.074951 -2704.269531  798.100098   48.387451       -0.050049     1.0     -3255.006836         False          False   True
7   -1809.094482   -2655.831787  1118.574951 -1809.094482   97.074951 -2655.831787  798.100098   48.637207        0.000000     1.0     -3255.006836         False          False   True
8   -1809.094482   -2607.194580  1118.574951 -1809.094482   48.587646 -2607.194580  798.100098    0.000000     -100.000000     2.0     -3255.006836         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=126285/4096.[0m
[08/10 17:02:59]  --------------------------------------------------------------------------------
[08/10 17:02:59]  Iteration: 181 (0 solution, 180 counterexamples)
[08/10 17:07:29]  Generator returned sat in 264.424431 secs.
[08/10 17:07:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:07:31]  Improved gap from 0 to 100
[08/10 17:07:31]  Improved number of small numbers from 95 to 95 out of a max of 114
[08/10 17:07:31]  Verifer returned sat in 1.013348 secs.
[08/10 17:07:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -249.700684   -1147.700684  966.387451  -249.700684    0.050000 -1147.700684     798.05   99.950000          -0.050     1.0     -1147.700684            -1             -1   False
1    -149.700684   -1047.700684  966.387451  -149.700684  199.950000 -1047.700684     798.05   99.950000          -0.050     1.0     -1147.700684         False          False   False
2     -49.750684    -947.700684  966.387451   -49.750684  199.900000  -947.700684     798.05   99.900000          -0.100     1.0      -847.800684         False          False   False
3      54.649316    -747.700684  966.387451    54.649316  204.300000  -747.700684     802.25    0.100000           0.100     1.0      -847.800684         False          False   False
4     154.699316    -647.700684  966.387451   154.699316  100.150000  -647.700684     802.30    0.100000           0.100     1.0      -847.800684         False          False    True
5     202.674316    -613.600684  966.387451   202.674316   48.075000  -613.600684     802.30   13.975000         -51.925     1.0      -847.800684         False          False    True
6     354.749316    -447.700684  966.387451   354.749316  166.050000  -447.700684     802.35    0.100000           0.100     1.0      -847.800684         False          False    True
7     435.674316    -380.267350  966.387451   435.674316   81.025000  -380.267350     802.35   13.591667         -18.975     1.0      -847.800684         False          False    True
8     554.799316    -347.700684  966.387451   554.799316  132.716667  -347.700684     802.40  100.100000           0.100     1.0      -847.800684         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/10.[0m
[08/10 17:07:32]  --------------------------------------------------------------------------------
[08/10 17:07:32]  Iteration: 182 (0 solution, 181 counterexamples)
[08/10 17:08:05]  Generator returned sat in 26.877686 secs.
[08/10 17:08:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:08:06]  Improved gap from 1/3600 to 48.4375
[08/10 17:08:07]  Improved number of small numbers from 61 to 70 out of a max of 114
[08/10 17:08:07]  Verifer returned sat in 1.594326 secs.
[08/10 17:08:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0       4.748047    -192.133184   911.707520     4.748047    0.001465  -192.133184    0.00125  196.879980       96.880049     2.0      -192.133184            -1             -1     -1
1       4.748047     -92.131934   914.827393     4.748047  196.879883   -92.131934    0.00125   96.878730       -0.000078     2.0      -192.133184         False          False   True
2     104.749316      50.078066   914.827393   104.749316  196.880000    50.078066    0.00125   54.670000        0.001191     1.0      -192.133184         False          False   True
3     104.751816     104.749316   966.387451   104.751816   54.672500   104.749316    0.00125    0.001250      -48.436250     1.0       104.750566         False          False   True
4     253.191816     253.186816   966.387451   253.191816  148.441250   253.186816    0.00250    0.002500        0.002500     1.0       104.750566         False          False   True
5     253.199316     253.190566  1017.946201   253.199316    0.010000   253.190566    0.00250    0.006250      -48.431250     1.0       104.750566         False          False   True
6     354.749316     301.628066  1064.827393   354.749316  101.556250   301.628066    0.00250   53.118750       -0.000059     1.0       104.750566         False          False   True
7     400.069941     354.748066  1116.388701   400.069941   98.439375   354.748066    0.00250   45.319375       -3.118125     1.0       104.750566         False          False   True
8     405.531191     403.185566  1167.951172   405.531191   50.780625   403.185566    0.00250    2.343125      -46.094404     1.0       104.750566         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 17:08:08]  --------------------------------------------------------------------------------
[08/10 17:08:08]  Iteration: 183 (0 solution, 182 counterexamples)
[08/10 17:08:54]  Generator returned sat in 39.592865 secs.
[08/10 17:08:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:08:55]  Improved gap from 0 to 100
[08/10 17:08:56]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 17:08:56]  Verifer returned sat in 1.713000 secs.
[08/10 17:08:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -411.946054    -611.949387  966.387451  -411.946054  200.002441  -611.949387   0.001111  200.002222      100.002222     2.0      -611.949387            -1             -1     -1
1    -411.946054    -411.949387  966.387451  -411.946054  200.000977  -411.949387   0.001111    0.002222        0.002222     3.0      -411.947165         False          False   True
2    -211.948276    -411.916054  966.387451  -211.948276  200.000000  -411.916054   0.002222  199.965556       99.998889     1.0      -211.950498         False           True  False
3    -211.948276    -211.951610  966.387451  -211.948276    0.001667  -211.951610   0.002222    0.001111       -0.001111     2.0      -211.950498         False          False   True
4     -11.947165    -211.949387  966.387451   -11.947165  200.002222  -211.949387   0.003333  199.998889       99.998889     1.0      -211.950498         False          False   True
5     -11.947165     -11.951610  966.387451   -11.947165    0.010000   -11.951610   0.003333    0.001111       -0.001111     2.0      -211.950498         False          False   True
6     188.053946      88.050537  966.387451   188.053946  200.002222    88.050537   0.004444   99.998964       99.998889     1.0      -211.950498         False          False   True
7     188.053946     188.048390  966.387451   188.053946    0.010000   188.048390   0.004444    0.001111       -0.001111     2.0      -211.950498         False          False   True
8     388.071724     188.050781  966.387451   388.071724  200.018889   188.050781   0.022222  199.998720       99.998889     1.0      -211.950498         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=89999/900.[0m
[08/10 17:08:57]  --------------------------------------------------------------------------------
[08/10 17:08:57]  Iteration: 184 (0 solution, 183 counterexamples)
[08/10 17:10:08]  Generator returned sat in 64.063652 secs.
[08/10 17:10:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:10:09]  Improved gap from 1/40 to 48.4375
[08/10 17:10:10]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 17:10:10]  Verifer returned sat in 1.125003 secs.
[08/10 17:10:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -311.948486    -498.898682   871.787354  -311.948486    0.100098  -498.898682   0.000000  186.950195      100.000000     9.0      -498.898682            -1             -1     -1
1    -311.848633    -411.948486   871.787354  -311.848633  187.050049  -411.948486   0.000000  100.099854        0.099854     3.0      -498.898682         False           True  False
2    -211.948730    -260.386230   871.787354  -211.948730  199.999756  -260.386230   0.000000   48.437500       -0.000244     1.0      -498.898682         False          False  False
3    -203.323730    -203.423584   914.824707  -203.323730   57.062500  -203.423584   0.000000    0.099854      -48.337891     1.0      -203.323730         False          False  False
4     -54.686035     -55.385986   914.824707   -54.686035  148.737549   -55.385986   0.099854    0.600098        0.199951     1.0      -203.323730         False          False  False
5     -54.686035     -54.985840   966.387207   -54.686035    0.500000   -54.985840   0.099854    0.199951      -48.237549     2.0      -203.323730         False          False   True
6      45.814209      -3.465088  1014.025146    45.814209  100.700195    -3.465088   0.099854   49.179443       -0.099365     1.0      -203.323730         False          False   True
7      94.614014      45.814209  1065.324707    94.614014   97.979248    45.814209   0.099854   48.699951        0.000000     1.0      -203.323730         False          False   True
8      94.614014      94.514160  1065.324951    94.614014   48.600098    94.514160   0.099854    0.000000      -99.999756     2.0      -203.323730         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 17:10:10]  --------------------------------------------------------------------------------
[08/10 17:10:10]  Iteration: 185 (0 solution, 184 counterexamples)
[08/10 17:10:49]  Generator returned sat in 31.931664 secs.
[08/10 17:10:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:10:55]  Improved gap from 0 to 34.375
[08/10 17:10:56]  Improved number of small numbers from 64 to 84 out of a max of 114
[08/10 17:10:56]  Verifer returned sat in 6.262567 secs.
[08/10 17:10:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -494.230957    -722.738340  1082.577207  -494.230957    0.002686  -722.738340     0.0000  228.507383      128.507383     2.0      -722.738340            -1             -1   False
1    -494.230957    -622.738281  1082.577207  -494.230957  228.507324  -622.738281     0.0000  128.507324       28.507383     3.0      -722.738340         False          False   False
2    -394.230957    -422.738340  1082.577207  -394.230957  228.507324  -422.738340     0.0000   28.507383       28.507383     1.0      -722.738340         False          False   False
3    -394.230957    -422.738340  1147.337207  -394.230957   28.505000  -422.738340     0.0000   28.507383       -6.732617     1.0      -394.230957         False          False   False
4    -258.985840    -287.498340  1147.337207  -258.985840  163.752500  -287.498340     0.0025   28.510000       28.510000     1.0      -394.230957         False          False   False
5    -258.985840    -287.498340  1212.962207  -258.985840    0.010000  -287.498340     0.0025   28.510000       -5.865000     1.0      -394.230957         False          False    True
6    -221.870840    -253.123340  1278.587207  -221.870840   65.625000  -253.123340     0.0025   31.250000       -3.125000     1.0      -394.230957         False          False    True
7    -137.500840    -218.748340  1297.339844  -137.500840  115.620000  -218.748340     0.0025   81.245000       -0.002363     1.0      -394.230957         False          False    True
8    -128.560840    -137.500977  1297.339844  -128.560840   90.185000  -137.500977     0.0025    8.937637      -91.062363     1.0      -394.230957         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2851/100.[0m
[08/10 17:10:56]  --------------------------------------------------------------------------------
[08/10 17:10:56]  Iteration: 186 (0 solution, 185 counterexamples)
[08/10 17:12:37]  Generator returned sat in 94.480260 secs.
[08/10 17:12:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:12:38]  Improved gap from 1/1600 to 100
[08/10 17:12:39]  Improved number of small numbers from 61 to 79 out of a max of 114
[08/10 17:12:39]  Verifer returned sat in 1.363636 secs.
[08/10 17:12:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -246.275391    -730.626650  1297.339707  -246.275391   300.003750  -730.626650    0.000000   484.351260       400.00001     6.0      -730.626650            -1             -1   False
1    -246.275391    -546.275635  1297.339707  -246.275391   300.002441  -546.275635    0.000000   300.000244       300.00001     6.0      -246.275391         False          False   False
2    -246.274170    -546.275400  1297.339707  -246.274170   300.001465  -546.275400    0.000000   300.001230       200.00123     6.0      -246.274170         False          False   False
3    -146.276650    -346.275400  1297.339707  -146.276650   399.998750  -346.275400    0.000000   199.998750       199.99875     7.0      -246.274170         False          False   False
4     831.249600    -246.276650  1297.339707   831.249600  1177.525000  -246.276650    0.001250  1077.525000      1077.52375     8.0      -246.274170         False          False   False
5     831.249600    -246.275400  1297.339707   831.249600     0.010000  -246.275400    0.001250  1077.523750       977.52375     9.0      -246.274170         False          False    True
6     831.249600    -146.275400  1297.339707   831.249600   451.015000  -146.275400    0.001250   977.523750       877.52375     3.0      -246.274170         False           True   False
7     831.249600     -46.275400  1297.339707   831.249600   977.522500   -46.275400    0.001250   877.523750       777.52375     4.0      -246.274170         False          False   False
8    1721.011475      53.724609  1297.339707  1721.011475  1767.285625    53.724609  489.763125  1177.523740      1077.52375     5.0      -246.274170         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=862019/800.[0m
[08/10 17:12:40]  --------------------------------------------------------------------------------
[08/10 17:12:40]  Iteration: 187 (0 solution, 186 counterexamples)
[08/10 17:13:14]  Generator returned sat in 28.005352 secs.
[08/10 17:13:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:13:20]  Improved gap from 1/800 to 34.375
[08/10 17:13:21]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 17:13:21]  Verifer returned sat in 6.502788 secs.
[08/10 17:13:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     448.379150     448.377725  202.686523   448.379150    0.003662   448.377725   0.000000   0.001426        0.001367     6.0       448.377725            -1             -1   False
1     448.381475     448.380225  202.686582   448.381475    0.003750   448.380225   0.000000   0.001250      -99.996250     1.0       448.377725         False          False   False
2     682.753975     645.652725  202.686582   682.753975  234.373750   645.652725   0.001250  37.100000       34.375000     1.0       448.377725         False          False   False
3     782.752725     748.377725  202.686582   782.752725  137.098750   748.377725   0.001250  34.373750       34.373750     1.0       782.751475         False          False    True
4     965.428350     848.376475  202.686582   965.428350  217.049375   848.376475  82.675625  34.376250       34.375000     1.0       782.751475         False          False    True
5     965.428350     848.377725  268.311582   965.428350    0.010000   848.377725  82.675625  34.375000        0.000000     2.0       782.751475         False          False    True
6    1030.920850     882.752725  287.064209  1030.920850   99.867500   882.752725  82.675625  65.492500      -15.754873     3.0       782.751475         False          False    True
7    1081.049600     964.000225  352.689082  1081.049600  115.621250   964.000225  82.675625  34.373750       -0.001250     1.0       782.751475         False          False    True
8    1160.798350     998.375244  352.689209  1160.798350  114.122500   998.375244  82.675625  79.747480      -20.252373     1.0       782.751475         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=275/8.[0m
[08/10 17:13:22]  --------------------------------------------------------------------------------
[08/10 17:13:22]  Iteration: 188 (0 solution, 187 counterexamples)
[08/10 17:14:53]  Generator returned sat in 84.416231 secs.
[08/10 17:14:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:14:54]  Improved gap from 1/10 to 100
[08/10 17:14:55]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/10 17:14:55]  Verifer returned sat in 1.493098 secs.
[08/10 17:14:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     229.429199     129.429414  421.634893   229.429199  200.050000   129.429414       0.05   99.949785       -0.050215     7.0       129.429414            -1             -1     -1
1     329.479414     229.429414  421.634893   329.479414  200.000000   229.429414       0.05  100.000000        0.000000     1.0       329.429414         False           True   True
2     529.429414     429.429414  421.634893   529.429414  299.950000   429.429414       0.05   99.950000       99.950000     1.0       329.429414         False          False   True
3     529.429414     429.429414  421.634893   529.429414   91.111111   429.429414       0.05   99.950000       -0.050000     1.0       529.379414         False          False   True
4     564.146081     529.429414  421.634893   564.146081  134.666667   529.429414       0.05   34.666667      -65.333333     1.0       529.379414         False          False   True
5     729.479414     629.429414  421.634893   729.479414  200.000000   629.429414       0.05  100.000000        0.000000     1.0       529.379414         False          False   True
6     927.479414     829.429414  421.634893   927.479414  298.000000   829.429414       0.05   98.000000       98.000000     1.0       529.379414         False          False   True
7    1274.479414     829.429414  421.634893  1274.479414  445.000000   829.429414       0.05  445.000000      345.000000     1.0       529.379414         False          False   True
8    1494.979414    1029.429199  421.634893  1494.979414  665.500000  1029.429199       0.10  465.450215      465.450000     2.0       529.379414         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=9309/20.[0m
[08/10 17:14:56]  --------------------------------------------------------------------------------
[08/10 17:14:56]  Iteration: 189 (0 solution, 188 counterexamples)
[08/10 17:15:16]  Generator returned sat in 13.817563 secs.
[08/10 17:15:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:15:17]  Improved gap from 0 to 0
[08/10 17:15:18]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/10 17:15:18]  Verifer returned sat in 1.384335 secs.
[08/10 17:15:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     474.469238     374.471914  421.634893   474.469238  100.004883   374.471914     0.00000   99.997324       99.997324     1.0       374.471914            -1             -1   False
1     474.475664     474.470664  421.634893   474.475664  100.003750   474.470664     0.00125    0.003750        0.002500     1.0       474.474414         False          False   False
2    1246.573164     474.471914  421.634893  1246.573164  772.101250   474.471914   672.09875  100.002500        0.002500     2.0       474.474414         False          False    True
3    1918.670664     674.471914  421.634893  1918.670664  772.100000   674.471914  1244.19625    0.002500        0.002500     1.0       674.474414         False           True    True
4    2306.718164     724.488164  421.634893  2306.718164  388.050000   724.488164  1532.24375   49.986250        0.002500     1.0       674.474414         False          False    True
5    2452.756914     774.474414  421.634893  2452.756914  196.025000   774.474414  1578.28250  100.000000        0.002500     2.0       674.474414         False          False    True
6    2452.769414     874.475586  521.619893  2452.769414  100.012500   874.475586  1578.28250    0.011328        0.000000     1.0       874.486914          True           True    True
7    2452.769414     874.486914  621.619873  2452.769414    0.010000   874.486914  1578.28250    0.000000       -0.000020     2.0       874.486914         False          False    True
8    2454.269414     874.487061  621.620117  2454.269414    1.500000   874.487061  1578.28250    1.499854      -98.499775     1.0       874.486914         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/400.[0m
[08/10 17:15:18]  --------------------------------------------------------------------------------
[08/10 17:15:18]  Iteration: 190 (0 solution, 189 counterexamples)
[08/10 17:17:43]  Generator returned sat in 138.102422 secs.
[08/10 17:17:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:17:44]  Improved gap from 1/20 to 1.5625
[08/10 17:17:45]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 17:17:45]  Verifer returned sat in 0.637005 secs.
[08/10 17:17:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     474.474365     276.086914  421.634766   474.474365  198.437256   276.086914        0.0  198.387451      198.387451     1.0       276.086914            -1             -1    True
1     474.474609     276.086914  421.634766   474.474609  198.387695   276.086914        0.0  198.387695       98.387695     1.0       474.474609         False          False    True
2     476.086670     474.524170  421.634766   476.086670  199.999756   474.524170        0.0    1.562500       -0.000244     1.0       474.474609         False          False    True
3     778.136719     576.086914  421.634766   778.136719  303.612549   576.086914        0.0  202.049805      202.049805     1.0       474.474609         False          False    True
4     778.136719     676.086914  421.634766   778.136719    2.000000   676.086914        0.0  102.049805      102.049805     2.0       474.474609         False          False    True
5     778.136719     676.136719  421.634766   778.136719    2.000000   676.136719        0.0  102.000000        2.049805     3.0       474.474609         False          False    True
6     778.136719     776.086914  519.584961   778.136719    2.000000   776.086914        0.0    2.049805        0.000000     4.0       474.474609         False          False    True
7     778.136719     778.136719  618.022217   778.136719    2.000000   778.136719        0.0    0.000000       -1.562744     5.0       474.474609         False          False    True
8     780.136719     779.699463  618.022461   780.136719    2.000000   779.699463        0.0    0.437256      -99.562500     1.0       474.474609         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=413901/2048.[0m
[08/10 17:17:45]  --------------------------------------------------------------------------------
[08/10 17:17:45]  Iteration: 191 (0 solution, 190 counterexamples)
[08/10 17:19:16]  Generator returned sat in 83.876422 secs.
[08/10 17:19:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:19:17]  Improved gap from 6/5 to 100
[08/10 17:19:17]  Improved number of small numbers from 60 to 85 out of a max of 114
[08/10 17:19:17]  Verifer returned sat in 1.207811 secs.
[08/10 17:19:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     349.732178     149.832031  547.88957   349.732178  200.000000   149.832031       0.00  199.900146      199.900068     2.0       149.832031            -1             -1    True
1     349.782227     249.832031  547.88957   349.782227  199.950195   249.832031       0.00   99.950195       99.950117     2.0       349.782227         False          False    True
2     498.269531     349.832031  547.88957   498.269531  248.437500   349.832031       0.00  148.437500      148.437422     1.0       349.782227         False          False    True
3     498.269531     449.832109  547.88957   498.269531   23.243750   449.832109       0.00   48.437422       48.437422     2.0       498.269531         False          False    True
4     498.319609     498.319609  547.88957   498.319609   48.487500   498.319609       0.00    0.000000      -51.512500     1.0       498.269531         False          False    True
5     597.294609     549.832109  547.88957   597.294609   98.975000   549.832109       0.00   47.462500      -52.537500     1.0       498.269531         False          False    True
6     749.782109     747.982109  547.88957   749.782109  199.950000   747.982109       0.00    1.800000       -0.050000     1.0       498.269531         False          False    True
7    1149.882109     749.832109  547.88957  1149.882109  401.900000   749.832109       0.00  400.050000      300.050000     1.0       498.269531         False          False    True
8    1555.632109     949.832031  547.88957  1555.632109  805.800000   949.832031     305.75  300.050078      300.050000     2.0       498.269531         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6001/20.[0m
[08/10 17:19:18]  --------------------------------------------------------------------------------
[08/10 17:19:18]  Iteration: 192 (0 solution, 191 counterexamples)
[08/10 17:20:34]  Generator returned sat in 69.730832 secs.
[08/10 17:20:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:20:37]  Improved gap from 0 to 10.9375
[08/10 17:20:37]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 17:20:37]  Verifer returned sat in 1.750979 secs.
[08/10 17:20:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1175.537109     875.537109  547.889404  1175.537109    0.0500   875.537109       0.00  300.0000        200.0000     5.0       875.537109            -1             -1   False
1    1270.637109     977.037109  547.889404  1270.637109  395.1000   977.037109       0.00  293.6000        195.1000     5.0       875.537109         False          False   False
2    1372.087109    1076.987109  547.889404  1372.087109  395.0500  1076.987109       0.05  295.0500        196.5000     5.0      1372.037109         False          False   False
3    1472.037109    1175.537109  547.889404  1472.037109  395.0000  1175.537109       0.05  296.4500        196.4500     6.0      1471.987109         False          False    True
4    1472.037109    1375.537109  547.889404  1472.037109  196.0000  1375.537109       0.05   96.4500         96.4500     2.0      1471.987109         False           True   False
5    1472.087109    1375.537109  551.389404  1472.087109   96.5000  1375.537109       0.05   96.5000          0.0000     2.0      1471.987109         False          False   False
6    1472.087109    1472.037109  640.451904  1472.087109   46.7500  1472.037109       0.05    0.0000        -10.9375     2.0      1471.987109         False          False   False
7    1493.962109    1482.974609  729.514404  1493.962109   21.8750  1482.974609       0.05   10.9375          0.0000     1.0      1471.987109         False          False   False
8    1493.962109    1493.912109  729.514404  1493.962109    9.4375  1493.912109       0.05    0.0000       -100.0000     2.0      1471.987109         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=393/2.[0m
[08/10 17:20:37]  --------------------------------------------------------------------------------
[08/10 17:20:37]  Iteration: 193 (0 solution, 192 counterexamples)
[08/10 17:22:47]  Generator returned sat in 122.376859 secs.
[08/10 17:22:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:22:48]  Improved gap from 1/40 to 0
[08/10 17:22:48]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 17:22:48]  Verifer returned sat in 0.653280 secs.
[08/10 17:22:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1670.737061    1370.737061  331.914307  1670.737061  300.099854  1370.737061   0.000000  300.000000      300.000000     5.0      1370.737061            -1             -1   False
1    1670.786865    1469.386963  331.914307  1670.786865  300.049805  1469.386963   0.049805  201.350098      200.000000     5.0      1670.737061         False          False   False
2    1670.836670    1470.737061  331.914307  1670.836670  201.399902  1470.737061   0.049805  200.049805      100.049805     6.0      1670.786865         False          False    True
3    1672.186768    1670.687012  331.914307  1672.186768  201.399902  1670.687012   0.049805    1.449951        1.399902     7.0      1670.786865         False          False    True
4    1672.236816    1670.737061  430.464355  1672.236816    1.500000  1670.737061   0.049805    1.449951        0.000000     8.0      1670.786865         False          False    True
5    1672.236816    1672.187012  530.014404  1672.236816    0.500000  1672.187012   0.049805    0.000000       -0.449951     2.0      1670.786865         False           True   False
6    1672.736816    1672.636963  629.914307  1672.736816    0.500000  1672.636963   0.049805    0.050049       -0.050049     1.0      1670.786865         False          False   False
7    1673.186768    1672.737061  729.514160  1673.186768    0.500000  1672.737061   0.049805    0.399902       -0.000244     1.0      1670.786865         False          False   False
8    1673.286865    1673.186768  829.414307  1673.286865    0.500000  1673.186768   0.049805    0.050293        0.000000     1.0      1670.786865         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=200.[0m
[08/10 17:22:49]  --------------------------------------------------------------------------------
[08/10 17:22:49]  Iteration: 194 (0 solution, 193 counterexamples)
[08/10 17:23:25]  Generator returned sat in 29.403029 secs.
[08/10 17:23:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:23:26]  Improved gap from 0 to 48.4375
[08/10 17:23:28]  Improved number of small numbers from 61 to 85 out of a max of 114
[08/10 17:23:28]  Verifer returned sat in 2.086275 secs.
[08/10 17:23:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2168.395752   -2368.395684  381.477051 -2168.395752  200.049805 -2368.395684       0.00  199.999932       99.999932     2.0     -2368.395684            -1             -1    True
1   -2168.395752   -2216.833008  381.477051 -2168.395752  199.999756 -2216.833008       0.00   48.437256       -0.000068     2.0     -2168.395752         False          False    True
2   -2124.216309   -2124.316517  388.960205 -2124.216309   92.616699 -2124.316517       0.00    0.100208      -48.337471     1.0     -2124.216309         False          False    True
3   -2017.883184   -2066.320684  430.964551 -2017.883184  106.433333 -2066.320684       0.00   48.437500        0.000000     1.0     -2124.216309         False          False    True
4   -1917.283184   -1917.883301  430.964551 -1917.283184  149.037500 -1917.883301       0.05    0.550117        0.550000     1.0     -2124.216309         False          False    True
5   -1917.283184   -1917.883184  479.143799 -1917.283184    0.500000 -1917.883184       0.05    0.550000      -51.270752     2.0     -2124.216309         False          False    True
6   -1816.616517   -1866.062350  529.747803 -1816.616517  101.216667 -1866.062350       0.05   49.395833       -0.000081     1.0     -2124.216309         False          False    True
7   -1767.883184   -1816.616699  581.014551 -1767.883184   98.129167 -1816.616699       0.05   48.683516        0.000000     1.0     -2124.216309         False          False    True
8   -1767.883184   -1767.933184  581.014648 -1767.883184   48.633301 -1767.933184       0.05    0.000000      -99.999902     2.0     -2124.216309         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=11/20.[0m
[08/10 17:23:28]  --------------------------------------------------------------------------------
[08/10 17:23:28]  Iteration: 195 (0 solution, 194 counterexamples)
[08/10 17:24:24]  Generator returned sat in 49.540957 secs.
[08/10 17:24:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:24:26]  Improved number of small numbers from 58 to 64 out of a max of 113
[08/10 17:24:26]  Verifer returned sat in 0.938727 secs.
[08/10 17:24:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2156.537109   -2356.486934  469.568301 -2156.537109     0.050000 -2356.486934        0.0  199.949824      199.949824     1.0     -2356.486934            -1             -1    True
1   -2156.537109   -2356.486934  469.568301 -2156.537109     0.050049 -2356.486934        0.0  199.949824       99.949824     1.0     -2356.486934         False          False    True
2   -2156.486934   -2156.486934  469.568301 -2156.486934   200.000000 -2156.486934        0.0    0.000000        0.000000     1.0     -2356.486934         False          False    True
3   -2117.243184   -2132.924434  469.568301 -2117.243184    39.243750 -2132.924434        0.0   15.681250      -60.756250     1.0     -2117.243184         False          False    True
4   -2056.436934   -2056.486934  469.568301 -2056.436934    76.487500 -2056.486934        0.0    0.050000      -99.950000     1.0     -2117.243184         False          False    True
5   -1905.511934   -1956.486934  469.568301 -1905.511934   150.975000 -1956.486934        0.0   50.975000      -49.025000     1.0     -2117.243184         False          False    True
6   -1656.536934   -1756.486934  469.568301 -1656.536934   299.950000 -1756.486934        0.0   99.950000       99.950000     1.0     -2117.243184         False          False    True
7   -1158.586934   -1656.486934  469.568301 -1158.586934   597.900000 -1656.486934        0.0  497.900000      497.900000     1.0     -2117.243184         False          False    True
8    -462.686934   -1656.436768  469.568301  -462.686934  1193.800000 -1656.436768      595.9  597.849834      497.900000     2.0     -2117.243184         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=4979/10.[0m
[08/10 17:24:26]  --------------------------------------------------------------------------------
[08/10 17:24:26]  Iteration: 196 (0 solution, 195 counterexamples)
[08/10 17:25:43]  Generator returned sat in 69.703195 secs.
[08/10 17:25:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:25:56]  Improved gap from 1/800 to 3.125
[08/10 17:25:57]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/10 17:25:57]  Verifer returned sat in 13.565797 secs.
[08/10 17:25:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2132.830811   -2139.655684  252.736816 -2132.830811  0.099854 -2139.655684        0.0  6.824873        6.824639     2.0     -2139.655684            -1             -1   False
1   -2132.730684   -2133.605684  342.787109 -2132.730684  6.925000 -2133.605684        0.0  0.875000       -3.024941     2.0     -2139.655684         False          False   False
2   -2126.680684   -2129.705684  439.662051 -2126.680684  6.925000 -2129.705684        0.0  3.025000       -0.100000     1.0     -2139.655684         False          False   False
3   -2126.480684   -2126.580684  536.537051 -2126.480684  3.225000 -2126.580684        0.0  0.100000       -3.025000     1.0     -2126.480684         False          False   False
4   -2120.430684   -2123.455684  633.412051 -2120.430684  6.150000 -2123.455684        0.0  3.025000       -0.100000     1.0     -2126.480684         False          False   False
5   -2117.305684   -2120.330684  730.287051 -2117.305684  6.150000 -2120.330684        0.0  3.025000       -0.100000     1.0     -2126.480684         False          False   False
6   -2114.568184   -2117.205684  827.161865 -2114.568184  5.762500 -2117.205684        0.0  2.637500       -0.487686     1.0     -2126.480684         False          False   False
7   -2111.636934   -2112.724434  922.680801 -2111.636934  5.568750 -2112.724434        0.0  1.087500       -2.037500     1.0     -2126.480684         False          False   False
8   -2106.574434   -2109.599365  922.680908 -2106.574434  6.150000 -2109.599365        0.0  3.024932      -96.974893     1.0     -2126.480684         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 17:25:58]  --------------------------------------------------------------------------------
[08/10 17:25:58]  Iteration: 197 (0 solution, 196 counterexamples)
[08/10 17:27:39]  Generator returned sat in 94.481060 secs.
[08/10 17:27:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:27:41]  Improved number of small numbers from 79 to 95 out of a max of 113
[08/10 17:27:41]  Verifer returned sat in 1.132674 secs.
[08/10 17:27:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -760.153809   -1360.153809  922.680664  -760.153809     0.001250 -1360.153809    0.000000  600.000000      600.000000     7.0     -1360.153809            -1             -1    True
1    -760.153809   -1276.153809  922.680664  -760.153809     0.001465 -1276.153809    0.000000  516.000000      500.000000     7.0     -1360.153809         False          False    True
2    -587.151855   -1160.155059  922.680664  -587.151855   689.001953 -1160.155059    0.000000  573.003203      573.001953     7.0     -1360.153809         False          False    True
3    -587.151855   -1160.153809  922.680664  -587.151855     0.001250 -1160.153809    0.000000  573.001953      473.001953     8.0      -587.151855         False          False    True
4    -587.151855   -1060.153809  922.680664  -587.151855    99.000625 -1060.153809    0.000000  473.001953      373.001953     9.0      -587.151855         False          False    True
5    -587.151855    -860.153809  922.680664  -587.151855   473.000938  -860.153809    0.000000  273.001953      273.001953     8.0      -587.151855         False           True   False
6     299.849473    -760.154053  922.680664   299.849473  1160.003281  -760.154053  486.999844  573.003682      573.003438     8.0      -587.151855         False          False   False
7     299.849473    -760.153809  922.680664   299.849473     0.010000  -760.153809  486.999844  573.003438      473.003438     9.0      -587.151855         False          False    True
8     299.849473    -587.150391  922.680664   299.849473   450.515000  -587.150391  486.999844  400.000020      373.003438     3.0      -587.151855         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=1833611/3200.[0m
[08/10 17:27:42]  --------------------------------------------------------------------------------
[08/10 17:27:42]  Iteration: 198 (0 solution, 197 counterexamples)
[08/10 17:31:49]  Generator returned sat in 240.003825 secs.
[08/10 17:31:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:31:55]  Improved gap from 1/4800 to 32.8125
[08/10 17:31:56]  Improved number of small numbers from 60 to 84 out of a max of 114
[08/10 17:31:56]  Verifer returned sat in 5.861391 secs.
[08/10 17:31:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0       1.621826    -198.378027 -339.094971     1.621826    0.002500  -198.378027     0.0000  199.999854      100.000000     9.0      -198.378027            -1             -1     -1
1       1.621826     -31.190674 -339.094971     1.621826    0.002686   -31.190674     0.0000   32.812500        0.000000     2.0      -198.378027         False           True  False
2     134.429443     101.619473 -339.094971   134.429443  165.620117   101.619473     0.0000   32.809971       32.807617     1.0      -198.378027         False          False  False
3     134.429443     101.621973 -271.907617   134.429443   27.250000   101.621973     0.0000   32.807471       -0.005029     2.0       134.429443         False          False  False
4     267.246973     234.431973 -271.907617   267.246973  165.625000   234.431973     0.0025   32.812500       32.810000     1.0       134.429443         False          False  False
5     267.246973     234.434473 -204.720117   267.246973    0.010000   234.434473     0.0025   32.810000       -0.002500     2.0       134.429443         False          False   True
6     299.849473     267.246973 -189.090088   299.849473   65.412500   267.246973     0.0025   32.600000      -51.769971     1.0       134.429443         False          False   True
7     381.768223     351.616973 -121.902832   381.768223  114.518750   351.616973     0.0025   30.148750       -2.663965     1.0       134.429443         False          False   True
8     466.471348     384.429688 -121.902832   466.471348  114.851875   384.429688     0.0025   82.039160      -17.960840     1.0       134.429443         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3281/100.[0m
[08/10 17:31:56]  --------------------------------------------------------------------------------
[08/10 17:31:56]  Iteration: 199 (0 solution, 198 counterexamples)
[08/10 17:33:40]  Generator returned sat in 96.450670 secs.
[08/10 17:33:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:33:51]  Improved gap from 0 to 45.3125
[08/10 17:33:51]  Improved number of small numbers from 92 to 100 out of a max of 114
[08/10 17:33:51]  Verifer returned sat in 11.031623 secs.
[08/10 17:33:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      71.190918    -128.759277 -408.713867    71.190918    0.050049  -128.759277       0.00  199.950195       99.950195     9.0      -128.759277            -1             -1     -1
1      71.290527      71.240479 -408.713867    71.290527  200.049805    71.240479       0.00    0.050049        0.049805     1.0      -128.759277         False           True  False
2     265.279541     171.240723 -408.713867   265.279541  194.039062   171.240723       0.00   94.038818       94.038818     1.0       265.279541         False          False  False
3     416.603223     265.329785 -408.713867   416.603223  245.362500   265.329785       0.05  151.223437      145.312500     1.0       265.279541         False          False  False
4     416.603223     357.912598 -408.713867   416.603223  121.181250   357.912598       0.05   58.640625       45.312500     2.0       265.279541         False          False   True
5     416.603223     371.240723 -354.026367   416.603223   58.590625   371.240723       0.05   45.312500        0.000000     3.0       265.279541         False          False   True
6     416.603223     416.553223 -299.338867   416.603223   27.295313   416.553223       0.05    0.000000      -45.312500     4.0       265.279541         False          False   True
7     507.862598     461.865723 -245.335938   507.862598   91.259375   461.865723       0.05   45.946875       -0.050195     1.0       507.812598          True           True  False
8     561.521973     507.862793 -245.335938   561.521973   99.606250   507.862793       0.05   53.609180      -46.390820     1.0       507.812598         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2325/16.[0m
[08/10 17:33:52]  --------------------------------------------------------------------------------
[08/10 17:33:52]  Iteration: 200 (0 solution, 199 counterexamples)
[08/10 17:36:21]  Generator returned sat in 141.883068 secs.
[08/10 17:36:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:36:22]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 17:36:22]  Verifer returned sat in 0.724839 secs.
[08/10 17:36:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -630.517822    -730.417969 -508.61377  -630.517822    0.100000  -730.417969    0.000000   99.900146       99.900146     1.0      -730.417969            -1             -1   False
1    -630.117920    -630.417969 -508.61377  -630.117920  100.300049  -630.417969    0.099854    0.200195        0.200195     1.0      -730.417969         False          False   False
2    -430.417969    -630.117920 -508.61377  -430.417969  199.900146  -630.117920   99.799805   99.900146        0.200195     1.0      -730.417969         False          False    True
3    -330.518066    -442.564453 -508.61377  -330.518066  199.800049  -442.564453   99.799805   12.246582        0.100098     1.0      -430.317871         False          False    True
4    -200.337891    -330.417969 -508.61377  -200.337891  142.426758  -330.417969  129.879883    0.200195        0.200195     1.0      -430.317871         False          False    True
5    -128.324707    -279.304443 -508.61377  -128.324707   72.213379  -279.304443  129.879883   21.099854      -27.786621     1.0      -430.317871         False          False    True
6      24.482178    -130.417969 -508.61377    24.482178  173.906738  -130.417969  154.699951    0.200195        0.200195     1.0      -430.317871         False          False    True
7     112.235352     -42.564453 -508.61377   112.235352   87.953369   -42.564453  154.699951    0.099854      -12.046631     1.0      -430.317871         False          False    True
8     254.562256     -30.417725 -508.61377   254.562256  142.426758   -30.417725  184.780029  100.199951        0.200195     1.0      -430.317871         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/1024.[0m
[08/10 17:36:23]  --------------------------------------------------------------------------------
[08/10 17:36:23]  Iteration: 201 (0 solution, 200 counterexamples)
[08/10 17:36:44]  Generator returned sat in 13.804718 secs.
[08/10 17:36:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:36:45]  Improved number of small numbers from 60 to 113 out of a max of 113
[08/10 17:36:45]  Verifer returned sat in 0.388614 secs.
[08/10 17:36:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -633.367920    -733.417969 -508.61377  -633.367920    0.100000  -733.417969    0.000000  100.050049       97.050049     2.0      -733.417969            -1             -1   False
1    -630.192871    -633.343018 -508.61377  -630.192871  103.225098  -633.343018    0.024902    3.125244        0.200195     1.0      -733.417969         False          False   False
2    -433.343018    -630.192871 -508.61377  -433.343018  199.975098  -630.192871   96.874756   99.975098        0.200195     1.0      -733.417969         False          False    True
3    -333.368164    -443.564453 -508.61377  -333.368164  199.949951  -443.564453   96.874756   13.321533        0.175049     1.0      -430.242920         False          False    True
4    -203.262939    -332.467773 -508.61377  -203.262939  143.426758  -332.467773  126.954834    2.250000        0.200195     1.0      -430.242920         False          False    True
5    -133.299561    -277.379395 -508.61377  -133.299561   72.213379  -277.379395  126.954834   17.125000      -29.836426     1.0      -430.242920         False          False    True
6      24.482178    -130.417969 -508.61377    24.482178  174.906738  -130.417969  154.699951    0.200195        0.200195     1.0      -430.242920         False          False    True
7     112.235352     -42.564453 -508.61377   112.235352   87.953369   -42.564453  154.699951    0.099854      -12.046631     1.0      -430.242920         False          False    True
8     255.587158     -30.417725 -508.61377   255.587158  143.451660   -30.417725  185.804932  100.199951        0.200195     1.0      -430.242920         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/1024.[0m
[08/10 17:36:45]  --------------------------------------------------------------------------------
[08/10 17:36:45]  Iteration: 202 (0 solution, 201 counterexamples)
[08/10 17:37:46]  Generator returned sat in 53.147016 secs.
[08/10 17:37:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:37:47]  Improved gap from 0 to 0
[08/10 17:37:47]  Improved number of small numbers from 107 to 114 out of a max of 114
[08/10 17:37:47]  Verifer returned sat in 0.821982 secs.
[08/10 17:37:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -530.393066    -930.392822 -308.638916  -530.393066    0.100000  -930.392822   0.024902  399.974854      399.974854     2.0      -930.392822            -1             -1     -1
1    -530.367920    -930.392822 -308.638916  -530.367920  400.000000  -930.392822   0.024902  400.000000      300.000000     2.0      -930.392822         False          False   True
2    -530.367920    -830.392822 -308.638916  -530.367920  400.000000  -830.392822   0.024902  300.000000      200.000000     3.0      -930.392822         False          False   True
3    -529.917969    -630.392822 -308.638916  -529.917969  300.449951  -630.392822   0.024902  100.449951      100.449951     4.0      -529.942871         False          False   True
4    -529.917969    -630.392822 -308.638916  -529.917969    1.000000  -630.392822   0.024902  100.449951        0.449951     4.0      -529.942871         False          False   True
5    -529.917969    -530.392822 -209.088867  -529.917969    1.000000  -530.392822   0.024902    0.449951        0.000000     5.0      -529.942871         False          False   True
6    -529.867920    -529.917969 -109.138916  -529.867920    0.500000  -529.917969   0.024902    0.025146        0.000000     1.0      -529.942871         False           True  False
7    -529.393066    -529.867920   -9.614014  -529.393066    0.500000  -529.867920   0.024902    0.449951       -0.000244     1.0      -529.942871         False          False  False
8    -529.343018    -529.392969   -9.614014  -529.343018    0.500000  -529.392969   0.024902    0.025049      -99.950195     1.0      -529.942871         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=614451/2048.[0m
[08/10 17:37:48]  --------------------------------------------------------------------------------
[08/10 17:37:48]  Iteration: 203 (0 solution, 202 counterexamples)
[08/10 17:39:50]  Generator returned sat in 115.441376 secs.
[08/10 17:39:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:39:53]  Improved gap from 51/8192 to 23.4375
[08/10 17:39:53]  Improved number of small numbers from 42 to 114 out of a max of 114
[08/10 17:39:53]  Verifer returned sat in 1.814735 secs.
[08/10 17:39:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -410.583008    -410.620117 -259.151367  -410.583008    0.037354  -410.620117   0.024902   0.012207       -0.012451     9.0      -410.620117            -1             -1     -1
1    -410.557861    -410.595459 -182.588867  -410.557861    0.037354  -410.595459   0.024902   0.012695      -23.424805     1.0      -410.620117         False           True  False
2    -287.095459    -292.995117 -182.588867  -287.095459  123.475098  -292.995117   0.037354   5.862305        0.025146     1.0      -410.620117         False          False  False
3    -187.082764    -191.995361 -182.588867  -187.082764  105.875000  -191.995361   0.050049   4.862549        0.025146     1.0      -187.132812         False          False   True
4     -87.070312     -87.157959 -182.588867   -87.070312  104.875000   -87.157959   0.062500   0.025146        0.025146     1.0      -187.132812         False          False   True
5      16.779541     -63.495117 -182.588867    16.779541  103.875000   -63.495117   3.912354  76.362305        0.025146     1.0      -187.132812         False          False   True
6      43.292236      12.879883 -109.138916    43.292236  102.875000    12.879883   3.912354  26.500000       -0.012207     1.0      -187.132812         False          False   True
7      66.729736      39.392090  -32.576660    66.729736   49.937500    39.392090   3.912354  23.425293       -0.012451     1.0      -187.132812         False          False   True
8      66.773193      62.829834  -32.576660    66.773193   23.468750    62.829834   3.912354   0.031006      -99.968994     1.0      -187.132812         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=103/4096.[0m
[08/10 17:39:54]  --------------------------------------------------------------------------------
[08/10 17:39:54]  Iteration: 204 (0 solution, 203 counterexamples)
[08/10 17:40:15]  Generator returned sat in 14.700206 secs.
[08/10 17:40:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:40:17]  Improved gap from 747/32 to 23.4375
[08/10 17:40:18]  Improved number of small numbers from 73 to 78 out of a max of 114
[08/10 17:40:18]  Verifer returned sat in 2.194262 secs.
[08/10 17:40:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2490.607910   -2490.707520 -182.588867 -2490.607910  200.099854 -2490.707520        0.0   0.099609      -99.900244     7.0     -2490.707520            -1             -1     -1
1   -2290.607666   -2290.707666 -182.588867 -2290.607666  200.099854 -2290.707666        0.0   0.100000        0.100000     1.0     -2490.707520         False           True  False
2   -2190.407666   -2193.707666 -182.588867 -2190.407666  100.300000 -2193.707666        0.1   3.200000        0.200000     1.0     -2190.507666         False          False  False
3   -2090.307666   -2090.707666 -182.588867 -2090.307666  103.300000 -2090.707666        0.2   0.200000        0.200000     1.0     -2190.507666         False          False   True
4   -1988.707666   -1990.707666 -182.588867 -1988.707666  101.800000 -1990.707666        1.8   0.200000        0.200000     1.0     -2190.507666         False          False   True
5   -1888.607666   -1963.045166 -182.588867 -1888.607666  100.300000 -1963.045166        1.9  72.537500        0.200000     1.0     -2190.507666         False          False   True
6   -1862.345166   -1888.707666 -109.051367 -1862.345166   98.800000 -1888.707666        1.9  24.462500        0.000000     1.0     -2190.507666         False          False   True
7   -1838.907666   -1864.245166  -32.488867 -1838.907666   47.900000 -1864.245166        1.9  23.437500        0.000000     2.0     -2190.507666         False          False   True
8   -1838.907666   -1840.807666  -32.488770 -1838.907666   22.450000 -1840.807666        1.9   0.000000      -99.999902     2.0     -2190.507666         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/5.[0m
[08/10 17:40:19]  --------------------------------------------------------------------------------
[08/10 17:40:19]  Iteration: 205 (0 solution, 204 counterexamples)
[08/10 17:40:40]  Generator returned sat in 13.934745 secs.
[08/10 17:40:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:40:42]  Improved gap from 0 to 23.4375
[08/10 17:40:42]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 17:40:42]  Verifer returned sat in 1.544277 secs.
[08/10 17:40:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2087.402832   -2263.952637 -184.651367 -2087.402832  200.012695 -2263.952637   0.000000  176.549805       76.549805     4.0     -2263.952637            -1             -1     -1
1   -2063.952637   -2087.390137 -184.651367 -2063.952637  200.000000 -2087.390137   0.000000   23.437500        0.000000     1.0     -2063.952637         False           True  False
2   -1972.790039   -1972.790039 -184.651367 -1972.790039  114.600098 -1972.790039   0.000000    0.000000       -8.837402     1.0     -1972.790039         False          False  False
3   -1863.915039   -1870.790039 -184.651367 -1863.915039  108.875000 -1870.790039   0.012451    6.862549        0.025146     1.0     -1863.927490         False          False  False
4   -1763.902588   -1763.952637 -184.651367 -1763.902588  106.875000 -1763.952637   0.024902    0.025146        0.025146     1.0     -1863.927490         False          False   True
5   -1659.052734   -1740.290039 -184.651367 -1659.052734  104.875000 -1740.290039   4.874756   76.362549        0.025146     1.0     -1863.927490         False          False   True
6   -1632.540283   -1663.915039 -111.201172 -1632.540283  102.875000 -1663.915039   4.874756   26.500000       -0.012207     1.0     -1863.927490         False          False   True
7   -1609.102783   -1637.402588  -34.638916 -1609.102783   49.937500 -1637.402588   4.874756   23.425049       -0.012451     1.0     -1863.927490         False          False   True
8   -1609.059082   -1613.965088   41.923584 -1609.059082   23.468750 -1613.965088   4.874756    0.031250      -23.406250     1.0     -1863.927490         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=103/4096.[0m
[08/10 17:40:43]  --------------------------------------------------------------------------------
[08/10 17:40:43]  Iteration: 206 (0 solution, 205 counterexamples)
[08/10 17:41:06]  Generator returned sat in 16.283924 secs.
[08/10 17:41:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:41:07]  Improved gap from 1/300 to 100
[08/10 17:41:08]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/10 17:41:08]  Verifer returned sat in 0.918028 secs.
[08/10 17:41:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2315.952734   -2316.052734 -184.651367 -2315.952734  100.200000 -2316.052734        0.0    0.100000       -0.100000     2.0     -2316.052734            -1             -1   False
1   -2215.852734   -2315.852734 -184.651367 -2215.852734  100.200000 -2315.852734        0.0  100.000000        0.000000     1.0     -2316.052734         False          False   False
2   -2215.852734   -2215.852734 -184.651367 -2215.852734   99.900000 -2215.852734        0.0    0.000000     -100.000000     2.0     -2215.852734         False          False   False
3   -2011.252734   -2015.852734 -184.651367 -2011.252734  204.600000 -2015.852734        4.4    0.200000        0.200000     1.0     -2215.852734         False          False   False
4   -1911.152734   -1929.369401 -184.651367 -1911.152734  100.300000 -1929.369401        4.5   13.716667        0.200000     1.0     -2215.852734         False          False    True
5   -1876.719401   -1881.319401 -184.651367 -1876.719401   48.150000 -1881.319401        4.5    0.100000      -65.366667     1.0     -2215.852734         False          False    True
6   -1711.052734   -1715.852734 -184.651367 -1711.052734  165.766667 -1715.852734        4.6    0.200000        0.200000     1.0     -2215.852734         False          False    True
7   -1630.369401   -1652.491623 -184.651367 -1630.369401   80.883333 -1652.491623        4.6   17.522222      -19.116667     1.0     -2215.852734         False          False    True
8   -1510.952734   -1615.852734 -184.651367 -1510.952734  136.938889 -1615.852734        4.7  100.200000        0.200000     1.0     -2215.852734         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 17:41:08]  --------------------------------------------------------------------------------
[08/10 17:41:08]  Iteration: 207 (0 solution, 206 counterexamples)
[08/10 17:43:00]  Generator returned sat in 105.215507 secs.
[08/10 17:43:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:01]  Improved gap from 0 to 100
[08/10 17:43:02]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:43:02]  Verifer returned sat in 0.414216 secs.
[08/10 17:43:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2112.462891   -2112.612793 -387.941406 -2112.462891    0.049805 -2112.612793   0.050049    0.099854        0.049805     9.0     -2112.612793            -1             -1     -1
1   -2112.462891   -2112.562744 -387.941406 -2112.462891    0.049805 -2112.562744   0.050049    0.049805      -99.950195     2.0     -2112.612793         False           True   True
2   -1616.512695   -2012.562744 -387.941406 -1616.512695  496.000000 -2012.562744   0.050049  396.000000      296.000000     1.0     -2112.612793         False          False   True
3   -1616.512695   -1812.562744 -387.941406 -1616.512695  395.949951 -1812.562744   0.050049  196.000000      196.000000     2.0     -1616.562744         False          False   True
4   -1414.562744   -1812.562744 -387.941406 -1414.562744  397.949951 -1812.562744   0.050049  397.949951      297.949951     2.0     -1616.562744         False          False   True
5   -1412.562744   -1614.462891 -387.941406 -1412.562744  399.949951 -1614.462891   0.050049  201.850098      199.949951     2.0     -1616.562744         False          False   True
6   -1212.462891   -1612.562744 -387.941406 -1212.462891  401.949951 -1612.562744   0.050049  400.049805      300.049805     3.0     -1616.562744         False          False   True
7   -1212.462891   -1412.562744 -387.941406 -1212.462891  199.500000 -1412.562744   0.050049  200.049805      200.049805     2.0     -1212.512939          True           True  False
8   -1013.012695   -1312.562744 -387.941406 -1013.012695  399.500000 -1312.562744   0.050049  299.500000      299.500000     3.0     -1212.512939         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=614605/2048.[0m
[08/10 17:43:02]  --------------------------------------------------------------------------------
[08/10 17:43:02]  Iteration: 208 (0 solution, 207 counterexamples)
[08/10 17:44:21]  Generator returned sat in 71.728602 secs.
[08/10 17:44:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:44:23]  Improved gap from 0 to 46.875
[08/10 17:44:23]  Improved number of small numbers from 98 to 114 out of a max of 114
[08/10 17:44:23]  Verifer returned sat in 1.190110 secs.
[08/10 17:44:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1591.412842   -1791.362793 -709.141406 -1591.412842  450.924805 -1791.362793        0.0  199.949951      199.949902     8.0     -1791.362793            -1             -1   False
1   -1340.437744   -1791.362549 -709.141406 -1340.437744  450.925049 -1791.362549        0.0  450.924805      350.925000     3.0     -1791.362793         False          False   False
2   -1340.437744   -1591.362793 -709.141406 -1340.437744    0.050049 -1591.362793        0.0  250.925049      250.925000     2.0     -1340.437744         False          False   False
3   -1340.437744   -1491.362793 -709.141406 -1340.437744   56.875000 -1491.362793        0.0  150.925049      150.925000     3.0     -1340.437744         False          False   False
4   -1340.437744   -1393.362793 -709.141406 -1340.437744   54.875000 -1393.362793        0.0   52.925049       50.925000     4.0     -1340.437744         False          False   False
5   -1340.437744   -1391.362549 -660.066406 -1340.437744   52.875000 -1391.362549        0.0   50.924805        0.000000     5.0     -1340.437744         False          False   False
6   -1340.437744   -1340.437744 -606.941406 -1340.437744   50.875000 -1340.437744        0.0    0.000000      -46.875000     6.0     -1340.437744         False          False   False
7   -1291.562744   -1293.562744 -553.816406 -1291.562744   48.875000 -1293.562744        0.0    2.000000      -44.875000     1.0     -1340.437744         False          False   False
8   -1246.687744   -1246.687744 -553.816406 -1246.687744   46.875000 -1246.687744        0.0    0.000000     -100.000000     1.0     -1340.437744         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=718797/2048.[0m
[08/10 17:44:23]  --------------------------------------------------------------------------------
[08/10 17:44:23]  Iteration: 209 (0 solution, 208 counterexamples)
[08/10 17:45:17]  Generator returned sat in 46.923131 secs.
[08/10 17:45:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:20]  Improved gap from 0 to 1.5625
[08/10 17:45:20]  Improved number of small numbers from 94 to 114 out of a max of 114
[08/10 17:45:20]  Verifer returned sat in 2.388661 secs.
[08/10 17:45:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1400.637939   -1401.862793 -1240.191406 -1400.637939  0.199951 -1401.862793        0.0  1.224854        1.224854     9.0     -1401.862793            -1             -1     -1
1   -1400.637939   -1400.737793 -1142.878906 -1400.637939  0.100098 -1400.737793        0.0  0.099854       -1.462646     2.0     -1400.637939         False           True  False
2   -1397.275391   -1399.075439 -1044.878906 -1397.275391  3.462402 -1399.075439        0.0  1.800049       -0.100098     1.0     -1400.637939         False          False  False
3   -1395.712891   -1397.175293  -946.441406 -1395.712891  3.362549 -1397.175293        0.0  1.462402       -0.100098     1.0     -1395.712891         False          False  False
4   -1394.487793   -1395.612793  -848.003906 -1394.487793  2.687500 -1395.612793        0.0  1.125000       -0.437500     1.0     -1395.712891         False          False  False
5   -1392.487793   -1394.050293  -749.566406 -1392.487793  3.125000 -1394.050293        0.0  1.562500        0.000000     1.0     -1395.712891         False          False  False
6   -1391.025146   -1392.487793  -651.128906 -1391.025146  3.025146 -1392.487793        0.0  1.462646       -0.099854     2.0     -1395.712891         False          False  False
7   -1389.800293   -1390.925293  -553.816406 -1389.800293  2.687500 -1390.925293        0.0  1.125000       -1.562500     1.0     -1395.712891         False          False  False
8   -1388.237793   -1388.237793  -553.816406 -1388.237793  2.687500 -1388.237793        0.0  0.000000     -100.000000     1.0     -1395.712891         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 17:45:21]  --------------------------------------------------------------------------------
[08/10 17:45:21]  Iteration: 210 (0 solution, 209 counterexamples)
[08/10 17:46:10]  Generator returned sat in 41.944045 secs.
[08/10 17:46:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:46:13]  Improved gap from 11261/40960 to 0
[08/10 17:46:14]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/10 17:46:14]  Verifer returned sat in 3.549550 secs.
[08/10 17:46:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2088.451904   -2091.426866 -201.499268 -2088.451904  2.975830 -2091.426866        0.0  2.974962        2.974777     2.0     -2091.426866            -1             -1   False
1   -2088.451366   -2088.452148 -104.474583 -2088.451366  2.975500 -2088.452148        0.0  0.000782        0.000000     2.0     -2088.451366         False          False   False
2   -2088.451366   -2088.451366   -4.491455 -2088.451366  0.000732 -2088.451366        0.0  0.000000       -0.016872     2.0     -2088.451366         False          False   False
3   -2088.433866   -2088.434366   95.507568 -2088.433866  0.017500 -2088.434366        0.0  0.000500       -0.000349     1.0     -2088.451366         False          False   False
4   -2086.941866   -2088.433366  194.015917 -2086.941866  1.492500 -2088.433366        0.0  1.491500        0.000000     1.0     -2088.451366         False          False   False
5   -2086.941866   -2086.941866  294.015381 -2086.941866  0.010000 -2086.941866        0.0  0.000000       -0.000536     2.0     -2088.451366         False          False   False
6   -2086.931866   -2086.932366  393.997070 -2086.931866  0.010000 -2086.932366        0.0  0.000500       -0.008847     1.0     -2088.451366         False          False   False
7   -2086.922366   -2086.922866  493.996417 -2086.922366  0.010000 -2086.922866        0.0  0.000500        0.000000     1.0     -2088.451366         False          False   False
8   -2086.912366   -2086.922363  493.996582 -2086.912366  0.010500 -2086.922363        0.0  0.009997      -99.989835     1.0     -2088.451366         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1000.[0m
[08/10 17:46:15]  --------------------------------------------------------------------------------
[08/10 17:46:15]  Iteration: 211 (0 solution, 210 counterexamples)
[08/10 17:47:16]  Generator returned sat in 54.169528 secs.
[08/10 17:47:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:47:17]  Improved gap from 0 to 0
[08/10 17:47:17]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 17:47:17]  Verifer returned sat in 0.425382 secs.
[08/10 17:47:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1788.634277   -2188.434326   -4.491699 -1788.634277    0.100000 -2188.434326        0.0  399.800049      399.800049     8.0     -2188.434326            -1             -1   False
1   -1788.534424   -2188.434326   -4.491699 -1788.534424  399.899902 -2188.434326        0.0  399.899902      299.899902     8.0     -2188.434326         False          False   False
2   -1788.534424   -2086.734619   -4.491699 -1788.534424  399.899902 -2086.734619        0.0  298.200195      199.899902     8.0     -2188.434326         False          False   False
3   -1686.834717   -1888.434570   -4.491699 -1686.834717  399.899902 -1888.434570        0.0  201.599854      201.599609     9.0     -2188.434326         False          False   False
4   -1686.834717   -1788.434570   -4.491699 -1686.834717    1.500000 -1788.434570        0.0  101.599854      101.599609     2.0     -1686.834717          True           True   False
5   -1686.834717   -1688.534668   -4.491699 -1686.834717    1.500000 -1688.534668        0.0    1.699951        1.599609     3.0     -1686.834717         False          False   False
6   -1686.834717   -1688.434326   93.908691 -1686.834717    1.500000 -1688.434326        0.0    1.599609        0.000000     4.0     -1686.834717         False          False   False
7   -1686.834717   -1686.834717  193.908691 -1686.834717    1.500000 -1686.834717        0.0    0.000000        0.000000     5.0     -1686.834717         False          False   False
8   -1685.334717   -1685.334717  193.908691 -1685.334717    1.500000 -1685.334717        0.0    0.000000      -98.500000     1.0     -1686.834717         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1228799/4096.[0m
[08/10 17:47:18]  --------------------------------------------------------------------------------
[08/10 17:47:18]  Iteration: 212 (0 solution, 211 counterexamples)
[08/10 17:47:45]  Generator returned sat in 19.639189 secs.
[08/10 17:47:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:47:46]  Improved gap from 0 to 0
[08/10 17:47:47]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:47:47]  Verifer returned sat in 0.957794 secs.
[08/10 17:47:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1803.954102   -2103.004395 -182.531738 -1803.954102    0.100098 -2103.004395        0.0  299.050293      299.050049     7.0     -2103.004395            -1             -1    True
1   -1803.954102   -2003.054199 -182.531738 -1803.954102  199.099854 -2003.054199        0.0  199.100098      199.050049     7.0     -2103.004395         False          False    True
2   -1803.954102   -2003.004150 -182.531738 -1803.954102  199.099854 -2003.004150        0.0  199.050049       99.050049     8.0     -2103.004395         False          False    True
3   -1803.904297   -1803.954346 -182.531494 -1803.904297  199.099854 -1803.954346        0.0    0.050049       -0.899902     9.0     -2103.004395         False          False    True
4   -1802.954346   -1803.004150  -82.581787 -1802.954346    1.000000 -1803.004150        0.0    0.049805       -0.000244     1.0     -1802.954346          True           True   False
5   -1802.004150   -1802.904297   16.468262 -1802.004150    1.000000 -1802.904297        0.0    0.900146        0.000000     1.0     -1802.954346         False          False   False
6   -1801.904297   -1801.904541  115.418457 -1801.904297    1.000000 -1801.904541        0.0    0.000244       -0.949951     1.0     -1802.954346         False          False   False
7   -1800.904541   -1800.954346  215.368164 -1800.904541    1.000000 -1800.954346        0.0    0.049805       -0.000488     1.0     -1802.954346         False          False   False
8   -1799.954346   -1800.854248  215.368164 -1799.954346    1.000000 -1800.854248        0.0    0.899902      -99.050293     1.0     -1802.954346         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=815309/4096.[0m
[08/10 17:47:47]  --------------------------------------------------------------------------------
[08/10 17:47:47]  Iteration: 213 (0 solution, 212 counterexamples)
[08/10 17:50:23]  Generator returned sat in 147.403562 secs.
[08/10 17:50:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:50:26]  Improved gap from 1/16384 to 17.1875
[08/10 17:50:26]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 17:50:26]  Verifer returned sat in 2.628579 secs.
[08/10 17:50:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3088.111328   -3105.736572  609.743408 -3088.111328  132.799805 -3105.736572   0.000000   17.625244       -0.099854     3.0     -3105.736572            -1             -1   False
1   -2973.036621   -3088.011475  609.743408 -2973.036621  132.699951 -3088.011475   0.000000  114.974854       14.974854     1.0     -2973.036621         False          False   False
2   -2955.411621   -2972.598877  677.143311 -2955.411621  132.599854 -2972.598877   0.000000   17.187256       -0.000244     1.0     -2955.411621         False          False   False
3   -2840.098877   -2871.736572  677.143311 -2840.098877  132.500000 -2871.736572   0.237549   31.400146       15.074951     1.0     -2840.336426         False          False   False
4   -2739.999023   -2770.936523  677.143311 -2739.999023  131.500000 -2770.936523   0.337402   30.600098       15.074951     1.0     -2840.336426         False          False    True
5   -2640.099121   -2706.086426  677.143311 -2640.099121  130.500000 -2706.086426   0.337402   65.649902       14.974854     1.0     -2840.336426         False          False    True
6   -2639.999023   -2655.411377  759.955811 -2639.999023   65.750000 -2655.411377   0.337402   15.074951       -2.112549     2.0     -2840.336426         False          False    True
7   -2621.698975   -2638.223877  842.768311 -2621.698975   33.375000 -2638.223877   0.337402   16.187500       -1.000000     1.0     -2840.336426         False          False    True
8   -2620.698975   -2621.036377  842.768555 -2620.698975   17.187500 -2621.036377   0.337402    0.000000      -99.999756     1.0     -2840.336426         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=61747/4096.[0m
[08/10 17:50:27]  --------------------------------------------------------------------------------
[08/10 17:50:27]  Iteration: 214 (0 solution, 213 counterexamples)
[08/10 17:50:50]  Generator returned sat in 15.649162 secs.
[08/10 17:50:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:50:53]  Improved gap from 137/8 to 23.4375
[08/10 17:50:54]  Improved number of small numbers from 67 to 76 out of a max of 114
[08/10 17:50:54]  Verifer returned sat in 3.180114 secs.
[08/10 17:50:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2938.548828   -3038.499023  197.104025 -2938.548828  100.200195 -3038.499023       0.00  99.950195       99.950049     2.0     -3038.499023            -1             -1   False
1   -2938.348877   -2938.498877  197.104025 -2938.348877  100.150146 -2938.498877       0.05   0.100000        0.100000     1.0     -2938.398877         False          False   False
2   -2841.648877   -2841.748877  197.104025 -2841.648877   96.800000 -2841.748877       0.05   0.050000       -3.200000     1.0     -2841.698877         False          False    True
3   -2738.298877   -2738.498877  197.104025 -2738.298877  103.400000 -2738.498877       0.10   0.100000        0.100000     1.0     -2841.698877         False          False    True
4   -2636.498877   -2638.498877  197.104025 -2636.498877  101.900000 -2638.498877       1.90   0.100000        0.100000     1.0     -2841.698877         False          False    True
5   -2536.198877   -2637.349121  197.104025 -2536.198877  100.400000 -2637.349121       2.20  98.950244        0.100000     1.0     -2841.698877         False          False    True
6   -2536.198877   -2538.498877  273.666504 -2536.198877   98.900000 -2538.498877       2.20   0.100000      -23.337521     2.0     -2841.698877         False          False    True
7   -2486.348877   -2515.061279  347.154025 -2486.348877   49.950000 -2515.061279       2.20  26.512402        0.000000     1.0     -2841.698877         False          False    True
8   -2486.348877   -2488.548877  347.154053 -2486.348877   25.475000 -2488.548877       2.20   0.000000      -99.999972     2.0     -2841.698877         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/10 17:50:54]  --------------------------------------------------------------------------------
[08/10 17:50:54]  Iteration: 215 (0 solution, 214 counterexamples)
[08/10 17:52:17]  Generator returned sat in 75.404139 secs.
[08/10 17:52:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:52:19]  Improved gap from 0 to 25.0
[08/10 17:52:20]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 17:52:20]  Verifer returned sat in 1.579612 secs.
[08/10 17:52:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3010.348877   -3134.364014  146.114258 -3010.348877  124.015000 -3134.364014    0.000000  124.015137      124.012695     2.0     -3134.364014            -1             -1   False
1   -3010.348877   -3134.361572  146.114258 -3010.348877  124.012500 -3134.361572    0.000000  124.012695       24.012695     2.0     -3010.348877         False          False   False
2   -3010.348877   -3010.351318  197.104004 -3010.348877  124.009766 -3010.351318    0.000000    0.002441      -24.997559     3.0     -3010.348877         False          False   False
3   -2886.343994   -2886.346436  197.104004 -2886.343994  124.007324 -2886.346436    0.000000    0.002441       -0.992676     1.0     -2886.343994         False           True   False
4   -2639.328857   -2785.354004  197.104004 -2639.328857  247.017578 -2785.354004  121.022461   25.002686       25.000000     1.0     -2886.343994         False          False   False
5   -2639.328857   -2785.351318  272.104004 -2639.328857    0.010000 -2785.351318  121.022461   25.000000        0.000000     2.0     -2886.343994         False          False    True
6   -2639.328857   -2760.351318  347.104004 -2639.328857    0.500000 -2760.351318  121.022461    0.000000      -25.000000     3.0     -2886.343994         False          False    True
7   -2514.333740   -2735.351318  347.108887 -2514.333740  124.995117 -2735.351318  121.022461   99.995117        0.000000     1.0     -2635.356201          True           True   False
8   -2514.333740   -2635.356201  347.108887 -2514.333740   49.002686 -2635.356201  121.022461    0.000000     -100.000000     2.0     -2635.356201         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=25.[0m
[08/10 17:52:20]  --------------------------------------------------------------------------------
[08/10 17:52:20]  Iteration: 216 (0 solution, 215 counterexamples)
[08/10 17:54:37]  Generator returned sat in 129.336413 secs.
[08/10 17:54:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:54:40]  Improved gap from 0 to 0
[08/10 17:54:41]  Improved number of small numbers from 64 to 86 out of a max of 114
[08/10 17:54:41]  Verifer returned sat in 3.130444 secs.
[08/10 17:54:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3112.333008   -3112.333377   24.093994 -3112.333008  1.008545 -3112.333377        0.0  0.000369        0.000301     4.0     -3112.333377            -1             -1   False
1   -3111.325377   -3111.349365  122.102783 -3111.325377  1.008000 -3111.349365        0.0  0.023988       -0.983279     1.0     -3111.325377         False          False   False
2   -3110.341309   -3110.342041  222.101562 -3110.341309  1.008057 -3110.342041        0.0  0.000732       -0.000432     1.0     -3111.325377         False          False   False
3   -3110.340332   -3110.340877  322.100586 -3110.340332  0.001709 -3110.340877        0.0  0.000545       -0.000432     1.0     -3110.340332         False          False   False
4   -3109.348377   -3110.339877  421.109062 -3109.348377  0.992500 -3110.339877        0.0  0.991500        0.000000     1.0     -3110.340332         False          False   False
5   -3109.348377   -3109.348377  521.099609 -3109.348377  0.010000 -3109.348377        0.0  0.000000       -0.009453     2.0     -3110.340332         False          False   False
6   -3109.338377   -3109.338877  621.090088 -3109.338377  0.010000 -3109.338877        0.0  0.000500       -0.008975     1.0     -3110.340332         False          False   False
7   -3109.328877   -3109.329377  721.089062 -3109.328877  0.010000 -3109.329377        0.0  0.000500       -0.000500     1.0     -3110.340332         False          False   False
8   -3109.318877   -3109.328369  721.089062 -3109.318877  0.010500 -3109.328369        0.0  0.009492      -99.990500     1.0     -3110.340332         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5/4096.[0m
[08/10 17:54:42]  --------------------------------------------------------------------------------
[08/10 17:54:42]  Iteration: 217 (0 solution, 216 counterexamples)
[08/10 17:56:12]  Generator returned sat in 82.720259 secs.
[08/10 17:56:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:56:25]  Improved gap from 0 to 1.5625
[08/10 17:56:25]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 17:56:25]  Verifer returned sat in 12.355308 secs.
[08/10 17:56:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3714.586914   -3714.589844   626.350098 -3714.586914    0.002500 -3714.589844   0.000000    0.002930        0.002686     3.0     -3714.589844            -1             -1   False
1   -3714.586914   -3714.589600   626.350342 -3714.586914    0.001221 -3714.589600   0.000000    0.002686      -99.997070     3.0     -3714.586914         False          False   False
2   -3613.028564   -3614.589844   724.787598 -3613.028564  101.561035 -3614.589844   0.000000    1.561279       -0.001465     1.0     -3714.586914         False          False   False
3   -3510.899658   -3613.027100   724.787598 -3510.899658  103.690186 -3613.027100   0.000000  102.127441        2.127441     1.0     -3714.586914         False          False   False
4   -3510.899658   -3512.462158   822.660156 -3510.899658  102.126465 -3512.462158   0.000000    1.562500        0.000000     2.0     -3714.586914         False          False   False
5   -3360.835205   -3510.898438   822.660156 -3360.835205  151.626953 -3510.898438  47.937012  102.126221        2.127441     1.0     -3714.586914         False          False   False
6   -3360.835205   -3410.773193   920.532715 -3360.835205    0.010000 -3410.773193  47.937012    2.000977        0.000000     2.0     -3714.586914         False          False    True
7   -3360.835205   -3408.772217  1018.970215 -3360.835205    2.000000 -3408.772217  47.937012    0.000000       -1.562500     3.0     -3714.586914         False          False    True
8   -3358.835205   -3407.209473  1018.970312 -3358.835205    2.000000 -3407.209473  47.937012    0.437256      -99.562402     1.0     -3714.586914         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=4357/2048.[0m
[08/10 17:56:26]  --------------------------------------------------------------------------------
[08/10 17:56:26]  Iteration: 218 (0 solution, 217 counterexamples)
[08/10 17:58:10]  Generator returned sat in 96.361269 secs.
[08/10 17:58:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:17]  Improved gap from 1/800 to 23.4375
[08/10 17:58:17]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:58:17]  Verifer returned sat in 6.781914 secs.
[08/10 17:58:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5204.252930   -5488.061768  2182.912109 -5204.252930    0.002686 -5488.061768   0.000000  283.808838      183.808838     2.0     -5488.061768            -1             -1   False
1   -5204.252930   -5288.062012  2182.912109 -5204.252930    0.001465 -5288.062012   0.000000   83.809082       83.808838     2.0     -5204.252930         False          False   False
2   -5204.250732   -5204.251709  2182.912109 -5204.250732   83.811279 -5204.251709   0.000000    0.000977      -16.188965     1.0     -5204.252930         False          False   False
3   -5088.061768   -5111.499268  2182.912109 -5088.061768  116.189941 -5111.499268   0.000000   23.437500        0.000000     1.0     -5204.252930         False          False   False
4   -4864.623047   -4988.061768  2182.912109 -4864.623047  246.876221 -4988.061768   0.001221  123.437500      123.437500     1.0     -5204.252930         False          False   False
5   -4864.623047   -4888.063232  2182.912109 -4864.623047    0.010000 -4888.063232   0.001221   23.438965       23.437500     2.0     -5204.252930         False          False    True
6   -4864.623047   -4888.061768  2259.474609 -4864.623047    2.000000 -4888.061768   0.001221   23.437500        0.000000     3.0     -5204.252930         False          False    True
7   -4864.623047   -4864.624268  2332.913330 -4864.623047    2.000000 -4864.624268   0.001221    0.000000      -26.561279     4.0     -5204.252930         False          False    True
8   -4801.404297   -4838.062988  2332.913330 -4801.404297   63.218750 -4838.062988   0.001221   36.657471      -63.342529     1.0     -4801.405518          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 17:58:18]  --------------------------------------------------------------------------------
[08/10 17:58:18]  Iteration: 219 (0 solution, 218 counterexamples)
[08/10 17:58:54]  Generator returned sat in 28.228519 secs.
[08/10 17:58:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:55]  Improved gap from 1/800 to 48.4375
[08/10 17:58:56]  Improved number of small numbers from 80 to 85 out of a max of 114
[08/10 17:58:56]  Verifer returned sat in 1.561240 secs.
[08/10 17:58:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4864.638184   -5022.460547  2158.976484 -4864.638184    0.001221 -5022.460547    0.00000  157.822363      100.009863     3.0     -5022.460547            -1             -1   False
1   -4864.638184   -4964.648047  2158.976484 -4864.638184    0.001250 -4964.648047    0.00000  100.009863        0.009863     2.0     -5022.460547         False          False   False
2   -4764.635547   -4764.648047  2158.976484 -4764.635547  200.012500 -4764.648047    0.00125    0.011250        0.011250     1.0     -5022.460547         False          False   False
3   -4716.908047   -4716.910547  2158.976484 -4716.908047   47.738750 -4716.910547    0.00125    0.001250      -52.261250     1.0     -4716.909297         False          False    True
4   -4564.634297   -4564.648047  2158.976484 -4564.634297  152.275000 -4564.648047    0.00250    0.011250        0.011250     1.0     -4716.909297         False          False    True
5   -4564.634297   -4564.646797  2210.537598 -4564.634297    0.010000 -4564.646797    0.00250    0.010000      -48.427637     2.0     -4716.909297         False          False    True
6   -4465.143672   -4515.070547  2259.474365 -4465.143672   99.500625 -4515.070547    0.00250   49.924375       -0.000244     1.0     -4716.909297         False          False    True
7   -4414.648047   -4464.315547  2308.977783 -4414.648047  100.420000 -4464.315547    0.00250   49.665000       -0.001201     1.0     -4716.909297         False          False    True
8   -4414.646797   -4414.649297  2360.540039 -4414.646797   49.666250 -4414.649297    0.00250    0.000000      -48.437695     1.0     -4716.909297         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=9/800.[0m
[08/10 17:58:57]  --------------------------------------------------------------------------------
[08/10 17:58:57]  Iteration: 220 (0 solution, 219 counterexamples)
[08/10 18:00:54]  Generator returned sat in 108.889685 secs.
[08/10 18:00:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:56]  Improved gap from 1/600 to 48.4375
[08/10 18:00:56]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 18:00:56]  Verifer returned sat in 1.746556 secs.
[08/10 18:00:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4589.581787   -4789.535156  1983.863281 -4589.581787  200.046631 -4789.535156        0.0  199.953369      199.953369     4.0     -4789.535156            -1             -1   False
1   -4589.535156   -4689.535156  1983.863281 -4589.535156  200.000000 -4689.535156        0.0  100.000000      100.000000     2.0     -4589.535156         False          False   False
2   -4338.050781   -4589.535156  1983.863281 -4338.050781  351.484375 -4589.535156        0.0  251.484375      251.484375     2.0     -4589.535156         False          False   False
3   -4338.050781   -4589.535156  1983.863281 -4338.050781   55.937500 -4589.535156        0.0  251.484375      151.484375     2.0     -4338.050781         False          False   False
4   -4338.050781   -4391.128662  1983.863281 -4338.050781   54.437500 -4391.128662        0.0   53.077881       51.484375     3.0     -4338.050781         False          False   False
5   -4338.050781   -4389.534912  2032.378906 -4338.050781   52.937500 -4389.534912        0.0   51.484131        0.000000     4.0     -4338.050781         False          False   False
6   -4338.050781   -4338.050781  2083.941406 -4338.050781   51.437500 -4338.050781        0.0    0.000000      -48.437500     5.0     -4338.050781         False          False   False
7   -4288.113281   -4289.613281  2135.503906 -4288.113281   49.937500 -4289.613281        0.0    1.500000      -46.937500     1.0     -4338.050781         False          False   False
8   -4241.175781   -4241.175781  2135.504150 -4241.175781   48.437500 -4241.175781        0.0    0.000000      -99.999756     1.0     -4338.050781         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=8049/32.[0m
[08/10 18:00:57]  --------------------------------------------------------------------------------
[08/10 18:00:57]  Iteration: 221 (0 solution, 220 counterexamples)
[08/10 18:02:27]  Generator returned sat in 82.571135 secs.
[08/10 18:02:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:02:30]  Improved gap from 1/40 to 10.9375
[08/10 18:02:30]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 18:02:30]  Verifer returned sat in 1.822611 secs.
[08/10 18:02:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4439.750781   -4639.700781  1734.028906 -4439.750781    0.0500 -4639.700781        0.0  199.9500           99.95     2.0     -4639.700781            -1             -1   False
1   -4244.600781   -4439.700781  1734.028906 -4244.600781  395.1000 -4439.700781        0.0  195.1000          195.10     1.0     -4639.700781         False          False   False
2   -4044.650781   -4439.700781  1734.028906 -4044.650781  395.0500 -4439.700781        0.0  395.0500          295.05     1.0     -4044.650781         False          False   False
3   -4044.650781   -4244.550781  1734.028906 -4044.650781  395.0000 -4244.550781        0.0  199.9000          195.05     2.0     -4044.650781         False          False   False
4   -4044.650781   -4139.700781  1734.028906 -4044.650781  196.0000 -4139.700781        0.0   95.0500           95.05     3.0     -4044.650781         False          False   False
5   -4043.200781   -4047.488281  1734.028906 -4043.200781   96.5000 -4047.488281        0.0    4.2875           -3.50     4.0     -4044.650781         False          False   False
6   -4000.738281   -4011.625781  1795.016406 -4000.738281   46.7500 -4011.625781        0.0   10.8875           -0.05     1.0     -4044.650781         False          False   False
7   -3989.750781   -4000.688281  1884.078906 -3989.750781   21.8750 -4000.688281        0.0   10.9375            0.00     1.0     -4044.650781         False          False   False
8   -3989.750781   -3989.750781  1884.078906 -3989.750781    9.4375 -3989.750781        0.0    0.0000         -100.00     2.0     -4044.650781         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2951/10.[0m
[08/10 18:02:30]  --------------------------------------------------------------------------------
[08/10 18:02:30]  Iteration: 222 (0 solution, 221 counterexamples)
[08/10 18:03:29]  Generator returned sat in 50.340729 secs.
[08/10 18:03:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:03:30]  Improved gap from 51/2048 to 0
[08/10 18:03:31]  Improved number of small numbers from 68 to 79 out of a max of 114
[08/10 18:03:31]  Verifer returned sat in 1.602250 secs.
[08/10 18:03:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4344.650879   -4344.700879  1538.929004 -4344.650879  200.150146 -4344.700879       0.00    0.050000       -0.050000     2.0     -4344.700879            -1             -1   False
1   -4144.600879   -4344.600879  1538.929004 -4144.600879  200.100000 -4344.600879      99.90  100.100000        0.100000     1.0     -4244.500879         False          False   False
2   -4044.650879   -4144.600879  1538.929004 -4044.650879  200.050000 -4144.600879      99.90    0.050000        0.050000     1.0     -4144.550879         False          False    True
3   -3647.100879   -4143.750879  1538.929004 -3647.100879  397.600000 -4143.750879     397.40   99.250000        0.100000     1.0     -4144.550879         False          False    True
4   -3547.050879   -3944.600879  1538.929004 -3547.050879  199.300000 -3944.600879     397.45    0.100000        0.100000     1.0     -4144.550879         False          False    True
5   -3447.000879   -3846.725879  1538.929004 -3447.000879  100.150000 -3846.725879     397.50    2.225000        0.100000     1.0     -4144.550879         False          False    True
6   -3398.650879   -3796.200684  1590.428955 -3398.650879   50.575000 -3796.200684     397.50    0.049805       -0.050049     1.0     -4144.550879         False          False    True
7   -3397.200684   -3796.100830  1689.028809 -3397.200684    1.500000 -3796.100830     397.50    1.400146        0.000000     1.0     -4144.550879         False          False    True
8   -3397.100830   -3794.650879  1689.028809 -3397.100830    1.500000 -3794.650879     397.50    0.050049      -99.900146     1.0     -4144.550879         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/10 18:03:31]  --------------------------------------------------------------------------------
[08/10 18:03:31]  Iteration: 223 (0 solution, 222 counterexamples)
[08/10 18:03:57]  Generator returned sat in 18.353091 secs.
[08/10 18:03:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:03:59]  Improved gap from 51/1024 to 0
[08/10 18:03:59]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/10 18:03:59]  Verifer returned sat in 1.274822 secs.
[08/10 18:03:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5122.970703   -5813.821045  1538.929199 -5122.970703  400.700000 -5813.821045  290.250244  400.600098      400.600098     5.0     -5813.821045            -1             -1     -1
1   -5122.920654   -5813.820801  1538.929199 -5122.920654  400.650146 -5813.820801  290.300293  400.599854      300.600098     4.0     -5413.220947         False          False   True
2   -5122.920654   -5613.821045  1538.929199 -5122.920654  400.550049 -5613.821045  290.300293  200.600098      200.600098     4.0     -5413.220947         False          False   True
3   -5122.920654   -5513.821045  1538.929199 -5122.920654  200.549805 -5513.821045  290.300293  100.600098      100.600098     4.0     -5413.220947         False          False   True
4   -5122.920654   -5414.220947  1538.929199 -5122.920654    1.000000 -5414.220947  290.300293    1.000000        0.600098     5.0     -5413.220947         False          False   True
5   -5122.920654   -5413.821045  1638.329102 -5122.920654    1.000000 -5413.821045  290.300293    0.600098        0.000000     6.0     -5413.220947         False          False   True
6   -5122.520752   -5413.220947  1737.928955 -5122.520752    1.000000 -5413.220947  290.300293    0.399902       -0.000244     7.0     -5413.220947         False          False   True
7   -5122.420654   -5412.770752  1837.828857 -5122.420654    0.500000 -5412.770752  290.300293    0.049805       -0.000244     1.0     -5413.220947         False           True  False
8   -5121.970459   -5412.670654  1837.829102 -5121.970459    0.500000 -5412.670654  290.300293    0.399902      -99.549805     1.0     -5413.220947         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=615629/2048.[0m
[08/10 18:04:00]  --------------------------------------------------------------------------------
[08/10 18:04:00]  Iteration: 224 (0 solution, 223 counterexamples)
[08/10 18:04:35]  Generator returned sat in 26.814891 secs.
[08/10 18:04:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:04:36]  Improved gap from 205/4096 to 0
[08/10 18:04:37]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 18:04:37]  Verifer returned sat in 1.188300 secs.
[08/10 18:04:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5580.325928   -5680.226074  1638.329102 -5580.325928    0.100098 -5680.226074    0.099854   99.800293       99.800293     2.0     -5680.226074            -1             -1     -1
1   -5480.126221   -5580.325928  1638.329102 -5480.126221  200.000000 -5580.325928    0.099854  100.099854      100.000000     1.0     -5680.226074         False          False   True
2   -5278.025879   -5580.225830  1638.329102 -5278.025879  302.200195 -5580.225830  102.100098  200.099854      100.100098     2.0     -5680.226074         False          False   True
3   -5176.025879   -5480.226074  1638.329102 -5176.025879  302.099854 -5480.226074  104.100098  200.100098      100.100098     3.0     -5280.125977         False          False   True
4   -5076.026123   -5328.526123  1638.329102 -5076.026123  300.099854 -5328.526123  104.100098  148.399902      100.099854     2.0     -5280.125977         False          False   True
5   -5076.026123   -5181.725830  1638.329102 -5076.026123    1.500000 -5181.725830  104.100098    1.599609        0.099854     2.0     -5280.125977         False          False   True
6   -5076.026123   -5180.226074  1738.229004 -5076.026123    1.500000 -5180.226074  104.100098    0.099854       -0.000244     3.0     -5280.125977         False          False   True
7   -5074.625977   -5180.026123  1836.828857 -5074.625977    1.500000 -5180.026123  104.100098    1.300049       -0.000244     1.0     -5280.125977         False          False   True
8   -5074.426025   -5178.625977  1936.628906 -5074.426025    1.500000 -5178.625977  104.100098    0.099854       -0.000244     1.0     -5280.125977         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205005/2048.[0m
[08/10 18:04:37]  --------------------------------------------------------------------------------
[08/10 18:04:37]  Iteration: 225 (0 solution, 224 counterexamples)
[08/10 18:06:06]  Generator returned sat in 81.242967 secs.
[08/10 18:06:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:06:08]  Improved gap from 0 to 17.1875
[08/10 18:06:08]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 18:06:08]  Verifer returned sat in 0.971838 secs.
[08/10 18:06:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5581.125732   -5781.026123  1584.854248 -5581.125732  199.900000 -5781.026123        0.0  199.900391       99.900391     4.0     -5781.026123            -1             -1   False
1   -5581.125732   -5598.213379  1584.854248 -5581.125732  199.799805 -5598.213379        0.0   17.087646       -0.099609     4.0     -5581.125732         False          False   False
2   -5154.925781   -5581.025879  1584.854248 -5154.925781  443.287598 -5581.025879        0.0  426.100098      326.100342     1.0     -5581.125732         False          False   False
3   -5154.925781   -5381.026123  1584.854248 -5154.925781  426.000000 -5381.026123        0.0  226.100342      226.100342     2.0     -5154.925781         False          False   False
4   -5154.925781   -5281.026123  1584.854248 -5154.925781  215.000000 -5281.026123        0.0  126.100342      126.100342     3.0     -5154.925781         False          False   False
5   -5154.925781   -5205.063477  1584.854248 -5154.925781  109.500000 -5205.063477        0.0   50.137695       26.100342     4.0     -5154.925781         False          False   False
6   -5148.313477   -5178.788330  1652.141602 -5148.313477   56.750000 -5178.788330        0.0   30.474854        0.000000     5.0     -5154.925781         False          False   False
7   -5148.313477   -5148.313477  1734.954102 -5148.313477   30.375000 -5148.313477        0.0    0.000000      -17.187500     2.0     -5154.925781         False          False   False
8   -5131.125977   -5131.125977  1817.766602 -5131.125977   17.187500 -5131.125977        0.0    0.000000      -17.187500     1.0     -5154.925781         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1631/5.[0m
[08/10 18:06:09]  --------------------------------------------------------------------------------
[08/10 18:06:09]  Iteration: 226 (0 solution, 225 counterexamples)
[08/10 18:07:22]  Generator returned sat in 65.114383 secs.
[08/10 18:07:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:07:25]  Improved gap from 2126031/131072 to 15.625
[08/10 18:07:26]  Improved number of small numbers from 73 to 90 out of a max of 114
[08/10 18:07:26]  Verifer returned sat in 2.916598 secs.
[08/10 18:07:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4923.058350   -5123.058594  1026.886504 -4923.058350  373.279785 -5123.058594       0.00  200.000244      200.000029     5.0     -5123.058594            -1             -1   False
1   -4749.828613   -5023.058379  1026.886504 -4749.828613  373.229980 -5023.058379       0.00  273.229766      273.229766     5.0     -4749.828613         False          False   False
2   -4593.288379   -5023.058379  1026.886504 -4593.288379  429.770000 -5023.058379      56.49  373.280000      273.280000     5.0     -4749.828613         False          False   False
3   -4536.848379   -4923.058350  1026.886504 -4536.848379  429.720000 -4923.058350      56.49  329.719971      229.720000     6.0     -4593.338379         False          False    True
4   -4536.848379   -4727.663330  1026.886504 -4536.848379  216.360000 -4727.663330      56.49  134.324951      129.720000     3.0     -4593.338379         False           True   False
5   -4536.848379   -4649.728271  1026.886504 -4536.848379  109.680000 -4649.728271      56.49   56.389893       29.720000     3.0     -4593.338379         False          False   False
6   -4536.848379   -4623.058350  1097.166504 -4536.848379   56.340000 -4623.058350      56.49   29.719971        0.000000     4.0     -4593.338379         False          False   False
7   -4536.848379   -4593.338379  1181.541504 -4536.848379   29.670000 -4593.338379      56.49    0.000000      -15.625000     5.0     -4593.338379         False          False   False
8   -4520.513379   -4577.713379  1181.541504 -4520.513379   16.335000 -4577.713379      56.49    0.710000      -99.290000     1.0     -4593.338379         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=6832/25.[0m
[08/10 18:07:26]  --------------------------------------------------------------------------------
[08/10 18:07:26]  Iteration: 227 (0 solution, 226 counterexamples)
[08/10 18:10:12]  Generator returned sat in 157.154666 secs.
[08/10 18:10:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:10:29]  Improved gap from 0 to 0
[08/10 18:10:30]  Improved number of small numbers from 56 to 114 out of a max of 114
[08/10 18:10:30]  Verifer returned sat in 17.498526 secs.
[08/10 18:10:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4943.719238   -4943.805664   847.504639 -4943.719238  0.042969 -4943.805664        0.0  0.086426       -0.042725     7.0     -4943.805664            -1             -1   False
1   -4942.016357   -4943.676514   945.844482 -4942.016357  1.789307 -4943.676514        0.0  1.660156        0.000000     1.0     -4943.805664         False          False   False
2   -4941.930176   -4941.973389  1045.758057 -4941.930176  1.746338 -4941.973389        0.0  0.043213       -0.000244     1.0     -4941.930176         False          False   False
3   -4941.843994   -4941.887207  1145.671875 -4941.843994  0.129395 -4941.887207        0.0  0.043213       -0.000244     1.0     -4941.843994         False          False   False
4   -4941.363281   -4941.801025  1245.191162 -4941.363281  0.523926 -4941.801025        0.0  0.437744       -0.000244     1.0     -4941.843994         False          False   False
5   -4941.101318   -4941.144287  1344.929443 -4941.101318  0.699707 -4941.144287        0.0  0.042969        0.000000     1.0     -4941.843994         False          False   False
6   -4940.879883   -4940.923096  1444.708008 -4940.879883  0.264404 -4940.923096        0.0  0.043213        0.000000     1.0     -4941.843994         False          False   False
7   -4940.808838   -4940.808838  1544.636963 -4940.808838  0.114258 -4940.808838        0.0  0.000000        0.000000     1.0     -4941.843994         False          False   False
8   -4940.755615   -4940.765625  1544.636963 -4940.755615  0.053223 -4940.765625        0.0  0.010010      -99.946777     1.0     -4941.843994         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=28/325.[0m
[08/10 18:10:31]  --------------------------------------------------------------------------------
[08/10 18:10:31]  Iteration: 228 (0 solution, 227 counterexamples)
[08/10 18:11:50]  Generator returned sat in 70.903055 secs.
[08/10 18:11:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:11:51]  Improved gap from 0 to 25.0
[08/10 18:11:52]  Improved number of small numbers from 80 to 114 out of a max of 114
[08/10 18:11:52]  Verifer returned sat in 1.508259 secs.
[08/10 18:11:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5791.237549   -5916.237549  1045.758057 -5791.237549    0.002441 -5916.237549    0.000000  125.000000      125.000000     8.0     -5916.237549            -1             -1     -1
1   -5791.235107   -5916.237549  1045.758057 -5791.235107  125.002441 -5916.237549    0.002441  125.000000       25.000000     8.0     -5916.237549         False           True  False
2   -5691.237549   -5791.237549  1045.758057 -5691.237549  224.997559 -5791.237549    0.002441   99.997559       24.997559     3.0     -5916.237549         False           True   True
3   -5591.237549   -5616.237549  1045.758057 -5591.237549  199.997559 -5616.237549    0.002441   24.997559       24.997559     1.0     -5591.239990          True           True  False
4   -5316.735107   -5516.732422  1045.758057 -5316.735107  299.500000 -5516.732422  174.502441   25.494873       25.000000     1.0     -5591.239990         False          False  False
5   -5316.735107   -5516.237549  1120.758057 -5316.735107    0.010000 -5516.237549  174.502441   25.000000        0.000000     2.0     -5591.239990         False          False   True
6   -5316.735107   -5491.237549  1195.758057 -5316.735107    0.500000 -5491.237549  174.502441    0.000000      -25.000000     3.0     -5591.239990         False          False   True
7   -5192.235107   -5441.483643  1196.258057 -5192.235107  124.500000 -5441.483643  174.502441   74.746094        0.000000     1.0     -5366.737549          True           True  False
8   -5192.232422   -5366.735352  1196.258057 -5192.232422   74.748779 -5366.735352  174.502441    0.000488      -99.997314     1.0     -5366.737549         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=25.[0m
[08/10 18:11:52]  --------------------------------------------------------------------------------
[08/10 18:11:52]  Iteration: 229 (0 solution, 228 counterexamples)
[08/10 18:12:18]  Generator returned sat in 17.539590 secs.
[08/10 18:12:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:12:19]  Improved gap from 102395/4096 to 23.4375
[08/10 18:12:19]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 18:12:19]  Verifer returned sat in 1.236195 secs.
[08/10 18:12:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5752.709961   -5876.147705  1045.757812 -5752.709961    0.001465 -5876.147705    0.000000  123.437744      123.437500     8.0     -5876.147705            -1             -1     -1
1   -5752.707520   -5776.147461  1045.757812 -5752.707520  123.440186 -5776.147461    0.002441   23.437500       23.437500     4.0     -5876.147705         False           True  False
2   -5652.707520   -5776.146484  1045.757812 -5652.707520  123.437500 -5776.146484    0.002441  123.436523       23.437500     3.0     -5652.709961          True           True   True
3   -5652.706543   -5665.210693  1045.757812 -5652.706543  123.437500 -5665.210693    0.002441   12.501709      -76.561523     2.0     -5652.709961         False           True  False
4   -5454.271240   -5476.147461  1045.757812 -5454.271240  210.937012 -5476.147461    0.002441   21.873779       21.873779     1.0     -5652.709961         False          False  False
5   -5176.145020   -5376.148926  1045.757812 -5176.145020  300.000000 -5376.148926  176.564941   23.438965       23.437500     1.0     -5652.709961         False          False  False
6   -5176.145020   -5376.147461  1122.320312 -5176.145020    0.010000 -5376.147461  176.564941   23.437500        0.000000     2.0     -5652.709961         False          False   True
7   -5176.145020   -5352.709961  1195.759521 -5176.145020    0.500000 -5352.709961  176.564941    0.000000      -26.560791     3.0     -5652.709961         False          False   True
8   -5052.707520   -5326.148926  1195.759521 -5052.707520  123.437500 -5326.148926  176.564941   96.876465       -3.123291     1.0     -5229.272461          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=375/16.[0m
[08/10 18:12:20]  --------------------------------------------------------------------------------
[08/10 18:12:20]  Iteration: 230 (0 solution, 229 counterexamples)
[08/10 18:13:37]  Generator returned sat in 68.944906 secs.
[08/10 18:13:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:13:39]  Improved gap from 1/600 to 23.4375
[08/10 18:13:40]  Improved number of small numbers from 88 to 93 out of a max of 114
[08/10 18:13:40]  Verifer returned sat in 1.677625 secs.
[08/10 18:13:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5849.959961   -6049.959961  1043.759521 -5849.959961    0.049805 -6049.959961       0.00  200.000000      100.000000     7.0     -6049.959961            -1             -1   False
1   -5849.959961   -5873.397461  1043.759521 -5849.959961  199.950000 -5873.397461       0.00   23.437500        0.000000     8.0     -6049.959961         False          False   False
2   -5749.809961   -5752.709961  1043.759521 -5749.809961  123.587500 -5752.709961       0.05    2.850000        0.100000     1.0     -5749.859961         False          False   False
3   -5649.759961   -5651.709961  1043.759521 -5649.759961  102.900000 -5651.709961       0.10    1.850000        0.100000     1.0     -5649.859961         False          False    True
4   -5549.709961   -5549.959961  1043.759521 -5549.709961  101.900000 -5549.959961       0.15    0.100000        0.100000     1.0     -5649.859961         False          False    True
5   -5448.909961   -5549.810059  1043.759521 -5448.909961  100.900000 -5549.810059       0.95   99.950098        0.100000     1.0     -5649.859961         False          False    True
6   -5448.909961   -5449.909961  1120.271973 -5448.909961   99.900000 -5449.909961       0.95    0.050000      -23.387549     2.0     -5649.859961         False          False    True
7   -5401.009961   -5426.472412  1195.759521 -5401.009961   47.950000 -5426.472412       0.95   24.512451        0.000000     1.0     -5649.859961         False          False    True
8   -5401.009961   -5401.959961  1195.759521 -5401.009961   21.975000 -5401.959961       0.95    0.000000     -100.000000     2.0     -5649.859961         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/10 18:13:40]  --------------------------------------------------------------------------------
[08/10 18:13:40]  Iteration: 231 (0 solution, 230 counterexamples)
[08/10 18:14:06]  Generator returned sat in 17.780980 secs.
[08/10 18:14:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:14:08]  Improved gap from 0 to 23.4375
[08/10 18:14:08]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/10 18:14:08]  Verifer returned sat in 1.053876 secs.
[08/10 18:14:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6338.110107   -6537.910156  1043.759521 -6338.110107    0.099854 -6537.910156    0.000000  199.800049       99.800049     9.0     -6537.910156            -1             -1     -1
1   -6314.672607   -6338.010010  1043.759521 -6314.672607  223.237549 -6338.010010    0.000000   23.337402       23.237549     1.0     -6537.910156         False           True  False
2   -6314.672607   -6337.909912  1043.759521 -6314.672607    0.100000 -6337.909912    0.000000   23.237305      -76.762451     2.0     -6314.672607         False          False  False
3   -5548.909912   -6237.910156  1043.759521 -5548.909912  789.000000 -6237.910156  565.662598  123.337646       23.337646     1.0     -6314.672607         False          False  False
4   -5278.247559   -6040.935059  1043.759521 -5278.247559  394.000000 -6040.935059  736.324951   26.362549       23.337646     1.0     -6314.672607         False          False   True
5   -5108.110107   -6014.472412  1043.759521 -5108.110107  196.500000 -6014.472412  806.462402   99.899902       23.337646     1.0     -6314.672607         False          False   True
6   -5108.110107   -5937.909912  1120.321777 -5108.110107   97.750000 -5937.909912  806.462402   23.337402       -0.100098     2.0     -6314.672607         False          False   True
7   -5084.572510   -5914.472412  1196.884277 -5084.572510   46.875000 -5914.472412  806.462402   23.437500        0.000000     1.0     -6314.672607         False          False   True
8   -5084.572510   -5891.034912  1273.446777 -5084.572510   21.437500 -5891.034912  806.462402    0.000000      -23.437500     2.0     -6314.672607         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=95591/4096.[0m
[08/10 18:14:09]  --------------------------------------------------------------------------------
[08/10 18:14:09]  Iteration: 232 (0 solution, 231 counterexamples)
[08/10 18:14:38]  Generator returned sat in 20.558506 secs.
[08/10 18:14:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:14:39]  Improved gap from 0 to 23.4375
[08/10 18:14:40]  Improved number of small numbers from 57 to 112 out of a max of 114
[08/10 18:14:40]  Verifer returned sat in 1.706308 secs.
[08/10 18:14:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5482.248535   -6397.772461  1003.621582 -5482.248535    0.099609 -6397.772461  834.999756   80.524170       80.524170     7.0     -6397.772461            -1             -1   False
1   -5482.248535   -6317.272949  1003.621582 -5482.248535   80.524170 -6317.272949  834.999756    0.024658      -19.475830     4.0     -6397.772461         False          False   False
2   -5372.472900   -6207.497803  1003.621582 -5372.472900  109.800293 -6207.497803  834.999756    0.025146       -9.700195     1.0     -6397.772461         False          False   False
3   -5262.697754   -6105.497559  1003.621582 -5262.697754  109.800293 -6105.497559  835.024658    7.775146        0.050049     1.0     -6397.772461         False          False   False
4   -5162.672607   -5997.772461  1003.621582 -5162.672607  107.800293 -5997.772461  835.049805    0.050049        0.050049     1.0     -6397.772461         False          False    True
5   -5056.922363   -5997.772217  1003.621582 -5056.922363  105.800293 -5997.772217  840.800049  100.049805        0.050049     2.0     -6397.772461         False          False    True
6   -5053.171875   -5897.697510  1077.084229 -5053.171875  103.800293 -5897.697510  840.800049    3.725586      -22.736816     1.0     -6397.772461         False          False    True
7   -5006.997314   -5871.234863  1153.646484 -5006.997314   49.900146 -5871.234863  840.800049   23.437500        0.000000     1.0     -6397.772461         False          False    True
8   -5006.997314   -5847.797363  1153.646729 -5006.997314   22.950073 -5847.797363  840.800049    0.000000      -99.999756     2.0     -6397.772461         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=205/4096.[0m
[08/10 18:14:41]  --------------------------------------------------------------------------------
[08/10 18:14:41]  Iteration: 233 (0 solution, 232 counterexamples)
[08/10 18:15:06]  Generator returned sat in 17.290918 secs.
[08/10 18:15:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:15:09]  Improved gap from 1/10 to 23.4375
[08/10 18:15:10]  Improved number of small numbers from 46 to 61 out of a max of 114
[08/10 18:15:10]  Verifer returned sat in 3.457757 secs.
[08/10 18:15:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5291.048096   -6521.171875  1027.021338 -5291.048096    0.099854 -6521.171875  1030.023682  200.100098      100.100195     7.0     -6521.171875            -1             -1     -1
1   -5291.048096   -6421.171973  1027.021338 -5291.048096  199.999756 -6421.171973  1030.023682  100.100195        0.100195     2.0     -6521.171875         False          False   True
2   -5190.848291   -6225.171973  1027.021338 -5190.848291  200.300000 -6225.171973  1030.123682    4.200000        0.200000     1.0     -6521.171875         False          False   True
3   -5090.748291   -6123.671973  1027.021338 -5090.748291  104.300000 -6123.671973  1030.223682    2.700000        0.200000     1.0     -6120.971973         False          False   True
4   -4990.648291   -6021.171973  1027.021338 -4990.648291  102.800000 -6021.171973  1030.323682    0.200000        0.200000     1.0     -6120.971973         False          False   True
5   -4889.548291   -6020.871826  1027.021338 -4889.548291  101.300000 -6020.871826  1031.423682   99.899854        0.200000     1.0     -6120.971973         False          False   True
6   -4889.548291   -5921.071973  1103.483643 -4889.548291   99.800000 -5921.071973  1031.423682    0.100000      -23.337695     2.0     -6120.971973         False          False   True
7   -4841.748291   -5897.634277  1179.021338 -4841.748291   47.900000 -5897.634277  1031.423682   24.462305        0.000000     1.0     -6120.971973         False          False   True
8   -4841.748291   -5873.171973  1179.021484 -4841.748291   21.950000 -5873.171973  1031.423682    0.000000      -99.999854     2.0     -6120.971973         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/5.[0m
[08/10 18:15:11]  --------------------------------------------------------------------------------
[08/10 18:15:11]  Iteration: 234 (0 solution, 233 counterexamples)
[08/10 18:15:42]  Generator returned sat in 22.189690 secs.
[08/10 18:15:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:15:44]  Improved gap from 900093/40960 to 23.4375
[08/10 18:15:44]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/10 18:15:44]  Verifer returned sat in 1.547631 secs.
[08/10 18:15:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6277.945068   -6895.753662  1501.582031 -6277.945068    0.010417 -6895.753662   617.787354    0.021240        0.000488     7.0     -6895.753662            -1             -1     -1
1   -6277.945068   -6895.732666  1578.144287 -6277.945068    0.010498 -6895.732666   617.787354    0.000244      -23.437256     2.0     -6895.753662         False          False   True
2   -6154.466064   -6872.295166  1578.144287 -6154.466064  123.479248 -6872.295166   617.787354  100.041748        0.041748     1.0     -6895.753662         False          False   True
3   -5451.507812   -6772.253662  1578.144287 -5451.507812  803.000000 -6772.253662  1220.735352  100.010498        0.052002     2.0     -6895.753662         False          False   True
4   -5151.518311   -6572.295166  1578.144287 -5151.518311  400.000000 -6572.295166  1420.724854    0.052002        0.052002     1.0     -6895.753662         False          False   True
5   -4953.070312   -6572.232666  1578.144287 -4953.070312  198.500000 -6572.232666  1519.172852   99.989502        0.052002     1.0     -6895.753662         False          False   True
6   -4953.070312   -6472.295166  1654.706787 -4953.070312   97.750000 -6472.295166  1519.172852    0.052002      -23.385498     2.0     -6895.753662         False          False   True
7   -4906.247314   -6448.857666  1731.269287 -4906.247314   46.875000 -6448.857666  1519.172852   23.437500        0.000000     1.0     -6895.753662         False          False   True
8   -4906.247314   -6425.420166  1807.831787 -4906.247314   21.437500 -6425.420166  1519.172852    0.000000      -23.437500     2.0     -6895.753662         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=213/4096.[0m
[08/10 18:15:45]  --------------------------------------------------------------------------------
[08/10 18:15:45]  Iteration: 235 (0 solution, 234 counterexamples)
[08/10 18:17:06]  Generator returned sat in 73.730377 secs.
[08/10 18:17:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:17:08]  Improved gap from 1/10 to 23.4375
[08/10 18:17:09]  Improved number of small numbers from 78 to 84 out of a max of 114
[08/10 18:17:09]  Verifer returned sat in 1.436808 secs.
[08/10 18:17:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -7193.257568   -7352.707520  1654.806641 -7193.257568  159.400000 -7352.707520     0.0500  159.399951       64.087354     8.0     -7352.707520            -1             -1     -1
1   -7193.257568   -7193.357568  1654.806787 -7193.257568  159.350098 -7193.357568     0.0500    0.050000      -35.912500     3.0     -7193.307568         False           True   True
2   -7034.007568   -7157.395068  1654.806787 -7034.007568  159.300000 -7157.395068     0.0500  123.337500       23.337500     1.0     -7034.057568         False           True  False
3   -6377.745068   -7034.007568  1654.806787 -6377.745068  779.600000 -7034.007568   556.2625  100.000000       23.387500     1.0     -7034.057568         False          False  False
4   -6089.945068   -6860.370068  1654.806787 -6089.945068  387.800000 -6860.370068   744.0625   26.362500       23.387500     1.0     -7034.057568         False          False   True
5   -5924.407568   -6828.007568  1654.806787 -5924.407568  191.900000 -6828.007568   809.6000   94.000000       23.387500     1.0     -7034.057568         False          False   True
6   -5924.407568   -6757.395068  1731.369287 -5924.407568   93.950000 -6757.395068   809.6000   23.387500       -0.050000     2.0     -7034.057568         False          False   True
7   -5900.820068   -6733.957520  1807.831787 -5900.820068   46.975000 -6733.957520   809.6000   23.537451        0.000000     1.0     -6710.420068          True           True  False
8   -5900.820068   -6710.420068  1807.831787 -5900.820068   23.487500 -6710.420068   809.6000    0.000000     -100.000000     2.0     -6710.420068         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1871/80.[0m
[08/10 18:17:09]  --------------------------------------------------------------------------------
[08/10 18:17:09]  Iteration: 236 (0 solution, 235 counterexamples)
[08/10 18:17:50]  Generator returned sat in 32.646988 secs.
[08/10 18:17:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:17:52]  Improved gap from 615/8192 to 35.9375
[08/10 18:17:53]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 18:17:53]  Verifer returned sat in 1.966908 secs.
[08/10 18:17:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7761.608643   -8535.270752  2932.682617 -7761.608643   39.300049 -8535.270752  734.462646  39.199463       39.199463     1.0     -8535.270752            -1             -1    True
1   -7761.558350   -8496.020996  2932.682861 -7761.558350   39.249756 -8496.020996  734.462646   0.000000      -60.750000     1.0     -8496.020996         False          False    True
2   -7575.758301   -8335.270996  2932.682861 -7575.758301  185.800049 -8335.270996  734.462646  25.050049       25.050049     1.0     -8496.020996         False          False    True
3   -7533.433350   -8335.270996  2965.307617 -7533.433350   67.375000 -8335.270996  734.462646  67.375000       -0.000244     1.0     -8267.895996         False          False    True
4   -7531.933350   -8267.845947  3029.320312 -7531.933350   68.875000 -8267.845947  734.462646   1.449951      -34.487549     1.0     -8267.895996         False          False    True
5   -7463.008301   -8231.908447  3093.382812 -7463.008301   70.375000 -8231.908447  734.462646  34.437500       -1.500000     1.0     -8267.895996         False          False    True
6   -7425.570801   -8195.970947  3157.445312 -7425.570801   71.875000 -8195.970947  734.462646  35.937500        0.000000     1.0     -8267.895996         False          False    True
7   -7388.133301   -8160.033447  3220.007812 -7388.133301   73.375000 -8160.033447  734.462646  37.437500        0.000000     2.0     -8267.895996         False          False    True
8   -7388.133301   -8122.595947  3220.007812 -7388.133301   36.687500 -8122.595947  734.462646   0.000000     -100.000000     2.0     -8122.595947          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=251/10.[0m
[08/10 18:17:54]  --------------------------------------------------------------------------------
[08/10 18:17:54]  Iteration: 237 (0 solution, 236 counterexamples)
[08/10 18:18:21]  Generator returned sat in 19.511620 secs.
[08/10 18:18:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:18:24]  Improved gap from 559/16 to 35.9375
[08/10 18:18:24]  Improved number of small numbers from 42 to 114 out of a max of 114
[08/10 18:18:24]  Verifer returned sat in 2.250120 secs.
[08/10 18:18:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7540.916016   -8293.661133  2690.873047 -7540.916016    0.100098 -8293.661133  752.645264    0.099854       -0.100098     1.0     -8293.661133            -1             -1    True
1   -7440.716064   -8293.460938  2690.873047 -7440.716064  100.299805 -8293.460938  752.645264  100.099609        0.099854     1.0     -8293.661133         False          False    True
2   -7440.515625   -8193.260986  2754.735107 -7440.515625  100.300049 -8193.260986  752.645264    0.100098      -35.837646     1.0     -8293.661133         False          False    True
3   -7367.215820   -8131.123291  2754.735352 -7367.215820   73.399902 -8131.123291  752.645264   11.262207      -62.537598     1.0     -8119.861084         False          False    True
4   -7304.578125   -8057.323486  2818.797607 -7304.578125   73.899902 -8057.323486  752.645264    0.100098      -35.837646     1.0     -8119.861084         False          False    True
5   -7230.278320   -8020.123291  2880.335312 -7230.278320   74.399902 -8020.123291  752.645264   37.199707       -0.000137     1.0     -8119.861084         False          False    True
6   -7192.578125   -7982.823486  2942.635254 -7192.578125   74.899902 -7982.823486  752.645264   37.600098        0.000000     1.0     -8119.861084         False          False    True
7   -7154.778320   -7945.223389  3004.835449 -7154.778320   75.399902 -7945.223389  752.645264   37.799805        0.000000     2.0     -8119.861084         False          False    True
8   -7154.778320   -7907.423584  3004.835449 -7154.778320   37.699951 -7907.423584  752.645264    0.000000     -100.000000     2.0     -7907.423584          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/5.[0m
[08/10 18:18:24]  --------------------------------------------------------------------------------
[08/10 18:18:24]  Iteration: 238 (0 solution, 237 counterexamples)
[08/10 18:18:51]  Generator returned sat in 17.547235 secs.
[08/10 18:18:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:18:53]  Improved gap from 282661/8192 to 35.9375
[08/10 18:18:54]  Improved number of small numbers from 43 to 114 out of a max of 114
[08/10 18:18:54]  Verifer returned sat in 2.328215 secs.
[08/10 18:18:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -7291.215820   -8143.711182  3335.499756 -7291.215820  165.900146 -8143.711182  752.645020  99.850342       99.850342     3.0     -8143.711182            -1             -1     -1
1   -7222.041016   -8043.811279  3335.499756 -7222.041016  169.025146 -8043.811279  752.695068  69.075195       68.975098     1.0     -8143.711182         False           True  False
2   -7122.091064   -7943.711182  3335.499756 -7122.091064  169.025146 -7943.711182  752.695068  68.925049       68.925049     1.0     -8143.711182         False          False   True
3   -7122.091064   -7943.711182  3366.574707 -7122.091064   68.875000 -7943.711182  752.695068  68.925049        0.000000     1.0     -7874.786133         False          False   True
4   -7121.141113   -7874.736084  3430.587158 -7121.141113   69.875000 -7874.736084  752.695068   0.899902      -35.037598     1.0     -7874.786133         False          False   True
5   -7051.166016   -7838.798584  3494.649658 -7051.166016   70.875000 -7838.798584  752.695068  34.937500       -1.000000     1.0     -7874.786133         False          False   True
6   -7014.228516   -7802.861084  3558.712158 -7014.228516   71.875000 -7802.861084  752.695068  35.937500        0.000000     1.0     -7874.786133         False          False   True
7   -6977.291016   -7766.923584  3621.774658 -6977.291016   72.875000 -7766.923584  752.695068  36.937500        0.000000     2.0     -7874.786133         False          False   True
8   -6977.291016   -7729.986084  3621.774658 -6977.291016   36.437500 -7729.986084  752.695068   0.000000     -100.000000     2.0     -7729.986084          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=141261/2048.[0m
[08/10 18:18:54]  --------------------------------------------------------------------------------
[08/10 18:18:54]  Iteration: 239 (0 solution, 238 counterexamples)
[08/10 18:27:29]  Generator returned sat in 506.300045 secs.
[08/10 18:27:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:27:31]  Improved gap from 1/800 to 23.4375
[08/10 18:27:32]  Improved number of small numbers from 42 to 61 out of a max of 114
[08/10 18:27:32]  Verifer returned sat in 2.517663 secs.
[08/10 18:27:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -7782.461182   -8636.656006  3368.067158 -7782.461182  101.550049 -8636.656006  752.695068  101.499756      100.299834     9.0     -8636.656006            -1             -1     -1
1   -7782.460938   -8537.856201  3368.067158 -7782.460938  101.500000 -8537.856201  752.695068    2.700195        0.300078     8.0     -8535.156006         False           True   True
2   -7683.711182   -8436.456084  3368.067158 -7683.711182  101.449951 -8436.456084  752.695068    0.049834       -0.950166     1.0     -8436.406250         False           True  False
3   -7582.361016   -8335.956084  3368.067158 -7582.361016  101.400000 -8335.956084  752.745068    0.850000        0.350000     1.0     -8335.106084         False          False  False
4   -7482.311016   -8235.456084  3368.067158 -7482.311016  100.900000 -8235.456084  752.795068    0.350000        0.350000     1.0     -8335.106084         False          False   True
5   -7382.261016   -8235.056152  3368.067158 -7382.261016  100.400000 -8235.056152  752.845068   99.950068        0.350000     1.0     -8335.106084         False          False   True
6   -7382.261016   -8135.456084  3444.629639 -7382.261016   99.900000 -8135.456084  752.845068    0.350000      -23.087520     2.0     -8335.106084         False          False   True
7   -7332.661016   -8112.018555  3518.117158 -7332.661016   49.950000 -8112.018555  752.845068   26.512471        0.000000     1.0     -8335.106084         False          False   True
8   -7332.661016   -8085.506084  3594.679443 -7332.661016   24.975000 -8085.506084  752.845068    0.000000      -23.437715     2.0     -8335.106084         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=7/20.[0m
[08/10 18:27:33]  --------------------------------------------------------------------------------
[08/10 18:27:33]  Iteration: 240 (0 solution, 239 counterexamples)
[08/10 18:28:41]  Generator returned sat in 59.443095 secs.
[08/10 18:28:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:28:48]  Improved gap from 1/1600 to 32.8125
[08/10 18:28:48]  Improved number of small numbers from 104 to 106 out of a max of 114
[08/10 18:28:48]  Verifer returned sat in 6.463313 secs.
[08/10 18:28:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8845.377197   -8945.374687  3624.399492 -8845.377197  132.810059 -8945.374687    0.00000  99.997490       99.997490     7.0     -8945.374687            -1             -1   False
1   -8812.567188   -8845.374756  3624.399492 -8812.567188  132.807500 -8845.374756    0.00000  32.807568       32.807500     1.0     -8812.567188         False          False   False
2   -8745.372314   -8745.374687  3624.399492 -8745.372314  100.002441 -8745.374687    0.00000   0.002373        0.002373     1.0     -8745.372314         False          False   False
3   -8649.914688   -8649.917187  3624.399492 -8649.914688   95.460000 -8649.917187    0.00000   0.002500       -4.540000     1.0     -8649.914688         False          False   False
4   -8455.958437   -8545.377188  3624.399492 -8455.958437  193.958750 -8545.377188   56.60625  32.812500       32.810000     1.0     -8649.914688         False          False   False
5   -8455.958437   -8545.374687  3691.586992 -8455.958437    0.010000 -8545.374687   56.60625  32.810000       -0.002500     2.0     -8649.914688         False          False    True
6   -8389.763437   -8512.562187  3707.217041 -8389.763437   99.005000 -8512.562187   56.60625  66.192500      -18.177451     1.0     -8649.914688         False          False    True
7   -8338.775938   -8428.192188  3774.404492 -8338.775938  117.180000 -8428.192188   56.60625  32.810000       -0.002500     1.0     -8649.914688         False          False    True
8   -8255.403437   -8395.379639  3774.404541 -8255.403437  116.182500 -8395.379639   56.60625  83.369951      -16.629951     1.0     -8649.914688         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3281/100.[0m
[08/10 18:28:49]  --------------------------------------------------------------------------------
[08/10 18:28:49]  Iteration: 241 (0 solution, 240 counterexamples)
[08/10 18:30:19]  Generator returned sat in 81.226145 secs.
[08/10 18:30:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:30:29]  Improved gap from 0 to 45.3125
[08/10 18:30:31]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 18:30:31]  Verifer returned sat in 10.826365 secs.
[08/10 18:30:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9565.617188   -9565.667256  4930.749561 -9565.617188    0.050049 -9565.667256       0.05    0.000068        0.000068     7.0     -9565.667256            -1             -1     -1
1   -9365.617256   -9565.617432  4930.749561 -9365.617256  200.000000 -9565.617432       0.05  199.950176      100.000000     1.0     -9565.667256         False           True   True
2   -9365.617256   -9366.454756  4930.749561 -9365.617256  199.950000 -9366.454756       0.05    0.787500        0.000000     2.0     -9365.667256         False          False   True
3   -9120.304756   -9270.367256  4930.749561 -9120.304756  246.100000 -9270.367256       0.05  150.012500      145.312500     1.0     -9365.667256         False          False   True
4   -9120.304756   -9179.679756  4930.749561 -9120.304756  121.550000 -9179.679756       0.05   59.325000       45.312500     2.0     -9365.667256         False          False   True
5   -9120.304756   -9165.667256  4985.437061 -9120.304756   59.275000 -9165.667256       0.05   45.312500        0.000000     3.0     -9365.667256         False          False   True
6   -9120.304756   -9120.354756  5040.124561 -9120.304756   28.137500 -9120.354756       0.05    0.000000      -45.312500     4.0     -9365.667256         False          False   True
7   -9029.729756   -9075.042256  5094.812061 -9029.729756   90.575000 -9075.042256       0.05   45.262500       -0.050000     1.0     -9029.779756          True           True  False
8   -8975.886006   -9029.729736  5094.812256 -8975.886006   99.106250 -9029.729736       0.05   53.793730      -46.206055     1.0     -9029.779756         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=148851/1024.[0m
[08/10 18:30:31]  --------------------------------------------------------------------------------
[08/10 18:30:31]  Iteration: 242 (0 solution, 241 counterexamples)
[08/10 18:33:27]  Generator returned sat in 166.938310 secs.
[08/10 18:33:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:33:29]  Improved gap from 0 to 12.5
[08/10 18:33:29]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 18:33:29]  Verifer returned sat in 1.336864 secs.
[08/10 18:33:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9037.742432   -9437.642090  4802.724609 -9037.742432    0.100098 -9437.642090   0.099854  399.799805      399.799805     3.0     -9437.642090            -1             -1     -1
1   -9037.642090   -9337.742188  4802.724609 -9037.642090  399.900146 -9337.742188   0.099854  300.000244      299.900146     4.0     -9437.642090         False          False   True
2   -8900.142334   -9337.642090  4802.724609 -8900.142334  437.500000 -9337.642090   0.199951  437.299805      337.299805     3.0     -9437.642090          True           True  False
3   -8900.142334   -9237.642090  4802.724609 -8900.142334  430.000000 -9237.642090   0.199951  337.299805      237.299805     4.0     -8900.342285         False          False   True
4   -8900.142334   -9037.642334  4802.724609 -8900.142334  214.000000 -9037.642334   0.199951  137.300049      137.299805     3.0     -8900.342285         False           True  False
5   -8900.142334   -8952.442383  4802.724609 -8900.142334  106.000000 -8952.442383   0.199951   52.100098       37.299805     4.0     -8900.342285         False          False  False
6   -8900.142334   -8912.742188  4865.324707 -8900.142334   52.000000 -8912.742188   0.199951   12.399902       -0.100098     5.0     -8900.342285         False           True  False
7   -8887.542236   -8900.242188  4952.824707 -8887.542236   25.000000 -8900.242188   0.199951   12.500000        0.000000     1.0     -8900.342285         False           True  False
8   -8887.542236   -8887.742188  4952.824707 -8887.542236   11.500000 -8887.742188   0.199951    0.000000     -100.000000     2.0     -8900.342285         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=345395/1024.[0m
[08/10 18:33:30]  --------------------------------------------------------------------------------
[08/10 18:33:30]  Iteration: 243 (0 solution, 242 counterexamples)
[08/10 18:36:17]  Generator returned sat in 158.404022 secs.
[08/10 18:36:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:36:21]  Improved gap from 1/600 to 48.4375
[08/10 18:36:21]  Improved number of small numbers from 58 to 112 out of a max of 114
[08/10 18:36:21]  Verifer returned sat in 2.996660 secs.
[08/10 18:36:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9265.254883   -9365.354736  4802.724609 -9265.254883  100.049805 -9365.354736   0.099854  100.000000       99.999756     7.0     -9365.354736            -1             -1     -1
1   -9265.254883   -9265.404785  4802.724609 -9265.254883   99.999756 -9265.404785   0.099854    0.050049       -0.000244     7.0     -9265.354736         False           True   True
2   -8912.642578   -9165.354492  4802.724609 -8912.642578  352.662354 -9165.354492   0.149658  252.562256      252.562256     1.0     -9265.354736         False           True  False
3   -8912.642578   -9104.392578  4802.724609 -8912.642578  214.900879 -9104.392578   0.149658  191.600342      152.562256     2.0     -8912.792236         False          False   True
4   -8912.642578   -8965.817383  4802.724609 -8912.642578  106.950439 -8965.817383   0.149658   53.025146       52.562256     3.0     -8912.792236         False          False   True
5   -8912.642578   -8965.354492  4850.162109 -8912.642578   52.975220 -8965.354492   0.149658   52.562256       -0.000244     4.0     -8912.792236         False          False   True
6   -8864.204834   -8912.742188  4901.674805 -8864.204834  101.000000 -8912.742188   0.149658   48.387695       -0.049805     1.0     -8912.792236         False           True  False
7   -8815.767334   -8864.304688  4953.237305 -8815.767334   96.825195 -8864.304688   0.149658   48.387695       -0.049805     1.0     -8912.792236         False          False  False
8   -8812.398682   -8815.867188  4953.237305 -8812.398682   51.756348 -8815.867188   0.149658    3.318848      -96.681152     1.0     -8912.792236         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1034495/4096.[0m
[08/10 18:36:22]  --------------------------------------------------------------------------------
[08/10 18:36:22]  Iteration: 244 (0 solution, 243 counterexamples)
[08/10 18:37:22]  Generator returned sat in 51.161552 secs.
[08/10 18:37:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:37:23]  Improved gap from 0 to 100
[08/10 18:37:24]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 18:37:24]  Verifer returned sat in 0.666833 secs.
[08/10 18:37:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9177.017578   -9270.667480  4902.524414 -9177.017578  104.950195 -9270.667480   0.100098   93.549805       88.699951     5.0     -9270.667480            -1             -1     -1
1   -9165.717285   -9177.017334  4902.524414 -9165.717285  104.850098 -9177.017334   0.100098   11.199951        0.000244     1.0     -9165.817383         False           True   True
2   -9072.167480   -9072.367432  4902.524414 -9072.167480  104.749756 -9072.367432   0.100098    0.099854       -6.449951     1.0     -9072.267578         False          False   True
3   -8967.517334   -8967.717529  4902.524414 -8967.517334  104.750000 -8967.717529   0.100098    0.100098       -1.799805     1.0     -9072.267578         False          False   True
4   -8864.867432   -8965.817383  4902.524414 -8864.867432  102.750000 -8965.817383   0.100098  100.849854        0.850098     1.0     -9072.267578         False          False   True
5   -8864.867432   -8865.817383  4902.524414 -8864.867432  100.750000 -8865.817383   0.100098    0.849854      -99.149902     2.0     -9072.267578         False          False   True
6   -8665.717285   -8765.817627  4902.524414 -8665.717285  200.000000 -8765.817627   0.100098  100.000244        0.000244     1.0     -8665.817383          True           True  False
7   -8367.217529   -8665.717285  4902.524414 -8367.217529  398.500000 -8665.717285   0.100098  298.399658      198.500000     1.0     -8665.817383         False          False  False
8   -7870.117188   -8465.817627  4902.524414 -7870.117188  795.500000 -8465.817627   0.100098  595.600342      595.600342     2.0     -8665.817383         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2439987/4096.[0m
[08/10 18:37:24]  --------------------------------------------------------------------------------
[08/10 18:37:24]  Iteration: 245 (0 solution, 244 counterexamples)
[08/10 18:37:53]  Generator returned sat in 20.321245 secs.
[08/10 18:37:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:37:55]  Improved number of small numbers from 77 to 90 out of a max of 113
[08/10 18:37:55]  Verifer returned sat in 1.015241 secs.
[08/10 18:37:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9177.017822   -9265.867188  4902.524414 -9177.017822  100.074951 -9265.867188   0.100098   88.749268      -11.250537     9.0     -9265.867188            -1             -1     -1
1   -9165.717285   -9165.867188  4902.524414 -9165.717285  100.049805 -9165.867188   0.100098    0.049805      -99.950000     1.0     -9165.817383         False           True   True
2   -9065.742188   -9065.867383  4902.524414 -9065.742188  100.024902 -9065.867383   0.100098    0.025098      -99.974902     1.0     -9065.842285         False          False   True
3   -8848.492285   -8865.867383  4902.524414 -8848.492285  217.275000 -8865.867383   0.100098   17.275000       17.275000     1.0     -9065.842285         False          False   True
4   -8759.129785   -8848.567627  4902.524414 -8759.129785  106.637500 -8848.567627   0.100098   89.337744        6.637500     1.0     -9065.842285         False          False   True
5   -8759.129785   -8759.254883  4902.524414 -8759.129785   51.318750 -8759.254883   0.100098    0.025000      -93.362500     2.0     -9065.842285         False          False   True
6   -8658.017285   -8665.867383  4902.524414 -8658.017285  101.137500 -8665.867383   0.100098    7.750000      -92.250000     1.0     -8658.117383          True           True  False
7   -8464.992285   -8465.892383  4902.524414 -8464.992285  200.775000 -8465.892383   0.100098    0.800000        0.775000     1.0     -8658.117383         False          False  False
8   -8065.742285   -8465.867188  4902.524414 -8065.742285  400.050000 -8465.867188   0.100098  400.024805      300.025000     2.0     -8658.117383         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2062129/4096.[0m
[08/10 18:37:56]  --------------------------------------------------------------------------------
[08/10 18:37:56]  Iteration: 246 (0 solution, 245 counterexamples)
[08/10 18:39:59]  Generator returned sat in 114.374745 secs.
[08/10 18:40:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:40:00]  Improved gap from 1/10 to 100
[08/10 18:40:01]  Improved number of small numbers from 76 to 93 out of a max of 114
[08/10 18:40:01]  Verifer returned sat in 1.222071 secs.
[08/10 18:40:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9310.771240   -9410.821533  5147.478483 -9310.771240   132.491667 -9410.821533    0.100098   99.950195       99.950114     9.0     -9410.821533            -1             -1     -1
1   -9278.279541   -9310.821533  5147.478483 -9278.279541   132.441895 -9310.821533    0.100098   32.441895       32.441813     1.0     -9278.379639         False           True  False
2   -9178.279541   -9310.821289  5147.478483 -9178.279541   132.441895 -9310.821289    0.100098  132.441650       32.441813     2.0     -9278.379639         False          False  False
3   -9178.279541   -9178.429785  5147.478483 -9178.279541    34.579167 -9178.429785    0.100098    0.050146      -67.558187     2.0     -9178.379639         False           True  False
4   -9110.671354   -9110.821452  5147.478483 -9110.671354    67.658333 -9110.821452    0.100098    0.050000      -99.950000     1.0     -9178.379639         False           True  False
5   -8976.904688   -8977.004785  5147.478483 -8976.904688   133.816667 -8977.004785    0.100098    0.000000      -66.183333     1.0     -9178.379639         False          False  False
6   -8710.771354   -8841.538118  5147.478483 -8710.771354   266.133333 -8841.538118    0.100098  130.666667       99.950000     1.0     -9178.379639         False          False  False
7   -8310.671354   -8710.821452  5147.478483 -8310.671354   530.766667 -8710.821452    0.100098  400.050000      400.050000     1.0     -9178.379639         False          False  False
8   -7650.688021   -8710.771240  5147.478483 -7650.688021  1060.033333 -8710.771240  560.083431  499.999788      400.050000     2.0     -9178.379639         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=8001/20.[0m
[08/10 18:40:02]  --------------------------------------------------------------------------------
[08/10 18:40:02]  Iteration: 247 (0 solution, 246 counterexamples)
[08/10 18:41:08]  Generator returned sat in 57.721020 secs.
[08/10 18:41:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:41:10]  Improved gap from 0 to 0
[08/10 18:41:10]  Improved number of small numbers from 51 to 114 out of a max of 114
[08/10 18:41:10]  Verifer returned sat in 1.139916 secs.
[08/10 18:41:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7953.087891   -7953.377930  3689.835205 -7953.087891    0.099854 -7953.377930   0.190186    0.099854       -0.099854     2.0      -7953.37793            -1             -1   False
1   -7952.887939   -7953.178223  3789.735107 -7952.887939    0.299805 -7953.178223   0.190186    0.100098        0.000000     1.0      -7953.37793         False          False   False
2   -7851.188232   -7853.078125  3789.735107 -7851.188232  101.799805 -7853.078125   0.190186    1.699707        1.699707     1.0      -7953.37793         False          False   False
3   -7653.587891   -7851.278076  3789.735107 -7653.587891  199.300049 -7851.278076   0.290283  197.399902       99.199951     1.0      -7953.37793         False          False   False
4   -7653.587891   -7653.978271  3789.735107 -7653.587891  197.300049 -7653.978271   0.290283    0.100098       -0.800049     2.0      -7953.37793         False          False    True
5   -7652.687988   -7653.078125  3888.835205 -7652.687988    1.000000 -7653.078125   0.290283    0.099854       -0.800049     1.0      -7953.37793         False          False    True
6   -7651.787842   -7652.178223  3988.735107 -7651.787842    1.000000 -7652.178223   0.290283    0.100098        0.000000     1.0      -7953.37793         False          False    True
7   -7650.887939   -7651.978271  4087.635254 -7650.887939    1.000000 -7651.978271   0.290283    0.800049       -0.199951     1.0      -7953.37793         False          False    True
8   -7650.687988   -7650.978271  4087.635254 -7650.687988    1.000000 -7650.978271   0.290283    0.000000     -100.000000     1.0      -7953.37793         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=406323/4096.[0m
[08/10 18:41:11]  --------------------------------------------------------------------------------
[08/10 18:41:11]  Iteration: 248 (0 solution, 247 counterexamples)
[08/10 18:44:10]  Generator returned sat in 169.814684 secs.
[08/10 18:44:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:44:13]  Improved gap from 1/1600 to 35.9375
[08/10 18:44:14]  Improved number of small numbers from 59 to 88 out of a max of 114
[08/10 18:44:14]  Verifer returned sat in 3.349908 secs.
[08/10 18:44:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7344.769775   -7398.790599  2775.370830 -7344.769775  54.020752 -7398.790599        0.0  54.020824       54.020824     1.0     -7398.790599            -1             -1   False
1   -7344.769775   -7398.790599  2821.349854 -7344.769775  53.979004 -7398.790599        0.0  54.020824       -0.000153     1.0     -7344.769775         False          False   False
2   -7338.873932   -7344.728027  2885.370605 -7338.873932  59.916667 -7344.728027        0.0   5.854095      -30.083558     1.0     -7344.769775         False          False   False
3   -7284.853027   -7284.894766  2925.537354 -7284.853027  59.875000 -7284.894766        0.0   0.041738      -35.895905     1.0     -7284.853027         False          False   False
4   -7226.446849   -7245.957266  2980.558350 -7226.446849  58.447917 -7245.957266        0.0  19.510417      -22.468730     1.0     -7284.853027         False          False   False
5   -7168.040599   -7203.978027  3044.620605 -7168.040599  77.916667 -7203.978027        0.0  35.937428       -0.000225     1.0     -7284.853027         False          False   False
6   -7132.103027   -7167.998932  3108.641663 -7132.103027  71.875000 -7167.998932        0.0  35.895905       -0.041595     1.0     -7284.853027         False          False   False
7   -7108.051016   -7132.061432  3172.579346 -7108.051016  59.947917 -7132.061432        0.0  24.010417      -12.051901     1.0     -7284.853027         False          False   False
8   -7073.613516   -7095.998779  3172.579346 -7073.613516  58.447917 -7095.998779        0.0  22.385264      -77.614401     1.0     -7284.853027         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=341/4096.[0m
[08/10 18:44:14]  --------------------------------------------------------------------------------
[08/10 18:44:14]  Iteration: 249 (0 solution, 248 counterexamples)
[08/10 18:46:32]  Generator returned sat in 129.002413 secs.
[08/10 18:46:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:46:33]  Improved gap from 0 to 100
[08/10 18:46:34]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 18:46:34]  Verifer returned sat in 1.341128 secs.
[08/10 18:46:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7448.247803   -7548.147949  2824.728027 -7448.247803    0.100098 -7548.147949       0.00   99.900146       -0.099854     2.0     -7548.147949            -1             -1   False
1   -7348.248047   -7448.147949  2824.728027 -7348.248047  199.899902 -7448.147949       0.00   99.899902       -0.100098     1.0     -7548.147949         False          False   False
2   -7248.347900   -7348.147949  2824.728027 -7248.347900  199.800049 -7348.147949       0.00   99.800049       -0.199951     1.0     -7248.347900         False          False   False
3   -7245.147949   -7248.147949  2824.728027 -7245.147949  103.000000 -7248.147949       0.00    3.000000      -97.000000     1.0     -7245.147949         False          False   False
4   -7048.147949   -7148.147949  2824.728027 -7048.147949  200.000000 -7148.147949       0.00  100.000000        0.000000     1.0     -7245.147949         False          False   False
5   -6899.647949   -6948.147949  2824.728027 -6899.647949  248.500000 -6948.147949       0.00   48.500000       48.500000     1.0     -7245.147949         False          False   False
6   -6625.397949   -6899.647949  2824.728027 -6625.397949  322.750000 -6899.647949     174.25  100.000000       48.500000     2.0     -7245.147949         False          False   False
7   -6403.647949   -6748.147949  2824.728027 -6403.647949  321.750000 -6748.147949     296.00   48.500000       48.500000     1.0     -7245.147949         False          False    True
8   -6131.397949   -6699.547852  2824.728027 -6131.397949  320.750000 -6699.547852     468.25   99.899902       48.500000     1.0     -7245.147949         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=97/2.[0m
[08/10 18:46:35]  --------------------------------------------------------------------------------
[08/10 18:46:35]  Iteration: 250 (0 solution, 249 counterexamples)
[08/10 18:48:53]  Generator returned sat in 129.488418 secs.
[08/10 18:48:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:48:55]  Improved number of small numbers from 68 to 113 out of a max of 113
[08/10 18:48:55]  Verifer returned sat in 0.800737 secs.
[08/10 18:48:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8244.873047   -8635.172852  2824.728027 -8244.873047    0.050049 -8635.172852   0.000000  390.299805      299.949951     2.0     -8635.172852            -1             -1    True
1   -8244.873047   -8444.822998  2824.728027 -8244.873047  390.249756 -8444.822998   0.000000  199.949951      199.949951     2.0     -8635.172852         False          False    True
2   -8054.623047   -8444.822998  2824.728027 -8054.623047  390.199951 -8444.822998   0.000000  390.199951      290.199951     2.0     -8054.623047         False          False    True
3   -8054.623047   -8244.822998  2824.728027 -8054.623047  390.150146 -8244.822998   0.000000  190.199951      190.199951     2.0     -8054.623047         False          False    True
4   -7852.672852   -8244.822998  2824.728027 -7852.672852  392.150146 -8244.822998   0.000000  392.150146      292.150146     2.0     -8054.623047         False          False    True
5   -7850.672852   -8044.822998  2824.728027 -7850.672852  394.150146 -8044.822998   0.000000  194.150146      194.150146     2.0     -8054.623047         False          False    True
6   -7648.672852   -8044.822998  2824.728027 -7648.672852  396.150146 -8044.822998   0.000000  396.150146      296.150146     2.0     -8054.623047         False          False    True
7   -7646.672852   -7844.873047  2824.728027 -7646.672852  398.150146 -7844.873047   0.000000  198.200195      198.150146     2.0     -8054.623047         False          False    True
8   -7444.722900   -7844.822754  2824.728027 -7444.722900  400.150146 -7844.822754   0.050049  400.049805      300.050049     3.0     -8054.623047         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1229005/4096.[0m
[08/10 18:48:56]  --------------------------------------------------------------------------------
[08/10 18:48:56]  Iteration: 251 (0 solution, 250 counterexamples)
[08/10 18:50:19]  Generator returned sat in 74.041318 secs.
[08/10 18:50:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:50:21]  Improved gap from 1/800 to 0
[08/10 18:50:22]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 18:50:22]  Verifer returned sat in 1.740548 secs.
[08/10 18:50:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7843.353027   -8244.402832  2524.307861 -7843.353027  401.099854 -8244.402832   0.000000  401.049805      401.049805     6.0     -8244.402832            -1             -1   False
1   -7843.302979   -8144.403076  2524.307861 -7843.302979  401.099854 -8144.403076   0.050049  301.050049      301.049805     2.0     -8244.402832         False          False   False
2   -7843.302979   -8044.402832  2524.307861 -7843.302979    0.100000 -8044.402832   0.050049  201.049805      201.049805     3.0     -7843.353027         False          False    True
3   -7843.302979   -7944.402832  2524.307861 -7843.302979    0.050049 -7944.402832   0.050049  101.049805      101.049805     4.0     -7843.353027         False          False    True
4   -7843.302979   -7844.452881  2524.307861 -7843.302979    1.000000 -7844.452881   0.050049    1.099854        1.049805     5.0     -7843.353027         False          False    True
5   -7843.302979   -7844.402832  2623.258057 -7843.302979    1.000000 -7844.402832   0.050049    1.049805        0.000000     6.0     -7843.353027         False          False    True
6   -7843.302979   -7843.353027  2723.258057 -7843.302979    1.000000 -7843.353027   0.050049    0.000000        0.000000     7.0     -7843.353027         False          False    True
7   -7742.753174   -7842.952881  2723.258057 -7742.753174  100.549805 -7842.952881   0.050049  100.149658        0.549805     1.0     -7843.353027         False           True   False
8   -7742.753174   -7743.353027  2723.258057 -7742.753174    1.000000 -7743.353027   0.050049    0.549805      -99.450195     2.0     -7843.353027         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=308275/1024.[0m
[08/10 18:50:22]  --------------------------------------------------------------------------------
[08/10 18:50:22]  Iteration: 252 (0 solution, 251 counterexamples)
[08/10 18:50:56]  Generator returned sat in 24.795835 secs.
[08/10 18:50:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:50:59]  Improved gap from 0 to 0
[08/10 18:50:59]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 18:50:59]  Verifer returned sat in 1.769716 secs.
[08/10 18:50:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7843.302979   -8244.302979  2524.307861 -7843.302979       0.1 -8244.302979        0.0    401.0           401.0     3.0     -8244.302979            -1             -1    True
1   -7843.302979   -8244.302979  2524.307861 -7843.302979     401.0 -8244.302979        0.0    401.0           301.0     3.0     -8244.302979         False          False    True
2   -7843.302979   -8044.302979  2524.307861 -7843.302979       0.1 -8044.302979        0.0    201.0           201.0     4.0     -7843.302979         False          False    True
3   -7843.302979   -8043.302979  2524.307861 -7843.302979     201.0 -8043.302979        0.0    200.0           101.0     5.0     -7843.302979         False          False    True
4   -7843.302979   -7844.302979  2524.307861 -7843.302979       1.0 -7844.302979        0.0      1.0             1.0     6.0     -7843.302979         False          False    True
5   -7843.302979   -7844.302979  2623.307861 -7843.302979       1.0 -7844.302979        0.0      1.0             0.0     6.0     -7843.302979         False          False    True
6   -7843.302979   -7843.302979  2723.307861 -7843.302979       1.0 -7843.302979        0.0      0.0             0.0     7.0     -7843.302979         False          False    True
7   -7643.302979   -7843.302979  2723.307861 -7643.302979     200.0 -7843.302979        0.0    200.0           100.0     7.0     -7843.302979         False           True   False
8   -7643.302979   -7743.302979  2723.307861 -7643.302979       1.0 -7743.302979        0.0    100.0             0.0     2.0     -7843.302979         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3011/10.[0m
[08/10 18:50:59]  --------------------------------------------------------------------------------
[08/10 18:50:59]  Iteration: 253 (0 solution, 252 counterexamples)
[08/10 18:52:18]  Generator returned sat in 69.500782 secs.
[08/10 18:52:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:52:35]  Improved gap from 1/800 to 0
[08/10 18:52:36]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 18:52:36]  Verifer returned sat in 16.999394 secs.
[08/10 18:52:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8049.284668   -8149.283691  2429.288330 -8049.284668   99.998750 -8149.283691   0.000000  99.999023       99.999023     2.0     -8149.283691            -1             -1   False
1   -8049.284668   -8049.285889  2429.288574 -8049.284668   99.997559 -8049.285889   0.000000   0.001221       -0.000732     2.0     -8049.284668         False          False   False
2   -7949.289795   -8049.283691  2429.293457 -7949.289795   99.996094 -8049.283691   0.000000  99.993896       -0.000977     1.0     -7949.289795         False          False   False
3   -7949.287354   -7949.288818  2528.293945 -7949.287354   99.996338 -7949.288818   0.000000   0.001465       -0.998047     1.0     -7949.289795         False          False   False
4   -7798.293213   -7848.289307  2528.293945 -7798.293213  150.995605 -7848.289307   0.000000  49.996094       49.996094     1.0     -7949.289795         False          False   False
5   -7671.293213   -7748.290283  2528.293945 -7671.293213  176.996094 -7748.290283  26.998535  49.998535       49.997559     1.0     -7949.289795         False          False   False
6   -7671.293213   -7748.289062  2578.296387 -7671.293213    0.010000 -7748.289062  26.998535  49.997314        0.000000     2.0     -7949.289795         False          False    True
7   -7671.293213   -7698.291748  2678.296387 -7671.293213    1.000000 -7698.291748  26.998535   0.000000        0.000000     3.0     -7949.289795         False          False    True
8   -7670.293213   -7698.290283  2678.296387 -7670.293213    1.000000 -7698.290283  26.998535   0.998535      -99.000000     1.0     -7949.289795         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=102395/2048.[0m
[08/10 18:52:37]  --------------------------------------------------------------------------------
[08/10 18:52:37]  Iteration: 254 (0 solution, 253 counterexamples)
[08/10 18:53:55]  Generator returned sat in 68.399152 secs.
[08/10 18:53:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:53:56]  Improved gap from 0 to 100
[08/10 18:53:57]  Improved number of small numbers from 71 to 77 out of a max of 114
[08/10 18:53:57]  Verifer returned sat in 1.663844 secs.
[08/10 18:53:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7957.993164   -8057.993213  2337.997852 -7957.993164    0.099854 -8057.993213        0.0  100.000049      100.000049     7.0     -8057.993213            -1             -1   False
1   -7957.693213   -7958.093018  2337.997852 -7957.693213  100.300000 -7958.093018        0.1    0.299805        0.200000     7.0     -8057.993213         False          False   False
2   -7957.693213   -7957.993213  2337.997852 -7957.693213    0.100098 -7957.993213        0.1    0.200000      -99.800000     8.0     -7957.793213         False          False    True
3   -7693.693213   -7757.993213  2337.997852 -7693.693213  264.200000 -7757.993213       64.1    0.200000        0.200000     1.0     -7957.793213         False           True   False
4   -7561.793213   -7657.993213  2337.997852 -7561.793213  132.100000 -7657.993213       96.0    0.200000        0.200000     1.0     -7957.793213         False          False    True
5   -7495.943213   -7623.126546  2337.997852 -7495.943213   66.050000 -7623.126546       96.0   31.183333      -33.950000     1.0     -7957.793213         False          False    True
6   -7361.693213   -7472.409880  2337.997852 -7361.693213  165.433333 -7472.409880       96.1   14.616667        0.200000     1.0     -7957.793213         False          False    True
7   -7293.593213   -7389.793213  2337.997852 -7293.593213   82.716667 -7389.793213       96.1    0.100000      -31.700000     1.0     -7957.793213         False          False    True
8   -7161.593213   -7357.993164  2337.997852 -7161.593213  132.100000 -7357.993164       96.2  100.199951        0.200000     1.0     -7957.793213         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 18:53:58]  --------------------------------------------------------------------------------
[08/10 18:53:58]  Iteration: 255 (0 solution, 254 counterexamples)
[08/10 18:54:28]  Generator returned sat in 21.405710 secs.
[08/10 18:54:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:54:29]  Improved gap from 1/5 to 100
[08/10 18:54:30]  Improved number of small numbers from 67 to 76 out of a max of 114
[08/10 18:54:30]  Verifer returned sat in 1.331089 secs.
[08/10 18:54:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8619.443359   -8670.643164  2899.347803 -8619.443359  151.499756 -8670.643164   0.000000   51.199805       -0.100195     5.0     -8670.643164            -1             -1    True
1   -8519.243164   -8619.343018  2899.347803 -8519.243164  151.400000 -8619.343018   0.000000  100.099854        0.100000     1.0     -8519.243164         False          False    True
2   -8468.043213   -8519.343164  2899.347803 -8468.043213  151.299805 -8519.343164   0.000000   51.299951      -48.700049     2.0     -8468.043213         False          False    True
3   -8368.143164   -8368.243164  2899.347803 -8368.143164  151.200000 -8368.243164   0.000000    0.100000      -48.800000     1.0     -8368.143164         False          False    True
4   -8219.043164   -8256.976497  2899.347803 -8219.043164  149.200000 -8256.976497   0.100000   37.833333        0.200000     1.0     -8368.143164         False          False    True
5   -8184.276497   -8184.476497  2899.347803 -8184.276497   72.600000 -8184.476497   0.100000    0.100000      -65.033333     1.0     -8368.143164         False          False    True
6   -8018.943164   -8019.343164  2899.347803 -8018.943164  165.433333 -8019.343164   0.200000    0.200000        0.200000     1.0     -8368.143164         False          False    True
7   -7938.426497   -7954.576497  2899.347803 -7938.426497   80.716667 -7954.576497   0.200000   15.950000      -19.283333     1.0     -8368.143164         False          False    True
8   -7805.176497   -7919.343018  2899.347803 -7805.176497  149.200000 -7919.343018  13.966667  100.199854        0.200000     1.0     -8368.143164         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 18:54:31]  --------------------------------------------------------------------------------
[08/10 18:54:31]  Iteration: 256 (0 solution, 255 counterexamples)
[08/10 18:55:47]  Generator returned sat in 65.923051 secs.
[08/10 18:55:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:55:48]  Improved gap from 11/20 to 23.4375
[08/10 18:55:49]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 18:55:49]  Verifer returned sat in 0.982565 secs.
[08/10 18:55:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8380.664062   -8604.051270  2683.956055 -8380.664062  223.387695 -8604.051270    0.000000  223.387207      123.387451     1.0     -8604.051270            -1             -1   False
1   -8380.664062   -8504.051514  2683.956055 -8380.664062  223.337402 -8504.051514    0.000000  123.387451       23.387451     2.0     -8380.664062         False          False   False
2   -8357.176514   -8380.614014  2737.081055 -8357.176514  146.875000 -8380.614014    0.000000   23.437500        0.000000     1.0     -8357.176514         False           True   False
3   -7594.614014   -8257.176514  2737.081055 -7594.614014  786.000000 -8257.176514  639.175049   23.387451       23.387451     1.0     -8357.176514         False          False   False
4   -7227.001465   -8157.176514  2737.081055 -7227.001465  391.000000 -8157.176514  906.787598   23.387451       23.387451     1.0     -8357.176514         False          False    True
5   -7056.888916   -8128.589111  2737.081055 -7056.888916  193.500000 -8128.589111  976.900146   94.800049       23.387451     1.0     -8357.176514         False          False    True
6   -7056.888916   -8057.176514  2813.643555 -7056.888916   94.750000 -8057.176514  976.900146   23.387451       -0.050049     2.0     -8357.176514         False          False    True
7   -7033.401367   -8033.739014  2890.206055 -7033.401367   46.875000 -8033.739014  976.900146   23.437500        0.000000     1.0     -8010.301514          True           True   False
8   -7033.401367   -8010.301514  2890.206055 -7033.401367   22.937500 -8010.301514  976.900146    0.000000     -100.000000     2.0     -8010.301514         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=95795/4096.[0m
[08/10 18:55:49]  --------------------------------------------------------------------------------
[08/10 18:55:49]  Iteration: 257 (0 solution, 256 counterexamples)
[08/10 19:00:07]  Generator returned sat in 248.804389 secs.
[08/10 19:00:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:00:08]  Improved gap from 0 to 0
[08/10 19:00:09]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 19:00:09]  Verifer returned sat in 0.661028 secs.
[08/10 19:00:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7694.664062   -8194.663818  2274.568359 -7694.664062  500.100098 -8194.663818   0.000000  499.999756      399.999756     5.0     -8194.663818            -1             -1   False
1   -7694.614014   -8094.663818  2274.568359 -7694.614014  500.049805 -8094.663818   0.050049  399.999756      299.999756     5.0     -7694.664062         False          False   False
2   -7694.563965   -7894.664062  2274.568359 -7694.563965  400.049805 -7894.664062   0.050049  200.050049      200.049805     6.0     -7694.614014         False          False    True
3   -7594.063965   -7794.663818  2274.568359 -7594.063965  300.550049 -7794.663818   0.050049  200.549805      200.549805     5.0     -7594.114014         False           True   False
4   -7594.063965   -7744.013916  2274.568359 -7594.063965    0.500000 -7744.013916   0.050049  149.899902      100.549805     5.0     -7594.114014         False          False   False
5   -7594.063965   -7694.663818  2274.568359 -7594.063965    0.500000 -7694.663818   0.050049  100.549805        0.549805     4.0     -7594.114014         False          False   False
6   -7594.063965   -7594.663818  2374.018555 -7594.063965    0.500000 -7594.663818   0.050049    0.549805        0.000000     4.0     -7594.114014         False          False   False
7   -7594.063965   -7594.114014  2474.018555 -7594.063965    0.500000 -7594.114014   0.050049    0.000000        0.000000     5.0     -7594.114014         False          False   False
8   -7593.563965   -7594.064209  2573.518311 -7593.563965    0.500000 -7594.064209   0.050049    0.450195       -0.000244     1.0     -7594.114014         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1228799/4096.[0m
[08/10 19:00:09]  --------------------------------------------------------------------------------
[08/10 19:00:09]  Iteration: 258 (0 solution, 257 counterexamples)
[08/10 19:01:17]  Generator returned sat in 58.844887 secs.
[08/10 19:01:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:01:19]  Improved gap from 0 to 0
[08/10 19:01:19]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:01:19]  Verifer returned sat in 1.395564 secs.
[08/10 19:01:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -7963.866699   -8164.016602  2243.921143 -7963.866699  200.099854 -8164.016602    0.050049  200.099854      100.099854     6.0     -8164.016602            -1             -1     -1
1   -7963.866699   -7964.016602  2243.921143 -7963.866699  200.099854 -7964.016602    0.050049    0.099854        0.099854     7.0     -8164.016602         False          False   True
2   -7963.866699   -7963.916748  2343.821045 -7963.866699    0.050049 -7963.916748    0.050049    0.000000       -0.000244     3.0     -7963.916748          True           True  False
3   -7545.666504   -7963.916504  2343.821045 -7545.666504  418.200195 -7963.916504  316.699951  101.550049        1.550049     1.0     -7963.916748         False          False  False
4   -7440.116455   -7763.916504  2343.821045 -7440.116455  207.100098 -7763.916504  322.250000    1.550049        1.550049     1.0     -7963.916748         False          False   True
5   -7340.116455   -7663.966309  2343.821045 -7340.116455  101.550049 -7663.966309  322.250000    1.599854        1.550049     1.0     -7963.916748         False          False   True
6   -7340.116455   -7663.916504  2442.270996 -7340.116455    1.500000 -7663.916504  322.250000    1.550049        0.000000     2.0     -7963.916748         False          False   True
7   -7340.116455   -7662.366455  2542.270996 -7340.116455    1.500000 -7662.366455  322.250000    0.000000        0.000000     3.0     -7963.916748         False          False   True
8   -7338.616455   -7662.316406  2542.271240 -7338.616455    1.500000 -7662.316406  322.250000    1.449951      -98.499756     1.0     -7963.916748         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=6349/4096.[0m
[08/10 19:01:20]  --------------------------------------------------------------------------------
[08/10 19:01:20]  Iteration: 259 (0 solution, 258 counterexamples)
[08/10 19:04:35]  Generator returned sat in 185.490882 secs.
[08/10 19:04:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:04:40]  Improved gap from 0 to 48.4375
[08/10 19:04:41]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:04:41]  Verifer returned sat in 5.134729 secs.
[08/10 19:04:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9377.644287   -9518.206787  3657.448730 -9377.644287  189.200000 -9518.206787   0.000000  140.562500       99.900146     2.0     -9518.206787            -1             -1   False
1   -9329.106934   -9377.544434  3657.448730 -9329.106934  189.099854 -9377.544434   0.000000   48.437500       48.437500     1.0     -9329.106934         False          False   False
2   -9229.106934   -9329.006836  3657.448730 -9229.106934  148.437500 -9329.006836   0.000000   99.899902       48.437500     1.0     -9229.106934         False          False   False
3   -9227.181885   -9227.281738  3657.448730 -9227.181885  101.824951 -9227.281738   0.000000    0.099854      -49.637451     1.0     -9227.181885         False          False   False
4   -9028.906738   -9077.544434  3657.448730 -9028.906738  198.375000 -9077.544434   0.100098   48.537598       48.537598     1.0     -9227.181885         False          False   False
5   -9028.906738   -9077.444336  3708.911133 -9028.906738    1.500000 -9077.444336   0.100098   48.437500        0.000000     2.0     -9227.181885         False          False    True
6   -9028.906738   -9029.006836  3760.473633 -9028.906738    0.250000 -9029.006836   0.100098    0.000000      -48.437500     3.0     -9227.181885         False          False    True
7   -8927.644287   -8976.081787  3807.548584 -8927.644287  101.262451 -8976.081787   0.100098   48.337402       -0.100098     1.0     -8927.744385          True           True   False
8   -8872.619141   -8927.644287  3807.548584 -8872.619141  103.362549 -8927.644287   0.100098   54.925049      -45.074951     1.0     -8927.744385         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=99405/2048.[0m
[08/10 19:04:41]  --------------------------------------------------------------------------------
[08/10 19:04:41]  Iteration: 260 (0 solution, 259 counterexamples)
[08/10 19:07:11]  Generator returned sat in 139.432310 secs.
[08/10 19:07:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:07:12]  Improved gap from 1/10 to 0
[08/10 19:07:13]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 19:07:13]  Verifer returned sat in 1.133903 secs.
[08/10 19:07:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9924.844238  -10324.894531  3658.198486 -9924.844238  400.150000 -10324.894531   0.000000  400.050293      400.050049     9.0    -10324.894531            -1             -1     -1
1   -9924.794434  -10324.844482  3658.198486 -9924.794434  400.100098 -10324.844482   0.049805  400.000244      300.050049     9.0     -9924.844238         False           True  False
2   -9924.794434  -10124.894531  3658.198486 -9924.794434  399.999756 -10124.894531   0.049805  200.050293      200.050049     3.0     -9924.844238         False           True   True
3   -9924.794434  -10024.894531  3658.198486 -9924.794434    4.000000 -10024.894531   0.049805  100.050293      100.050049     4.0     -9924.844238         False          False   True
4   -9924.794434   -9926.344482  3658.198486 -9924.794434    1.500000  -9926.344482   0.049805    1.500244        0.050049     5.0     -9924.844238         False          False   True
5   -9924.794434   -9924.894287  3758.148438 -9924.794434    1.500000  -9924.894287   0.049805    0.050049        0.000000     6.0     -9924.844238         False          False   True
6   -9923.344482   -9924.844238  3856.698486 -9923.344482    1.500000  -9924.844238   0.049805    1.449951        0.000000     7.0     -9924.844238         False          False   True
7   -9923.344482   -9923.394287  3956.698486 -9923.344482    0.500000  -9923.394287   0.049805    0.000000        0.000000     2.0     -9924.844238         False           True  False
8   -9922.844482   -9923.244385  4056.198486 -9922.844482    0.500000  -9923.244385   0.049805    0.350098        0.000000     1.0     -9924.844238         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1229005/4096.[0m
[08/10 19:07:13]  --------------------------------------------------------------------------------
[08/10 19:07:13]  Iteration: 261 (0 solution, 260 counterexamples)
[08/10 19:08:16]  Generator returned sat in 53.230186 secs.
[08/10 19:08:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:08:18]  Improved gap from 0 to 0
[08/10 19:08:18]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 19:08:18]  Verifer returned sat in 1.634829 secs.
[08/10 19:08:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14398.551514  -14398.651738  3758.148438 -14398.551514    410.00 -14398.651738        0.0    0.100225        0.100225     8.0    -14398.651738            -1             -1   False
1  -13988.651738  -14398.651738  3758.148438 -13988.651738    410.00 -14398.651738      308.4  101.600000        1.600000     8.0    -14398.651738         False          False   False
2  -13680.351738  -14198.651738  3758.148438 -13680.351738    409.90 -14198.651738      516.7    1.600000        1.600000     1.0    -14197.051738         False          False    True
3  -13272.151738  -14098.651738  3758.148438 -13272.151738    409.80 -14098.651738      824.9    1.600000        1.600000     1.0    -14097.051738         False          False    True
4  -13069.351738  -13998.651738  3758.148438 -13069.351738    204.40 -13998.651738      927.7    1.600000        1.600000     1.0    -14097.051738         False          False    True
5  -12969.251738  -13998.551514  3758.148438 -12969.251738    101.70 -13998.551514      927.8  101.499775        1.600000     2.0    -14097.051738         False          False    True
6  -12969.251738  -13898.651611  3856.548438 -12969.251738     50.35 -13898.651611      927.8    1.599873        0.000000     2.0    -14097.051738         False          False    True
7  -12969.251738  -13897.051738  3956.548340 -12969.251738      1.50 -13897.051738      927.8    0.000000       -0.000098     3.0    -14097.051738         False          False    True
8  -12967.751738  -13896.951660  4055.048340 -12967.751738      1.50 -13896.951660      927.8    1.399922       -0.000098     1.0    -14097.051738         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=8/5.[0m
[08/10 19:08:19]  --------------------------------------------------------------------------------
[08/10 19:08:19]  Iteration: 262 (0 solution, 261 counterexamples)
[08/10 19:09:19]  Generator returned sat in 50.144275 secs.
[08/10 19:09:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:09:21]  Improved gap from 1/10240 to 0
[08/10 19:09:22]  Improved number of small numbers from 68 to 95 out of a max of 114
[08/10 19:09:22]  Verifer returned sat in 1.810803 secs.
[08/10 19:09:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17428.651611  -17528.551758  3758.148438 -17428.651611    0.100000 -17528.551758        0.0   99.900146       99.900127     4.0    -17528.551758            -1             -1   False
1  -17328.451660  -17428.551758  3758.148438 -17328.451660  200.100098 -17428.551758        0.0  100.100098      100.100078     1.0    -17528.551758         False          False   False
2  -17328.451660  -17328.551738  3758.148438 -17328.451660    0.100098 -17328.551738        0.0    0.100078        0.100078     2.0    -17328.451660         False          False   False
3  -16923.151738  -17228.551738  3758.148438 -16923.151738  405.400000 -17228.551738      203.8  101.600000      101.600000     1.0    -17328.451660         False          False   False
4  -16823.051738  -17128.651855  3758.148438 -16823.051738  201.700000 -17128.651855      203.9  101.700117      101.600000     2.0    -17328.451660         False          False    True
5  -16823.051738  -17128.551514  3758.148438 -16823.051738   99.850000 -17128.551514      203.9  101.599775        1.600000     3.0    -17328.451660         False          False    True
6  -16823.051738  -17028.551514  3856.548438 -16823.051738    1.500000 -17028.551514      203.9    1.599775        0.000000     3.0    -17328.451660         False          False    True
7  -16823.051738  -17026.951738  3956.548340 -16823.051738    1.500000 -17026.951738      203.9    0.000000       -0.000098     4.0    -17328.451660         False          False    True
8  -16821.551738  -17026.851562  4055.048340 -16821.551738    1.500000 -17026.851562      203.9    1.399824       -0.000098     1.0    -17328.451660         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=508/5.[0m
[08/10 19:09:22]  --------------------------------------------------------------------------------
[08/10 19:09:22]  Iteration: 263 (0 solution, 262 counterexamples)
[08/10 19:09:59]  Generator returned sat in 26.489648 secs.
[08/10 19:09:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:10:00]  Improved gap from 0 to 0
[08/10 19:10:01]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 19:10:01]  Verifer returned sat in 1.071089 secs.
[08/10 19:10:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17027.401611  -17428.401855  3758.148438 -17027.401611    0.049805 -17428.401855   0.000000  401.000244      400.950195     4.0    -17428.401855            -1             -1    True
1  -17027.351807  -17428.351562  3758.148438 -17027.351807  401.050049 -17428.351562   0.049805  400.949951      300.950195     4.0    -17428.401855         False          False    True
2  -17027.351807  -17228.351807  3758.148438 -17027.351807  400.949951 -17228.351807   0.049805  200.950195      200.950195     5.0    -17027.401611         False          False    True
3  -17027.351807  -17128.351807  3758.148438 -17027.351807    0.050049 -17128.351807   0.049805  100.950195      100.950195     6.0    -17027.401611         False          False    True
4  -17027.351807  -17028.951660  3758.148438 -17027.351807    1.500000 -17028.951660   0.049805    1.550049        0.950195     7.0    -17027.401611         False          False    True
5  -17027.351807  -17028.351562  3857.198242 -17027.351807    1.500000 -17028.351562   0.049805    0.949951        0.000000     8.0    -17027.401611         False          False    True
6  -17026.801758  -17027.401611  3956.648193 -17026.801758    1.500000 -17027.401611   0.049805    0.550049        0.000000     9.0    -17027.401611         False          False    True
7  -17026.801758  -17026.851562  4056.598389 -17026.801758    0.500000 -17026.851562   0.049805    0.000000       -0.049805     2.0    -17027.401611         False           True   False
8  -17026.301758  -17026.801514  4056.598389 -17026.301758    0.500000 -17026.801514   0.049805    0.449951      -99.549805     1.0    -17027.401611         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=308173/1024.[0m
[08/10 19:10:01]  --------------------------------------------------------------------------------
[08/10 19:10:01]  Iteration: 264 (0 solution, 263 counterexamples)
[08/10 19:10:41]  Generator returned sat in 29.448132 secs.
[08/10 19:10:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:10:44]  Improved gap from 51/2048 to 14.0625
[08/10 19:10:44]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 19:10:44]  Verifer returned sat in 2.578682 secs.
[08/10 19:10:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16484.577881  -16684.552979  3856.435791 -16484.577881    0.049805 -16684.552979        0.0  199.975098       99.975098     4.0    -16684.552979            -1             -1   False
1  -16384.553223  -16484.552979  3856.435791 -16384.553223  299.999756 -16484.552979        0.0   99.999756       99.999756     1.0    -16684.552979         False          False   False
2  -16384.553223  -16484.552979  3856.436035 -16384.553223    0.024902 -16484.552979        0.0   99.999756        0.000000     1.0    -16384.553223         False          False   False
3  -16096.552979  -16291.577881  3856.436035 -16096.552979  388.000000 -16291.577881        0.0  195.024902      188.000244     1.0    -16384.553223         False          False   False
4  -16096.552979  -16195.077881  3856.436035 -16096.552979  195.000000 -16195.077881        0.0   98.524902       88.000244     2.0    -16384.553223         False          False   False
5  -16096.552979  -16109.415527  3857.198242 -16096.552979   98.500000 -16109.415527        0.0   12.862549      -11.237549     3.0    -16384.553223         False          False   False
6  -16059.165527  -16085.315186  3931.048340 -16059.165527   50.250000 -16085.315186        0.0   26.149658        0.000000     1.0    -16384.553223         False          False   False
7  -16059.165527  -16059.165527  4016.985840 -16059.165527   26.125000 -16059.165527        0.0    0.000000      -14.062500     2.0    -16384.553223         False          False   False
8  -16045.103027  -16045.103027  4102.923340 -16045.103027   14.062500 -16045.103027        0.0    0.000000      -14.062500     1.0    -16384.553223         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=770149/4096.[0m
[08/10 19:10:45]  --------------------------------------------------------------------------------
[08/10 19:10:45]  Iteration: 265 (0 solution, 264 counterexamples)
[08/10 19:12:50]  Generator returned sat in 115.580253 secs.
[08/10 19:12:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:12:53]  Improved gap from 369/32 to 12.5
[08/10 19:12:53]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/10 19:12:53]  Verifer returned sat in 2.048833 secs.
[08/10 19:12:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16286.225830  -16717.275635  3844.510498 -16286.225830    0.049561 -16717.275635   0.024902  431.024902      377.524658     5.0    -16717.275635            -1             -1     -1
1  -16286.200928  -16563.775391  3844.510498 -16286.200928  431.049805 -16563.775391   0.024902  277.549561      277.549561     5.0    -16717.275635         False          False   True
2  -16132.700684  -16563.775391  3844.510498 -16132.700684  431.049805 -16563.775391  53.500000  377.574707      277.574707     5.0    -16717.275635         False          False   True
3  -16095.275391  -16363.775625  3844.510498 -16095.275391  415.000000 -16363.775625  53.500000  215.000234      215.000000     6.0    -16148.775391         False          False   True
4  -16095.275391  -16286.225830  3844.510498 -16095.275391  207.000000 -16286.225830  53.500000  137.450439      115.000000     4.0    -16148.775391         False           True  False
5  -16095.275391  -16199.800293  3844.510498 -16095.275391  103.000000 -16199.800293  53.500000   51.024902       15.000000     4.0    -16148.775391         False          False  False
6  -16095.275391  -16161.250732  3929.485840 -16095.275391   51.000000 -16161.250732  53.500000   12.475342       -0.024658     4.0    -16148.775391         False          False  False
7  -16082.750732  -16148.750732  4016.985840 -16082.750732   25.000000 -16148.750732  53.500000   12.500000        0.000000     1.0    -16148.775391         False          False  False
8  -16082.750732  -16136.250732  4016.985840 -16082.750732   12.000000 -16136.250732  53.500000    0.000000     -100.000000     2.0    -16148.775391         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=568473/2048.[0m
[08/10 19:12:54]  --------------------------------------------------------------------------------
[08/10 19:12:54]  Iteration: 266 (0 solution, 265 counterexamples)
[08/10 19:14:29]  Generator returned sat in 86.005059 secs.
[08/10 19:14:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:14:35]  Improved gap from 0 to 32.8125
[08/10 19:14:36]  Improved number of small numbers from 53 to 67 out of a max of 114
[08/10 19:14:36]  Verifer returned sat in 6.116554 secs.
[08/10 19:14:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16520.548340  -16686.195830  3777.322998 -16520.548340    0.002441 -16686.195830    0.024902  165.622588      100.000088     2.0    -16686.195830            -1             -1   False
1  -16520.548340  -16553.385742  3777.322998 -16520.548340  165.622314 -16553.385742    0.024902   32.812500        0.000088     2.0    -16686.195830         False          False   False
2  -16387.740967  -16426.658330  3777.322998 -16387.740967  165.619873 -16426.658330    0.024902   38.892461       32.807461     1.0    -16387.765869         False          False   False
3  -16320.545928  -16320.573330  3777.322998 -16320.545928  106.087500 -16320.573330    0.024902    0.002500        0.002500     1.0    -16320.570830         False          False   False
4  -16086.193428  -16220.575830  3777.322998 -16086.193428  234.355000 -16220.575830  101.569902   32.812500       32.810000     1.0    -16320.570830         False          False   False
5  -16086.193428  -16220.573330  3844.510498 -16086.193428    0.010000 -16220.573330  101.569902   32.810000       -0.002500     2.0    -16320.570830         False          False    True
6  -16016.455928  -16187.760830  3860.140625 -16016.455928  102.547500 -16187.760830  101.569902   69.735000      -14.634873     1.0    -16320.570830         False          False    True
7  -15969.010928  -16103.390830  3927.327881 -15969.010928  117.180000 -16103.390830  101.569902   32.810000       -0.002617     1.0    -16320.570830         False          False    True
8  -15885.138428  -16070.578125  3927.327881 -15885.138428  116.682500 -16070.578125  101.569902   83.869795      -16.130117     1.0    -16320.570830         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3281/100.[0m
[08/10 19:14:36]  --------------------------------------------------------------------------------
[08/10 19:14:36]  Iteration: 267 (0 solution, 266 counterexamples)
[08/10 19:18:03]  Generator returned sat in 196.485716 secs.
[08/10 19:18:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:18:04]  Improved gap from 5/8192 to 100
[08/10 19:18:05]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 19:18:05]  Verifer returned sat in 1.603238 secs.
[08/10 19:18:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17011.510830  -17135.860830  3777.322998 -17011.510830    0.100098 -17135.860830       0.10  124.250000      124.250000     3.0     -17135.86083            -1             -1     -1
1  -17011.510830  -17135.860596  3777.322998 -17011.510830  124.150000 -17135.860596       0.10  124.249766       24.250000     2.0     -17135.86083         False          False   True
2  -17011.510830  -17011.710830  3777.322998 -17011.510830  124.050000 -17011.710830       0.10    0.100000      -75.750000     3.0     -17011.61083         False          False   True
3  -16850.994163  -16851.194163  3777.322998 -16850.994163  160.616667 -16851.194163       0.10    0.100000      -15.233333     1.0     -17011.61083         False          False   True
4  -16710.760830  -16745.410830  3777.322998 -16710.760830  140.333333 -16745.410830       0.75   33.900000       24.350000     1.0     -17011.61083         False          False   True
5  -16675.994163  -16676.844163  3777.322998 -16675.994163   68.666667 -16676.844163       0.75    0.100000      -40.883333     1.0     -17011.61083         False          False   True
6  -16510.660830  -16535.860830  3777.322998 -16510.660830  165.433333 -16535.860830       0.85   24.350000       24.350000     1.0     -17011.61083         False          False   True
7  -16453.794163  -16454.744163  3777.322998 -16453.794163   81.216667 -16454.744163       0.85    0.100000      -18.783333     1.0     -17011.61083         False          False   True
8  -16310.560830  -16435.860596  3777.322998 -16310.560830  143.333333 -16435.860596       0.95  124.349766       24.350000     1.0     -17011.61083         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=487/20.[0m
[08/10 19:18:06]  --------------------------------------------------------------------------------
[08/10 19:18:06]  Iteration: 268 (0 solution, 267 counterexamples)
[08/10 19:20:39]  Generator returned sat in 143.453260 secs.
[08/10 19:20:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:20:42]  Improved gap from 0 to 23.4375
[08/10 19:20:43]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 19:20:43]  Verifer returned sat in 2.570541 secs.
[08/10 19:20:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17684.698242  -17684.898193  4226.260498 -17684.698242  203.125000 -17684.898193    0.100098    0.099854      -99.899902     9.0    -17684.898193            -1             -1     -1
1  -17481.773193  -17584.898438  4226.260498 -17481.773193  203.024902 -17584.898438    0.200195  102.925049        2.925049     1.0    -17481.973389         False           True   True
2  -17381.673340  -17481.873291  4226.260498 -17381.673340  203.024902 -17481.873291    0.300049   99.899902        2.925049     1.0    -17481.973389         False          False   True
3  -16730.573242  -17384.898438  4226.260498 -16730.573242  751.000000 -17384.898438  551.400146  102.925049        2.925049     2.0    -17481.973389         False          False   True
4  -16457.498291  -17184.898438  4226.260498 -16457.498291  376.000000 -17184.898438  724.475098    2.925049        2.925049     1.0    -17481.973389         False          False   True
5  -16271.923340  -17153.285645  4226.260498 -16271.923340  188.500000 -17153.285645  810.050049   71.312256        2.925049     1.0    -17481.973389         False          False   True
6  -16248.485596  -17081.873291  4299.797852 -16248.485596   94.750000 -17081.873291  810.050049   23.337646       -0.099854     1.0    -17481.973389         False          False   True
7  -16224.948242  -17058.435791  4376.360352 -16224.948242   46.875000 -17058.435791  810.050049   23.437500        0.000000     1.0    -17481.973389         False          False   True
8  -16224.948242  -17034.998291  4452.922852 -16224.948242   22.937500 -17034.998291  810.050049    0.000000      -23.437500     2.0    -17481.973389         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=11981/4096.[0m
[08/10 19:20:43]  --------------------------------------------------------------------------------
[08/10 19:20:43]  Iteration: 269 (0 solution, 268 counterexamples)
[08/10 19:25:13]  Generator returned sat in 259.974876 secs.
[08/10 19:25:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:25:15]  Improved gap from 1/10 to 100
[08/10 19:25:16]  Improved number of small numbers from 58 to 91 out of a max of 114
[08/10 19:25:16]  Verifer returned sat in 1.606910 secs.
[08/10 19:25:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16573.973145  -16773.973877  4126.460498 -16573.973145  399.999756 -16773.973877   0.100342  199.900391      199.900195     8.0    -16773.973877            -1             -1     -1
1  -16373.973389  -16773.973633  4126.460498 -16373.973389  399.900146 -16773.973633   0.100342  399.899902      299.899951     9.0    -16374.073730         False          False   True
2  -16373.873291  -16573.973877  4126.460498 -16373.873291  400.000000 -16573.973877   0.100342  200.000244      200.000049     2.0    -16374.073730         False           True  False
3  -16373.873291  -16473.973877  4126.460498 -16373.873291   14.518750 -16473.973877   0.100342  100.000244      100.000049     3.0    -16373.973633         False          False  False
4  -16373.873291  -16473.973633  4126.460498 -16373.873291   27.037500 -16473.973633   0.100342  100.000000        0.000049     4.0    -16373.973633         False          False  False
5  -16373.873291  -16373.973682  4126.460498 -16373.873291   52.075000 -16373.973682   0.100342    0.000049      -99.999951     4.0    -16373.973633         False          False  False
6  -16271.723340  -16273.973682  4126.460498 -16271.723340  102.150000 -16273.973682   0.100342    2.150000      -97.850000     1.0    -16373.973633         False          False  False
7  -16071.573340  -16073.973682  4126.460498 -16071.573340  202.300000 -16073.973682   0.100342    2.300000        2.300000     1.0    -16373.973633         False          False  False
8  -15671.273340  -16071.573730  4126.460498 -15671.273340  402.600000 -16071.573730   0.200342  400.100049      302.500000     1.0    -16373.973633         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=605/2.[0m
[08/10 19:25:17]  --------------------------------------------------------------------------------
[08/10 19:25:17]  Iteration: 270 (0 solution, 269 counterexamples)
[08/10 19:26:16]  Generator returned sat in 48.914829 secs.
[08/10 19:26:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:26:18]  Improved gap from 0 to 12.5
[08/10 19:26:19]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 19:26:19]  Verifer returned sat in 1.435413 secs.
[08/10 19:26:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15843.724121  -16274.923828  3527.410400 -15843.724121    0.050049 -16274.923828        0.0  431.199707      331.199951     6.0    -16274.923828            -1             -1    True
1  -15843.724121  -16074.974121  3527.410400 -15843.724121  431.150000 -16074.974121        0.0  231.250000      231.199951     6.0    -16274.923828         False          False    True
2  -15643.874023  -16074.923828  3527.410400 -15643.874023  431.100098 -16074.923828        0.0  431.049805      331.050049     7.0    -15643.874023         False          False    True
3  -15643.874023  -15874.924072  3527.410400 -15643.874023  431.000000 -15874.924072        0.0  231.050049      231.050049     4.0    -15643.874023         False           True   False
4  -15643.874023  -15774.924072  3527.410400 -15643.874023  215.000000 -15774.924072        0.0  131.050049      131.050049     3.0    -15643.874023         False          False   False
5  -15643.874023  -15690.523926  3527.410400 -15643.874023  107.000000 -15690.523926        0.0   46.649902       31.050049     4.0    -15643.874023         False          False   False
6  -15637.523926  -15651.023682  3590.010254 -15637.523926   53.000000 -15651.023682        0.0   13.499756        0.000000     5.0    -15643.874023         False          False   False
7  -15625.023682  -15637.474121  3677.460449 -15625.023682   26.000000 -15637.474121        0.0   12.450439       -0.049561     1.0    -15643.874023         False          False   False
8  -15624.974121  -15624.974121  3677.460449 -15624.974121   12.500000 -15624.974121        0.0    0.000000     -100.000000     1.0    -15643.874023         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3311/10.[0m
[08/10 19:26:19]  --------------------------------------------------------------------------------
[08/10 19:26:19]  Iteration: 271 (0 solution, 270 counterexamples)
[08/10 19:28:06]  Generator returned sat in 96.355149 secs.
[08/10 19:28:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:28:07]  Improved gap from 0 to 100
[08/10 19:28:09]  Improved number of small numbers from 23 to 28 out of a max of 114
[08/10 19:28:09]  Verifer returned sat in 2.049320 secs.
[08/10 19:28:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16474.062988  -16474.063115  3826.549443 -16474.062988    0.050049 -16474.063115   0.000000    0.000126        0.000126     1.0    -16474.063115            -1             -1   False
1  -16374.038090  -16374.063115  3826.549443 -16374.038090  100.025024 -16374.063115   0.012512    0.012512        0.012512     1.0    -16474.063115         False          False   False
2  -16274.031834  -16374.044346  3826.549443 -16274.031834  100.018768 -16374.044346   0.018768   99.993744        0.012512     1.0    -16274.050602         False          False    True
3  -16169.988041  -16174.063115  3826.549443 -16169.988041  204.037537 -16174.063115   4.062561    0.012512        0.012512     1.0    -16274.050602         False          False    True
4  -16069.981785  -16074.063115  3826.549443 -16069.981785  100.018768 -16074.063115   4.068817    0.012512        0.012512     1.0    -16274.050602         False          False    True
5  -16021.984913  -16039.377680  3826.549443 -16021.984913   48.009384 -16039.377680   4.068817   13.323949      -51.990616     1.0    -16274.050602         False          False    True
6  -15869.975529  -15874.063115  3826.549443 -15869.975529  165.333333 -15874.063115   4.075073    0.012512        0.012512     1.0    -16274.050602         False          False    True
7  -15789.321375  -15793.402704  3826.549443 -15789.321375   80.666667 -15793.402704   4.075073    0.006256      -19.333333     1.0    -16274.050602         False          False    True
8  -15650.997426  -15774.062988  3826.549443 -15650.997426  138.330205 -15774.062988  23.053177  100.012386        0.012512     1.0    -16274.050602         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/16384.[0m
[08/10 19:28:09]  --------------------------------------------------------------------------------
[08/10 19:28:09]  Iteration: 272 (0 solution, 271 counterexamples)
[08/10 19:30:26]  Generator returned sat in 126.119433 secs.
[08/10 19:30:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:30:30]  Improved gap from 0 to 48.4375
[08/10 19:30:31]  Improved number of small numbers from 59 to 68 out of a max of 114
[08/10 19:30:31]  Verifer returned sat in 4.974420 secs.
[08/10 19:30:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15718.781982  -15770.244334  3826.549316 -15718.781982    0.100098 -15770.244334        0.0   51.462352       51.462225     2.0    -15770.244334            -1             -1    True
1  -15718.681834  -15718.681834  3826.549443 -15718.681834   51.562500 -15718.681834        0.0    0.000000      -48.437500     1.0    -15770.244334         False          False    True
2  -15321.806834  -15570.244385  3826.549443 -15321.806834  396.875000 -15570.244385        0.0  248.437551      248.437500     1.0    -15770.244334         False          False    True
3  -15321.806834  -15485.394334  3826.549443 -15321.806834  214.700000 -15485.394334        0.0  163.587500      148.437500     2.0    -15321.806834         False          False    True
4  -15321.806834  -15374.831834  3826.549443 -15321.806834  106.850000 -15374.831834        0.0   53.025000       48.437500     3.0    -15321.806834         False          False    True
5  -15321.806834  -15370.244334  3878.111943 -15321.806834   52.925000 -15370.244334        0.0   48.437500        0.000000     4.0    -15321.806834         False          False    True
6  -15321.806834  -15321.806834  3929.674443 -15321.806834   25.962500 -15321.806834        0.0    0.000000      -48.437500     5.0    -15321.806834         False          False    True
7  -15225.031834  -15273.369334  3981.236816 -15225.031834   96.775000 -15273.369334        0.0   48.337500       -0.100126     1.0    -15321.806834         False           True   False
8  -15172.250584  -15224.931641  3981.237061 -15172.250584  101.118750 -15224.931641        0.0   52.681057      -47.318632     1.0    -15321.806834         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=509005/2048.[0m
[08/10 19:30:32]  --------------------------------------------------------------------------------
[08/10 19:30:32]  Iteration: 273 (0 solution, 272 counterexamples)
[08/10 19:35:34]  Generator returned sat in 291.627044 secs.
[08/10 19:35:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:35:38]  Improved gap from 409/16384 to 23.4375
[08/10 19:35:39]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/10 19:35:39]  Verifer returned sat in 4.016180 secs.
[08/10 19:35:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17455.059082  -17478.486572  3678.122559 -17455.059082   23.447998 -17478.486572    0.000000  23.427490       23.427456     9.0    -17478.486572            -1             -1     -1
1  -17455.049072  -17478.486328  3754.684814 -17455.049072   23.437500 -17478.486328    0.000000  23.437256       -0.000278     2.0    -17455.049072         False           True  False
2  -17450.340576  -17455.038423  3826.549443 -17450.340576   28.145752 -17455.038423    0.000000   4.697846      -23.427154     1.0    -17455.049072         False          False  False
3  -16666.705089  -17380.038423  3826.549443 -16666.705089  788.333333 -17380.038423  636.687500  76.645833       23.520833     1.0    -17455.049072         False          False  False
4  -16350.184256  -17226.913423  3826.549443 -16350.184256  393.166667 -17226.913423  853.208333  23.520833       23.520833     1.0    -17455.049072         False          False   True
5  -16178.121756  -17203.382080  3826.549443 -16178.121756  195.583333 -17203.382080  925.270833  99.989491       23.520833     1.0    -17455.049072         False          False   True
6  -16178.121756  -17126.819673  3903.018193 -16178.121756   96.791667 -17126.819673  925.270833  23.427083       -0.010417     2.0    -17455.049072         False          False   True
7  -16151.653006  -17103.382080  3976.559859 -16151.653006   49.895833 -17103.382080  925.270833  26.458241        0.000000     1.0    -17455.049072         False          False   True
8  -16151.653006  -17076.923839  3976.560059 -16151.653006   26.447917 -17076.923839  925.270833   0.000000      -99.999801     2.0    -17455.049072         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1129/48.[0m
[08/10 19:35:40]  --------------------------------------------------------------------------------
[08/10 19:35:40]  Iteration: 274 (0 solution, 273 counterexamples)
[08/10 19:38:30]  Generator returned sat in 159.798886 secs.
[08/10 19:38:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:38:32]  Improved gap from 0 to 23.4375
[08/10 19:38:32]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 19:38:32]  Verifer returned sat in 1.255695 secs.
[08/10 19:38:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15024.299072  -15124.298828  3823.434814 -15024.299072  123.537354 -15124.298828     0.000000   99.999756       99.949707     2.0    -15124.298828            -1             -1   False
1  -15000.811279  -15124.248779  3823.434814 -15000.811279  123.487549 -15124.248779     0.050049  123.387451       23.387451     2.0    -15000.861328         False          False   False
2  -14394.148926  -15024.248779  3823.434814 -14394.148926  730.049805 -15024.248779   506.712402  123.387451       23.387451     2.0    -15000.861328         False          False    True
3  -13787.536377  -14824.248779  3823.434814 -13787.536377  730.000000 -14824.248779  1013.324951   23.387451       23.387451     1.0    -14800.861328         False          False    True
4  -13443.923828  -14727.323975  3823.434814 -13443.923828  367.000000 -14727.323975  1256.937500   26.462646       23.387451     1.0    -14800.861328         False          False    True
5  -13284.886475  -14700.811523  3823.434814 -13284.886475  185.500000 -14700.811523  1315.974854   99.950195       23.387451     1.0    -14800.861328         False          False    True
6  -13284.886475  -14624.248779  3899.997314 -13284.886475   94.750000 -14624.248779  1315.974854   23.387451       -0.050049     2.0    -14800.861328         False          False    True
7  -13261.398926  -14600.811279  3976.559814 -13261.398926   46.875000 -14600.811279  1315.974854   23.437500        0.000000     1.0    -14800.861328         False          False    True
8  -13261.398926  -14577.373779  3976.560059 -13261.398926   22.937500 -14577.373779  1315.974854    0.000000      -99.999756     2.0    -14800.861328         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=95795/4096.[0m
[08/10 19:38:33]  --------------------------------------------------------------------------------
[08/10 19:38:33]  Iteration: 275 (0 solution, 274 counterexamples)
[08/10 19:39:08]  Generator returned sat in 25.182986 secs.
[08/10 19:39:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:39:10]  Improved gap from 369/16 to 23.4375
[08/10 19:39:10]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 19:39:10]  Verifer returned sat in 1.375628 secs.
[08/10 19:39:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -15854.964111  -15854.964111  3925.297363 -15854.964111  737.300049 -15854.964111     0.000000    0.000000       -0.000244     7.0    -15854.964111            -1             -1     -1
1  -15117.763916  -15854.963867  3925.297363 -15117.763916  737.200195 -15854.963867   637.000000  100.199951        0.199951     1.0    -15754.763916         False           True  False
2  -14480.864014  -15754.663818  3925.297363 -14480.864014  737.099854 -15754.663818  1173.899902   99.899902        0.199951     1.0    -15654.763916         False          False   True
3  -13843.763916  -15554.964111  3925.297363 -13843.763916  737.000000 -15554.964111  1711.000000    0.200195        0.199951     1.0    -15554.763916         False          False   True
4  -13473.964111  -15454.963867  3925.297363 -13473.964111  370.000000 -15454.963867  1980.799805    0.199951        0.199951     1.0    -15554.763916         False          False   True
5  -13287.664062  -15425.976318  3925.297363 -13287.664062  186.500000 -15425.976318  2067.099854   71.212402        0.199951     1.0    -15554.763916         False          False   True
6  -13264.126465  -15354.663818  4001.559814 -13264.126465   94.750000 -15354.663818  2067.099854   23.437500        0.000000     1.0    -15554.763916         False          False   True
7  -13240.688965  -15331.226318  4078.122314 -13240.688965   46.875000 -15331.226318  2067.099854   23.437500        0.000000     2.0    -15554.763916         False          False   True
8  -13240.688965  -15307.788818  4078.122314 -13240.688965   22.937500 -15307.788818  2067.099854    0.000000     -100.000000     2.0    -15554.763916         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/10 19:39:11]  --------------------------------------------------------------------------------
[08/10 19:39:11]  Iteration: 276 (0 solution, 275 counterexamples)
[08/10 19:40:47]  Generator returned sat in 87.393182 secs.
[08/10 19:40:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:40:50]  Improved gap from 375/16 to 23.4375
[08/10 19:40:51]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 19:40:51]  Verifer returned sat in 2.351353 secs.
[08/10 19:40:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16511.774170  -16611.773926  3925.297363 -16511.774170    0.050049 -16611.773926   0.050049  99.949707       99.949707     3.0    -16611.773926            -1             -1     -1
1  -16510.023926  -16511.773926  3925.297363 -16510.023926  101.699951 -16511.773926   0.050049   1.699951        1.699951     1.0    -16611.773926         False          False   True
2  -16407.924072  -16413.773926  3925.297363 -16407.924072  103.799805 -16413.773926   2.100098   3.749756        1.749756     1.0    -16611.773926         False          False   True
3  -16307.874023  -16312.773926  3925.297363 -16307.874023  103.799805 -16312.773926   2.150146   2.749756        1.749756     1.0    -16611.773926         False          False   True
4  -16207.823975  -16211.774170  3925.297363 -16207.823975  102.799805 -16211.774170   2.200195   1.750000        1.749756     1.0    -16611.773926         False          False   True
5  -16107.774170  -16210.023926  3925.297363 -16107.774170  101.799805 -16210.023926   2.250000  99.999756        1.749756     1.0    -16611.773926         False          False   True
6  -16106.974121  -16111.773926  3998.784912 -16106.974121  100.799805 -16111.773926   2.250000   2.549805      -23.962646     2.0    -16611.773926         False          False   True
7  -16059.624023  -16085.261230  4075.347168 -16059.624023   49.899902 -16085.261230   2.250000  23.387207       -0.050293     1.0    -16611.773926         False          False   True
8  -16058.561279  -16061.823730  4151.909668 -16058.561279   24.449951 -16061.823730   2.250000   1.012451      -22.425049     1.0    -16611.773926         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=7167/4096.[0m
[08/10 19:40:51]  --------------------------------------------------------------------------------
[08/10 19:40:51]  Iteration: 277 (0 solution, 276 counterexamples)
[08/10 19:44:25]  Generator returned sat in 203.993024 secs.
[08/10 19:44:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:44:33]  Improved gap from 0 to 32.8125
[08/10 19:44:34]  Improved number of small numbers from 77 to 114 out of a max of 114
[08/10 19:44:34]  Verifer returned sat in 7.821608 secs.
[08/10 19:44:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16511.774170  -16711.773926  3925.297363 -16511.774170  200.099854 -16711.773926   0.000000  199.999756       99.999756     2.0    -16711.773926            -1             -1   False
1  -16511.773926  -16603.086426  3925.297363 -16511.773926  200.000000 -16603.086426   0.000000   91.312500        0.000000     2.0    -16511.773926         False          False   False
2  -16403.186279  -16411.774170  3925.297363 -16403.186279  199.900146 -16411.774170   0.100098    8.487793        8.487549     1.0    -16403.286377         False          False   False
3  -16403.186279  -16403.286621  3983.997314 -16403.186279    0.100098 -16403.286621   0.100098    0.000244      -32.812500     2.0    -16403.286377         False          False    True
4  -16249.892822  -16270.573975  3983.997314 -16249.892822  153.293701 -16270.573975  12.093506    8.587646        8.487549     1.0    -16403.286377         False          False    True
5  -16249.892822  -16270.473877  4051.184814 -16249.892822    1.000000 -16270.473877  12.093506    8.487549      -24.324951     2.0    -16403.286377         False          False    True
6  -16188.230225  -16237.661377  4113.847168 -16188.230225   70.150146 -16237.661377  12.093506   37.337646        0.000000     1.0    -16403.286377         False          False    True
7  -16108.680176  -16200.223877  4134.197266 -16108.680176  116.887695 -16200.223877  12.093506   79.450195       -0.099854     1.0    -16403.286377         False          False    True
8  -16095.511475  -16120.673828  4134.197510 -16095.511475   92.618896 -16120.673828  12.093506   13.068848      -86.930908     1.0    -16403.286377         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=34765/4096.[0m
[08/10 19:44:35]  --------------------------------------------------------------------------------
[08/10 19:44:35]  Iteration: 278 (0 solution, 277 counterexamples)
[08/10 19:46:53]  Generator returned sat in 127.921404 secs.
[08/10 19:46:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:46:54]  Improved gap from 1/10 to 23.4375
[08/10 19:46:54]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 19:46:54]  Verifer returned sat in 0.914517 secs.
[08/10 19:46:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16363.661621  -16463.961182  3777.484619 -16363.661621    0.099854 -16463.961182   0.099854  100.199707      100.199707     7.0    -16463.961182            -1             -1     -1
1  -16356.461182  -16378.061523  3777.484619 -16356.461182  107.400146 -16378.061523   7.300049   14.300293        0.199951     2.0    -16463.961182         False           True   True
2  -16263.461426  -16270.861572  3777.484619 -16263.461426  107.300049 -16270.861572   7.300049    0.100098       -6.800293     1.0    -16270.761475         False          False   True
3  -16156.361328  -16168.861572  3777.484619 -16156.361328  107.200195 -16168.861572   7.399902    5.100342        0.199951     1.0    -16163.761230         False          False   True
4  -16056.261475  -16063.961182  3777.484619 -16056.261475  105.200195 -16063.961182   7.499756    0.199951        0.199951     1.0    -16163.761230         False          False   True
5  -15953.261230  -16063.661377  3777.484619 -15953.261230  103.200195 -16063.661377  10.500000   99.900146        0.199951     1.0    -16163.761230         False          False   True
6  -15951.961182  -15963.661621  3853.747314 -15951.961182  101.200195 -15963.661621  10.500000    1.200439      -22.237305     1.0    -16163.761230         False          False   True
7  -15903.561523  -15940.223877  3927.584961 -15903.561523   49.600098 -15940.223877  10.500000   26.162354        0.000000     1.0    -16163.761230         False          False   True
8  -15903.561523  -15914.061523  4004.147217 -15903.561523   23.800049 -15914.061523  10.500000    0.000000      -23.437744     2.0    -16163.761230         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/10 19:46:55]  --------------------------------------------------------------------------------
[08/10 19:46:55]  Iteration: 279 (0 solution, 278 counterexamples)
[08/10 19:49:00]  Generator returned sat in 115.080961 secs.
[08/10 19:49:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:49:04]  Improved gap from 0 to 15.625
[08/10 19:49:04]  Improved number of small numbers from 88 to 114 out of a max of 114
[08/10 19:49:04]  Verifer returned sat in 2.649450 secs.
[08/10 19:49:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16463.161377  -16663.261475  3765.934814 -16463.161377   100.000 -16663.261475        0.0  200.100098      100.100342     8.0    -16663.261475            -1             -1     -1
1  -16463.161377  -16563.261719  3765.934814 -16463.161377   100.000 -16563.261719        0.0  100.100342        0.100342     6.0    -16663.261475         False           True  False
2  -16463.161377  -16463.261475  3777.484375 -16463.161377   100.000 -16463.261475        0.0    0.100098      -88.350098     3.0    -16663.261475         False          False  False
3  -16056.261475  -16274.811523  3777.484375 -16056.261475   407.000 -16274.811523        0.0  218.550049      218.549805     1.0    -16663.261475         False          False  False
4  -16056.261475  -16174.811523  3777.484375 -16056.261475   205.000 -16174.811523        0.0  118.550049      118.549805     2.0    -16663.261475         False          False  False
5  -16056.261475  -16094.136719  3777.484375 -16056.261475   104.000 -16094.136719        0.0   37.875244       18.549805     3.0    -16663.261475         False          False  False
6  -16040.636719  -16056.161621  3843.209717 -16040.636719    53.500 -16056.161621        0.0   15.524902       -0.100098     1.0    -16663.261475         False          False  False
7  -16027.911621  -16040.536621  3927.584717 -16027.911621    28.250 -16040.536621        0.0   12.625000       -3.000000     1.0    -16663.261475         False          False  False
8  -16024.911621  -16024.911621  4011.959473 -16024.911621    15.625 -16024.911621        0.0    0.000000      -15.625244     1.0    -16663.261475         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=447795/2048.[0m
[08/10 19:49:04]  --------------------------------------------------------------------------------
[08/10 19:49:04]  Iteration: 280 (0 solution, 279 counterexamples)
[08/10 19:52:44]  Generator returned sat in 209.073469 secs.
[08/10 19:52:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:52:47]  Improved gap from 0 to 1.5625
[08/10 19:52:47]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 19:52:47]  Verifer returned sat in 2.299321 secs.
[08/10 19:52:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17472.000977  -17873.579102  3631.100098 -17472.000977    0.015625 -17873.579102    0.015625  401.562500        401.5625     4.0    -17873.579102            -1             -1     -1
1  -17070.422852  -17873.579102  3631.100098 -17070.422852  803.140625 -17873.579102  401.593750  401.562500        301.5625     4.0    -17873.579102         False          False   True
2  -17070.422852  -17673.579346  3631.100098 -17070.422852  401.562256 -17673.579346  401.593750  201.562744        201.5625     5.0    -17472.016602         False          False   True
3  -17070.422852  -17575.141602  3631.100098 -17070.422852    0.015625 -17575.141602  401.593750  103.125000        101.5625     6.0    -17472.016602         False          False   True
4  -17070.422852  -17473.594727  3631.100098 -17070.422852    1.500000 -17473.594727  401.593750    1.578125          1.5625     7.0    -17472.016602         False          False   True
5  -17070.422852  -17473.579102  3729.537598 -17070.422852    1.500000 -17473.579102  401.593750    1.562500          0.0000     8.0    -17472.016602         False          False   True
6  -17070.422852  -17472.016602  3827.975098 -17070.422852    1.500000 -17472.016602  401.593750    0.000000         -1.5625     9.0    -17472.016602         False          False   True
7  -16969.297852  -17470.454102  3828.412598 -16969.297852  101.125000 -17470.454102  401.593750   99.562500          0.0000     1.0    -17472.016602         False           True  False
8  -16969.297852  -17370.891602  3828.412598 -16969.297852    1.140625 -17370.891602  401.593750    0.000000       -100.0000     2.0    -17472.016602         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=4825/16.[0m
[08/10 19:52:47]  --------------------------------------------------------------------------------
[08/10 19:52:47]  Iteration: 281 (0 solution, 280 counterexamples)
[08/10 19:53:29]  Generator returned sat in 31.972531 secs.
[08/10 19:53:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:53:32]  Improved gap from 367/256 to 1.5625
[08/10 19:53:33]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:53:33]  Verifer returned sat in 2.924744 secs.
[08/10 19:53:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17531.953613  -17577.394287  3023.987793 -17531.953613   0.100098 -17577.394287   0.015625  45.425049       45.425049     7.0    -17577.394287            -1             -1   False
1  -17531.853516  -17533.731445  3078.462646 -17531.853516  45.525146 -17533.731445   0.015625   1.862305        0.000000     8.0    -17577.394287         False          False   False
2  -17531.853516  -17531.869141  3176.900146 -17531.853516   1.762500 -17531.869141   0.015625   0.000000       -1.562500     2.0    -17531.869141         False          False   False
3  -17530.191162  -17530.306641  3275.337646 -17530.191162   1.662354 -17530.306641   0.015625   0.099854       -1.462646     1.0    -17530.206787         False          False   False
4  -17485.203369  -17487.356445  3331.812500 -17485.203369  45.087646 -17487.356445   0.015625   2.137451        0.000000     1.0    -17530.206787         False          False   False
5  -17442.965820  -17485.119141  3389.475098 -17442.965820  44.375000 -17485.119141   0.015625  42.137695       -0.099854     1.0    -17530.206787         False          False   False
6  -17440.353516  -17442.881592  3486.862549 -17440.353516  44.750000 -17442.881592   0.015625   2.512451       -0.100098     1.0    -17530.206787         False          False   False
7  -17357.440918  -17440.269043  3504.050049 -17357.440918  85.425049 -17440.269043   0.015625  82.812500        0.000000     1.0    -17530.206787         False          False   False
8  -17357.440918  -17357.456543  3504.050293 -17357.440918  45.087402 -17357.456543   0.015625   0.000000      -99.999756     2.0    -17530.206787         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 19:53:34]  --------------------------------------------------------------------------------
[08/10 19:53:34]  Iteration: 282 (0 solution, 281 counterexamples)
[08/10 19:58:42]  Generator returned sat in 298.078681 secs.
[08/10 19:58:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:58:46]  Improved gap from 1/20 to 0
[08/10 19:58:47]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:58:47]  Verifer returned sat in 3.993824 secs.
[08/10 19:58:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16914.770996  -17114.720947  2461.314453 -16914.770996  200.099854 -17114.720947       0.00  199.949951       99.949951     9.0    -17114.720947            -1             -1     -1
1  -16914.670898  -16914.720947  2461.314453 -16914.670898  200.050049 -16914.720947       0.00    0.050049        0.050049     1.0    -16914.670898         False           True  False
2  -16910.871094  -16910.921143  2557.414551 -16910.871094    3.849854 -16910.921143       0.00    0.050049       -0.050049     1.0    -16910.871094         False          False  False
3  -16910.771240  -16910.821045  2657.364746 -16910.771240    0.149902 -16910.821045       0.00    0.049805        0.000000     1.0    -16910.771240         False          False  False
4  -16707.421143  -16910.770996  2657.364746 -16707.421143  203.399902 -16910.770996     103.25  100.099854        0.100098     1.0    -16910.771240         False          False  False
5  -16707.321045  -16810.621094  2757.114502 -16707.321045  100.199951 -16810.621094     103.25    0.050049       -0.050049     1.0    -16910.771240         False          False   True
6  -16705.871094  -16810.520996  2855.714355 -16705.871094    1.500000 -16810.520996     103.25    1.399902       -0.000244     1.0    -16910.771240         False          False   True
7  -16705.770996  -16809.070801  2954.164551 -16705.770996    1.500000 -16809.070801     103.25    0.049805       -1.449951     1.0    -16910.771240         False          False   True
8  -16704.320801  -16807.571045  2954.164551 -16704.320801    1.500000 -16807.571045     103.25    0.000244      -99.999756     1.0    -16910.771240         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=205/2048.[0m
[08/10 19:58:47]  --------------------------------------------------------------------------------
[08/10 19:58:47]  Iteration: 283 (0 solution, 282 counterexamples)
[08/10 20:03:06]  Generator returned sat in 248.887741 secs.
[08/10 20:03:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:03:10]  Improved gap from 0 to 12.5
[08/10 20:03:11]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 20:03:11]  Verifer returned sat in 3.315450 secs.
[08/10 20:03:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16937.501221  -17137.501221  2557.414551 -16937.501221    0.050000 -17137.501221        0.0  200.000000      200.000000     2.0    -17137.501221            -1             -1   False
1  -16937.501221  -17137.501221  2557.414551 -16937.501221  199.999756 -17137.501221        0.0  200.000000      100.000000     2.0    -17137.501221         False          False   False
2  -16937.501221  -17012.451172  2557.414551 -16937.501221  199.999756 -17012.451172        0.0   74.949951        0.000000     3.0    -17137.501221         False          False   False
3  -16612.451172  -16837.501221  2557.414551 -16612.451172  400.000000 -16837.501221        0.0  225.050049      225.050049     1.0    -17137.501221         False          False   False
4  -16612.451172  -16737.501221  2557.414551 -16612.451172  200.000000 -16737.501221        0.0  125.050049      125.050049     2.0    -17137.501221         False          False   False
5  -16612.451172  -16662.501221  2557.414551 -16612.451172  100.000000 -16662.501221        0.0   50.050049       25.050049     3.0    -17137.501221         False          False   False
6  -16612.451172  -16637.500977  2632.364502 -16612.451172   50.000000 -16637.500977        0.0   25.049805        0.000000     4.0    -17137.501221         False          False   False
7  -16612.451172  -16612.451172  2719.864502 -16612.451172   25.000000 -16612.451172        0.0    0.000000      -12.500000     5.0    -17137.501221         False          False   False
8  -16599.951172  -16599.951172  2719.864746 -16599.951172   12.500000 -16599.951172        0.0    0.000000      -99.999756     1.0    -17137.501221         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=461005/2048.[0m
[08/10 20:03:11]  --------------------------------------------------------------------------------
[08/10 20:03:11]  Iteration: 284 (0 solution, 283 counterexamples)
[08/10 20:07:39]  Generator returned sat in 257.275227 secs.
[08/10 20:07:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:07:45]  Improved gap from 23/2 to 32.8125
[08/10 20:07:47]  Improved number of small numbers from 63 to 70 out of a max of 114
[08/10 20:07:47]  Verifer returned sat in 7.274293 secs.
[08/10 20:07:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16847.760010  -16947.756172  2589.220752 -16847.760010    0.001250 -16947.756172    0.00000   99.996162        0.552412     9.0    -16947.756172            -1             -1     -1
1  -16715.497422  -16847.758672  2589.220752 -16715.497422  232.258750 -16847.758672    0.00125  132.260000       32.813750     1.0    -16947.756172         False           True  False
2  -16615.498672  -16648.312422  2589.220752 -16615.498672  232.258750 -16648.312422    0.00125   32.812500       32.812500     1.0    -16947.756172         False          False   True
3  -16615.498672  -16648.312422  2656.408252 -16615.498672   32.811250 -16648.312422    0.00125   32.812500        0.000000     1.0    -16615.499922         False          False   True
4  -16482.683672  -16515.501172  2656.408252 -16482.683672  165.627500 -16515.501172    0.00250   32.815000       32.813750     1.0    -16615.499922         False          False   True
5  -16482.683672  -16515.499922  2722.318848 -16482.683672    0.010000 -16515.499922    0.00250   32.813750       -1.275654     2.0    -16615.499922         False          False   True
6  -16449.586172  -16481.410339  2789.506169 -16449.586172   65.911250 -16481.410339    0.00250   31.821667       -0.990833     1.0    -16615.499922         False          False   True
7  -16365.501172  -16448.597839  2806.410889 -16365.501172  115.906667 -16448.597839    0.00250   83.094167       -0.001113     1.0    -16615.499922         False          False   True
8  -16357.690339  -16365.502441  2806.410889 -16357.690339   90.905000 -16365.502441    0.00250    7.809603      -92.190280     1.0    -16615.499922         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=26251/800.[0m
[08/10 20:07:48]  --------------------------------------------------------------------------------
[08/10 20:07:48]  Iteration: 285 (0 solution, 284 counterexamples)
[08/10 20:09:17]  Generator returned sat in 78.829246 secs.
[08/10 20:09:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:09:18]  Improved gap from 1/20 to 100
[08/10 20:09:18]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 20:09:18]  Verifer returned sat in 0.858487 secs.
[08/10 20:09:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17164.627441  -17164.652588  2855.448242 -17164.627441    0.025146 -17164.652588   0.000000    0.025146      -99.100098     2.0    -17164.652588            -1             -1   False
1  -16964.602539  -16965.527344  2855.448242 -16964.602539  200.050049 -16965.527344   0.000000    0.924805        0.924805     1.0    -17164.652588         False          False   False
2  -16765.502441  -16964.577637  2855.448242 -16765.502441  200.024902 -16964.577637   0.024902  199.050293      100.000000     1.0    -16765.527344         False          False   False
3  -16765.502441  -16765.977539  2855.448242 -16765.502441    3.275146 -16765.977539   0.024902    0.450195        0.000000     2.0    -16765.527344         False          False    True
4  -16565.477539  -16765.502686  2855.448242 -16565.477539  200.475098 -16765.502686   0.049805  199.975342      100.000000     1.0    -16765.527344         False          False    True
5  -16565.477539  -16565.527344  2855.448242 -16565.477539    2.000000 -16565.527344   0.049805    0.000000        0.000000     2.0    -16765.527344         False          False    True
6  -16365.452393  -16565.502686  2855.448242 -16365.452393  200.025146 -16565.502686   0.074951  199.975342      100.000000     1.0    -16765.527344         False          False    True
7  -16365.452393  -16365.552490  2855.448242 -16365.452393    2.000000 -16365.552490   0.074951    0.025146        0.000000     2.0    -16765.527344         False          False    True
8  -16165.002441  -16365.502441  2855.448242 -16165.002441  200.475098 -16365.502441   0.524902  199.975098      100.000000     1.0    -16765.527344         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 20:09:19]  --------------------------------------------------------------------------------
[08/10 20:09:19]  Iteration: 286 (0 solution, 285 counterexamples)
[08/10 20:10:34]  Generator returned sat in 64.696304 secs.
[08/10 20:10:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:10:44]  Improved gap from 0 to 32.8125
[08/10 20:10:45]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 20:10:45]  Verifer returned sat in 9.536686 secs.
[08/10 20:10:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17581.549072  -17714.561523  2788.460938 -17581.549072  133.112500 -17714.561523    0.000000  133.012451       33.012939     9.0    -17714.561523            -1             -1     -1
1  -17581.549072  -17614.361816  2855.447998 -17581.549072  133.012451 -17614.361816    0.000000   32.812744        0.000000     9.0    -17581.549072         False           True  False
2  -17481.449219  -17481.549072  2855.447998 -17481.449219  132.912598 -17481.549072    0.000000    0.099854        0.099854     1.0    -17481.449219         False           True  False
3  -17381.449219  -17381.549072  2855.447998 -17381.449219  100.099854 -17381.549072    0.000000    0.099854        0.099854     1.0    -17381.449219         False          False  False
4  -17163.992920  -17281.949219  2855.447998 -17163.992920  217.556152 -17281.949219  117.356201    0.600098        0.199951     1.0    -17381.449219         False          False  False
5  -17163.992920  -17281.549072  2922.635498 -17163.992920    0.500000 -17281.549072  117.356201    0.199951      -32.612549     2.0    -17381.449219         False          False   True
6  -17064.442871  -17248.736572  2955.697998 -17064.442871   99.750000 -17248.736572  117.356201   66.937500        0.000000     1.0    -17381.449219         False          False   True
7  -17015.599121  -17181.699219  3006.854248 -17015.599121  115.781250 -17181.699219  117.356201   48.743896        0.000000     1.0    -17381.449219         False          False   True
8  -16956.827393  -17132.049072  3006.854492 -16956.827393  107.515625 -17132.049072  117.356201   57.865479      -41.228027     1.0    -17381.449219         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 20:10:45]  --------------------------------------------------------------------------------
[08/10 20:10:45]  Iteration: 287 (0 solution, 286 counterexamples)
[08/10 20:12:13]  Generator returned sat in 77.570551 secs.
[08/10 20:12:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:12:15]  Improved gap from 1/20 to 23.4375
[08/10 20:12:16]  Improved number of small numbers from 75 to 85 out of a max of 114
[08/10 20:12:16]  Verifer returned sat in 1.511779 secs.
[08/10 20:12:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17581.649170  -17705.386475  2972.825684 -17581.649170    0.100098 -17705.386475        0.0  123.737305       23.737588     9.0    -17705.386475            -1             -1     -1
1  -17581.549072  -17604.986572  3048.987998 -17581.549072  123.837402 -17604.986572        0.0   23.437500        0.000000     2.0    -17705.386475         False           True  False
2  -17481.249072  -17481.549072  3048.987998 -17481.249072  123.737500 -17481.549072        0.1    0.200000        0.200000     1.0    -17481.349072         False          False  False
3  -17378.649072  -17381.549072  3048.987998 -17378.649072  102.800000 -17381.549072        2.7    0.200000        0.200000     1.0    -17381.349072         False          False   True
4  -17277.049072  -17281.549072  3048.987998 -17277.049072  101.800000 -17281.549072        4.3    0.200000        0.200000     1.0    -17381.349072         False          False   True
5  -17176.449072  -17281.249023  3048.987998 -17176.449072  100.800000 -17281.249023        4.9   99.899951        0.200000     1.0    -17381.349072         False          False   True
6  -17176.449072  -17181.549072  3125.550498 -17176.449072   99.800000 -17181.549072        4.9    0.200000      -23.237500     2.0    -17381.349072         False          False   True
7  -17126.749072  -17158.111572  3199.087998 -17126.749072   49.900000 -17158.111572        4.9   26.462500        0.000000     1.0    -17381.349072         False          False   True
8  -17126.749072  -17131.649072  3275.650391 -17126.749072   24.950000 -17131.649072        4.9    0.000000      -23.437607     2.0    -17381.349072         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/5.[0m
[08/10 20:12:17]  --------------------------------------------------------------------------------
[08/10 20:12:17]  Iteration: 288 (0 solution, 287 counterexamples)
[08/10 20:13:57]  Generator returned sat in 89.727963 secs.
[08/10 20:13:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:13:59]  Improved gap from 0 to 23.4375
[08/10 20:14:00]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/10 20:14:00]  Verifer returned sat in 2.687384 secs.
[08/10 20:14:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17381.159180  -17581.358887  3048.988037 -17381.159180    0.099854 -17581.358887     0.0000  200.199707      100.199883     3.0    -17581.358887            -1             -1   False
1  -17381.159180  -17381.359131  3048.988037 -17381.159180    0.100000 -17381.359131     0.0000    0.199951        0.199883     4.0    -17581.358887         False          False   False
2  -17381.159180  -17381.359023  3125.550498 -17381.159180    0.100000 -17381.359023     0.0000    0.199844      -23.237656     4.0    -17581.358887         False          False   False
3  -16614.159023  -17357.921523  3125.550498 -16614.159023  767.200000 -17357.921523   643.4625  100.300000        0.300000     1.0    -17581.358887         False          False   False
4  -16331.859023  -17157.921523  3125.550498 -16331.859023  382.600000 -17157.921523   825.7625    0.300000        0.300000     1.0    -17581.358887         False          False    True
5  -16141.859023  -17151.871338  3125.550498 -16141.859023  190.300000 -17151.871338   915.7625   94.249814        0.300000     1.0    -17581.358887         False          False    True
6  -16141.859023  -17057.721523  3201.912998 -16141.859023   94.150000 -17057.721523   915.7625    0.100000      -23.337500     2.0    -17581.358887         False          False    True
7  -16094.884023  -17034.283936  3278.275498 -16094.884023   47.075000 -17034.283936   915.7625   23.637412        0.000000     1.0    -17581.358887         False          False    True
8  -16094.884023  -17010.646523  3278.275635 -16094.884023   23.537500 -17010.646523   915.7625    0.000000      -99.999863     2.0    -17581.358887         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=3/10.[0m
[08/10 20:14:01]  --------------------------------------------------------------------------------
[08/10 20:14:01]  Iteration: 289 (0 solution, 288 counterexamples)
[08/10 20:15:15]  Generator returned sat in 63.970828 secs.
[08/10 20:15:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:15:29]  Improved gap from 1/2400 to 43.75
[08/10 20:15:30]  Improved number of small numbers from 89 to 94 out of a max of 114
[08/10 20:15:30]  Verifer returned sat in 13.372796 secs.
[08/10 20:15:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16228.809326   -16422.90918  3109.525635 -16228.809326    0.050000 -16422.90918       0.00  194.099854      194.099854     5.0     -16422.90918            -1             -1     -1
1  -16228.809326   -16328.65918  3109.525635 -16228.809326    0.050049 -16328.65918       0.00   99.849854       94.099854     2.0     -16422.90918         False           True  False
2  -16079.059180   -16228.75918  3109.525635 -16079.059180  249.600000 -16228.75918       0.05  149.650000      143.800000     1.0     -16422.90918         False          False  False
3  -15979.109180   -16122.90918  3109.525635 -15979.109180  249.600000 -16122.90918       0.05  143.750000      143.750000     2.0     -16422.90918         False          False   True
4  -15979.109180   -16041.60918  3109.525635 -15979.109180  124.800000 -16041.60918       0.05   62.450000       43.750000     2.0     -16422.90918         False          False   True
5  -15979.109180   -16022.90918  3165.775635 -15979.109180   62.400000 -16022.90918       0.05   43.750000        0.000000     3.0     -16422.90918         False          False   True
6  -15979.109180   -15979.15918  3222.025635 -15979.109180   31.200000 -15979.15918       0.05    0.000000      -43.750000     4.0     -16422.90918         False          False   True
7  -15893.134180   -15935.40918  3278.275635 -15893.134180   85.975000 -15935.40918       0.05   42.225000       -1.525000     1.0     -15893.18418          True           True  False
8  -15840.771680   -15891.65918  3327.437988 -15840.771680   94.587500 -15891.65918       0.05   50.837500       -0.000146     1.0     -15893.18418         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=719/5.[0m
[08/10 20:15:30]  --------------------------------------------------------------------------------
[08/10 20:15:30]  Iteration: 290 (0 solution, 289 counterexamples)
[08/10 20:16:44]  Generator returned sat in 63.081248 secs.
[08/10 20:16:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:16:50]  Improved gap from 0 to 48.4375
[08/10 20:16:50]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 20:16:50]  Verifer returned sat in 5.370873 secs.
[08/10 20:16:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16753.531738  -17202.069092  3175.650391 -16753.531738    0.099854 -17202.069092   0.099854  448.437500      448.437500     3.0    -17202.069092            -1             -1     -1
1  -16753.531738  -17102.069092  3175.650391 -16753.531738    0.100000 -17102.069092   0.099854  348.437500      348.437500     3.0    -17202.069092         False          False   True
2  -16753.531738  -17002.069336  3175.650391 -16753.531738    0.100098 -17002.069336   0.099854  248.437744      248.437500     4.0    -17202.069092         False          False   True
3  -16753.531738  -16931.963135  3175.650391 -16753.531738  193.750000 -16931.963135   0.099854  178.331543      148.437500     5.0    -17202.069092         False          False   True
4  -16753.531738  -16802.168945  3175.650391 -16753.531738   96.875000 -16802.168945   0.099854   48.537354       48.437500     6.0    -17202.069092         False          False   True
5  -16753.531738  -16802.069092  3227.212891 -16753.531738   48.437500 -16802.069092   0.099854   48.437500        0.000000     7.0    -17202.069092         False          False   True
6  -16753.531738  -16753.631592  3278.775391 -16753.531738   24.218750 -16753.631592   0.099854    0.000000      -48.437500     8.0    -17202.069092         False          False   True
7  -16653.756592  -16705.194092  3327.437744 -16653.756592   99.775146 -16705.194092   0.099854   51.337646        0.000000     1.0    -16653.856445          True           True  False
8  -16608.219238  -16653.756836  3327.437744 -16608.219238   96.875000 -16653.756836   0.099854   45.437744      -54.462646     1.0    -16653.856445         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/10 20:16:51]  --------------------------------------------------------------------------------
[08/10 20:16:51]  Iteration: 291 (0 solution, 290 counterexamples)
[08/10 20:18:54]  Generator returned sat in 112.009473 secs.
[08/10 20:18:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:18:56]  Improved gap from 3687/8192 to 23.4375
[08/10 20:18:58]  Improved number of small numbers from 68 to 85 out of a max of 114
[08/10 20:18:58]  Verifer returned sat in 3.011571 secs.
[08/10 20:18:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17203.636719  -17203.736816  3175.650391 -17203.636719    0.300049 -17203.736816        0.0   0.100098        0.100020     2.0    -17203.736816            -1             -1   False
1  -17203.436768  -17203.736572  3175.650391 -17203.436768    0.300049 -17203.736572        0.0   0.299805      -99.700029     3.0    -17203.736816         False          False   False
2  -17007.636719  -17007.736738  3175.650391 -17007.636719  196.099854 -17007.736738        0.0   0.100020       -3.899980     1.0    -17203.736816         False          False   False
3  -16903.436738  -16903.736738  3175.650391 -16903.436738  104.300000 -16903.736738        0.1   0.200000        0.200000     1.0    -16903.536738         False          False   False
4  -16800.836738  -16803.736738  3175.650391 -16800.836738  102.800000 -16803.736738        2.7   0.200000        0.200000     1.0    -16903.536738         False          False    True
5  -16699.736738  -16803.436768  3175.650391 -16699.736738  101.300000 -16803.436768        3.8  99.900029        0.200000     1.0    -16903.536738         False          False    True
6  -16699.736738  -16703.736738  3252.212891 -16699.736738   99.800000 -16703.736738        3.8   0.200000      -23.237500     2.0    -16903.536738         False          False    True
7  -16650.036738  -16680.299072  3325.750391 -16650.036738   49.900000 -16680.299072        3.8  26.462334        0.000000     1.0    -16903.536738         False          False    True
8  -16650.036738  -16653.836738  3402.312744 -16650.036738   24.950000 -16653.836738        3.8   0.000000      -23.437646     2.0    -16903.536738         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/5.[0m
[08/10 20:18:58]  --------------------------------------------------------------------------------
[08/10 20:18:58]  Iteration: 292 (0 solution, 291 counterexamples)
[08/10 20:20:06]  Generator returned sat in 57.230239 secs.
[08/10 20:20:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:20:09]  Improved gap from 0 to 23.4375
[08/10 20:20:10]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 20:20:10]  Verifer returned sat in 2.575856 secs.
[08/10 20:20:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17234.306396  -17430.106328  3251.437744 -17234.306396    0.0500 -17430.106328       0.00  195.799932       95.799932     2.0    -17430.106328            -1             -1   False
1  -17229.956328  -17234.256328  3251.437744 -17229.956328  200.1500 -17234.256328       0.05    4.250000        0.100000     1.0    -17430.106328         False          False   False
2  -17130.006328  -17134.106328  3251.437744 -17130.006328  104.2000 -17134.106328       0.05    4.050000        0.050000     1.0    -17130.056328         False          False    True
3  -17029.906328  -17030.106328  3251.437744 -17029.906328  104.1500 -17030.106328       0.10    0.100000        0.100000     1.0    -17030.006328         False          False    True
4  -16927.856328  -16930.106328  3251.437744 -16927.856328  102.1500 -16930.106328       2.15    0.100000        0.100000     1.0    -17030.006328         False          False    True
5  -16827.806328  -16929.956299  3251.437744 -16827.806328  100.1500 -16929.956299       2.20   99.949971        0.100000     1.0    -17030.006328         False          False    True
6  -16827.806328  -16830.056328  3325.750244 -16827.806328   98.1500 -16830.056328       2.20    0.050000      -25.587500     2.0    -17030.006328         False          False    True
7  -16778.781328  -16804.418828  3402.312500 -16778.781328   49.0750 -16804.418828       2.20   23.437500       -0.000244     1.0    -17030.006328         False          False    True
8  -16777.681328  -16780.931152  3402.312500 -16777.681328   24.5375 -16780.931152       2.20    1.049824      -98.900244     1.0    -17030.006328         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/10 20:20:11]  --------------------------------------------------------------------------------
[08/10 20:20:11]  Iteration: 293 (0 solution, 292 counterexamples)
[08/10 20:24:25]  Generator returned sat in 243.573526 secs.
[08/10 20:24:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:24:28]  Improved gap from 1/1600 to 0
[08/10 20:24:29]  Improved number of small numbers from 66 to 85 out of a max of 114
[08/10 20:24:29]  Verifer returned sat in 2.962564 secs.
[08/10 20:24:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -17225.827393  -17225.828125  3251.437744 -17225.827393  0.002686 -17225.828125        0.0  0.000732       -0.000439     2.0    -17225.828125            -1             -1   False
1  -17225.826416  -17225.826953  3351.425293 -17225.826416  0.001709 -17225.826953        0.0  0.000537       -0.011914     1.0    -17225.826416         False          False   False
2  -17225.318203  -17225.814453  3450.928467 -17225.318203  0.508750 -17225.814453        0.0  0.496250       -0.000527     1.0    -17225.826416         False          False   False
3  -17225.306328  -17225.317627  3550.917119 -17225.306328  0.508125 -17225.317627        0.0  0.011299        0.000000     1.0    -17225.306328         False          False   False
4  -17225.306328  -17225.306328  3650.916992 -17225.306328  0.010498 -17225.306328        0.0  0.000000       -0.000127     2.0    -17225.306328         False          False   False
5  -17225.285703  -17225.305908  3750.896494 -17225.285703  0.020625 -17225.305908        0.0  0.020205        0.000000     1.0    -17225.306328         False          False   False
6  -17225.285703  -17225.285703  3850.896484 -17225.285703  0.010000 -17225.285703        0.0  0.000000       -0.000010     2.0    -17225.306328         False          False   False
7  -17225.275703  -17225.276328  3950.886475 -17225.275703  0.010000 -17225.276328        0.0  0.000625       -0.000020     1.0    -17225.306328         False          False   False
8  -17225.266328  -17225.266357  3950.886719 -17225.266328  0.010000 -17225.266357        0.0  0.000029      -99.990400     1.0    -17225.306328         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/10 20:24:30]  --------------------------------------------------------------------------------
[08/10 20:24:30]  Iteration: 294 (0 solution, 293 counterexamples)
[08/10 20:26:58]  Generator returned sat in 137.939223 secs.
[08/10 20:26:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:27:07]  Improved gap from 0 to 32.8125
[08/10 20:27:07]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 20:27:07]  Verifer returned sat in 8.049870 secs.
[08/10 20:27:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -20551.785889  -20551.885742  7127.556641 -20551.785889   93.449951 -20551.885742   0.000000   0.099854      -93.250244     2.0    -20551.885742            -1             -1    True
1  -20458.435791  -20458.535645  7127.556641 -20458.435791   93.449951 -20458.535645   0.000000   0.099854      -99.900146     1.0    -20551.885742         False          False    True
2  -20225.923096  -20258.535889  7127.556641 -20225.923096  232.612549 -20258.535889   0.000000  32.612793       32.612549     1.0    -20551.885742         False          False    True
3  -20225.923096  -20252.148193  7188.356689 -20225.923096   32.512451 -20252.148193   0.000000  26.225098       -6.587402     2.0    -20225.923096         False          False    True
4  -20086.523193  -20119.335693  7188.356689 -20086.523193  165.625000 -20119.335693   0.100098  32.712402       32.712402     1.0    -20225.923096         False          False    True
5  -20086.523193  -20119.335693  7255.544189 -20086.523193    0.500000 -20119.335693   0.100098  32.712402       -0.100098     1.0    -20225.923096         False          False    True
6  -20049.885498  -20086.523193  7319.006348 -20049.885498   69.350098 -20086.523193   0.100098  36.537598       -0.000244     1.0    -20225.923096         False          False    True
7  -19969.435547  -20049.885742  7338.456543 -19969.435547  116.987549 -20049.885742   0.100098  80.350098       -0.100098     1.0    -20225.923096         False          False    True
8  -19957.066895  -19969.435547  7338.456543 -19957.066895   92.718750 -19969.435547   0.100098  12.268555      -87.731445     1.0    -20225.923096         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=66995/2048.[0m
[08/10 20:27:08]  --------------------------------------------------------------------------------
[08/10 20:27:08]  Iteration: 295 (0 solution, 294 counterexamples)
[08/10 20:28:48]  Generator returned sat in 88.759637 secs.
[08/10 20:28:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:28:52]  Improved gap from 1/1200 to 32.8125
[08/10 20:28:53]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 20:28:53]  Verifer returned sat in 4.120231 secs.
[08/10 20:28:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -20430.875488  -20604.600586  7121.068848 -20430.875488    0.100098 -20604.600586   0.100098  173.625000      101.900146     8.0    -20604.600586            -1             -1     -1
1  -20430.875488  -20432.875732  7121.068848 -20430.875488    0.100098 -20432.875732   0.100098    1.900146        1.900146     3.0    -20604.600586         False           True   True
2  -20332.675537  -20340.363037  7121.068848 -20332.675537  100.100098 -20340.363037   0.100098    7.587402        0.100098     1.0    -20604.600586         False          False   True
3  -20332.675537  -20332.875732  7188.256348 -20332.675537    0.099854 -20332.875732   0.100098    0.100098      -32.712402     2.0    -20332.775635         False          False   True
4  -20197.863281  -20200.163086  7188.256348 -20197.863281  134.912354 -20200.163086   0.200195    2.099609        1.999756     1.0    -20332.775635         False          False   True
5  -20197.863281  -20200.063232  7255.443848 -20197.863281    2.000000 -20200.063232   0.200195    1.999756      -30.812744     2.0    -20332.775635         False          False   True
6  -20129.713135  -20167.250732  7318.106445 -20129.713135   70.149902 -20167.250732   0.200195   37.337402        0.000000     1.0    -20332.775635         False          False   True
7  -20050.163086  -20129.813232  7338.456299 -20050.163086  116.887451 -20129.813232   0.200195   79.449951       -0.100098     1.0    -20332.775635         False          False   True
8  -20036.994385  -20050.263184  7338.456299 -20036.994385   92.618652 -20050.263184   0.200195   13.068604      -86.931396     1.0    -20332.775635         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=8191/4096.[0m
[08/10 20:28:53]  --------------------------------------------------------------------------------
[08/10 20:28:53]  Iteration: 296 (0 solution, 295 counterexamples)
[08/10 20:31:18]  Generator returned sat in 134.004517 secs.
[08/10 20:31:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:31:31]  Improved gap from 1/10 to 35.9375
[08/10 20:31:33]  Improved number of small numbers from 64 to 77 out of a max of 114
[08/10 20:31:33]  Verifer returned sat in 13.814352 secs.
[08/10 20:31:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22810.185547  -22978.296599  7188.256348 -22810.185547    0.100098 -22978.296599        0.0  168.111053      168.111053     4.0    -22978.296599            -1             -1     -1
1  -22710.185488  -22978.296387  7188.256348 -22710.185488  268.111111 -22978.296387      100.0  168.110898       68.111111     5.0    -22978.296599         False           True  False
2  -22610.285400  -22778.296599  7188.256348 -22610.285400  268.010986 -22778.296599      100.0   68.011199       68.011199     1.0    -22710.285400          True           True   True
3  -22410.385488  -22678.296599  7188.256348 -22410.385488  267.911111 -22678.296599      199.8   68.111111       68.111111     1.0    -22610.185488         False          False   True
4  -22342.541044  -22609.418822  7188.256348 -22342.541044  135.955556 -22609.418822      199.8   67.077778       35.955556     1.0    -22610.185488         False          False   True
5  -22342.541044  -22578.278564  7252.300792 -22342.541044   66.977778 -22578.278564      199.8   35.937521        0.000000     2.0    -22610.185488         False          False   True
6  -22342.541044  -22542.341044  7316.363292 -22342.541044   32.488889 -22542.341044      199.8    0.000000      -35.937500     3.0    -22610.185488         False          False   True
7  -22259.818822  -22506.403544  7369.478760 -22259.818822   82.722222 -22506.403544      199.8   46.784722       -0.099810     1.0    -22459.618822          True           True  False
8  -22215.234794  -22459.518799  7369.478760 -22215.234794   91.368750 -22459.518799      199.8   44.484005      -55.515782     1.0    -22459.618822         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=613/9.[0m
[08/10 20:31:34]  --------------------------------------------------------------------------------
[08/10 20:31:34]  Iteration: 297 (0 solution, 296 counterexamples)
[08/10 20:34:18]  Generator returned sat in 152.952219 secs.
[08/10 20:34:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:34:21]  Improved gap from 1/20 to 12.5
[08/10 20:34:22]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 20:34:22]  Verifer returned sat in 2.661474 secs.
[08/10 20:34:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -22772.341064  -22972.440918  7188.256348 -22772.341064  199.999756 -22972.440918        0.0  200.099854      100.100098     2.0    -22972.440918            -1             -1   False
1  -22772.341064  -22772.541260  7188.256348 -22772.341064  200.000000 -22772.541260        0.0    0.200195        0.100098     2.0    -22972.440918         False          False   False
2  -22772.341064  -22772.441162  7188.256348 -22772.341064    0.100098 -22772.441162        0.0    0.100098      -99.899902     3.0    -22772.341064         False          False   False
3  -22342.441162  -22572.441162  7188.256348 -22342.441162  430.000000 -22572.441162        0.0  230.000000      230.000000     1.0    -22772.341064         False          False   False
4  -22342.441162  -22472.441162  7188.256348 -22342.441162  214.000000 -22472.441162        0.0  130.000000      130.000000     2.0    -22772.341064         False          False   False
5  -22342.441162  -22394.541016  7188.256348 -22342.441162  106.000000 -22394.541016        0.0   52.099854       30.000000     3.0    -22772.341064         False          False   False
6  -22342.441162  -22347.541016  7250.856201 -22342.441162   52.000000 -22347.541016        0.0    5.099854       -7.400146     4.0    -22772.341064         False          False   False
7  -22322.541016  -22335.041016  7338.356201 -22322.541016   25.000000 -22335.041016        0.0   12.500000        0.000000     1.0    -22772.341064         False          False   False
8  -22322.541016  -22322.541016  7425.856201 -22322.541016   11.500000 -22322.541016        0.0    0.000000      -12.500000     2.0    -22772.341064         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=471245/2048.[0m
[08/10 20:34:22]  --------------------------------------------------------------------------------
[08/10 20:34:22]  Iteration: 298 (0 solution, 297 counterexamples)
[08/10 20:38:23]  Generator returned sat in 229.180371 secs.
[08/10 20:38:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:38:34]  Improved gap from 0 to 43.75
[08/10 20:38:35]  Improved number of small numbers from 96 to 98 out of a max of 114
[08/10 20:38:35]  Verifer returned sat in 11.108231 secs.
[08/10 20:38:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -22772.466064  -22872.441406  7188.256104 -22772.466064    0.025146 -22872.441406      0.000   99.975342       99.975098     2.0    -22872.441406            -1             -1   False
1  -22682.441406  -22772.441406  7188.256104 -22682.441406  190.000000 -22772.441406      0.000   90.000000       89.999756     1.0    -22872.441406         False          False   False
2  -22682.441406  -22682.466162  7188.256104 -22682.441406    0.025146 -22682.466162      0.000    0.024756      -10.000244     2.0    -22682.441406         False          False   False
3  -22428.666162  -22573.416162  7188.256104 -22428.666162  253.800000 -22573.416162      0.025  144.725000      143.750000     1.0    -22682.441406         False          False   False
4  -22428.666162  -22491.166162  7188.256104 -22428.666162  126.900000 -22491.166162      0.025   62.475000       43.750000     2.0    -22682.441406         False          False    True
5  -22428.666162  -22472.441162  7244.506104 -22428.666162   62.450000 -22472.441162      0.025   43.750000        0.000000     3.0    -22682.441406         False          False    True
6  -22428.666162  -22428.691162  7300.756104 -22428.666162   30.225000 -22428.691162      0.025    0.000000      -43.750000     4.0    -22682.441406         False          False    True
7  -22341.191162  -22384.941162  7357.006104 -22341.191162   87.475000 -22384.941162      0.025   43.725000       -0.025000     1.0    -22341.216162          True           True   False
8  -22288.066162  -22341.191162  7357.006348 -22288.066162   96.850000 -22341.191162      0.025   53.100000      -46.899756     1.0    -22341.216162         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=575/4.[0m
[08/10 20:38:36]  --------------------------------------------------------------------------------
[08/10 20:38:36]  Iteration: 299 (0 solution, 298 counterexamples)
[08/10 20:40:36]  Generator returned sat in 108.952779 secs.
[08/10 20:40:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:40:48]  Improved gap from 0 to 43.75
[08/10 20:40:49]  Improved number of small numbers from 63 to 78 out of a max of 114
[08/10 20:40:49]  Verifer returned sat in 11.743228 secs.
[08/10 20:40:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -18514.481201  -18568.101074  7188.276348 -18514.481201    0.050000 -18568.101074       0.00   53.619873       -0.050039     3.0    -18568.101074            -1             -1   False
1  -18314.481201  -18514.431152  7188.276348 -18314.481201  253.619873 -18514.431152       0.00  199.949951       99.949961     1.0    -18568.101074         False          False   False
2  -18260.861084  -18314.431162  7188.276348 -18260.861084  253.570068 -18314.431162       0.00   53.570078       53.570078     1.0    -18260.861084         False          False   False
3  -18060.911162  -18214.431162  7188.276348 -18060.911162  253.520000 -18214.431162       9.77  143.750000      143.750000     1.0    -18070.681162         False          False   False
4  -18060.911162  -18133.111162  7188.276348 -18060.911162  126.760000 -18133.111162       9.77   62.430000       43.750000     2.0    -18070.681162         False          False    True
5  -18060.911162  -18114.431162  7244.526348 -18060.911162   62.380000 -18114.431162       9.77   43.750000        0.000000     3.0    -18070.681162         False          False    True
6  -18060.911162  -18070.681162  7300.776348 -18060.911162   30.190000 -18070.681162       9.77    0.000000      -43.750000     4.0    -18070.681162         False          False    True
7  -17973.441162  -18026.931162  7357.006348 -17973.441162   87.470000 -18026.931162       9.77   43.720000       -0.050000     1.0    -18070.681162         False           True   False
8  -17919.836162  -17983.161133  7357.006348 -17919.836162   97.325000 -17983.161133       9.77   53.554971      -46.445000     1.0    -18070.681162         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=575/4.[0m
[08/10 20:40:50]  --------------------------------------------------------------------------------
[08/10 20:40:50]  Iteration: 300 (0 solution, 299 counterexamples)
[08/10 20:41:58]  Generator returned sat in 56.728222 secs.
[08/10 20:41:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:42:14]  Improved gap from 0 to 34.375
[08/10 20:42:15]  Improved number of small numbers from 59 to 82 out of a max of 114
[08/10 20:42:15]  Verifer returned sat in 16.632946 secs.
[08/10 20:42:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -19997.406006  -20097.386475  6353.567852 -19997.406006    0.019531 -20097.386475   0.000000  99.980469       99.980463     9.0    -20097.386475            -1             -1     -1
1  -19929.240234  -19997.386475  6353.567852 -19929.240234  168.146240 -19997.386475   0.000000  68.146240       68.146234     1.0    -20097.386475         False           True  False
2  -19929.240234  -19997.386469  6353.567852 -19929.240234    0.019287 -19997.386469   0.000000  68.146234      -31.853766     2.0    -19929.240234         False          False  False
3  -19728.567024  -19797.386469  6353.567852 -19728.567024  268.819444 -19797.386469   0.653646  68.165799       68.165799     1.0    -19929.240234         False          False  False
4  -19662.323100  -19729.201139  6353.567852 -19662.323100  134.409722 -19729.201139   0.653646  66.224392       34.409722     1.0    -19929.240234         False          False   True
5  -19662.323100  -19697.386230  6419.158129 -19662.323100   66.204861 -19697.386230   0.653646  34.409484        0.000000     2.0    -19929.240234         False          False   True
6  -19662.323100  -19662.976746  6484.783129 -19662.323100   32.102431 -19662.976746   0.653646   0.000000      -34.375000     3.0    -19929.240234         False          False   True
7  -19578.567024  -19628.601746  6535.401855 -19578.567024   83.756076 -19628.601746   0.653646  49.381076       -0.000197     1.0    -19579.220670          True           True  False
8  -19535.270366  -19579.220459  6535.401855 -19535.270366   92.677734 -19579.220459   0.653646  43.296447      -56.703539     1.0    -19579.220670         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=78527/1152.[0m
[08/10 20:42:16]  --------------------------------------------------------------------------------
[08/10 20:42:16]  Iteration: 301 (0 solution, 300 counterexamples)
[08/10 20:44:22]  Generator returned sat in 115.540823 secs.
[08/10 20:44:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:44:28]  Improved gap from 0 to 48.4375
[08/10 20:44:29]  Improved number of small numbers from 59 to 76 out of a max of 114
[08/10 20:44:29]  Verifer returned sat in 5.963883 secs.
[08/10 20:44:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -19648.948969  -20197.386230  6353.567852 -19648.948969    0.100098 -20197.386230        0.0  548.437262      448.437500     5.0    -20197.386230            -1             -1    True
1  -19648.948969  -19997.386475  6353.567852 -19648.948969    0.100098 -19997.386475        0.0  348.437506      348.437500     3.0    -20197.386230         False          False    True
2  -19648.948969  -19997.386230  6353.567852 -19648.948969    0.100098 -19997.386230        0.0  348.437262      248.437500     4.0    -20197.386230         False          False    True
3  -19648.948969  -19797.386469  6353.567852 -19648.948969  186.606667 -19797.386469        0.0  148.437500      148.437500     5.0    -20197.386230         False          False    True
4  -19648.948969  -19697.486469  6353.567852 -19648.948969   91.303333 -19697.486469        0.0   48.537500       48.437500     6.0    -20197.386230         False          False    True
5  -19648.948969  -19697.386469  6405.130352 -19648.948969   43.651667 -19697.386469        0.0   48.437500        0.000000     7.0    -20197.386230         False          False    True
6  -19648.948969  -19648.948969  6456.692852 -19648.948969   19.825833 -19648.948969        0.0    0.000000      -48.437500     8.0    -20197.386230         False          False    True
7  -19564.317302  -19600.511469  6503.767822 -19564.317302   84.631667 -19600.511469        0.0   36.194167      -16.730863     1.0    -19564.317302          True           True   False
8  -19509.208135  -19547.586426  6503.768066 -19509.208135   91.303333 -19547.586426        0.0   38.378291      -61.621452     1.0    -19564.317302         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/10 20:44:30]  --------------------------------------------------------------------------------
[08/10 20:44:30]  Iteration: 302 (0 solution, 301 counterexamples)
[08/10 20:47:49]  Generator returned sat in 187.904151 secs.
[08/10 20:47:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:47:57]  Improved gap from 1/10 to 23.4375
[08/10 20:47:57]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/10 20:47:57]  Verifer returned sat in 6.968409 secs.
[08/10 20:47:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -19564.317383  -19840.979736  5997.161133 -19564.317383    0.100098 -19840.979736   0.000000  276.662354      176.662354     3.0    -19840.979736            -1             -1   False
1  -19564.317383  -19740.979736  5997.161133 -19564.317383    0.200000 -19740.979736   0.000000  176.662354       76.662354     3.0    -19840.979736         False          False   False
2  -19564.317383  -19564.417480  5997.161133 -19564.317383    0.100000 -19564.417480   0.000000    0.100098      -23.337646     3.0    -19564.317383         False          False   False
3  -19217.442383  -19540.979736  5997.161133 -19217.442383  346.975098 -19540.979736   0.099854  323.437500      223.437500     1.0    -19564.317383         False          False   False
4  -19217.442383  -19340.979736  5997.161133 -19217.442383  175.487549 -19340.979736   0.099854  123.437500      123.437500     2.0    -19564.317383         False          False    True
5  -19217.442383  -19241.080078  5997.161133 -19217.442383    2.000000 -19241.080078   0.099854   23.537842       23.437500     3.0    -19564.317383         False          False    True
6  -19217.442383  -19240.979736  6073.723633 -19217.442383    2.000000 -19240.979736   0.099854   23.437500        0.000000     4.0    -19564.317383         False          False    True
7  -19217.442383  -19217.542236  6150.286133 -19217.442383    2.000000 -19217.542236   0.099854    0.000000      -23.437500     5.0    -19564.317383         False          False    True
8  -19153.723633  -19194.104736  6150.286133 -19153.723633   63.718750 -19194.104736   0.099854   40.281250      -59.718750     1.0    -19153.823486          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 20:47:58]  --------------------------------------------------------------------------------
[08/10 20:47:58]  Iteration: 303 (0 solution, 302 counterexamples)
[08/10 20:54:12]  Generator returned sat in 363.093489 secs.
[08/10 20:54:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:54:15]  Improved gap from 0 to 12.5
[08/10 20:54:16]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 20:54:16]  Verifer returned sat in 2.836653 secs.
[08/10 20:54:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21233.734863  -21748.734619  7523.006104 -21233.734863    0.099854 -21748.734619   0.000000  514.999756      414.999756     9.0    -21748.734619            -1             -1     -1
1  -21233.734863  -21548.834717  7523.006104 -21233.734863    0.100098 -21548.834717   0.000000  315.099854      314.999756     9.0    -21748.734619         False           True  False
2  -21133.534668  -21548.734619  7523.006104 -21133.534668  415.300049 -21548.734619   0.100098  415.099854      315.099854     9.0    -21748.734619          True           True  False
3  -21133.534668  -21448.734619  7523.006104 -21133.534668  415.000000 -21448.734619   0.100098  315.099854      215.099854     9.0    -21133.634766          True           True   True
4  -21133.534668  -21248.734863  7523.006104 -21133.534668  207.000000 -21248.734863   0.100098  115.100098      115.099854     7.0    -21133.634766         False           True  False
5  -21133.534668  -21233.734863  7523.006104 -21133.534668  103.000000 -21233.734863   0.100098  100.100098       15.099854     8.0    -21133.634766         False          False  False
6  -21133.534668  -21146.034668  7607.806152 -21133.534668   51.000000 -21146.034668   0.100098   12.399902       -0.100098     5.0    -21133.634766         False           True  False
7  -21120.934570  -21133.534668  7695.306152 -21120.934570   25.000000 -21133.534668   0.100098   12.500000        0.000000     1.0    -21133.634766         False          False  False
8  -21120.934570  -21121.034668  7695.306152 -21120.934570   12.000000 -21121.034668   0.100098    0.000000     -100.000000     2.0    -21133.634766         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1290649/4096.[0m
[08/10 20:54:16]  --------------------------------------------------------------------------------
[08/10 20:54:16]  Iteration: 304 (0 solution, 303 counterexamples)
[08/10 20:55:32]  Generator returned sat in 64.670306 secs.
[08/10 20:55:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:55:34]  Improved gap from 1/20 to 0
[08/10 20:55:34]  Improved number of small numbers from 80 to 114 out of a max of 114
[08/10 20:55:34]  Verifer returned sat in 0.635118 secs.
[08/10 20:55:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21147.534668  -21648.834717  7409.306396 -21147.534668  0.200195 -21648.834717   0.099854  501.200195      401.200195     9.0    -21648.834717            -1             -1     -1
1  -21147.534668  -21548.834717  7409.306396 -21147.534668  0.200195 -21548.834717   0.099854  401.200195      301.200195     5.0    -21648.834717         False           True   True
2  -21147.534668  -21448.834717  7409.306396 -21147.534668  0.099854 -21448.834717   0.099854  301.200195      201.200195     5.0    -21147.634521         False          False   True
3  -21147.534668  -21348.834717  7409.306396 -21147.534668  0.100000 -21348.834717   0.099854  201.200195      101.200195     6.0    -21147.634521         False          False   True
4  -21147.534668  -21148.834961  7409.306396 -21147.534668  1.000000 -21148.834961   0.099854    1.200439        1.200195     7.0    -21147.634521         False          False   True
5  -21147.534668  -21148.734863  7508.106201 -21147.534668  1.000000 -21148.734863   0.099854    1.100342        0.000000     8.0    -21147.634521         False          False   True
6  -21147.534668  -21147.634521  7608.106201 -21147.534668  1.000000 -21147.634521   0.099854    0.000000        0.000000     9.0    -21147.634521         False          False   True
7  -21147.034668  -21147.534668  7707.506348 -21147.034668  0.500000 -21147.534668   0.099854    0.400146       -0.099854     1.0    -21147.634521         False           True  False
8  -21146.934814  -21147.034668  7807.506104 -21146.934814  0.500000 -21147.034668   0.099854    0.000000       -0.000244     1.0    -21147.634521         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=308429/1024.[0m
[08/10 20:55:35]  --------------------------------------------------------------------------------
[08/10 20:55:35]  Iteration: 305 (0 solution, 304 counterexamples)
[08/10 20:58:17]  Generator returned sat in 151.150313 secs.
[08/10 20:58:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:58:20]  Improved gap from 1/800 to 0
[08/10 20:58:20]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 20:58:20]  Verifer returned sat in 2.237083 secs.
[08/10 20:58:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21048.784912  -21048.934814  6909.406250 -21048.784912  0.250000 -21048.934814   0.050049  0.099854        0.099609     9.0    -21048.934814            -1             -1     -1
1  -21048.684570  -21048.784668  7009.206299 -21048.684570  0.200195 -21048.784668   0.050049  0.050049        0.000000     1.0    -21048.734619         False           True   True
2  -21048.584717  -21048.684814  7109.056396 -21048.584717  0.149902 -21048.684814   0.050049  0.050049       -0.050049     1.0    -21048.634766         False          False   True
3  -21048.484863  -21048.584717  7208.056396 -21048.484863  0.149902 -21048.584717   0.050049  0.049805       -0.950195     1.0    -21048.634766         False          False   True
4  -21047.534668  -21047.584717  7308.056396 -21047.534668  1.000000 -21047.584717   0.050049  0.000000        0.000000     1.0    -21048.634766         False          False   True
5  -21046.534668  -21047.584717  7407.056396 -21046.534668  1.000000 -21047.584717   0.050049  1.000000        0.000000     1.0    -21048.634766         False          False   True
6  -21046.534668  -21046.584717  7507.056396 -21046.534668  1.000000 -21046.584717   0.050049  0.000000        0.000000     2.0    -21048.634766         False          False   True
7  -21045.534668  -21046.584717  7606.056396 -21045.534668  1.000000 -21046.584717   0.050049  1.000000        0.000000     2.0    -21048.634766         False          False   True
8  -21045.534668  -21045.584717  7606.056396 -21045.534668  1.000000 -21045.584717   0.050049  0.000000     -100.000000     2.0    -21048.634766         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=205/2048.[0m
[08/10 20:58:21]  --------------------------------------------------------------------------------
[08/10 20:58:21]  Iteration: 306 (0 solution, 305 counterexamples)
[08/10 21:02:00]  Generator returned sat in 207.574032 secs.
[08/10 21:02:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:02:11]  Improved gap from 0 to 34.375
[08/10 21:02:12]  Improved number of small numbers from 66 to 78 out of a max of 114
[08/10 21:02:12]  Verifer returned sat in 10.450675 secs.
[08/10 21:02:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21682.226318  -21816.646973  7009.206299 -21682.226318    0.045410 -21816.646973   0.000000  134.420654      134.284643     7.0    -21816.646973            -1             -1     -1
1  -21682.181396  -21716.510961  7009.206299 -21682.181396  134.465576 -21716.510961   0.000000   34.329565       34.329565     2.0    -21816.646973         False           True  False
2  -21582.090702  -21716.510961  7009.206299 -21582.090702  134.420259 -21716.510961   0.045259  134.375000       34.375000     2.0    -21582.135961         False          False  False
3  -21445.625185  -21516.510961  7009.206299 -21445.625185  270.840517 -21516.510961  36.510776   34.375000       34.375000     1.0    -21582.135961         False          False   True
4  -21345.579927  -21448.555412  7009.206299 -21345.579927  134.420259 -21448.555412  36.556034   66.419450       34.375000     1.0    -21582.135961         False          False   True
5  -21345.579927  -21416.510961  7074.831299 -21345.579927   66.210129 -21416.510961  36.556034   34.375000        0.000000     2.0    -21582.135961         False          False   True
6  -21345.579927  -21382.135961  7140.456299 -21345.579927   32.605065 -21382.135961  36.556034    0.000000      -34.375000     3.0    -21582.135961         False          False   True
7  -21262.089894  -21347.760961  7191.341064 -21262.089894   83.490032 -21347.760961  36.556034   49.115032       -0.000202     1.0    -21298.645929          True           True  False
8  -21219.062685  -21298.600586  7191.341309 -21219.062685   92.142241 -21298.600586  36.556034   42.981866      -56.972749     1.0    -21298.645929         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=275/8.[0m
[08/10 21:02:13]  --------------------------------------------------------------------------------
[08/10 21:02:13]  Iteration: 307 (0 solution, 306 counterexamples)
[08/10 21:04:15]  Generator returned sat in 111.426080 secs.
[08/10 21:04:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:04:19]  Improved gap from 1/1200 to 23.4375
[08/10 21:04:19]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 21:04:19]  Verifer returned sat in 2.638190 secs.
[08/10 21:04:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21669.017334  -21769.117432  7009.206299 -21669.017334    0.199951 -21769.117432   0.000000  100.100098      100.099854     9.0    -21769.117432            -1             -1     -1
1  -21669.017334  -21669.117188  7009.206299 -21669.017334    0.099854 -21669.117188   0.000000    0.099854        0.099854     2.0    -21669.017334         False           True  False
2  -21345.579834  -21669.117188  7009.206299 -21345.579834  323.537354 -21669.117188   0.099854  323.437500      223.437500     2.0    -21669.017334         False          False  False
3  -21345.579834  -21469.117188  7009.206299 -21345.579834  108.450000 -21469.117188   0.099854  123.437500      123.437500     2.0    -21345.679688         False          False   True
4  -21345.579834  -21372.142334  7009.206299 -21345.579834   53.725000 -21372.142334   0.099854   26.462646       23.437500     3.0    -21345.679688         False          False   True
5  -21345.579834  -21369.117188  7085.768799 -21345.579834   26.362500 -21369.117188   0.099854   23.437500        0.000000     4.0    -21345.679688         False          False   True
6  -21345.579834  -21345.679688  7162.331299 -21345.579834   12.681250 -21345.679688   0.099854    0.000000      -23.437500     5.0    -21345.679688         False          False   True
7  -21222.142334  -21322.242188  7162.331299 -21222.142334  123.437500 -21322.242188   0.099854  100.000000        0.000000     1.0    -21345.679688         False           True  False
8  -21222.142334  -21222.242188  7238.893799 -21222.142334   49.900146 -21222.242188   0.099854    0.000000      -23.437500     2.0    -21345.679688         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 21:04:20]  --------------------------------------------------------------------------------
[08/10 21:04:20]  Iteration: 308 (0 solution, 307 counterexamples)
[08/10 21:05:39]  Generator returned sat in 68.396097 secs.
[08/10 21:05:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:05:43]  Improved gap from 9/800 to 23.4375
[08/10 21:05:43]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 21:05:43]  Verifer returned sat in 2.273053 secs.
[08/10 21:05:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -21576.752197  -21700.189941  7132.683838 -21576.752197  123.387695 -21700.189941    0.000000  123.437744      123.437744     5.0    -21700.189941            -1             -1   False
1  -21576.752197  -21700.139893  7132.683838 -21576.752197  123.337500 -21700.139893    0.000000  123.387695       23.437744     4.0    -21576.752197         False          False   False
2  -21576.752197  -21600.189941  7209.246094 -21576.752197  123.337646 -21600.189941    0.000000   23.437744        0.000000     3.0    -21576.752197         False          False   False
3  -20821.189941  -21576.752197  7209.246094 -20821.189941  779.000000 -21576.752197  632.074951  123.487305       23.487305     4.0    -21576.752197         False          False   False
4  -20556.677246  -21376.752441  7209.246094 -20556.677246  388.000000 -21376.752441  796.587646   23.487549       23.487305     1.0    -21576.752197         False          False    True
5  -20387.664795  -21348.064941  7209.246094 -20387.664795  192.500000 -21348.064941  865.600098   94.800049       23.487305     1.0    -21576.752197         False          False    True
6  -20387.664795  -21276.652344  7285.708740 -20387.664795   94.750000 -21276.652344  865.600098   23.387451       -0.050049     2.0    -21576.752197         False          False    True
7  -20364.177246  -21253.214844  7362.271240 -20364.177246   46.875000 -21253.214844  865.600098   23.437500        0.000000     1.0    -21576.752197         False          False    True
8  -20364.177246  -21229.777344  7438.833740 -20364.177246   22.937500 -21229.777344  865.600098    0.000000      -23.437500     2.0    -21576.752197         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=24051/1024.[0m
[08/10 21:05:44]  --------------------------------------------------------------------------------
[08/10 21:05:44]  Iteration: 309 (0 solution, 308 counterexamples)
[08/10 21:09:35]  Generator returned sat in 220.897540 secs.
[08/10 21:09:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:09:38]  Improved gap from 1/10 to 23.4375
[08/10 21:09:38]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 21:09:38]  Verifer returned sat in 1.737278 secs.
[08/10 21:09:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21362.064941  -21362.264893  7135.608887 -21362.064941  123.387451 -21362.264893    0.000000    0.199951        0.100098     6.0    -21362.264893            -1             -1     -1
1  -21362.064941  -21362.164795  7212.171143 -21362.064941    0.099854 -21362.164795    0.000000    0.099854      -23.337646     4.0    -21362.064941         False           True  False
2  -21238.727295  -21262.165039  7212.171143 -21238.727295  123.437500 -21262.165039    0.000000   23.437744        0.000000     1.0    -21362.064941         False           True  False
3  -20819.089844  -21138.727295  7212.171143 -20819.089844  443.075195 -21138.727295  196.199951  123.437500      123.437500     1.0    -21362.064941         False          False  False
4  -20718.989746  -21038.727295  7212.171143 -20718.989746  223.537598 -21038.727295  196.300049  123.437500      123.437500     2.0    -21362.064941         False          False   True
5  -20718.989746  -21015.190186  7212.171143 -20718.989746  113.768799 -21015.190186  196.300049   99.900391       23.437500     2.0    -21362.064941         False          False   True
6  -20718.989746  -20938.727295  7288.733643 -20718.989746    2.000000 -20938.727295  196.300049   23.437500        0.000000     3.0    -21362.064941         False          False   True
7  -20718.989746  -20915.289795  7362.271240 -20718.989746    2.000000 -20915.289795  196.300049    0.000000      -26.462402     4.0    -21362.064941         False          False   True
8  -20595.552246  -20888.827393  7362.271240 -20595.552246  123.437500 -20888.827393  196.300049   96.975098       -3.024902     1.0    -20791.852295          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 21:09:39]  --------------------------------------------------------------------------------
[08/10 21:09:39]  Iteration: 310 (0 solution, 309 counterexamples)
[08/10 21:11:35]  Generator returned sat in 105.631713 secs.
[08/10 21:11:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:11:39]  Improved gap from 0 to 14.0625
[08/10 21:11:40]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 21:11:40]  Verifer returned sat in 3.363513 secs.
[08/10 21:11:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -21434.887207  -21534.887451  7548.943848 -21434.887207  100.099854 -21534.887451        0.0  100.000244      100.000244     6.0    -21534.887451            -1             -1   False
1  -21434.887207  -21434.887451  7548.943848 -21434.887207   99.999756 -21434.887451        0.0    0.000244        0.000244     2.0    -21434.887207         False          False   False
2  -21334.887451  -21434.887451  7548.943848 -21334.887451  100.000000 -21434.887451        0.0  100.000000        0.000000     2.0    -21434.887207         False          False   False
3  -21007.114014  -21234.887451  7548.943848 -21007.114014  427.773438 -21234.887451        0.0  227.773438      227.773438     1.0    -21434.887207         False          False   False
4  -21007.114014  -21134.887451  7548.943848 -21007.114014  214.386719 -21134.887451        0.0  127.773438      127.773438     2.0    -21434.887207         False          False   False
5  -21007.114014  -21134.787354  7548.943848 -21007.114014  107.693359 -21134.787354        0.0  127.673340       27.773438     3.0    -21434.887207         False          False   False
6  -21007.114014  -21034.887207  7621.170410 -21007.114014   54.346680 -21034.887207        0.0   27.773193        0.000000     4.0    -21434.887207         False          False   False
7  -21007.114014  -21007.114014  7707.107910 -21007.114014   27.673340 -21007.114014        0.0    0.000000      -14.062500     5.0    -21434.887207         False          False   False
8  -20992.777344  -20993.051514  7707.108154 -20992.777344   14.336670 -20993.051514        0.0    0.274170      -99.725586     1.0    -21434.887207         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=466685/2048.[0m
[08/10 21:11:40]  --------------------------------------------------------------------------------
[08/10 21:11:40]  Iteration: 311 (0 solution, 310 counterexamples)
[08/10 21:14:02]  Generator returned sat in 129.964511 secs.
[08/10 21:14:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:14:05]  Improved gap from 0 to 12.5
[08/10 21:14:06]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 21:14:06]  Verifer returned sat in 2.471518 secs.
[08/10 21:14:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -21772.187012  -22072.187256  7469.508301 -21772.187012    0.100000 -22072.187256   0.000000  300.000244      200.000244     7.0    -22072.187256            -1             -1   False
1  -21772.187012  -21972.187256  7469.508301 -21772.187012    0.100098 -21972.187256   0.000000  200.000244      100.000244     7.0    -22072.187256         False          False   False
2  -21434.787109  -21849.987061  7469.508301 -21434.787109  537.400146 -21849.987061   0.100098  415.099854      337.300049     8.0    -22072.187256         False          False   False
3  -21434.787109  -21772.187012  7469.508301 -21434.787109  415.000000 -21772.187012   0.100098  337.299805      237.300049     9.0    -21434.887207         False          False    True
4  -21434.787109  -21572.187256  7469.508301 -21434.787109  207.000000 -21572.187256   0.100098  137.300049      137.300049     3.0    -21434.887207         False           True   False
5  -21434.787109  -21485.987305  7469.508301 -21434.787109  103.000000 -21485.987305   0.100098   51.100098       37.300049     4.0    -21434.887207         False          False   False
6  -21434.787109  -21447.287109  7532.108154 -21434.787109   51.000000 -21447.287109   0.100098   12.399902       -0.100098     5.0    -21434.887207         False          False   False
7  -21422.187012  -21434.787109  7619.608154 -21422.187012   25.000000 -21434.787109   0.100098   12.500000        0.000000     1.0    -21434.887207         False          False   False
8  -21422.187012  -21422.287109  7707.108154 -21422.187012   12.000000 -21422.287109   0.100098    0.000000      -12.500000     2.0    -21434.887207         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1381581/4096.[0m
[08/10 21:14:06]  --------------------------------------------------------------------------------
[08/10 21:14:06]  Iteration: 312 (0 solution, 311 counterexamples)
[08/10 21:19:34]  Generator returned sat in 315.706694 secs.
[08/10 21:19:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:19:37]  Improved gap from 1/10 to 48.4375
[08/10 21:19:38]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 21:19:38]  Verifer returned sat in 2.792352 secs.
[08/10 21:19:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21970.049805  -22218.287354  7467.908447 -21970.049805  248.437256 -22218.287354   0.000000  248.237549      148.437500     4.0    -22218.287354            -1             -1     -1
1  -21969.949951  -22118.487061  7467.908447 -21969.949951  248.337402 -22118.487061   0.099854  148.437256       48.437500     5.0    -21970.049805         False           True  False
2  -21870.049805  -22018.487061  7467.908447 -21870.049805  248.337402 -22018.487061   0.099854  148.337402       48.337646     3.0    -21970.049805         False           True   True
3  -21870.049805  -21870.249756  7471.233398 -21870.049805   42.912598 -21870.249756   0.099854    0.100098      -48.337402     2.0    -21870.149658         False           True  False
4  -21673.174805  -21721.912109  7471.233398 -21673.174805  196.975098 -21721.912109   0.199951   48.537354       48.437500     1.0    -21870.149658         False          False  False
5  -21673.174805  -21721.812256  7522.795898 -21673.174805    2.000000 -21721.812256   0.199951   48.437500        0.000000     2.0    -21870.149658         False          False   True
6  -21673.174805  -21673.374756  7574.358398 -21673.174805    0.500000 -21673.374756   0.199951    0.000000      -48.437500     3.0    -21870.149658         False          False   True
7  -21572.987305  -21620.449707  7621.433350 -21572.987305  100.187500 -21620.449707   0.199951   47.262451       -1.175049     1.0    -21573.187256          True           True  False
8  -21517.924805  -21572.012207  7621.433350 -21517.924805  102.324951 -21572.012207   0.199951   53.887451      -46.112549     1.0    -21573.187256         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/10 21:19:38]  --------------------------------------------------------------------------------
[08/10 21:19:38]  Iteration: 313 (0 solution, 312 counterexamples)
[08/10 21:24:21]  Generator returned sat in 271.094160 secs.
[08/10 21:24:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:24:23]  Improved gap from 1/1200 to 23.4375
[08/10 21:24:24]  Improved number of small numbers from 79 to 99 out of a max of 114
[08/10 21:24:24]  Verifer returned sat in 1.733631 secs.
[08/10 21:24:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -21970.150146  -22072.775146  7467.908447 -21970.150146    0.099854 -22072.775146     0.0000  102.625000      102.624805     4.0    -22072.775146            -1             -1   False
1  -21970.150146  -22072.774902  7467.908447 -21970.150146    0.100000 -22072.774902     0.0000  102.624756        2.624805     5.0    -22072.775146         False          False   False
2  -21872.774902  -21896.212451  7467.908447 -21872.774902  200.000000 -21896.212451     0.0000   23.437549        0.000049     1.0    -22072.775146         False          False   False
3  -21143.012451  -21772.774951  7467.908447 -21143.012451  753.200000 -21772.774951   627.0375    2.725000        2.725000     1.0    -22072.775146         False          False   False
4  -20769.137451  -21672.774951  7467.908447 -20769.137451  376.600000 -21672.774951   900.9125    2.725000        2.725000     1.0    -22072.775146         False          False    True
5  -20583.562451  -21640.762451  7467.908447 -20583.562451  188.300000 -21640.762451   986.4875   70.712500        2.725000     1.0    -22072.775146         False          False    True
6  -20560.124951  -21569.949951  7541.645947 -20560.124951   94.150000 -21569.949951   986.4875   23.337500       -0.100000     1.0    -22072.775146         False          False    True
7  -20536.387451  -21546.512451  7618.008447 -20536.387451   47.075000 -21546.512451   986.4875   23.637500        0.000000     1.0    -22072.775146         False          False    True
8  -20536.387451  -21522.874951  7694.570801 -20536.387451   23.537500 -21522.874951   986.4875    0.000000      -23.437646     2.0    -22072.775146         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=109/40.[0m
[08/10 21:24:24]  --------------------------------------------------------------------------------
[08/10 21:24:24]  Iteration: 314 (0 solution, 313 counterexamples)
[08/10 21:26:37]  Generator returned sat in 121.512432 secs.
[08/10 21:26:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:26:40]  Improved gap from 0 to 100
[08/10 21:26:40]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 21:26:40]  Verifer returned sat in 1.861940 secs.
[08/10 21:26:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21824.895020  -21924.853271  7467.908447 -21824.895020   99.999756 -21924.853271   0.041748   99.916504       99.916504     2.0    -21924.853271            -1             -1     -1
1  -21824.853271  -21924.853027  7467.908447 -21824.853271   99.958252 -21924.853027   0.041748   99.958008       -0.041748     2.0    -21824.895020         False          False   True
2  -21624.978027  -21824.853271  7467.908447 -21624.978027  299.833252 -21824.853271   0.041748  199.833496       99.833496     1.0    -21824.895020         False          False   True
3  -21624.978027  -21625.019775  7467.908447 -21624.978027  101.666504 -21625.019775   0.041748    0.000000       -0.166504     2.0    -21625.019775         False          False   True
4  -21424.728027  -21624.853271  7467.908447 -21424.728027  200.250000 -21624.853271   0.083496  200.041748      100.041748     1.0    -21625.019775         False          False   True
5  -21424.728027  -21424.853271  7467.908447 -21424.728027    1.500000 -21424.853271   0.083496    0.041748        0.041748     2.0    -21625.019775         False          False   True
6  -21224.519775  -21324.853271  7467.908447 -21224.519775  200.250000 -21324.853271   0.291748  100.041748      100.041748     1.0    -21625.019775         False          False   True
7  -21224.519775  -21224.853271  7467.908447 -21224.519775    1.500000 -21224.853271   0.291748    0.041748        0.041748     2.0    -21625.019775         False          False   True
8  -21024.311523  -21224.811523  7467.908447 -21024.311523  200.250000 -21224.811523   0.500000  200.000000      100.041748     3.0    -21625.019775         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=409771/4096.[0m
[08/10 21:26:41]  --------------------------------------------------------------------------------
[08/10 21:26:41]  Iteration: 315 (0 solution, 314 counterexamples)
[08/10 21:28:36]  Generator returned sat in 104.868324 secs.
[08/10 21:28:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:28:43]  Improved gap from 1/10 to 32.8125
[08/10 21:28:44]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 21:28:44]  Verifer returned sat in 5.987783 secs.
[08/10 21:28:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22393.938477  -22553.475830  7901.455322 -22393.938477    0.200195 -22553.475830   0.000000  159.537354      100.099854     6.0    -22553.475830            -1             -1     -1
1  -22393.938477  -22494.038330  7901.455322 -22393.938477    0.100098 -22494.038330   0.000000  100.099854        0.099854     2.0    -22393.938477         False           True  False
2  -22293.938477  -22297.825684  7901.455322 -22293.938477  200.099854 -22297.825684   0.000000    3.887207        0.099854     1.0    -22393.938477         False          False  False
3  -22293.938477  -22294.038086  7968.642578 -22293.938477    3.787354 -22294.038086   0.000000    0.099609      -32.712891     2.0    -22293.938477         False          False  False
4  -22160.925537  -22161.225586  7968.642578 -22160.925537  133.112549 -22161.225586   0.099854    0.200195        0.200195     1.0    -22293.938477         False          False  False
5  -22160.125732  -22160.925781  8035.530029 -22160.125732    1.000000 -22160.925781   0.099854    0.700195      -32.112549     1.0    -22293.938477         False          False   True
6  -22092.375977  -22128.113037  8051.555176 -22092.375977   68.449951 -22128.113037   0.099854   35.637207      -48.337646     1.0    -22293.938477         False          False   True
7  -22011.325684  -22044.138184  8118.742676 -22011.325684  116.687500 -22044.138184   0.099854   32.712646       -0.099854     1.0    -22293.938477         False          False   True
8  -21927.650879  -22011.325684  8118.742676 -21927.650879  116.387451 -22011.325684   0.099854   83.574951      -16.425049     1.0    -22293.938477         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=205/1024.[0m
[08/10 21:28:44]  --------------------------------------------------------------------------------
[08/10 21:28:44]  Iteration: 316 (0 solution, 315 counterexamples)
[08/10 21:31:17]  Generator returned sat in 141.431255 secs.
[08/10 21:31:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:31:29]  Improved gap from 1/800 to 1.5625
[08/10 21:31:29]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 21:31:29]  Verifer returned sat in 11.311073 secs.
[08/10 21:31:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21171.683838  -21171.683838  8496.917969 -21171.683838  100.003750 -21171.683838   0.000000    0.000000       -0.001221     9.0    -21171.683838            -1             -1     -1
1  -21071.681396  -21171.682617  8496.917969 -21071.681396  100.002441 -21171.682617   0.000000  100.001221        0.001221     1.0    -21071.681396         False           True  False
2  -20974.675293  -20976.237793  8499.910645 -20974.675293  197.007324 -20976.237793   0.000000    1.562500        0.000000     1.0    -21071.681396         False          False  False
3  -20973.112793  -20974.675049  8598.347900 -20973.112793    3.125000 -20974.675049   0.000000    1.562256       -0.000244     1.0    -20973.112793         False          False  False
4  -20873.108154  -20873.121338  8598.347900 -20873.108154  101.566895 -20873.121338   0.001953    0.011230        0.002441     1.0    -20973.112793         False          False  False
5  -20873.108154  -20873.111572  8696.784424 -20873.108154    0.010000 -20873.111572   0.001953    0.001465       -1.561035     2.0    -20973.112793         False          False   True
6  -20871.109619  -20871.549072  8795.221924 -20871.109619    2.000000 -20871.549072   0.001953    0.437500       -1.125000     1.0    -20973.112793         False          False   True
7  -20869.547119  -20869.986572  8893.659424 -20869.547119    2.000000 -20869.986572   0.001953    0.437500       -1.125000     1.0    -20973.112793         False          False   True
8  -20867.984619  -20868.424072  8893.659424 -20867.984619    2.000000 -20868.424072   0.001953    0.437500      -99.562500     1.0    -20973.112793         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=5/2048.[0m
[08/10 21:31:30]  --------------------------------------------------------------------------------
[08/10 21:31:30]  Iteration: 317 (0 solution, 316 counterexamples)
[08/10 21:33:46]  Generator returned sat in 124.306167 secs.
[08/10 21:33:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:33:57]  Improved gap from 1/10 to 1.5625
[08/10 21:33:57]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/10 21:33:57]  Verifer returned sat in 10.386848 secs.
[08/10 21:33:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -19593.699219  -19793.424316  8496.917725 -19593.699219  199.825195 -19793.424316    0.000000  199.725098      146.674805     4.0    -19793.424316            -1             -1    True
1  -19593.699219  -19740.374023  8496.917725 -19593.699219  199.725098 -19740.374023    0.000000  146.674805       46.674805     4.0    -19593.699219         False          False    True
2  -19593.699219  -19640.374023  8550.242920 -19593.699219  146.674805 -19640.374023    0.000000   46.674805        0.000000     5.0    -19593.699219         False          False    True
3  -19447.023926  -19593.699219  8550.242920 -19447.023926  193.350098 -19593.699219    0.000000  146.675293       46.675293     6.0    -19593.699219         False           True   False
4  -19395.161621  -19395.261719  8550.242920 -19395.161621  198.537598 -19395.261719    0.000000    0.100098       -1.462402     1.0    -19593.699219         False           True   False
5  -19121.436768  -19393.698975  8550.242920 -19121.436768  273.824951 -19393.698975  125.487549  146.774658       46.774902     1.0    -19593.699219         False          False   False
6  -19121.436768  -19249.023926  8603.468018 -19121.436768    2.000000 -19249.023926  125.487549    2.099609        0.000000     2.0    -19593.699219         False          False    True
7  -19121.436768  -19246.924316  8701.905469 -19121.436768    2.000000 -19246.924316  125.487549    0.000000       -1.562549     3.0    -19593.699219         False          False    True
8  -19119.436768  -19245.361572  8800.342773 -19119.436768    2.000000 -19245.361572  125.487549    0.437256       -1.125244     1.0    -19593.699219         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=95795/2048.[0m
[08/10 21:33:58]  --------------------------------------------------------------------------------
[08/10 21:33:58]  Iteration: 318 (0 solution, 317 counterexamples)
[08/10 21:35:29]  Generator returned sat in 79.861753 secs.
[08/10 21:35:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:35:39]  Improved gap from 5171/4096 to 1.5625
[08/10 21:35:39]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 21:35:39]  Verifer returned sat in 9.621423 secs.
[08/10 21:35:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -19914.614258  -20004.664307  8381.415527 -19914.614258    0.099854 -20004.664307     0.0000   90.050049       90.050049     1.0    -20004.664307            -1             -1   False
1  -19914.614258  -20004.664307  8391.365479 -19914.614258    0.100098 -20004.664307     0.0000   90.050049        0.000000     1.0    -20004.664307         False          False   False
2  -19814.514404  -19814.614258  8391.365479 -19814.514404  190.149902 -19814.614258     0.0000    0.099854        0.099854     1.0    -20004.664307         False          False   False
3  -19714.514404  -19814.614258  8391.365479 -19714.514404  100.099854 -19814.614258     0.0000  100.099854        0.099854     1.0    -19714.514404         False          False   False
4  -19668.039307  -19714.514160  8444.790527 -19668.039307  146.574951 -19714.514160     0.0000   46.474854        0.000000     1.0    -19714.514404         False          False   False
5  -19494.651611  -19569.639160  8444.790527 -19494.651611  219.862549 -19569.639160    73.1875    1.800049        0.200195     1.0    -19714.514404         False          False   False
6  -19494.451660  -19567.739258  8542.927979 -19494.451660    2.000000 -19567.739258    73.1875    0.100098       -1.462402     1.0    -19714.514404         False          False    True
7  -19492.551758  -19566.176758  8641.365234 -19492.551758    2.000000 -19566.176758    73.1875    0.437500       -1.125244     1.0    -19714.514404         False          False    True
8  -19490.989258  -19564.614014  8641.365234 -19490.989258    2.000000 -19564.614014    73.1875    0.437256      -99.562744     1.0    -19714.514404         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=205/1024.[0m
[08/10 21:35:40]  --------------------------------------------------------------------------------
[08/10 21:35:40]  Iteration: 319 (0 solution, 318 counterexamples)
[08/10 21:39:01]  Generator returned sat in 189.580070 secs.
[08/10 21:39:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:39:03]  Improved gap from 409/4096 to 23.4375
[08/10 21:39:04]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 21:39:04]  Verifer returned sat in 1.805615 secs.
[08/10 21:39:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23167.367920  -23390.805420  11767.556641 -23167.367920    0.100098 -23390.805420   0.000000  223.437500      223.437500     5.0    -23390.805420            -1             -1     -1
1  -23167.268066  -23290.805664  11767.556641 -23167.268066  223.537354 -23290.805664   0.099854  123.437744      123.437500     5.0    -23390.805420         False           True  False
2  -23103.005615  -23221.593018  11767.556641 -23103.005615  187.700195 -23221.593018   0.099854  118.487549       87.699951     5.0    -23103.105469          True           True   True
3  -22967.167969  -23093.630371  11767.556641 -22967.167969  254.325195 -23093.630371   0.199951  126.262451      123.437500     1.0    -23103.105469         False           True  False
4  -22967.167969  -22990.905273  11767.556641 -22967.167969  126.162598 -22990.905273   0.199951   23.537354       23.437500     2.0    -23103.105469         False          False   True
5  -22967.167969  -22990.805420  11844.119141 -22967.167969    0.500000 -22990.805420   0.199951   23.437500        0.000000     3.0    -23103.105469         False          False   True
6  -22967.167969  -22967.367920  11844.119385 -22967.167969    0.500000 -22967.367920   0.199951    0.000000      -99.999756     4.0    -23103.105469         False          False   True
7  -22840.905518  -22867.367920  11917.756836 -22840.905518  126.262451 -22867.367920   0.199951   26.262451       -0.099854     1.0    -22841.105469          True           True  False
8  -22743.630615  -22841.005615  11917.756836 -22743.630615  123.537354 -22841.005615   0.199951   97.175049       -2.824951     1.0    -22841.105469         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1975/16.[0m
[08/10 21:39:04]  --------------------------------------------------------------------------------
[08/10 21:39:04]  Iteration: 320 (0 solution, 319 counterexamples)
[08/10 21:43:23]  Generator returned sat in 247.933416 secs.
[08/10 21:43:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:43:26]  Improved gap from 0 to 0
[08/10 21:43:26]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 21:43:26]  Verifer returned sat in 1.722867 secs.
[08/10 21:43:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -23106.205469  -23205.905518  11582.656738 -23106.205469    0.100098 -23205.905518   0.000000   99.700049       99.700049     4.0    -23205.905518            -1             -1   False
1  -23005.705566  -23106.105713  11582.656738 -23005.705566  200.199951 -23106.105713   0.100098  100.300049      100.099854     1.0    -23205.905518         False          False   False
2  -22905.805420  -23005.905518  11582.656738 -22905.805420  200.200195 -23005.905518   0.100098  100.000000      100.000000     2.0    -23205.905518         False          False    True
3  -22904.305420  -22905.905518  11582.656738 -22904.305420  101.500000 -22905.905518   0.100098    1.500000        1.500000     2.0    -22904.405518         False          False    True
4  -22904.305420  -22905.905518  11681.156738 -22904.305420    1.500000 -22905.905518   0.100098    1.500000        0.000000     2.0    -22904.405518         False          False    True
5  -22904.305420  -22904.405518  11781.156738 -22904.305420    1.500000 -22904.405518   0.100098    0.000000        0.000000     3.0    -22904.405518         False          False    True
6  -22902.805420  -22904.405518  11879.656738 -22902.805420    1.500000 -22904.405518   0.100098    1.500000        0.000000     3.0    -22904.405518         False          False    True
7  -22902.805420  -22902.905518  11979.656738 -22902.805420    1.500000 -22902.905518   0.100098    0.000000        0.000000     2.0    -22904.405518         False          False    True
8  -22901.305420  -22902.805664  11979.656738 -22901.305420    1.500000 -22902.805664   0.100098    1.400146      -98.500000     1.0    -22904.405518         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=410009/4096.[0m
[08/10 21:43:27]  --------------------------------------------------------------------------------
[08/10 21:43:27]  Iteration: 321 (0 solution, 320 counterexamples)
[08/10 21:49:14]  Generator returned sat in 334.804562 secs.
[08/10 21:49:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:49:16]  Improved gap from 0 to 23.4375
[08/10 21:49:17]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 21:49:17]  Verifer returned sat in 1.997396 secs.
[08/10 21:49:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -20476.055420  -20476.055420  11826.631836 -20476.055420    0.099854 -20476.055420    0.000000    0.000000        0.000000     1.0     -20476.05542            -1             -1    True
1  -20475.955566  -20476.055420  11826.631836 -20475.955566    0.099854 -20476.055420    0.000000    0.099854      -99.900146     1.0     -20476.05542         False          False    True
2  -20275.755615  -20376.055420  11826.631836 -20275.755615  200.299805 -20376.055420    0.099854  100.199951        0.199951     1.0     -20476.05542         False          False    True
3  -19579.955566  -20275.755615  11826.631836 -19579.955566  796.000000 -20275.755615  595.899902   99.900146        0.199951     1.0     -20476.05542         False          False    True
4  -19282.855713  -20078.980469  11826.631836 -19282.855713  397.000000 -20078.980469  792.999756    3.125000        0.199951     1.0     -20476.05542         False          False    True
5  -19088.480713  -20076.055420  11826.631836 -19088.480713  197.500000 -20076.055420  887.374756  100.199951        0.199951     2.0     -20476.05542         False          False    True
6  -19088.480713  -19975.955322  11903.094238 -19088.480713   97.750000 -19975.955322  887.374756    0.099854      -23.337646     2.0     -20476.05542         False          False    True
7  -19041.705566  -19952.517822  11979.656738 -19041.705566   46.875000 -19952.517822  887.374756   23.437500        0.000000     1.0     -20476.05542         False          False    True
8  -19041.705566  -19929.080322  11979.656738 -19041.705566   21.437500 -19929.080322  887.374756    0.000000     -100.000000     2.0     -20476.05542         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/10 21:49:17]  --------------------------------------------------------------------------------
[08/10 21:49:17]  Iteration: 322 (0 solution, 321 counterexamples)
[08/10 21:51:19]  Generator returned sat in 110.043697 secs.
[08/10 21:51:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:51:23]  Improved gap from 0 to 48.4375
[08/10 21:51:23]  Improved number of small numbers from 90 to 114 out of a max of 114
[08/10 21:51:23]  Verifer returned sat in 2.261831 secs.
[08/10 21:51:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -20476.055420  -20476.055420  11785.152588 -20476.055420    0.020752 -20476.055420   0.000000    0.000000      -41.479004     6.0    -20476.055420            -1             -1     -1
1  -20334.597168  -20383.138672  11785.152832 -20334.597168  141.458252 -20383.138672   0.000000   48.541504       -0.020508     1.0    -20476.055420         False           True  False
2  -20234.576172  -20334.576416  11785.152832 -20234.576172  148.562500 -20334.576416   0.000000  100.000244        0.000488     1.0    -20476.055420         False          False  False
3  -20186.013916  -20234.576416  11836.590088 -20186.013916  148.562500 -20234.576416   0.000000   48.562500        0.000000     2.0    -20476.055420         False          False  False
4  -20037.555664  -20086.034668  11836.590088 -20037.555664  197.020752 -20086.034668   0.020752   48.458252       48.437500     1.0    -20476.055420         False          False  False
5  -20037.555664  -20086.013916  11888.152588 -20037.555664    2.000000 -20086.013916   0.020752   48.437500        0.000000     2.0    -20476.055420         False          False   True
6  -20037.555664  -20037.576416  11939.715088 -20037.555664    2.000000 -20037.576416   0.020752    0.000000      -48.437500     3.0    -20476.055420         False          False   True
7  -19936.055664  -19989.138672  11986.652588 -19936.055664  101.500000 -19989.138672   0.020752   53.062256        0.000000     1.0    -19936.076416          True           True  False
8  -19887.919922  -19936.055664  11986.652669 -19887.919922  101.197998 -19936.055664   0.020752   48.114990      -51.864176     1.0    -19936.076416         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/10 21:51:23]  --------------------------------------------------------------------------------
[08/10 21:51:23]  Iteration: 323 (0 solution, 322 counterexamples)
[08/10 21:56:16]  Generator returned sat in 281.118232 secs.
[08/10 21:56:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:56:19]  Improved gap from 0 to 23.4375
[08/10 21:56:19]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 21:56:19]  Verifer returned sat in 2.465705 secs.
[08/10 21:56:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23427.210693  -23627.160889  11836.590088 -23427.210693    0.050000 -23627.160889   0.000000  199.950195      199.950195     9.0    -23627.160889            -1             -1     -1
1  -23427.210693  -23527.160889  11836.590088 -23427.210693  199.900000 -23527.160889   0.000000   99.950195       99.950195     5.0    -23627.160889         False           True  False
2  -23103.390869  -23527.160889  11836.590088 -23103.390869  423.770020 -23527.160889   0.049805  423.720215      323.720215     5.0    -23627.160889         False          False  False
3  -23103.390869  -23427.160645  11836.590088 -23103.390869  423.720000 -23427.160645   0.049805  323.719971      223.720215     2.0    -23103.440674         False          False   True
4  -23103.390869  -23227.160889  11836.590088 -23103.390869  210.360000 -23227.160889   0.049805  123.720215      123.720215     3.0    -23103.440674         False          False   True
5  -23103.390869  -23153.780762  11836.590088 -23103.390869  103.680000 -23153.780762   0.049805   50.340088       23.720215     4.0    -23103.440674         False          False   True
6  -23103.390869  -23127.160645  11912.869873 -23103.390869   50.340000 -23127.160645   0.049805   23.719971        0.000000     5.0    -23103.440674         False          False   True
7  -23103.390869  -23103.440674  11989.149902 -23103.390869   23.670000 -23103.440674   0.049805    0.000000      -23.719971     6.0    -23103.440674         False          False   True
8  -22979.670654  -23079.720459  11989.149902 -22979.670654  123.720215 -23079.720459   0.049805  100.000000        0.000244     1.0    -23103.440674         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=662979/2048.[0m
[08/10 21:56:20]  --------------------------------------------------------------------------------
[08/10 21:56:20]  Iteration: 324 (0 solution, 323 counterexamples)
[08/10 21:58:42]  Generator returned sat in 129.709471 secs.
[08/10 21:58:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:58:55]  Improved gap from 0 to 35.9375
[08/10 21:58:56]  Improved number of small numbers from 61 to 81 out of a max of 114
[08/10 21:58:56]  Verifer returned sat in 13.303286 secs.
[08/10 21:58:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -23475.662598  -23475.762695  11744.456055 -23475.662598    0.100098 -23475.762695     0.0000    0.100098        0.099873     2.0    -23475.762695            -1             -1   False
1  -23439.725098  -23475.562744  11808.318652 -23439.725098   36.037598 -23475.562744     0.0000   35.837646       -0.100029     1.0    -23475.762695         False          False   False
2  -23303.787598  -23439.625068  11808.318652 -23303.787598  171.775146 -23439.625068     0.0000  135.837471       35.837471     1.0    -23475.762695         False          False   False
3  -23164.350068  -23239.625068  11808.318652 -23164.350068  275.275000 -23239.625068    39.3375   35.937500       35.937500     1.0    -23475.762695         False          False   False
4  -23064.150068  -23170.356318  11808.318652 -23064.150068  136.137500 -23170.356318    39.5375   66.668750       35.937500     1.0    -23475.762695         False          False    True
5  -23064.150068  -23139.625068  11872.381152 -23064.150068   66.568750 -23139.625068    39.5375   35.937500        0.000000     2.0    -23475.762695         False          False    True
6  -23064.150068  -23103.687568  11936.443652 -23064.150068   31.784375 -23103.687568    39.5375    0.000000      -35.937500     3.0    -23475.762695         False          False    True
7  -22981.789131  -23067.750068  11989.149902 -22981.789131   82.360938 -23067.750068    39.5375   46.423437       -0.870313     1.0    -23021.326631          True           True   False
8  -22937.228975  -23020.456299  11989.149902 -22937.228975   90.983594 -23020.456299    39.5375   43.689824      -56.310156     1.0    -23021.326631         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=575/16.[0m
[08/10 21:58:57]  --------------------------------------------------------------------------------
[08/10 21:58:57]  Iteration: 325 (0 solution, 324 counterexamples)
[08/10 22:02:36]  Generator returned sat in 206.669463 secs.
[08/10 22:02:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:02:40]  Improved gap from 0 to 23.4375
[08/10 22:02:40]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 22:02:40]  Verifer returned sat in 2.844790 secs.
[08/10 22:02:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -23499.050293  -23601.248047  11808.318848 -23499.050293    0.100098 -23601.248047   0.000000  102.197754      102.148193     2.0    -23601.248047            -1             -1   False
1  -23499.050293  -23601.198242  11808.318848 -23499.050293    0.050000 -23601.198242   0.000000  102.147949        2.148193     2.0    -23499.050293         False          False   False
2  -23475.562744  -23499.000000  11882.682861 -23475.562744  125.635498 -23499.000000   0.000000   23.437256       -0.000244     1.0    -23499.050293         False          False   False
3  -23375.512451  -23375.562500  11882.682861 -23375.512451  123.487549 -23375.562500   0.000000    0.050049        0.050049     1.0    -23375.512451         False          False   False
4  -23149.876953  -23276.439453  11882.682861 -23149.876953  225.685547 -23276.439453   0.050049  126.512451      125.635498     1.0    -23375.512451         False          False   False
5  -23149.876953  -23275.562500  11882.682861 -23149.876953  111.342773 -23275.562500   0.050049  125.635498       25.635498     2.0    -23375.512451         False          False    True
6  -23149.876953  -23175.562500  11957.047363 -23149.876953   54.171387 -23175.562500   0.050049   25.635498        0.000000     3.0    -23375.512451         False          False    True
7  -23149.876953  -23149.927002  12033.609863 -23149.876953   25.585693 -23149.927002   0.050049    0.000000      -23.437500     4.0    -23375.512451         False          False    True
8  -23023.364502  -23126.489258  12033.609863 -23023.364502  126.512451 -23126.489258   0.050049  103.074707        3.074951     1.0    -23023.414551          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=514603/4096.[0m
[08/10 22:02:41]  --------------------------------------------------------------------------------
[08/10 22:02:41]  Iteration: 326 (0 solution, 325 counterexamples)
[08/10 22:10:56]  Generator returned sat in 483.733719 secs.
[08/10 22:10:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:11:12]  Improved gap from 491777/28672 to 40.625
[08/10 22:11:13]  Improved number of small numbers from 54 to 61 out of a max of 114
[08/10 22:11:13]  Verifer returned sat in 16.183625 secs.
[08/10 22:11:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -22538.761963  -22538.762170  11341.324937 -22538.761963  240.716797 -22538.762170   0.000000    0.000207        0.000207     3.0    -22538.762170            -1             -1   False
1  -22298.091179  -22438.762170  11341.324937 -22298.091179  240.670991 -22438.762170   0.045991  140.625000      140.625000     1.0    -22298.137170         False          False   False
2  -22198.045189  -22338.762170  11341.324937 -22198.045189  240.670991 -22338.762170   0.091981  140.625000      140.625000     2.0    -22298.137170         False          False    True
3  -22097.999198  -22238.762170  11341.324937 -22097.999198  240.670991 -22238.762170   0.137972  140.625000      140.625000     2.0    -22298.137170         False          False    True
4  -22097.999198  -22160.253252  11341.324937 -22097.999198  119.835495 -22160.253252   0.137972   62.116082       40.625000     2.0    -22298.137170         False          False    True
5  -22097.999198  -22138.762170  11400.699937 -22097.999198   61.917748 -22138.762170   0.137972   40.625000        0.000000     3.0    -22298.137170         False          False    True
6  -22097.999198  -22098.137170  11460.074937 -22097.999198   32.958874 -22098.137170   0.137972    0.000000      -40.625000     4.0    -22298.137170         False          False    True
7  -22010.207261  -22057.512170  11512.862061 -22010.207261   87.791937 -22057.512170   0.137972   47.166937       -0.045939     1.0    -22010.345233          True           True   False
8  -21961.107689  -22010.299072  11512.862061 -21961.107689   96.266509 -22010.299072   0.137972   49.053412      -50.946367     1.0    -22010.345233         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1125/8.[0m
[08/10 22:11:14]  --------------------------------------------------------------------------------
[08/10 22:11:14]  Iteration: 327 (0 solution, 326 counterexamples)
[08/10 22:17:59]  Generator returned sat in 393.573646 secs.
[08/10 22:18:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:18:04]  Improved gap from 205195/28672 to 48.4375
[08/10 22:18:05]  Improved number of small numbers from 61 to 68 out of a max of 114
[08/10 22:18:05]  Verifer returned sat in 5.074953 secs.
[08/10 22:18:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -18003.455322  -18092.474198  6895.036965 -18003.455322   89.118652 -18092.474198       0.00   89.018876       89.018876     2.0    -18092.474198            -1             -1   False
1  -18003.405448  -18003.405448  6895.036965 -18003.405448   89.068750 -18003.405448       0.00    0.000000      -10.931250     1.0    -18003.405448         False          False   False
2  -17643.986698  -17892.474365  6895.036965 -17643.986698  359.418750 -17892.474365       0.05  248.437667      248.437500     1.0    -18003.405448         False          False   False
3  -17643.986698  -17805.336698  6895.036965 -17643.986698  206.300000 -17805.336698       0.05  161.300000      148.437500     2.0    -17644.036698         False          False    True
4  -17643.986698  -17697.111698  6895.036965 -17643.986698  104.150000 -17697.111698       0.05   53.075000       48.437500     3.0    -17644.036698         False          False    True
5  -17643.986698  -17692.474198  6946.599465 -17643.986698   53.075000 -17692.474198       0.05   48.437500        0.000000     4.0    -17644.036698         False          False    True
6  -17643.986698  -17644.036698  6998.161965 -17643.986698   27.537500 -17644.036698       0.05    0.000000      -48.437500     5.0    -17644.036698         False          False    True
7  -17551.067948  -17595.599198  7049.724465 -17551.067948   92.918750 -17595.599198       0.05   44.481250       -3.956250     1.0    -17644.036698         False           True   False
8  -17499.833573  -17547.161621  7101.286865 -17499.833573   95.715625 -17547.161621       0.05   47.278048       -1.159475     1.0    -17644.036698         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3975/16.[0m
[08/10 22:18:06]  --------------------------------------------------------------------------------
[08/10 22:18:06]  Iteration: 328 (0 solution, 327 counterexamples)
[08/10 22:20:31]  Generator returned sat in 132.709215 secs.
[08/10 22:20:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:20:32]  Improved gap from 0 to 23.4375
[08/10 22:20:33]  Improved number of small numbers from 59 to 68 out of a max of 114
[08/10 22:20:33]  Verifer returned sat in 1.484868 secs.
[08/10 22:20:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17554.568115  -17680.730448  6483.293215 -17554.568115  126.362305 -17680.730448     0.0000  126.162333      126.162333     9.0    -17680.730448            -1             -1     -1
1  -17554.467948  -17680.630615  6483.293215 -17554.467948  126.262500 -17680.630615     0.1000  126.062667       26.162500     7.0    -17554.567948         False           True  False
2  -17554.467948  -17578.005448  6557.130715 -17554.467948  125.962646 -17578.005448     0.1000   23.437500        0.000000     8.0    -17554.567948         False          False   True
3  -16852.705448  -17554.567948  6557.130715 -16852.705448  725.200000 -17554.567948   575.7000  126.162500       26.162500     3.0    -17554.567948         False           True  False
4  -16614.267948  -17354.567948  6557.130715 -16614.267948  364.600000 -17354.567948   714.1375   26.162500       26.162500     1.0    -17554.567948         False          False   True
5  -16456.130448  -17354.467773  6557.130715 -16456.130448  184.300000 -17354.467773   772.2750  126.062325       26.162500     2.0    -17554.567948         False          False   True
6  -16456.130448  -17251.742948  6630.868215 -16456.130448   94.150000 -17251.742948   772.2750   23.337500       -0.100000     2.0    -17554.567948         False          False   True
7  -16432.392948  -17228.305420  6707.230715 -16432.392948   47.075000 -17228.305420   772.2750   23.637472        0.000000     1.0    -17554.567948         False          False   True
8  -16432.392948  -17204.667948  6707.230957 -16432.392948   23.537500 -17204.667948   772.2750    0.000000      -99.999758     2.0    -17554.567948         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=2093/80.[0m
[08/10 22:20:34]  --------------------------------------------------------------------------------
[08/10 22:20:34]  Iteration: 329 (0 solution, 328 counterexamples)
[08/10 22:24:03]  Generator returned sat in 197.422118 secs.
[08/10 22:24:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:24:08]  Improved gap from 1/2400 to 48.4375
[08/10 22:24:08]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/10 22:24:08]  Verifer returned sat in 3.648661 secs.
[08/10 22:24:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17024.127930  -17372.765625  6126.690918 -17024.127930    0.049805 -17372.765625   0.050049  348.587646      299.949951     3.0    -17372.765625            -1             -1     -1
1  -17024.127930  -17224.127930  6126.690918 -17024.127930  348.537500 -17224.127930   0.050049  199.949951      199.949951     3.0    -17372.765625         False          False   True
2  -16875.590332  -17224.127930  6126.690918 -16875.590332  348.487549 -17224.127930   0.100098  348.437500      248.437500     3.0    -16875.690430         False          False   True
3  -16875.590332  -17024.127930  6126.690918 -16875.590332  193.750000 -17024.127930   0.100098  148.437500      148.437500     2.0    -16875.690430         False          False   True
4  -16875.590332  -16924.177734  6126.690918 -16875.590332   96.875000 -16924.177734   0.100098   48.487305       48.437500     3.0    -16875.690430         False          False   True
5  -16875.590332  -16924.127930  6178.253418 -16875.590332   48.437500 -16924.127930   0.100098   48.437500        0.000000     4.0    -16875.690430         False          False   True
6  -16875.590332  -16875.690430  6229.815918 -16875.590332   24.218750 -16875.690430   0.100098    0.000000      -48.437500     5.0    -16875.690430         False          False   True
7  -16787.762207  -16827.252930  6281.378418 -16787.762207   87.828125 -16827.252930   0.100098   39.390625       -9.046875     1.0    -16875.690430         False           True  False
8  -16733.276367  -16778.815430  6281.378418 -16733.276367   93.876465 -16778.815430   0.100098   45.438965      -54.561035     1.0    -16875.690430         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3975/16.[0m
[08/10 22:24:09]  --------------------------------------------------------------------------------
[08/10 22:24:09]  Iteration: 330 (0 solution, 329 counterexamples)
[08/10 22:27:15]  Generator returned sat in 174.744605 secs.
[08/10 22:27:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:27:21]  Improved gap from 51/2048 to 48.4375
[08/10 22:27:22]  Improved number of small numbers from 62 to 72 out of a max of 114
[08/10 22:27:22]  Verifer returned sat in 6.456860 secs.
[08/10 22:27:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -15457.731094  -15906.181152  6126.690918 -15457.731094    0.049561 -15906.181152   0.012451  448.437607      448.437500     6.0    -15906.181152            -1             -1     -1
1  -15457.731094  -15806.181152  6126.690918 -15457.731094  348.449707 -15806.181152   0.012451  348.437607      348.437500     4.0    -15906.181152         False          False   True
2  -15457.731094  -15806.180908  6126.690918 -15457.731094  348.437256 -15806.180908   0.012451  348.437363      248.437500     4.0    -15457.743545         False          False   True
3  -15457.731094  -15606.181045  6126.690918 -15457.731094  205.799805 -15606.181045   0.012451  148.437500      148.437500     5.0    -15457.743545         False          False   True
4  -15457.731094  -15506.193497  6126.690918 -15457.731094  100.899902 -15506.193497   0.012451   48.449951       48.437500     6.0    -15457.743545         False          False   True
5  -15457.731094  -15506.181045  6178.253418 -15457.731094   48.449951 -15506.181045   0.012451   48.437500        0.000000     7.0    -15457.743545         False          False   True
6  -15457.731094  -15457.743545  6229.815918 -15457.731094   22.224976 -15457.743545   0.012451    0.000000      -48.437500     8.0    -15457.743545         False          False   True
7  -15370.899856  -15409.306045  6276.715820 -15370.899856   86.831238 -15409.306045   0.012451   38.393738      -14.706360     1.0    -15457.743545         False           True  False
8  -15315.934250  -15356.205811  6276.715820 -15315.934250   93.359344 -15356.205811   0.012451   40.259110      -59.740753     1.0    -15457.743545         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/10 22:27:23]  --------------------------------------------------------------------------------
[08/10 22:27:23]  Iteration: 331 (0 solution, 330 counterexamples)
[08/10 22:33:11]  Generator returned sat in 336.721948 secs.
[08/10 22:33:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:18]  Improved gap from 0 to 32.8125
[08/10 22:33:19]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 22:33:19]  Verifer returned sat in 6.142138 secs.
[08/10 22:33:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16356.330811  -16487.855957  6677.840576 -16356.330811    0.200000 -16487.855957   0.100098  131.425049      100.900146     8.0    -16487.855957            -1             -1     -1
1  -16356.330811  -16357.331055  6677.840576 -16356.330811    0.100098 -16357.331055   0.100098    0.900146        0.900146     6.0    -16356.430908         False           True   True
2  -16257.331055  -16262.818359  6677.840576 -16257.331055   99.899902 -16262.818359   0.100098    5.387207       -0.100098     1.0    -16356.430908         False          False   True
3  -16224.418457  -16257.331055  6745.028076 -16224.418457   38.299805 -16257.331055   0.100098   32.812500        0.000000     1.0    -16224.518555         False          False   True
4  -16123.318604  -16124.618408  6745.028076 -16123.318604  133.912354 -16124.618408   0.199951    1.099854        1.000000     1.0    -16224.518555         False          False   True
5  -16123.318604  -16124.518555  6812.215576 -16123.318604    1.000000 -16124.518555   0.199951    1.000000      -31.812500     2.0    -16224.518555         False          False   True
6  -16055.168701  -16091.706055  6875.878174 -16055.168701   69.149902 -16091.706055   0.199951   36.337402        0.000000     1.0    -16224.518555         False          False   True
7  -15974.618652  -16055.268555  6895.328125 -15974.618652  116.887451 -16055.268555   0.199951   80.449951        0.000000     1.0    -16224.518555         False          False   True
8  -15962.449951  -15974.718506  6962.415527 -15962.449951   92.618652 -15974.718506   0.199951   12.068604      -20.743896     1.0    -16224.518555         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1.[0m
[08/10 22:33:20]  --------------------------------------------------------------------------------
[08/10 22:33:20]  Iteration: 332 (0 solution, 331 counterexamples)
[08/10 22:39:53]  Generator returned sat in 381.897256 secs.
[08/10 22:39:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:39:59]  Improved gap from 1023/40960 to 48.4375
[08/10 22:40:00]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 22:40:00]  Verifer returned sat in 5.712054 secs.
[08/10 22:40:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16591.568555  -17040.106055  6958.970576 -16591.568555  448.637451 -17040.106055        0.1  448.437500      448.437500     4.0    -17040.106055            -1             -1     -1
1  -16591.468555  -17040.005859  6958.970576 -16591.468555  448.537500 -17040.005859        0.2  448.337305      348.437500     4.0    -16591.668555         False          False   True
2  -16591.468555  -16840.106201  6958.970576 -16591.468555  448.237305 -16840.106201        0.2  248.437646      248.437500     5.0    -16591.668555         False          False   True
3  -16591.468555  -16750.553782  6958.970576 -16591.468555  223.700000 -16750.553782        0.2  158.885227      148.437500     6.0    -16591.668555         False          False   True
4  -16591.468555  -16644.693555  6958.970576 -16591.468555  109.850000 -16644.693555        0.2   53.025000       48.437500     7.0    -16591.668555         False          False   True
5  -16591.468555  -16640.106055  7010.533076 -16591.468555   52.925000 -16640.106055        0.2   48.437500        0.000000     8.0    -16591.668555         False          False   True
6  -16591.468555  -16591.668555  7062.095576 -16591.468555   24.462500 -16591.668555        0.2    0.000000      -48.437500     9.0    -16591.668555         False          False   True
7  -16501.294691  -16543.231055  7113.658076 -16501.294691   90.173864 -16543.231055        0.2   41.736364       -6.701136     1.0    -16591.668555         False           True  False
8  -16448.712873  -16494.793457  7160.454834 -16448.712873   94.318182 -16494.793457        0.2   45.880584       -7.322560     1.0    -16591.668555         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/10 22:40:01]  --------------------------------------------------------------------------------
[08/10 22:40:01]  Iteration: 333 (0 solution, 332 counterexamples)
[08/10 22:44:01]  Generator returned sat in 228.056238 secs.
[08/10 22:44:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:44:12]  Improved gap from 1/1600 to 42.1875
[08/10 22:44:13]  Improved number of small numbers from 55 to 72 out of a max of 114
[08/10 22:44:13]  Verifer returned sat in 10.545350 secs.
[08/10 22:44:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16981.793457  -16981.993896  6958.970703 -16981.793457    0.100098 -16981.993896   0.100098    0.100342        0.100146     5.0    -16981.993896            -1             -1     -1
1  -16739.806152  -16981.993652  6958.970703 -16739.806152  242.087646 -16981.993652   0.100098  242.087402      142.087451     6.0    -16981.993896         False           True   True
2  -16739.806152  -16782.993701  6958.970703 -16739.806152    0.100000 -16782.993701   0.100098   43.087451       42.087451     2.0    -16739.906250          True           True  False
3  -16539.606104  -16681.993701  6958.970703 -16539.606104  243.287500 -16681.993701   0.200098  142.187500      142.187500     1.0    -16739.906250         False          False  False
4  -16539.606104  -16603.306982  6958.970703 -16539.606104  121.643750 -16603.306982   0.200098   63.500781       42.187500     2.0    -16739.906250         False          False   True
5  -16539.606104  -16581.993701  7016.783203 -16539.606104   62.821875 -16581.993701   0.200098   42.187500        0.000000     3.0    -16739.906250         False          False   True
6  -16539.606104  -16539.806201  7074.595703 -16539.606104   33.410938 -16539.806201   0.200098    0.000000      -42.187500     4.0    -16739.906250         False          False   True
7  -16453.306885  -16497.618701  7130.483887 -16453.306885   86.299219 -16497.618701   0.200098   44.111719       -0.000098     1.0    -16453.506982          True           True  False
8  -16402.924854  -16453.406982  7130.483984 -16402.924854   94.493750 -16453.406982   0.200098   50.282031      -49.617969     1.0    -16453.506982         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2275/16.[0m
[08/10 22:44:14]  --------------------------------------------------------------------------------
[08/10 22:44:14]  Iteration: 334 (0 solution, 333 counterexamples)
[08/10 22:45:06]  Generator returned sat in 40.869830 secs.
[08/10 22:45:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:45:22]  Improved gap from 0 to 40.625
[08/10 22:45:23]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/10 22:45:23]  Verifer returned sat in 15.454487 secs.
[08/10 22:45:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17188.541748  -17188.591885  6926.593691 -17188.541748    0.025146 -17188.591885      0.025    0.025137       -0.024863     2.0    -17188.591885            -1             -1     -1
1  -16947.866885  -17188.541748  6926.593691 -16947.866885  240.700000 -17188.541748      0.050  240.624863      140.625000     1.0    -17188.591885         False          False   True
2  -16947.866885  -16988.541885  6926.593691 -16947.866885  240.600098 -16988.541885      0.050   40.625000       40.625000     2.0    -16947.916885         False          False   True
3  -16747.841885  -16888.541885  6926.593691 -16747.841885  240.650000 -16888.541885      0.075  140.625000      140.625000     1.0    -16947.916885         False          False   True
4  -16747.841885  -16810.104385  6926.593691 -16747.841885  120.325000 -16810.104385      0.075   62.187500       40.625000     2.0    -16947.916885         False          False   True
5  -16747.841885  -16788.541885  6985.968691 -16747.841885   62.162500 -16788.541885      0.075   40.625000        0.000000     3.0    -16947.916885         False          False   True
6  -16747.841885  -16747.916885  7045.343691 -16747.841885   33.081250 -16747.916885      0.075    0.000000      -40.625000     4.0    -16947.916885         False          False   True
7  -16660.988760  -16707.291885  7099.115479 -16660.988760   86.853125 -16707.291885      0.075   46.228125       -0.000088     1.0    -16661.063760          True           True  False
8  -16612.384072  -16661.038574  7099.115479 -16612.384072   94.832813 -16661.038574      0.075   48.579502      -51.395400     1.0    -16661.063760         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1125/8.[0m
[08/10 22:45:24]  --------------------------------------------------------------------------------
[08/10 22:45:24]  Iteration: 335 (0 solution, 334 counterexamples)
[08/10 22:46:19]  Generator returned sat in 42.546048 secs.
[08/10 22:46:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:46:32]  Improved gap from 325/8 to 40.625
[08/10 22:46:33]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/10 22:46:33]  Verifer returned sat in 12.466953 secs.
[08/10 22:46:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -14419.880371  -14619.830811  6949.568691 -14419.880371    0.049805 -14619.830811      0.000  199.950439      199.950204     6.0    -14619.830811            -1             -1     -1
1  -14419.880371  -14619.830566  6949.568691 -14419.880371  199.950195 -14619.830566      0.000  199.950195       99.950204     7.0    -14619.830811         False           True  False
2  -14377.950684  -14419.830575  6949.568691 -14377.950684  241.879883 -14419.830575      0.000   41.879892       41.879892     1.0    -14619.830811          True           True  False
3  -14177.950575  -14319.830575  6949.568691 -14177.950575  241.880000 -14319.830575      1.255  140.625000      140.625000     1.0    -14619.830811         False          False  False
4  -14177.950575  -14241.725575  6949.568691 -14177.950575  120.940000 -14241.725575      1.255   62.520000       40.625000     2.0    -14619.830811         False          False   True
5  -14177.950575  -14219.830575  7008.943691 -14177.950575   62.470000 -14219.830575      1.255   40.625000        0.000000     3.0    -14619.830811         False          False   True
6  -14177.950575  -14179.205575  7068.318691 -14177.950575   33.235000 -14179.205575      1.255    0.000000      -40.625000     4.0    -14619.830811         False          False   True
7  -14090.520575  -14138.580575  7121.513672 -14090.520575   87.430000 -14138.580575      1.255   46.805000       -0.000020     1.0    -14091.775575          True           True  False
8  -14041.538075  -14091.775391  7121.513916 -14041.538075   95.787500 -14091.775391      1.255   48.982315      -51.017275     1.0    -14091.775575         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1125/8.[0m
[08/10 22:46:34]  --------------------------------------------------------------------------------
[08/10 22:46:34]  Iteration: 336 (0 solution, 335 counterexamples)
[08/10 22:49:10]  Generator returned sat in 143.630188 secs.
[08/10 22:49:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:49:24]  Improved gap from 1/10 to 29.6875
[08/10 22:49:25]  Improved number of small numbers from 59 to 72 out of a max of 114
[08/10 22:49:25]  Verifer returned sat in 13.489543 secs.
[08/10 22:49:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17601.087402  -17801.187256  6686.185398 -17601.087402    0.099854 -17801.187256     0.1000  199.999854       99.999880     5.0    -17801.187256            -1             -1     -1
1  -17601.087402  -17701.187282  6686.185398 -17601.087402  199.899902 -17701.187282     0.1000   99.999880       -0.000120     5.0    -17801.187256         False           True   True
2  -17441.412282  -17501.187282  6686.185398 -17441.412282  259.675000 -17501.187282    30.0875   29.687500       29.687500     1.0    -17801.187256          True           True  False
3  -17211.524782  -17401.187282  6686.185398 -17211.524782  259.575000 -17401.187282   159.9750   29.687500       29.687500     1.0    -17371.499782         False          False   True
4  -17111.424782  -17337.332594  6686.185398 -17111.424782  129.787500 -17337.332594   160.0750   65.832813       29.687500     1.0    -17371.499782         False          False   True
5  -17111.424782  -17301.187282  6756.497898 -17111.424782   64.893750 -17301.187282   160.0750   29.687500        0.000000     2.0    -17371.499782         False          False   True
6  -17106.665407  -17271.499782  6826.810398 -17106.665407   34.446875 -17271.499782   160.0750    4.759375      -24.928125     3.0    -17371.499782         False          False   True
7  -17027.357594  -17241.812282  6872.430664 -17027.357594   84.067188 -17241.812282   160.0750   54.379688       -0.000047     1.0    -17187.432594          True           True  False
8  -16989.943532  -17187.432373  6872.430664 -16989.943532   91.793750 -17187.432373   160.0750   37.413841      -62.585984     1.0    -17187.432594         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=475/16.[0m
[08/10 22:49:26]  --------------------------------------------------------------------------------
[08/10 22:49:26]  Iteration: 337 (0 solution, 336 counterexamples)
[08/10 22:52:40]  Generator returned sat in 180.762149 secs.
[08/10 22:52:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:52:55]  Improved gap from 1/20 to 39.0625
[08/10 22:52:56]  Improved number of small numbers from 61 to 72 out of a max of 114
[08/10 22:52:56]  Verifer returned sat in 14.772924 secs.
[08/10 22:52:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -19245.370117  -19445.370117  6699.671289 -19245.370117    0.024902 -19445.370117      0.025  199.975000      199.974873     8.0    -19445.370117            -1             -1     -1
1  -19245.370117  -19445.369990  6699.671289 -19245.370117  199.974854 -19445.369990      0.025  199.974873       99.974873     8.0    -19445.370117         False           True   True
2  -19106.257490  -19245.369990  6699.671289 -19106.257490  339.087500 -19245.369990      0.050  139.062500      139.062500     1.0    -19445.370117          True           True  False
3  -19006.232490  -19147.727803  6699.671289 -19006.232490  239.087500 -19147.727803      0.075  141.420312      139.062500     2.0    -19006.307490         False          False   True
4  -19006.232490  -19068.104365  6699.671289 -19006.232490  119.543750 -19068.104365      0.075   61.796875       39.062500     2.0    -19006.307490         False          False   True
5  -19006.232490  -19045.369990  6760.608789 -19006.232490   61.771875 -19045.369990      0.075   39.062500        0.000000     3.0    -19006.307490         False          False   True
6  -19006.232490  -19006.307490  6821.546289 -19006.232490   32.885937 -19006.307490      0.075    0.000000      -39.062500     4.0    -19006.307490         False          False   True
7  -18918.079365  -18967.244990  6872.430664 -18918.079365   88.153125 -18967.244990      0.075   49.090625       -0.025000     1.0    -19006.307490         False           True  False
8  -18871.663740  -18918.129150  6872.430664 -18871.663740   95.506250 -18918.129150      0.075   46.390410      -53.609375     1.0    -19006.307490         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2225/16.[0m
[08/10 22:52:57]  --------------------------------------------------------------------------------
[08/10 22:52:57]  Iteration: 338 (0 solution, 337 counterexamples)
[08/10 22:53:48]  Generator returned sat in 38.795231 secs.
[08/10 22:53:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:54:03]  Improved gap from 625/16 to 39.0625
[08/10 22:54:05]  Improved number of small numbers from 59 to 77 out of a max of 114
[08/10 22:54:05]  Verifer returned sat in 14.808760 secs.
[08/10 22:54:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -15808.506592  -15967.336426  6699.671289 -15808.506592  241.119873 -15967.336426       0.00  158.829834       58.830015     8.0    -15967.336426            -1             -1     -1
1  -15726.216553  -15808.456543  6699.671289 -15726.216553  241.119873 -15808.456543       0.00   82.239990       41.120054     1.0    -15967.336426         False           True  False
2  -15567.386719  -15669.244107  6699.671289 -15567.386719  241.069824 -15669.244107       0.00  101.857388       99.949888     1.0    -15567.386719         False          False  False
3  -15428.224107  -15567.336607  6699.671289 -15428.224107  241.020000 -15567.336607       0.05  139.062500      139.062500     1.0    -15428.274107         False          False  False
4  -15428.224107  -15490.579107  6699.671289 -15428.224107  120.510000 -15490.579107       0.05   62.305000       39.062500     2.0    -15428.274107         False          False   True
5  -15428.224107  -15467.336607  6760.608789 -15428.224107   62.255000 -15467.336607       0.05   39.062500        0.000000     3.0    -15428.274107         False          False   True
6  -15428.224107  -15428.274107  6821.546143 -15428.224107   33.127500 -15428.274107       0.05    0.000000      -39.062646     4.0    -15428.274107         False          False   True
7  -15340.629107  -15379.691607  6872.963623 -15340.629107   87.595000 -15379.691607       0.05   39.012500       -0.050166     1.0    -15428.274107         False           True  False
8  -15278.900357  -15340.628906  6872.963623 -15278.900357  100.741250 -15340.628906       0.05   61.678550      -38.321416     1.0    -15428.274107         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2225/16.[0m
[08/10 22:54:05]  --------------------------------------------------------------------------------
[08/10 22:54:05]  Iteration: 339 (0 solution, 338 counterexamples)
[08/10 23:00:15]  Generator returned sat in 358.359901 secs.
[08/10 23:00:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:00:25]  Improved gap from 1/10 to 32.8125
[08/10 23:00:26]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/10 23:00:26]  Verifer returned sat in 9.354206 secs.
[08/10 23:00:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -15800.031006  -15999.985773  5914.184092 -15800.031006    0.045455 -15999.985773   0.000000  199.954768       99.954768     9.0    -15999.985773            -1             -1     -1
1  -15767.892023  -15799.985840  5914.184092 -15767.892023  232.093750 -15799.985840   0.000000   32.093816       32.093750     1.0    -15999.985773         False           True  False
2  -15699.940186  -15699.985773  5914.184092 -15699.940186  100.045654 -15699.985773   0.000000    0.045588        0.045588     1.0    -15699.940186         False          False  False
3  -15667.082364  -15699.894864  5981.280683 -15667.082364   32.903409 -15699.894864   0.000000   32.812500        0.000000     1.0    -15667.082364         False          False  False
4  -15534.897705  -15567.082364  5981.280683 -15534.897705  164.997159 -15567.082364   0.045455   32.139205       32.139205     1.0    -15667.082364         False          False  False
5  -15534.897705  -15567.082364  6048.468018 -15534.897705    1.000000 -15567.082364   0.045455   32.139205       -0.673461     1.0    -15667.082364         False          False   True
6  -15500.585205  -15533.231039  6114.616857 -15500.585205   66.451705 -15533.231039   0.045455   32.600379       -0.212121     1.0    -15667.082364         False          False   True
7  -15417.127819  -15500.418539  6131.326172 -15417.127819  116.057765 -15500.418539   0.045455   83.245265       -0.045420     1.0    -15667.082364         False          False   True
8  -15409.512289  -15417.127686  6198.513428 -15409.512289   90.860795 -15417.127686   0.045455    7.569942      -25.242634     1.0    -15667.082364         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=11313/352.[0m
[08/10 23:00:27]  --------------------------------------------------------------------------------
[08/10 23:00:27]  Iteration: 340 (0 solution, 339 counterexamples)
[08/10 23:05:17]  Generator returned sat in 277.199356 secs.
[08/10 23:05:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:05:29]  Improved gap from 1/20 to 42.1875
[08/10 23:05:30]  Improved number of small numbers from 66 to 79 out of a max of 114
[08/10 23:05:30]  Verifer returned sat in 11.544538 secs.
[08/10 23:05:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -14902.325928  -15202.275879  5116.474512 -14902.325928  299.949951 -15202.275879       0.00  299.949951      199.950098     7.0    -15202.275879            -1             -1     -1
1  -14902.325928  -15102.176270  5116.474512 -14902.325928  299.900146 -15102.176270       0.00  199.850342       99.950098     3.0    -14902.325928         False           True  False
2  -14802.326172  -14902.276025  5116.474512 -14802.326172  299.850098 -14902.276025       0.00   99.949854       99.949854     1.0    -14802.326172         False          False  False
3  -14660.038525  -14802.276025  5116.474512 -14660.038525  242.237500 -14802.276025       0.05  142.187500      142.187500     1.0    -14660.088525         False          False  False
4  -14660.038525  -14722.947900  5116.474512 -14660.038525  121.618750 -14722.947900       0.05   62.859375       42.187500     2.0    -14660.088525         False          False   True
5  -14660.038525  -14702.276025  5174.287012 -14660.038525   62.809375 -14702.276025       0.05   42.187500        0.000000     3.0    -14660.088525         False          False   True
6  -14660.038525  -14660.088525  5232.099512 -14660.038525   33.404688 -14660.088525       0.05    0.000000      -42.187500     4.0    -14660.088525         False          False   True
7  -14573.742432  -14617.901025  5287.990723 -14573.742432   86.296094 -14617.901025       0.05   44.108594       -0.000195     1.0    -14660.088525         False           True  False
8  -14523.679541  -14573.742432  5287.990967 -14523.679541   94.171484 -14573.742432       0.05   50.012891      -49.937061     1.0    -14660.088525         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2275/16.[0m
[08/10 23:05:31]  --------------------------------------------------------------------------------
[08/10 23:05:31]  Iteration: 341 (0 solution, 340 counterexamples)
[08/10 23:12:02]  Generator returned sat in 378.100927 secs.
[08/10 23:12:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:04]  Improved gap from 241/320 to 23.4375
[08/10 23:12:04]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 23:12:04]  Verifer returned sat in 1.156784 secs.
[08/10 23:12:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14883.626221  -15083.625977  5097.724365 -14883.626221    0.100098 -15083.625977        0.0  199.999756      199.899902     2.0    -15083.625977            -1             -1    True
1  -14660.088623  -15083.526123  5097.724365 -14660.088623  423.537354 -15083.526123        0.0  423.437500      323.437500     2.0    -15083.625977         False          False    True
2  -14660.088623  -14883.526123  5097.724365 -14660.088623  423.337500 -14883.526123        0.0  223.437500      223.437500     2.0    -14660.088623         False          False    True
3  -14660.088623  -14783.526123  5097.724365 -14660.088623  102.450000 -14783.526123        0.0  123.437500      123.437500     3.0    -14660.088623         False          False    True
4  -14660.088623  -14686.551270  5097.724365 -14660.088623   51.725000 -14686.551270        0.0   26.462646       23.437500     4.0    -14660.088623         False          False    True
5  -14660.088623  -14683.526123  5174.286865 -14660.088623   26.362500 -14683.526123        0.0   23.437500        0.000000     5.0    -14660.088623         False          False    True
6  -14660.088623  -14660.088623  5250.849365 -14660.088623   13.681250 -14660.088623        0.0    0.000000      -23.437500     6.0    -14660.088623         False          False    True
7  -14536.651123  -14636.651123  5250.849365 -14536.651123  123.437500 -14636.651123        0.0  100.000000        0.000000     1.0    -14660.088623         False           True   False
8  -14536.651123  -14536.651123  5250.849365 -14536.651123   49.900146 -14536.651123        0.0    0.000000     -100.000000     2.0    -14660.088623         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=25883/80.[0m
[08/10 23:12:05]  --------------------------------------------------------------------------------
[08/10 23:12:05]  Iteration: 342 (0 solution, 341 counterexamples)
[08/10 23:16:28]  Generator returned sat in 250.984160 secs.
[08/10 23:16:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:16:30]  Improved gap from 0 to 23.4375
[08/10 23:16:31]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 23:16:31]  Verifer returned sat in 1.219585 secs.
[08/10 23:16:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14660.138428  -14783.526123  5097.724365 -14660.138428  123.437256 -14783.526123    0.000000  123.387695      123.237793     2.0    -14783.526123            -1             -1   False
1  -14660.088867  -14683.376221  5097.724365 -14660.088867  123.437256 -14683.376221    0.000000   23.287354       23.287354     2.0    -14783.526123         False          False   False
2  -14559.988525  -14660.088623  5097.724365 -14559.988525  123.387695 -14660.088623    0.050049  100.050049       23.337646     1.0    -14560.038574         False          False   False
3  -13906.038574  -14483.376221  5097.724365 -13906.038574  754.000000 -14483.376221  554.000000   23.337646       23.337646     1.0    -14560.038574         False          False    True
4  -13550.376221  -14386.450928  5097.724365 -13550.376221  379.000000 -14386.450928  809.662354   26.412354       23.337646     1.0    -14560.038574         False          False    True
5  -13385.288574  -14357.738525  5097.724365 -13385.288574  191.500000 -14357.738525  874.750000   97.699951       23.337646     1.0    -14560.038574         False          False    True
6  -13385.238525  -14283.375977  5174.286621 -13385.238525   97.750000 -14283.375977  874.750000   23.387451       -0.050049     2.0    -14560.038574         False          False    True
7  -13361.750977  -14259.938477  5250.849121 -13361.750977   46.875000 -14259.938477  874.750000   23.437500        0.000000     1.0    -14560.038574         False          False    True
8  -13361.750977  -14236.500977  5250.849365 -13361.750977   21.437500 -14236.500977  874.750000    0.000000      -99.999756     2.0    -14560.038574         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=95591/4096.[0m
[08/10 23:16:31]  --------------------------------------------------------------------------------
[08/10 23:16:31]  Iteration: 343 (0 solution, 342 counterexamples)
[08/10 23:17:30]  Generator returned sat in 45.646995 secs.
[08/10 23:17:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:17:32]  Improved gap from 351/16 to 23.4375
[08/10 23:17:32]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 23:17:32]  Verifer returned sat in 1.293389 secs.
[08/10 23:17:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -13051.636230  -13075.173828  5097.724121 -13051.636230    0.099854 -13075.173828    0.000000   23.537598       -0.100098     2.0    -13075.173828            -1             -1    True
1  -12925.273926  -13051.536133  5097.724121 -12925.273926  149.899902 -13051.536133    0.000000  126.262207       26.262207     1.0    -13075.173828         False          False    True
2  -12901.736328  -12925.173828  5147.924316 -12901.736328  149.799805 -12925.173828    0.000000   23.437500        0.000000     1.0    -12901.736328         False          False    True
3  -12143.173828  -12901.636230  5147.924316 -12143.173828  782.000000 -12901.636230  632.199951  126.262451       26.362549     1.0    -12901.736328         False          False    True
4  -11878.436279  -12701.736328  5147.924316 -11878.436279  391.000000 -12701.736328  796.937500   26.362549       26.362549     1.0    -12901.736328         False          False    True
5  -11709.298828  -12673.223877  5147.924316 -11709.298828  195.500000 -12673.223877  866.074951   97.850098       26.362549     1.0    -12901.736328         False          False    True
6  -11709.298828  -12598.711182  5221.461670 -11709.298828   97.750000 -12598.711182  866.074951   23.337402       -0.100098     2.0    -12901.736328         False          False    True
7  -11685.761230  -12575.273682  5298.024170 -11685.761230   46.875000 -12575.273682  866.074951   23.437500        0.000000     1.0    -12901.736328         False          False    True
8  -11685.761230  -12551.836182  5298.024414 -11685.761230   21.437500 -12551.836182  866.074951    0.000000      -99.999756     2.0    -12901.736328         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=107981/4096.[0m
[08/10 23:17:33]  --------------------------------------------------------------------------------
[08/10 23:17:33]  Iteration: 344 (0 solution, 343 counterexamples)
[08/10 23:20:39]  Generator returned sat in 172.920420 secs.
[08/10 23:20:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:20:41]  Improved gap from 351/16 to 23.4375
[08/10 23:20:42]  Improved number of small numbers from 95 to 114 out of a max of 114
[08/10 23:20:42]  Verifer returned sat in 1.772137 secs.
[08/10 23:20:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -13557.274658  -13680.761963  5068.436523 -13557.274658    0.099854 -13680.761963    0.000000  123.487305      123.437500     2.0    -13680.761963            -1             -1   False
1  -13557.274658  -13680.712158  5068.436523 -13557.274658  123.487305 -13680.712158    0.000000  123.437500       23.437500     2.0    -13680.761963         False          False   False
2  -13557.274658  -13580.712158  5144.999023 -13557.274658  123.437500 -13580.712158    0.000000   23.437500        0.000000     3.0    -13557.274658         False          False   False
3  -12770.712158  -13557.274414  5144.999023 -12770.712158  810.000000 -13557.274414  663.074951  123.487305       23.487549     1.0    -13557.274658         False          False   False
4  -12491.199463  -13360.249756  5144.999023 -12491.199463  403.000000 -13360.249756  842.587646   26.462646       23.487549     1.0    -13557.274658         False          False    True
5  -12318.162109  -13331.587158  5144.999023 -12318.162109  199.500000 -13331.587158  915.625000   97.800049       23.487549     1.0    -13557.274658         False          False    True
6  -12318.162109  -13257.174561  5221.461426 -12318.162109   97.750000 -13257.174561  915.625000   23.387451       -0.050049     2.0    -13557.274658         False          False    True
7  -12294.674561  -13233.737061  5298.023926 -12294.674561   46.875000 -13233.737061  915.625000   23.437500        0.000000     1.0    -13557.274658         False          False    True
8  -12294.674561  -13210.299561  5298.024170 -12294.674561   21.437500 -13210.299561  915.625000    0.000000      -99.999756     2.0    -13557.274658         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=96205/4096.[0m
[08/10 23:20:42]  --------------------------------------------------------------------------------
[08/10 23:20:42]  Iteration: 345 (0 solution, 344 counterexamples)
[08/10 23:21:56]  Generator returned sat in 60.754983 secs.
[08/10 23:21:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:21:58]  Improved gap from 375/16 to 23.4375
[08/10 23:21:59]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 23:21:59]  Verifer returned sat in 1.392480 secs.
[08/10 23:21:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15114.887207  -15314.987061  5144.998779 -15114.887207    0.100000 -15314.987061     0.000000  200.099854      100.099854     2.0    -15314.987061            -1             -1   False
1  -15114.887207  -15214.987061  5144.998779 -15114.887207    0.100000 -15214.987061     0.000000  100.099854        0.099854     2.0    -15314.987061         False          False   False
2  -14439.886963  -15014.987305  5144.998779 -14439.886963  775.100098 -15014.987305   574.900146    0.200195        0.199951     1.0    -15314.987061         False          False   False
3  -13665.087158  -14914.987061  5144.998779 -13665.087158  775.000000 -14914.987061  1249.699951    0.199951        0.199951     1.0    -14914.787109         False          False    True
4  -13277.287109  -14814.987061  5144.998779 -13277.287109  388.000000 -14814.987061  1537.500000    0.199951        0.199951     1.0    -14914.787109         False          False    True
5  -13082.987061  -14812.637207  5144.998779 -13082.987061  194.500000 -14812.637207  1631.800049   97.850098        0.199951     1.0    -14914.787109         False          False    True
6  -13082.987061  -14714.887207  5221.461426 -13082.987061   97.750000 -14714.887207  1631.800049    0.100098      -23.337402     2.0    -14914.787109         False          False    True
7  -13036.212158  -14691.449707  5298.023926 -13036.212158   46.875000 -14691.449707  1631.800049   23.437500        0.000000     1.0    -14914.787109         False          False    True
8  -13036.212158  -14668.012207  5374.586426 -13036.212158   21.437500 -14668.012207  1631.800049    0.000000      -23.437500     2.0    -14914.787109         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/10 23:22:00]  --------------------------------------------------------------------------------
[08/10 23:22:00]  Iteration: 346 (0 solution, 345 counterexamples)
[08/10 23:28:11]  Generator returned sat in 359.095153 secs.
[08/10 23:28:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:28:15]  Improved gap from 375/16 to 23.4375
[08/10 23:28:15]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 23:28:15]  Verifer returned sat in 2.981436 secs.
[08/10 23:28:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -13590.150635  -13790.350586  3620.362061 -13590.150635  200.399902 -13790.350586     0.000000  200.199951      100.199951     2.0    -13790.350586            -1             -1    True
1  -13590.050781  -13690.350342  3620.362061 -13590.050781  200.299805 -13690.350342     0.099854  100.199707        0.199951     2.0    -13590.150635         False          False    True
2  -12925.150635  -13490.350586  3620.362061 -12925.150635  765.099854 -13490.350586   565.000000    0.199951        0.199951     1.0    -13590.150635         False          False    True
3  -12160.350586  -13413.788086  3620.362061 -12160.350586  765.000000 -13413.788086  1229.800049   23.637451        0.199951     1.0    -13390.150635         False          False    True
4  -11801.988037  -13293.075684  3620.362061 -11801.988037  382.000000 -13293.075684  1488.162598    2.925049        0.199951     1.0    -13390.150635         False          False    True
5  -11614.413086  -13261.463135  3620.362061 -11614.413086  190.500000 -13261.463135  1575.737549   71.312500        0.199951     1.0    -13390.150635         False          False    True
6  -11590.975586  -13190.050781  3696.624756 -11590.975586   94.750000 -13190.050781  1575.737549   23.337646       -0.099854     1.0    -13390.150635         False          False    True
7  -11567.438232  -13166.613281  3773.187256 -11567.438232   46.875000 -13166.613281  1575.737549   23.437500        0.000000     1.0    -13390.150635         False          False    True
8  -11567.438232  -13143.175781  3849.749756 -11567.438232   22.937500 -13143.175781  1575.737549    0.000000      -23.437500     2.0    -13390.150635         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/10 23:28:16]  --------------------------------------------------------------------------------
[08/10 23:28:16]  Iteration: 347 (0 solution, 346 counterexamples)
[08/10 23:38:35]  Generator returned sat in 605.438722 secs.
[08/10 23:38:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:38:48]  Improved gap from 374579/16384 to 39.0625
[08/10 23:38:50]  Improved number of small numbers from 56 to 70 out of a max of 114
[08/10 23:38:50]  Verifer returned sat in 13.249228 secs.
[08/10 23:38:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16647.205322  -16847.205078  6677.216683 -16647.205322  200.039307 -16847.205078   0.000000  199.999756       99.999886     2.0    -16847.205078            -1             -1   False
1  -16647.205078  -16747.205209  6677.216683 -16647.205078  200.000000 -16747.205209   0.000000  100.000130        0.000130     2.0    -16647.205078         False          False   False
2  -16408.103204  -16547.623959  6677.216683 -16408.103204  339.102005 -16547.623959   0.039505  139.481250      139.062500     1.0    -16647.205078         False          False   False
3  -16308.063699  -16447.205209  6677.216683 -16308.063699  239.520755 -16447.205209   0.079009  139.062500      139.062500     2.0    -16308.142709         False          False    True
4  -16308.063699  -16370.062402  6677.216683 -16308.063699  119.760377 -16370.062402   0.079009   61.919693       39.062500     2.0    -16308.142709         False          False    True
5  -16308.063699  -16347.205209  6738.154183 -16308.063699   61.880189 -16347.205209   0.079009   39.062500        0.000000     3.0    -16308.142709         False          False    True
6  -16308.063699  -16308.142709  6799.091553 -16308.063699   32.940094 -16308.142709   0.079009    0.000000      -39.062630     4.0    -16308.142709         False          False    True
7  -16220.062402  -16259.203911  6850.152832 -16220.062402   88.001297 -16259.203911   0.079009   39.062500       -0.000054     1.0    -16308.142709         False           True   False
8  -16157.695008  -16220.102051  6850.153076 -16157.695008  101.429894 -16220.102051   0.079009   62.328033      -37.632416     1.0    -16308.142709         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=2225/16.[0m
[08/10 23:38:51]  --------------------------------------------------------------------------------
[08/10 23:38:51]  Iteration: 348 (0 solution, 347 counterexamples)
[08/10 23:40:59]  Generator returned sat in 115.456160 secs.
[08/10 23:41:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:41:08]  Improved gap from 0 to 48.4375
[08/10 23:41:08]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 23:41:08]  Verifer returned sat in 7.026277 secs.
[08/10 23:41:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17256.255371  -17356.205322  6677.216553 -17256.255371  248.437256 -17356.205322   0.000000   99.949951       99.949951     9.0    -17356.205322            -1             -1     -1
1  -17107.767822  -17256.205566  6677.216553 -17107.767822  248.437500 -17256.205566   0.050049  148.387695      148.387451     1.0    -17356.205322         False           True  False
2  -17007.718018  -17156.205322  6677.216553 -17007.718018  248.437500 -17156.205322   0.099854  148.387451      148.387451     2.0    -17356.205322         False          False   True
3  -16858.230469  -17056.205322  6677.216553 -16858.230469  297.875000 -17056.205322  49.587402  148.387451      148.387451     2.0    -17356.205322         False          False   True
4  -16858.180420  -16956.205322  6677.216553 -16858.180420  148.437500 -16956.205322  49.587402   48.437500       48.437500     2.0    -17356.205322         False          False   True
5  -16858.180420  -16956.205322  6728.779053 -16858.180420    2.000000 -16956.205322  49.587402   48.437500        0.000000     2.0    -17356.205322         False          False   True
6  -16858.180420  -16907.767822  6780.341553 -16858.180420    2.000000 -16907.767822  49.587402    0.000000      -48.437500     3.0    -17356.205322         False          False   True
7  -16780.961670  -16859.330322  6831.904053 -16780.961670   77.218750 -16859.330322  49.587402   28.781250      -19.656250     1.0    -16830.549072          True           True  False
8  -16720.696045  -16806.255127  6831.904053 -16720.696045   89.046875 -16806.255127  49.587402   35.971680      -59.390625     1.0    -16830.549072         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=607795/4096.[0m
[08/10 23:41:08]  --------------------------------------------------------------------------------
[08/10 23:41:08]  Iteration: 349 (0 solution, 348 counterexamples)
[08/10 23:50:23]  Generator returned sat in 541.841229 secs.
[08/10 23:50:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:50:29]  Improved gap from 0 to 48.4375
[08/10 23:50:30]  Improved number of small numbers from 70 to 76 out of a max of 114
[08/10 23:50:30]  Verifer returned sat in 5.432559 secs.
[08/10 23:50:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -17058.48042  -17506.917920  6725.654053 -17058.48042    0.099854 -17506.917920        0.0  448.437500       448.43750     5.0     -17506.91792            -1             -1   False
1   -17058.38042  -17406.917969  6725.654053 -17058.38042  448.537500 -17406.917969        0.1  348.437549       348.43750     5.0     -17506.91792         False          False   False
2   -17058.38042  -17306.917969  6725.654053 -17058.38042    0.100000 -17306.917969        0.1  248.437549       248.43750     6.0     -17058.48042         False          False    True
3   -17058.38042  -17206.917920  6725.654053 -17058.38042  211.700000 -17206.917920        0.1  148.437500       148.43750     6.0     -17058.48042         False          False    True
4   -17058.38042  -17111.505420  6725.654053 -17058.38042  105.850000 -17111.505420        0.1   53.025000        48.43750     6.0     -17058.48042         False          False    True
5   -17058.38042  -17106.917920  6777.216553 -17058.38042   52.925000 -17106.917920        0.1   48.437500         0.00000     6.0     -17058.48042         False          False    True
6   -17058.38042  -17058.480420  6828.779053 -17058.38042   26.462500 -17058.480420        0.1    0.000000       -48.43750     7.0     -17058.48042         False          False    True
7   -16970.93042  -17010.042920  6880.341553 -16970.93042   87.450000 -17010.042920        0.1   39.012500        -9.42500     1.0     -17058.48042         False           True   False
8   -16915.48667  -16961.605225  6880.341553 -16915.48667   94.456250 -16961.605225        0.1   46.018555       -53.98125     1.0     -17058.48042         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/10 23:50:31]  --------------------------------------------------------------------------------
[08/10 23:50:31]  Iteration: 350 (0 solution, 349 counterexamples)
[08/10 23:53:48]  Generator returned sat in 183.615042 secs.
[08/10 23:53:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:53:50]  Improved gap from 7783/16384 to 23.4375
[08/10 23:53:51]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 23:53:51]  Verifer returned sat in 1.587124 secs.
[08/10 23:53:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16909.730469  -17009.830322  6725.653809 -16909.730469    0.200195 -17009.830322    0.000000  100.099854        0.099854     4.0    -17009.830322            -1             -1   False
1  -16909.730469  -16909.830322  6725.654053 -16909.730469    0.100098 -16909.830322    0.000000    0.099854      -99.899902     2.0    -16909.730469         False          False   False
2  -16686.192871  -16809.830566  6725.654053 -16686.192871  223.637451 -16809.830566    0.100098  123.537598       23.537598     1.0    -16909.730469         False          False   False
3  -16052.730469  -16690.980469  6725.654053 -16052.730469  757.000000 -16690.980469  533.562500  104.687500       23.537598     2.0    -16909.730469         False          False    True
4  -15779.417969  -16512.755615  6725.654053 -15779.417969  378.000000 -16512.755615  706.875000   26.462646       23.537598     1.0    -16909.730469         False          False    True
5  -15617.380615  -16486.192871  6725.654053 -15617.380615  188.500000 -16486.192871  768.912354   99.899902       23.537598     1.0    -16909.730469         False          False    True
6  -15617.380615  -16409.830322  6802.116455 -15617.380615   93.750000 -16409.830322  768.912354   23.537354        0.000000     2.0    -16909.730469         False          False    True
7  -15594.042969  -16386.292969  6878.678955 -15594.042969   46.875000 -16386.292969  768.912354   23.337646       -0.099854     3.0    -16909.730469         False          False    True
8  -15593.943115  -16362.855469  6955.241455 -15593.943115   23.437500 -16362.855469  768.912354    0.000000      -23.437500     1.0    -16909.730469         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=48205/2048.[0m
[08/10 23:53:52]  --------------------------------------------------------------------------------
[08/10 23:53:52]  Iteration: 351 (0 solution, 350 counterexamples)
[08/10 23:55:03]  Generator returned sat in 58.568852 secs.
[08/10 23:55:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:55:06]  Improved gap from 371/16 to 23.4375
[08/10 23:55:06]  Improved number of small numbers from 111 to 112 out of a max of 114
[08/10 23:55:06]  Verifer returned sat in 1.918722 secs.
[08/10 23:55:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16582.018066  -16782.017822  6725.653809 -16582.018066    0.200195 -16782.017822        0.0  199.999756       99.999902     4.0    -16782.017822            -1             -1   False
1  -16582.018066  -16682.017822  6725.653809 -16582.018066    0.100098 -16682.017822        0.0   99.999756       -0.000098     4.0    -16582.018066         False          False   False
2  -16478.417969  -16582.017969  6725.653809 -16478.417969  203.599854 -16582.017969        0.0  103.600000        3.600000     1.0    -16582.018066         False          False   False
3  -15807.817969  -16478.317969  6725.653809 -15807.817969  774.200000 -16478.317969      570.5  100.000000        3.700000     1.0    -16582.018066         False          False   False
4  -15522.217969  -16282.017969  6725.653809 -15522.217969  385.600000 -16282.017969      756.1    3.700000        3.700000     1.0    -16582.018066         False          False    True
5  -15334.617969  -16272.568115  6725.653809 -15334.617969  191.300000 -16272.568115      843.7   94.250146        3.700000     1.0    -16582.018066         False          False    True
6  -15334.617969  -16182.017969  6802.216309 -15334.617969   94.150000 -16182.017969      843.7    3.700000      -19.737500     2.0    -16582.018066         False          False    True
7  -15291.242969  -16158.580322  6878.578809 -15291.242969   47.075000 -16158.580322      843.7   23.637354        0.000000     1.0    -16582.018066         False          False    True
8  -15291.242969  -16134.942969  6878.578857 -15291.242969   23.537500 -16134.942969      843.7    0.000000      -99.999951     2.0    -16582.018066         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=37/10.[0m
[08/10 23:55:07]  --------------------------------------------------------------------------------
[08/10 23:55:07]  Iteration: 352 (0 solution, 351 counterexamples)
[08/10 23:59:36]  Generator returned sat in 256.053980 secs.
[08/10 23:59:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:59:39]  Improved gap from 1/32 to 23.4375
[08/10 23:59:41]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 23:59:41]  Verifer returned sat in 2.882442 secs.
[08/10 23:59:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15385.790039  -15385.790094  5919.273955 -15385.790039  323.587402 -15385.790094       0.00    0.000055        0.000055     3.0    -15385.790094            -1             -1   False
1  -15062.252594  -15309.277594  5919.273955 -15062.252594  323.537500 -15309.277594       0.05  246.975000      223.487500     1.0    -15062.302594         False          False   False
2  -14985.690094  -15185.890094  5919.273955 -14985.690094  323.537500 -15185.890094       0.05  200.150000      200.050000     2.0    -15062.302594         False          False    True
3  -14862.302594  -15085.790283  5919.273955 -14862.302594  323.537500 -15085.790283       0.05  223.437689      223.437500     3.0    -15062.302594         False          False    True
4  -14862.302594  -14985.790094  5919.273955 -14862.302594  161.768750 -14985.790094       0.05  123.437500      123.437500     3.0    -15062.302594         False          False    True
5  -14862.302594  -14985.739990  5919.273955 -14862.302594   80.884375 -14985.739990       0.05  123.387396       23.437500     3.0    -15062.302594         False          False    True
6  -14862.302594  -14885.790094  5995.836455 -14862.302594   40.442188 -14885.790094       0.05   23.437500        0.000000     4.0    -15062.302594         False          False    True
7  -14862.302594  -14862.352594  6072.398926 -14862.302594   20.221094 -14862.352594       0.05    0.000000      -23.437529     5.0    -15062.302594         False          False    True
8  -14738.865094  -14838.915039  6072.398926 -14738.865094  123.437500 -14838.915039       0.05   99.999945       -0.000029     1.0    -14738.915094          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=17879/80.[0m
[08/10 23:59:41]  --------------------------------------------------------------------------------
[08/10 23:59:41]  Iteration: 353 (0 solution, 352 counterexamples)
[08/11 00:05:59]  Generator returned sat in 363.796533 secs.
[08/11 00:06:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:06:03]  Improved gap from 1/20 to 23.4375
[08/11 00:06:03]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/11 00:06:03]  Verifer returned sat in 2.771820 secs.
[08/11 00:06:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15084.002441  -15284.002686  5717.486328 -15084.002441    0.099854 -15284.002686    0.000000  200.000244      100.000244     5.0    -15284.002686            -1             -1   False
1  -15083.702637  -15084.002686  5717.486328 -15083.702637  200.300049 -15084.002686    0.100098    0.199951        0.199951     6.0    -15284.002686         False          False   False
2  -14983.902588  -15084.002441  5717.486328 -14983.902588  100.000000 -15084.002441    0.100098   99.999756        0.000000     7.0    -14984.002686          True           True    True
3  -14921.465088  -14945.002686  5755.048828 -14921.465088  162.437256 -14945.002686    0.100098   23.437500        0.000000     1.0    -14984.002686         False           True   False
4  -14605.902588  -14821.565186  5755.048828 -14605.902588  339.000000 -14821.565186  215.462646    0.199951        0.199951     1.0    -14984.002686         False          False   False
5  -14434.602539  -14809.215088  5755.048828 -14434.602539  171.500000 -14809.215088  286.762695   87.849854        0.199951     1.0    -14984.002686         False          False    True
6  -14434.602539  -14721.365234  5831.411377 -14434.602539   87.750000 -14721.365234  286.762695    0.000000      -23.437500     2.0    -14984.002686         False          False    True
7  -14389.727539  -14697.927734  5907.973877 -14389.727539   44.875000 -14697.927734  286.762695   21.437500       -2.000000     1.0    -14984.002686         False          False    True
8  -14387.727539  -14674.490234  5907.973877 -14387.727539   23.437500 -14674.490234  286.762695    0.000000     -100.000000     1.0    -14984.002686         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/11 00:06:04]  --------------------------------------------------------------------------------
[08/11 00:06:04]  Iteration: 354 (0 solution, 353 counterexamples)
[08/11 00:06:59]  Generator returned sat in 41.929998 secs.
[08/11 00:07:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:07:03]  Improved gap from 367/16 to 23.4375
[08/11 00:07:04]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 00:07:04]  Verifer returned sat in 2.961261 secs.
[08/11 00:07:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14628.449951  -15026.150391  5467.658936 -14628.449951  423.537354 -15026.150391   0.000000  397.700439      397.700439     5.0    -15026.150391            -1             -1   False
1  -14602.612793  -14926.150391  5467.658936 -14602.612793  423.537598 -14926.150391   0.100098  323.437500      323.437500     5.0    -15026.150391         False          False   False
2  -14602.612793  -14826.150391  5467.658936 -14602.612793    0.100098 -14826.150391   0.100098  223.437500      223.437500     4.0    -14602.712891         False          False    True
3  -14602.612793  -14826.150391  5467.658936 -14602.612793   96.150000 -14826.150391   0.100098  223.437500      123.437500     4.0    -14602.712891         False          False    True
4  -14602.612793  -14628.350342  5467.658936 -14602.612793   49.075000 -14628.350342   0.100098   25.637451       23.437500     4.0    -14602.712891         False          False    True
5  -14602.612793  -14626.150391  5544.221436 -14602.612793   25.537500 -14626.150391   0.100098   23.437500        0.000000     5.0    -14602.712891         False          False    True
6  -14602.612793  -14602.712891  5620.783936 -14602.612793   13.768750 -14602.712891   0.100098    0.000000      -23.437500     6.0    -14602.712891         False          False    True
7  -14379.175293  -14579.275391  5620.783936 -14379.175293  223.437500 -14579.275391   0.100098  200.000000      100.000000     1.0    -14602.712891         False           True   False
8  -14379.175293  -14479.275391  5620.783936 -14379.175293   49.074951 -14479.275391   0.100098  100.000000        0.000000     2.0    -14602.712891         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=5175/16.[0m
[08/11 00:07:04]  --------------------------------------------------------------------------------
[08/11 00:07:04]  Iteration: 355 (0 solution, 354 counterexamples)
[08/11 00:12:23]  Generator returned sat in 304.644157 secs.
[08/11 00:12:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:12:27]  Improved gap from 1023/10240 to 48.4375
[08/11 00:12:29]  Improved number of small numbers from 60 to 68 out of a max of 114
[08/11 00:12:29]  Verifer returned sat in 4.452584 secs.
[08/11 00:12:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -13907.235997  -14455.673497  4797.182042 -13907.235997    0.050049 -14455.673497       0.00  548.437500      448.437500     6.0    -14455.673497            -1             -1   False
1  -13907.185997  -14355.673340  4797.182042 -13907.185997  548.487500 -14355.673340       0.05  448.437343      348.437500     6.0    -14455.673497         False          False   False
2  -13907.185997  -14155.673584  4797.182042 -13907.185997   20.504639 -14155.673584       0.05  248.437587      248.437500     6.0    -13907.235997         False          False    True
3  -13907.185997  -14055.673497  4797.182042 -13907.185997  186.330303 -14055.673497       0.05  148.437500      148.437500     4.0    -13907.235997         False          False    True
4  -13907.185997  -13955.889406  4797.182042 -13907.185997   94.165152 -13955.889406       0.05   48.653409       48.437500     5.0    -13907.235997         False          False    True
5  -13907.185997  -13955.673497  4848.744542 -13907.185997   48.082576 -13955.673497       0.05   48.437500        0.000000     6.0    -13907.235997         False          False    True
6  -13907.185997  -13907.235997  4900.307042 -13907.185997   25.041288 -13907.235997       0.05    0.000000      -48.437500     7.0    -13907.235997         False          False    True
7  -13818.946603  -13858.798497  4947.447998 -13818.946603   88.239394 -13858.798497       0.05   39.801894      -13.057150     1.0    -13907.235997         False           True   False
8  -13764.583345  -13805.939209  4947.447998 -13764.583345   94.165152 -13805.939209       0.05   41.305864      -58.693892     1.0    -13907.235997         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/11 00:12:30]  --------------------------------------------------------------------------------
[08/11 00:12:30]  Iteration: 356 (0 solution, 355 counterexamples)
[08/11 00:14:04]  Generator returned sat in 81.673179 secs.
[08/11 00:14:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:14:10]  Improved gap from 0 to 48.4375
[08/11 00:14:11]  Improved number of small numbers from 68 to 79 out of a max of 114
[08/11 00:14:11]  Verifer returned sat in 5.206002 secs.
[08/11 00:14:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -14322.595944  -14771.133545  4792.760498 -14322.595944    0.049805 -14771.133545       0.05  448.487601       448.43750     5.0    -14771.133545            -1             -1     -1
1  -14322.595944  -14771.083252  4792.760498 -14322.595944    0.050000 -14771.083252       0.05  448.437308       348.43750     2.0    -14771.133545         False          False   True
2  -14322.595944  -14571.083496  4792.760498 -14322.595944  206.149902 -14571.083496       0.05  248.437552       248.43750     3.0    -14771.133545         False          False   True
3  -14322.595944  -14484.783444  4792.760498 -14322.595944  206.100000 -14484.783444       0.05  162.137500       148.43750     4.0    -14322.645944         False          False   True
4  -14322.595944  -14375.720944  4792.760498 -14322.595944  104.050000 -14375.720944       0.05   53.075000        48.43750     5.0    -14322.645944         False          False   True
5  -14322.595944  -14371.083444  4844.322998 -14322.595944   53.025000 -14371.083444       0.05   48.437500         0.00000     6.0    -14322.645944         False          False   True
6  -14322.595944  -14322.645944  4895.885498 -14322.595944   27.512500 -14322.645944       0.05    0.000000       -48.43750     7.0    -14322.645944         False          False   True
7  -14225.770944  -14274.208444  4947.447998 -14225.770944   96.825000 -14274.208444       0.05   48.387500        -0.05000     1.0    -14322.645944         False           True  False
8  -14172.989694  -14225.770752  4947.447998 -14172.989694  101.168750 -14225.770752       0.05   52.731058       -47.26875     1.0    -14322.645944         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=356851/1024.[0m
[08/11 00:14:12]  --------------------------------------------------------------------------------
[08/11 00:14:12]  Iteration: 357 (0 solution, 356 counterexamples)
[08/11 00:27:10]  Generator returned sat in 765.399984 secs.
[08/11 00:27:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:27:15]  Improved gap from 0 to 23.4375
[08/11 00:27:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 00:27:15]  Verifer returned sat in 2.788614 secs.
[08/11 00:27:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17450.797852  -17874.335205  6954.637207 -17450.797852    0.100000 -17874.335205   0.099854  423.437500        423.4375     2.0    -17874.335205            -1             -1     -1
1  -17450.797852  -17774.335205  6954.637207 -17450.797852   99.449951 -17774.335205   0.099854  323.437500        323.4375     2.0    -17874.335205         False          False   True
2  -17450.797852  -17674.335205  6954.637207 -17450.797852   99.450000 -17674.335205   0.099854  223.437500        223.4375     3.0    -17874.335205         False          False   True
3  -17450.797852  -17574.335205  6954.637207 -17450.797852   99.450000 -17574.335205   0.099854  123.437500        123.4375     4.0    -17874.335205         False          False   True
4  -17450.797852  -17477.360352  6954.637207 -17450.797852   50.725000 -17477.360352   0.099854   26.462646         23.4375     5.0    -17874.335205         False          False   True
5  -17450.797852  -17474.335205  7031.199707 -17450.797852   26.362500 -17474.335205   0.099854   23.437500          0.0000     6.0    -17874.335205         False          False   True
6  -17450.797852  -17450.897705  7107.762207 -17450.797852   14.181250 -17450.897705   0.099854    0.000000        -23.4375     7.0    -17874.335205         False          False   True
7  -17327.360352  -17427.460205  7107.762207 -17327.360352  123.437500 -17427.460205   0.099854  100.000000          0.0000     1.0    -17327.460205          True           True  False
8  -17327.360352  -17327.460205  7107.762207 -17327.360352   49.900146 -17327.460205   0.099854    0.000000       -100.0000     2.0    -17327.460205         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1325209/4096.[0m
[08/11 00:27:16]  --------------------------------------------------------------------------------
[08/11 00:27:16]  Iteration: 358 (0 solution, 357 counterexamples)
[08/11 00:32:32]  Generator returned sat in 302.677021 secs.
[08/11 00:32:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:32:39]  Improved gap from 8/5 to 48.4375
[08/11 00:32:39]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/11 00:32:39]  Verifer returned sat in 5.217505 secs.
[08/11 00:32:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17872.772705  -17872.822754  6953.024658 -17872.772705    0.049805 -17872.822754   0.000000    0.050049       -0.050049     6.0    -17872.822754            -1             -1     -1
1  -17724.285400  -17872.722656  6953.024658 -17724.285400  148.537354 -17872.722656   0.000000  148.437256       48.437256     1.0    -17872.822754         False           True  False
2  -17724.185303  -17724.235596  6953.024658 -17724.185303  148.537354 -17724.235596   0.000000    0.050293      -51.462646     1.0    -17872.822754         False          False  False
3  -17429.360596  -17572.722656  6953.024658 -17429.360596  294.875000 -17572.722656  94.874756   48.487305       48.487305     1.0    -17872.822754         False          False  False
4  -17329.410400  -17477.360352  6953.024658 -17329.410400  148.437500 -17477.360352  94.874756   53.075195       48.437500     1.0    -17872.822754         False          False   True
5  -17329.410400  -17472.722656  7004.587158 -17329.410400    1.500000 -17472.722656  94.874756   48.437500        0.000000     2.0    -17872.822754         False          False   True
6  -17329.410400  -17424.285156  7056.149658 -17329.410400    1.500000 -17424.285156  94.874756    0.000000      -48.437500     3.0    -17872.822754         False          False   True
7  -17252.441650  -17375.847656  7107.712158 -17252.441650   76.968750 -17375.847656  94.874756   28.531250      -19.906250     1.0    -17347.316406          True           True  False
8  -17189.732178  -17327.410156  7107.712158 -17189.732178   91.240723 -17327.410156  94.874756   42.803223      -57.196777     1.0    -17347.316406         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=49651/1024.[0m
[08/11 00:32:40]  --------------------------------------------------------------------------------
[08/11 00:32:40]  Iteration: 359 (0 solution, 358 counterexamples)
[08/11 00:39:42]  Generator returned sat in 408.179397 secs.
[08/11 00:39:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:39:59]  Improved gap from 60647/3072 to 34.375
[08/11 00:40:01]  Improved number of small numbers from 60 to 81 out of a max of 114
[08/11 00:40:01]  Verifer returned sat in 16.397341 secs.
[08/11 00:40:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -15055.859375  -15255.559082  7261.376801 -15055.859375    0.099854 -15255.559082      0.000  199.699707       99.699799     7.0    -15255.559082            -1             -1     -1
1  -15055.658936  -15055.759277  7261.376801 -15055.658936  199.900146 -15055.759277      0.000    0.100342       -0.099761     1.0    -15255.559082         False           True  False
2  -15055.459229  -15055.559174  7261.376801 -15055.459229    0.300049 -15055.559174      0.000    0.099946      -99.900054     1.0    -15055.459229         False          False  False
3  -14789.759174  -14855.584174  7261.376801 -14789.759174  265.800000 -14855.584174     31.425   34.400000       34.375000     1.0    -15055.459229         False          False  False
4  -14689.759174  -14788.484174  7261.376801 -14689.759174  134.400000 -14788.484174     31.425   67.300000       34.375000     1.0    -15055.459229         False          False   True
5  -14689.759174  -14755.559174  7327.001801 -14689.759174   67.200000 -14755.559174     31.425   34.375000        0.000000     2.0    -15055.459229         False          False   True
6  -14689.759174  -14721.184174  7392.626801 -14689.759174   33.600000 -14721.184174     31.425    0.000000      -34.375000     3.0    -15055.459229         False          False   True
7  -14607.259174  -14686.809174  7444.401611 -14607.259174   82.500000 -14686.809174     31.425   48.125000       -0.100190     1.0    -14638.684174          True           True  False
8  -14564.796674  -14638.583984  7444.401611 -14564.796674   90.587500 -14638.583984     31.425   42.362310      -57.637690     1.0    -14638.684174         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=275/8.[0m
[08/11 00:40:01]  --------------------------------------------------------------------------------
[08/11 00:40:01]  Iteration: 360 (0 solution, 359 counterexamples)
[08/11 00:42:13]  Generator returned sat in 118.430225 secs.
[08/11 00:42:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:42:17]  Improved gap from 0 to 23.4375
[08/11 00:42:18]  Improved number of small numbers from 92 to 98 out of a max of 114
[08/11 00:42:18]  Verifer returned sat in 2.930508 secs.
[08/11 00:42:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15055.708984  -15281.971436  7287.789062 -15055.708984    0.050049 -15281.971436     0.0000  226.262451      126.262451     2.0    -15281.971436            -1             -1   False
1  -15055.658936  -15081.971436  7287.789062 -15055.658936  226.312500 -15081.971436     0.0000   26.312500       26.312500     2.0    -15281.971436         False          False   False
2  -14955.658936  -15081.971436  7287.789062 -14955.658936  126.312500 -15081.971436     0.0000  126.312500       26.312500     2.0    -14955.658936         False          False   False
3  -14903.121338  -14903.171436  7287.789062 -14903.121338  178.850098 -14903.171436     0.0000    0.050098      -21.149902     1.0    -14955.658936         False          False   False
4  -14524.371436  -14781.971436  7287.789062 -14524.371436  378.800000 -14781.971436   231.2375   26.362500       26.362500     1.0    -14955.658936         False          False   False
5  -14361.833936  -14781.971436  7287.789062 -14361.833936  188.900000 -14781.971436   293.7750  126.362500       26.362500     1.0    -14955.658936         False          False    True
6  -14361.833936  -14678.996436  7361.376465 -14361.833936   93.950000 -14678.996436   293.7750   23.387500       -0.050098     2.0    -14955.658936         False          False    True
7  -14338.246436  -14655.558838  7437.839063 -14338.246436   46.975000 -14655.558838   293.7750   23.537402        0.000000     1.0    -14955.658936         False          False    True
8  -14338.246436  -14632.021436  7514.401367 -14338.246436   23.487500 -14632.021436   293.7750    0.000000      -23.437695     2.0    -14955.658936         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=2109/80.[0m
[08/11 00:42:18]  --------------------------------------------------------------------------------
[08/11 00:42:18]  Iteration: 361 (0 solution, 360 counterexamples)
[08/11 00:44:28]  Generator returned sat in 115.596352 secs.
[08/11 00:44:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:44:45]  Improved gap from 0 to 32.8125
[08/11 00:44:47]  Improved number of small numbers from 68 to 78 out of a max of 114
[08/11 00:44:47]  Verifer returned sat in 17.171163 secs.
[08/11 00:44:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16332.492432  -16598.367269  8571.166875 -16332.492432    0.049805 -16598.367269       0.00  265.874837      265.874837     9.0    -16598.367269            -1             -1     -1
1  -16332.442269  -16498.367269  8571.166875 -16332.442269  265.925000 -16498.367269       0.05  165.875000      165.875000     2.0    -16598.367269         False           True  False
2  -16232.392269  -16498.367188  8571.166875 -16232.392269  265.925000 -16498.367188       0.10  265.874919      165.875000     3.0    -16598.367269         False          False   True
3  -16232.392269  -16298.367269  8571.166875 -16232.392269  265.825000 -16298.367269       0.10   65.875000       65.875000     2.0    -16232.492269          True           True   True
4  -16165.354769  -16231.961019  8571.166875 -16165.354769  132.912500 -16231.961019       0.10   66.506250       32.912500     1.0    -16232.492269         False          False   True
5  -16165.354769  -16198.367188  8638.254375 -16165.354769   66.456250 -16198.367188       0.10   32.912419        0.000000     2.0    -16232.492269         False          False   True
6  -16165.039062  -16165.454769  8687.959063 -16165.039062   33.228125 -16165.454769       0.10    0.315706      -49.979606     3.0    -16232.492269         False          False   True
7  -16082.284456  -16115.159456  8755.146484 -16082.284456   83.070312 -16115.159456       0.10   32.775000       -0.037578     1.0    -16082.384456          True           True  False
8  -16015.123519  -16082.334473  8755.146484 -16015.123519   99.935937 -16082.334473       0.10   67.110954      -32.876641     1.0    -16082.384456         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1327/8.[0m
[08/11 00:44:48]  --------------------------------------------------------------------------------
[08/11 00:44:48]  Iteration: 362 (0 solution, 361 counterexamples)
[08/11 00:46:52]  Generator returned sat in 110.083637 secs.
[08/11 00:46:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:47:03]  Improved gap from 0 to 34.375
[08/11 00:47:04]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/11 00:47:04]  Verifer returned sat in 9.953086 secs.
[08/11 00:47:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16208.104980  -16408.054688  8239.616699 -16208.104980    0.050049 -16408.054688   0.000000  199.949707       99.949707     4.0    -16408.054688            -1             -1     -1
1  -16208.054688  -16208.054688  8239.616699 -16208.054688  200.000000 -16208.054688   0.000000    0.000000        0.000000     1.0    -16408.054688         False           True  False
2  -16039.917236  -16208.004883  8239.616699 -16039.917236  168.137451 -16208.004883   0.050049  168.037598       68.087402     1.0    -16039.967285         False          False  False
3  -15936.204834  -16009.054688  8239.616699 -15936.204834  271.750000 -16009.054688   3.762451   69.087402       68.087402     1.0    -16039.967285         False          False   True
4  -15869.917236  -15939.917236  8239.616699 -15869.917236  135.375000 -15939.917236   3.762451   66.237549       34.375000     1.0    -16039.967285         False          False   True
5  -15869.917236  -15908.054688  8305.241699 -15869.917236   66.187500 -15908.054688   3.762451   34.375000        0.000000     2.0    -16039.967285         False          False   True
6  -15869.917236  -15873.679688  8356.132568 -15869.917236   31.593750 -15873.679688   3.762451    0.000000      -49.109131     3.0    -16039.967285         False          False   True
7  -15786.432861  -15824.570557  8421.757324 -15786.432861   83.484375 -15824.570557   3.762451   34.375244        0.000000     1.0    -15790.195312          True           True  False
8  -15721.392578  -15790.195312  8421.757568 -15721.392578   99.415527 -15790.195312   3.762451   65.040283      -34.959473     2.0    -15790.195312         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=139443/2048.[0m
[08/11 00:47:04]  --------------------------------------------------------------------------------
[08/11 00:47:04]  Iteration: 363 (0 solution, 362 counterexamples)
[08/11 00:48:29]  Generator returned sat in 71.188493 secs.
[08/11 00:48:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:48:33]  Improved gap from 0 to 23.4375
[08/11 00:48:34]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/11 00:48:34]  Verifer returned sat in 2.201183 secs.
[08/11 00:48:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -15997.980225  -16144.804932  8052.929443 -15997.980225  146.924805 -16144.804932   0.000000  146.824707      123.387207     2.0    -16144.804932            -1             -1    True
1  -15997.880127  -16021.517578  8052.929443 -15997.880127  146.924805 -16021.517578   0.049805   23.587646       23.437500     2.0    -16144.804932         False          False    True
2  -15997.880127  -16021.367432  8129.491943 -15997.880127   23.537500 -16021.367432   0.049805   23.437500        0.000000     3.0    -15997.929932         False          False    True
3  -15997.830078  -15997.929932  8206.054443 -15997.830078   23.487549 -15997.929932   0.049805    0.050049      -23.387451     3.0    -15997.879883         False           True   False
4  -15851.005127  -15877.567383  8206.054443 -15851.005127  146.875000 -15877.567383   0.049805   26.512451       23.437500     1.0    -15997.879883         False           True   False
5  -15733.567383  -15851.055176  8206.054443 -15733.567383  143.950195 -15851.055176  17.487549  100.000244       23.437500     2.0    -15997.879883         False          False   False
6  -15733.567383  -15774.492432  8282.616943 -15733.567383   71.475098 -15774.492432  17.487549   23.437500        0.000000     2.0    -15997.879883         False          False    True
7  -15722.767334  -15751.054932  8359.179443 -15722.767334   34.237549 -15751.054932  17.487549   10.800049      -12.637451     3.0    -15997.879883         False          False    True
8  -15607.054932  -15727.617432  8359.179443 -15607.054932  126.512451 -15727.617432  17.487549  103.074951        3.074951     1.0    -15624.542480          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=375/16.[0m
[08/11 00:48:34]  --------------------------------------------------------------------------------
[08/11 00:48:34]  Iteration: 364 (0 solution, 363 counterexamples)
[08/11 00:55:18]  Generator returned sat in 389.767533 secs.
[08/11 00:55:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:55:31]  Improved gap from 95385/4096 to 34.375
[08/11 00:55:32]  Improved number of small numbers from 61 to 80 out of a max of 114
[08/11 00:55:32]  Verifer returned sat in 12.246294 secs.
[08/11 00:55:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -15442.746826  -15542.746582  7866.185357 -15442.746826    0.013021 -15542.746582   0.000000   99.999756       99.986776     9.0    -15542.746582            -1             -1     -1
1  -15408.358398  -15442.733643  7866.185357 -15408.358398  134.388184 -15442.733643   0.000000   34.375244       34.375204     1.0    -15542.746582         False           True  False
2  -15308.358643  -15442.733602  7866.185357 -15308.358643  134.375000 -15442.733602   0.000000  134.374960       34.374960     2.0    -15308.358643         False          False  False
3  -15177.914158  -15242.768325  7866.185357 -15177.914158  264.819444 -15242.768325  30.431424   34.422743       34.388021     1.0    -15308.358643         False          False  False
4  -15077.927179  -15174.576484  7866.185357 -15077.927179  134.409722 -15174.576484  30.431424   66.217882       34.375000     1.0    -15308.358643         False          False   True
5  -15077.927179  -15142.733602  7931.810357 -15077.927179   66.204861 -15142.733602  30.431424   34.375000        0.000000     2.0    -15308.358643         False          False   True
6  -15077.927179  -15108.358602  7997.435357 -15077.927179   32.102431 -15108.358602  30.431424    0.000000      -34.375000     3.0    -15308.358643         False          False   True
7  -14994.171102  -15073.983602  8048.041260 -14994.171102   83.756076 -15073.983602  30.431424   49.381076       -0.013021     1.0    -15024.602526          True           True  False
8  -14950.877700  -15024.589355  8048.041260 -14950.877700   92.674479 -15024.589355  30.431424   43.280232      -56.719618     1.0    -15024.602526         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=13205/384.[0m
[08/11 00:55:33]  --------------------------------------------------------------------------------
[08/11 00:55:33]  Iteration: 365 (0 solution, 364 counterexamples)
[08/11 00:58:46]  Generator returned sat in 179.720108 secs.
[08/11 00:58:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:59:02]  Improved gap from 39173/1152 to 34.375
[08/11 00:59:03]  Improved number of small numbers from 59 to 72 out of a max of 114
[08/11 00:59:03]  Verifer returned sat in 14.870228 secs.
[08/11 00:59:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14761.050293  -14861.050293  7833.522857 -14761.050293    0.099854 -14861.050293      0.000  100.000000       99.999907     2.0    -14861.050293            -1             -1   False
1  -14761.050293  -14761.150200  7833.522857 -14761.050293    0.100098 -14761.150200      0.000    0.099907       -0.000093     2.0    -14861.050293         False          False   False
2  -14488.100200  -14760.950200  7833.522857 -14488.100200  273.050000 -14760.950200    138.575  134.275000       34.375000     1.0    -14861.050293         False          False   False
3  -14349.425200  -14561.050200  7833.522857 -14349.425200  272.950000 -14561.050200    177.250   34.375000       34.375000     1.0    -14526.675200         False          False    True
4  -14249.325200  -14492.012700  7833.522857 -14249.325200  134.475000 -14492.012700    177.350   65.337500       34.375000     1.0    -14526.675200         False          False    True
5  -14249.325200  -14461.050200  7899.147857 -14249.325200   65.237500 -14461.050200    177.350   34.375000        0.000000     2.0    -14526.675200         False          False    True
6  -14249.325200  -14426.675200  7948.960449 -14249.325200   31.618750 -14426.675200    177.350    0.000000      -50.187408     3.0    -14526.675200         False          False    True
7  -14165.828325  -14376.487700  8014.585357 -14165.828325   83.496875 -14376.487700    177.350   33.309375       -1.065625     1.0    -14343.178325          True           True   False
8  -14099.126762  -14342.112549  8014.585449 -14099.126762  100.010937 -14342.112549    177.350   65.635787      -34.363970     1.0    -14343.178325         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=275/8.[0m
[08/11 00:59:04]  --------------------------------------------------------------------------------
[08/11 00:59:04]  Iteration: 366 (0 solution, 365 counterexamples)
[08/11 01:07:38]  Generator returned sat in 499.027832 secs.
[08/11 01:07:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:07:52]  Improved gap from 703491/20480 to 34.375
[08/11 01:07:53]  Improved number of small numbers from 59 to 73 out of a max of 114
[08/11 01:07:53]  Verifer returned sat in 13.728630 secs.
[08/11 01:07:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -15820.204346  -15954.579590  8136.322754 -15820.204346    0.099854 -15954.579590    0.100000  134.275244      134.275039     6.0    -15954.579590            -1             -1     -1
1  -15820.204346  -15854.579581  8136.322754 -15820.204346   65.824951 -15854.579581    0.100000   34.275235       34.275039     4.0    -15954.579590         False           True   True
2  -15788.754581  -15788.954581  8136.322950 -15788.754581   65.725000 -15788.954581    0.100000    0.100000      -34.275000     1.0    -15788.854581          True           True  False
3  -15515.410137  -15655.326803  8136.322950 -15515.410137  273.444444 -15655.326803  104.794444   35.122222       34.375000     1.0    -15788.854581         False          False  False
4  -15415.310137  -15586.415692  8136.322950 -15415.310137  135.222222 -15586.415692  104.894444   66.211111       34.375000     1.0    -15788.854581         False          False   True
5  -15415.310137  -15554.579581  8201.947950 -15415.310137   66.111111 -15554.579581  104.894444   34.375000        0.000000     2.0    -15788.854581         False          False   True
6  -15415.310137  -15520.204581  8267.572950 -15415.310137   32.055556 -15520.204581  104.894444    0.000000      -34.375000     3.0    -15788.854581         False          False   True
7  -15331.721248  -15485.829581  8318.358887 -15331.721248   83.588889 -15485.829581  104.894444   49.213889       -0.000175     1.0    -15436.615692          True           True  False
8  -15288.847637  -15436.515625  8318.359131 -15288.847637   92.087500 -15436.515625  104.894444   42.773544      -57.126319     1.0    -15436.615692         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=275/8.[0m
[08/11 01:07:54]  --------------------------------------------------------------------------------
[08/11 01:07:54]  Iteration: 367 (0 solution, 366 counterexamples)
[08/11 01:10:10]  Generator returned sat in 121.924438 secs.
[08/11 01:10:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:10:24]  Improved gap from 0 to 34.375
[08/11 01:10:26]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/11 01:10:26]  Verifer returned sat in 13.546553 secs.
[08/11 01:10:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16015.522217  -16215.550049  8136.322950 -16015.522217    0.028076 -16215.550049   0.028017  199.999815       99.999989     2.0    -16215.550049            -1             -1     -1
1  -16015.522217  -16049.925223  8136.322950 -16015.522217  199.972168 -16049.925223   0.028017   34.374989       -0.000011     3.0    -16215.550049         False          False   True
2  -16015.466171  -16015.522206  8136.322950 -16015.466171   34.431034 -16015.522206   0.028017    0.028017      -99.943966     1.0    -16015.494188          True           True  False
3  -15743.688154  -15815.550223  8136.322950 -15743.688154  271.806034 -15815.550223  37.487069   34.375000       34.375000     1.0    -16015.494188         False          False  False
4  -15643.660137  -15747.006311  8136.322950 -15643.660137  134.403017 -15747.006311  37.515086   65.831088       34.375000     1.0    -16015.494188         False          False   True
5  -15643.660137  -15715.550223  8201.947950 -15643.660137   65.701509 -15715.550223  37.515086   34.375000        0.000000     2.0    -16015.494188         False          False   True
6  -15643.660137  -15681.175223  8267.572950 -15643.660137   31.850754 -15681.175223  37.515086    0.000000      -34.375000     3.0    -16015.494188         False          False   True
7  -15559.547260  -15646.800223  8317.834961 -15559.547260   84.112877 -15646.800223  37.515086   49.737877       -0.000112     1.0    -15597.062346          True           True  False
8  -15516.125654  -15597.034424  8317.834961 -15516.125654   93.159483 -15597.034424  37.515086   43.393684      -56.578507     1.0    -15597.062346         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=275/8.[0m
[08/11 01:10:26]  --------------------------------------------------------------------------------
[08/11 01:10:26]  Iteration: 368 (0 solution, 367 counterexamples)
[08/11 01:16:01]  Generator returned sat in 320.583272 secs.
[08/11 01:16:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:16:14]  Improved gap from 1/20 to 29.6875
[08/11 01:16:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 01:16:15]  Verifer returned sat in 11.882514 secs.
[08/11 01:16:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16114.791748  -16314.741699  8151.650635 -16114.791748  200.100098 -16314.741699   0.050049  199.899902       99.899902     3.0    -16314.741699            -1             -1     -1
1  -16114.641602  -16114.791504  8151.650635 -16114.641602  200.050049 -16114.791504   0.050049    0.099854        0.050049     1.0    -16114.691650         False           True   True
2  -16114.641602  -16114.741699  8151.650635 -16114.641602    0.050049 -16114.741699   0.050049    0.050049      -99.949951     2.0    -16114.691650         False          False   True
3  -15854.402588  -15915.698730  8151.650635 -15854.402588  260.289062 -15915.698730   0.050049   61.246094       60.289062     1.0    -16114.691650         False          False   True
4  -15785.004150  -15850.926270  8151.650635 -15785.004150  130.644531 -15850.926270   0.050049   65.872070       29.687500     1.0    -16114.691650         False          False   True
5  -15785.004150  -15814.741699  8221.963135 -15785.004150   65.822266 -15814.741699   0.050049   29.687500        0.000000     2.0    -16114.691650         False          False   True
6  -15781.280518  -15785.054199  8267.572998 -15781.280518   33.411133 -15785.054199   0.050049    3.723633      -50.666504     3.0    -16114.691650         False          False   True
7  -15700.976318  -15730.664062  8337.885498 -15700.976318   84.027832 -15730.664062   0.050049   29.637695       -0.049805     1.0    -15701.026367          True           True  False
8  -15626.468994  -15700.976562  8337.885498 -15626.468994  104.145020 -15700.976562   0.050049   74.457520      -25.542480     1.0    -15701.026367         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=10861/180.[0m
[08/11 01:16:16]  --------------------------------------------------------------------------------
[08/11 01:16:16]  Iteration: 369 (0 solution, 368 counterexamples)
[08/11 01:21:42]  Generator returned sat in 312.854809 secs.
[08/11 01:21:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:21:57]  Improved gap from 0 to 40.625
[08/11 01:21:57]  Improved number of small numbers from 43 to 114 out of a max of 114
[08/11 01:21:57]  Verifer returned sat in 12.741916 secs.
[08/11 01:21:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16279.975830  -16322.065674  8216.834717 -16279.975830    0.100000 -16322.065674   0.050049   42.039795       -0.100098     3.0    -16322.065674            -1             -1     -1
1  -16079.975830  -16279.925781  8216.834717 -16079.975830  242.039795 -16279.925781   0.050049  199.899902       99.899902     1.0    -16322.065674         False          False   True
2  -16037.935791  -16079.925781  8216.834717 -16037.935791  241.939941 -16079.925781   0.050049   41.939941       41.939941     1.0    -16037.985840         False          False   True
3  -15838.035889  -15979.925781  8216.834717 -15838.035889  241.839844 -15979.925781   1.264893  140.625000      140.625000     1.0    -15839.300781         False          False   True
4  -15838.035889  -15902.111084  8216.834717 -15838.035889  121.419922 -15902.111084   1.264893   62.810303       40.625000     2.0    -15839.300781         False          False   True
5  -15838.035889  -15879.925781  8276.209717 -15838.035889   62.709961 -15879.925781   1.264893   40.625000        0.000000     3.0    -15839.300781         False          False   True
6  -15838.035889  -15839.300781  8335.584717 -15838.035889   33.354980 -15839.300781   1.264893    0.000000      -40.625000     4.0    -15839.300781         False          False   True
7  -15751.045898  -15798.675781  8389.119873 -15751.045898   86.989990 -15798.675781   1.264893   46.364990       -0.099854     1.0    -15839.300781         False           True  False
8  -15702.198242  -15752.210693  8389.119873 -15702.198242   95.212646 -15752.210693   1.264893   48.747559      -51.252197     1.0    -15839.300781         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1125/8.[0m
[08/11 01:21:58]  --------------------------------------------------------------------------------
[08/11 01:21:58]  Iteration: 370 (0 solution, 369 counterexamples)
[08/11 01:36:17]  Generator returned sat in 844.466535 secs.
[08/11 01:36:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:36:22]  Improved gap from 0 to 48.4375
[08/11 01:36:22]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/11 01:36:22]  Verifer returned sat in 3.168445 secs.
[08/11 01:36:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16040.835938  -16126.735840  8202.734619 -16040.835938    0.100000 -16126.735840   0.000000  85.899902       85.899902     7.0    -16126.735840            -1             -1     -1
1  -16040.835938  -16089.373291  8216.834717 -16040.835938    0.100000 -16089.373291   0.000000  48.537354        0.000000     8.0    -16126.735840         False           True  False
2  -15940.835938  -15989.273193  8216.834717 -15940.835938  148.537354 -15989.273193   0.000000  48.437256        0.000000     1.0    -16126.735840          True           True  False
3  -15840.835693  -15887.923340  8216.834717 -15840.835693  148.437500 -15887.923340   0.000000  47.087646        0.000244     1.0    -15840.835693         False          False  False
4  -15692.298340  -15740.935791  8216.834717 -15692.298340  195.625000 -15740.935791   0.100098  48.537354       48.437500     1.0    -15840.835693         False          False  False
5  -15692.298340  -15740.835938  8268.397217 -15692.298340    2.000000 -15740.835938   0.100098  48.437500        0.000000     2.0    -15840.835693         False          False   True
6  -15692.298340  -15692.398438  8319.959717 -15692.298340    3.000000 -15692.398438   0.100098   0.000000      -48.437500     3.0    -15840.835693         False          False   True
7  -15591.035889  -15643.960938  8367.034912 -15591.035889  101.262451 -15643.960938   0.100098  52.824951       -0.099854     1.0    -15591.135986          True           True  False
8  -15542.742188  -15591.035889  8367.034912 -15542.742188  101.118652 -15591.035889   0.100098  48.193604      -51.806152     1.0    -15591.135986         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/11 01:36:23]  --------------------------------------------------------------------------------
[08/11 01:36:23]  Iteration: 371 (0 solution, 370 counterexamples)
[08/11 01:39:43]  Generator returned sat in 185.985898 secs.
[08/11 01:39:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:39:57]  Improved gap from 0 to 37.5
[08/11 01:39:58]  Improved number of small numbers from 79 to 96 out of a max of 114
[08/11 01:39:58]  Verifer returned sat in 12.082659 secs.
[08/11 01:39:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -14634.648438  -14872.198486  8191.692627 -14634.648438    0.025146 -14872.198486   0.025146  237.524902      237.499756     9.0    -14872.198486            -1             -1     -1
1  -14634.623340  -14872.173340  8191.692627 -14634.623340  237.550000 -14872.173340   0.050000  237.500000      137.500000     5.0    -14872.198486         False           True   True
2  -14572.148340  -14672.173340  8191.692627 -14572.148340  299.975000 -14672.173340   0.050000   99.975000       99.975000     6.0    -14872.198486          True           True   True
3  -14434.598340  -14572.173340  8191.692627 -14434.598340  237.525000 -14572.173340   0.075000  137.500000      137.500000     1.0    -14434.673340          True           True  False
4  -14434.598340  -14497.465527  8191.692627 -14434.598340  119.262500 -14497.465527   0.075000   62.792187       37.500000     2.0    -14434.673340         False          False   True
5  -14434.598340  -14472.173340  8254.192627 -14434.598340   61.631250 -14472.173340   0.075000   37.500000        0.000000     3.0    -14434.673340         False          False   True
6  -14434.598340  -14434.673340  8316.692627 -14434.598340   32.815625 -14434.673340   0.075000    0.000000      -37.500000     4.0    -14434.673340         False          False   True
7  -14347.440527  -14397.173340  8367.034668 -14347.440527   87.157813 -14397.173340   0.075000   49.657812       -0.000146     1.0    -14434.673340         False           True  False
8  -14301.373340  -14347.490723  8367.034668 -14301.373340   95.725000 -14347.490723   0.075000   46.042383      -53.932959     1.0    -14434.673340         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=275/2.[0m
[08/11 01:39:58]  --------------------------------------------------------------------------------
[08/11 01:39:58]  Iteration: 372 (0 solution, 371 counterexamples)
[08/11 01:41:49]  Generator returned sat in 96.294086 secs.
[08/11 01:41:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:42:02]  Improved gap from 0 to 29.6875
[08/11 01:42:03]  Improved number of small numbers from 61 to 65 out of a max of 114
[08/11 01:42:03]  Verifer returned sat in 12.040816 secs.
[08/11 01:42:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -14663.888672  -14793.676118  8110.865224 -14663.888672    0.100098 -14793.676118   0.100000  129.687446      129.687446     4.0    -14793.676118            -1             -1     -1
1  -14663.788618  -14693.676118  8110.865224 -14663.788618  129.787500 -14693.676118   0.200000   29.687500       29.687500     5.0    -14793.676118         False           True   True
2  -14663.688618  -14693.576118  8181.077724 -14663.688618   29.787500 -14693.576118   0.200000   29.687500        0.000000     3.0    -14663.888618          True           True   True
3  -14434.598340  -14563.990007  8181.077724 -14434.598340  258.777778 -14563.990007  99.602778   29.788889       29.687500     1.0    -14663.888618         False           True  False
4  -14334.498340  -14499.745562  8181.077724 -14334.498340  129.888889 -14499.745562  99.702778   65.544444       29.687500     1.0    -14663.888618         False          False   True
5  -14334.498340  -14463.888618  8251.390224 -14334.498340   65.444444 -14463.888618  99.702778   29.687500        0.000000     2.0    -14663.888618         False          False   True
6  -14329.463618  -14434.201118  8321.702724 -14329.463618   34.722222 -14434.201118  99.702778    5.034722      -24.652778     3.0    -14663.888618         False          False   True
7  -14250.242784  -14404.513618  8367.034668 -14250.242784   84.255556 -14404.513618  99.702778   54.568056       -0.100000     1.0    -14349.945562          True           True  False
8  -14213.067090  -14349.845459  8367.034668 -14213.067090   91.743750 -14349.845459  99.702778   37.075591      -62.924306     1.0    -14349.945562         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=475/16.[0m
[08/11 01:42:04]  --------------------------------------------------------------------------------
[08/11 01:42:04]  Iteration: 373 (0 solution, 372 counterexamples)
[08/11 01:47:57]  Generator returned sat in 338.609601 secs.
[08/11 01:47:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:48:00]  Improved gap from 1/40 to 23.4375
[08/11 01:48:00]  Improved number of small numbers from 113 to 113 out of a max of 114
[08/11 01:48:00]  Verifer returned sat in 1.205943 secs.
[08/11 01:48:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14663.888672  -14863.938672  8081.127778 -14663.888672    0.0500 -14863.938672       0.00  200.0500        100.0500     6.0    -14863.938672            -1             -1   False
1  -14663.888672  -14663.938672  8081.127778 -14663.888672  200.0000 -14663.938672       0.00    0.0500          0.0500     2.0    -14863.938672         False          False   False
2  -14563.788672  -14663.938672  8081.127778 -14563.788672  100.1500 -14663.938672       0.05  100.1000          0.1000     2.0    -14563.838672         False          False   False
3  -13933.288672  -14563.788672  8081.127778 -13933.288672  730.6000 -14563.788672     530.55   99.9500          0.1000     1.0    -14563.838672         False          False    True
4  -13666.438672  -14363.938672  8081.127778 -13666.438672  366.8000 -14363.938672     697.40    0.1000          0.1000     1.0    -14563.838672         False          False    True
5  -13481.638672  -14363.938672  8081.127778 -13481.638672  184.9000 -14363.938672     782.20  100.1000          0.1000     1.0    -14563.838672         False          False    True
6  -13481.638672  -14263.888672  8157.640278 -13481.638672   93.9500 -14263.888672     782.20    0.0500        -23.3875     2.0    -14563.838672         False          False    True
7  -13434.713672  -14240.451172  8234.102778 -13434.713672   46.9750 -14240.451172     782.20   23.5375          0.0000     1.0    -14563.838672         False          False    True
8  -13434.713672  -14216.913672  8234.102778 -13434.713672   23.4875 -14216.913672     782.20    0.0000       -100.0000     2.0    -14563.838672         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/11 01:48:01]  --------------------------------------------------------------------------------
[08/11 01:48:01]  Iteration: 374 (0 solution, 373 counterexamples)
[08/11 01:50:01]  Generator returned sat in 105.294409 secs.
[08/11 01:50:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:50:21]  Improved gap from 0 to 32.8125
[08/11 01:50:21]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/11 01:50:21]  Verifer returned sat in 17.357029 secs.
[08/11 01:50:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -14212.408691  -14212.508545  8013.939941 -14212.408691  100.000000 -14212.508545     0.0000   0.099854        0.099854     9.0    -14212.508545            -1             -1     -1
1  -14112.608643  -14212.408447  8013.940186 -14112.608643   99.899902 -14212.408447     0.0000  99.799805       -0.099854     1.0    -14112.608643         False           True  False
2  -14112.408691  -14112.508789  8013.940186 -14112.408691   99.999756 -14112.508789     0.0000   0.100098      -99.899902     1.0    -14112.608643         False          False  False
3  -13850.883789  -13912.508789  8013.940186 -13850.883789  261.625000 -13912.508789    28.8125  32.812500       32.812500     1.0    -14112.608643         False          False  False
4  -13750.883789  -13846.238281  8013.940186 -13750.883789  132.812500 -13846.238281    28.8125  66.541992       32.812500     1.0    -14112.608643         False          False   True
5  -13750.883789  -13812.508789  8081.127686 -13750.883789   65.406250 -13812.508789    28.8125  32.812500        0.000000     2.0    -14112.608643         False          False   True
6  -13750.883789  -13779.696289  8148.315186 -13750.883789   31.703125 -13779.696289    28.8125   0.000000      -32.812500     3.0    -14112.608643         False          False   True
7  -13667.625977  -13746.883789  8197.869629 -13667.625977   83.257812 -13746.883789    28.8125  50.445312       -0.000244     1.0    -13696.438477          True           True  False
8  -13625.765137  -13696.338379  8197.869873 -13625.765137   92.306152 -13696.338379    28.8125  41.760742      -58.139160     1.0    -13696.438477         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=525/16.[0m
[08/11 01:50:22]  --------------------------------------------------------------------------------
[08/11 01:50:22]  Iteration: 375 (0 solution, 374 counterexamples)
[08/11 01:51:25]  Generator returned sat in 47.750805 secs.
[08/11 01:51:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:51:41]  Improved gap from 1292413/40960 to 32.8125
[08/11 01:51:42]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 01:51:42]  Verifer returned sat in 14.637849 secs.
[08/11 01:51:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -16999.901611  -17267.257812  10680.773438 -16999.901611    0.050000 -17267.257812   0.000000  267.356201      167.356445     2.0    -17267.257812            -1             -1   False
1  -16999.851562  -17167.257812  10680.773438 -16999.851562  267.406250 -17167.257812   0.050049  167.356201       67.356445     2.0    -17267.257812         False          False   False
2  -16899.901611  -16999.901611  10680.773438 -16899.901611  267.306152 -16999.901611   0.050049   99.949951       67.306396     3.0    -16899.951660         False          False    True
3  -16738.226562  -16867.258057  10680.773438 -16738.226562  261.625000 -16867.258057  61.675049   67.356445       67.356445     1.0    -16799.901611         False           True   False
4  -16672.770508  -16799.851807  10680.773438 -16672.770508  132.812500 -16799.851807  61.675049   65.406250       32.812500     1.0    -16799.901611         False          False    True
5  -16672.770508  -16767.258057  10747.960938 -16672.770508   65.406250 -16767.258057  61.675049   32.812500        0.000000     2.0    -16799.901611         False          False    True
6  -16672.770508  -16734.445557  10815.148438 -16672.770508   31.703125 -16734.445557  61.675049    0.000000      -32.812500     3.0    -16799.901611         False          False    True
7  -16589.012695  -16701.633057  10864.153076 -16589.012695   83.757812 -16701.633057  61.675049   50.945312       -0.050049     1.0    -16650.687744          True           True   False
8  -16547.469727  -16650.637695  10864.153076 -16547.469727   92.488281 -16650.637695  61.675049   41.492920      -58.507080     1.0    -16650.687744         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=68973/1024.[0m
[08/11 01:51:42]  --------------------------------------------------------------------------------
[08/11 01:51:42]  Iteration: 376 (0 solution, 375 counterexamples)
[08/11 01:53:40]  Generator returned sat in 103.054642 secs.
[08/11 01:53:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:53:54]  Improved gap from 2561/80 to 32.8125
[08/11 01:53:56]  Improved number of small numbers from 74 to 99 out of a max of 114
[08/11 01:53:56]  Verifer returned sat in 13.384673 secs.
[08/11 01:53:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -18338.854980  -18538.854736  10648.779053 -18338.854980   68.105713 -18538.854736        0.0  199.999756       99.999975     2.0    -18538.854736            -1             -1    True
1  -18338.854980  -18338.854980  10648.779053 -18338.854980   68.055664 -18338.854980        0.0    0.000000       -0.000025     2.0    -18338.854980         False          False    True
2  -18270.849365  -18338.854896  10680.773438 -18270.849365   68.005615 -18338.854896        0.0   68.005531       -0.000025     1.0    -18270.849365         False          False    True
3  -18070.899340  -18170.849340  10680.773438 -18070.899340  267.955556 -18170.849340        0.0   99.950000       99.950000     1.0    -18270.849365         False          False    True
4  -18037.871563  -18103.410451  10680.773438 -18037.871563  132.977778 -18103.410451        0.0   65.538889       32.977778     2.0    -18270.849365         False          False    True
5  -18037.871563  -18070.849121  10747.795660 -18037.871563   65.488889 -18070.849121        0.0   32.977559        0.000000     2.0    -18270.849365         False          False    True
6  -18037.871563  -18037.871563  10814.983160 -18037.871563   31.744444 -18037.871563        0.0    0.000000      -32.812500     3.0    -18270.849365         False          False    True
7  -17953.510451  -18005.059063  10863.434326 -17953.510451   84.361111 -18005.059063        0.0   51.548611       -0.000222     1.0    -17953.510451          True           True   False
8  -17911.702812  -17953.460693  10863.434570 -17911.702812   93.356250 -17953.460693        0.0   41.757881      -58.192339     1.0    -17953.510451         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409599/4096.[0m
[08/11 01:53:56]  --------------------------------------------------------------------------------
[08/11 01:53:56]  Iteration: 377 (0 solution, 376 counterexamples)
[08/11 01:58:07]  Generator returned sat in 237.112953 secs.
[08/11 01:58:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:58:13]  Improved gap from 0 to 23.4375
[08/11 01:58:13]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/11 01:58:13]  Verifer returned sat in 3.601866 secs.
[08/11 01:58:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17945.256104  -18045.256104  10255.180176 -17945.256104  525.562256 -18045.256104   0.100098   99.899902       99.899902     3.0    -18045.256104            -1             -1     -1
1  -17519.693604  -17945.256104  10255.180176 -17519.693604  525.462402 -17945.256104   0.100098  425.462402      425.462402     1.0    -17519.793701         False          False   True
2  -17519.693604  -17845.256104  10255.180176 -17519.693604  425.362549 -17845.256104   0.100098  325.462402      325.462402     2.0    -17519.793701         False          False   True
3  -17519.693604  -17745.256104  10255.180176 -17519.693604  250.925000 -17745.256104   0.100098  225.462402      225.462402     3.0    -17519.793701         False          False   True
4  -17519.693604  -17645.256104  10255.180176 -17519.693604  125.462500 -17645.256104   0.100098  125.462402      125.462402     4.0    -17519.793701         False          False   True
5  -17519.693604  -17551.259277  10255.180176 -17519.693604   62.731250 -17551.259277   0.100098   31.465576       25.462402     5.0    -17519.793701         False          False   True
6  -17519.693604  -17543.231201  10329.717773 -17519.693604   31.365625 -17543.231201   0.100098   23.437500        0.000000     6.0    -17519.793701         False          False   True
7  -17519.693604  -17519.793701  10405.280273 -17519.693604   15.682813 -17519.793701   0.100098    0.000000      -24.437500     7.0    -17519.793701         False          False   True
8  -17394.231201  -17495.356201  10405.280273 -17394.231201  125.462402 -17495.356201   0.100098  101.024902        1.024902     1.0    -17519.793701         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1743103/4096.[0m
[08/11 01:58:14]  --------------------------------------------------------------------------------
[08/11 01:58:14]  Iteration: 378 (0 solution, 377 counterexamples)
[08/11 02:01:42]  Generator returned sat in 194.208236 secs.
[08/11 02:01:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:01:47]  Improved gap from 108953/7168 to 23.4375
[08/11 02:01:48]  Improved number of small numbers from 41 to 114 out of a max of 114
[08/11 02:01:48]  Verifer returned sat in 3.615294 secs.
[08/11 02:01:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -24206.798096  -24638.860352  10252.155273 -24206.798096    0.050000 -24638.860352   8.624756  423.437500        423.4375     4.0    -24638.860352            -1             -1     -1
1  -24206.798096  -24538.860352  10252.155273 -24206.798096   93.949951 -24538.860352   8.624756  323.437500        323.4375     4.0    -24638.860352         False          False   True
2  -24206.798096  -24538.860352  10252.155273 -24206.798096   93.949951 -24538.860352   8.624756  323.437500        223.4375     4.0    -24638.860352         False          False   True
3  -24206.798096  -24338.860352  10252.155273 -24206.798096   93.950000 -24338.860352   8.624756  123.437500        123.4375     5.0    -24638.860352         False          False   True
4  -24206.798096  -24238.960205  10252.155273 -24206.798096   46.975000 -24238.960205   8.624756   23.537354         23.4375     6.0    -24638.860352         False          False   True
5  -24206.798096  -24238.860352  10328.717773 -24206.798096   23.487500 -24238.860352   8.624756   23.437500          0.0000     7.0    -24638.860352         False          False   True
6  -24206.798096  -24215.422852  10405.280273 -24206.798096   11.743750 -24215.422852   8.624756    0.000000        -23.4375     8.0    -24638.860352         False          False   True
7  -24083.360596  -24191.985352  10405.280273 -24083.360596  123.437500 -24191.985352   8.624756  100.000000          0.0000     1.0    -24091.985352          True           True  False
8  -24083.360596  -24091.985352  10405.280273 -24083.360596   46.974854 -24091.985352   8.624756    0.000000       -100.0000     2.0    -24091.985352         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5175/16.[0m
[08/11 02:01:48]  --------------------------------------------------------------------------------
[08/11 02:01:48]  Iteration: 379 (0 solution, 378 counterexamples)
[08/11 02:09:36]  Generator returned sat in 452.388906 secs.
[08/11 02:09:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:09:42]  Improved gap from 0 to 48.4375
[08/11 02:09:42]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 02:09:42]  Verifer returned sat in 4.058920 secs.
[08/11 02:09:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -24207.089111  -24664.176270  10277.446289 -24207.089111  190.774902 -24664.176270   8.624756  448.462402      448.437500     4.0    -24664.176270            -1             -1     -1
1  -24207.089111  -24664.151123  10277.446289 -24207.089111  190.749756 -24664.151123   8.624756  448.437256      348.437500     4.0    -24215.713867         False          False   True
2  -24207.089111  -24464.151367  10277.446289 -24207.089111  190.750000 -24464.151367   8.624756  248.437500      248.437500     5.0    -24215.713867         False          False   True
3  -24207.089111  -24368.695312  10277.446289 -24207.089111  190.750000 -24368.695312   8.624756  152.981445      148.437500     6.0    -24215.713867         False          False   True
4  -24207.089111  -24264.176025  10277.446289 -24207.089111   95.875000 -24264.176025   8.624756   48.462158       48.437500     7.0    -24215.713867         False          False   True
5  -24207.089111  -24264.151367  10329.008789 -24207.089111   48.437500 -24264.151367   8.624756   48.437500        0.000000     8.0    -24215.713867         False          False   True
6  -24207.089111  -24215.713867  10380.571045 -24207.089111   24.718750 -24215.713867   8.624756    0.000000      -48.437744     9.0    -24215.713867         False          False   True
7  -24116.239014  -24167.276123  10432.133545 -24116.239014   90.850098 -24167.276123   8.624756   42.412354       -6.025146     1.0    -24215.713867         False           True  False
8  -24062.776367  -24118.838623  10432.133545 -24062.776367   95.875000 -24118.838623   8.624756   47.437500      -52.562500     1.0    -24215.713867         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1427301/4096.[0m
[08/11 02:09:43]  --------------------------------------------------------------------------------
[08/11 02:09:43]  Iteration: 380 (0 solution, 379 counterexamples)
[08/11 02:10:48]  Generator returned sat in 51.274068 secs.
[08/11 02:10:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:10:52]  Improved gap from 0 to 23.4375
[08/11 02:10:52]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 02:10:52]  Verifer returned sat in 1.877456 secs.
[08/11 02:10:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -24052.85376  -24476.341309  10089.63623 -24052.85376    0.050049 -24476.341309   0.050049  423.437500        423.4375     4.0    -24476.341309            -1             -1     -1
1   -24052.85376  -24476.341309  10089.63623 -24052.85376  423.387695 -24476.341309   0.050049  423.437500        323.4375     4.0    -24476.341309         False          False   True
2   -24052.85376  -24376.341309  10089.63623 -24052.85376  423.337402 -24376.341309   0.050049  323.437500        223.4375     5.0    -24052.903809         False          False   True
3   -24052.85376  -24176.341309  10089.63623 -24052.85376   94.950000 -24176.341309   0.050049  123.437500        123.4375     6.0    -24052.903809         False          False   True
4   -24052.85376  -24077.441162  10089.63623 -24052.85376   47.975000 -24077.441162   0.050049   24.537354         23.4375     7.0    -24052.903809         False          False   True
5   -24052.85376  -24076.341309  10166.19873 -24052.85376   24.487500 -24076.341309   0.050049   23.437500          0.0000     8.0    -24052.903809         False          False   True
6   -24052.85376  -24052.903809  10242.76123 -24052.85376   12.743750 -24052.903809   0.050049    0.000000        -23.4375     9.0    -24052.903809         False          False   True
7   -23929.41626  -24029.466309  10242.76123 -23929.41626  123.437500 -24029.466309   0.050049  100.000000          0.0000     1.0    -24052.903809         False           True  False
8   -23929.41626  -23929.466309  10242.76123 -23929.41626   47.974854 -23929.466309   0.050049    0.000000       -100.0000     2.0    -24052.903809         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1325005/4096.[0m
[08/11 02:10:53]  --------------------------------------------------------------------------------
[08/11 02:10:53]  Iteration: 381 (0 solution, 380 counterexamples)
[08/11 02:18:14]  Generator returned sat in 426.050210 secs.
[08/11 02:18:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:18:17]  Improved gap from 375/16 to 23.4375
[08/11 02:18:18]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/11 02:18:18]  Verifer returned sat in 1.570221 secs.
[08/11 02:18:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23915.803955  -24339.341553   9952.636230 -23915.803955  102.649902 -24339.341553   0.100098  423.437500      423.437500     4.0    -24339.341553            -1             -1     -1
1  -23915.803955  -24339.241455   9952.636230 -23915.803955  102.650146 -24339.241455   0.100098  423.337402      323.437500     4.0    -24339.341553         False          False   True
2  -23915.803955  -24139.341553   9952.636230 -23915.803955  102.549805 -24139.341553   0.100098  223.437500      223.437500     5.0    -23915.904053         False          False   True
3  -23915.803955  -24039.341553   9952.636230 -23915.803955  102.450000 -24039.341553   0.100098  123.437500      123.437500     5.0    -23915.904053         False          False   True
4  -23915.803955  -23942.366455   9952.636230 -23915.803955   51.725000 -23942.366455   0.100098   26.462402       23.437500     6.0    -23915.904053         False          False   True
5  -23915.803955  -23939.341553  10029.198730 -23915.803955   26.362500 -23939.341553   0.100098   23.437500        0.000000     7.0    -23915.904053         False          False   True
6  -23915.803955  -23915.904053  10105.760986 -23915.803955   13.681250 -23915.904053   0.100098    0.000000      -23.437744     8.0    -23915.904053         False          False   True
7  -23792.366455  -23892.466309  10105.761230 -23792.366455  123.437500 -23892.466309   0.100098   99.999756        0.000000     1.0    -23915.904053         False           True  False
8  -23792.366455  -23792.466553  10105.761230 -23792.366455   49.900146 -23792.466553   0.100098    0.000000     -100.000000     2.0    -23915.904053         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1325209/4096.[0m
[08/11 02:18:18]  --------------------------------------------------------------------------------
[08/11 02:18:18]  Iteration: 382 (0 solution, 381 counterexamples)
[08/11 02:24:05]  Generator returned sat in 331.580443 secs.
[08/11 02:24:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:24:08]  Improved gap from 0 to 23.4375
[08/11 02:24:09]  Improved number of small numbers from 79 to 114 out of a max of 114
[08/11 02:24:09]  Verifer returned sat in 1.885439 secs.
[08/11 02:24:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -25032.329102  -25132.328857  10029.198730 -25032.329102  743.150146 -25132.328857     0.050049   99.949707       99.949707     3.0    -25132.328857            -1             -1     -1
1  -24389.178955  -25032.379150  10029.198730 -24389.178955  743.099854 -25032.379150   616.687500   26.512695       26.462402     4.0    -25005.866455         False          False   True
2  -23672.641602  -25032.328857  10029.198730 -23672.641602  743.050049 -25032.328857  1233.224854  126.462402       26.462402     2.0    -24905.866455         False          False   True
3  -23056.104004  -24905.816406  10029.198730 -23056.104004  743.000000 -24905.816406  1749.762451   99.949951       26.462402     1.0    -24805.866455         False          False   True
4  -22784.053955  -24732.329102  10029.198730 -22784.053955  372.000000 -24732.329102  1921.812500   26.462646       26.462402     1.0    -24805.866455         False          False   True
5  -22624.016602  -24705.816406  10029.198730 -22624.016602  186.500000 -24705.816406  1981.849854   99.949951       26.462402     1.0    -24805.866455         False          False   True
6  -22624.016602  -24629.303955  10102.686279 -22624.016602   93.750000 -24629.303955  1981.849854   23.437500       -0.050049     2.0    -24805.866455         False          False   True
7  -22600.579102  -24605.816406  10179.248779 -22600.579102   46.875000 -24605.816406  1981.849854   23.387451       -0.050049     1.0    -24805.866455         False          False   True
8  -22600.529053  -24582.378906  10179.248779 -22600.529053   23.437500 -24582.378906  1981.849854    0.000000     -100.000000     1.0    -24805.866455         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=54195/2048.[0m
[08/11 02:24:10]  --------------------------------------------------------------------------------
[08/11 02:24:10]  Iteration: 383 (0 solution, 382 counterexamples)
[08/11 02:33:51]  Generator returned sat in 566.316185 secs.
[08/11 02:33:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:34:06]  Improved gap from 1021/10240 to 32.8125
[08/11 02:34:07]  Improved number of small numbers from 64 to 74 out of a max of 114
[08/11 02:34:07]  Verifer returned sat in 14.326709 secs.
[08/11 02:34:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -26864.053921  -27031.177734  10029.198486 -26864.053921  167.123535 -27031.177734   0.100000  167.023813       67.187256     2.0    -27031.177734            -1             -1     -1
1  -26864.053921  -26864.153921  10029.198730 -26864.053921  167.023611 -26864.153921   0.100000    0.000000      -32.812500     2.0    -26864.153921         False          False   True
2  -26697.130310  -26831.341421  10029.198730 -26697.130310  166.923611 -26831.341421   0.200000  134.011111       34.011111     1.0    -26697.330310         False          False   True
3  -26559.919199  -26631.341421  10029.198730 -26559.919199  271.222222 -26631.341421  37.411111   34.011111       34.011111     1.0    -26697.330310         False          False   True
4  -26459.819199  -26562.985866  10029.198730 -26459.819199  134.111111 -26562.985866  37.511111   65.655556       34.011111     1.0    -26697.330310         False          False   True
5  -26459.819199  -26531.341309  10095.187619 -26459.819199   65.555556 -26531.341309  37.511111   34.010998        0.000000     2.0    -26697.330310         False          False   True
6  -26459.819199  -26497.330310  10143.755859 -26459.819199   31.277778 -26497.330310  37.511111    0.000000      -51.431760     3.0    -26697.330310         False          False   True
7  -26375.674755  -26445.898366  10210.943115 -26375.674755   84.144444 -26445.898366  37.511111   32.712500       -0.100060     1.0    -26413.185866          True           True  False
8  -26306.271283  -26413.085693  10210.943359 -26306.271283  102.115972 -26413.085693  37.511111   69.303300      -30.696343     1.0    -26413.185866         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3061/90.[0m
[08/11 02:34:08]  --------------------------------------------------------------------------------
[08/11 02:34:08]  Iteration: 384 (0 solution, 383 counterexamples)
[08/11 02:44:01]  Generator returned sat in 578.663137 secs.
[08/11 02:44:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:44:18]  Improved gap from 525/16 to 34.375
[08/11 02:44:20]  Improved number of small numbers from 41 to 59 out of a max of 114
[08/11 02:44:20]  Verifer returned sat in 16.187157 secs.
[08/11 02:44:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -27447.688965  -27482.074707  10070.752686 -27447.688965    0.021552 -27482.074707    0.000000  34.385742       34.374876     2.0    -27482.074707            -1             -1   False
1  -27447.688965  -27482.063765  10136.377610 -27447.688965    0.010776 -27482.063765    0.000000  34.374800       -0.000200     2.0    -27447.688965         False          False   False
2  -27413.313765  -27447.688765  10202.002610 -27413.313765   68.750000 -27447.688765    0.000000  34.375000        0.000000     1.0    -27447.688965         False          False   False
3  -27174.847768  -27313.348487  10202.002610 -27174.847768  272.840996 -27313.348487  104.090996  34.409722       34.375000     1.0    -27447.688965         False          False   False
4  -27074.836993  -27244.159789  10202.002610 -27074.836993  134.420498 -27244.159789  104.101772  65.221025       34.375000     1.0    -27447.688965         False          False    True
5  -27074.836993  -27213.313765  10267.627610 -27074.836993   65.210249 -27213.313765  104.101772  34.375000        0.000000     2.0    -27447.688965         False          False    True
6  -27074.836993  -27178.938765  10333.252610 -27074.836993   31.105125 -27178.938765  104.101772   0.000000      -34.375000     3.0    -27447.688965         False          False    True
7  -26990.079569  -27144.563765  10382.859375 -26990.079569   84.757423 -27144.563765  104.101772  50.382423       -0.010811     1.0    -27094.181341          True           True   False
8  -26946.285268  -27094.170410  10382.859619 -26946.285268   94.176724 -27094.170410  104.101772  43.783370      -56.216267     1.0    -27094.181341         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=275/8.[0m
[08/11 02:44:21]  --------------------------------------------------------------------------------
[08/11 02:44:21]  Iteration: 385 (0 solution, 384 counterexamples)
[08/11 02:49:15]  Generator returned sat in 279.133658 secs.
[08/11 02:49:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:49:32]  Improved gap from 0 to 34.375
[08/11 02:49:32]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/11 02:49:32]  Verifer returned sat in 14.730267 secs.
[08/11 02:49:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -27204.722900  -27473.210205   9961.799561 -27204.722900    0.100000 -27473.210205   0.099854  268.387451      168.387695     3.0    -27473.210205            -1             -1     -1
1  -27204.722900  -27273.310547   9961.799561 -27204.722900   98.262695 -27273.310547   0.099854   68.487793       68.387695     2.0    -27473.210205         False           True   True
2  -27174.947998  -27273.210449   9963.636963 -27174.947998   98.262695 -27273.210449   0.099854   98.162598        0.000000     3.0    -27473.210205         False          False   True
3  -27006.360596  -27075.047852   9963.636963 -27006.360596  266.750000 -27075.047852   0.199951   68.487305       68.487305     1.0    -27473.210205          True           True  False
4  -26940.472900  -27006.460449   9963.636963 -26940.472900  134.375000 -27006.460449   0.199951   65.787598       34.375000     1.0    -27473.210205         False          False   True
5  -26940.472900  -26975.047852  10029.261963 -26940.472900   65.687500 -26975.047852   0.199951   34.375000        0.000000     2.0    -27473.210205         False          False   True
6  -26940.472900  -26940.672852  10079.777588 -26940.472900   31.343750 -26940.672852   0.199951    0.000000      -49.484375     3.0    -27473.210205         False          False   True
7  -26856.613525  -26891.188477  10145.402344 -26856.613525   83.859375 -26891.188477   0.199951   34.375000       -0.000244     1.0    -26856.813477          True           True  False
8  -26790.422852  -26856.560303  10145.402588 -26790.422852  100.565674 -26856.560303   0.199951   65.937500      -33.809326     1.0    -26856.813477         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=70131/1024.[0m
[08/11 02:49:33]  --------------------------------------------------------------------------------
[08/11 02:49:33]  Iteration: 386 (0 solution, 385 counterexamples)
[08/11 02:50:43]  Generator returned sat in 56.532869 secs.
[08/11 02:50:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:51:02]  Improved gap from 61363/1792 to 32.8125
[08/11 02:51:02]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 02:51:02]  Verifer returned sat in 16.476945 secs.
[08/11 02:51:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -27784.648682  -27984.648682  10844.607178 -27784.648682    0.099854 -27984.648682   0.100098  199.899902       99.900146     9.0    -27984.648682            -1             -1     -1
1  -27784.548828  -27784.749023  10844.607178 -27784.548828  199.999756 -27784.749023   0.100098    0.100098        0.000000     3.0    -27984.648682         False           True   True
2  -27784.448730  -27784.648926  10844.607178 -27784.448730    0.200195 -27784.648926   0.100098    0.100098      -99.899902     2.0    -27784.548828          True           True  False
3  -27520.923828  -27584.648926  10844.607178 -27520.923828  263.625000 -27584.648926  30.812500   32.912598       32.912598     1.0    -27784.548828         False          False  False
4  -27421.023926  -27516.842773  10844.607178 -27421.023926  132.812500 -27516.842773  30.812500   65.006348       32.812500     1.0    -27784.548828         False          False   True
5  -27421.023926  -27484.648926  10911.794678 -27421.023926   64.906250 -27484.648926  30.812500   32.812500        0.000000     2.0    -27784.548828         False          False   True
6  -27421.023926  -27451.836426  10978.982178 -27421.023926   30.953125 -27451.836426  30.812500    0.000000      -32.812500     3.0    -27784.548828         False          False   True
7  -27337.641113  -27401.266113  11028.411621 -27337.641113   83.382812 -27401.266113  30.812500   32.812500       -0.000244     1.0    -27368.453613          True           True  False
8  -27269.473877  -27368.353760  11060.244385 -27269.473877  100.979736 -27368.353760  30.812500   68.067383       -0.000244     1.0    -27368.453613         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=67405/2048.[0m
[08/11 02:51:03]  --------------------------------------------------------------------------------
[08/11 02:51:03]  Iteration: 387 (0 solution, 386 counterexamples)
[08/11 02:52:24]  Generator returned sat in 65.861990 secs.
[08/11 02:52:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:52:36]  Improved gap from 525/16 to 32.8125
[08/11 02:52:36]  Improved number of small numbers from 46 to 114 out of a max of 114
[08/11 02:52:36]  Verifer returned sat in 9.706868 secs.
[08/11 02:52:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -20101.435059  -20301.434814  10702.986816 -20101.435059    0.099854 -20301.434814   0.049805  199.949951       99.950195     9.0    -20301.434814            -1             -1     -1
1  -20068.572754  -20201.434814  10702.986816 -20068.572754  232.812256 -20201.434814   0.049805  132.812256       32.812500     4.0    -20301.434814         False           True   True
2  -20068.572510  -20101.435059  10770.174072 -20068.572510  132.812500 -20101.435059   0.049805   32.812744        0.000000     2.0    -20068.622314          True           True  False
3  -19837.760254  -19968.622314  10770.174072 -19837.760254  263.625000 -19968.622314  97.999756   32.862305       32.862305     1.0    -20068.622314         False          False  False
4  -19737.810059  -19900.766357  10770.174072 -19737.810059  132.812500 -19900.766357  97.999756   64.956543       32.812500     1.0    -20068.622314         False          False   True
5  -19737.810059  -19868.622314  10837.361572 -19737.810059   64.906250 -19868.622314  97.999756   32.812500        0.000000     2.0    -20068.622314         False          False   True
6  -19737.810059  -19835.809814  10904.549072 -19737.810059   30.953125 -19835.809814  97.999756    0.000000      -32.812500     3.0    -20068.622314         False          False   True
7  -19653.927246  -19802.997314  10953.478760 -19653.927246   83.882812 -19802.997314  97.999756   51.070312        0.000000     1.0    -19751.927002          True           True  False
8  -19612.171631  -19751.877441  10953.478760 -19612.171631   92.825928 -19751.877441  97.999756   41.706055      -58.244385     1.0    -19751.927002         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=33651/1024.[0m
[08/11 02:52:37]  --------------------------------------------------------------------------------
[08/11 02:52:37]  Iteration: 388 (0 solution, 387 counterexamples)
[08/11 02:55:31]  Generator returned sat in 159.394475 secs.
[08/11 02:55:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:55:45]  Improved gap from 46643/1536 to 32.8125
[08/11 02:55:46]  Improved number of small numbers from 52 to 68 out of a max of 114
[08/11 02:55:46]  Verifer returned sat in 12.676421 secs.
[08/11 02:55:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -18140.451660  -18273.313759  11527.685200 -18140.451660  232.837158 -18273.313759    0.049805  132.812294      132.812294     7.0    -18273.313759            -1             -1     -1
1  -18040.451454  -18273.288818  11527.685200 -18040.451454  232.812500 -18273.288818  100.049805  132.787560       32.812500     2.0    -18140.501259         False           True   True
2  -17940.451660  -18173.313759  11527.685200 -17940.451660  232.787354 -18173.313759  100.049805  132.812294       32.812294     3.0    -18040.501465         False          False   True
3  -17804.589149  -17973.313759  11527.685200 -17804.589149  268.674805 -17973.313759  135.912109   32.812500       32.812500     1.0    -18040.501465         False           True  False
4  -17704.564247  -17906.590431  11527.685200 -17704.564247  132.837402 -17906.590431  135.937012   66.089172       32.812500     1.0    -18040.501465         False          False   True
5  -17704.564247  -17873.313759  11594.872700 -17704.564247   64.918701 -17873.313759  135.937012   32.812500        0.000000     2.0    -18040.501465         False          False   True
6  -17704.564247  -17840.501259  11643.799316 -17704.564247   30.959351 -17840.501259  135.937012    0.000000      -51.073384     3.0    -18040.501465         False          False   True
7  -17620.678322  -17789.427833  11710.986775 -17620.678322   83.885925 -17789.427833  135.937012   32.812500        0.000000     1.0    -17756.615333          True           True  False
8  -17550.966560  -17756.615234  11710.986816 -17550.966560  102.524261 -17756.615234  135.937012   69.711662      -30.288197     1.0    -17756.615333         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=525/16.[0m
[08/11 02:55:47]  --------------------------------------------------------------------------------
[08/11 02:55:47]  Iteration: 389 (0 solution, 388 counterexamples)
[08/11 03:06:02]  Generator returned sat in 599.804435 secs.
[08/11 03:06:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:06:15]  Improved gap from 0 to 48.4375
[08/11 03:06:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 03:06:15]  Verifer returned sat in 11.222734 secs.
[08/11 03:06:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17168.463135  -17617.000977  10871.37207 -17168.463135    0.100098 -17617.000977   0.100098  448.437744      448.437500     9.0    -17617.000977            -1             -1     -1
1  -17168.463135  -17517.100586  10871.37207 -17168.463135    0.100098 -17517.100586   0.100098  348.537354      348.437500     4.0    -17617.000977         False           True   True
2  -17168.463135  -17517.000732  10871.37207 -17168.463135    0.100098 -17517.000732   0.100098  348.437500      248.437500     5.0    -17617.000977         False          False   True
3  -17168.463135  -17319.737549  10871.37207 -17168.463135  190.750000 -17319.737549   0.100098  151.174316      148.437500     6.0    -17617.000977         False          False   True
4  -17168.463135  -17217.100586  10871.37207 -17168.463135   95.875000 -17217.100586   0.100098   48.537354       48.437500     6.0    -17617.000977         False          False   True
5  -17168.463135  -17217.000732  10922.93457 -17168.463135   48.437500 -17217.000732   0.100098   48.437500        0.000000     7.0    -17617.000977         False          False   True
6  -17168.463135  -17168.563232  10974.49707 -17168.463135   24.718750 -17168.563232   0.100098    0.000000      -48.437500     8.0    -17617.000977         False          False   True
7  -17079.016602  -17120.125732  11026.05957 -17079.016602   89.446533 -17120.125732   0.100098   41.009033       -7.428467     1.0    -17079.116699          True           True  False
8  -17025.314941  -17071.688232  11026.05957 -17025.314941   94.710693 -17071.688232   0.100098   46.273193      -53.726807     1.0    -17079.116699         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=713805/2048.[0m
[08/11 03:06:16]  --------------------------------------------------------------------------------
[08/11 03:06:16]  Iteration: 390 (0 solution, 389 counterexamples)
[08/11 03:08:01]  Generator returned sat in 90.255055 secs.
[08/11 03:08:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:08:05]  Improved gap from 3687/8192 to 23.4375
[08/11 03:08:06]  Improved number of small numbers from 67 to 85 out of a max of 114
[08/11 03:08:06]  Verifer returned sat in 2.371908 secs.
[08/11 03:08:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14837.730713  -14937.730957  10871.372070 -14837.730713    0.100000 -14937.730957        0.0  100.000244      100.000020     5.0    -14937.730957            -1             -1   False
1  -14837.730713  -14837.730732  10871.372070 -14837.730713   99.899902 -14837.730732        0.0    0.000020        0.000020     4.0    -14937.730957         False          False   False
2  -14737.430732  -14837.630732  10871.372070 -14737.430732  100.300000 -14837.630732        0.1  100.100000        0.200000     1.0    -14937.730957         False          False   False
3  -14098.330732  -14737.530732  10871.372070 -14098.330732  739.200000 -14737.530732      539.2  100.000000        0.200000     2.0    -14937.730957         False          False    True
4  -13827.730732  -14537.730732  10871.372070 -13827.730732  370.600000 -14537.730732      709.8    0.200000        0.200000     1.0    -14937.730957         False          False    True
5  -13641.630732  -14520.543232  10871.372070 -13641.630732  186.300000 -14520.543232      795.9   83.012500        0.200000     1.0    -14937.730957         False          False    True
6  -13630.493232  -14437.430732  10947.634521 -13630.493232   94.150000 -14437.430732      795.9   11.037500      -12.400049     1.0    -14937.730957         False          False    True
7  -13594.455732  -14413.993164  11023.997070 -13594.455732   47.075000 -14413.993164      795.9   23.637432        0.000000     1.0    -14937.730957         False          False    True
8  -13594.455732  -14390.355732  11100.559326 -13594.455732   23.537500 -14390.355732      795.9    0.000000      -23.437744     2.0    -14937.730957         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/5.[0m
[08/11 03:08:07]  --------------------------------------------------------------------------------
[08/11 03:08:07]  Iteration: 391 (0 solution, 390 counterexamples)
[08/11 03:12:14]  Generator returned sat in 231.425699 secs.
[08/11 03:12:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:12:33]  Improved gap from 36894793/1966080 to 34.375
[08/11 03:12:34]  Improved number of small numbers from 66 to 72 out of a max of 114
[08/11 03:12:34]  Verifer returned sat in 17.918195 secs.
[08/11 03:12:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14634.768555  -14734.718735  10816.384521 -14634.768555  134.475000 -14734.718735    0.000000  99.950180       99.950180     2.0    -14734.718735            -1             -1   False
1  -14600.243735  -14634.718735  10816.384521 -14600.243735  134.475000 -14634.718735    0.050000  34.425000       34.425000     1.0    -14734.718735         False          False   False
2  -14534.668735  -14534.718735  10816.384521 -14534.668735  100.000000 -14534.718735    0.050000   0.000000        0.000000     1.0    -14534.718735         False          False    True
3  -14263.490957  -14435.432624  10816.384521 -14263.490957  271.177778 -14435.432624  136.802778  35.138889       34.425000     1.0    -14534.718735         False          False    True
4  -14163.540957  -14366.438179  10816.384521 -14163.540957  135.088889 -14366.438179  136.802778  66.094444       34.375000     1.0    -14534.718735         False          False    True
5  -14163.540957  -14334.718735  10882.009521 -14163.540957   66.044444 -14334.718735  136.802778  34.375000        0.000000     2.0    -14534.718735         False          False    True
6  -14163.540957  -14300.343735  10947.634521 -14163.540957   31.522222 -14300.343735  136.802778   0.000000      -34.375000     3.0    -14534.718735         False          False    True
7  -14079.735401  -14265.968735  10998.154053 -14079.735401   83.805556 -14265.968735  136.802778  49.430556       -0.049913     1.0    -14216.538179          True           True   False
8  -14036.528457  -14216.488037  10998.154053 -14036.528457   92.637500 -14216.488037  136.802778  43.156802      -56.842969     1.0    -14216.538179         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1377/40.[0m
[08/11 03:12:35]  --------------------------------------------------------------------------------
[08/11 03:12:35]  Iteration: 392 (0 solution, 391 counterexamples)
[08/11 03:15:09]  Generator returned sat in 139.498601 secs.
[08/11 03:15:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:15:28]  Improved gap from 0 to 32.8125
[08/11 03:15:29]  Improved number of small numbers from 66 to 83 out of a max of 114
[08/11 03:15:29]  Verifer returned sat in 17.598925 secs.
[08/11 03:15:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -14546.868896  -14646.818848  10813.259521 -14546.868896    0.050049 -14646.818848     0.0000   99.949951       99.949838     7.0    -14646.818848            -1             -1     -1
1  -14514.056396  -14546.818735  10813.259521 -14514.056396  132.762451 -14546.818735     0.0000   32.762338       32.762338     1.0    -14646.818848         False           True  False
2  -14413.956235  -14546.818735  10813.259521 -14413.956235  132.862500 -14546.818735     0.0500  132.812500       32.812500     1.0    -14646.818848         False          False  False
3  -14280.043735  -14346.818735  10813.259521 -14280.043735  266.725000 -14346.818735    33.9625   32.812500       32.812500     1.0    -14646.818848         False          False   True
4  -14179.993735  -14279.937485  10813.259521 -14179.993735  132.862500 -14279.937485    34.0125   65.931250       32.812500     1.0    -14646.818848         False          False   True
5  -14179.993735  -14246.818735  10880.447021 -14179.993735   65.931250 -14246.818735    34.0125   32.812500        0.000000     2.0    -14646.818848         False          False   True
6  -14179.993735  -14214.006235  10947.634521 -14179.993735   31.465625 -14214.006235    34.0125    0.000000      -32.812500     3.0    -14646.818848         False          False   True
7  -14096.354672  -14181.193735  10996.807861 -14096.354672   83.639062 -14181.193735    34.0125   50.826563       -0.000098     1.0    -14130.367172          True           True  False
8  -14054.489829  -14130.317139  10996.807861 -14054.489829   92.691406 -14130.317139    34.0125   41.814810      -58.135254     1.0    -14130.367172         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=525/16.[0m
[08/11 03:15:30]  --------------------------------------------------------------------------------
[08/11 03:15:30]  Iteration: 393 (0 solution, 392 counterexamples)
[08/11 03:25:07]  Generator returned sat in 562.427520 secs.
[08/11 03:25:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:25:26]  Improved gap from 0 to 31.25
[08/11 03:25:28]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/11 03:25:28]  Verifer returned sat in 17.868960 secs.
[08/11 03:25:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -14646.677246  -14777.977068  10472.459521 -14646.677246  131.400146 -14777.977068       0.00  131.299822      131.249822     2.0    -14777.977068            -1             -1   False
1  -14646.627068  -14777.927068  10472.459521 -14646.627068  131.350000 -14777.927068       0.05  131.250000       31.250000     2.0    -14646.677068         False          False   False
2  -14646.527068  -14677.927068  10541.109521 -14646.527068  131.350000 -14677.927068       0.05   31.350000        0.000000     3.0    -14646.677068         False          False    True
3  -14418.277068  -14546.577068  10541.109521 -14418.277068  259.600000 -14546.577068      97.05   31.250000       31.250000     1.0    -14646.677068         False           True   False
4  -14318.227068  -14482.527068  10541.109521 -14318.227068  131.300000 -14482.527068      97.10   67.200000       31.250000     1.0    -14646.677068         False          False    True
5  -14318.227068  -14446.577068  10609.859521 -14318.227068   67.150000 -14446.577068      97.10   31.250000        0.000000     2.0    -14646.677068         False          False    True
6  -14313.902068  -14415.327068  10678.609521 -14313.902068   35.575000 -14415.327068      97.10    4.325000      -26.925000     3.0    -14646.677068         False          False    True
7  -14236.314568  -14384.077068  10727.109619 -14236.314568   81.912500 -14384.077068      97.10   50.662500       -0.837402     1.0    -14333.414568          True           True   False
8  -14198.295818  -14332.576904  10727.109619 -14198.295818   88.681250 -14332.576904      97.10   37.181086      -62.818652     1.0    -14333.414568         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=125/4.[0m
[08/11 03:25:28]  --------------------------------------------------------------------------------
[08/11 03:25:28]  Iteration: 394 (0 solution, 393 counterexamples)
[08/11 03:37:21]  Generator returned sat in 697.349077 secs.
[08/11 03:37:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:37:41]  Improved gap from 5759/200 to 31.25
[08/11 03:37:42]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 03:37:42]  Verifer returned sat in 18.343237 secs.
[08/11 03:37:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -11784.282227  -11915.531982  7847.909424 -11784.282227  131.350098 -11915.531982    0.000000  131.249756      131.249756     2.0    -11915.531982            -1             -1   False
1  -11784.231934  -11815.532227  7847.909424 -11784.231934  131.300049 -11815.532227    0.050049   31.250244       31.250000     2.0    -11784.281982         False          False   False
2  -11784.182129  -11815.531982  7916.609619 -11784.182129   31.300049 -11815.531982    0.050049   31.299805        0.000000     3.0    -11784.232178         False          False    True
3  -11549.593262  -11685.376465  7916.609619 -11549.593262  265.888672 -11685.376465  103.388916   32.394287       31.250000     1.0    -11784.232178         False           True   False
4  -11449.543213  -11618.754150  7916.609619 -11449.543213  132.444336 -11618.754150  103.438965   65.771973       31.250000     1.0    -11784.232178         False          False    True
5  -11449.543213  -11584.232178  7985.359619 -11449.543213   65.722168 -11584.232178  103.438965   31.250000        0.000000     2.0    -11784.232178         False          False    True
6  -11447.932129  -11552.982178  8054.109375 -11447.932129   32.861084 -11552.982178  103.438965    1.611084      -29.639160     3.0    -11784.232178         False          False    True
7  -11365.415527  -11521.731934  8101.231689 -11365.415527   84.127686 -11521.731934  103.438965   52.877441       -0.000244     1.0    -11468.854492          True           True   False
8  -11326.218018  -11468.804443  8101.231689 -11326.218018   92.074951 -11468.804443  103.438965   39.147461      -60.802734     1.0    -11468.854492         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=125/4.[0m
[08/11 03:37:42]  --------------------------------------------------------------------------------
[08/11 03:37:42]  Iteration: 395 (0 solution, 394 counterexamples)
[08/11 03:38:53]  Generator returned sat in 56.517978 secs.
[08/11 03:38:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:39:10]  Improved gap from 1/20 to 31.25
[08/11 03:39:11]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/11 03:39:11]  Verifer returned sat in 15.166774 secs.
[08/11 03:39:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -11884.481934  -12084.482178  7916.859619 -11884.481934    0.100098 -12084.482178   0.100098  199.900146       99.900146     2.0    -12084.482178            -1             -1     -1
1  -11884.481934  -11947.182373  7916.859619 -11884.481934    0.100098 -11947.182373   0.100098   62.600342       -0.099854     2.0    -12084.482178         False          False   True
2  -11684.482178  -11884.482178  7916.859619 -11684.482178  262.600098 -11884.482178   0.100098  199.899902       99.899902     1.0    -12084.482178         False          False   True
3  -11621.882080  -11684.482178  7916.859619 -11621.882080  262.500000 -11684.482178   0.100098   62.500000       62.500000     1.0    -11621.982178         False          False   True
4  -11553.132080  -11619.000732  7916.859619 -11553.132080  131.250000 -11619.000732   0.100098   65.768555       31.250000     1.0    -11621.982178         False          False   True
5  -11553.132080  -11584.482178  7985.609619 -11553.132080   65.625000 -11584.482178   0.100098   31.250000        0.000000     2.0    -11621.982178         False          False   True
6  -11551.569580  -11553.232178  8054.359619 -11551.569580   32.812500 -11553.232178   0.100098    1.562500      -29.687500     3.0    -11621.982178         False          False   True
7  -11469.100830  -11521.982178  8101.578369 -11469.100830   84.031250 -11521.982178   0.100098   52.781250        0.000000     1.0    -11469.200928          True           True  False
8  -11429.357178  -11469.100830  8101.578369 -11429.357178   92.524902 -11469.100830   0.100098   39.643555      -60.256348     1.0    -11469.200928         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409599/4096.[0m
[08/11 03:39:12]  --------------------------------------------------------------------------------
[08/11 03:39:12]  Iteration: 396 (0 solution, 395 counterexamples)
[08/11 03:48:32]  Generator returned sat in 544.545111 secs.
[08/11 03:48:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:48:50]  Improved gap from 0 to 37.5
[08/11 03:48:50]  Improved number of small numbers from 94 to 98 out of a max of 114
[08/11 03:48:50]  Verifer returned sat in 16.010768 secs.
[08/11 03:48:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -11784.482422  -11984.482422  7923.109619 -11784.482422    0.049805 -11984.482422       0.05  199.950000      199.949756     3.0    -11984.482422            -1             -1     -1
1  -11784.482422  -11884.482178  7923.109619 -11784.482422    0.050049 -11884.482178       0.05   99.949756       99.949756     4.0    -11984.482422         False          False   True
2  -11685.913428  -11784.482178  7923.109619 -11685.913428  198.518750 -11784.482178       0.05   98.518750       98.518750     1.0    -11984.482422          True           True  False
3  -11546.882178  -11685.963428  7923.109619 -11546.882178  237.550000 -11685.963428       0.10  138.981250      137.500000     2.0    -11984.482422         False          False  False
4  -11546.882178  -11608.919678  7923.109619 -11546.882178  119.775000 -11608.919678       0.10   61.937500       37.500000     2.0    -11984.482422         False          False   True
5  -11546.882178  -11584.482178  7985.609619 -11546.882178   61.887500 -11584.482178       0.10   37.500000        0.000000     3.0    -11984.482422         False          False   True
6  -11546.882178  -11546.982178  8048.109619 -11546.882178   32.943750 -11546.982178       0.10    0.000000      -37.500000     4.0    -11984.482422         False          False   True
7  -11458.919678  -11509.482178  8097.646973 -11458.919678   87.962500 -11509.482178       0.10   50.462500       -0.000146     1.0    -11459.019678          True           True  False
8  -11413.682178  -11458.969727  8152.409424 -11413.682178   95.700000 -11458.969727       0.10   45.187549       -0.000195     1.0    -11459.019678         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=275/2.[0m
[08/11 03:48:51]  --------------------------------------------------------------------------------
[08/11 03:48:51]  Iteration: 397 (0 solution, 396 counterexamples)
[08/11 03:51:12]  Generator returned sat in 126.111024 secs.
[08/11 03:51:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:51:33]  Improved gap from 0 to 31.25
[08/11 03:51:34]  Improved number of small numbers from 60 to 83 out of a max of 114
[08/11 03:51:34]  Verifer returned sat in 19.698615 secs.
[08/11 03:51:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -11775.552246  -11906.802246  7845.429688 -11775.552246    0.049805 -11906.802246       0.00  131.250000      131.250000     2.0    -11906.802246            -1             -1    True
1  -11775.552246  -11906.802246  7845.429688 -11775.552246  131.249756 -11906.802246       0.00  131.250000       31.250000     2.0    -11906.802246         False          False    True
2  -11775.552246  -11806.802178  7914.179619 -11775.552246    0.050000 -11806.802178       0.00   31.249932       -0.000068     3.0    -11775.552246         False          False    True
3  -11546.202178  -11675.552178  7914.179619 -11546.202178  260.600000 -11675.552178      98.10   31.250000       31.250000     1.0    -11775.552246         False           True   False
4  -11446.152178  -11612.414678  7914.179619 -11446.152178  131.300000 -11612.414678      98.15   68.112500       31.250000     1.0    -11775.552246         False          False    True
5  -11446.152178  -11575.552178  7982.929619 -11446.152178   66.650000 -11575.552178      98.15   31.250000        0.000000     2.0    -11775.552246         False          False    True
6  -11442.077178  -11544.302178  8051.679619 -11442.077178   35.325000 -11544.302178      98.15    4.075000      -27.175000     3.0    -11775.552246         False          False    True
7  -11364.364678  -11513.052178  8101.142090 -11364.364678   81.787500 -11513.052178      98.15   50.537500       -0.000029     1.0    -11462.514678          True           True   False
8  -11325.827178  -11462.464844  8101.142090 -11325.827178   89.075000 -11462.464844      98.15   38.487666      -61.462529     1.0    -11462.514678         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=125/4.[0m
[08/11 03:51:35]  --------------------------------------------------------------------------------
[08/11 03:51:35]  Iteration: 398 (0 solution, 397 counterexamples)
[08/11 03:52:57]  Generator returned sat in 67.027138 secs.
[08/11 03:53:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:53:13]  Improved gap from 458411/15360 to 29.6875
[08/11 03:53:15]  Improved number of small numbers from 60 to 83 out of a max of 114
[08/11 03:53:15]  Verifer returned sat in 15.116275 secs.
[08/11 03:53:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -12023.092773  -12152.780273  8091.407715 -12023.092773    0.05000 -12152.780273     0.0000  129.687500      129.687500     5.0    -12152.780273            -1             -1     -1
1  -12023.092773  -12052.780273  8091.407715 -12023.092773    0.05000 -12052.780273     0.0000   29.687500       29.687500     2.0    -12152.780273         False           True  False
2  -12023.092773  -12052.780060  8161.720001 -12023.092773    0.05000 -12052.780060     0.0000   29.687286       -0.000214     3.0    -12152.780273         False          False  False
3  -11794.600060  -11923.092560  8161.720001 -11794.600060  258.18000 -11923.092560    98.8050   29.687500       29.687500     1.0    -12152.780273          True           True  False
4  -11694.197560  -11859.450060  8161.720001 -11694.197560  130.09000 -11859.450060    99.2075   66.045000       29.687500     1.0    -12152.780273         False          False   True
5  -11694.197560  -11823.092560  8232.032501 -11694.197560   66.04500 -11823.092560    99.2075   29.687500        0.000000     2.0    -12152.780273         False          False   True
6  -11688.862560  -11793.405060  8302.345001 -11688.862560   35.02250 -11793.405060    99.2075    5.335000      -24.352500     3.0    -12152.780273         False          False   True
7  -11610.342560  -11763.717560  8348.177490 -11610.342560   83.85500 -11763.717560    99.2075   54.167500       -0.000011     1.0    -11709.550060          True           True  False
8  -11573.216310  -11709.500000  8411.051025 -11573.216310   91.29375 -11709.500000    99.2075   37.076190       -0.000226     1.0    -11709.550060         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=475/16.[0m
[08/11 03:53:15]  --------------------------------------------------------------------------------
[08/11 03:53:15]  Iteration: 399 (0 solution, 398 counterexamples)
[08/11 04:00:34]  Generator returned sat in 422.675957 secs.
[08/11 04:00:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:00:48]  Improved gap from 443/16 to 32.8125
[08/11 04:00:48]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 04:00:48]  Verifer returned sat in 11.605311 secs.
[08/11 04:00:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -12646.249023  -12910.173584  8748.801025 -12646.249023  263.924805 -12910.173584   0.000000  263.924561      163.924805     4.0    -12910.173584            -1             -1     -1
1  -12646.249023  -12742.986328  8748.801025 -12646.249023  263.825000 -12742.986328   0.000000   96.737305       63.924805     4.0    -12646.249023         False           True  False
2  -12479.261475  -12708.492432  8748.801025 -12479.261475  263.724854 -12708.492432  65.506104  163.724854       65.406250     4.0    -12544.767578         False           True  False
3  -12379.361328  -12510.173828  8748.801025 -12379.361328  263.625000 -12510.173828  65.506104   65.306396       65.306396     1.0    -12444.867432         False           True   True
4  -12311.855225  -12444.867676  8748.801025 -12311.855225  132.812500 -12444.867676  65.506104   67.506348       32.812500     2.0    -12444.867432         False          False   True
5  -12311.855225  -12410.173828  8815.988525 -12311.855225   67.406250 -12410.173828  65.506104   32.812500        0.000000     2.0    -12444.867432         False          False   True
6  -12309.964600  -12377.361328  8883.176025 -12309.964600   34.703125 -12377.361328  65.506104    1.890625      -30.921875     3.0    -12444.867432         False          False   True
7  -12229.597412  -12344.548828  8933.595215 -12229.597412   82.257812 -12344.548828  65.506104   49.445312       -0.135498     1.0    -12295.103516          True           True  False
8  -12189.254395  -12294.967773  8933.595215 -12189.254395   89.788330 -12294.967773  65.506104   40.207275      -59.792480     1.0    -12295.103516         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2093/32.[0m
[08/11 04:00:49]  --------------------------------------------------------------------------------
[08/11 04:00:49]  Iteration: 400 (0 solution, 399 counterexamples)
[08/11 04:08:44]  Generator returned sat in 459.309428 secs.
[08/11 04:08:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:09:03]  Improved gap from 409/16384 to 37.5
[08/11 04:09:03]  Improved number of small numbers from 61 to 80 out of a max of 114
[08/11 04:09:03]  Verifer returned sat in 16.662191 secs.
[08/11 04:09:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8849.394287   -9149.347412  8758.467090 -8849.394287    0.046631 -9149.347412        0.0  299.953125      299.952926     3.0     -9149.347412            -1             -1    True
1   -8849.394287   -9049.347412  8758.467090 -8849.394287    0.093750 -9049.347412        0.0  199.953125      199.952926     3.0     -9149.347412         False          False    True
2   -8849.394287   -8949.797214  8758.467090 -8849.394287  199.953125 -8949.797214        0.0  100.402926       99.952926     3.0     -9149.347412         False          False    True
3   -8711.847214   -8849.347214  8758.467090 -8711.847214  237.950000 -8849.347214        0.0  137.500000      137.500000     1.0     -9149.347412         False          False    True
4   -8711.847214   -8774.381589  8758.467090 -8711.847214  120.975000 -8774.381589        0.0   62.534375       37.500000     2.0     -9149.347412         False          False    True
5   -8711.847214   -8749.347214  8820.967090 -8711.847214   62.487500 -8749.347214        0.0   37.500000        0.000000     3.0     -9149.347412         False          False    True
6   -8711.847214   -8711.847214  8883.467090 -8711.847214   33.243750 -8711.847214        0.0    0.000000      -37.500000     4.0     -9149.347412         False          False    True
7   -8624.475339   -8674.347214  8933.594971 -8624.475339   87.371875 -8674.347214        0.0   49.871875       -0.000244     1.0     -8624.475339          True           True   False
8   -8578.644089   -8624.428467  8933.594971 -8578.644089   95.703125 -8624.428467        0.0   45.784378      -54.168994     1.0     -8624.475339         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819199/4096.[0m
[08/11 04:09:04]  --------------------------------------------------------------------------------
[08/11 04:09:04]  Iteration: 401 (0 solution, 400 counterexamples)
[08/11 04:14:49]  Generator returned sat in 328.662383 secs.
[08/11 04:14:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:15:11]  Improved gap from 0 to 31.25
[08/11 04:15:12]  Improved number of small numbers from 59 to 81 out of a max of 114
[08/11 04:15:12]  Verifer returned sat in 21.052129 secs.
[08/11 04:15:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9169.345459   -9269.495117  8866.890273 -9169.345459   99.999756 -9269.495117       0.05  100.099658      100.049870     7.0     -9269.495117            -1             -1     -1
1   -9169.345459   -9269.445312  8866.890273 -9169.345459  100.000000 -9269.445312       0.05  100.049854        0.049870     4.0     -9269.495117         False           True   True
2   -9169.345459   -9169.445329  8866.890273 -9169.345459  100.000000 -9169.445329       0.05    0.049870      -99.950130     4.0     -9269.495117          True           True  False
3   -8910.795329   -8969.445329  8866.890273 -8910.795329  258.600000 -8969.445329      27.40   31.250000       31.250000     1.0     -9269.495117          True           True  False
4   -8810.745329   -8906.307829  8866.890273 -8810.745329  131.300000 -8906.307829      27.45   68.112500       31.250000     1.0     -9269.495117         False          False   True
5   -8810.745329   -8869.445329  8935.640273 -8810.745329   67.650000 -8869.445329      27.45   31.250000        0.000000     2.0     -9269.495117         False          False   True
6   -8806.670329   -8838.195329  9004.390137 -8806.670329   35.325000 -8838.195329      27.45    4.075000      -27.175137     3.0     -9269.495117         False          False   True
7   -8728.957829   -8787.657829  9053.852539 -8728.957829   81.787500 -8787.657829      27.45   31.250000       -0.000234     1.0     -8756.407829          True           True  False
8   -8661.489079   -8756.357666  9086.383789 -8661.489079   98.718750 -8756.357666      27.45   67.418587       -0.000234     1.0     -8756.407829         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=125/4.[0m
[08/11 04:15:13]  --------------------------------------------------------------------------------
[08/11 04:15:13]  Iteration: 402 (0 solution, 401 counterexamples)
[08/11 04:25:14]  Generator returned sat in 585.223814 secs.
[08/11 04:25:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:25:28]  Improved gap from 0 to 32.8125
[08/11 04:25:30]  Improved number of small numbers from 66 to 79 out of a max of 114
[08/11 04:25:30]  Verifer returned sat in 13.285299 secs.
[08/11 04:25:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9418.940430   -9551.853271  8832.715576 -9418.940430    0.100000 -9551.853271     0.0000  132.912842       32.912907     5.0     -9551.853271            -1             -1     -1
1   -9386.028320   -9418.840641  8866.890381 -9386.028320  165.824951 -9418.840641     0.0000   32.812321       -0.000179     1.0     -9551.853271         False           True  False
2   -9253.115641   -9286.028141  8866.890381 -9253.115641  165.725000 -9286.028141     0.1000   32.812500       32.812500     1.0     -9253.215641         False          False  False
3   -9018.103141   -9186.028141  8866.890381 -9018.103141  267.825000 -9186.028141   135.1125   32.812500       32.812500     1.0     -9253.215641         False          False   True
4   -8918.003141   -9118.771891  8866.890381 -8918.003141  132.912500 -9118.771891   135.2125   65.556250       32.812500     1.0     -9253.215641         False          False   True
5   -8918.003141   -9086.028141  8934.077881 -8918.003141   65.456250 -9086.028141   135.2125   32.812500        0.000000     2.0     -9253.215641         False          False   True
6   -8918.003141   -9053.215641  9001.265381 -8918.003141   32.228125 -9053.215641   135.2125    0.000000      -32.812500     3.0     -9253.215641         False          False   True
7   -8833.982829   -9020.403141  9050.057373 -8833.982829   84.020313 -9020.403141   135.2125   51.207813       -0.000195     1.0     -8969.195329          True           True  False
8   -8792.496110   -8969.095215  9050.057373 -8792.496110   92.694531 -8969.095215   135.2125   41.386605      -58.513477     1.0     -8969.195329         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=525/16.[0m
[08/11 04:25:30]  --------------------------------------------------------------------------------
[08/11 04:25:30]  Iteration: 403 (0 solution, 402 counterexamples)
[08/11 04:26:42]  Generator returned sat in 56.198365 secs.
[08/11 04:26:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:26:59]  Improved gap from 22413/700 to 32.8125
[08/11 04:27:01]  Improved number of small numbers from 64 to 81 out of a max of 114
[08/11 04:27:01]  Verifer returned sat in 15.706455 secs.
[08/11 04:27:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8711.973877   -8711.985840  8832.715576 -8711.973877    0.011853 -8711.985840   0.000000   0.011963       -0.011733     2.0      -8711.98584            -1             -1   False
1   -8679.161621   -8711.962144  8899.903076 -8679.161621   32.824219 -8711.962144   0.000000  32.800523       -0.011977     1.0      -8711.98584         False          False   False
2   -8679.137790   -8679.149644  8899.903076 -8679.137790   32.824353 -8679.149644   0.000000   0.011853      -99.988147     1.0      -8711.98584         False          False   False
3   -8411.500937   -8479.149644  8899.903076 -8411.500937  267.648707 -8479.149644  34.836207  32.812500       32.812500     1.0      -8711.98584         False          False   False
4   -8311.489084   -8411.804143  8899.903076 -8311.489084  132.824353 -8411.804143  34.848060  65.466999       32.812500     1.0      -8711.98584         False          False    True
5   -8311.489084   -8379.149644  8967.090576 -8311.489084   65.412177 -8379.149644  34.848060  32.812500        0.000000     2.0      -8711.98584         False          False    True
6   -8311.489084   -8346.337144  9034.278076 -8311.489084   32.206088 -8346.337144  34.848060   0.000000      -32.812500     3.0      -8711.98584         False          False    True
7   -8226.979789   -8313.524644  9082.581055 -8226.979789   84.509294 -8313.524644  34.848060  51.696794       -0.000227     1.0      -8261.82785          True           True   False
8   -8185.282187   -8261.815918  9082.581299 -8185.282187   93.394397 -8261.815918  34.848060  41.685671      -58.302381     1.0      -8261.82785         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=525/16.[0m
[08/11 04:27:01]  --------------------------------------------------------------------------------
[08/11 04:27:01]  Iteration: 404 (0 solution, 403 counterexamples)
[08/11 04:32:27]  Generator returned sat in 309.816660 secs.
[08/11 04:32:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:32:50]  Improved gap from 0 to 31.25
[08/11 04:32:52]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/11 04:32:52]  Verifer returned sat in 21.747620 secs.
[08/11 04:32:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -11647.507812  -11678.832764  8270.155029 -11647.507812    0.025000 -11678.832764   0.000000  31.324951       31.324910     2.0    -11678.832764            -1             -1   False
1  -11647.507812  -11678.757812  8338.830039 -11647.507812   31.299805 -11678.757812   0.000000  31.250000       -0.000080     2.0    -11678.832764         False          False   False
2  -11647.482666  -11647.507732  8338.830039 -11647.482666   31.275146 -11647.507732   0.000000   0.025066      -99.974934     1.0    -11647.482666         False          False   False
3  -11388.463288  -11447.507732  8338.830039 -11388.463288  259.044444 -11447.507732  27.547222  31.497222       31.497222     1.0    -11647.482666         False          False   False
4  -11288.438288  -11383.796621  8338.830039 -11288.438288  131.522222 -11383.796621  27.572222  67.786111       31.497222     1.0    -11647.482666         False          False    True
5  -11288.438288  -11347.507732  8407.332817 -11288.438288   67.761111 -11347.507732  27.572222  31.497222        0.000000     2.0    -11647.482666         False          False    True
6  -11284.054954  -11316.010510  8476.082817 -11284.054954   35.880556 -11316.010510  27.572222   4.383333      -26.866667     3.0    -11647.482666         False          False    True
7  -11206.249399  -11284.760510  8525.143928 -11206.249399   82.188889 -11284.760510  27.572222  50.938889        0.000000     1.0    -11233.821621          True           True   False
8  -11168.075788  -11233.821533  8525.144043 -11168.075788   89.112500 -11233.821533  27.572222  38.173523      -61.826274     1.0    -11233.821621         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=11339/360.[0m
[08/11 04:32:52]  --------------------------------------------------------------------------------
[08/11 04:32:52]  Iteration: 405 (0 solution, 404 counterexamples)
[08/11 04:39:12]  Generator returned sat in 363.089135 secs.
[08/11 04:39:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:39:29]  Improved gap from 0 to 31.25
[08/11 04:39:29]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 04:39:29]  Verifer returned sat in 15.087698 secs.
[08/11 04:39:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -11795.104248  -11995.104248  8486.426758 -11795.104248    0.046631 -11995.104248   0.000000  200.000000      100.000000     7.0    -11995.104248            -1             -1     -1
1  -11795.104248  -11895.104248  8486.426758 -11795.104248    0.046875 -11895.104248   0.000000  100.000000        0.000000     3.0    -11995.104248         False           True  False
2  -11695.104248  -11726.354492  8486.426758 -11695.104248  200.000000 -11726.354492   0.000000   31.250244        0.000000     1.0    -11995.104248          True           True  False
3  -11467.854492  -11595.104248  8486.426758 -11467.854492  258.500000 -11595.104248  95.953125   31.296631       31.296631     1.0    -11995.104248         False          False  False
4  -11367.901123  -11530.479248  8486.426758 -11367.901123  131.250000 -11530.479248  95.953125   66.625000       31.250000     1.0    -11995.104248         False          False   True
5  -11367.901123  -11495.104248  8555.176758 -11367.901123   66.625000 -11495.104248  95.953125   31.250000        0.000000     2.0    -11995.104248         False          False   True
6  -11364.838623  -11463.854248  8623.926758 -11364.838623   34.312500 -11463.854248  95.953125    3.062500      -28.187500     3.0    -11995.104248         False          False   True
7  -11284.619873  -11432.604248  8671.848633 -11284.619873   83.281250 -11432.604248  95.953125   52.031250       -0.046875     1.0    -11380.572998          True           True  False
8  -11245.572998  -11380.526123  8671.848633 -11245.572998   91.078125 -11380.526123  95.953125   39.000000      -61.000000     1.0    -11380.572998         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=128191/4096.[0m
[08/11 04:39:30]  --------------------------------------------------------------------------------
[08/11 04:39:30]  Iteration: 406 (0 solution, 405 counterexamples)
[08/11 04:40:40]  Generator returned sat in 54.032730 secs.
[08/11 04:40:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:40:59]  Improved gap from 6521/256 to 29.6875
[08/11 04:41:01]  Improved number of small numbers from 64 to 85 out of a max of 114
[08/11 04:41:01]  Verifer returned sat in 18.150059 secs.
[08/11 04:41:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -12248.404541  -12278.106201  8416.114258 -12248.404541    0.028076 -12278.106201   0.000000  29.701660       29.687588     3.0    -12278.106201            -1             -1     -1
1  -12248.404541  -12278.092041  8486.426514 -12248.404541    0.014009 -12278.092041   0.000000  29.687500       -0.000156     3.0    -12248.404541         False           True  False
2  -12248.390381  -12248.390620  8486.426758 -12248.390381   29.701660 -12248.390620   0.000000   0.000239      -99.985752     1.0    -12248.404541         False           True  False
3  -11992.987603  -12048.404629  8486.426758 -11992.987603  255.403017 -12048.404629  25.729526  29.687500       29.687500     1.0    -12248.404541         False          False  False
4  -11892.973594  -11985.632673  8486.426758 -11892.973594  129.701509 -11985.632673  25.743534  66.915544       29.687500     1.0    -12248.404541         False          False   True
5  -11892.973594  -11948.404629  8556.739258 -11892.973594   66.850754 -11948.404629  25.743534  29.687500        0.000000     2.0    -12248.404541         False          False   True
6  -11888.235717  -11918.717129  8627.051758 -11888.235717   34.425377 -11918.717129  25.743534   4.737877      -24.949623     3.0    -12248.404541         False          False   True
7  -11809.917156  -11889.029629  8673.668701 -11809.917156   83.056439 -11889.029629  25.743534  53.368939       -0.014118     1.0    -11835.660690          True           True  False
8  -11772.456353  -11835.646484  8673.668945 -11772.456353   90.829741 -11835.646484  25.743534  37.446597      -62.553071     1.0    -11835.660690         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=475/16.[0m
[08/11 04:41:01]  --------------------------------------------------------------------------------
[08/11 04:41:01]  Iteration: 407 (0 solution, 406 counterexamples)
[08/11 04:44:25]  Generator returned sat in 186.785372 secs.
[08/11 04:44:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:44:38]  Improved gap from 13346383/475136 to 29.6875
[08/11 04:44:39]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/11 04:44:39]  Verifer returned sat in 11.244776 secs.
[08/11 04:44:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -13151.874756  -13256.233398  8486.426758 -13151.874756    0.050049 -13256.233398   0.050049  104.308594      104.308594     3.0    -13256.233398            -1             -1     -1
1  -13151.874756  -13156.233398  8486.426758 -13151.874756    0.050049 -13156.233398   0.050049    4.308594        4.308594     2.0    -13256.233398         False           True   True
2  -12958.333252  -13151.875000  8486.426758 -12958.333252  197.850098 -13151.875000   0.050049  193.491699       97.850098     1.0    -13256.233398         False          False   True
3  -12894.449951  -12956.233398  8486.426758 -12894.449951  257.375000 -12956.233398   0.050049   61.733398       61.733398     1.0    -13256.233398         False          False   True
4  -12826.495850  -12892.641113  8486.426758 -12826.495850  129.687500 -12892.641113   0.050049   66.095215       29.687500     1.0    -13256.233398         False          False   True
5  -12826.495850  -12856.233398  8556.739258 -12826.495850   65.843750 -12856.233398   0.050049   29.687500        0.000000     2.0    -13256.233398         False          False   True
6  -12822.261475  -12826.545898  8627.051758 -12822.261475   33.921875 -12826.545898   0.050049    4.234375      -25.453125     3.0    -13256.233398         False          False   True
7  -12742.691162  -12796.858398  8672.934570 -12742.691162   83.804688 -12796.858398   0.050049   54.117188        0.000000     1.0    -12742.741211          True           True  False
8  -12705.014648  -12742.690918  8735.257812 -12705.014648   91.793701 -12742.690918   0.050049   37.626221       -0.000244     1.0    -12742.741211         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=200499/2048.[0m
[08/11 04:44:39]  --------------------------------------------------------------------------------
[08/11 04:44:39]  Iteration: 408 (0 solution, 407 counterexamples)
[08/11 04:46:02]  Generator returned sat in 66.603491 secs.
[08/11 04:46:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:46:19]  Improved gap from 475/16 to 29.6875
[08/11 04:46:21]  Improved number of small numbers from 59 to 81 out of a max of 114
[08/11 04:46:21]  Verifer returned sat in 16.371344 secs.
[08/11 04:46:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -12809.264893  -12972.230225  8354.024170 -12809.264893    0.100098 -12972.230225        0.0  162.965332       70.212446     8.0    -12972.230225            -1             -1     -1
1  -12779.477539  -12809.165039  8354.024209 -12779.477539  192.752686 -12809.165039        0.0   29.687500       -0.000162     1.0    -12972.230225         False           True  False
2  -12616.512207  -12772.000988  8354.024209 -12616.512207  192.652832 -12772.000988        0.0  155.488781       62.965170     1.0    -12616.512207         False          False  False
3  -12516.312100  -12579.634322  8354.024209 -12516.312100  255.688889 -12579.634322        0.1   63.222222       63.065278     1.0    -12616.512207         False          False  False
4  -12449.689877  -12516.312100  8354.024209 -12449.689877  129.844444 -12516.312100        0.1   66.522222       29.687500     1.0    -12616.512207         False          False   True
5  -12449.689877  -12479.477377  8424.336709 -12449.689877   66.422222 -12479.477377        0.1   29.687500        0.000000     2.0    -12616.512207         False          False   True
6  -12444.666266  -12449.789877  8494.649209 -12444.666266   34.711111 -12449.789877        0.1    5.023611      -24.663889     3.0    -12616.512207         False          False   True
7  -12366.412100  -12420.102377  8540.958740 -12366.412100   83.277778 -12420.102377        0.1   53.590278       -0.100191     1.0    -12366.512100          True           True  False
8  -12329.258627  -12366.411865  8540.958740 -12329.258627   90.743750 -12366.411865        0.1   37.053238      -62.946719     1.0    -12366.512100         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=45407/720.[0m
[08/11 04:46:22]  --------------------------------------------------------------------------------
[08/11 04:46:22]  Iteration: 409 (0 solution, 408 counterexamples)
[08/11 04:55:08]  Generator returned sat in 510.877881 secs.
[08/11 04:55:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:55:29]  Improved gap from 1/600 to 31.25
[08/11 04:55:30]  Improved number of small numbers from 72 to 82 out of a max of 114
[08/11 04:55:30]  Verifer returned sat in 19.021083 secs.
[08/11 04:55:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -12616.512207  -12716.412354  8288.541992 -12616.512207    0.200195 -12716.412354   0.000000  99.900146       99.899919     2.0    -12716.412354            -1             -1   False
1  -12616.512207  -12716.412109  8288.542236 -12616.512207    0.100000 -12716.412109   0.000000  99.899902       -0.099837     2.0    -12616.512207         False          False   False
2  -12585.262207  -12616.412207  8357.292074 -12585.262207  131.149902 -12616.412207   0.000000  31.150000       -0.100000     1.0    -12616.512207         False          False   False
3  -12354.278874  -12485.162207  8357.292074 -12354.278874  262.133333 -12485.162207  98.716667  32.166667       32.166667     1.0    -12616.512207         False          False   False
4  -12254.378874  -12418.728874  8357.292074 -12254.378874  132.066667 -12418.728874  98.716667  65.633333       32.066667     1.0    -12616.512207         False          False    True
5  -12254.378874  -12385.162207  8425.225407 -12254.378874   65.533333 -12385.162207  98.716667  32.066667        0.000000     2.0    -12616.512207         False          False    True
6  -12254.178874  -12353.095540  8493.975407 -12254.178874   32.266667 -12353.095540  98.716667   0.200000      -31.050000     3.0    -12616.512207         False          False    True
7  -12170.212207  -12321.845540  8540.958740 -12170.212207   84.166667 -12321.845540  98.716667  52.916667       -0.100000     1.0    -12268.928874          True           True   False
8  -12130.603874  -12268.828857  8601.450195 -12130.603874   92.525000 -12268.828857  98.716667  39.508317       -0.000212     1.0    -12268.928874         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=193/6.[0m
[08/11 04:55:31]  --------------------------------------------------------------------------------
[08/11 04:55:31]  Iteration: 410 (0 solution, 409 counterexamples)
[08/11 04:59:56]  Generator returned sat in 250.273790 secs.
[08/11 04:59:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:00:12]  Improved gap from 0 to 28.125
[08/11 05:00:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 05:00:12]  Verifer returned sat in 13.433379 secs.
[08/11 05:00:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -12509.610107  -12666.060303  8181.739990 -12509.610107    0.100098 -12666.060303   0.100098  156.350098       99.899902     2.0    -12666.060303            -1             -1     -1
1  -12509.510254  -12537.735352  8181.740234 -12509.510254  156.449951 -12537.735352   0.100098   28.125000        0.000000     3.0    -12666.060303         False          False   True
2  -12381.285400  -12509.610352  8181.740234 -12381.285400  156.349854 -12509.610352   0.199951  128.125000       28.125000     2.0    -12381.485352          True           True  False
3  -12254.410400  -12310.385254  8181.740234 -12254.410400  255.000000 -12310.385254  27.074951   28.899902       28.125000     1.0    -12381.485352         False          False   True
4  -12154.310303  -12247.585205  8181.740234 -12154.310303  129.000000 -12247.585205  27.175049   66.099854       28.125000     1.0    -12381.485352         False          False   True
5  -12154.310303  -12209.610352  8253.615234 -12154.310303   66.000000 -12209.610352  27.175049   28.125000        0.000000     2.0    -12381.485352         False          False   True
6  -12147.935303  -12181.485352  8325.490234 -12147.935303   34.500000 -12181.485352  27.175049    6.375000      -21.750000     3.0    -12381.485352         False          False   True
7  -12070.610352  -12153.360352  8369.915039 -12070.610352   83.699951 -12153.360352  27.175049   55.574951       -0.000244     1.0    -12097.785400          True           True  False
8  -12035.222900  -12097.685059  8369.915039 -12035.222900   90.962402 -12097.685059  27.175049   35.287109      -64.612793     1.0    -12097.785400         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=225/8.[0m
[08/11 05:00:13]  --------------------------------------------------------------------------------
[08/11 05:00:13]  Iteration: 411 (0 solution, 410 counterexamples)
[08/11 05:01:27]  Generator returned sat in 59.845873 secs.
[08/11 05:01:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:01:47]  Improved gap from 207775/7424 to 28.125
[08/11 05:01:49]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/11 05:01:49]  Verifer returned sat in 18.709815 secs.
[08/11 05:01:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -18578.988281  -18679.088379  7608.515186 -18578.988281    0.100000 -18679.088379      0.000  100.100098      100.099938     4.0    -18679.088379            -1             -1     -1
1  -18578.988281  -18579.088379  7608.515186 -18578.988281    0.100000 -18579.088379      0.000    0.100098        0.099938     5.0    -18679.088379         False           True  False
2  -18479.088379  -18579.088219  7608.515186 -18479.088379  100.000000 -18579.088219      0.000   99.999840       -0.000160     4.0    -18679.088379          True           True  False
3  -18325.638219  -18379.088219  7608.515186 -18325.638219  253.450000 -18379.088219     25.325   28.125000       28.125000     1.0    -18679.088379          True           True  False
4  -18225.538219  -18316.675719  7608.515186 -18225.538219  128.225000 -18316.675719     25.425   65.712500       28.125000     1.0    -18679.088379         False          False   True
5  -18225.538219  -18279.088219  7680.390186 -18225.538219   65.612500 -18279.088219     25.425   28.125000        0.000000     2.0    -18679.088379         False          False   True
6  -18218.856969  -18250.963219  7752.265186 -18218.856969   34.806250 -18250.963219     25.425    6.681250      -21.443750     3.0    -18679.088379         False          False   True
7  -18142.072594  -18222.838219  7796.202881 -18142.072594   83.465625 -18222.838219     25.425   55.340625       -0.721680     1.0    -18167.497594          True           True  False
8  -18106.761657  -18166.775635  7796.202881 -18106.761657   90.651562 -18166.775635     25.425   34.588978      -65.410742     1.0    -18167.497594         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=225/8.[0m
[08/11 05:01:49]  --------------------------------------------------------------------------------
[08/11 05:01:49]  Iteration: 412 (0 solution, 411 counterexamples)
[08/11 05:06:51]  Generator returned sat in 286.117254 secs.
[08/11 05:06:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:07:09]  Improved gap from 225/8 to 29.6875
[08/11 05:07:11]  Improved number of small numbers from 57 to 79 out of a max of 114
[08/11 05:07:11]  Verifer returned sat in 17.459660 secs.
[08/11 05:07:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -19792.477783  -19792.516602  7610.077637 -19792.477783    0.019345 -19792.516602   0.000000   0.038818       -0.019369     2.0    -19792.516602            -1             -1   False
1  -19692.477783  -19792.458252  7610.077686 -19692.477783  100.038818 -19792.458252   0.000000  99.980469       -0.019320     1.0    -19792.516602         False          False   False
2  -19692.438965  -19692.458463  7610.077686 -19692.438965  100.019287 -19692.458463   0.000000   0.019499      -99.980501     1.0    -19692.438965         False          False   False
3  -19435.044773  -19492.458463  7610.077686 -19435.044773  257.413690 -19492.458463  27.726190  29.687500       29.687500     1.0    -19692.438965         False          False   False
4  -19335.025428  -19428.694513  7610.077686 -19335.025428  129.706845 -19428.694513  27.745536  65.923549       29.687500     1.0    -19692.438965         False          False    True
5  -19335.025428  -19392.458463  7680.390186 -19335.025428   65.853423 -19392.458463  27.745536  29.687500        0.000000     2.0    -19692.438965         False          False    True
6  -19330.286216  -19362.770963  7750.702686 -19330.286216   34.426711 -19362.770963  27.745536   4.739211      -24.948289     3.0    -19692.438965         False          False    True
7  -19250.968322  -19333.083463  7796.333008 -19250.968322   84.057106 -19333.083463  27.745536  54.369606       -0.000072     1.0    -19278.713858          True           True   False
8  -19213.503850  -19278.713623  7796.333252 -19213.503850   91.834077 -19278.713623  27.745536  37.464237      -62.535356     1.0    -19278.713858         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=475/16.[0m
[08/11 05:07:12]  --------------------------------------------------------------------------------
[08/11 05:07:12]  Iteration: 413 (0 solution, 412 counterexamples)
[08/11 05:11:45]  Generator returned sat in 257.369189 secs.
[08/11 05:11:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:12:06]  Improved gap from 78781/2688 to 28.125
[08/11 05:12:07]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/11 05:12:07]  Verifer returned sat in 19.655392 secs.
[08/11 05:12:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22764.485840  -22864.685791  9558.890186 -22764.485840    0.099854 -22864.685791   0.100000  100.099951      100.099846     2.0    -22864.685791            -1             -1     -1
1  -22764.485840  -22764.785889  9558.890186 -22764.485840    0.100098 -22764.785889   0.100000    0.200049        0.099846     3.0    -22864.685791         False          False   True
2  -22764.485840  -22764.685686  9558.890186 -22764.485840    0.100098 -22764.685686   0.100000    0.099846      -99.900154     4.0    -22864.685791          True           True  False
3  -22507.741241  -22565.882908  9558.890186 -22507.741241  256.844444 -22565.882908  28.819444   29.322222       28.125000     1.0    -22864.685791          True           True  False
4  -22407.641241  -22502.271797  9558.890186 -22407.641241  129.422222 -22502.271797  28.919444   65.711111       28.125000     1.0    -22864.685791         False          False   True
5  -22407.641241  -22464.685686  9630.765186 -22407.641241   65.711111 -22464.685686  28.919444   28.125000        0.000000     2.0    -22864.685791         False          False   True
6  -22400.910686  -22436.560686  9702.640186 -22400.910686   34.855556 -22436.560686  28.919444    6.730556      -21.394444     3.0    -22864.685791         False          False   True
7  -22323.552352  -22408.435686  9746.676270 -22323.552352   84.088889 -22408.435686  28.919444   55.963889       -0.000027     1.0    -22352.471797          True           True  False
8  -22288.553741  -22352.371826  9811.677490 -22288.553741   90.962500 -22352.371826  28.919444   34.898641       -0.000195     1.0    -22352.471797         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=225/8.[0m
[08/11 05:12:08]  --------------------------------------------------------------------------------
[08/11 05:12:08]  Iteration: 414 (0 solution, 413 counterexamples)
[08/11 05:17:06]  Generator returned sat in 281.565449 secs.
[08/11 05:17:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:17:26]  Improved gap from 3564083809/127948800 to 28.125
[08/11 05:17:29]  Improved number of small numbers from 65 to 79 out of a max of 114
[08/11 05:17:29]  Verifer returned sat in 20.551824 secs.
[08/11 05:17:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -20424.016846  -20424.116943  9305.515137 -20424.016846    0.400000 -20424.116943    0.000000   0.100098        0.100008     8.0    -20424.116943            -1             -1     -1
1  -20423.817139  -20423.916902  9377.190186 -20423.817139    0.299805 -20423.916902    0.000000   0.099763      -28.025237     1.0    -20423.817139         False           True  False
2  -20170.039124  -20295.791902  9377.190186 -20170.039124  253.877778 -20295.791902   97.627778  28.125000       28.125000     1.0    -20423.817139         False          False  False
3  -19944.386347  -20196.455791  9377.190186 -19944.386347  253.777778 -20196.455791  223.280556  28.788889       28.125000     1.0    -20167.666902         False          False   True
4  -19844.286347  -20134.211347  9377.190186 -19844.286347  128.888889 -20134.211347  223.380556  66.544444       28.125000     1.0    -20167.666902         False          False   True
5  -19844.286347  -20095.791902  9449.065186 -19844.286347   66.444444 -20095.791902  223.380556  28.125000        0.000000     2.0    -20167.666902         False          False   True
6  -19837.689124  -20067.666902  9520.940186 -19837.689124   34.722222 -20067.666902  223.380556   6.597222      -21.527778     3.0    -20167.666902         False          False   True
7  -19761.030791  -20039.541902  9565.809570 -19761.030791   83.255556 -20039.541902  223.380556  55.130556       -0.000060     1.0    -19984.411347          True           True  False
8  -19725.698847  -19984.311279  9565.809814 -19725.698847   90.462500 -19984.311279  223.380556  35.231877      -64.667871     1.0    -19984.411347         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=225/8.[0m
[08/11 05:17:30]  --------------------------------------------------------------------------------
[08/11 05:17:30]  Iteration: 415 (0 solution, 414 counterexamples)
[08/11 05:19:17]  Generator returned sat in 90.787756 secs.
[08/11 05:19:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:19:37]  Improved gap from 1/10 to 28.125
[08/11 05:19:37]  Improved number of small numbers from 104 to 108 out of a max of 114
[08/11 05:19:37]  Verifer returned sat in 17.966235 secs.
[08/11 05:19:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -20498.054062  -20598.204102  9479.602295 -20498.054062    0.050000 -20598.204102       0.05  100.100039      100.099949     5.0    -20598.204102            -1             -1     -1
1  -20498.054062  -20498.204102  9479.602295 -20498.054062    0.100000 -20498.204102       0.05    0.100039        0.099949     2.0    -20598.204102         False           True   True
2  -20498.054062  -20498.154063  9551.427346 -20498.054062    0.050049 -20498.154063       0.05    0.050000      -28.075000     3.0    -20498.104062         False          False   True
3  -20245.754063  -20370.029063  9551.427346 -20245.754063  252.350000 -20370.029063      96.15   28.125000       28.125000     1.0    -20498.104062         False           True  False
4  -20145.704063  -20308.041562  9551.427346 -20145.704063  128.175000 -20308.041562      96.20   66.137500       28.125000     1.0    -20498.104062         False          False   True
5  -20145.704063  -20270.029063  9623.302346 -20145.704063   66.087500 -20270.029063      96.20   28.125000        0.000000     2.0    -20498.104062         False          False   True
6  -20139.285313  -20241.904063  9667.614990 -20139.285313   34.543750 -20241.904063      96.20    6.418750      -49.268606     3.0    -20498.104062         False          False   True
7  -20062.369687  -20186.216563  9739.489846 -20062.369687   83.334375 -20186.216563      96.20   27.646875       -0.478125     1.0    -20158.569687          True           True  False
8  -19985.436875  -20158.091553  9739.489990 -19985.436875  104.579688 -20158.091553      96.20   76.454678      -23.545168     1.0    -20158.569687         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=225/8.[0m
[08/11 05:19:38]  --------------------------------------------------------------------------------
[08/11 05:19:38]  Iteration: 416 (0 solution, 415 counterexamples)
[08/11 05:19:55]  Generator returned unsat in 0.563448 secs.
[08/11 05:19:55]  [96mNo more solutions found[0m
[08/11 05:19:55]  Final solutions:
[08/11 05:19:55]  Took 49861.791274 secs.
