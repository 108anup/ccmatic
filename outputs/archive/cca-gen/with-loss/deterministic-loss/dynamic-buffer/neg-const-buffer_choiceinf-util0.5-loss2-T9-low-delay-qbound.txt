[08/09 17:55:21]  --------------------------------------------------------------------------------
[08/09 17:55:21]  Iteration: 1 (0 solution, 0 counterexamples)
[08/09 17:55:21]  Generator returned sat in 0.004527 secs.
[08/09 17:55:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/09 17:55:22]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/09 17:55:22]  Verifer returned sat in 0.366910 secs.
[08/09 17:55:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0       1114.225        914.250 -1014.125     1114.225      0.025      914.250      0.000  199.975         199.975     7.0          914.250            -1             -1
1       1114.250       1014.250 -1014.125     1114.250    200.000     1014.250      0.025   99.975          99.975     7.0          914.250         False          False
2       1114.250       1114.200 -1014.125     1114.250      0.025     1114.200      0.025    0.025          -0.025     8.0         1114.225         False          False
3       1114.275       1114.250 -1014.125     1114.275      0.050     1114.250      0.025    0.000        -100.000     1.0         1114.225         False          False
4       1516.375       1266.250 -1014.125     1516.375    402.100     1266.250    102.150  147.975          99.975     1.0         1114.225         False          False
5       2678.600       1314.250 -1014.125     2678.600   1310.200     1314.250   1164.375  199.975          99.975     2.0         1114.225         False          False
6       5501.125       1514.250 -1014.125     5501.125   3022.500     1514.250   3886.900   99.975          99.975     1.0         1114.225         False          False
7      12248.150       1514.275 -1014.125    12248.150   6847.000     1514.275  10533.925  199.950          99.975     2.0         1114.225         False          False
8      26240.250       1614.250 -1014.125    26240.250  14192.050     1614.250  24426.025  199.975          99.975     2.0         1114.225         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=5, buffer=3999/40.[0m
[08/09 17:55:22]  --------------------------------------------------------------------------------
[08/09 17:55:22]  Iteration: 2 (0 solution, 1 counterexamples)
[08/09 17:55:22]  Generator returned sat in 0.072901 secs.
[08/09 17:55:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 17:55:22]  Improved gap from 1/1200 to 100
[08/09 17:55:23]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/09 17:55:23]  Verifer returned sat in 0.463203 secs.
[08/09 17:55:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1447.526667       1347.525 -1447.400244  1447.526667    0.024902     1347.525    0.000000  100.001667      100.001667     8.0      1347.525000            -1             -1
1    1447.526667       1447.525 -1447.400244  1447.526667  100.001667     1447.525    0.000000    0.001667        0.001667     3.0      1347.525000         False           True
2    1514.201667       1514.200 -1447.400244  1514.201667   66.676667     1514.200    0.000000    0.001667      -33.323333     1.0      1514.201667         False          False
3    1580.876667       1547.525 -1447.400244  1580.876667   66.676667     1547.525    0.000000   33.351667      -66.648333     1.0      1514.201667         False          False
4    1847.540000       1647.525 -1447.400244  1847.540000  300.015000     1647.525  100.011667  100.003333        0.003333     1.0      1514.201667         False          False
5    1847.540000       1747.525 -1447.400244  1847.540000    0.010000     1747.525  100.011667    0.003333      -99.996667     2.0      1514.201667         False          False
6    2080.876667       1947.525 -1447.400244  2080.876667  233.340000     1947.525  133.348333    0.003333        0.003333     1.0      1514.201667         False          False
7    2080.883333       1947.525 -1447.400244  2080.883333    0.010000     1947.525  133.348333    0.010000      -99.990000     1.0      1514.201667         False          False
8    2380.888333       2047.525 -1447.400244  2380.888333  300.015000     2047.525  233.360000  100.003333        0.003333     1.0      1514.201667         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=1/300.[0m
[08/09 17:55:23]  --------------------------------------------------------------------------------
[08/09 17:55:23]  Iteration: 3 (0 solution, 2 counterexamples)
[08/09 17:55:24]  Generator returned sat in 0.057136 secs.
[08/09 17:55:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/09 17:55:24]  Improved gap from 0 to 100
[08/09 17:55:24]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/09 17:55:24]  Verifer returned sat in 0.636703 secs.
[08/09 17:55:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1447.524583    1347.524583 -1447.400244  1447.524583    0.024658  1347.524583   0.000000  100.000000       99.999583     7.0      1347.524583            -1             -1
1    1447.525000    1347.525000 -1447.400244  1447.525000  100.000417  1347.525000   0.000000  100.000000        0.000000     2.0      1347.524583         False           True
2    1547.517083    1547.516667 -1447.400244  1547.517083  199.992083  1547.516667   0.000000    0.000417       -0.007917     1.0      1347.524583          True           True
3    1547.525417    1547.525000 -1447.400244  1547.525417    0.008750  1547.525000   0.000000    0.000417      -99.999583     1.0      1547.525417         False          False
4    1846.530000    1747.525000 -1447.400244  1846.530000  299.005000  1747.525000   0.000417   99.004583       99.004583     1.0      1547.525417         False          False
5    1846.530000    1747.525000 -1447.400244  1846.530000    0.010000  1747.525000   0.000417   99.004583       -0.995417     1.0      1547.525417         False          False
6    2046.542917    1947.525000 -1447.400244  2046.542917  299.017500  1947.525000   0.013333   99.004583       99.004583     1.0      1547.525417         False          False
7    2046.542917    1947.525000 -1447.400244  2046.542917    0.010000  1947.525000   0.013333   99.004583       -0.995417     1.0      1547.525417         False          False
8    2246.543333    2047.525000 -1447.400244  2246.543333  299.005000  2047.525000   0.013750  199.004583       99.004583     1.0      1547.525417         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=237611/2400.[0m
[08/09 17:55:25]  --------------------------------------------------------------------------------
[08/09 17:55:25]  Iteration: 4 (0 solution, 3 counterexamples)
[08/09 17:55:25]  Generator returned sat in 0.102015 secs.
[08/09 17:55:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/09 17:55:25]  Improved gap from 0 to 100
[08/09 17:55:26]  Improved number of small numbers from 60 to 62 out of a max of 114
[08/09 17:55:26]  Verifer returned sat in 1.279990 secs.
[08/09 17:55:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1410.818968    1210.818968 -1310.694456  1410.818968    0.100098  1210.818968     0.00000  200.00000           200.0     8.0      1210.818968            -1             -1
1    1410.818968    1210.818968 -1310.694456  1410.818968  199.999756  1210.818968     0.00000  200.00000           100.0     8.0      1210.818968         False          False
2    1410.818968    1410.818968 -1310.694456  1410.818968  199.999756  1410.818968     0.00000    0.00000             0.0     9.0      1210.818968         False          False
3    1412.218968    1410.818968 -1310.694456  1412.218968    1.400000  1410.818968     0.00000    1.40000           -98.6     9.0      1412.218968          True           True
4    1710.918968    1557.818968 -1310.694456  1710.918968  300.100000  1557.818968     0.10000  153.00000           100.0     1.0      1412.218968         False           True
5    2054.968968    1635.818968 -1310.694456  2054.968968  497.050000  1635.818968   244.15000  175.00000           100.0     2.0      1412.218968         False          False
6    2353.493968    1810.818968 -1310.694456  2353.493968  473.525000  1810.818968   442.67500  100.00000           100.0     2.0      1412.218968         False          False
7    2890.256468    1910.818968 -1310.694456  2890.256468  636.762500  1910.818968   879.43750  100.00000           100.0     2.0      1412.218968         False          False
8    3461.637718    2010.818848 -1310.694456  3461.637718  671.381250  2010.818848  1350.81875  100.00012           100.0     2.0      1412.218968         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=5, buffer=100.[0m
[08/09 17:55:27]  --------------------------------------------------------------------------------
[08/09 17:55:27]  Iteration: 5 (0 solution, 4 counterexamples)
[08/09 17:55:27]  Generator returned sat in 0.174267 secs.
[08/09 17:55:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/09 17:55:27]  Improved gap from 1/800 to 100
[08/09 17:55:28]  Improved number of small numbers from 99 to 110 out of a max of 114
[08/09 17:55:28]  Verifer returned sat in 0.357215 secs.
[08/09 17:55:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1510.819092    1110.818848 -1210.69458  1510.819092    0.001250  1110.818848   0.000000  400.000244      400.000244     8.0      1110.818848            -1             -1
1    1510.819092    1210.818848 -1210.69458  1510.819092    0.001465  1210.818848   0.000000  300.000244      300.000244     6.0      1110.818848         False          False
2    1510.819092    1259.817871 -1210.69458  1510.819092    0.508789  1259.817871   0.000000  251.001221      200.000244     6.0      1110.818848         False          False
3    1510.819092    1410.818848 -1210.69458  1510.819092    0.508789  1410.818848   0.000000  100.000244      100.000244     7.0      1110.818848         False          False
4    1510.819092    1510.810342 -1210.69458  1510.819092    0.010000  1510.810342   0.000000    0.008750        0.000244     8.0      1110.818848         False          False
5    1510.820342    1510.819092 -1210.69458  1510.820342    0.010000  1510.819092   0.000000    0.001250      -99.998506     9.0      1110.818848         False          False
6    2010.821533    1610.819092 -1210.69458  2010.821533  500.002441  1610.819092   0.001221  400.001221      300.001465     1.0      2010.820312          True           True
7    2010.821533    1710.819092 -1210.69458  2010.821533    0.010000  1710.819092   0.001221  300.001221      200.001465     2.0      2010.820312         False          False
8    2010.821533    1810.819092 -1210.69458  2010.821533    0.010000  1810.819092   0.001221  200.001221      100.001465     3.0      2010.820312         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=614403/2048.[0m
[08/09 17:55:28]  --------------------------------------------------------------------------------
[08/09 17:55:28]  Iteration: 6 (0 solution, 5 counterexamples)
[08/09 17:55:28]  Generator returned sat in 0.144676 secs.
[08/09 17:55:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 17:55:29]  Improved gap from 1/200 to 100
[08/09 17:55:29]  Improved number of small numbers from 68 to 80 out of a max of 114
[08/09 17:55:29]  Verifer returned sat in 0.763878 secs.
[08/09 17:55:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2215.835967    1716.845342 -1210.69458  2215.835967    0.001250  1716.845342    0.00000  498.990625      498.990625     5.0      1716.845342            -1             -1
1    2215.837217    1816.841797 -1210.69458  2215.837217  498.991875  1816.841797    0.00125  398.994170      398.990625     5.0      1716.845342         False          False
2    2215.837217    1816.845342 -1210.69458  2215.837217  398.993164  1816.845342    0.00125  398.990625      298.990625     6.0      2215.835967         False          False
3    2215.838467    1916.845459 -1210.69458  2215.838467  398.991875  1916.845459    0.00125  298.991758      198.991875     7.0      2215.837217         False          False
4    2215.838467    2116.845215 -1210.69458  2215.838467    0.010000  2116.845215    0.00125   98.992002       98.991875     8.0      2215.837217         False          False
5    2215.838467    2215.835967 -1210.69458  2215.838467    0.010000  2215.835967    0.00125    0.001250       -1.008125     9.0      2215.837217         False          False
6    2616.847842    2216.845459 -1210.69458  2616.847842  401.010625  2216.845459    0.00125  400.001133      300.001250     1.0      2215.837217         False           True
7    2616.847842    2416.845215 -1210.69458  2616.847842    0.010000  2416.845215    0.00125  200.001377      200.001250     2.0      2215.837217         False          False
8    2616.847842    2416.845459 -1210.69458  2616.847842    0.010000  2416.845459    0.00125  200.001133      100.001250     3.0      2215.837217         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=127677/320.[0m
[08/09 17:55:30]  --------------------------------------------------------------------------------
[08/09 17:55:30]  Iteration: 7 (0 solution, 6 counterexamples)
[08/09 17:55:30]  Generator returned sat in 0.305044 secs.
[08/09 17:55:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/09 17:55:32]  Improved number of small numbers from 60 to 66 out of a max of 113
[08/09 17:55:32]  Verifer returned sat in 1.309348 secs.
[08/09 17:55:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1763.238281    1663.239092 -1110.695205  1763.238281    0.000732  1663.239092    0.000000   99.999189       99.999189     1.0      1663.239092            -1             -1
1    1763.239717    1763.238525 -1110.695205  1763.239717  100.000625  1763.238525    0.000000    0.001191        0.000625     1.0      1663.239092         False          False
2    1763.239717    1763.239092 -1110.695205  1763.239717    0.000732  1763.239092    0.000000    0.000625      -99.999375     2.0      1763.239717         False          False
3    1963.240342    1863.255967 -1110.695205  1963.240342  200.001250  1863.255967    0.000000   99.984375        0.001250     1.0      1763.239717         False           True
4    2263.789717    2063.231592 -1110.695205  2263.789717  400.533750  2063.231592  200.549375    0.008750        0.001250     1.0      1763.239717         False          False
5    2263.790967    2063.240967 -1110.695205  2263.790967    0.010000  2063.240967  200.549375    0.000625      -99.997500     1.0      1763.239717         False          False
6    2864.294092    2263.239092 -1110.695205  2864.294092  600.503750  2263.239092  601.053750    0.001250        0.001250     1.0      1763.239717         False          False
7    2864.302842    2263.248467 -1110.695205  2864.302842    0.010000  2263.248467  601.053750    0.000625      -99.990000     1.0      1763.239717         False          False
8    3264.835967    2363.239258 -1110.695205  3264.835967  400.533750  2363.239258  801.595625  100.001084        0.001250     1.0      1763.239717         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=1/800.[0m
[08/09 17:55:32]  --------------------------------------------------------------------------------
[08/09 17:55:32]  Iteration: 8 (0 solution, 7 counterexamples)
[08/09 17:55:33]  Generator returned sat in 0.946100 secs.
[08/09 17:55:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/09 17:55:34]  Improved gap from 0 to 100
[08/09 17:55:34]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/09 17:55:34]  Verifer returned sat in 0.447480 secs.
[08/09 17:55:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2115.795166    1315.797607 -1110.695068  2115.795166     0.001221  1315.797607        0.0  799.997559      699.997559     5.0      1315.797607            -1             -1
1    2115.795166    1415.797852 -1110.695068  2115.795166     0.001465  1415.797852        0.0  699.997314      599.997559     6.0      1315.797607         False          False
2    2115.795166    1515.797852 -1110.695068  2115.795166   699.996250  1515.797852        0.0  599.997314      499.997559     4.0      1315.797607         False          False
3    2515.799316    1715.797607 -1110.695068  2515.799316  1000.001465  1715.797607        0.0  800.001709      800.001709     5.0      1315.797607         False          False
4    2515.799316    1715.797852 -1110.695068  2515.799316     0.010000  1715.797852        0.0  800.001465      700.001709     6.0      1315.797607         False          False
5    2515.799316    1815.797852 -1110.695068  2515.799316     0.010000  1815.797852        0.0  700.001465      600.001709     7.0      1315.797607         False          False
6    2515.799316    1915.797607 -1110.695068  2515.799316   449.500000  1915.797607        0.0  600.001709      500.001709     8.0      2515.799316          True           True
7    2515.799316    2115.796631 -1110.695068  2515.799316   299.500000  2115.796631        0.0  400.002686      400.001709     5.0      2515.799316         False           True
8    2515.799316    2115.797607 -1110.695068  2515.799316     0.010000  2115.797607        0.0  400.001709      300.001709     6.0      2515.799316         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1638405/2048.[0m
[08/09 17:55:34]  --------------------------------------------------------------------------------
[08/09 17:55:34]  Iteration: 9 (0 solution, 8 counterexamples)
[08/09 17:55:35]  Generator returned sat in 0.521871 secs.
[08/09 17:55:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/09 17:55:36]  Improved gap from 0 to 100
[08/09 17:55:36]  Improved number of small numbers from 68 to 83 out of a max of 114
[08/09 17:55:36]  Verifer returned sat in 1.144721 secs.
[08/09 17:55:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1416.127686    1216.127607 -1110.695068  1416.127686    0.050000  1216.127607       0.00  200.000078      100.000078     2.0      1216.127607            -1             -1
1    1416.127686    1316.127607 -1110.695068  1416.127686  199.949951  1316.127607       0.00  100.000078        0.000078     2.0      1216.127607         False          False
2    1416.127686    1416.127607 -1110.695068  1416.127686  100.000000  1416.127607       0.00    0.000078      -99.999922     3.0      1416.127686         False          False
3    1516.477607    1516.427607 -1110.695068  1516.477607  100.350000  1516.427607       0.00    0.050000      -99.650000     1.0      1416.127686         False           True
4    1816.227607    1616.127607 -1110.695068  1816.227607  299.800000  1616.127607       0.05  200.050000      100.050000     1.0      1416.127686         False          False
5    1816.227607    1816.127607 -1110.695068  1816.227607  149.500000  1816.127607       0.05    0.050000        0.050000     2.0      1416.127686         False          False
6    2215.677607    1816.127607 -1110.695068  2215.677607  399.500000  1816.127607     199.50  200.050000      100.050000     2.0      1416.127686         False          False
7    2215.677607    1924.127607 -1110.695068  2215.677607  149.350000  1924.127607     199.50   92.050000        0.050000     2.0      1416.127686         False          False
8    2431.127607    2016.227539 -1110.695068  2431.127607  307.500000  2016.227539     214.95  199.950068      100.050000     1.0      1416.127686         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=2001/20.[0m
[08/09 17:55:37]  --------------------------------------------------------------------------------
[08/09 17:55:37]  Iteration: 10 (0 solution, 9 counterexamples)
[08/09 17:55:38]  Generator returned sat in 0.817495 secs.
[08/09 17:55:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 17:55:38]  Improved gap from 1/3200 to 100
[08/09 17:55:39]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/09 17:55:39]  Verifer returned sat in 0.455131 secs.
[08/09 17:55:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    1284.052734    1284.002686 -1078.620117  1284.052734  100.150146  1284.002686        0.0    0.050049        0.000244     4.0      1284.002686            -1             -1
1    1384.102539    1284.052734 -1078.620117  1384.102539  100.099854  1284.052734        0.0  100.049805        0.050049     4.0      1384.102539         False           True
2    1484.052490    1384.052490 -1078.620117  1484.052490  199.999756  1384.052490        0.0  100.000000        0.000000     2.0      1384.102539         False           True
3    2062.102539    1484.052490 -1078.620117  2062.102539  678.050049  1484.052490        0.0  578.050049      478.050049     2.0      1384.102539         False           True
4    2062.102539    1662.052734 -1078.620117  2062.102539   99.524902  1662.052734        0.0  400.049805      378.050049     2.0      1384.102539         False           True
5    2062.102539    1784.052490 -1078.620117  2062.102539  188.500000  1784.052490        0.0  278.050049      278.050049     3.0      2062.102539          True           True
6    2062.102539    1884.052490 -1078.620117  2062.102539  199.500000  1884.052490        0.0  178.050049      178.050049     4.0      2062.102539         False           True
7    2083.552490    1884.052734 -1078.620117  2083.552490  199.500000  1884.052734        0.0  199.499756       99.500000     5.0      2062.102539         False           True
8    2083.552490    2062.152588 -1078.620117  2083.552490  110.500000  2062.152588        0.0   21.399902       -0.500000     2.0      2062.102539         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=1958297/4096.[0m
[08/09 17:55:39]  --------------------------------------------------------------------------------
[08/09 17:55:39]  Iteration: 11 (0 solution, 10 counterexamples)
[08/09 17:55:41]  Generator returned sat in 1.023779 secs.
[08/09 17:55:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/09 17:55:41]  Improved gap from 1/20 to 100
[08/09 17:55:42]  Improved number of small numbers from 68 to 86 out of a max of 114
[08/09 17:55:42]  Verifer returned sat in 1.114050 secs.
[08/09 17:55:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2964.075928    2264.075928 -1078.620117  2964.075928    0.001250  2264.075928    0.00000  700.000000      600.000055     6.0      2264.075928            -1             -1
1    2964.075928    2463.085872 -1078.620117  2964.075928  699.998779  2463.085872    0.00000  500.990055      500.000055     6.0      2264.075928         False          False
2    3064.078372    2464.075928 -1078.620117  3064.078372  600.992500  2464.075928    0.00125  600.001195      500.001250     7.0      3064.077122         False          False
3    3064.078372    2664.074707 -1078.620117  3064.078372    0.001221  2664.074707    0.00125  400.002415      400.001250     8.0      3064.077122         False          False
4    3064.078372    2664.075872 -1078.620117  3064.078372    0.010000  2664.075872    0.00125  400.001250      300.001250     7.0      3064.077122         False           True
5    3064.078372    2864.075684 -1078.620117  3064.078372  400.000000  2864.075684    0.00125  200.001439      200.001250     8.0      3064.077122         False          False
6    3064.078372    2864.075928 -1078.620117  3064.078372  199.500000  2864.075928    0.00125  200.001195      100.001250     9.0      3064.077122         False           True
7    3064.078372    3064.075872 -1078.620117  3064.078372   99.250000  3064.075872    0.00125    0.001250        0.001250     6.0      3064.077122         False           True
8    4060.577122    3064.077148 -1078.620117  4060.577122  996.500000  3064.077148  396.50000  599.999974      500.001250     1.0      3064.077122         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=400001/800.[0m
[08/09 17:55:42]  --------------------------------------------------------------------------------
[08/09 17:55:42]  Iteration: 12 (0 solution, 11 counterexamples)
[08/09 17:55:44]  Generator returned sat in 1.087111 secs.
[08/09 17:55:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/09 17:55:45]  Improved number of small numbers from 67 to 73 out of a max of 113
[08/09 17:55:45]  Verifer returned sat in 1.285587 secs.
[08/09 17:55:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2304.707031    1904.706944 -1078.620117  2304.707031  1003.733333  1904.706944    0.000000   400.000087      300.000087     5.0      1904.706944            -1             -1
1    2908.340277    2004.707031 -1078.620117  2908.340277  1003.633333  2004.707031    0.000000   903.633246      803.633333     3.0      2908.340277         False           True
2    2908.340277    2204.706944 -1078.620117  2908.340277     0.100098  2204.706944    0.000000   703.633333      703.633333     3.0      2908.340277         False           True
3    2908.340277    2304.706944 -1078.620117  2908.340277   703.533333  2304.706944    0.000000   603.633333      603.633333     4.0      2908.340277         False           True
4    3457.473610    2304.706944 -1078.620117  3457.473610  1152.766667  2304.706944    0.100000  1152.666667     1052.666667     4.0      2908.340277         False           True
5    3457.473610    2404.706944 -1078.620117  3457.473610  1152.266667  2404.706944    0.100000  1052.666667      952.666667     5.0      2908.340277         False           True
6    3457.473610    2525.706944 -1078.620117  3457.473610   977.133333  2525.706944    0.100000   931.666667      852.666667     6.0      2908.340277         False           True
7    3457.473610    2704.706944 -1078.620117  3457.473610   931.566667  2704.706944    0.100000   752.666667      752.666667     7.0      2908.340277         False           True
8    3971.590277    2704.707031 -1078.620117  3971.590277  1266.783333  2704.707031  114.216667  1152.666579     1052.666667     8.0      2908.340277         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=2, buffer=3158/3.[0m
[08/09 17:55:46]  --------------------------------------------------------------------------------
[08/09 17:55:46]  Iteration: 13 (0 solution, 12 counterexamples)
[08/09 17:55:48]  Generator returned sat in 2.404305 secs.
[08/09 17:55:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/09 17:55:49]  Improved number of small numbers from 67 to 85 out of a max of 113
[08/09 17:55:49]  Verifer returned sat in 0.877490 secs.
[08/09 17:55:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2908.340576    2608.240375 -1078.620117  2908.340576   100.000000  2608.240375        0.0   300.100201      300.000201     6.0      2608.240375            -1             -1
1    2908.340576    2608.340375 -1078.620117  2908.340576   299.999756  2608.340375        0.0   300.000201      200.000201     7.0      2608.240375         False          False
2    2908.340576    2808.340332 -1078.620117  2908.340576   299.999756  2808.340332        0.0   100.000244      100.000201     7.0      2608.240375          True           True
3    2908.340576    2808.340375 -1078.620117  2908.340576    36.375000  2808.340375        0.0   100.000201        0.000201     7.0      2908.340576          True           True
4    2982.640375    2908.340375 -1078.620117  2982.640375   174.300000  2908.340375        0.0    74.300000      -25.700000     8.0      2908.340576         False           True
5    3408.440375    3008.340375 -1078.620117  3408.440375   500.100000  3008.340375        0.0   400.100000      300.100000     1.0      2908.340576         False           True
6    4007.040375    3208.340375 -1078.620117  4007.040375   998.700000  3208.340375        0.0   798.700000      798.700000     2.0      2908.340576         False          False
7    5204.240375    3308.340375 -1078.620117  5204.240375  1995.900000  3308.340375        0.0  1895.900000     1895.900000     3.0      2908.340576         False          False
8    7298.640375    3308.340576 -1078.620117  7298.640375  3990.300000  3308.340576        0.0  3990.299799     3890.300000     4.0      2908.340576         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=19452/5.[0m
[08/09 17:55:50]  --------------------------------------------------------------------------------
[08/09 17:55:50]  Iteration: 14 (0 solution, 13 counterexamples)
[08/09 17:56:01]  Generator returned sat in 10.915584 secs.
[08/09 17:56:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/09 17:56:03]  Improved number of small numbers from 67 to 71 out of a max of 113
[08/09 17:56:03]  Verifer returned sat in 1.385941 secs.
[08/09 17:56:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    2506.597656    2006.597875 -1078.620117   2506.597656    500.025000  2006.597875      0.000000  499.999781      499.999781     2.0      2006.597875            -1             -1
1    2506.622875    2006.597875 -1078.620117   2506.622875    500.025000  2006.597875      0.025000  500.000000      400.000000     2.0      2006.597875         False          False
2    2606.647875    2206.597875 -1078.620117   2606.647875    600.025000  2206.597875      0.050000  400.000000      400.000000     3.0      2006.597875         False          False
3    2706.672875    2278.597875 -1078.620117   2706.672875    500.025000  2278.597875      0.075000  428.000000      400.000000     4.0      2706.597875         False          False
4    3574.210375    2406.572875 -1078.620117   3574.210375   1295.537500  2406.572875    767.612500  400.025000      400.000000     5.0      2706.597875         False          False
5    5918.941625    2406.597875 -1078.620117   5918.941625   2744.756250  2406.597875   3012.343750  500.000000      400.000000     6.0      2706.597875         False          False
6    9937.576000    2506.597875 -1078.620117   9937.576000   4518.634375  2506.597875   6930.978125  500.000000      400.000000     6.0      2706.597875         False          False
7   16673.027562    2706.597875 -1078.620117  16673.027562   7235.451563  2706.597875  13566.429688  400.000000      400.000000     5.0      2706.597875         False          False
8   27727.754906    2806.597656 -1078.620117  27727.754906  11454.727344  2806.597656  24521.157031  400.000219      400.000000     5.0      2706.597875         False          False
high_util=True, low_loss=False, low_delay=False, ramp_up=True, ramp_down=False, total_losses=5, buffer=400.[0m
[08/09 17:56:03]  --------------------------------------------------------------------------------
[08/09 17:56:03]  Iteration: 15 (0 solution, 14 counterexamples)
[08/09 17:56:06]  Generator returned sat in 2.227303 secs.
[08/09 17:56:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 17:56:06]  Improved gap from 1/400 to 100
[08/09 17:56:06]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/09 17:56:06]  Verifer returned sat in 0.559549 secs.
[08/09 17:56:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16473.527588   15873.527588 -14945.549805  16473.527588     0.099854  15873.527588    0.000000  600.000000      600.000000     7.0     15873.527588            -1             -1
1   16473.627441   15973.527588 -14945.549805  16473.627441   600.099854  15973.527588    0.099854  500.000000      500.000000     7.0     15873.527588         False          False
2   16473.627441   16073.527344 -14945.549805  16473.627441   499.899902  16073.527344    0.099854  400.000244      400.000000     8.0     16473.527588         False          False
3   16473.627441   16073.527588 -14945.549805  16473.627441     0.100098  16073.527588    0.099854  400.000000      300.000000     8.0     16473.527588         False           True
4   16473.627441   16243.527588 -14945.549805  16473.627441   101.700195  16243.527588    0.099854  230.000000      200.000000     7.0     16473.527588         False           True
5   16473.627441   16277.527344 -14945.549805  16473.627441   185.850098  16277.527344    0.099854  196.000244      100.000000     7.0     16473.527588         False          False
6   16473.627441   16373.527588 -14945.549805  16473.627441   194.925049  16373.527588    0.099854  100.000000        0.000000     8.0     16473.527588         False          False
7   16914.977539   16473.527588 -14945.549805  16914.977539   541.350098  16473.527588    0.099854  441.350098      341.350098     9.0     16473.527588         False           True
8   17672.827637   16673.527344 -14945.549805  17672.827637  1199.200195  16673.527344  499.300049  500.000244      500.000000     2.0     16473.527588         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=500.[0m
[08/09 17:56:07]  --------------------------------------------------------------------------------
[08/09 17:56:07]  Iteration: 16 (0 solution, 15 counterexamples)
[08/09 17:56:15]  Generator returned sat in 7.271642 secs.
[08/09 17:56:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/09 17:56:15]  Improved number of small numbers from 66 to 113 out of a max of 113
[08/09 17:56:15]  Verifer returned sat in 0.297899 secs.
[08/09 17:56:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16475.127197   16275.027588 -14945.549805  16475.127197    0.099854  16275.027588    0.000000  200.099609      101.499756     2.0     16275.027588            -1             -1
1   16475.127441   16473.627441 -14945.549805  16475.127441  200.099854  16473.627441    0.000000    1.500000        1.500000     2.0     16275.027588         False          False
2   16673.702393   16475.127197 -14945.549805  16673.702393  200.074951  16475.127197   98.550049  100.025146        1.524902     3.0     16575.152344         False          False
3   16773.727051   16573.627441 -14945.549805  16773.727051  200.049805  16573.627441   98.574707  101.524902        1.524902     2.0     16675.152344         False          False
4   16972.302002   16673.627441 -14945.549805  16972.302002  300.099854  16673.627441  197.149658  101.524902        1.524902     2.0     16675.152344         False          False
5   17072.277100   16773.627441 -14945.549805  17072.277100  201.500000  16773.627441  197.149658  101.500000        1.500000     2.0     16675.152344         False          False
6   17170.777100   16876.677490 -14945.549805  17170.777100  200.000000  16876.677490  197.149658   96.949951        0.000000     1.0     16675.152344         False          False
7   17272.327148   16973.627441 -14945.549805  17272.327148  198.500000  16973.627441  197.174805  101.524902        1.524902     2.0     16675.152344         False          False
8   17472.302246   17075.177490 -14945.549805  17472.302246  301.500000  17075.177490  297.149902   99.974854        1.524902     1.0     16675.152344         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=3123/2048.[0m
[08/09 17:56:16]  --------------------------------------------------------------------------------
[08/09 17:56:16]  Iteration: 17 (0 solution, 16 counterexamples)
[08/09 17:56:16]  Generator returned sat in 0.099085 secs.
[08/09 17:56:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/09 17:56:17]  Improved number of small numbers from 102 to 113 out of a max of 113
[08/09 17:56:17]  Verifer returned sat in 0.223969 secs.
[08/09 17:56:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16475.126953   16275.027588 -14945.550049  16475.126953    0.099854  16275.027588    0.000000  200.099365      101.499512     2.0     16275.027588            -1             -1
1   16475.127197   16473.627441 -14945.550049  16475.127197  200.099609  16473.627441    0.000000    1.499756        1.499756     2.0     16275.027588         False          False
2   16673.702393   16475.127197 -14945.550049  16673.702393  200.074951  16475.127197   98.550049  100.025146        1.524902     2.0     16575.152344         False          False
3   16773.727051   16573.627441 -14945.550049  16773.727051  200.049805  16573.627441   98.574707  101.524902        1.524902     2.0     16675.152344         False          False
4   16972.302002   16673.627441 -14945.550049  16972.302002  300.099854  16673.627441  197.149658  101.524902        1.524902     2.0     16675.152344         False          False
5   17072.277100   16774.127197 -14945.550049  17072.277100  201.500000  16774.127197  197.149658  101.000244        1.500000     2.0     16675.152344         False          False
6   17170.776855   16877.664795 -14945.550049  17170.776855  199.500000  16877.664795  197.149658   95.962402       -0.000244     1.0     16675.152344         False          False
7   17272.314453   16973.627441 -14945.550049  17272.314453  197.500000  16973.627441  197.162109  101.524902        1.524902     1.0     16675.152344         False          False
8   17472.289551   17075.177490 -14945.550049  17472.289551  301.500000  17075.177490  297.137207   99.974854        1.524902     1.0     16675.152344         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=3123/2048.[0m
[08/09 17:56:17]  --------------------------------------------------------------------------------
[08/09 17:56:17]  Iteration: 18 (0 solution, 17 counterexamples)
[08/09 17:56:28]  Generator returned sat in 10.186648 secs.
[08/09 17:56:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 17:56:28]  Improved gap from 0 to 100
[08/09 17:56:28]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/09 17:56:28]  Verifer returned sat in 0.500002 secs.
[08/09 17:56:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17672.260742   17172.260742 -14945.550049  17672.260742    0.001465  17172.260742        0.0  500.000000      500.000000     3.0     17172.260742            -1             -1
1   18007.514404   17172.260986 -14945.550049  18007.514404  835.253662  17172.260986        0.0  835.253418      735.253662     3.0     17172.260742         False          False
2   18007.514648   17372.260742 -14945.550049  18007.514648  835.253662  17372.260742        0.0  635.253906      635.253906     4.0     17172.260742         False          False
3   18007.514648   17472.260742 -14945.550049  18007.514648    0.025000  17472.260742        0.0  535.253906      535.253906     5.0     18007.514648         False          False
4   18007.514648   17472.260742 -14945.550049  18007.514648    0.012500  17472.260742        0.0  535.253906      435.253906     5.0     18007.514648         False          False
5   18007.514648   17572.260986 -14945.550049  18007.514648    0.010000  17572.260986        0.0  435.253662      335.253906     6.0     18007.514648         False          False
6   18007.514648   17672.260742 -14945.550049  18007.514648    0.010000  17672.260742        0.0  335.253906      235.253906     7.0     18007.514648         False          False
7   18007.514648   17794.260742 -14945.550049  18007.514648  101.505000  17794.260742        0.0  213.253906      135.253906     7.0     18007.514648         False           True
8   18007.514648   17972.260742 -14945.550049  18007.514648  213.252500  17972.260742        0.0   35.253906       35.253906     8.0     18007.514648         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=147051/200.[0m
[08/09 17:56:29]  --------------------------------------------------------------------------------
[08/09 17:56:29]  Iteration: 19 (0 solution, 18 counterexamples)
[08/09 17:56:36]  Generator returned sat in 6.638047 secs.
[08/09 17:56:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/09 17:56:36]  Improved number of small numbers from 81 to 113 out of a max of 113
[08/09 17:56:36]  Verifer returned sat in 0.271324 secs.
[08/09 17:56:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17507.514160   16907.514160 -14680.803467  17507.514160     0.001221  16907.514160        0.0   600.000000      600.000000     3.0     16907.514160            -1             -1
1   18007.513916   16907.514648 -14680.803467  18007.513916  1099.999756  16907.514648        0.0  1099.999268      999.999756     3.0     16907.514160         False          False
2   18007.514404   17107.514160 -14680.803467  18007.514404  1099.999756  17107.514160        0.0   900.000244      900.000244     4.0     16907.514160         False          False
3   18007.514404   17207.513916 -14680.803467  18007.514404     0.037598  17207.513916        0.0   800.000488      800.000244     5.0     18007.514404         False          False
4   18007.514404   17207.514160 -14680.803467  18007.514404     0.018799  17207.514160        0.0   800.000244      700.000244     6.0     18007.514404         False          False
5   18007.514404   17407.513916 -14680.803467  18007.514404     0.010000  17407.513916        0.0   600.000488      600.000244     7.0     18007.514404         False          False
6   18007.514404   17507.513916 -14680.803467  18007.514404     0.010000  17507.513916        0.0   500.000488      500.000244     8.0     18007.514404         False          False
7   18007.514404   17507.514160 -14680.803467  18007.514404   149.520000  17507.514160        0.0   500.000244      400.000244     9.0     18007.514404         False           True
8   18007.514404   17607.514160 -14680.803467  18007.514404   448.540000  17607.514160        0.0   400.000244      300.000244     8.0     18007.514404         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=2048001/2048.[0m
[08/09 17:56:37]  --------------------------------------------------------------------------------
[08/09 17:56:37]  Iteration: 20 (0 solution, 19 counterexamples)
[08/09 17:56:57]  Generator returned unsat in 18.979731 secs.
[08/09 17:56:57]  [96mNo more solutions found[0m
[08/09 17:56:57]  Final solutions:
[08/09 17:56:57]  Took 95.914953 secs.
