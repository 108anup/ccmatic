[08/23 16:27:52]  --------------------------------------------------------------------------------
[08/23 16:27:52]  Iteration: 1 (0 solution, 0 counterexamples)
[08/23 16:27:52]  Generator returned sat in 0.004372 secs.
[08/23 16:27:52]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:27:52]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/23 16:27:52]  Verifer returned sat in 0.450170 secs.
[08/23 16:27:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0       -94.1850       -4563.26   4563.26     -94.1850     0.1000     -4563.26        0.0  4469.0750       4469.0750     7.0         -4563.26            -1.0            -1
1       -94.1850       -4463.26   4563.26     -94.1850     0.1000     -4463.26        0.0  4369.0750       4369.0750     7.0         -4563.26             0.0         False
2       -94.1850       -4363.36   4563.26     -94.1850     0.1000     -4363.36        0.0  4269.1750       4269.0750     8.0         -4563.26             0.0         False
3       -94.1850       -4363.26   4563.26     -94.1850     0.1000     -4363.26        0.0  4269.0750       4169.0750     9.0         -4563.26             0.0         False
4       -94.1850       -4252.26   4563.26     -94.1850   402.1500     -4252.26        0.0  4158.0750       4069.0750     8.0         -4563.26             1.0          True
5       -94.1850       -4163.26   4563.26     -94.1850  1228.3000     -4163.26        0.0  4069.0750       3969.0750     9.0         -4563.26             0.0         False
6       -94.1850       -4063.26   4563.26     -94.1850  2244.6500     -4063.26        0.0  3969.0750       3869.0750     9.0         -4563.26             1.0          True
7       -94.1850       -3963.26   4563.26     -94.1850  3968.9750     -3963.26        0.0  3869.0750       3769.0750     9.0         -4563.26             1.0          True
8      2570.2025       -3763.26   4563.26    2570.2025  6533.4625     -3763.26        0.0  6333.4625       6333.4625     9.0         -4563.26             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:27:53]  --------------------------------------------------------------------------------
[08/23 16:27:53]  Iteration: 2 (0 solution, 1 counterexamples)
[08/23 16:27:53]  Generator returned sat in 0.020602 secs.
[08/23 16:27:53]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:27:53]  Improved number of small numbers from 93 to 109 out of a max of 109
[08/23 16:27:53]  Verifer returned sat in 0.261330 secs.
[08/23 16:27:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -4263.310059   -4663.259766  4563.259766 -4263.310059    0.049805 -4663.259766        0.0  399.949707      299.949707     7.0     -4663.259766            -1.0            -1
1   -4263.310059   -4563.259766  4563.259766 -4263.310059    0.050049 -4563.259766        0.0  299.949707      199.949707     7.0     -4663.259766             1.0         False
2   -4263.310059   -4463.259766  4563.259766 -4263.310059    0.050049 -4463.259766        0.0  199.949707       99.949707     8.0     -4663.259766             1.0          True
3   -4259.259766   -4263.259766  4563.259766 -4259.259766  204.000000 -4263.259766        0.0    4.000000        4.000000     1.0     -4663.259766             1.0          True
4   -3959.259766   -4263.259766  4563.259766 -3959.259766  304.000000 -4263.259766        0.0  304.000000      204.000000     1.0     -4663.259766             0.0         False
5   -3959.259766   -4163.259766  4563.259766 -3959.259766  304.000000 -4163.259766        0.0  204.000000      104.000000     2.0     -4663.259766             0.0         False
6   -3859.259766   -3963.259766  4563.259766 -3859.259766  304.000000 -3963.259766        0.0  104.000000      104.000000     3.0     -4663.259766             0.0         False
7   -3659.259766   -3963.209961  4563.259766 -3659.259766  304.000000 -3963.209961        0.0  303.950195      204.000000     4.0     -4663.259766             0.0         False
8   -3057.110352   -3763.260010  4563.259766 -3057.110352  906.099609 -3763.260010        0.0  706.149658      706.149414     2.0     -4663.259766             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:27:54]  --------------------------------------------------------------------------------
[08/23 16:27:54]  Iteration: 3 (0 solution, 2 counterexamples)
[08/23 16:27:54]  Generator returned sat in 0.026753 secs.
[08/23 16:27:54]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:27:56]  Improved gap from 0.0 to 100
[08/23 16:27:56]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:27:56]  Verifer returned sat in 2.089878 secs.
[08/23 16:27:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2910.239502   -3697.484863  3597.484863 -2910.239502  687.195068 -3697.484863        0.0  787.245361      687.245361     7.0     -3697.484863            -1.0            -1
1   -2910.239502   -3597.484863  3597.484863 -2910.239502  687.195312 -3597.484863        0.0  687.245361      587.245361     4.0     -3697.484863             1.0         False
2   -2910.239502   -3497.484863  3597.484863 -2910.239502  687.195312 -3497.484863        0.0  587.245361      487.245361     4.0     -3697.484863             1.0          True
3   -2910.239502   -3397.484863  3597.484863 -2910.239502  587.195312 -3397.484863        0.0  487.245361      387.245361     4.0     -2910.239502             1.0          True
4   -2910.239502   -3297.484863  3597.484863 -2910.239502  445.597656 -3297.484863        0.0  387.245361      287.245361     5.0     -2910.239502             1.0         False
5   -2910.239502   -3097.484863  3597.484863 -2910.239502  374.798828 -3097.484863        0.0  187.245361      187.245361     6.0     -2910.239502             1.0         False
6   -2708.085449   -2998.484863  3597.484863 -2708.085449  389.399414 -2998.484863        0.0  290.399414      289.399414     7.0     -2910.239502             1.0         False
7   -2602.285156   -2897.484863  3597.484863 -2602.285156  396.199707 -2897.484863        0.0  295.199707      295.199707     2.0     -2910.239502             1.0         False
8   -2497.385010   -2897.434570  3597.484863 -2497.385010  400.099854 -2897.434570        0.0  400.049561      300.099854     3.0     -2910.239502             1.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:27:56]  --------------------------------------------------------------------------------
[08/23 16:27:56]  Iteration: 4 (0 solution, 3 counterexamples)
[08/23 16:27:57]  Generator returned sat in 0.017054 secs.
[08/23 16:27:57]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:27:58]  Improved gap from 0.0 to 65.625
[08/23 16:27:58]  Improved number of small numbers from 56 to 70 out of a max of 110
[08/23 16:27:58]  Verifer returned sat in 1.816206 secs.
[08/23 16:27:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1995.743408   -2395.740141  2289.486530 -1995.743408    0.001465 -2395.740141        0.0  399.996733      399.996733     9.0     -2395.740141            -1.0            -1
1   -1995.743408   -2295.740234  2289.486530 -1995.743408    0.001465 -2295.740234        0.0  299.996826      299.996733     7.0     -2395.740141             1.0         False
2   -1995.743408   -2256.480141  2289.486530 -1995.743408    0.001465 -2256.480141        0.0  260.736733      199.996733     6.0     -2395.740141             0.0         False
3   -1995.743408   -2130.407919  2289.486530 -1995.743408    0.001709 -2130.407919        0.0  134.664511       99.996733     7.0     -2395.740141             0.0         False
4   -1995.741808   -1995.743474  2289.486530 -1995.741808  134.666111 -1995.743474        0.0    0.001667       -0.001667     8.0     -2395.740141             0.0         False
5   -1995.733474   -1995.740141  2322.741699 -1995.733474    0.010000 -1995.740141        0.0    0.006667      -66.738164     1.0     -1995.733474             1.0          True
6   -1863.370141   -1928.995141  2357.116530 -1863.370141  132.370000 -1928.995141        0.0   65.625000        0.000000     1.0     -1995.733474             0.0         False
7   -1826.288752   -1863.370141  2391.491530 -1826.288752  102.706389 -1863.370141        0.0   37.081389      -28.543611     2.0     -1826.288752             0.0         False
8   -1795.183474   -1797.745117  2425.866455 -1795.183474   68.186667 -1797.745117        0.0    2.561643      -63.063408     1.0     -1795.183474             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:27:59]  --------------------------------------------------------------------------------
[08/23 16:27:59]  Iteration: 5 (0 solution, 4 counterexamples)
[08/23 16:27:59]  Generator returned sat in 0.097710 secs.
[08/23 16:27:59]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:00]  Improved gap from 0.0003662109375 to 0
[08/23 16:28:00]  Improved number of small numbers from 56 to 92 out of a max of 110
[08/23 16:28:00]  Verifer returned sat in 1.033749 secs.
[08/23 16:28:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2018.906494   -2418.905518  2312.651611 -2018.906494  0.001221 -2418.905518        0.0  399.999023      399.998728     7.0     -2418.905518            -1.0            -1
1   -2018.906494   -2318.905273  2312.651611 -2018.906494  0.001221 -2318.905273        0.0  299.998779      299.998728     7.0     -2418.905518             0.0         False
2   -2018.906494   -2218.905273  2312.651611 -2018.906494  0.001221 -2218.905273        0.0  199.998779      199.998728     6.0     -2418.905518             0.0         False
3   -2018.906494   -2118.905518  2312.651611 -2018.906494  0.001221 -2118.905518        0.0   99.999023       99.998728     7.0     -2418.905518             0.0         False
4   -2018.906494   -2018.906669  2312.651855 -2018.906494  0.010000 -2018.906669        0.0    0.000175       -0.001028     8.0     -2418.905518             0.0         False
5   -2017.906669   -2018.905273  2411.653058 -2017.906669  1.000000 -2018.905273        0.0    0.998605        0.000000     1.0     -2418.905518             1.0          True
6   -2017.906669   -2017.906669  2511.652832 -2017.906669  0.010000 -2017.906669        0.0    0.000000       -0.000226     2.0     -2017.906669             0.0         False
7   -2017.896669   -2017.897919  2611.634521 -2017.896669  0.010000 -2017.897919        0.0    0.001250       -0.008536     1.0     -2017.906669             0.0         False
8   -2017.887919   -2017.887939  2611.634521 -2017.887919  0.010000 -2017.887939        0.0    0.000021      -99.999786     1.0     -2017.906669             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:01]  --------------------------------------------------------------------------------
[08/23 16:28:01]  Iteration: 6 (0 solution, 5 counterexamples)
[08/23 16:28:01]  Generator returned sat in 0.014023 secs.
[08/23 16:28:01]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:01]  Improved gap from 0.00022569444444444443 to 0
[08/23 16:28:01]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:28:01]  Verifer returned sat in 0.627953 secs.
[08/23 16:28:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1567.926758   -1968.427979  2111.655762 -1567.926758  0.001221 -1968.427979        0.0  400.501221      400.501221     7.0     -1968.427979            -1.0            -1
1   -1567.926758   -1968.427979  2111.655762 -1567.926758  0.001221 -1968.427979        0.0  400.501221      300.501221     7.0     -1968.427979             0.0         False
2   -1567.926758   -1768.428955  2111.655762 -1567.926758  0.001250 -1768.428955        0.0  200.502197      200.501221     7.0     -1968.427979             0.0         False
3   -1567.926758   -1768.427734  2111.655762 -1567.926758  0.001465 -1768.427734        0.0  200.500977      100.501221     7.0     -1968.427979             0.0         False
4   -1567.926758   -1568.429199  2111.655762 -1567.926758  0.010000 -1568.429199        0.0    0.502441        0.501221     8.0     -1968.427979             0.0         False
5   -1567.926758   -1568.427734  2211.154541 -1567.926758  0.500000 -1568.427734        0.0    0.500977        0.000000     9.0     -1968.427979             1.0          True
6   -1567.926758   -1567.926758  2311.154541 -1567.926758  0.500000 -1567.926758        0.0    0.000000        0.000000     9.0     -1968.427979             1.0          True
7   -1567.426758   -1567.925537  2410.654541 -1567.426758  0.500000 -1567.925537        0.0    0.498779        0.000000     1.0     -1968.427979             1.0          True
8   -1567.426758   -1567.426758  2410.654541 -1567.426758  0.010000 -1567.426758        0.0    0.000000     -100.000000     2.0     -1567.426758             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:02]  --------------------------------------------------------------------------------
[08/23 16:28:02]  Iteration: 7 (0 solution, 6 counterexamples)
[08/23 16:28:02]  Generator returned sat in 0.170565 secs.
[08/23 16:28:02]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:03]  Improved number of small numbers from 55 to 79 out of a max of 109
[08/23 16:28:03]  Verifer returned sat in 0.811915 secs.
[08/23 16:28:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     437.103271   -1767.911758  1911.139541   437.103271     0.004883 -1767.911758        0.0  2205.015029     2205.015029     7.0     -1767.911758            -1.0            -1
1     437.103271   -1767.911621  1911.139541   437.103271     0.004883 -1767.911621        0.0  2205.014893     2105.015029     6.0     -1767.911758             0.0         False
2     437.103271   -1667.911621  1911.139541   437.103271     0.005127 -1667.911621        0.0  2105.014893     2005.015029     7.0     -1767.911758             0.0         False
3     437.103271   -1467.916758  1911.139541   437.103271   317.517500 -1467.916758        0.0  1905.020029     1905.015029     8.0     -1767.911758             0.0         False
4     437.103271   -1467.911621  1911.139541   437.103271   767.510000 -1467.911621        0.0  1905.014893     1805.015029     9.0     -1767.911758             1.0          True
5     437.103271   -1312.911621  1911.139541   437.103271  1217.510000 -1312.911621        0.0  1750.014893     1705.015029     9.0     -1767.911758             1.0          True
6     437.103271   -1167.911758  1911.139541   437.103271  1750.010000 -1167.911758        0.0  1605.015029     1605.015029     8.0     -1767.911758             1.0          True
7    1032.105742   -1167.911758  1911.139541  1032.105742  2200.017500 -1167.911758        0.0  2200.017500     2100.017500     8.0     -1767.911758             1.0          True
8    1032.105742    -967.911865  1911.139541  1032.105742     0.010000  -967.911865        0.0  2000.017607     2000.017500     9.0      1032.105742             1.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:04]  --------------------------------------------------------------------------------
[08/23 16:28:04]  Iteration: 8 (0 solution, 7 counterexamples)
[08/23 16:28:04]  Generator returned sat in 0.024590 secs.
[08/23 16:28:04]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:04]  Improved number of small numbers from 51 to 109 out of a max of 109
[08/23 16:28:04]  Verifer returned sat in 0.343360 secs.
[08/23 16:28:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     532.110596   -1767.916992  1911.144775   532.110596     0.004883 -1767.916992        0.0  2300.027588     2300.027588     9.0     -1767.916992            -1.0            -1
1     532.110596   -1767.911621  1911.144775   532.110596     0.005000 -1767.911621        0.0  2300.022217     2200.027588     6.0     -1767.916992             1.0         False
2     532.110596   -1667.911865  1911.144775   532.110596     0.005000 -1667.911865        0.0  2200.022461     2100.027588     7.0     -1767.916992             0.0         False
3     532.110596   -1467.916992  1911.144775   532.110596   900.037598 -1467.916992        0.0  2000.027588     2000.027588     8.0     -1767.916992             0.0         False
4     532.110596   -1367.921631  1911.144775   532.110596  1200.037598 -1367.921631        0.0  1900.032227     1900.027588     9.0     -1767.916992             1.0          True
5     532.110596   -1367.916748  1911.144775   532.110596  1600.027588 -1367.916748        0.0  1900.027344     1800.027588     9.0     -1767.916992             1.0          True
6     532.110596   -1167.916992  1911.144775   532.110596  1900.022705 -1167.916992        0.0  1700.027588     1700.027588     8.0     -1767.916992             1.0          True
7    1032.105713   -1167.916992  1911.144775  1032.105713  2200.022705 -1167.916992        0.0  2200.022705     2100.022705     8.0     -1767.916992             1.0          True
8    1032.105713    -967.916992  1911.144775  1032.105713     0.010000  -967.916992        0.0  2000.022705     2000.022705     9.0      1032.105713             1.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:05]  --------------------------------------------------------------------------------
[08/23 16:28:05]  Iteration: 9 (0 solution, 8 counterexamples)
[08/23 16:28:05]  Generator returned sat in 0.106945 secs.
[08/23 16:28:05]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:28:05]  Improved gap from 0.049560546875 to 100
[08/23 16:28:05]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:28:05]  Verifer returned sat in 0.396863 secs.
[08/23 16:28:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1367.857666   -1867.857422  1911.085449 -1367.857666    0.049561 -1867.857422        0.0  499.999756      400.000000     8.0     -1867.857422            -1.0            -1
1   -1367.857666   -1767.857666  1911.085449 -1367.857666    0.049561 -1767.857666        0.0  400.000000      300.000000     5.0     -1867.857422             1.0         False
2   -1367.857666   -1661.857666  1911.085449 -1367.857666    0.049561 -1661.857666        0.0  294.000000      200.000000     5.0     -1867.857422             1.0          True
3   -1367.857666   -1567.857422  1911.085449 -1367.857666   29.599121 -1567.857422        0.0  199.999756      100.000000     5.0     -1867.857422             1.0          True
4   -1367.857666   -1420.956787  1911.085449 -1367.857666  179.599121 -1420.956787        0.0   53.099121        0.000000     6.0     -1867.857422             1.0          True
5   -1067.907227   -1367.857666  1911.085449 -1067.907227  353.049561 -1367.857666        0.0  299.950439      199.950439     6.0     -1867.857422             1.0          True
6    -867.808105   -1267.857666  1911.085449  -867.808105  500.049561 -1267.857666        0.0  400.049561      300.049561     2.0     -1867.857422             1.0          True
7    -867.808105   -1067.857666  1911.085449  -867.808105    0.500000 -1067.857666        0.0  200.049561      200.049561     2.0      -867.808105             0.0         False
8    -867.808105   -1067.808105  1911.085449  -867.808105    0.500000 -1067.808105        0.0  200.000000      100.049561     3.0      -867.808105             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:06]  --------------------------------------------------------------------------------
[08/23 16:28:06]  Iteration: 10 (0 solution, 9 counterexamples)
[08/23 16:28:06]  Generator returned sat in 0.053617 secs.
[08/23 16:28:06]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:07]  Improved number of small numbers from 95 to 97 out of a max of 109
[08/23 16:28:07]  Verifer returned sat in 0.334641 secs.
[08/23 16:28:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1367.857666   -1767.857666  1911.085449 -1367.857666     0.001221 -1767.857666        0.0  400.000000        400.0000     6.0     -1767.857666            -1.0            -1
1   -1367.857666   -1667.857666  1911.085449 -1367.857666     0.001221 -1667.857666        0.0  300.000000        300.0000     6.0     -1767.857666             0.0         False
2   -1367.857666   -1667.856416  1911.085449 -1367.857666     0.001221 -1667.856416        0.0  299.998750        200.0000     7.0     -1767.857666             0.0         False
3   -1367.857666   -1467.858887  1911.085449 -1367.857666     0.001221 -1467.858887        0.0  100.001221        100.0000     8.0     -1767.857666             0.0         False
4   -1367.857666   -1467.857666  1911.085449 -1367.857666     0.010000 -1467.857666        0.0  100.000000          0.0000     9.0     -1767.857666             0.0         False
5   -1067.847666   -1367.857666  1911.085449 -1067.847666   400.010000 -1367.857666        0.0  300.010000        200.0100     9.0     -1767.857666             1.0          True
6    -367.850166   -1267.857666  1911.085449  -367.850166  1000.007500 -1267.857666        0.0  900.007500        800.0075     2.0     -1767.857666             1.0          True
7    -367.850166   -1067.857910  1911.085449  -367.850166     0.010000 -1067.857910        0.0  700.007744        700.0075     3.0      -367.850166             0.0         False
8    -367.850166    -967.857910  1911.085449  -367.850166     0.010000  -967.857910        0.0  600.007744        600.0075     3.0      -367.850166             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:07]  --------------------------------------------------------------------------------
[08/23 16:28:07]  Iteration: 11 (0 solution, 10 counterexamples)
[08/23 16:28:07]  Generator returned sat in 0.053379 secs.
[08/23 16:28:07]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:08]  Improved gap from 0.00125 to 100
[08/23 16:28:08]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:28:08]  Verifer returned sat in 0.305315 secs.
[08/23 16:28:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1567.882812   -2267.887695  2211.075439 -1567.882812    0.005000 -2267.887695        0.0  700.004883      700.004883     7.0     -2267.887695            -1.0            -1
1   -1567.882812   -2167.887695  2211.075439 -1567.882812  500.004883 -2167.887695        0.0  600.004883      600.004883     7.0     -2267.887695             0.0         False
2   -1567.882812   -2067.892822  2211.075439 -1567.882812  500.004883 -2067.892822        0.0  500.010010      500.004883     8.0     -2267.887695             0.0         False
3   -1567.882812   -2067.887695  2211.075439 -1567.882812  500.004883 -2067.887695        0.0  500.004883      400.004883     9.0     -2267.887695             0.0         False
4   -1567.882812   -1967.887695  2211.075439 -1567.882812  500.004883 -1967.887695        0.0  400.004883      300.004883     9.0     -2267.887695             1.0          True
5   -1467.882812   -1767.887695  2211.075439 -1467.882812  500.004883 -1767.887695        0.0  300.004883      300.004883     9.0     -2267.887695             1.0          True
6   -1267.882812   -1667.887695  2211.075439 -1267.882812  500.004883 -1667.887695        0.0  400.004883      400.004883     9.0     -2267.887695             1.0          True
7   -1167.882812   -1567.887695  2211.075439 -1167.882812  500.004883 -1567.887695        0.0  400.004883      400.004883     8.0     -2267.887695             1.0          True
8   -1167.882812   -1467.887695  2211.075439 -1167.882812    0.010000 -1467.887695        0.0  300.004883      300.004883     4.0     -1167.882812             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:08]  --------------------------------------------------------------------------------
[08/23 16:28:08]  Iteration: 12 (0 solution, 11 counterexamples)
[08/23 16:28:09]  Generator returned sat in 0.176243 secs.
[08/23 16:28:09]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:28:11]  Improved gap from 12.416351318359375 to 15.625
[08/23 16:28:11]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:28:11]  Verifer returned sat in 2.179560 secs.
[08/23 16:28:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2064.739746   -2633.789062  2109.026123 -2064.739746    0.049316 -2633.789062        0.0  569.049316      569.049316     7.0     -2633.789062            -1.0            -1
1   -2064.739746   -2633.789062  2109.026123 -2064.739746  469.098633 -2633.789062        0.0  569.049316      469.049316     7.0     -2633.789062             1.0         False
2   -2064.739746   -2533.789062  2109.026123 -2064.739746  469.049316 -2533.789062        0.0  469.049316      369.049316     5.0     -2064.739746             1.0         False
3   -2064.739746   -2333.789062  2109.026123 -2064.739746  469.000000 -2333.789062        0.0  269.049316      269.049316     5.0     -2064.739746             1.0         False
4   -2064.739746   -2233.789062  2109.026123 -2064.739746  235.000000 -2233.789062        0.0  169.049316      169.049316     5.0     -2064.739746             1.0         False
5   -2064.739746   -2133.789062  2109.026123 -2064.739746  118.000000 -2133.789062        0.0   69.049316       69.049316     6.0     -2064.739746             1.0         False
6   -2064.739746   -2067.088379  2126.700439 -2064.739746   59.500000 -2067.088379        0.0    2.348633      -13.276367     7.0     -2064.739746             1.0         False
7   -2036.838379   -2051.463379  2211.075439 -2036.838379   30.250000 -2051.463379        0.0   14.625000       -1.000000     1.0     -2036.838379             1.0         False
8   -2035.838379   -2035.838379  2211.075439 -2035.838379   15.625000 -2035.838379        0.0    0.000000     -100.000000     1.0     -2035.838379             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:11]  --------------------------------------------------------------------------------
[08/23 16:28:11]  Iteration: 13 (0 solution, 12 counterexamples)
[08/23 16:28:12]  Generator returned sat in 0.055623 secs.
[08/23 16:28:12]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:28:14]  Improved gap from 15.625 to 17.1875
[08/23 16:28:14]  Improved number of small numbers from 51 to 110 out of a max of 110
[08/23 16:28:14]  Verifer returned sat in 2.095469 secs.
[08/23 16:28:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -3003.552490   -3103.601562  2038.537354 -3003.552490    0.049316 -3103.601562        0.0  100.049072      100.049072     9.0     -3103.601562            -1.0            -1
1   -3003.552490   -3103.552490  2038.537354 -3003.552490  100.000000 -3103.552490        0.0  100.000000        0.049072     2.0     -3103.601562             1.0         False
2   -3003.552490   -3003.601562  2038.537354 -3003.552490    0.049316 -3003.601562        0.0    0.049072      -99.950928     3.0     -3003.552490             0.0         False
3   -2546.601562   -2803.601562  2038.537354 -2546.601562  457.000000 -2803.601562        0.0  257.000000      257.000000     1.0     -3003.552490             1.0         False
4   -2546.601562   -2703.601807  2038.537354 -2546.601562  230.000000 -2703.601807        0.0  157.000244      157.000000     2.0     -2546.601562             0.0         False
5   -2546.601562   -2606.400879  2038.537354 -2546.601562  116.500000 -2606.400879        0.0   59.799316       57.000000     3.0     -2546.601562             0.0         False
6   -2546.601562   -2546.651123  2057.774414 -2546.601562   59.750000 -2546.651123        0.0    0.049561      -23.762939     4.0     -2546.601562             1.0         False
7   -2515.276123   -2522.838623  2140.586914 -2515.276123   31.375000 -2522.838623        0.0    7.562500       -9.625000     1.0     -2515.276123             1.0         False
8   -2505.651123   -2505.651123  2140.586914 -2505.651123   17.187500 -2505.651123        0.0    0.000000     -100.000000     1.0     -2505.651123             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:14]  --------------------------------------------------------------------------------
[08/23 16:28:14]  Iteration: 14 (0 solution, 13 counterexamples)
[08/23 16:28:15]  Generator returned sat in 0.154989 secs.
[08/23 16:28:15]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:16]  Improved gap from 8.187744140625 to 14.0625
[08/23 16:28:17]  Improved number of small numbers from 51 to 108 out of a max of 110
[08/23 16:28:17]  Verifer returned sat in 2.113206 secs.
[08/23 16:28:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -3534.275146   -4185.898438  2016.084473 -3534.275146    0.049316 -4185.898438        0.0  651.623291      551.623291     4.0     -4185.898438            -1.0            -1
1   -3534.275146   -3985.898682  2016.084473 -3534.275146  451.573975 -3985.898682        0.0  451.623535      451.623291     4.0     -4185.898438             1.0         False
2   -3534.275146   -3985.898438  2016.084473 -3534.275146  451.573975 -3985.898438        0.0  451.623291      351.623291     5.0     -4185.898438             1.0          True
3   -3534.275146   -3885.898438  2016.084473 -3534.275146  451.574219 -3885.898438        0.0  351.623291      251.623291     5.0     -4185.898438             1.0          True
4   -3534.275146   -3685.898682  2016.084473 -3534.275146  225.787109 -3685.898682        0.0  151.623535      151.623291     5.0     -3534.275146             1.0          True
5   -3534.275146   -3585.898438  2016.084473 -3534.275146  112.893555 -3585.898438        0.0   51.623291       51.623291     6.0     -3534.275146             1.0         False
6   -3529.451660   -3529.500977  2045.624512 -3529.451660   56.446777 -3529.500977        0.0    0.049316      -14.013184     1.0     -3529.451660             1.0         False
7   -3501.277588   -3515.438232  2131.463623 -3501.277588   28.223389 -3515.438232        0.0   14.160645        0.000000     1.0     -3501.277588             0.0         False
8   -3501.277588   -3501.277588  2131.463623 -3501.277588   14.111694 -3501.277588        0.0    0.000000     -100.000000     2.0     -3501.277588             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:18]  --------------------------------------------------------------------------------
[08/23 16:28:18]  Iteration: 15 (0 solution, 14 counterexamples)
[08/23 16:28:18]  Generator returned sat in 0.231735 secs.
[08/23 16:28:18]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:19]  Improved gap from 0.0 to 0
[08/23 16:28:19]  Improved number of small numbers from 69 to 83 out of a max of 110
[08/23 16:28:19]  Verifer returned sat in 1.263363 secs.
[08/23 16:28:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2985.925049   -3185.925104  2016.084493 -2985.925049    0.001465 -3185.925104        0.0  200.000055      200.000055     6.0     -3185.925104            -1.0            -1
1   -2985.925049   -3085.925293  2016.084493 -2985.925049    0.001709 -3085.925293        0.0  100.000244      100.000055     6.0     -3185.925104             1.0         False
2   -2985.925049   -3085.925049  2016.084493 -2985.925049    0.001709 -3085.925049        0.0  100.000000        0.000055     6.0     -3185.925104             1.0          True
3   -2885.923584   -2985.925104  2016.084493 -2885.923584  200.001465 -2985.925104        0.0  100.001520        0.001520     5.0     -3185.925104             1.0          True
4   -2785.925104   -2785.931771  2016.084493 -2785.925104  200.000000 -2785.931771        0.0    0.006667        0.000000     1.0     -2785.925104             1.0          True
5   -2785.921771   -2785.923438  2116.074707 -2785.921771    0.010000 -2785.923438        0.0    0.001667       -0.006453     1.0     -2785.921771             0.0         False
6   -2785.913437   -2785.915104  2216.066162 -2785.913437    0.010000 -2785.915104        0.0    0.001667       -0.006665     1.0     -2785.921771             0.0         False
7   -2785.905104   -2785.906771  2316.064453 -2785.905104    0.010000 -2785.906771        0.0    0.001667       -0.000040     1.0     -2785.921771             0.0         False
8   -2785.896771   -2785.903564  2316.064453 -2785.896771    0.010000 -2785.903564        0.0    0.006794      -99.991707     1.0     -2785.921771             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:20]  --------------------------------------------------------------------------------
[08/23 16:28:20]  Iteration: 16 (0 solution, 15 counterexamples)
[08/23 16:28:20]  Generator returned sat in 0.113921 secs.
[08/23 16:28:20]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:21]  Improved gap from 0.0008333333333333334 to 31.25
[08/23 16:28:21]  Improved number of small numbers from 57 to 110 out of a max of 110
[08/23 16:28:21]  Verifer returned sat in 0.848165 secs.
[08/23 16:28:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2950.656006   -3317.405029  2149.561768 -2950.656006    0.001465 -3317.405029        0.0  366.749023      366.748779     7.0     -3317.405029            -1.0            -1
1   -2950.656006   -3317.404785  2149.561768 -2950.656006    0.001465 -3317.404785        0.0  366.748779      266.748779     6.0     -3317.405029             1.0         False
2   -2950.656006   -3117.404785  2149.561768 -2950.656006    0.001465 -3117.404785        0.0  166.748779      166.748779     7.0     -3317.405029             1.0          True
3   -2950.656006   -3017.405029  2149.561768 -2950.656006    0.001465 -3017.405029        0.0   66.749023       66.748779     4.0     -3317.405029             1.0          True
4   -2950.656006   -2981.906250  2182.812988 -2950.656006    0.010000 -2981.906250        0.0   31.250244        0.000000     5.0     -3317.405029             0.0         False
5   -2950.656006   -2950.656006  2251.562988 -2950.656006    0.010000 -2950.656006        0.0    0.000000      -31.250000     6.0     -3317.405029             0.0         False
6   -2783.907227   -2919.406006  2251.562988 -2783.907227  166.748779 -2919.406006        0.0  135.498779       35.498779     1.0     -3317.405029             1.0          True
7   -2783.907227   -2815.157471  2316.064209 -2783.907227    0.010000 -2815.157471        0.0   31.250244        0.000000     2.0     -2783.907227             0.0         False
8   -2783.907227   -2783.907227  2316.064453 -2783.907227    0.010000 -2783.907227        0.0    0.000000      -99.999756     3.0     -2783.907227             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:22]  --------------------------------------------------------------------------------
[08/23 16:28:22]  Iteration: 17 (0 solution, 16 counterexamples)
[08/23 16:28:22]  Generator returned sat in 0.052627 secs.
[08/23 16:28:22]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:22]  Improved gap from 31.2459765625 to 100
[08/23 16:28:23]  Improved number of small numbers from 64 to 93 out of a max of 110
[08/23 16:28:23]  Verifer returned sat in 0.908420 secs.
[08/23 16:28:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2817.322021   -3417.322510  2082.812988 -2817.322021    0.000244 -3417.322510        0.0  600.000488      500.000651     9.0     -3417.322510            -1.0            -1
1   -2817.322021   -3317.322510  2082.812988 -2817.322021    0.000244 -3317.322510        0.0  500.000488      400.000651     8.0     -3417.322510             1.0         False
2   -2817.322021   -3217.322673  2082.812988 -2817.322021    0.000244 -3217.322673        0.0  400.000651      300.000651     9.0     -3417.322510             1.0          True
3   -2817.322021   -3017.322673  2082.812988 -2817.322021    0.000488 -3017.322673        0.0  200.000651      200.000651     4.0     -3417.322510             1.0          True
4   -2817.322021   -3017.322266  2082.812988 -2817.322021    0.010000 -3017.322266        0.0  200.000244      100.000651     5.0     -3417.322510             0.0         False
5   -2817.322021   -2817.322673  2082.812988 -2817.322021    0.010000 -2817.322673        0.0    0.000651        0.000651     6.0     -3417.322510             0.0         False
6   -2417.317673   -2817.322256  2082.812988 -2417.317673  400.005000 -2817.322256        0.0  400.004583      300.005000     7.0     -3417.322510             1.0          True
7   -2417.317673   -2617.322754  2082.812988 -2417.317673  400.002917 -2617.322754        0.0  200.005081      200.005000     2.0     -2417.317673             1.0          True
8   -2417.317673   -2517.322754  2082.812988 -2417.317673    0.010000 -2517.322754        0.0  100.005081      100.005000     3.0     -2417.317673             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:24]  --------------------------------------------------------------------------------
[08/23 16:28:24]  Iteration: 18 (0 solution, 17 counterexamples)
[08/23 16:28:24]  Generator returned sat in 0.337106 secs.
[08/23 16:28:24]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:26]  Improved gap from 0.0025 to 0
[08/23 16:28:27]  Improved number of small numbers from 61 to 87 out of a max of 110
[08/23 16:28:27]  Verifer returned sat in 2.197120 secs.
[08/23 16:28:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2190.311423   -2690.322754  2082.812988 -2190.311423  0.001250 -2690.322754        0.0  500.011331      500.011250     9.0     -2690.322754            -1.0            -1
1   -2190.311423   -2690.321533  2082.812988 -2190.311423  0.009766 -2690.321533        0.0  500.010111      400.011250     9.0     -2690.322754             1.0         False
2   -2190.311423   -2490.322754  2082.812988 -2190.311423  0.009766 -2490.322754        0.0  300.011331      300.011250     7.0     -2690.322754             1.0          True
3   -2190.311423   -2390.322754  2082.812988 -2190.311423  0.009766 -2390.322754        0.0  200.011331      200.011250     8.0     -2690.322754             1.0          True
4   -2190.311423   -2290.322754  2082.812988 -2190.311423  0.010000 -2290.322754        0.0  100.011331      100.011250     7.0     -2690.322754             1.0          True
5   -2190.311423   -2190.323730  2082.812988 -2190.311423  0.010000 -2190.323730        0.0    0.012308        0.011250     7.0     -2690.322754             1.0          True
6   -2190.311423   -2190.322510  2182.801738 -2190.311423  0.010000 -2190.322510        0.0    0.011087        0.000000     7.0     -2690.322754             1.0          True
7   -2190.311423   -2190.311423  2282.800488 -2190.311423  0.010000 -2190.311423        0.0    0.000000       -0.001250     8.0     -2690.322754             1.0          True
8   -2190.301423   -2190.310059  2282.800537 -2190.301423  0.010000 -2190.310059        0.0    0.008636      -99.991201     1.0     -2690.322754             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:27]  --------------------------------------------------------------------------------
[08/23 16:28:27]  Iteration: 19 (0 solution, 18 counterexamples)
[08/23 16:28:28]  Generator returned sat in 0.401909 secs.
[08/23 16:28:28]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:29]  Improved number of small numbers from 55 to 80 out of a max of 109
[08/23 16:28:29]  Verifer returned sat in 1.152061 secs.
[08/23 16:28:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2690.262207   -2990.311279  2282.801758 -2690.262207    0.024658 -2990.311279        0.0  300.049072      200.049072     9.0     -2990.311279            -1.0            -1
1   -2690.262207   -2890.311279  2282.801758 -2690.262207    0.024658 -2890.311279        0.0  200.049072      100.049072     9.0     -2990.311279             1.0         False
2   -2290.164307   -2790.311279  2282.801758 -2290.164307  600.146973 -2790.311279        0.0  500.146973      400.146973     4.0     -2990.311279             1.0          True
3   -2290.164307   -2690.237854  2282.801758 -2290.164307  500.122375 -2690.237854        0.0  400.073547      300.146973     2.0     -2290.164307             0.0         False
4   -2290.139954   -2490.311279  2282.801758 -2290.139954  400.097900 -2490.311279        0.0  200.171326      200.171326     3.0     -2290.139954             0.0         False
5   -2090.262329   -2490.286804  2282.801758 -2090.262329  400.048950 -2490.286804        0.0  400.024475      300.048950     4.0     -2090.262329             0.0         False
6   -2090.262329   -2390.311279  2282.801758 -2090.262329  350.036713 -2390.311279        0.0  300.048950      200.048950     5.0     -2090.262329             0.0         False
7   -2065.329636   -2190.311279  2282.801758 -2065.329636  324.981644 -2190.311279        0.0  124.981644      124.981644     3.0     -2065.329636             0.0         False
8   -1877.820457   -2190.311279  2282.801758 -1877.820457  312.490822 -2190.311279        0.0  312.490822      212.490822     3.0     -1877.820457             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:30]  --------------------------------------------------------------------------------
[08/23 16:28:30]  Iteration: 20 (0 solution, 19 counterexamples)
[08/23 16:28:30]  Generator returned sat in 0.197327 secs.
[08/23 16:28:30]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:31]  Improved gap from 0.0 to 65.625
[08/23 16:28:31]  Improved number of small numbers from 71 to 110 out of a max of 110
[08/23 16:28:31]  Verifer returned sat in 0.893474 secs.
[08/23 16:28:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2490.311768   -2921.557861  2248.426758 -2490.311768    0.001221 -2921.557861        0.0  431.246094      399.998535     9.0     -2921.557861            -1.0            -1
1   -2490.311768   -2790.310303  2248.426758 -2490.311768    0.001221 -2790.310303        0.0  299.998535      299.998535     8.0     -2921.557861             1.0         False
2   -2490.311768   -2690.310303  2248.426758 -2490.311768    0.001250 -2690.310303        0.0  199.998535      199.998535     9.0     -2921.557861             1.0          True
3   -2490.311768   -2590.310303  2248.426758 -2490.311768    0.001250 -2590.310303        0.0   99.998535       99.998535     6.0     -2921.557861             1.0          True
4   -2424.686523   -2490.311768  2248.426758 -2424.686523  165.623779 -2490.311768        0.0   65.625244       65.623779     7.0     -2921.557861             0.0         False
5   -2424.686523   -2490.310303  2282.801758 -2424.686523    0.010000 -2490.310303        0.0   65.623779       -0.001221     2.0     -2424.686523             1.0          True
6   -2390.310303   -2424.685303  2317.176758 -2390.310303  100.000000 -2424.685303        0.0   34.375000      -31.250000     1.0     -2424.686523             0.0         False
7   -2341.872803   -2359.060303  2351.551758 -2341.872803   82.812500 -2359.060303        0.0   17.187500      -48.437500     1.0     -2341.872803             0.0         False
8   -2293.434570   -2293.435059  2351.551758 -2293.434570   65.625732 -2293.435059        0.0    0.000488      -99.999268     1.0     -2293.434570             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:32]  --------------------------------------------------------------------------------
[08/23 16:28:32]  Iteration: 21 (0 solution, 20 counterexamples)
[08/23 16:28:33]  Generator returned sat in 0.202684 secs.
[08/23 16:28:33]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:33]  Improved gap from 0.0 to 48.4375
[08/23 16:28:33]  Improved number of small numbers from 66 to 110 out of a max of 110
[08/23 16:28:33]  Verifer returned sat in 0.388969 secs.
[08/23 16:28:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2359.059082   -2807.497803  2165.612793 -2359.059082    0.001250 -2807.497803        0.0  448.438721        448.4375     2.0     -2807.497803            -1.0            -1
1   -2359.059082   -2807.496582  2165.612793 -2359.059082    0.001465 -2807.496582        0.0  448.437500        348.4375     2.0     -2807.497803             0.0         False
2   -2359.059082   -2607.496582  2165.612793 -2359.059082    0.001465 -2607.496582        0.0  248.437500        248.4375     3.0     -2807.497803             0.0         False
3   -2359.059082   -2507.496582  2165.612793 -2359.059082    0.001465 -2507.496582        0.0  148.437500        148.4375     4.0     -2807.497803             0.0         False
4   -2359.059082   -2408.620361  2165.612793 -2359.059082    0.010000 -2408.620361        0.0   49.561279         48.4375     5.0     -2807.497803             0.0         False
5   -2359.059082   -2407.496582  2217.175293 -2359.059082    0.010000 -2407.496582        0.0   48.437500          0.0000     6.0     -2807.497803             0.0         False
6   -2359.059082   -2359.059082  2268.737793 -2359.059082    0.010000 -2359.059082        0.0    0.000000        -48.4375     7.0     -2807.497803             0.0         False
7   -2210.621582   -2310.621338  2268.737793 -2210.621582  148.437500 -2310.621338        0.0   99.999756          0.0000     1.0     -2807.497803             1.0          True
8   -2210.621582   -2210.621582  2320.300293 -2210.621582    0.010000 -2210.621582        0.0    0.000000        -48.4375     2.0     -2210.621582             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:33]  --------------------------------------------------------------------------------
[08/23 16:28:33]  Iteration: 22 (0 solution, 21 counterexamples)
[08/23 16:28:34]  Generator returned sat in 0.153923 secs.
[08/23 16:28:34]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:34]  Improved gap from 0.0 to 100
[08/23 16:28:35]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 16:28:35]  Verifer returned sat in 0.316083 secs.
[08/23 16:28:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2259.074219   -2659.086426  2268.737549 -2259.074219    0.009766 -2659.086426        0.0  400.012207      400.012207     9.0     -2659.086426            -1.0            -1
1   -2259.074219   -2559.086426  2268.737549 -2259.074219    0.009766 -2559.086426        0.0  300.012207      300.012207     9.0     -2659.086426             1.0         False
2   -2259.074219   -2559.084229  2268.737549 -2259.074219    0.009766 -2559.084229        0.0  300.010010      200.012207     5.0     -2659.086426             1.0          True
3   -2259.074219   -2359.086670  2268.737549 -2259.074219    0.010000 -2359.086670        0.0  100.012451      100.012207     5.0     -2659.086426             0.0         False
4   -2259.074219   -2259.086426  2268.737549 -2259.074219    0.010000 -2259.086426        0.0    0.012207        0.012207     6.0     -2659.086426             0.0         False
5   -2259.074219   -2259.084229  2268.737549 -2259.074219    0.010000 -2259.084229        0.0    0.010010      -99.987793     7.0     -2659.086426             0.0         False
6   -1659.084229   -2159.086426  2268.737549 -1659.084229  600.000000 -2159.086426        0.0  500.002197      400.002197     1.0     -2659.086426             1.0          True
7   -1659.084229   -2059.086426  2268.737549 -1659.084229    0.010000 -2059.086426        0.0  400.002197      300.002197     2.0     -1659.084229             0.0         False
8   -1659.084229   -1959.086426  2268.737549 -1659.084229    0.010000 -1959.086426        0.0  300.002197      200.002197     3.0     -1659.084229             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:35]  --------------------------------------------------------------------------------
[08/23 16:28:35]  Iteration: 23 (0 solution, 22 counterexamples)
[08/23 16:28:36]  Generator returned sat in 0.062760 secs.
[08/23 16:28:36]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:36]  Improved gap from 0.0016666666666666668 to 100
[08/23 16:28:36]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 16:28:36]  Verifer returned sat in 0.314243 secs.
[08/23 16:28:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2259.083984   -2659.083984  2268.737549 -2259.083984    0.0025 -2659.083984        0.0  400.000000      400.000000     6.0     -2659.083984            -1.0            -1
1   -2259.083984   -2574.081299  2268.737549 -2259.083984    0.0100 -2574.081299        0.0  314.997314      300.000000     5.0     -2659.083984             0.0         False
2   -2259.083984   -2545.083984  2268.737549 -2259.083984    0.0100 -2545.083984        0.0  286.000000      200.000000     5.0     -2659.083984             0.0         False
3   -2259.083984   -2359.083984  2268.737549 -2259.083984    0.0100 -2359.083984        0.0  100.000000      100.000000     6.0     -2659.083984             0.0         False
4   -2259.083984   -2288.081299  2268.737549 -2259.083984    0.0100 -2288.081299        0.0   28.997314        0.000000     7.0     -2659.083984             0.0         False
5   -1859.081299   -2259.083984  2268.737549 -1859.081299  429.0000 -2259.083984        0.0  400.002686      300.002686     8.0     -2659.083984             1.0          True
6   -1830.083984   -2159.083740  2268.737549 -1830.083984  429.0000 -2159.083740        0.0  328.999756      229.000000     2.0     -2659.083984             1.0          True
7   -1830.083984   -1959.083984  2268.737549 -1830.083984    0.0100 -1959.083984        0.0  129.000000      129.000000     3.0     -1830.083984             0.0         False
8   -1830.083984   -1859.083984  2268.737549 -1830.083984    0.0100 -1859.083984        0.0   29.000000       29.000000     4.0     -1830.083984             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:37]  --------------------------------------------------------------------------------
[08/23 16:28:37]  Iteration: 24 (0 solution, 23 counterexamples)
[08/23 16:28:37]  Generator returned sat in 0.334702 secs.
[08/23 16:28:37]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:38]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/23 16:28:38]  Verifer returned sat in 0.129788 secs.
[08/23 16:28:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2259.083984   -2659.083984  2268.737549 -2259.083984    0.0025 -2659.083984        0.0  400.000000      400.000000     5.0     -2659.083984            -1.0            -1
1   -2259.083984   -2574.081299  2268.737549 -2259.083984    0.0100 -2574.081299        0.0  314.997314      300.000000     5.0     -2659.083984             0.0         False
2   -2259.083984   -2545.083984  2268.737549 -2259.083984    0.0100 -2545.083984        0.0  286.000000      200.000000     6.0     -2659.083984             0.0         False
3   -2259.083984   -2359.083984  2268.737549 -2259.083984    0.0100 -2359.083984        0.0  100.000000      100.000000     7.0     -2659.083984             0.0         False
4   -2259.083984   -2288.081299  2268.737549 -2259.083984    0.0100 -2288.081299        0.0   28.997314        0.000000     8.0     -2659.083984             0.0         False
5   -1859.081299   -2259.083984  2268.737549 -1859.081299  429.0000 -2259.083984        0.0  400.002686      300.002686     9.0     -2659.083984             1.0          True
6   -1830.083984   -2159.083740  2268.737549 -1830.083984  429.0000 -2159.083740        0.0  328.999756      229.000000     2.0     -2659.083984             1.0          True
7   -1830.083984   -1959.083984  2268.737549 -1830.083984    0.0100 -1959.083984        0.0  129.000000      129.000000     3.0     -1830.083984             0.0         False
8   -1830.083984   -1859.083984  2268.737549 -1830.083984    0.0100 -1859.083984        0.0   29.000000       29.000000     4.0     -1830.083984             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:38]  --------------------------------------------------------------------------------
[08/23 16:28:38]  Iteration: 25 (0 solution, 24 counterexamples)
[08/23 16:28:40]  Generator returned sat in 0.835538 secs.
[08/23 16:28:40]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:28:40]  Improved gap from 0.001220703125 to 1.5625
[08/23 16:28:40]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:28:40]  Verifer returned sat in 0.314174 secs.
[08/23 16:28:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2289.634277   -2689.634277  2299.287842 -2289.634277  1.999756 -2689.634277        0.0  400.000000      400.000000     5.0     -2689.634277            -1.0            -1
1   -2289.634277   -2589.634277  2299.287842 -2289.634277  1.999756 -2589.634277        0.0  300.000000      300.000000     5.0     -2689.634277             0.0         False
2   -2289.634277   -2589.634277  2299.287842 -2289.634277  1.999756 -2589.634277        0.0  300.000000      200.000000     5.0     -2689.634277             0.0         False
3   -2289.634277   -2389.634277  2299.287842 -2289.634277  2.000000 -2389.634277        0.0  100.000000      100.000000     6.0     -2689.634277             0.0         False
4   -2289.634277   -2290.071777  2299.287842 -2289.634277  2.000000 -2290.071777        0.0    0.437500        0.000000     7.0     -2689.634277             0.0         False
5   -2288.071777   -2289.634277  2397.725342 -2288.071777  2.000000 -2289.634277        0.0    1.562500        0.000000     8.0     -2689.634277             0.0         False
6   -2288.071777   -2288.071777  2495.727783 -2288.071777  0.010000 -2288.071777        0.0    0.000000       -1.997559     2.0     -2288.071777             1.0          True
7   -2286.071777   -2286.074219  2594.165039 -2286.071777  2.000000 -2286.074219        0.0    0.002441       -1.560303     1.0     -2288.071777             0.0         False
8   -2284.074219   -2284.511475  2594.165039 -2284.074219  2.000000 -2284.511475        0.0    0.437256      -99.562744     1.0     -2288.071777             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:40]  --------------------------------------------------------------------------------
[08/23 16:28:40]  Iteration: 26 (0 solution, 25 counterexamples)
[08/23 16:28:42]  Generator returned sat in 0.460470 secs.
[08/23 16:28:42]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:43]  Improved gap from 0.0025 to 0
[08/23 16:28:43]  Improved number of small numbers from 61 to 86 out of a max of 110
[08/23 16:28:43]  Verifer returned sat in 1.769490 secs.
[08/23 16:28:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2215.407194   -2715.418457  2299.287842 -2215.407194  0.001250 -2715.418457        0.0  500.011263       500.01125     8.0     -2715.418457            -1.0            -1
1   -2215.407194   -2615.418457  2299.287842 -2215.407194  0.001465 -2615.418457        0.0  400.011263       400.01125     8.0     -2715.418457             1.0         False
2   -2215.407194   -2515.418457  2299.287842 -2215.407194  0.001465 -2515.418457        0.0  300.011263       300.01125     9.0     -2715.418457             1.0          True
3   -2215.407194   -2415.418457  2299.287842 -2215.407194  0.001465 -2415.418457        0.0  200.011263       200.01125     8.0     -2715.418457             1.0          True
4   -2215.407194   -2315.418457  2299.287842 -2215.407194  0.010000 -2315.418457        0.0  100.011263       100.01125     8.0     -2715.418457             1.0          True
5   -2215.407194   -2315.417236  2299.287842 -2215.407194  0.010000 -2315.417236        0.0  100.010042         0.01125     8.0     -2715.418457             1.0          True
6   -2215.407194   -2215.418213  2399.276592 -2215.407194  0.010000 -2215.418213        0.0    0.011019         0.00000     8.0     -2715.418457             1.0          True
7   -2215.407194   -2215.407194  2499.266602 -2215.407194  0.010000 -2215.407194        0.0    0.000000        -0.00999     8.0     -2715.418457             1.0          True
8   -2215.397194   -2215.397194  2499.266602 -2215.397194  0.010000 -2215.397194        0.0    0.000000       -99.99999     1.0     -2715.418457             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:28:44]  --------------------------------------------------------------------------------
[08/23 16:28:44]  Iteration: 27 (0 solution, 26 counterexamples)
[08/23 16:28:45]  Generator returned sat in 0.786144 secs.
[08/23 16:28:45]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:28:46]  Improved gap from 0.0 to 65.625
[08/23 16:28:46]  Improved number of small numbers from 39 to 110 out of a max of 110
[08/23 16:28:46]  Verifer returned sat in 1.115017 secs.
[08/23 16:28:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1957.650879   -2357.347656  1941.217041 -1957.650879    0.048584 -2357.347656        0.0  399.696777      399.696777     8.0     -2357.347656            -1.0            -1
1   -1957.650879   -2257.347900  1941.217041 -1957.650879    0.048828 -2257.347900        0.0  299.697021      299.696777     9.0     -2357.347656             0.0         False
2   -1957.650879   -2218.750488  1941.217041 -1957.650879    0.048828 -2218.750488        0.0  261.099609      199.696777     7.0     -2357.347656             1.0          True
3   -1957.650879   -2154.671875  1941.217041 -1957.650879  101.837891 -2154.671875        0.0  197.020996       99.696777     8.0     -2357.347656             0.0         False
4   -1957.650879   -1957.699219  1941.217041 -1957.650879  101.837891 -1957.699219        0.0    0.048340       -0.303223     9.0     -2357.347656             0.0         False
5   -1956.199219   -1957.347656  1975.592041 -1956.199219    1.500000 -1957.347656        0.0    1.148438      -64.476562     1.0     -1956.199219             1.0          True
6   -1826.146240   -1891.722656  2009.967041 -1826.146240  131.201416 -1891.722656        0.0   65.576416       -0.048584     1.0     -1956.199219             0.0         False
7   -1759.748047   -1826.097656  2043.617432 -1759.748047  131.974609 -1826.097656        0.0   66.349609        0.000000     1.0     -1956.199219             0.0         False
8   -1759.748047   -1759.748047  2077.992432 -1759.748047   66.300781 -1759.748047        0.0    0.000000      -65.625000     2.0     -1759.748047             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:47]  --------------------------------------------------------------------------------
[08/23 16:28:47]  Iteration: 28 (0 solution, 27 counterexamples)
[08/23 16:28:48]  Generator returned sat in 0.179828 secs.
[08/23 16:28:48]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:28:49]  Improved gap from 64.9522705078125 to 65.625
[08/23 16:28:50]  Improved number of small numbers from 44 to 110 out of a max of 110
[08/23 16:28:50]  Verifer returned sat in 1.716496 secs.
[08/23 16:28:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1905.046631   -2334.272461  1942.269287 -1905.046631    0.024414 -2334.272461        0.0  429.225830      399.975830     8.0     -2334.272461            -1.0            -1
1   -1905.046631   -2205.022461  1942.269287 -1905.046631    0.024414 -2205.022461        0.0  299.975830      299.975830     9.0     -2334.272461             0.0         False
2   -1905.046631   -2167.626953  1942.269287 -1905.046631    0.024414 -2167.626953        0.0  262.580322      199.975830     7.0     -2334.272461             1.0          True
3   -1905.046631   -2005.022461  1942.269287 -1905.046631    0.024414 -2005.022461        0.0   99.975830       99.975830     8.0     -2334.272461             0.0         False
4   -1839.397461   -1905.046631  1942.269287 -1839.397461  165.625000 -1905.046631        0.0   65.649170       65.625000     9.0     -2334.272461             0.0         False
5   -1839.397461   -1905.022461  1976.644287 -1839.397461    1.500000 -1905.022461        0.0   65.625000        0.000000     2.0     -1839.397461             1.0          True
6   -1772.720215   -1839.397461  2009.966797 -1772.720215  132.302246 -1839.397461        0.0   66.677246       -0.000244     3.0     -1839.397461             0.0         False
7   -1755.584961   -1772.696045  2044.317871 -1755.584961   83.812500 -1772.696045        0.0   17.111084      -48.513916     1.0     -1755.584961             0.0         False
8   -1705.520752   -1707.071045  2044.317871 -1705.520752   67.175293 -1707.071045        0.0    1.550293      -98.449707     1.0     -1705.520752             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:50]  --------------------------------------------------------------------------------
[08/23 16:28:50]  Iteration: 29 (0 solution, 28 counterexamples)
[08/23 16:28:51]  Generator returned sat in 0.169693 secs.
[08/23 16:28:51]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:28:53]  Improved gap from 65.625 to 65.625
[08/23 16:28:53]  Improved number of small numbers from 72 to 110 out of a max of 110
[08/23 16:28:53]  Verifer returned sat in 1.767356 secs.
[08/23 16:28:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2700.886475   -3200.886475  2600.276855 -2700.886475    0.048340 -3200.886475        0.0  500.000000      400.000000     8.0     -3200.886475            -1.0            -1
1   -2700.886475   -3100.886475  2600.276855 -2700.886475    0.048584 -3100.886475        0.0  400.000000      300.000000     9.0     -3200.886475             0.0         False
2   -2700.886475   -2962.296387  2600.276855 -2700.886475    0.048584 -2962.296387        0.0  261.409912      200.000000     7.0     -3200.886475             1.0          True
3   -2700.886475   -2824.085693  2600.276855 -2700.886475  189.900391 -2824.085693        0.0  123.199219      100.000000     8.0     -3200.886475             0.0         False
4   -2634.185303   -2700.886475  2600.276855 -2634.185303  189.900391 -2700.886475        0.0   66.701172       66.701172     9.0     -3200.886475             0.0         False
5   -2634.185303   -2700.837891  2633.575684 -2634.185303    1.500000 -2700.837891        0.0   66.652588        0.000000     2.0     -2634.185303             1.0          True
6   -2568.608643   -2634.185303  2667.950684 -2568.608643  132.229248 -2634.185303        0.0   65.576660       -0.048340     3.0     -2634.185303             0.0         False
7   -2537.735107   -2568.560303  2702.325439 -2537.735107   96.450195 -2568.560303        0.0   30.825195      -34.800049     1.0     -2537.735107             0.0         False
8   -2500.897217   -2502.935059  2702.325439 -2500.897217   67.663086 -2502.935059        0.0    2.037842      -97.962158     1.0     -2500.897217             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:53]  --------------------------------------------------------------------------------
[08/23 16:28:53]  Iteration: 30 (0 solution, 29 counterexamples)
[08/23 16:28:54]  Generator returned sat in 0.383547 secs.
[08/23 16:28:54]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:28:55]  Improved gap from 65.125244140625 to 65.625
[08/23 16:28:56]  Improved number of small numbers from 47 to 110 out of a max of 110
[08/23 16:28:56]  Verifer returned sat in 1.294416 secs.
[08/23 16:28:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1791.781250   -2191.756592  2599.200439 -1791.781250    0.024170 -2191.756592        0.0  399.975342      399.975342     9.0     -2191.756592            -1.0            -1
1   -1791.781250   -2191.756592  2599.200439 -1791.781250    0.024170 -2191.756592        0.0  399.975342      299.975342     9.0     -2191.756592             1.0         False
2   -1791.781250   -2051.284424  2599.200439 -1791.781250    0.024170 -2051.284424        0.0  259.503174      199.975342     7.0     -2191.756592             1.0         False
3   -1791.781250   -1985.072998  2599.200439 -1791.781250    0.024414 -1985.072998        0.0  193.291748       99.975342     8.0     -2191.756592             0.0         False
4   -1791.781250   -1791.805420  2599.200439 -1791.781250  105.341797 -1791.805420        0.0    0.024170       -0.024658     9.0     -2191.756592             0.0         False
5   -1790.305420   -1791.756592  2633.575439 -1790.305420    1.500000 -1791.756592        0.0    1.451172      -64.173828     1.0     -1790.305420             1.0          True
6   -1659.992676   -1725.593506  2667.412354 -1659.992676  131.763916 -1725.593506        0.0   65.600830       -0.024170     1.0     -1790.305420             0.0         False
7   -1593.853760   -1659.968506  2701.273682 -1593.853760  131.739746 -1659.968506        0.0   66.114746       -0.023926     1.0     -1593.853760             0.0         False
8   -1592.050049   -1593.829590  2701.273682 -1592.050049   67.918457 -1593.829590        0.0    1.779541      -98.220215     1.0     -1592.050049             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:28:56]  --------------------------------------------------------------------------------
[08/23 16:28:56]  Iteration: 31 (0 solution, 30 counterexamples)
[08/23 16:28:58]  Generator returned sat in 0.574199 secs.
[08/23 16:28:58]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:28:59]  Improved gap from 0.0 to 0
[08/23 16:28:59]  Improved number of small numbers from 79 to 110 out of a max of 110
[08/23 16:28:59]  Verifer returned sat in 1.601504 secs.
[08/23 16:28:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0      67.757324    -432.267090   839.710938    67.757324  0.024170  -432.267090        0.0  500.024414      500.024414     9.0       -432.26709            -1.0            -1
1      67.757324    -432.267090   839.710938    67.757324  0.024170  -432.267090        0.0  500.024414      400.024414     9.0       -432.26709             1.0         False
2      67.757324    -232.267334   839.710938    67.757324  0.024414  -232.267334        0.0  300.024658      300.024414     8.0       -432.26709             1.0         False
3      67.757324    -132.267334   839.710938    67.757324  0.024414  -132.267334        0.0  200.024658      200.024414     9.0       -432.26709             0.0         False
4      67.757324     -32.267090   839.710938    67.757324  1.500000   -32.267090        0.0  100.024414      100.024414     9.0       -432.26709             1.0          True
5      67.757324      66.232666   839.710938    67.757324  1.500000    66.232666        0.0    1.524658        0.024414     9.0       -432.26709             1.0          True
6      67.757324      67.732910   939.686523    67.757324  1.500000    67.732910        0.0    0.024414        0.000000     9.0       -432.26709             1.0          True
7      69.232910      67.757324  1038.186768    69.232910  1.500000    67.757324        0.0    1.475586       -0.024170     9.0       -432.26709             1.0          True
8      69.257324      69.257324  1038.186768    69.257324  1.500000    69.257324        0.0    0.000000      -99.999756     1.0       -432.26709             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:29:00]  --------------------------------------------------------------------------------
[08/23 16:29:00]  Iteration: 32 (0 solution, 31 counterexamples)
[08/23 16:29:01]  Generator returned sat in 0.102917 secs.
[08/23 16:29:01]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:02]  Improved gap from 0.0244140625 to 1.5625
[08/23 16:29:03]  Improved number of small numbers from 71 to 110 out of a max of 110
[08/23 16:29:03]  Verifer returned sat in 1.905644 secs.
[08/23 16:29:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0      1269.6604     767.636230   938.356201    1269.6604  0.024170   767.636230        0.0  502.024170      502.024170     8.0        767.63623            -1.0            -1
1      1269.6604     767.636230   938.356201    1269.6604  0.024414   767.636230        0.0  502.024170      402.024170     8.0        767.63623             0.0         False
2      1269.6604     967.635986   938.356201    1269.6604  0.024414   967.635986        0.0  302.024414      302.024170     8.0        767.63623             0.0         False
3      1269.6604    1067.635986   938.356201    1269.6604  0.024414  1067.635986        0.0  202.024414      202.024170     9.0        767.63623             0.0         False
4      1269.6604    1167.635986   938.356201    1269.6604  2.000000  1167.635986        0.0  102.024414      102.024170     9.0        767.63623             1.0          True
5      1269.6604    1167.660400   938.356201    1269.6604  2.000000  1167.660400        0.0  102.000000        2.024170     9.0        767.63623             1.0          True
6      1269.6604    1267.636230  1036.332031    1269.6604  2.000000  1267.636230        0.0    2.024170        0.000000     9.0        767.63623             1.0          True
7      1269.6604    1269.660400  1134.332275    1269.6604  2.000000  1269.660400        0.0    0.000000       -1.999756     9.0        767.63623             1.0          True
8      1271.6604    1271.660400  1134.332275    1271.6604  2.000000  1271.660400        0.0    0.000000      -99.999756     1.0        767.63623             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:29:03]  --------------------------------------------------------------------------------
[08/23 16:29:03]  Iteration: 33 (0 solution, 32 counterexamples)
[08/23 16:29:04]  Generator returned sat in 0.186256 secs.
[08/23 16:29:04]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:07]  Improved gap from 1.0 to 0
[08/23 16:29:07]  Improved number of small numbers from 53 to 110 out of a max of 110
[08/23 16:29:07]  Verifer returned sat in 2.657903 secs.
[08/23 16:29:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0      719.69458     218.670654   938.355957    719.69458   0.02417   218.670654        0.0  501.023926      501.023926     7.0       218.670654            -1.0            -1
1      719.69458     218.670654   938.355957    719.69458   0.02417   218.670654        0.0  501.023926      401.023926     7.0       218.670654             0.0         False
2      719.69458     418.670410   938.355957    719.69458   0.02417   418.670410        0.0  301.024170      301.023926     8.0       218.670654             0.0         False
3      719.69458     518.670410   938.355957    719.69458   0.02417   518.670410        0.0  201.024170      201.023926     9.0       218.670654             0.0         False
4      719.69458     521.743164   938.355957    719.69458   1.00000   521.743164        0.0  197.951416      101.023926     9.0       218.670654             1.0          True
5      719.69458     618.670654   938.355957    719.69458   1.00000   618.670654        0.0  101.023926        1.023926     9.0       218.670654             1.0          True
6      719.69458     718.670654  1037.332031    719.69458   1.00000   718.670654        0.0    1.023926        0.000000     9.0       218.670654             1.0          True
7      719.69458     719.694580  1137.331787    719.69458   1.00000   719.694580        0.0    0.000000       -0.000244     9.0       218.670654             1.0          True
8      720.69458     719.718994  1137.332031    720.69458   1.00000   719.718994        0.0    0.975586      -99.000000     1.0       218.670654             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:29:07]  --------------------------------------------------------------------------------
[08/23 16:29:07]  Iteration: 34 (0 solution, 33 counterexamples)
[08/23 16:29:08]  Generator returned sat in 0.215455 secs.
[08/23 16:29:08]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:09]  Improved gap from 0.0025 to 0
[08/23 16:29:09]  Improved number of small numbers from 77 to 108 out of a max of 110
[08/23 16:29:09]  Verifer returned sat in 0.763983 secs.
[08/23 16:29:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0      719.69458     219.683350   937.343262    719.69458  0.001221   219.683350        0.0  500.011230      500.011230     7.0        219.68335            -1.0            -1
1      719.69458     319.683105   937.343262    719.69458  0.001465   319.683105        0.0  400.011475      400.011230     7.0        219.68335             0.0         False
2      719.69458     419.683105   937.343262    719.69458  0.001465   419.683105        0.0  300.011475      300.011230     8.0        219.68335             0.0         False
3      719.69458     519.683105   937.343262    719.69458  0.001465   519.683105        0.0  200.011475      200.011230     9.0        219.68335             0.0         False
4      719.69458     619.683105   937.343262    719.69458  0.010000   619.683105        0.0  100.011475      100.011230     9.0        219.68335             1.0          True
5      719.69458     619.684570   937.343262    719.69458  0.010000   619.684570        0.0  100.010010        0.011230     9.0        219.68335             1.0          True
6      719.69458     719.683350  1037.332031    719.69458  0.010000   719.683350        0.0    0.011230        0.000000     9.0        219.68335             1.0          True
7      719.69458     719.694580  1137.331787    719.69458  0.010000   719.694580        0.0    0.000000       -0.000244     9.0        219.68335             1.0          True
8      719.70458     719.695801  1137.332031    719.70458  0.010000   719.695801        0.0    0.008779      -99.990000     1.0        219.68335             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:29:10]  --------------------------------------------------------------------------------
[08/23 16:29:10]  Iteration: 35 (0 solution, 34 counterexamples)
[08/23 16:29:12]  Generator returned sat in 1.090117 secs.
[08/23 16:29:12]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:13]  Improved number of small numbers from 61 to 107 out of a max of 109
[08/23 16:29:13]  Verifer returned sat in 0.866271 secs.
[08/23 16:29:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     819.684814     119.732910  937.343262   819.684814    0.023926   119.732910        0.0  699.951904      699.951904     3.0        119.73291            -1.0            -1
1     819.684814     219.708740  937.343262   819.684814    0.023926   219.708740        0.0  599.976074      599.951904     3.0        119.73291             0.0         False
2     819.684814     219.732910  937.343262   819.684814    0.023926   219.732910        0.0  599.951904      499.951904     3.0        119.73291             0.0         False
3     819.684814     319.732910  937.343262   819.684814    0.023926   319.732910        0.0  499.951904      399.951904     4.0        119.73291             0.0         False
4     819.684814     419.732910  937.343262   819.684814  300.000000   419.732910        0.0  399.951904      299.951904     5.0        119.73291             1.0          True
5     819.684814     619.732910  937.343262   819.684814  300.036255   619.732910        0.0  199.951904      199.951904     6.0        119.73291             1.0          True
6    1219.732910     679.723145  937.343262  1219.732910  600.000000   679.723145        0.0  540.009766      500.000000     7.0        119.73291             1.0          True
7    1219.732910     819.708750  937.343262  1219.732910  539.985352   819.708750        0.0  400.024160      400.000000     2.0       1219.73291             1.0          True
8    1219.732910     819.732910  937.343262  1219.732910  269.992676   819.732910        0.0  400.000000      300.000000     3.0       1219.73291             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:13]  --------------------------------------------------------------------------------
[08/23 16:29:13]  Iteration: 36 (0 solution, 35 counterexamples)
[08/23 16:29:15]  Generator returned sat in 1.202451 secs.
[08/23 16:29:15]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:17]  Improved gap from 0.0016666666666666668 to 20.3125
[08/23 16:29:17]  Improved number of small numbers from 51 to 108 out of a max of 110
[08/23 16:29:17]  Verifer returned sat in 2.221114 secs.
[08/23 16:29:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     421.742920      21.742920   937.343018   421.742920    0.048096    21.742920        0.0  400.000000      300.000000     7.0        21.742920            -1.0            -1
1     421.742920     121.742920   937.343018   421.742920    0.048340   121.742920        0.0  300.000000      200.000000     7.0        21.742920             1.0         False
2     421.742920     221.742920   937.343018   421.742920    0.048340   221.742920        0.0  200.000000      100.000000     8.0        21.742920             1.0          True
3     421.742920     347.514404   937.343018   421.742920  199.951904   347.514404        0.0   74.228516        0.000000     5.0        21.742920             1.0          True
4     673.285889     521.742920   937.343018   673.285889  325.771484   521.742920        0.0  151.542969      151.542969     1.0        21.742920             1.0          True
5     684.628662     603.137695   937.343018   684.628662  162.885742   603.137695        0.0   81.490967       62.885742     2.0       684.628662             0.0         False
6     684.628662     678.973145   959.800293   684.628662   81.442871   678.973145        0.0    5.655518      -14.656982     2.0       684.628662             0.0         False
7     719.694580     699.285889  1039.391357   719.694580   40.721436   699.285889        0.0   20.408691        0.000000     1.0       719.694580             0.0         False
8     719.694580     719.694580  1039.391602   719.694580   20.360718   719.694580        0.0    0.000000      -99.999756     2.0       719.694580             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:18]  --------------------------------------------------------------------------------
[08/23 16:29:18]  Iteration: 37 (0 solution, 36 counterexamples)
[08/23 16:29:20]  Generator returned sat in 1.317131 secs.
[08/23 16:29:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:22]  Improved gap from 0.006666666666666667 to 43.75
[08/23 16:29:23]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:29:23]  Verifer returned sat in 2.489024 secs.
[08/23 16:29:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     284.432861       7.373047  1050.883057   284.432861  107.269775     7.373047        0.0  277.059814      276.229736     8.0         7.373047            -1.0            -1
1     284.432861      64.452881  1050.883057   284.432861  107.269775    64.452881        0.0  219.979980      176.229736     8.0         7.373047             1.0         False
2     284.432861     108.203125  1050.883057   284.432861  107.270000   108.203125        0.0  176.229736       76.229736     9.0         7.373047             1.0          True
3     284.432861     220.913086  1074.653320   284.432861  107.270020   220.913086        0.0   63.519775        0.000000     4.0         7.373047             1.0          True
4     328.183105     284.432861  1130.903076   328.183105  107.270020   284.432861        0.0   43.750244        0.000000     5.0         7.373047             1.0          True
5     394.922852     328.183105  1164.163330   394.922852  110.489990   328.183105        0.0   66.739746        0.000000     2.0         7.373047             1.0          True
6     438.673096     394.922852  1220.413086   438.673096  110.489990   394.922852        0.0   43.750244        0.000000     2.0         7.373047             1.0          True
7     482.427734     438.677734  1276.658447   482.427734   87.504883   438.677734        0.0   43.750000        0.000000     1.0       482.427734             1.0          True
8     482.427734     482.427734  1276.658447   482.427734    0.010000   482.427734        0.0    0.000000     -100.000000     2.0       482.427734             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:23]  --------------------------------------------------------------------------------
[08/23 16:29:23]  Iteration: 38 (0 solution, 37 counterexamples)
[08/23 16:29:24]  Generator returned sat in 0.234419 secs.
[08/23 16:29:24]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:27]  Improved gap from 42.412037760416666 to 43.75
[08/23 16:29:28]  Improved number of small numbers from 55 to 57 out of a max of 110
[08/23 16:29:28]  Verifer returned sat in 3.570236 secs.
[08/23 16:29:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     -92.653932    -366.893932  1797.815114   -92.653932    0.002441  -366.893932        0.0  274.240000      274.240000     7.0      -366.893932            -1.0            -1
1     -92.653932    -309.486155  1797.815114   -92.653932    0.002686  -309.486155        0.0  216.832222      174.240000     7.0      -366.893932             1.0         False
2     -92.653932    -266.893932  1797.815114   -92.653932    0.002686  -266.893932        0.0  174.240000       74.240000     7.0      -366.893932             1.0          True
3     -92.653932    -155.900599  1823.575114   -92.653932    0.002686  -155.900599        0.0   63.246667        0.000000     4.0      -366.893932             1.0          True
4     -48.903932     -92.653932  1879.825114   -48.903932  106.996667   -92.653932        0.0   43.750000        0.000000     5.0      -366.893932             1.0          True
5      17.262179     -48.903932  1913.659003    17.262179  109.916111   -48.903932        0.0   66.166111        0.000000     2.0      -366.893932             1.0          True
6      61.591068      17.262179  1969.327637    61.591068  110.495000    17.262179        0.0   44.328889       -0.002477     2.0      -366.893932             1.0          True
7     105.343568      61.593568  2025.577614   105.343568   88.081389    61.593568        0.0   43.750000        0.000000     1.0       105.343568             1.0          True
8     105.343568     105.343568  2025.577637   105.343568    0.010000   105.343568        0.0    0.000000      -99.999977     2.0       105.343568             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:28]  --------------------------------------------------------------------------------
[08/23 16:29:28]  Iteration: 39 (0 solution, 38 counterexamples)
[08/23 16:29:32]  Generator returned sat in 2.322187 secs.
[08/23 16:29:32]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:29:33]  Improved gap from 0.048095703125 to 0
[08/23 16:29:33]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:29:33]  Verifer returned sat in 0.862749 secs.
[08/23 16:29:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     -92.608398    -389.964111  1864.135254   -92.608398    0.048096  -389.964111        0.0  297.355713      297.355713     6.0      -389.964111            -1.0            -1
1     -92.608398    -289.964111  1864.135254   -92.608398    0.048096  -289.964111        0.0  197.355713      197.355713     6.0      -389.964111             1.0         False
2     -92.608398    -289.916016  1864.135254   -92.608398    0.048096  -289.916016        0.0  197.307617       97.355713     7.0      -389.964111             1.0          True
3     -92.608398    -189.964111  1866.779541   -92.608398  197.259521  -189.964111        0.0   97.355713        0.000000     5.0      -389.964111             1.0          True
4      10.035889     -92.608398  1866.779541    10.035889  200.000000   -92.608398        0.0  102.644287        2.644287     6.0      -389.964111             1.0          True
5     104.747314     104.343506  1869.423828   104.747314  197.355713   104.343506        0.0    0.403809        0.000000     1.0       104.747314             1.0          True
6     104.843506     104.795410  1969.327637   104.843506    0.500000   104.795410        0.0    0.048096        0.000000     1.0       104.843506             0.0         False
7     105.295410     104.891602  2068.875732   105.295410    0.500000   104.891602        0.0    0.403809        0.000000     1.0       104.843506             0.0         False
8     105.391602     105.343506  2068.875732   105.391602    0.500000   105.343506        0.0    0.048096      -99.903809     1.0       104.843506             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:33]  --------------------------------------------------------------------------------
[08/23 16:29:33]  Iteration: 40 (0 solution, 39 counterexamples)
[08/23 16:29:34]  Generator returned sat in 0.242548 secs.
[08/23 16:29:34]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:29:36]  Improved gap from 0.011962890625 to 0
[08/23 16:29:36]  Improved number of small numbers from 71 to 110 out of a max of 110
[08/23 16:29:36]  Verifer returned sat in 1.559924 secs.
[08/23 16:29:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     471.535889     267.439697  1206.731201   471.535889    0.023926   267.439697        0.0  204.096191      204.096191     6.0       267.439697            -1.0            -1
1     471.535889     274.583984  1206.731201   471.535889    0.024170   274.583984        0.0  196.951904      104.096191     6.0       267.439697             1.0         False
2     471.535889     467.415771  1206.731201   471.535889    0.024170   467.415771        0.0    4.120117        4.096191     6.0       267.439697             1.0          True
3     471.535889     467.439697  1302.635010   471.535889    0.024170   467.439697        0.0    4.096191        0.000000     5.0       267.439697             1.0          True
4     667.439697     471.535889  1302.635010   667.439697  200.000000   471.535889        0.0  195.903809       95.903809     6.0       267.439697             1.0          True
5     668.487793     667.463867  1305.683105   668.487793  196.951904   667.463867        0.0    1.023926        0.000000     1.0       668.487793             1.0          True
6     668.487793     668.487793  1405.659180   668.487793    1.000000   668.487793        0.0    0.000000       -0.023926     2.0       668.487793             0.0         False
7     669.487793     668.511963  1504.683105   669.487793    1.000000   668.511963        0.0    0.975830        0.000000     1.0       668.487793             0.0         False
8     669.511963     669.511963  1504.683350   669.511963    1.000000   669.511963        0.0    0.000000      -99.975586     1.0       668.487793             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:37]  --------------------------------------------------------------------------------
[08/23 16:29:37]  Iteration: 41 (0 solution, 40 counterexamples)
[08/23 16:29:38]  Generator returned sat in 0.415663 secs.
[08/23 16:29:38]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:29:39]  Improved gap from 0.02392578125 to 1.5625
[08/23 16:29:40]  Improved number of small numbers from 47 to 110 out of a max of 110
[08/23 16:29:40]  Verifer returned sat in 1.482391 secs.
[08/23 16:29:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     129.031738     -74.531006  1930.741211   129.031738    0.047852   -74.531006        0.0  203.562744      200.000244     4.0       -74.531006            -1.0            -1
1     129.031738      29.031494  1930.741211   129.031738    0.048096    29.031494        0.0  100.000244      100.000244     4.0       -74.531006             0.0         False
2     129.031738      29.031738  1930.741211   129.031738   99.952148    29.031738        0.0  100.000000        0.000244     4.0       -74.531006             0.0         False
3     129.031738     129.031494  2029.178467   129.031738   99.952148   129.031494        0.0    0.000244       -1.562500     5.0       -74.531006             0.0         False
4     332.593994     136.204590  2029.178467   332.593994  203.562500   136.204590        0.0  196.389404      101.999756     1.0       -74.531006             1.0          True
5     332.593994     330.546143  2029.178467   332.593994    2.000000   330.546143        0.0    2.047852        1.999756     2.0       332.593994             0.0         False
6     332.593994     330.594238  2127.178467   332.593994    2.000000   330.594238        0.0    1.999756       -0.000244     3.0       332.593994             0.0         False
7     332.594238     332.594238  2225.615967   332.594238    2.000000   332.594238        0.0    0.000000       -1.562500     1.0       332.593994             0.0         False
8     334.594238     334.156738  2225.616211   334.594238    2.000000   334.156738        0.0    0.437500      -99.562256     1.0       332.593994             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:40]  --------------------------------------------------------------------------------
[08/23 16:29:40]  Iteration: 42 (0 solution, 41 counterexamples)
[08/23 16:29:42]  Generator returned sat in 1.343529 secs.
[08/23 16:29:42]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:29:44]  Improved gap from 0.0 to 43.75
[08/23 16:29:45]  Improved number of small numbers from 20 to 29 out of a max of 110
[08/23 16:29:45]  Verifer returned sat in 2.580272 secs.
[08/23 16:29:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -835.173394   -1116.173883  2006.428223  -835.173394  108.250000 -1116.173883   0.000122  281.000366      277.249756     9.0     -1116.173883            -1.0            -1
1    -835.173394   -1056.173272  2006.428223  -835.173394  108.250000 -1056.173272   0.000122  220.999756      177.249756     9.0     -1116.173883             1.0         False
2    -835.173394   -1012.423272  2006.428223  -835.173394  108.250000 -1012.423272   0.000122  177.249756       77.249756     5.0     -1116.173883             1.0          True
3    -835.173394    -899.673639  2029.178467  -835.173394  108.250000  -899.673639   0.000122   64.500122        0.000000     4.0     -1116.173883             1.0          True
4    -791.423394    -835.173516  2085.428467  -791.423394  108.250122  -835.173516   0.000122   43.750000        0.000000     5.0     -1116.173883             1.0          True
5    -724.673516    -791.423516  2118.678589  -724.673516  110.499878  -791.423516   0.000122   66.749878        0.000000     2.0     -1116.173883             1.0          True
6    -680.923516    -724.673639  2174.928589  -680.923516  110.499878  -724.673639   0.000122   43.750000        0.000000     2.0     -1116.173883             1.0          True
7    -637.173516    -680.923639  2231.178589  -637.173516   87.500000  -680.923639   0.000122   43.750000        0.000000     2.0      -637.173639             1.0          True
8    -637.173516    -637.173639  2287.428467  -637.173516    0.010000  -637.173639   0.000122    0.000000      -43.750122     2.0      -637.173639             1.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:46]  --------------------------------------------------------------------------------
[08/23 16:29:46]  Iteration: 43 (0 solution, 42 counterexamples)
[08/23 16:29:48]  Generator returned sat in 1.150252 secs.
[08/23 16:29:48]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:29:49]  Improved gap from 0.02392578125 to 1.5625
[08/23 16:29:49]  Improved number of small numbers from 29 to 110 out of a max of 110
[08/23 16:29:49]  Verifer returned sat in 1.012917 secs.
[08/23 16:29:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -703.586914   -1006.155273  1935.865967  -703.586914    0.023926 -1006.155273   0.000244  302.568115        301.5625     2.0     -1006.155273            -1.0            -1
1    -703.586914    -906.274658  1935.865967  -703.586914  101.514404  -906.274658   0.000244  202.687500        201.5625     2.0     -1006.155273             0.0         False
2    -703.586914    -805.149658  1935.865967  -703.586914  101.514404  -805.149658   0.000244  101.562500        101.5625     3.0     -1006.155273             0.0         False
3    -703.586914    -805.125977  1935.865967  -703.586914  101.514648  -805.125977   0.000244  101.538818          1.5625     4.0     -1006.155273             0.0         False
4    -703.586914    -705.149658  2034.303467  -703.586914  101.514648  -705.149658   0.000244    1.562500          0.0000     5.0     -1006.155273             1.0          True
5    -603.586914    -703.587158  2034.303467  -603.586914  101.562500  -703.587158   0.000244  100.000000          0.0000     6.0     -1006.155273             1.0          True
6    -603.586914    -603.587158  2132.740967  -603.586914   51.781250  -603.587158   0.000244    0.000000         -1.5625     2.0      -603.587158             1.0          True
7    -601.586914    -602.024658  2231.178467  -601.586914    2.000000  -602.024658   0.000244    0.437500         -1.1250     1.0      -601.587158             0.0         False
8    -600.024414    -600.462158  2329.615967  -600.024414    2.000000  -600.462158   0.000244    0.437500         -1.1250     1.0      -601.587158             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:49]  --------------------------------------------------------------------------------
[08/23 16:29:49]  Iteration: 44 (0 solution, 43 counterexamples)
[08/23 16:29:51]  Generator returned sat in 0.302850 secs.
[08/23 16:29:51]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:29:53]  Improved gap from 1.2291666666666667 to 1.5625
[08/23 16:29:53]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:29:53]  Verifer returned sat in 2.640447 secs.
[08/23 16:29:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -429.274658    -732.811768  2151.207764  -429.274658    0.047852  -732.811768        0.0  303.537109      301.268555     6.0      -732.811768            -1.0            -1
1    -429.274658    -631.495361  2151.207764  -429.274658    0.047852  -631.495361        0.0  202.220703      201.268555     3.0      -732.811768             1.0         False
2    -429.274658    -530.543213  2151.207764  -429.274658  101.658203  -530.543213        0.0  101.268555      101.268555     3.0      -732.811768             0.0         False
3    -428.885010    -530.495361  2151.207764  -428.885010  101.658203  -530.495361        0.0  101.610352        1.658203     4.0      -732.811768             0.0         False
4    -428.837158    -429.274658  2248.376709  -428.837158  101.658203  -429.274658        0.0    0.437500       -1.125000     5.0      -732.811768             1.0          True
5    -327.664307    -427.712158  2248.376709  -327.664307  101.610352  -427.712158        0.0  100.047852        0.047852     1.0      -327.664307             1.0          True
6    -327.664307    -327.712158  2346.814209  -327.664307    2.000000  -327.712158        0.0    0.047852       -1.514648     2.0      -327.664307             0.0         False
7    -325.712158    -325.760010  2444.862061  -325.712158    2.000000  -325.760010        0.0    0.047852       -1.514648     1.0      -327.664307             0.0         False
8    -323.760010    -324.197510  2543.299561  -323.760010    2.000000  -324.197510        0.0    0.437500       -1.125000     1.0      -327.664307             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:29:54]  --------------------------------------------------------------------------------
[08/23 16:29:54]  Iteration: 45 (0 solution, 44 counterexamples)
[08/23 16:29:56]  Generator returned sat in 0.671747 secs.
[08/23 16:29:56]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:29:59]  Improved gap from 1.12548828125 to 43.75
[08/23 16:29:59]  Improved number of small numbers from 61 to 65 out of a max of 110
[08/23 16:29:59]  Verifer returned sat in 3.437413 secs.
[08/23 16:29:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -729.676444   -1001.103899  2421.768450  -729.676444  106.552246 -1001.103899        0.0  271.427455      271.427455     9.0     -1001.103899            -1.0            -1
1    -729.676444    -945.333810  2421.768450  -729.676444  106.552246  -945.333810        0.0  215.657366      171.427455     3.0     -1001.103899             1.0         False
2    -729.676444    -901.103899  2421.768450  -729.676444  106.552246  -901.103899        0.0  171.427455       71.427455     3.0     -1001.103899             1.0          True
3    -729.676444    -791.998989  2450.340995  -729.676444  106.552246  -791.998989        0.0   62.322545        0.000000     4.0     -1001.103899             1.0          True
4    -685.446533    -729.676444  2506.111084  -685.446533  106.552455  -729.676444        0.0   44.229911        0.000000     5.0     -1001.103899             1.0          True
5    -619.847761    -685.446533  2540.512312  -619.847761  109.828683  -685.446533        0.0   65.598772        0.000000     2.0     -1001.103899             1.0          True
6    -575.617850    -619.847761  2596.186768  -575.617850  109.828683  -619.847761        0.0   44.229911       -0.095633     2.0     -1001.103899             1.0          True
7    -531.772147    -575.522217  2652.436698  -531.772147   88.075614  -575.522217        0.0   43.750070        0.000000     1.0      -531.772147             1.0          True
8    -531.772147    -531.772147  2652.436768  -531.772147    2.000000  -531.772147        0.0    0.000000      -99.999930     2.0      -531.772147             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:30:00]  --------------------------------------------------------------------------------
[08/23 16:30:00]  Iteration: 46 (0 solution, 45 counterexamples)
[08/23 16:30:02]  Generator returned sat in 1.109477 secs.
[08/23 16:30:02]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:30:02]  Improved gap from 0.0 to 48.4375
[08/23 16:30:03]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:30:03]  Verifer returned sat in 0.599655 secs.
[08/23 16:30:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -279.334473    -727.771973  2148.436279  -279.334473    2.000000  -727.771973        0.0  448.437500      448.437500     9.0      -727.771973            -1.0            -1
1    -279.334473    -727.771729  2148.436279  -279.334473    2.000000  -727.771729        0.0  448.437256      348.437500     9.0      -727.771973             1.0         False
2    -279.334473    -527.771973  2148.436279  -279.334473    2.000000  -527.771973        0.0  248.437500      248.437500     9.0      -727.771973             1.0          True
3    -279.334473    -428.706055  2148.436279  -279.334473    2.000000  -428.706055        0.0  149.371582      148.437500     5.0      -727.771973             1.0          True
4    -279.334473    -327.867432  2148.436279  -279.334473    2.000000  -327.867432        0.0   48.532959       48.437500     6.0      -727.771973             0.0         False
5    -279.334473    -327.771973  2199.998779  -279.334473    2.000000  -327.771973        0.0   48.437500        0.000000     7.0      -727.771973             0.0         False
6    -279.334473    -279.334473  2199.999023  -279.334473    2.000000  -279.334473        0.0    0.000000      -99.999756     8.0      -727.771973             0.0         False
7    -129.962891    -179.334229  2250.627197  -129.962891  149.371582  -179.334229        0.0   49.371338        0.000000     1.0      -727.771973             1.0          True
8    -129.962891    -129.962891  2250.627441  -129.962891    2.000000  -129.962891        0.0    0.000000      -99.999756     2.0      -129.962891             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:30:03]  --------------------------------------------------------------------------------
[08/23 16:30:03]  Iteration: 47 (0 solution, 46 counterexamples)
[08/23 16:30:05]  Generator returned sat in 0.314779 secs.
[08/23 16:30:05]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:30:05]  Improved gap from 48.4375 to 100
[08/23 16:30:05]  Improved number of small numbers from 48 to 110 out of a max of 110
[08/23 16:30:05]  Verifer returned sat in 0.379426 secs.
[08/23 16:30:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -427.152588    -827.152832  2247.816895  -427.152588    0.023926  -827.152832        0.0  400.000244      400.000244     9.0      -827.152832            -1.0            -1
1    -427.152588    -826.724365  2247.816895  -427.152588    0.023926  -826.724365        0.0  399.571777      300.000244     7.0      -827.152832             1.0         False
2    -427.152588    -627.152832  2247.816895  -427.152588    0.023926  -627.152832        0.0  200.000244      200.000244     7.0      -827.152832             0.0         False
3    -427.152588    -627.128662  2247.816895  -427.152588    0.023926  -627.128662        0.0  199.976074      100.000244     7.0      -827.152832             0.0         False
4    -427.152588    -427.176514  2247.816895  -427.152588    2.000000  -427.176514        0.0    0.023926        0.000244     8.0      -827.152832             0.0         False
5     -27.128662    -427.152832  2247.816895   -27.128662  400.047852  -427.152832        0.0  400.024170      300.024170     9.0      -827.152832             1.0          True
6     -27.128662    -227.152832  2247.816895   -27.128662  200.500000  -227.152832        0.0  200.024170      200.024170     2.0       -27.128662             1.0          True
7     -27.128662    -127.152832  2247.816895   -27.128662    2.000000  -127.152832        0.0  100.024170      100.024170     3.0       -27.128662             0.0         False
8     -27.128662     -27.152832  2247.816895   -27.128662    2.000000   -27.152832        0.0    0.024170        0.024170     4.0       -27.128662             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:30:06]  --------------------------------------------------------------------------------
[08/23 16:30:06]  Iteration: 48 (0 solution, 47 counterexamples)
[08/23 16:30:08]  Generator returned sat in 1.338051 secs.
[08/23 16:30:08]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:30:08]  Improved number of small numbers from 105 to 109 out of a max of 109
[08/23 16:30:08]  Verifer returned sat in 0.145561 secs.
[08/23 16:30:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -427.152832    -927.153076  2247.816895  -427.152832    0.023682  -927.153076        0.0  500.000244      400.000244     9.0      -927.153076            -1.0            -1
1    -427.152832    -827.152832  2247.816895  -427.152832    0.023682  -827.152832        0.0  400.000000      300.000244     8.0      -927.153076             1.0         False
2    -427.152832    -627.153076  2247.816895  -427.152832    0.023682  -627.153076        0.0  200.000244      200.000244     6.0      -927.153076             1.0          True
3    -427.152832    -627.153076  2247.816895  -427.152832    0.023926  -627.153076        0.0  200.000244      100.000244     6.0      -927.153076             1.0          True
4    -427.152832    -427.890869  2247.816895  -427.152832    2.000000  -427.890869        0.0    0.738037        0.000244     7.0      -927.153076             1.0         False
5     -27.128906    -427.153076  2247.816895   -27.128906  400.761963  -427.153076        0.0  400.024170      300.024170     8.0      -927.153076             1.0          True
6     -27.128906    -327.152832  2247.816895   -27.128906  201.500000  -327.152832        0.0  300.023926      200.024170     2.0       -27.128906             1.0          True
7     -27.128906    -127.153076  2247.816895   -27.128906    2.000000  -127.153076        0.0  100.024170      100.024170     3.0       -27.128906             0.0         False
8     -27.128906     -27.153076  2247.816895   -27.128906    2.000000   -27.153076        0.0    0.024170        0.024170     4.0       -27.128906             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:30:09]  --------------------------------------------------------------------------------
[08/23 16:30:09]  Iteration: 49 (0 solution, 48 counterexamples)
[08/23 16:30:10]  Generator returned sat in 0.366235 secs.
[08/23 16:30:10]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:30:11]  Improved number of small numbers from 72 to 109 out of a max of 109
[08/23 16:30:11]  Verifer returned sat in 0.231200 secs.
[08/23 16:30:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     -427.13501    -927.140625  2247.816895   -427.13501    0.023438  -927.140625        0.0  500.005615      400.005859     9.0      -927.140625            -1.0            -1
1     -427.13501    -826.652588  2247.816895   -427.13501    0.023682  -826.652588        0.0  399.517578      300.005859     8.0      -927.140625             1.0         False
2     -427.13501    -627.140869  2247.816895   -427.13501    0.023682  -627.140869        0.0  200.005859      200.005859     4.0      -927.140625             1.0          True
3     -427.13501    -627.140869  2247.816895   -427.13501    0.023926  -627.140869        0.0  200.005859      100.005859     4.0      -927.140625             1.0          True
4     -427.13501    -427.140869  2247.816895   -427.13501    2.000000  -427.140869        0.0    0.005859        0.005859     5.0      -927.140625             1.0         False
5      -27.12915    -427.135010  2247.816895    -27.12915  400.011719  -427.135010        0.0  400.005859      300.011719     6.0      -927.140625             1.0          True
6      -27.12915    -327.140625  2247.816895    -27.12915  200.505859  -327.140625        0.0  300.011475      200.011719     2.0       -27.129150             1.0          True
7      -27.12915    -127.140869  2247.816895    -27.12915    2.000000  -127.140869        0.0  100.011719      100.011719     3.0       -27.129150             0.0         False
8      -27.12915     -27.140869  2247.816895    -27.12915    2.000000   -27.140869        0.0    0.011719        0.011719     4.0       -27.129150             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:30:11]  --------------------------------------------------------------------------------
[08/23 16:30:11]  Iteration: 50 (0 solution, 49 counterexamples)
[08/23 16:30:13]  Generator returned sat in 0.694672 secs.
[08/23 16:30:13]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:30:14]  Improved gap from 0.0 to 53.125
[08/23 16:30:15]  Improved number of small numbers from 57 to 110 out of a max of 110
[08/23 16:30:15]  Verifer returned sat in 1.531508 secs.
[08/23 16:30:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -865.404541   -1065.883057  2247.816650  -865.404541    0.047363 -1065.883057        0.0  200.478516      153.219727     3.0     -1065.883057            -1.0            -1
1    -865.404541    -918.624268  2247.816650  -865.404541    0.047607  -918.624268        0.0   53.219727       53.219727     3.0     -1065.883057             0.0         False
2    -865.404541    -918.624268  2294.596924  -865.404541    0.047607  -918.624268        0.0   53.219727        0.000000     3.0     -1065.883057             0.0         False
3    -865.404541    -865.404541  2341.471924  -865.404541   53.172607  -865.404541        0.0    0.000000      -53.125000     4.0     -1065.883057             0.0         False
4    -664.926025    -750.857178  2341.471924  -664.926025  200.478516  -750.857178        0.0   85.931152       47.353516     1.0     -1065.883057             1.0          True
5    -664.926025    -712.279541  2388.346924  -664.926025   85.883545  -712.279541        0.0   47.353516       -5.771484     2.0      -664.926025             0.0         False
6    -607.107178    -659.154541  2435.221924  -607.107178  105.172363  -659.154541        0.0   52.047363       -1.077637     1.0      -664.926025             0.0         False
7    -554.029541    -606.029541  2482.096924  -554.029541  105.125000  -606.029541        0.0   52.000000       -1.125000     1.0      -554.029541             0.0         False
8    -531.615723    -552.904541  2482.096924  -531.615723   74.413818  -552.904541        0.0   21.288818      -78.711182     1.0      -531.615723             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:30:15]  --------------------------------------------------------------------------------
[08/23 16:30:15]  Iteration: 51 (0 solution, 50 counterexamples)
[08/23 16:30:21]  Generator returned sat in 4.127946 secs.
[08/23 16:30:21]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:23]  Improved gap from 0.0033333333333333335 to 0
[08/23 16:30:23]  Improved number of small numbers from 56 to 102 out of a max of 110
[08/23 16:30:23]  Verifer returned sat in 2.529234 secs.
[08/23 16:30:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1115.049561   -1715.052002  2844.244385 -1115.049561    0.002686 -1715.052002        0.0  600.002441      500.002441     3.0     -1715.052002            -1.0            -1
1   -1115.049561   -1515.052002  2844.244385 -1115.049561    0.002686 -1515.052002        0.0  400.002441      400.002441     4.0     -1715.052002             0.0         False
2   -1115.049561   -1415.052246  2844.244385 -1115.049561  200.000000 -1415.052246        0.0  300.002686      300.002441     5.0     -1715.052002             1.0          True
3   -1115.049561   -1315.052002  2844.244385 -1115.049561  200.000000 -1315.052002        0.0  200.002441      200.002441     5.0     -1715.052002             1.0          True
4   -1115.049561   -1215.052002  2844.244385 -1115.049561  200.000000 -1215.052002        0.0  100.002441      100.002441     6.0     -1715.052002             1.0          True
5   -1065.052002   -1215.052002  2844.244385 -1065.052002  150.000000 -1215.052002        0.0  150.000000       50.000000     6.0     -1065.052002             1.0          True
6   -1065.052002   -1065.052041  2894.244385 -1065.052002    0.010000 -1065.052041        0.0    0.000039        0.000000     2.0     -1065.052002             1.0         False
7   -1065.042041   -1065.044541  2994.227051 -1065.042041    0.010000 -1065.044541        0.0    0.002500       -0.007373     1.0     -1065.052002             0.0         False
8   -1065.034541   -1065.034668  2994.227051 -1065.034541    0.010000 -1065.034668        0.0    0.000127      -99.999873     1.0     -1065.052002             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:30:24]  --------------------------------------------------------------------------------
[08/23 16:30:24]  Iteration: 52 (0 solution, 51 counterexamples)
[08/23 16:30:26]  Generator returned sat in 0.714050 secs.
[08/23 16:30:26]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:29]  Improved gap from 3.90625e-05 to 43.75
[08/23 16:30:29]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:30:29]  Verifer returned sat in 3.083335 secs.
[08/23 16:30:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1648.438965   -1930.994141  3152.861572 -1648.438965    0.004883 -1930.994141        0.0  282.555176      275.230225     9.0     -1930.994141            -1.0            -1
1   -1648.438965   -1865.309082  3152.861572 -1648.438965  109.435000 -1865.309082        0.0  216.870117      175.230225     9.0     -1930.994141             1.0         False
2   -1648.438965   -1823.668945  3152.861572 -1648.438965  109.435000 -1823.668945        0.0  175.229980       75.230225     4.0     -1930.994141             1.0          True
3   -1648.438965   -1714.124023  3177.631348 -1648.438965  109.435000 -1714.124023        0.0   65.685059        0.000000     4.0     -1930.994141             1.0          True
4   -1604.688965   -1648.438965  3233.881348 -1604.688965  109.435059 -1648.438965        0.0   43.750000        0.000000     5.0     -1930.994141             1.0          True
5   -1539.003906   -1604.688965  3268.196289 -1539.003906  109.435059 -1604.688965        0.0   65.685059        0.000000     2.0     -1930.994141             1.0          True
6   -1494.198975   -1539.003906  3323.391357 -1494.198975  110.489990 -1539.003906        0.0   44.804932        0.000000     2.0     -1930.994141             1.0          True
7   -1450.443848   -1494.194092  3379.636230 -1450.443848   88.560059 -1494.194092        0.0   43.750244        0.000000     1.0     -1450.443848             1.0          True
8   -1450.443848   -1450.443848  3379.636475 -1450.443848    0.010000 -1450.443848        0.0    0.000000      -99.999756     2.0     -1450.443848             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:30:29]  --------------------------------------------------------------------------------
[08/23 16:30:29]  Iteration: 53 (0 solution, 52 counterexamples)
[08/23 16:30:33]  Generator returned sat in 2.054349 secs.
[08/23 16:30:33]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:35]  Improved gap from 3.0517578125e-05 to 0
[08/23 16:30:36]  Improved number of small numbers from 57 to 81 out of a max of 110
[08/23 16:30:36]  Verifer returned sat in 2.948865 secs.
[08/23 16:30:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2109.169434   -2109.171875  3079.660225 -2109.169434    0.001221 -2109.171875        0.0    0.002441        0.002383     9.0     -2109.171875            -1.0            -1
1   -2109.169434   -2109.171816  3179.657715 -2109.169434    0.001221 -2109.171816        0.0    0.002383       -0.000127     9.0     -2109.171875             1.0         False
2   -1709.158066   -2009.169434  3179.657715 -1709.158066  400.013750 -2009.169434        0.0  300.011367      300.011240     1.0     -2109.171875             1.0          True
3   -1709.158066   -1909.169434  3179.657715 -1709.158066    0.011250 -1909.169434        0.0  200.011367      200.011240     2.0     -1709.158066             0.0         False
4   -1709.158066   -1809.169434  3179.657715 -1709.158066    0.010000 -1809.169434        0.0  100.011367      100.011240     3.0     -1709.158066             0.0         False
5   -1709.158066   -1709.170410  3179.657715 -1709.158066    0.010000 -1709.170410        0.0    0.012344        0.011240     4.0     -1709.158066             0.0         False
6   -1709.158066   -1709.169189  3279.646475 -1709.158066    0.010000 -1709.169189        0.0    0.011123        0.000000     5.0     -1709.158066             1.0         False
7   -1709.158066   -1709.158066  3379.636475 -1709.158066    0.010000 -1709.158066        0.0    0.000000       -0.010000     6.0     -1709.158066             1.0         False
8   -1709.148066   -1709.148066  3379.636475 -1709.148066    0.010000 -1709.148066        0.0    0.000000     -100.000000     1.0     -1709.158066             1.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:30:36]  --------------------------------------------------------------------------------
[08/23 16:30:36]  Iteration: 54 (0 solution, 53 counterexamples)
[08/23 16:30:40]  Generator returned sat in 1.994609 secs.
[08/23 16:30:40]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:41]  Verifer returned unsat in 0.696360 secs.
[08/23 16:30:41]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:41]  --------------------------------------------------------------------------------
[08/23 16:30:41]  Iteration: 55 (1 solution, 53 counterexamples)
[08/23 16:30:42]  Generator returned sat in 0.332609 secs.
[08/23 16:30:42]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:43]  Verifer returned unsat in 0.933178 secs.
[08/23 16:30:43]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:43]  --------------------------------------------------------------------------------
[08/23 16:30:43]  Iteration: 56 (2 solution, 53 counterexamples)
[08/23 16:30:45]  Generator returned sat in 0.337653 secs.
[08/23 16:30:45]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:46]  Verifer returned unsat in 0.819899 secs.
[08/23 16:30:46]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:46]  --------------------------------------------------------------------------------
[08/23 16:30:46]  Iteration: 57 (3 solution, 53 counterexamples)
[08/23 16:30:48]  Generator returned sat in 0.313920 secs.
[08/23 16:30:48]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:48]  Verifer returned unsat in 0.734231 secs.
[08/23 16:30:48]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:48]  --------------------------------------------------------------------------------
[08/23 16:30:48]  Iteration: 58 (4 solution, 53 counterexamples)
[08/23 16:30:50]  Generator returned sat in 0.427886 secs.
[08/23 16:30:50]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:51]  Verifer returned unsat in 0.844729 secs.
[08/23 16:30:51]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:51]  --------------------------------------------------------------------------------
[08/23 16:30:51]  Iteration: 59 (5 solution, 53 counterexamples)
[08/23 16:30:53]  Generator returned sat in 0.316192 secs.
[08/23 16:30:53]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:54]  Verifer returned unsat in 0.843226 secs.
[08/23 16:30:54]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:54]  --------------------------------------------------------------------------------
[08/23 16:30:54]  Iteration: 60 (6 solution, 53 counterexamples)
[08/23 16:30:55]  Generator returned sat in 0.356314 secs.
[08/23 16:30:55]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:30:56]  Improved number of small numbers from 40 to 109 out of a max of 109
[08/23 16:30:56]  Verifer returned sat in 0.575840 secs.
[08/23 16:30:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2210.687256   -2310.639648  4079.59082 -2210.687256    0.047119 -2310.639648        0.0   99.952393        0.000000     8.0     -2310.639648            -1.0            -1
1   -2210.639648   -2210.687256  4079.59082 -2210.639648  100.000000 -2210.687256        0.0    0.047607      -99.952393     9.0     -2310.639648             1.0         False
2   -2110.687256   -2110.687256  4079.59082 -2110.687256  100.000000 -2110.687256        0.0    0.000000     -100.000000     1.0     -2310.639648             1.0          True
3   -1810.758057   -2010.663330  4079.59082 -1810.758057  299.929199 -2010.663330        0.0  199.905273       99.929199     1.0     -2310.639648             0.0         False
4   -1710.687012   -1810.710693  4079.59082 -1710.687012  299.976318 -1810.710693        0.0  100.023682      100.000244     1.0     -2310.639648             0.0         False
5   -1410.734131   -1710.687256  4079.59082 -1410.734131  399.976562 -1710.687256        0.0  299.953125      299.953125     2.0     -2310.639648             0.0         False
6   -1309.698975   -1710.639893  4079.59082 -1309.698975  400.988281 -1710.639893        0.0  400.940918      300.988281     2.0     -2310.639648             1.0          True
7   -1309.698975   -1560.228516  4079.59082 -1309.698975  351.505859 -1560.228516        0.0  250.529541      200.988281     3.0     -1309.698975             1.0          True
8   -1309.698975   -1410.687256  4079.59082 -1309.698975  250.482178 -1410.687256        0.0  100.988281      100.988281     3.0     -1309.698975             1.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:30:57]  --------------------------------------------------------------------------------
[08/23 16:30:57]  Iteration: 61 (6 solution, 54 counterexamples)
[08/23 16:30:59]  Generator returned sat in 0.674637 secs.
[08/23 16:30:59]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:00]  Verifer returned unsat in 0.988537 secs.
[08/23 16:31:00]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:00]  --------------------------------------------------------------------------------
[08/23 16:31:00]  Iteration: 62 (7 solution, 54 counterexamples)
[08/23 16:31:01]  Generator returned sat in 0.419193 secs.
[08/23 16:31:02]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:02]  Verifer returned unsat in 0.926565 secs.
[08/23 16:31:02]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:02]  --------------------------------------------------------------------------------
[08/23 16:31:02]  Iteration: 63 (8 solution, 54 counterexamples)
[08/23 16:31:04]  Generator returned sat in 0.375563 secs.
[08/23 16:31:04]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:05]  Improved number of small numbers from 47 to 109 out of a max of 109
[08/23 16:31:05]  Verifer returned sat in 0.821959 secs.
[08/23 16:31:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2304.565430   -3004.612549  4773.516113 -2304.565430    0.047119 -3004.612549        0.0  700.047119      600.047119     5.0     -3004.612549            -1.0            -1
1   -2304.565430   -2902.801514  4773.516113 -2304.565430    0.047363 -2902.801514        0.0  598.236084      500.047119     2.0     -3004.612549             0.0         False
2   -2304.565430   -2804.612549  4773.516113 -2304.565430    0.047363 -2804.612549        0.0  500.047119      400.047119     3.0     -3004.612549             0.0         False
3   -2304.565430   -2704.612549  4773.516113 -2304.565430  299.999756 -2704.612549        0.0  400.047119      300.047119     4.0     -3004.612549             0.0         False
4   -2304.565430   -2504.612549  4773.516113 -2304.565430  300.000000 -2504.612549        0.0  200.047119      200.047119     5.0     -3004.612549             0.0         False
5   -2106.423584   -2408.423584  4773.516113 -2106.423584  398.188965 -2408.423584        0.0  302.000000      298.188965     6.0     -3004.612549             0.0         False
6   -2010.234619   -2304.612549  4773.516113 -2010.234619  398.188965 -2304.612549        0.0  294.377930      294.377930     7.0     -3004.612549             1.0          True
7   -1904.518066   -2304.565430  4773.516113 -1904.518066  400.094482 -2304.565430        0.0  400.047363      300.094482     8.0     -3004.612549             1.0          True
8   -1904.518066   -2104.612549  4773.516113 -1904.518066  301.070801 -2104.612549        0.0  200.094482      200.094482     3.0     -1904.518066             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:31:06]  --------------------------------------------------------------------------------
[08/23 16:31:06]  Iteration: 64 (8 solution, 55 counterexamples)
[08/23 16:31:07]  Generator returned sat in 0.436415 secs.
[08/23 16:31:08]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:08]  Improved number of small numbers from 67 to 109 out of a max of 109
[08/23 16:31:08]  Verifer returned sat in 0.759999 secs.
[08/23 16:31:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2304.612793   -2904.635986  4773.515869 -2304.612793    0.023438 -2904.635986        0.0  600.023193      500.023193     6.0     -2904.635986            -1.0            -1
1   -2304.612793   -2804.612549  4773.515869 -2304.612793    0.023438 -2804.612549        0.0  499.999756      400.023193     6.0     -2904.635986             0.0         False
2   -2304.612793   -2702.753906  4773.515869 -2304.612793    0.023682 -2702.753906        0.0  398.141113      300.023193     7.0     -2904.635986             0.0         False
3   -2304.612793   -2604.635986  4773.515869 -2304.612793  298.094238 -2604.635986        0.0  300.023193      200.023193     8.0     -2904.635986             1.0          True
4   -2304.588867   -2404.636230  4773.515869 -2304.588867  300.047119 -2404.636230        0.0  100.047363      100.047119     6.0     -2904.635986             1.0          True
5   -2004.659912   -2304.635986  4773.515869 -2004.659912  399.976318 -2304.635986        0.0  299.976074      299.976074     7.0     -2904.635986             0.0         False
6   -1904.588867   -2304.612793  4773.515869 -1904.588867  400.047119 -2304.612793        0.0  400.023926      300.047119     8.0     -2904.635986             1.0          True
7   -1904.588867   -2154.624512  4773.515869 -1904.588867  351.035156 -2154.624512        0.0  250.035645      200.047119     3.0     -1904.588867             1.0          True
8   -1904.588867   -2004.635986  4773.515869 -1904.588867  250.011719 -2004.635986        0.0  100.047119      100.047119     3.0     -1904.588867             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:31:09]  --------------------------------------------------------------------------------
[08/23 16:31:09]  Iteration: 65 (8 solution, 56 counterexamples)
[08/23 16:31:11]  Generator returned sat in 0.853494 secs.
[08/23 16:31:11]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:11]  Improved number of small numbers from 81 to 109 out of a max of 109
[08/23 16:31:11]  Verifer returned sat in 0.215612 secs.
[08/23 16:31:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2304.612793   -2804.612793  4773.492432 -2304.612793    0.023438 -2804.612793        0.0  500.000000      500.000000     8.0     -2804.612793            -1.0            -1
1   -2304.612793   -2704.613037  4773.492432 -2304.612793    0.023438 -2704.613037        0.0  400.000244      400.000000     9.0     -2804.612793             0.0         False
2   -2304.612793   -2652.612793  4773.492432 -2304.612793    0.023438 -2652.612793        0.0  348.000000      300.000000     9.0     -2804.612793             1.0          True
3   -2304.612793   -2505.647949  4773.492432 -2304.612793    0.023438 -2505.647949        0.0  201.035156      200.000000     9.0     -2804.612793             1.0          True
4   -2205.671387   -2404.636475  4773.492432 -2205.671387  299.976562 -2404.636475        0.0  198.965088      198.941406     8.0     -2804.612793             1.0          True
5   -2104.659912   -2304.636230  4773.492432 -2104.659912  299.976562 -2304.636230        0.0  199.976318      199.952881     9.0     -2804.612793             0.0         False
6   -1805.671387   -2304.612793  4773.492432 -1805.671387  498.964844 -2304.612793        0.0  498.941406      398.941406     9.0     -2804.612793             1.0          True
7   -1805.671387   -2154.624756  4773.492432 -1805.671387  451.517578 -2154.624756        0.0  348.953369      298.941406     3.0     -1805.671387             1.0          True
8   -1805.671387   -2004.612793  4773.492432 -1805.671387  250.011719 -2004.612793        0.0  198.941406      198.941406     3.0     -1805.671387             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:31:12]  --------------------------------------------------------------------------------
[08/23 16:31:12]  Iteration: 66 (8 solution, 57 counterexamples)
[08/23 16:31:15]  Generator returned sat in 1.453609 secs.
[08/23 16:31:15]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:16]  Improved gap from 0.0 to 39.0625
[08/23 16:31:16]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:31:16]  Verifer returned sat in 1.234299 secs.
[08/23 16:31:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2304.612793   -2424.616699  4373.449463 -2304.612793    0.085938 -2424.616699        0.0  120.003906       99.957031     1.0     -2424.616699            -1.0            -1
1   -2304.612793   -2343.632324  4373.449463 -2304.612793    0.042969 -2343.632324        0.0   39.019531       -0.042969     2.0     -2304.612793             0.0         False
2   -2265.507324   -2304.569824  4434.386963 -2265.507324   78.125000 -2304.569824        0.0   39.062500        0.000000     1.0     -2304.612793             1.0         False
3   -2224.015137   -2265.507324  4492.894775 -2224.015137   80.554688 -2265.507324        0.0   41.492188        0.000000     2.0     -2304.612793             0.0         False
4   -2184.952637   -2224.015137  4553.789307 -2184.952637   80.554688 -2224.015137        0.0   39.062500       -0.042969     2.0     -2304.612793             1.0          True
5   -2163.206543   -2184.909668  4614.726807 -2163.206543   60.808594 -2184.909668        0.0   21.703125      -17.359375     1.0     -2163.206543             1.0          True
6   -2065.249512   -2145.804199  4634.129150 -2065.249512  119.660156 -2145.804199        0.0   80.554688        0.000000     1.0     -2163.206543             0.0         False
7   -2026.101074   -2065.249512  4694.980713 -2026.101074  119.703125 -2065.249512        0.0   39.148438        0.000000     2.0     -2163.206543             0.0         False
8   -1984.866699   -2026.058105  4694.980713 -1984.866699   80.382812 -2026.058105        0.0   41.191406      -58.765625     1.0     -1984.866699             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:31:17]  --------------------------------------------------------------------------------
[08/23 16:31:17]  Iteration: 67 (8 solution, 58 counterexamples)
[08/23 16:31:19]  Generator returned sat in 0.455745 secs.
[08/23 16:31:19]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:19]  Verifer returned unsat in 0.409165 secs.
[08/23 16:31:19]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:19]  --------------------------------------------------------------------------------
[08/23 16:31:19]  Iteration: 68 (9 solution, 58 counterexamples)
[08/23 16:31:21]  Generator returned sat in 0.401688 secs.
[08/23 16:31:21]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:22]  Verifer returned unsat in 0.414802 secs.
[08/23 16:31:22]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:22]  --------------------------------------------------------------------------------
[08/23 16:31:22]  Iteration: 69 (10 solution, 58 counterexamples)
[08/23 16:31:26]  Generator returned sat in 2.823801 secs.
[08/23 16:31:26]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:28]  Improved gap from 0.046875 to 39.0625
[08/23 16:31:28]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:31:28]  Verifer returned sat in 1.815885 secs.
[08/23 16:31:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2645.302490   -2686.864990  4356.657959 -2645.302490    0.046875 -2686.864990        0.0  41.562500       41.562256     1.0     -2686.864990            -1.0            -1
1   -2645.302490   -2686.817871  4415.095703 -2645.302490   41.515381 -2686.817871        0.0  41.515381        0.000000     2.0     -2686.864990             0.0         False
2   -2645.302490   -2645.302490  4476.033203 -2645.302490   41.468750 -2645.302490        0.0   0.000000      -39.062500     3.0     -2645.302490             1.0          True
3   -2564.677490   -2606.239990  4534.470703 -2564.677490   80.625000 -2606.239990        0.0  41.562500        0.000000     1.0     -2645.302490             1.0         False
4   -2525.614990   -2564.677490  4595.408203 -2525.614990   80.625000 -2564.677490        0.0  39.062500        0.000000     2.0     -2645.302490             0.0         False
5   -2522.364990   -2525.568115  4656.298828 -2522.364990   42.312500 -2525.568115        0.0   3.203125      -35.859375     1.0     -2522.364990             1.0          True
6   -2405.833740   -2486.505615  4675.626953 -2405.833740  119.734375 -2486.505615        0.0  80.671875        0.000000     1.0     -2522.364990             0.0         False
7   -2366.771240   -2405.833740  4736.564209 -2366.771240  119.734375 -2405.833740        0.0  39.062500       -0.000244     2.0     -2522.364990             0.0         False
8   -2343.966553   -2366.724121  4797.454834 -2343.966553   61.867188 -2366.724121        0.0  22.757568      -16.304932     1.0     -2343.966553             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:31:28]  --------------------------------------------------------------------------------
[08/23 16:31:28]  Iteration: 70 (10 solution, 59 counterexamples)
[08/23 16:31:30]  Generator returned sat in 0.641564 secs.
[08/23 16:31:30]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:33]  Improved gap from 0.001 to 64.0625
[08/23 16:31:33]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:31:33]  Verifer returned sat in 2.966815 secs.
[08/23 16:31:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2793.161133   -3257.176758  5137.266602 -2793.161133    0.046631 -3257.176758        0.0  464.015625      464.015625     3.0     -3257.176758            -1.0            -1
1   -2793.161133   -3157.176758  5137.266602 -2793.161133   99.999756 -3157.176758        0.0  364.015625      364.015625     4.0     -3257.176758             0.0         False
2   -2793.161133   -3057.176758  5137.266602 -2793.161133   99.999756 -3057.176758        0.0  264.015625      264.015625     4.0     -3257.176758             1.0          True
3   -2793.161133   -3057.176758  5137.266602 -2793.161133   99.999756 -3057.176758        0.0  264.015625      164.015625     4.0     -3257.176758             1.0          True
4   -2793.161133   -2858.989014  5137.266602 -2793.161133  100.000000 -2858.989014        0.0   65.827881       64.015625     5.0     -3257.176758             1.0         False
5   -2793.161133   -2857.176758  5173.204102 -2793.161133   52.000000 -2857.176758        0.0   64.015625       -0.046875     6.0     -2793.161133             1.0          True
6   -2757.176758   -2793.114258  5209.141602 -2757.176758  100.000000 -2793.114258        0.0   35.937500      -28.125000     1.0     -2793.161133             1.0         False
7   -2661.083008   -2727.020264  5241.172852 -2661.083008  132.031250 -2727.020264        0.0   65.937256        0.000000     1.0     -2793.161133             0.0         False
8   -2661.035889   -2661.036133  5277.063477 -2661.035889   65.984375 -2661.036133        0.0    0.000244      -64.062256     1.0     -2661.035889             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:31:34]  --------------------------------------------------------------------------------
[08/23 16:31:34]  Iteration: 71 (10 solution, 60 counterexamples)
[08/23 16:31:37]  Generator returned sat in 1.130646 secs.
[08/23 16:31:37]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:37]  Verifer returned unsat in 0.240511 secs.
[08/23 16:31:37]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:37]  --------------------------------------------------------------------------------
[08/23 16:31:37]  Iteration: 72 (11 solution, 60 counterexamples)
[08/23 16:31:39]  Generator returned sat in 0.643703 secs.
[08/23 16:31:39]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:40]  Verifer returned unsat in 0.274520 secs.
[08/23 16:31:40]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:40]  --------------------------------------------------------------------------------
[08/23 16:31:40]  Iteration: 73 (12 solution, 60 counterexamples)
[08/23 16:31:42]  Generator returned sat in 0.441818 secs.
[08/23 16:31:42]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:42]  Verifer returned unsat in 0.525538 secs.
[08/23 16:31:42]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:42]  --------------------------------------------------------------------------------
[08/23 16:31:42]  Iteration: 74 (13 solution, 60 counterexamples)
[08/23 16:31:44]  Generator returned sat in 0.449525 secs.
[08/23 16:31:44]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:45]  Verifer returned unsat in 0.324254 secs.
[08/23 16:31:45]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:45]  --------------------------------------------------------------------------------
[08/23 16:31:45]  Iteration: 75 (14 solution, 60 counterexamples)
[08/23 16:31:47]  Generator returned sat in 0.446667 secs.
[08/23 16:31:47]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:47]  Verifer returned unsat in 0.243406 secs.
[08/23 16:31:47]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:47]  --------------------------------------------------------------------------------
[08/23 16:31:47]  Iteration: 76 (15 solution, 60 counterexamples)
[08/23 16:31:49]  Generator returned sat in 0.484128 secs.
[08/23 16:31:49]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:50]  Verifer returned unsat in 0.363103 secs.
[08/23 16:31:50]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:50]  --------------------------------------------------------------------------------
[08/23 16:31:50]  Iteration: 77 (16 solution, 60 counterexamples)
[08/23 16:31:51]  Generator returned sat in 0.441664 secs.
[08/23 16:31:52]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:52]  Verifer returned unsat in 0.223281 secs.
[08/23 16:31:52]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:52]  --------------------------------------------------------------------------------
[08/23 16:31:52]  Iteration: 78 (17 solution, 60 counterexamples)
[08/23 16:31:54]  Generator returned sat in 0.429721 secs.
[08/23 16:31:54]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:54]  Verifer returned unsat in 0.303441 secs.
[08/23 16:31:54]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:54]  --------------------------------------------------------------------------------
[08/23 16:31:54]  Iteration: 79 (18 solution, 60 counterexamples)
[08/23 16:31:57]  Generator returned sat in 1.099519 secs.
[08/23 16:31:57]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:57]  Verifer returned unsat in 0.518800 secs.
[08/23 16:31:57]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:31:57]  --------------------------------------------------------------------------------
[08/23 16:31:57]  Iteration: 80 (19 solution, 60 counterexamples)
[08/23 16:31:59]  Generator returned sat in 0.464593 secs.
[08/23 16:32:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:00]  Verifer returned unsat in 0.322823 secs.
[08/23 16:32:00]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:00]  --------------------------------------------------------------------------------
[08/23 16:32:00]  Iteration: 81 (20 solution, 60 counterexamples)
[08/23 16:32:02]  Generator returned sat in 0.446403 secs.
[08/23 16:32:02]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:03]  Verifer returned unsat in 0.622926 secs.
[08/23 16:32:03]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:03]  --------------------------------------------------------------------------------
[08/23 16:32:03]  Iteration: 82 (21 solution, 60 counterexamples)
[08/23 16:32:05]  Generator returned sat in 0.476850 secs.
[08/23 16:32:05]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:05]  Verifer returned unsat in 0.747684 secs.
[08/23 16:32:05]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:05]  --------------------------------------------------------------------------------
[08/23 16:32:05]  Iteration: 83 (22 solution, 60 counterexamples)
[08/23 16:32:08]  Generator returned sat in 0.516048 secs.
[08/23 16:32:08]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:08]  Verifer returned unsat in 0.811251 secs.
[08/23 16:32:08]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:08]  --------------------------------------------------------------------------------
[08/23 16:32:08]  Iteration: 84 (23 solution, 60 counterexamples)
[08/23 16:32:10]  Generator returned sat in 0.451179 secs.
[08/23 16:32:11]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:12]  Improved gap from 0.0 to 39.0625
[08/23 16:32:13]  Improved number of small numbers from 50 to 60 out of a max of 110
[08/23 16:32:13]  Verifer returned sat in 2.137026 secs.
[08/23 16:32:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -214.362793    -333.144405  5076.329102  -214.362793    0.046631  -333.144405        0.0  118.781612      100.000118     9.0      -333.144405            -1.0            -1
1    -214.362793    -215.863399  5076.329102  -214.362793    0.046875  -215.863399        0.0    1.500606        0.000118     2.0      -333.144405             1.0         False
2    -175.300411    -214.362911  5137.266602  -175.300411   40.562988  -214.362911        0.0   39.062500        0.000000     3.0      -333.144405             1.0          True
3    -136.237911    -175.300411  5198.204102  -136.237911   78.125000  -175.300411        0.0   39.062500        0.000000     2.0      -333.144405             1.0          True
4     -96.378414    -136.237911  5258.344604   -96.378414   78.921997  -136.237911        0.0   39.859497        0.000000     2.0      -333.144405             1.0          True
5     -96.378414     -96.378414  5319.282104   -96.378414   39.812744   -96.378414        0.0    0.000000      -39.062500     2.0       -96.378414             1.0          True
6      21.606083     -57.315914  5340.360107    21.606083  117.984497   -57.315914        0.0   78.921997        0.000000     1.0       -96.378414             1.0         False
7      60.668583      21.606083  5401.297607    60.668583  117.984497    21.606083        0.0   39.062500        0.000000     2.0       -96.378414             0.0         False
8     100.528080      61.715332  5401.297607   100.528080   78.921997    61.715332        0.0   38.812748      -60.140503     1.0       100.528080             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:32:13]  --------------------------------------------------------------------------------
[08/23 16:32:13]  Iteration: 85 (23 solution, 61 counterexamples)
[08/23 16:32:16]  Generator returned sat in 1.168725 secs.
[08/23 16:32:16]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:17]  Verifer returned unsat in 0.508370 secs.
[08/23 16:32:17]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:17]  --------------------------------------------------------------------------------
[08/23 16:32:17]  Iteration: 86 (24 solution, 61 counterexamples)
[08/23 16:32:19]  Generator returned sat in 0.473876 secs.
[08/23 16:32:19]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:19]  Verifer returned unsat in 0.692168 secs.
[08/23 16:32:19]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:19]  --------------------------------------------------------------------------------
[08/23 16:32:19]  Iteration: 87 (25 solution, 61 counterexamples)
[08/23 16:32:21]  Generator returned sat in 0.532455 secs.
[08/23 16:32:22]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:22]  Verifer returned unsat in 0.349928 secs.
[08/23 16:32:22]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:22]  --------------------------------------------------------------------------------
[08/23 16:32:22]  Iteration: 88 (26 solution, 61 counterexamples)
[08/23 16:32:24]  Generator returned sat in 0.458784 secs.
[08/23 16:32:24]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:25]  Verifer returned unsat in 0.506755 secs.
[08/23 16:32:25]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:25]  --------------------------------------------------------------------------------
[08/23 16:32:25]  Iteration: 89 (27 solution, 61 counterexamples)
[08/23 16:32:27]  Generator returned sat in 0.520002 secs.
[08/23 16:32:27]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:27]  Improved number of small numbers from 44 to 109 out of a max of 109
[08/23 16:32:27]  Verifer returned sat in 0.353221 secs.
[08/23 16:32:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -978.553711   -1578.553711  5340.346924  -978.553711    0.023193 -1578.553711        0.0  600.000000      600.000000     5.0     -1578.553711            -1.0            -1
1    -978.553711   -1478.553711  5340.346924  -978.553711    0.023193 -1478.553711        0.0  500.000000      500.000000     5.0     -1578.553711             0.0         False
2    -978.553711   -1378.553711  5340.346924  -978.553711    0.023438 -1378.553711        0.0  400.000000      400.000000     6.0     -1578.553711             0.0         False
3    -978.553711   -1378.553711  5340.346924  -978.553711    0.023438 -1378.553711        0.0  400.000000      300.000000     6.0     -1578.553711             0.0         False
4    -978.553711   -1278.553711  5340.346924  -978.553711  200.000000 -1278.553711        0.0  300.000000      200.000000     7.0     -1578.553711             0.0         False
5    -978.553711   -1178.553711  5340.346924  -978.553711  200.000000 -1178.553711        0.0  200.000000      100.000000     8.0     -1578.553711             0.0         False
6    -978.553711   -1018.544434  5340.346924  -978.553711  200.000000 -1018.544434        0.0   39.990723        0.000000     9.0     -1578.553711             0.0         False
7    -478.530518    -978.553711  5340.346924  -478.530518  540.013916  -978.553711        0.0  500.023193      400.023193     9.0     -1578.553711             1.0          True
8    -478.530518    -878.553711  5340.346924  -478.530518  450.000000  -878.553711        0.0  400.023193      300.023193     2.0      -478.530518             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:32:28]  --------------------------------------------------------------------------------
[08/23 16:32:28]  Iteration: 90 (27 solution, 62 counterexamples)
[08/23 16:32:31]  Generator returned sat in 1.258635 secs.
[08/23 16:32:31]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:31]  Improved number of small numbers from 105 to 109 out of a max of 109
[08/23 16:32:31]  Verifer returned sat in 0.211271 secs.
[08/23 16:32:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -978.553955   -1578.553955  5340.346924  -978.553955    0.023193 -1578.553955        0.0  600.000000      600.000000     5.0     -1578.553955            -1.0            -1
1    -978.553955   -1478.553955  5340.346924  -978.553955    0.023193 -1478.553955        0.0  500.000000      500.000000     5.0     -1578.553955             0.0         False
2    -978.553955   -1378.553955  5340.346924  -978.553955    0.023438 -1378.553955        0.0  400.000000      400.000000     6.0     -1578.553955             0.0         False
3    -978.553955   -1378.553955  5340.346924  -978.553955    0.023438 -1378.553955        0.0  400.000000      300.000000     6.0     -1578.553955             0.0         False
4    -978.553955   -1278.553955  5340.346924  -978.553955  200.000000 -1278.553955        0.0  300.000000      200.000000     7.0     -1578.553955             0.0         False
5    -978.553955   -1178.553955  5340.346924  -978.553955  200.000000 -1178.553955        0.0  200.000000      100.000000     8.0     -1578.553955             0.0         False
6    -978.553955    -978.792236  5340.346924  -978.553955  200.000000  -978.792236        0.0    0.238281        0.000000     9.0     -1578.553955             0.0         False
7    -578.530518    -978.553955  5340.346924  -578.530518  400.261719  -978.553955        0.0  400.023438      300.023438     9.0     -1578.553955             1.0          True
8    -578.530518    -878.553711  5340.346924  -578.530518  300.500000  -878.553711        0.0  300.023193      200.023438     2.0      -578.530518             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:32:31]  --------------------------------------------------------------------------------
[08/23 16:32:31]  Iteration: 91 (27 solution, 63 counterexamples)
[08/23 16:32:34]  Generator returned sat in 0.690401 secs.
[08/23 16:32:34]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:35]  Verifer returned unsat in 0.904883 secs.
[08/23 16:32:35]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:35]  --------------------------------------------------------------------------------
[08/23 16:32:35]  Iteration: 92 (28 solution, 63 counterexamples)
[08/23 16:32:37]  Generator returned sat in 0.504264 secs.
[08/23 16:32:37]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:37]  Verifer returned unsat in 0.345180 secs.
[08/23 16:32:37]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:37]  --------------------------------------------------------------------------------
[08/23 16:32:37]  Iteration: 93 (29 solution, 63 counterexamples)
[08/23 16:32:39]  Generator returned sat in 0.495654 secs.
[08/23 16:32:40]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:40]  Verifer returned unsat in 0.397247 secs.
[08/23 16:32:40]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:40]  --------------------------------------------------------------------------------
[08/23 16:32:40]  Iteration: 94 (30 solution, 63 counterexamples)
[08/23 16:32:42]  Generator returned sat in 0.482558 secs.
[08/23 16:32:42]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:43]  Verifer returned unsat in 0.363298 secs.
[08/23 16:32:43]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:43]  --------------------------------------------------------------------------------
[08/23 16:32:43]  Iteration: 95 (31 solution, 63 counterexamples)
[08/23 16:32:45]  Generator returned sat in 1.041571 secs.
[08/23 16:32:45]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:46]  Verifer returned unsat in 0.486399 secs.
[08/23 16:32:46]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:46]  --------------------------------------------------------------------------------
[08/23 16:32:46]  Iteration: 96 (32 solution, 63 counterexamples)
[08/23 16:32:48]  Generator returned sat in 0.535967 secs.
[08/23 16:32:48]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:50]  Improved gap from 0.0465087890625 to 0
[08/23 16:32:50]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/23 16:32:50]  Verifer returned sat in 2.010979 secs.
[08/23 16:32:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1276.616943   -1777.640137  4842.333496 -1276.616943  0.023438 -1777.640137        0.0  501.023193      501.023193     6.0     -1777.640137            -1.0            -1
1   -1276.616943   -1677.640137  4842.333496 -1276.616943  0.023438 -1677.640137        0.0  401.023193      401.023193     7.0     -1777.640137             0.0         False
2   -1276.616943   -1577.640137  4842.333496 -1276.616943  0.023438 -1577.640137        0.0  301.023193      301.023193     7.0     -1777.640137             0.0         False
3   -1276.616943   -1477.640137  4842.333496 -1276.616943  1.000000 -1477.640137        0.0  201.023193      201.023193     8.0     -1777.640137             0.0         False
4   -1276.616943   -1377.640137  4842.333496 -1276.616943  1.000000 -1377.640137        0.0  101.023193      101.023193     9.0     -1777.640137             1.0          True
5   -1276.616943   -1277.663330  4842.333496 -1276.616943  1.000000 -1277.663330        0.0    1.046387        1.023193     9.0     -1777.640137             1.0          True
6   -1276.616943   -1277.639893  4941.310303 -1276.616943  1.000000 -1277.639893        0.0    1.022949        0.000000     9.0     -1777.640137             1.0          True
7   -1276.616943   -1276.616943  5040.310303 -1276.616943  1.000000 -1276.616943        0.0    0.000000       -1.000000     9.0     -1777.640137             1.0          True
8   -1275.616943   -1275.616943  5139.310303 -1275.616943  1.000000 -1275.616943        0.0    0.000000       -1.000000     1.0     -1777.640137             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:32:51]  --------------------------------------------------------------------------------
[08/23 16:32:51]  Iteration: 97 (32 solution, 64 counterexamples)
[08/23 16:32:53]  Generator returned sat in 0.562832 secs.
[08/23 16:32:53]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:54]  Improved number of small numbers from 45 to 109 out of a max of 109
[08/23 16:32:54]  Verifer returned sat in 0.657073 secs.
[08/23 16:32:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1176.420898   -1876.444092  4842.333252 -1176.420898    0.023193 -1876.444092        0.0  700.023193      700.023193     6.0     -1876.444092            -1.0            -1
1   -1176.420898   -1776.444092  4842.333252 -1176.420898    0.023438 -1776.444092        0.0  600.023193      600.023193     6.0     -1876.444092             0.0         False
2   -1176.420898   -1676.467529  4842.333252 -1176.420898    0.023438 -1676.467529        0.0  500.046631      500.023193     7.0     -1876.444092             0.0         False
3   -1176.420898   -1676.444092  4842.333252 -1176.420898    0.023438 -1676.444092        0.0  500.023193      400.023193     8.0     -1876.444092             0.0         False
4   -1176.420898   -1576.444092  4842.333252 -1176.420898  100.511719 -1576.444092        0.0  400.023193      300.023193     9.0     -1876.444092             1.0          True
5   -1176.420898   -1476.444092  4842.333252 -1176.420898  150.755859 -1476.444092        0.0  300.023193      200.023193     7.0     -1876.444092             1.0          True
6   -1176.420898   -1277.397705  4842.333252 -1176.420898  200.023438 -1277.397705        0.0  100.976807      100.023193     7.0     -1876.444092             0.0         False
7    -878.351318   -1176.444092  4842.333252  -878.351318  399.046387 -1176.444092        0.0  298.092773      298.092773     8.0     -1876.444092             0.0         False
8    -776.420898   -1076.444336  4842.333252  -776.420898  400.023193 -1076.444336        0.0  300.023438      300.023193     2.0     -1876.444092             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:32:54]  --------------------------------------------------------------------------------
[08/23 16:32:54]  Iteration: 98 (32 solution, 65 counterexamples)
[08/23 16:32:57]  Generator returned sat in 1.243699 secs.
[08/23 16:32:57]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:58]  Verifer returned unsat in 0.454541 secs.
[08/23 16:32:58]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:32:58]  --------------------------------------------------------------------------------
[08/23 16:32:58]  Iteration: 99 (33 solution, 65 counterexamples)
[08/23 16:33:00]  Generator returned sat in 0.540881 secs.
[08/23 16:33:00]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:00]  Verifer returned unsat in 0.377514 secs.
[08/23 16:33:00]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:00]  --------------------------------------------------------------------------------
[08/23 16:33:00]  Iteration: 100 (34 solution, 65 counterexamples)
[08/23 16:33:03]  Generator returned sat in 0.534186 secs.
[08/23 16:33:03]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:03]  Verifer returned unsat in 0.356156 secs.
[08/23 16:33:03]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:03]  --------------------------------------------------------------------------------
[08/23 16:33:03]  Iteration: 101 (35 solution, 65 counterexamples)
[08/23 16:33:05]  Generator returned sat in 0.540790 secs.
[08/23 16:33:05]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:06]  Verifer returned unsat in 0.625978 secs.
[08/23 16:33:06]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:06]  --------------------------------------------------------------------------------
[08/23 16:33:06]  Iteration: 102 (36 solution, 65 counterexamples)
[08/23 16:33:08]  Generator returned sat in 0.527490 secs.
[08/23 16:33:08]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:09]  Verifer returned unsat in 0.252309 secs.
[08/23 16:33:09]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:09]  --------------------------------------------------------------------------------
[08/23 16:33:09]  Iteration: 103 (37 solution, 65 counterexamples)
[08/23 16:33:11]  Generator returned sat in 0.723147 secs.
[08/23 16:33:11]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:12]  Improved gap from 0.0 to 3.125
[08/23 16:33:12]  Improved number of small numbers from 51 to 110 out of a max of 110
[08/23 16:33:12]  Verifer returned sat in 1.218862 secs.
[08/23 16:33:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -3743.154785   -4247.178467  4846.393066 -3743.154785  0.023193 -4247.178467        0.0  504.023682      504.023438     2.0     -4247.178467            -1.0            -1
1   -3743.154785   -4147.178467  4846.393066 -3743.154785  0.023193 -4147.178467        0.0  404.023682      404.023438     3.0     -4247.178467             0.0         False
2   -3743.154785   -4047.178223  4846.393066 -3743.154785  3.999756 -4047.178223        0.0  304.023438      304.023438     3.0     -4247.178467             1.0          True
3   -3743.154785   -3947.178467  4846.393066 -3743.154785  4.000000 -3947.178467        0.0  204.023682      204.023438     4.0     -4247.178467             1.0          True
4   -3743.154785   -3938.006836  4846.393066 -3743.154785  4.000000 -3938.006836        0.0  194.852051      104.023438     5.0     -4247.178467             1.0          True
5   -3743.154785   -3747.201660  4846.393066 -3743.154785  4.000000 -3747.201660        0.0    4.046875        4.023438     6.0     -4247.178467             1.0          True
6   -3743.154785   -3747.178223  4942.369629 -3743.154785  4.000000 -3747.178223        0.0    4.023438        0.000000     7.0     -4247.178467             1.0          True
7   -3743.154785   -3743.154785  5039.244629 -3743.154785  4.000000 -3743.154785        0.0    0.000000       -3.125000     8.0     -4247.178467             1.0          True
8   -3739.154785   -3740.029785  5136.119629 -3739.154785  4.000000 -3740.029785        0.0    0.875000       -2.250000     1.0     -4247.178467             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:33:13]  --------------------------------------------------------------------------------
[08/23 16:33:13]  Iteration: 104 (37 solution, 66 counterexamples)
[08/23 16:33:16]  Generator returned sat in 1.482977 secs.
[08/23 16:33:16]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:18]  Improved gap from 2.0 to 1.5625
[08/23 16:33:18]  Improved number of small numbers from 77 to 110 out of a max of 110
[08/23 16:33:18]  Verifer returned sat in 2.037736 secs.
[08/23 16:33:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -3113.928223   -3615.951416  4542.393311 -3113.928223  0.023193 -3615.951416        0.0  502.023193      502.023193     5.0     -3615.951416            -1.0            -1
1   -3113.928223   -3515.951416  4542.393311 -3113.928223  0.023193 -3515.951416        0.0  402.023193      402.023193     6.0     -3615.951416             1.0         False
2   -3113.928223   -3515.951416  4542.393311 -3113.928223  0.023438 -3515.951416        0.0  402.023193      302.023193     6.0     -3615.951416             1.0          True
3   -3113.928223   -3415.951172  4542.393311 -3113.928223  2.000000 -3415.951172        0.0  302.022949      202.023193     4.0     -3615.951416             1.0         False
4   -3113.928223   -3310.342285  4542.393311 -3113.928223  2.000000 -3310.342285        0.0  196.414062      102.023193     5.0     -3615.951416             1.0          True
5   -3113.928223   -3115.974365  4542.393311 -3113.928223  2.000000 -3115.974365        0.0    2.046143        2.023193     6.0     -3615.951416             1.0          True
6   -3113.928223   -3115.951172  4640.370117 -3113.928223  2.000000 -3115.951172        0.0    2.022949        0.000000     7.0     -3615.951416             1.0          True
7   -3113.928223   -3113.928223  4738.807617 -3113.928223  2.000000 -3113.928223        0.0    0.000000       -1.562500     8.0     -3615.951416             1.0          True
8   -3111.928223   -3112.365479  4738.807617 -3111.928223  2.000000 -3112.365479        0.0    0.437256      -99.562500     1.0     -3615.951416             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:33:19]  --------------------------------------------------------------------------------
[08/23 16:33:19]  Iteration: 105 (37 solution, 67 counterexamples)
[08/23 16:33:25]  Generator returned sat in 4.985420 secs.
[08/23 16:33:25]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:33:26]  Improved gap from 1.5625 to 1.5625
[08/23 16:33:26]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 16:33:26]  Verifer returned sat in 0.814518 secs.
[08/23 16:33:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2955.387939   -3356.950439  4443.495117 -2955.387939  0.046143 -3356.950439        0.0  401.562500        401.5625     5.0     -3356.950439            -1.0            -1
1   -2955.387939   -3256.950439  4443.495117 -2955.387939  0.046143 -3256.950439        0.0  301.562500        301.5625     6.0     -3356.950439             1.0         False
2   -2955.387939   -3156.950684  4443.495117 -2955.387939  1.000000 -3156.950684        0.0  201.562744        201.5625     6.0     -3356.950439             1.0          True
3   -2955.387939   -3056.950439  4443.495117 -2955.387939  1.000000 -3056.950439        0.0  101.562500        101.5625     5.0     -3356.950439             1.0          True
4   -2955.387939   -3056.950439  4443.495117 -2955.387939  2.000000 -3056.950439        0.0  101.562500          1.5625     5.0     -3356.950439             1.0          True
5   -2955.387939   -2956.950439  4541.932617 -2955.387939  2.000000 -2956.950439        0.0    1.562500          0.0000     6.0     -3356.950439             1.0         False
6   -2954.450439   -2955.387939  4640.370117 -2954.450439  2.500000 -2955.387939        0.0    0.937500         -0.6250     7.0     -3356.950439             1.0          True
7   -2952.637939   -2953.825439  4738.370117 -2952.637939  2.750000 -2953.825439        0.0    1.187500         -0.8125     1.0     -3356.950439             1.0          True
8   -2951.825439   -2951.825439  4738.370117 -2951.825439  2.000000 -2951.825439        0.0    0.000000       -100.0000     1.0     -2951.825439             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:33:27]  --------------------------------------------------------------------------------
[08/23 16:33:27]  Iteration: 106 (37 solution, 68 counterexamples)
[08/23 16:33:30]  Generator returned sat in 1.345751 secs.
[08/23 16:33:30]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:33:32]  Improved gap from 2.04638671875 to 14.0625
[08/23 16:33:32]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/23 16:33:32]  Verifer returned sat in 1.989893 secs.
[08/23 16:33:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2370.809814   -2825.363770  4443.495117 -2370.809814    0.022705 -2825.363770        0.0  454.553955      454.553955     7.0     -2825.363770            -1.0            -1
1   -2370.809814   -2725.363770  4443.495117 -2370.809814    0.022917 -2725.363770        0.0  354.553955      354.553955     6.0     -2825.363770             1.0         False
2   -2370.809814   -2660.717773  4443.495117 -2370.809814    0.022949 -2660.717773        0.0  289.907959      254.553955     4.0     -2825.363770             1.0          True
3   -2370.809814   -2525.364014  4443.495117 -2370.809814    1.999756 -2525.364014        0.0  154.554199      154.553955     4.0     -2825.363770             0.0         False
4   -2370.809814   -2490.009766  4443.495117 -2370.809814    2.000000 -2490.009766        0.0  119.199951       54.553955     5.0     -2825.363770             0.0         False
5   -2370.809814   -2425.363770  4488.941162 -2370.809814  119.177002 -2425.363770        0.0   54.553955        0.000000     6.0     -2825.363770             1.0          True
6   -2306.186768   -2370.809814  4524.295166 -2306.186768  119.177002 -2370.809814        0.0   64.623047       -0.022949     7.0     -2825.363770             1.0          True
7   -2292.032715   -2306.163818  4610.164062 -2292.032715   78.777100 -2306.163818        0.0   14.131104        0.000000     1.0     -2292.032715             1.0          True
8   -2292.032715   -2292.032715  4696.101562 -2292.032715    2.000000 -2292.032715        0.0    0.000000      -14.062500     2.0     -2292.032715             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:33:33]  --------------------------------------------------------------------------------
[08/23 16:33:33]  Iteration: 107 (37 solution, 69 counterexamples)
[08/23 16:33:37]  Generator returned sat in 3.062533 secs.
[08/23 16:33:38]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:38]  Improved gap from 3.0 to 1.5625
[08/23 16:33:39]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:33:39]  Verifer returned sat in 1.135691 secs.
[08/23 16:33:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1490.954834   -2087.346191  4488.940918 -1490.954834  0.046143 -2087.346191        0.0  596.391357      596.391113     6.0     -2087.346191            -1.0            -1
1   -1490.954834   -1987.392334  4488.940918 -1490.954834  0.046143 -1987.392334        0.0  496.437500      496.391113     6.0     -2087.346191             1.0         False
2   -1490.954834   -1987.345947  4488.940918 -1490.954834  0.046387 -1987.345947        0.0  496.391113      396.391113     4.0     -2087.346191             1.0          True
3   -1490.954834   -1787.345947  4488.940918 -1490.954834  3.000000 -1787.345947        0.0  296.391113      296.391113     5.0     -2087.346191             0.0         False
4   -1490.954834   -1687.346191  4488.940918 -1490.954834  3.000000 -1687.346191        0.0  196.391357      196.391113     6.0     -2087.346191             1.0          True
5   -1490.954834   -1687.299805  4488.940918 -1490.954834  3.000000 -1687.299805        0.0  196.344971       96.391113     6.0     -2087.346191             1.0          True
6   -1490.954834   -1587.345947  4492.549805 -1490.954834  3.000000 -1587.345947        0.0   96.391113        0.000000     7.0     -2087.346191             1.0          True
7   -1490.954834   -1490.954834  4590.987305 -1490.954834  3.000000 -1490.954834        0.0    0.000000       -1.562500     8.0     -2087.346191             1.0          True
8   -1487.954834   -1489.392334  4590.987305 -1487.954834  3.000000 -1489.392334        0.0    1.437500      -98.562500     1.0     -2087.346191             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:33:39]  --------------------------------------------------------------------------------
[08/23 16:33:39]  Iteration: 108 (37 solution, 70 counterexamples)
[08/23 16:33:42]  Generator returned sat in 0.779326 secs.
[08/23 16:33:42]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:45]  Improved gap from 1.5625 to 3.125
[08/23 16:33:45]  Improved number of small numbers from 52 to 110 out of a max of 110
[08/23 16:33:45]  Verifer returned sat in 3.382087 secs.
[08/23 16:33:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1965.257568   -2469.303711  4269.940918 -1965.257568  0.046143 -2469.303711        0.0  504.046143      504.046143     9.0     -2469.303711            -1.0            -1
1   -1965.257568   -2369.303711  4269.940918 -1965.257568  0.046387 -2369.303711        0.0  404.046143      404.046143     3.0     -2469.303711             1.0         False
2   -1965.257568   -2269.303711  4269.940918 -1965.257568  0.046387 -2269.303711        0.0  304.046143      304.046143     4.0     -2469.303711             0.0         False
3   -1965.257568   -2269.257324  4269.940918 -1965.257568  4.000000 -2269.257324        0.0  303.999756      204.046143     5.0     -2469.303711             0.0         False
4   -1965.257568   -2160.086182  4269.940918 -1965.257568  4.000000 -2160.086182        0.0  194.828613      104.046143     6.0     -2469.303711             1.0          True
5   -1965.257568   -2069.303467  4269.940918 -1965.257568  4.000000 -2069.303467        0.0  104.045898        4.046143     6.0     -2469.303711             1.0          True
6   -1965.257568   -1969.303467  4365.894775 -1965.257568  4.000000 -1969.303467        0.0    4.045898        0.000000     7.0     -2469.303711             1.0          True
7   -1965.257568   -1965.257568  4462.769531 -1965.257568  4.000000 -1965.257568        0.0    0.000000       -3.125244     8.0     -2469.303711             1.0          True
8   -1961.257568   -1962.132324  4462.769531 -1961.257568  4.000000 -1962.132324        0.0    0.874756      -99.125244     1.0     -2469.303711             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:33:46]  --------------------------------------------------------------------------------
[08/23 16:33:46]  Iteration: 109 (37 solution, 71 counterexamples)
[08/23 16:33:49]  Generator returned sat in 1.453929 secs.
[08/23 16:33:49]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:50]  Verifer returned unsat in 0.363210 secs.
[08/23 16:33:50]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:33:50]  --------------------------------------------------------------------------------
[08/23 16:33:50]  Iteration: 110 (38 solution, 71 counterexamples)
[08/23 16:33:55]  Generator returned sat in 3.269791 secs.
[08/23 16:33:55]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:33:58]  Improved gap from 0.0230712890625 to 1.5625
[08/23 16:33:58]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 16:33:58]  Verifer returned sat in 3.093936 secs.
[08/23 16:33:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1662.947510   -1964.993652  4169.940918 -1662.947510  101.999756 -1964.993652        0.0  302.046143      302.046143     2.0     -1964.993652            -1.0            -1
1   -1662.947510   -1865.085938  4169.940918 -1662.947510  102.000000 -1865.085938        0.0  202.138428      202.046143     2.0     -1964.993652             0.0         False
2   -1662.947510   -1859.039795  4169.940918 -1662.947510  102.000000 -1859.039795        0.0  196.092285      102.046143     3.0     -1964.993652             0.0         False
3   -1662.947510   -1764.993652  4169.940918 -1662.947510  102.000000 -1764.993652        0.0  102.046143        2.046143     4.0     -1964.993652             1.0          True
4   -1662.947510   -1664.993652  4267.894775 -1662.947510  102.000000 -1664.993652        0.0    2.046143        0.000000     5.0     -1964.993652             1.0          True
5   -1562.947510   -1662.947510  4267.894775 -1562.947510  102.046143 -1662.947510        0.0  100.000000        0.000000     6.0     -1964.993652             1.0          True
6   -1562.901367   -1562.901367  4365.894775 -1562.901367  100.046143 -1562.901367        0.0    0.000000       -1.953857     1.0     -1562.901367             1.0          True
7   -1560.901367   -1560.947510  4463.894775 -1560.901367    2.000000 -1560.947510        0.0    0.046143       -1.953857     1.0     -1560.901367             0.0         False
8   -1558.947510   -1558.947510  4463.894775 -1558.947510    2.000000 -1558.947510        0.0    0.000000     -100.000000     1.0     -1560.901367             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:34:10]  --------------------------------------------------------------------------------
[08/23 16:34:10]  Iteration: 111 (38 solution, 72 counterexamples)
[08/23 16:34:14]  Generator returned sat in 2.730457 secs.
[08/23 16:34:14]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:15]  Verifer returned unsat in 0.968204 secs.
[08/23 16:34:15]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:15]  --------------------------------------------------------------------------------
[08/23 16:34:15]  Iteration: 112 (39 solution, 72 counterexamples)
[08/23 16:34:19]  Generator returned sat in 1.696590 secs.
[08/23 16:34:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:19]  Verifer returned unsat in 0.339954 secs.
[08/23 16:34:20]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:20]  --------------------------------------------------------------------------------
[08/23 16:34:20]  Iteration: 113 (40 solution, 72 counterexamples)
[08/23 16:34:22]  Generator returned sat in 0.759635 secs.
[08/23 16:34:22]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:23]  Verifer returned unsat in 0.483373 secs.
[08/23 16:34:23]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:23]  --------------------------------------------------------------------------------
[08/23 16:34:23]  Iteration: 114 (41 solution, 72 counterexamples)
[08/23 16:34:25]  Generator returned sat in 0.714085 secs.
[08/23 16:34:25]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:26]  Verifer returned unsat in 0.364474 secs.
[08/23 16:34:26]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:26]  --------------------------------------------------------------------------------
[08/23 16:34:26]  Iteration: 115 (42 solution, 72 counterexamples)
[08/23 16:34:29]  Generator returned sat in 0.797011 secs.
[08/23 16:34:29]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:29]  Verifer returned unsat in 0.470218 secs.
[08/23 16:34:29]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:29]  --------------------------------------------------------------------------------
[08/23 16:34:29]  Iteration: 116 (43 solution, 72 counterexamples)
[08/23 16:34:32]  Generator returned sat in 0.694365 secs.
[08/23 16:34:32]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:32]  Verifer returned unsat in 0.409165 secs.
[08/23 16:34:32]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:32]  --------------------------------------------------------------------------------
[08/23 16:34:32]  Iteration: 117 (44 solution, 72 counterexamples)
[08/23 16:34:35]  Generator returned sat in 0.723288 secs.
[08/23 16:34:35]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:35]  Verifer returned unsat in 0.367306 secs.
[08/23 16:34:35]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:34:35]  --------------------------------------------------------------------------------
[08/23 16:34:35]  Iteration: 118 (45 solution, 72 counterexamples)
[08/23 16:34:39]  Generator returned sat in 1.770462 secs.
[08/23 16:34:39]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:34:40]  Improved gap from 0.046142578125 to 0
[08/23 16:34:40]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 16:34:40]  Verifer returned sat in 1.013186 secs.
[08/23 16:34:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1468.374756   -1672.012939  3521.440674 -1468.374756  103.592041 -1672.012939        0.0  203.638184      203.638184     9.0     -1672.012939            -1.0            -1
1   -1468.374756   -1572.012939  3521.440674 -1468.374756  103.592041 -1572.012939        0.0  103.638184      103.638184     3.0     -1672.012939             1.0         False
2   -1468.374756   -1572.012939  3521.440674 -1468.374756  103.592285 -1572.012939        0.0  103.638184        3.638184     3.0     -1672.012939             1.0          True
3   -1468.374756   -1472.012939  3617.802490 -1468.374756  103.592285 -1472.012939        0.0    3.638184        0.000000     4.0     -1672.012939             1.0         False
4   -1272.012939   -1468.374756  3617.802490 -1272.012939  200.000000 -1468.374756        0.0  196.361816       96.361816     5.0     -1672.012939             1.0          True
5   -1272.012939   -1273.420654  3621.394531 -1272.012939  103.638184 -1273.420654        0.0    1.407715       -0.046143     2.0     -1272.012939             1.0          True
6   -1271.920654   -1271.966797  3721.348389 -1271.920654    1.500000 -1271.966797        0.0    0.046143        0.000000     1.0     -1271.920654             0.0         False
7   -1270.466797   -1271.920654  3819.894531 -1270.466797    1.500000 -1271.920654        0.0    1.453857        0.000000     2.0     -1271.920654             0.0         False
8   -1270.420654   -1270.420898  3919.802246 -1270.420654    1.500000 -1270.420898        0.0    0.000244       -0.046143     1.0     -1271.920654             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:34:41]  --------------------------------------------------------------------------------
[08/23 16:34:41]  Iteration: 119 (45 solution, 73 counterexamples)
[08/23 16:34:44]  Generator returned sat in 1.708977 secs.
[08/23 16:34:44]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:34:45]  Improved gap from 0.0230712890625 to 0
[08/23 16:34:46]  Improved number of small numbers from 71 to 110 out of a max of 110
[08/23 16:34:46]  Verifer returned sat in 1.488871 secs.
[08/23 16:34:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1273.443848   -1273.466797  3425.894531 -1273.443848  200.023193 -1273.466797        0.0    0.022949      -99.977051     9.0     -1273.466797            -1.0            -1
1   -1073.467041   -1073.489990  3425.894531 -1073.467041  199.999756 -1073.489990        0.0    0.022949       -0.000244     1.0     -1073.467041             1.0         False
2    -873.513184   -1071.897461  3425.894531  -873.513184  199.976807 -1071.897461        0.0  198.384277       99.953613     1.0      -873.513184             0.0         False
3    -871.943848    -873.489990  3425.894531  -871.943848  199.953613  -873.489990        0.0    1.546143        1.522949     1.0      -871.943848             0.0         False
4    -871.943848    -873.466797  3524.371582  -871.943848    1.500000  -873.466797        0.0    1.522949        0.000000     2.0      -871.943848             0.0         False
5    -871.943848    -871.943848  3624.371338  -871.943848    1.500000  -871.943848        0.0    0.000000       -0.000244     3.0      -871.943848             0.0         False
6    -870.443848    -870.466797  3722.871338  -870.443848    1.500000  -870.466797        0.0    0.022949       -0.000244     1.0      -871.943848             0.0         False
7    -868.966797    -868.989990  3821.371338  -868.966797    1.500000  -868.989990        0.0    0.023193       -0.023193     1.0      -871.943848             0.0         False
8    -867.489990    -868.943604  3821.371582  -867.489990    1.500000  -868.943604        0.0    1.453613      -98.546143     1.0      -871.943848             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:34:46]  --------------------------------------------------------------------------------
[08/23 16:34:46]  Iteration: 120 (45 solution, 74 counterexamples)
[08/23 16:34:50]  Generator returned sat in 2.106863 secs.
[08/23 16:34:50]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:34:57]  Improved gap from 0.0 to 34.375
[08/23 16:34:58]  Improved number of small numbers from 44 to 62 out of a max of 110
[08/23 16:34:58]  Verifer returned sat in 7.372192 secs.
[08/23 16:34:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -108.947998    -108.994344  2361.421875  -108.947998    0.046143  -108.994344        0.0   0.046346        0.046143     6.0      -108.994344            -1.0            -1
1    -108.947998    -108.971273  2427.024008  -108.947998    0.023193  -108.971273        0.0   0.023275      -34.351725     4.0      -108.947998             1.0         False
2     -40.221273     -74.596273  2492.649008   -40.221273   68.750000   -74.596273        0.0  34.375000        0.000000     1.0      -108.947998             1.0         False
3      -5.823202     -40.221273  2558.250936    -5.823202   68.773071   -40.221273        0.0  34.398071        0.000000     2.0      -108.947998             0.0         False
4      28.551798      -5.823202  2623.875936    28.551798   68.773071    -5.823202        0.0  34.375000        0.000000     2.0      -108.947998             1.0          True
5      80.137369      28.551798  2672.290365    80.137369   85.960571    28.551798        0.0  51.585571        0.000000     2.0      -108.947998             1.0          True
6     123.106119      80.137369  2729.298584   123.106119   94.554321    80.137369        0.0  42.968750       -0.023031     2.0      -108.947998             1.0          True
7     187.593851     123.129150  2764.833883   187.593851  107.456482   123.129150        0.0  64.464701        0.000000     1.0      -108.947998             1.0          True
8     187.593851     187.593851  2830.458740   187.593851    2.000000   187.593851        0.0   0.000000      -34.375143     2.0       187.593851             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:34:58]  --------------------------------------------------------------------------------
[08/23 16:34:58]  Iteration: 121 (45 solution, 75 counterexamples)
[08/23 16:35:01]  Generator returned sat in 1.131046 secs.
[08/23 16:35:01]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:35:04]  Improved gap from 0.046142578125 to 1.5625
[08/23 16:35:04]  Improved number of small numbers from 45 to 110 out of a max of 110
[08/23 16:35:04]  Verifer returned sat in 2.881606 secs.
[08/23 16:35:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -941.934814   -1241.911865  2428.540283  -941.934814    0.022949 -1241.911865        0.0  299.977051      299.977051     7.0     -1241.911865            -1.0            -1
1    -941.934814   -1145.106201  2428.540283  -941.934814    0.023193 -1145.106201        0.0  203.171387      199.977051     2.0     -1241.911865             1.0         False
2    -941.934814   -1041.935059  2428.540283  -941.934814    0.023193 -1041.935059        0.0  100.000244       99.977051     3.0     -1241.911865             0.0         False
3    -941.934814   -1041.911865  2428.563232  -941.934814    0.023193 -1041.911865        0.0   99.977051        0.000000     4.0     -1241.911865             0.0         False
4    -941.911865    -941.934814  2527.000732  -941.911865  100.000000  -941.934814        0.0    0.022949       -1.539551     5.0     -1241.911865             1.0          True
5    -840.349121    -940.372314  2527.000732  -840.349121  101.585693  -940.372314        0.0  100.023193        0.023193     1.0     -1241.911865             1.0          True
6    -840.349121    -840.372314  2625.438232  -840.349121    2.000000  -840.372314        0.0    0.023193       -1.539307     2.0      -840.349121             0.0         False
7    -838.372314    -838.809814  2723.875732  -838.372314    2.000000  -838.809814        0.0    0.437500       -1.125000     1.0      -840.349121             0.0         False
8    -836.809814    -837.247314  2822.313232  -836.809814    2.000000  -837.247314        0.0    0.437500       -1.125000     1.0      -840.349121             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:35:05]  --------------------------------------------------------------------------------
[08/23 16:35:05]  Iteration: 122 (45 solution, 76 counterexamples)
[08/23 16:35:10]  Generator returned sat in 2.804739 secs.
[08/23 16:35:10]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:35:12]  Improved gap from 0.046142578125 to 0
[08/23 16:35:12]  Improved number of small numbers from 95 to 110 out of a max of 110
[08/23 16:35:12]  Verifer returned sat in 2.829968 secs.
[08/23 16:35:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1189.395508   -1490.464600  2577.093018 -1189.395508  101.045898 -1490.464600        0.0  301.069092      201.069336     5.0     -1490.464600            -1.0            -1
1   -1189.395508   -1390.464844  2577.093018 -1189.395508  101.046143 -1390.464844        0.0  201.069336      101.069336     4.0     -1490.464600             1.0         False
2   -1189.395508   -1290.464844  2577.093018 -1189.395508  101.046143 -1290.464844        0.0  101.069336        1.069336     4.0     -1490.464600             1.0          True
3   -1189.395508   -1189.418457  2676.023682 -1189.395508  101.046143 -1189.418457        0.0    0.022949        0.000000     4.0     -1490.464600             1.0          True
4    -988.372314   -1186.326416  2676.023682  -988.372314  201.046143 -1186.326416        0.0  197.954102      101.023193     1.0     -1490.464600             1.0          True
5    -988.372314    -989.418701  2676.023682  -988.372314    1.000000  -989.418701        0.0    1.046387        1.023193     2.0      -988.372314             0.0         False
6    -988.372314    -989.395508  2775.000488  -988.372314    1.000000  -989.395508        0.0    1.023193        0.000000     3.0      -988.372314             0.0         False
7    -988.372314    -988.372314  2875.000488  -988.372314    1.000000  -988.372314        0.0    0.000000        0.000000     4.0      -988.372314             1.0         False
8    -987.372314    -988.349121  2875.000488  -987.372314    1.000000  -988.349121        0.0    0.976807      -99.000000     1.0      -988.372314             1.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:35:13]  --------------------------------------------------------------------------------
[08/23 16:35:13]  Iteration: 123 (45 solution, 77 counterexamples)
[08/23 16:35:16]  Generator returned sat in 1.498019 secs.
[08/23 16:35:17]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:35:20]  Improved gap from 0.0 to 0
[08/23 16:35:21]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:35:21]  Verifer returned sat in 3.969018 secs.
[08/23 16:35:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1300.338135   -1599.522705  2786.150879 -1300.338135    0.046143 -1599.522705        0.0  299.184570      299.184570     8.0     -1599.522705            -1.0            -1
1   -1300.338135   -1499.522705  2786.150879 -1300.338135    0.999756 -1499.522705        0.0  199.184570      199.184570     8.0     -1599.522705             1.0         False
2   -1300.338135   -1499.522705  2786.150879 -1300.338135    0.999756 -1499.522705        0.0  199.184570       99.184570     8.0     -1599.522705             1.0          True
3   -1300.338135   -1301.291992  2786.966309 -1300.338135    0.999756 -1301.291992        0.0    0.953857        0.000000     4.0     -1599.522705             1.0         False
4   -1300.291992   -1300.338135  2886.920166 -1300.291992    1.000000 -1300.338135        0.0    0.046143        0.000000     5.0     -1599.522705             0.0         False
5   -1200.245850   -1300.246094  2886.920166 -1200.245850  100.092285 -1300.246094        0.0  100.000244        0.046143     1.0     -1599.522705             1.0          True
6   -1200.245850   -1200.291992  2985.966553 -1200.245850    1.000000 -1200.291992        0.0    0.046143       -0.907471     2.0     -1200.245850             0.0         False
7   -1199.291992   -1199.338379  3085.920166 -1199.291992    1.000000 -1199.338379        0.0    0.046387        0.000000     1.0     -1200.245850             0.0         False
8   -1198.338379   -1198.338379  3085.920410 -1198.338379    1.000000 -1198.338379        0.0    0.000000      -99.046143     1.0     -1200.245850             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:35:21]  --------------------------------------------------------------------------------
[08/23 16:35:21]  Iteration: 124 (45 solution, 78 counterexamples)
[08/23 16:35:25]  Generator returned sat in 2.299631 secs.
[08/23 16:35:25]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:35:26]  Improved gap from 0.01153564453125 to 48.4375
[08/23 16:35:26]  Improved number of small numbers from 92 to 110 out of a max of 110
[08/23 16:35:26]  Verifer returned sat in 0.456857 secs.
[08/23 16:35:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1010.460205   -1458.897949  2786.150879 -1010.460205    0.023193 -1458.897949        0.0  448.437744      448.437500     6.0     -1458.897949            -1.0            -1
1   -1010.460205   -1458.897705  2786.150879 -1010.460205    0.023193 -1458.897705        0.0  448.437500      348.437500     6.0     -1458.897949             0.0         False
2   -1010.460205   -1358.897705  2786.150879 -1010.460205    0.023193 -1358.897705        0.0  348.437500      248.437500     7.0     -1458.897949             0.0         False
3   -1010.460205   -1158.897705  2786.150879 -1010.460205    0.023193 -1158.897705        0.0  148.437500      148.437500     6.0     -1458.897949             0.0         False
4   -1010.460205   -1059.976562  2786.150879 -1010.460205    1.000000 -1059.976562        0.0   49.516357       48.437500     6.0     -1458.897949             0.0         False
5   -1010.460205   -1058.897705  2837.713379 -1010.460205    1.000000 -1058.897705        0.0   48.437500        0.000000     7.0     -1458.897949             0.0         False
6   -1010.460205   -1010.460205  2889.252930 -1010.460205    1.000000 -1010.460205        0.0    0.000000      -48.460449     8.0     -1458.897949             0.0         False
7    -862.022705    -862.999756  2889.252930  -862.022705  148.437500  -862.999756        0.0    0.977051       -0.022949     1.0     -1458.897949             1.0          True
8    -861.999756    -861.999756  2889.252930  -861.999756    1.000000  -861.999756        0.0    0.000000     -100.000000     1.0      -861.999756             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:35:26]  --------------------------------------------------------------------------------
[08/23 16:35:26]  Iteration: 125 (45 solution, 79 counterexamples)
[08/23 16:35:30]  Generator returned sat in 1.940509 secs.
[08/23 16:35:31]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:35:34]  Improved gap from 0.0 to 64.0625
[08/23 16:35:34]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:35:34]  Verifer returned sat in 3.606025 secs.
[08/23 16:35:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1448.282471   -1912.344971  3239.598145 -1448.282471    0.045898 -1912.344971        0.0  464.062500        464.0625     2.0     -1912.344971            -1.0            -1
1   -1448.282471   -1812.345215  3239.598145 -1448.282471    0.999756 -1812.345215        0.0  364.062744        364.0625     2.0     -1912.344971             0.0         False
2   -1448.282471   -1712.344971  3239.598145 -1448.282471    0.999756 -1712.344971        0.0  264.062500        264.0625     3.0     -1912.344971             0.0         False
3   -1448.282471   -1612.344971  3239.598145 -1448.282471    0.999756 -1612.344971        0.0  164.062500        164.0625     4.0     -1912.344971             0.0         False
4   -1448.282471   -1512.391357  3239.598145 -1448.282471    1.000000 -1512.391357        0.0   64.108887         64.0625     5.0     -1912.344971             0.0         False
5   -1448.282471   -1512.344971  3275.535645 -1448.282471    1.000000 -1512.344971        0.0   64.062500          0.0000     6.0     -1912.344971             0.0         False
6   -1411.844971   -1448.282471  3311.473145 -1411.844971  100.500000 -1448.282471        0.0   36.437500        -27.6250     7.0     -1912.344971             1.0          True
7   -1316.001221   -1384.219971  3343.254395 -1316.001221  132.281250 -1384.219971        0.0   68.218750          0.0000     1.0     -1912.344971             1.0          True
8   -1316.001221   -1316.001221  3379.191895 -1316.001221    1.000000 -1316.001221        0.0    0.000000        -64.0625     2.0     -1316.001221             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:35:35]  --------------------------------------------------------------------------------
[08/23 16:35:35]  Iteration: 126 (45 solution, 80 counterexamples)
[08/23 16:35:38]  Generator returned sat in 1.578955 secs.
[08/23 16:35:39]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:35:42]  Improved gap from 64.0625 to 65.625
[08/23 16:35:42]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 16:35:42]  Verifer returned sat in 3.538420 secs.
[08/23 16:35:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2015.047363   -2480.672363  3242.723145 -2015.047363    0.022949 -2480.672363        0.0  465.625         465.625     5.0     -2480.672363            -1.0            -1
1   -2015.047363   -2380.672363  3242.723145 -2015.047363    0.022949 -2380.672363        0.0  365.625         365.625     5.0     -2480.672363             0.0         False
2   -2015.047363   -2380.672363  3242.723145 -2015.047363    0.022949 -2380.672363        0.0  365.625         265.625     5.0     -2480.672363             0.0         False
3   -2015.047363   -2276.547363  3242.723145 -2015.047363    0.022949 -2276.547363        0.0  261.500         165.625     6.0     -2480.672363             0.0         False
4   -2015.047363   -2080.672363  3242.723145 -2015.047363    1.000000 -2080.672363        0.0   65.625          65.625     7.0     -2480.672363             0.0         False
5   -2015.047363   -2080.672363  3277.098145 -2015.047363    1.000000 -2080.672363        0.0   65.625           0.000     7.0     -2480.672363             0.0         False
6   -2015.047363   -2015.047363  3311.473145 -2015.047363    1.000000 -2015.047363        0.0    0.000         -65.625     8.0     -2480.672363             0.0         False
7   -1883.797363   -1949.422363  3345.848145 -1883.797363  131.250000 -1949.422363        0.0   65.625           0.000     1.0     -2480.672363             1.0          True
8   -1883.797363   -1883.797363  3345.848145 -1883.797363    1.000000 -1883.797363        0.0    0.000        -100.000     2.0     -1883.797363             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:35:43]  --------------------------------------------------------------------------------
[08/23 16:35:43]  Iteration: 127 (45 solution, 81 counterexamples)
[08/23 16:35:46]  Generator returned sat in 1.680064 secs.
[08/23 16:35:46]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:35:51]  Improved gap from 65.625 to 65.625
[08/23 16:35:51]  Improved number of small numbers from 52 to 110 out of a max of 110
[08/23 16:35:51]  Verifer returned sat in 4.712169 secs.
[08/23 16:35:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1615.892334   -2081.517334  3242.723145 -1615.892334    0.022949 -2081.517334        0.0  465.625000         465.625     4.0     -2081.517334            -1.0            -1
1   -1615.892334   -2081.517334  3242.723145 -1615.892334    0.023193 -2081.517334        0.0  465.625000         365.625     4.0     -2081.517334             0.0         False
2   -1615.892334   -1881.517578  3242.723145 -1615.892334    0.023193 -1881.517578        0.0  265.625244         265.625     5.0     -2081.517334             0.0         False
3   -1615.892334   -1879.550537  3242.723145 -1615.892334    0.023193 -1879.550537        0.0  263.658203         165.625     6.0     -2081.517334             0.0         False
4   -1615.892334   -1681.540283  3242.723145 -1615.892334    1.000000 -1681.540283        0.0   65.647949          65.625     7.0     -2081.517334             0.0         False
5   -1615.892334   -1681.517334  3277.098145 -1615.892334    1.000000 -1681.517334        0.0   65.625000           0.000     8.0     -2081.517334             0.0         False
6   -1615.892334   -1615.892334  3311.473145 -1615.892334    1.000000 -1615.892334        0.0    0.000000         -65.625     9.0     -2081.517334             0.0         False
7   -1483.563232   -1550.267334  3344.769043 -1483.563232  132.329102 -1550.267334        0.0   66.704102           0.000     1.0     -2081.517334             1.0          True
8   -1483.563232   -1483.563232  3344.769043 -1483.563232    1.000000 -1483.563232        0.0    0.000000        -100.000     2.0     -1483.563232             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:35:52]  --------------------------------------------------------------------------------
[08/23 16:35:52]  Iteration: 128 (45 solution, 82 counterexamples)
[08/23 16:35:57]  Generator returned sat in 2.809331 secs.
[08/23 16:35:57]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:35:58]  Improved gap from 0.0 to 37.5
[08/23 16:35:58]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:35:58]  Verifer returned sat in 1.162658 secs.
[08/23 16:35:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1628.530029   -1745.167725  2986.340332 -1628.530029    0.045898 -1745.167725        0.0  116.637695       41.545898     7.0     -1745.167725            -1.0            -1
1   -1628.530029   -1670.075928  3044.748535 -1628.530029    0.045898 -1670.075928        0.0   41.545898       -0.045898     7.0     -1745.167725             1.0         False
2   -1590.984131   -1628.484131  3107.248535 -1590.984131   79.091797 -1628.484131        0.0   37.500000        0.000000     1.0     -1745.167725             1.0          True
3   -1549.392334   -1590.984131  3165.656738 -1549.392334   79.091797 -1590.984131        0.0   41.591797        0.000000     2.0     -1745.167725             0.0         False
4   -1511.892334   -1549.392334  3228.156738 -1511.892334   79.091797 -1549.392334        0.0   37.500000        0.000000     2.0     -1745.167725             1.0          True
5   -1487.050537   -1511.846436  3288.610840 -1487.050537   62.341797 -1511.846436        0.0   24.795898      -14.704102     1.0     -1487.050537             1.0          True
6   -1395.208740   -1472.346436  3311.473145 -1395.208740  116.637695 -1472.346436        0.0   77.137695        0.000000     1.0     -1487.050537             0.0         False
7   -1353.708740   -1395.208740  3369.973145 -1353.708740  118.637695 -1395.208740        0.0   41.500000        0.000000     2.0     -1487.050537             0.0         False
8   -1316.116943   -1351.438232  3369.973145 -1316.116943   79.091797 -1351.438232        0.0   35.321289      -62.408203     1.0     -1316.116943             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:35:58]  --------------------------------------------------------------------------------
[08/23 16:35:58]  Iteration: 129 (45 solution, 83 counterexamples)
[08/23 16:36:04]  Generator returned sat in 3.247024 secs.
[08/23 16:36:04]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:36:07]  Improved gap from 0.02288818359375 to 1.5625
[08/23 16:36:07]  Improved number of small numbers from 47 to 110 out of a max of 110
[08/23 16:36:07]  Verifer returned sat in 3.390470 secs.
[08/23 16:36:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -2138.136963   -2339.699707  3539.534180 -2138.136963    0.045654 -2339.699707        0.0  201.562744      201.562744     4.0     -2339.699707            -1.0            -1
1   -2138.136963   -2239.699707  3539.534180 -2138.136963    0.045654 -2239.699707        0.0  101.562744      101.562744     3.0     -2339.699707             1.0         False
2   -2138.136963   -2147.740723  3539.534180 -2138.136963    0.045654 -2147.740723        0.0    9.603760        1.562744     4.0     -2339.699707             1.0          True
3   -2138.136963   -2139.699707  3637.971436 -2138.136963    9.558105 -2139.699707        0.0    1.562744        0.000000     4.0     -2339.699707             1.0          True
4   -2034.920654   -2138.136963  3637.971436 -2034.920654  104.779053 -2138.136963        0.0  103.216309        3.216309     5.0     -2339.699707             1.0          True
5   -2034.920654   -2036.966309  3734.755127 -2034.920654  103.170898 -2036.966309        0.0    2.045654        0.000000     2.0     -2034.920654             1.0          True
6   -2034.920654   -2034.920654  3833.192627 -2034.920654    2.000000 -2034.920654        0.0    0.000000       -1.562500     3.0     -2034.920654             0.0         False
7   -2032.920654   -2033.357910  3931.192627 -2032.920654    2.000000 -2033.357910        0.0    0.437256       -1.562500     1.0     -2034.920654             1.0         False
8   -2031.357910   -2031.357910  3931.192627 -2031.357910    2.000000 -2031.357910        0.0    0.000000      -99.999756     1.0     -2034.920654             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:36:08]  --------------------------------------------------------------------------------
[08/23 16:36:08]  Iteration: 130 (45 solution, 84 counterexamples)
[08/23 16:36:14]  Generator returned sat in 3.745590 secs.
[08/23 16:36:14]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:36:17]  Improved gap from 0.977294921875 to 0
[08/23 16:36:18]  Improved number of small numbers from 42 to 110 out of a max of 110
[08/23 16:36:18]  Verifer returned sat in 3.696359 secs.
[08/23 16:36:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1279.812500   -1586.041504  3703.347900 -1279.812500    0.022705 -1586.041504        0.0  306.229004      303.091797     2.0     -1586.041504            -1.0            -1
1   -1279.812500   -1482.904297  3703.347900 -1279.812500  103.068604 -1482.904297        0.0  203.091797      203.091797     2.0     -1586.041504             0.0         False
2   -1279.812500   -1382.926758  3703.347900 -1279.812500  103.068604 -1382.926758        0.0  103.114258      103.091797     3.0     -1586.041504             0.0         False
3   -1279.812500   -1382.904297  3703.347900 -1279.812500  103.068604 -1382.904297        0.0  103.091797        3.091797     4.0     -1586.041504             0.0         False
4   -1279.812500   -1279.812500  3703.347900 -1279.812500  103.068604 -1279.812500        0.0    0.000000      -96.908203     5.0     -1586.041504             1.0          True
5   -1176.766602   -1176.789551  3797.187500 -1176.766602  103.045898 -1176.789551        0.0    0.022949       -0.022705     1.0     -1176.766602             1.0          True
6   -1175.789551   -1176.743896  3896.210449 -1175.789551    1.000000 -1176.743896        0.0    0.954346       -0.022705     1.0     -1175.789551             0.0         False
7   -1175.743896   -1175.766846  3996.187256 -1175.743896    1.000000 -1175.766846        0.0    0.022949       -0.000244     1.0     -1175.789551             0.0         False
8   -1174.766846   -1175.721191  4095.210205 -1174.766846    1.000000 -1175.721191        0.0    0.954346       -0.000244     1.0     -1175.789551             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:36:18]  --------------------------------------------------------------------------------
[08/23 16:36:18]  Iteration: 131 (45 solution, 85 counterexamples)
[08/23 16:36:22]  Generator returned sat in 1.684664 secs.
[08/23 16:36:22]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:36:26]  Improved gap from 0.0 to 1.5625
[08/23 16:36:27]  Improved number of small numbers from 65 to 110 out of a max of 110
[08/23 16:36:27]  Verifer returned sat in 4.359918 secs.
[08/23 16:36:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1276.100342   -1478.231445  3595.012207 -1276.100342    0.045654 -1478.231445        0.0  202.131104      102.131348     2.0     -1478.231445            -1.0            -1
1   -1276.100342   -1278.277344  3595.012207 -1276.100342    0.045654 -1278.277344        0.0    2.177002        2.131348     3.0     -1478.231445             0.0         False
2   -1276.100342   -1278.231445  3692.880859 -1276.100342    0.045898 -1278.231445        0.0    2.131104        0.000000     3.0     -1478.231445             1.0          True
3   -1276.100342   -1276.100342  3791.318359 -1276.100342    2.085205 -1276.100342        0.0    0.000000       -1.562500     4.0     -1478.231445             1.0          True
4   -1172.492188   -1274.537842  3791.318359 -1172.492188  103.608154 -1274.537842        0.0  102.045654        2.045654     1.0     -1478.231445             1.0          True
5   -1172.492188   -1174.537842  3889.272705 -1172.492188    2.000000 -1174.537842        0.0    2.045654        0.000000     2.0     -1172.492188             0.0         False
6   -1172.492188   -1172.492188  3987.272705 -1172.492188    2.000000 -1172.492188        0.0    0.000000       -2.000000     3.0     -1172.492188             0.0         False
7   -1170.492188   -1170.492188  4085.710205 -1170.492188    2.000000 -1170.492188        0.0    0.000000       -1.562500     1.0     -1172.492188             1.0         False
8   -1168.492188   -1168.929688  4085.710205 -1168.492188    2.000000 -1168.929688        0.0    0.437500      -99.562500     1.0     -1172.492188             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:36:27]  --------------------------------------------------------------------------------
[08/23 16:36:27]  Iteration: 132 (45 solution, 86 counterexamples)
[08/23 16:36:31]  Generator returned sat in 1.289678 secs.
[08/23 16:36:31]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 16:36:35]  Improved gap from 1.0 to 0
[08/23 16:36:35]  Improved number of small numbers from 47 to 110 out of a max of 110
[08/23 16:36:35]  Verifer returned sat in 4.325908 secs.
[08/23 16:36:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1441.904785   -1541.904785  3590.309814 -1441.904785   99.977051 -1541.904785        0.0  100.000000      100.000000     1.0     -1541.904785            -1.0            -1
1   -1441.904785   -1541.904785  3590.309814 -1441.904785   99.977295 -1541.904785        0.0  100.000000        0.000000     1.0     -1541.904785             0.0         False
2   -1241.859131   -1341.904785  3590.309814 -1241.859131  300.045654 -1341.904785        0.0  100.045654      100.045654     1.0     -1541.904785             0.0         False
3   -1041.882080   -1241.905029  3590.309814 -1041.882080  300.022705 -1241.905029        0.0  200.022949      200.022705     2.0     -1041.882080             0.0         False
4   -1041.882080   -1238.881836  3590.309814 -1041.882080    1.000000 -1238.881836        0.0  196.999756      100.022705     2.0     -1041.882080             0.0         False
5   -1041.882080   -1141.904785  3590.309814 -1041.882080    1.000000 -1141.904785        0.0  100.022705        0.022705     3.0     -1041.882080             0.0         False
6   -1041.882080   -1041.904785  3690.286865 -1041.882080    1.000000 -1041.904785        0.0    0.022705       -0.000244     4.0     -1041.882080             1.0         False
7   -1040.904785   -1041.859131  3789.309814 -1040.904785    1.000000 -1041.859131        0.0    0.954346        0.000000     1.0     -1041.882080             1.0         False
8   -1040.859131   -1040.904785  3789.309814 -1040.859131    1.000000 -1040.904785        0.0    0.045654      -99.954346     2.0     -1041.882080             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:36:36]  --------------------------------------------------------------------------------
[08/23 16:36:36]  Iteration: 133 (45 solution, 87 counterexamples)
[08/23 16:36:41]  Generator returned sat in 2.985238 secs.
[08/23 16:36:41]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:36:44]  Improved gap from 0.0228271484375 to 1.5625
[08/23 16:36:44]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:36:44]  Verifer returned sat in 3.028807 secs.
[08/23 16:36:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1295.075439   -1496.637939  3545.042969 -1295.075439    0.045654 -1496.637939        0.0  201.562500      201.562500     8.0     -1496.637939            -1.0            -1
1   -1295.075439   -1396.637939  3545.042969 -1295.075439    0.045654 -1396.637939        0.0  101.562500      101.562500     8.0     -1496.637939             1.0         False
2   -1295.075439   -1307.678711  3545.042969 -1295.075439    0.045654 -1307.678711        0.0   12.603271        1.562500     6.0     -1496.637939             1.0          True
3   -1295.075439   -1296.637939  3643.480469 -1295.075439   12.557617 -1296.637939        0.0    1.562500        0.000000     5.0     -1496.637939             1.0          True
4   -1188.859131   -1295.075439  3643.480469 -1188.859131  107.778809 -1295.075439        0.0  106.216309        6.216309     6.0     -1496.637939             1.0          True
5   -1188.859131   -1190.767822  3737.264160 -1188.859131  106.170654 -1190.767822        0.0    1.908691        0.000000     2.0     -1188.859131             1.0          True
6   -1188.767822   -1188.813477  3835.656006 -1188.767822    2.000000 -1188.813477        0.0    0.045654       -1.516846     1.0     -1188.767822             0.0         False
7   -1186.813477   -1187.250977  3934.093506 -1186.813477    2.000000 -1187.250977        0.0    0.437500       -1.125000     1.0     -1188.767822             0.0         False
8   -1185.250977   -1185.688477  3934.093506 -1185.250977    2.000000 -1185.688477        0.0    0.437500      -99.562500     1.0     -1188.767822             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:36:44]  --------------------------------------------------------------------------------
[08/23 16:36:44]  Iteration: 134 (45 solution, 88 counterexamples)
[08/23 16:36:50]  Generator returned sat in 3.182571 secs.
[08/23 16:36:50]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:36:53]  Improved gap from 0.04541015625 to 0
[08/23 16:36:53]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:36:53]  Verifer returned sat in 2.921986 secs.
[08/23 16:36:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -575.149902    -976.695557  3446.672607  -575.149902    0.045654  -976.695557        0.0  401.545654      401.545654     5.0      -976.695557            -1.0            -1
1    -575.149902    -876.695557  3446.672607  -575.149902  101.545654  -876.695557        0.0  301.545654      301.545654     5.0      -976.695557             1.0         False
2    -575.149902    -876.649902  3446.672607  -575.149902  101.545654  -876.649902        0.0  301.500000      201.545654     6.0      -976.695557             1.0          True
3    -575.149902    -776.604248  3446.672607  -575.149902  101.545654  -776.604248        0.0  201.454346      101.545654     7.0      -976.695557             1.0          True
4    -575.149902    -676.695557  3446.672607  -575.149902  101.545654  -676.695557        0.0  101.545654        1.545654     8.0      -976.695557             1.0          True
5    -575.149902    -575.195557  3544.718262  -575.149902  101.500000  -575.195557        0.0    0.045654       -0.408691     9.0      -575.149902             1.0          True
6    -574.695557    -574.741211  3644.263916  -574.695557    0.500000  -574.741211        0.0    0.045654       -0.408691     1.0      -574.695557             1.0         False
7    -574.241211    -574.286865  3744.218262  -574.241211    0.500000  -574.286865        0.0    0.045654        0.000000     1.0      -574.695557             0.0         False
8    -573.786865    -574.195557  3744.218262  -573.786865    0.500000  -574.195557        0.0    0.408691      -99.545654     1.0      -574.695557             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:36:53]  --------------------------------------------------------------------------------
[08/23 16:36:53]  Iteration: 135 (45 solution, 89 counterexamples)
[08/23 16:37:02]  Generator returned sat in 5.872500 secs.
[08/23 16:37:02]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:37:03]  Improved gap from 0.0 to 53.125
[08/23 16:37:03]  Improved number of small numbers from 70 to 110 out of a max of 110
[08/23 16:37:03]  Verifer returned sat in 1.710413 secs.
[08/23 16:37:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -776.695557    -982.900146  3399.888428  -776.695557    0.045410  -982.900146        0.0  206.204590      153.216309     4.0      -982.900146            -1.0            -1
1    -776.695557    -841.376709  3399.888428  -776.695557    0.045654  -841.376709        0.0   64.681152       53.216309     5.0      -982.900146             0.0         False
2    -776.695557    -829.911865  3446.672119  -776.695557   53.261475  -829.911865        0.0   53.216309        0.000000     6.0      -982.900146             1.0          True
3    -776.650146    -776.695557  3493.547119  -776.650146   53.261719  -776.695557        0.0    0.045410      -53.079590     7.0      -982.900146             1.0          True
4    -570.490967    -662.150146  3493.547119  -570.490967  206.204590  -662.150146        0.0   91.659180       53.079590     1.0      -982.900146             1.0          True
5    -570.490967    -623.570557  3540.422119  -570.490967   91.613281  -623.570557        0.0   53.079590       -0.045410     2.0      -570.490967             0.0         False
6    -518.399902    -570.445557  3587.297119  -518.399902  105.170654  -570.445557        0.0   52.045654       -1.079346     1.0      -570.490967             0.0         False
7    -465.320557    -517.320557  3634.172119  -465.320557  105.125000  -517.320557        0.0   52.000000       -1.125000     1.0      -465.320557             0.0         False
8    -442.905762    -464.195557  3634.172119  -442.905762   74.414795  -464.195557        0.0   21.289795      -78.710205     1.0      -442.905762             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:37:04]  --------------------------------------------------------------------------------
[08/23 16:37:04]  Iteration: 136 (45 solution, 90 counterexamples)
[08/23 16:37:14]  Generator returned sat in 7.292224 secs.
[08/23 16:37:14]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:37:17]  Improved gap from 0.0 to 0
[08/23 16:37:17]  Improved number of small numbers from 43 to 110 out of a max of 110
[08/23 16:37:17]  Verifer returned sat in 3.453575 secs.
[08/23 16:37:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -674.358398    -974.427002  3444.403320  -674.358398    0.022705  -974.427002        0.0  300.068604      300.068359     6.0      -974.427002            -1.0            -1
1    -674.358398    -970.176270  3444.403320  -674.358398    0.022705  -970.176270        0.0  295.817871      200.068359     6.0      -974.427002             1.0         False
2    -674.358398    -774.427002  3444.403320  -674.358398    0.022705  -774.427002        0.0  100.068604      100.068359     7.0      -974.427002             1.0          True
3    -674.358398    -774.404297  3444.403320  -674.358398    0.022705  -774.404297        0.0  100.045898        0.068359     6.0      -974.427002             1.0          True
4    -674.358398    -674.381104  3544.334961  -674.358398  100.022705  -674.381104        0.0    0.022705        0.000000     6.0      -974.427002             1.0          True
5    -476.472168    -674.358398  3544.334961  -476.472168  197.908936  -674.358398        0.0  197.886230       97.886230     6.0      -974.427002             1.0          True
6    -476.472168    -476.927002  3546.426270  -476.472168  148.988770  -476.927002        0.0    0.454834       -0.022461     2.0      -476.472168             1.0          True
7    -476.427002    -476.449463  3646.403320  -476.427002    0.500000  -476.449463        0.0    0.022461       -0.000244     1.0      -476.427002             0.0         False
8    -475.949463    -476.404053  3646.403320  -475.949463    0.500000  -476.404053        0.0    0.454590      -99.522705     1.0      -476.427002             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:37:18]  --------------------------------------------------------------------------------
[08/23 16:37:18]  Iteration: 137 (45 solution, 91 counterexamples)
[08/23 16:37:23]  Generator returned sat in 3.104325 secs.
[08/23 16:37:23]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:37:28]  Improved gap from 0.022705078125 to 64.0625
[08/23 16:37:28]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 16:37:28]  Verifer returned sat in 5.250719 secs.
[08/23 16:37:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -1371.953369   -1836.015869  3544.334961 -1371.953369    0.022705 -1836.015869        0.0  464.062500       464.06250     5.0     -1836.015869            -1.0            -1
1   -1371.953369   -1736.015869  3544.334961 -1371.953369    0.022705 -1736.015869        0.0  364.062500       364.06250     6.0     -1836.015869             0.0         False
2   -1371.953369   -1642.959229  3544.334961 -1371.953369    0.022705 -1642.959229        0.0  271.005859       264.06250     7.0     -1836.015869             1.0          True
3   -1371.953369   -1536.015869  3544.334961 -1371.953369    0.022705 -1536.015869        0.0  164.062500       164.06250     4.0     -1836.015869             1.0          True
4   -1371.953369   -1436.038574  3544.334961 -1371.953369    0.500000 -1436.038574        0.0   64.085205        64.06250     5.0     -1836.015869             0.0         False
5   -1371.953369   -1436.015869  3580.272461 -1371.953369    0.500000 -1436.015869        0.0   64.062500         0.00000     6.0     -1836.015869             0.0         False
6   -1332.294189   -1371.953369  3610.442871 -1332.294189  103.721680 -1371.953369        0.0   39.659180       -30.17041     7.0     -1836.015869             1.0          True
7   -1238.061279   -1302.123779  3646.380371 -1238.061279  133.892090 -1302.123779        0.0   64.062500         0.00000     1.0     -1836.015869             1.0          True
8   -1238.061279   -1238.061279  3682.317871 -1238.061279    0.500000 -1238.061279        0.0    0.000000       -64.06250     2.0     -1238.061279             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:37:29]  --------------------------------------------------------------------------------
[08/23 16:37:29]  Iteration: 138 (45 solution, 92 counterexamples)
[08/23 16:37:33]  Generator returned sat in 1.636795 secs.
[08/23 16:37:33]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:37:37]  Improved gap from 0.04541015625 to 65.625
[08/23 16:37:37]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:37:37]  Verifer returned sat in 4.151080 secs.
[08/23 16:37:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -334.453369    -800.101074  3545.920166  -334.453369    0.022705  -800.101074        0.0  465.647705      465.647705     8.0      -800.101074            -1.0            -1
1    -334.453369    -700.101074  3545.920166  -334.453369    0.022705  -700.101074        0.0  365.647705      365.647705     3.0      -800.101074             1.0         False
2    -334.453369    -600.101074  3545.920166  -334.453369    0.022705  -600.101074        0.0  265.647705      265.647705     3.0      -800.101074             0.0         False
3    -334.453369    -598.612549  3545.920166  -334.453369    0.022705  -598.612549        0.0  264.159180      165.647705     4.0      -800.101074             0.0         False
4    -334.453369    -400.101074  3545.920166  -334.453369    0.500000  -400.101074        0.0   65.647705       65.647705     5.0      -800.101074             0.0         False
5    -334.453369    -400.078369  3580.272461  -334.453369    0.500000  -400.078369        0.0   65.625000        0.000000     6.0      -800.101074             0.0         False
6    -334.453369    -334.453369  3613.567871  -334.453369    0.500000  -334.453369        0.0    0.000000      -66.704590     7.0      -800.101074             0.0         False
7    -202.123779    -267.748779  3647.942871  -202.123779  132.329590  -267.748779        0.0   65.625000        0.000000     1.0      -800.101074             1.0          True
8    -202.123779    -202.123779  3682.317871  -202.123779    0.500000  -202.123779        0.0    0.000000      -65.625000     2.0      -202.123779             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:37:38]  --------------------------------------------------------------------------------
[08/23 16:37:38]  Iteration: 139 (45 solution, 93 counterexamples)
[08/23 16:37:43]  Generator returned sat in 2.356314 secs.
[08/23 16:37:43]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:37:44]  Improved gap from 0.02264404296875 to 0
[08/23 16:37:44]  Improved number of small numbers from 50 to 110 out of a max of 110
[08/23 16:37:44]  Verifer returned sat in 1.524415 secs.
[08/23 16:37:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     285.882080      85.859619  3649.899902   285.882080  200.022705    85.859619        0.0  200.022461      100.022461     7.0        85.859619            -1.0            -1
1     285.882080     285.859375  3649.899902   285.882080  200.000000   285.859375        0.0    0.022705        0.022461     7.0       285.882080             1.0         False
2     585.904785     285.882324  3649.899902   585.904785  300.045410   285.882324        0.0  300.022461      200.045166     1.0       285.882080             1.0         False
3     585.904785     485.859619  3649.899902   585.904785    0.499756   485.859619        0.0  100.045166      100.045166     2.0       585.904785             0.0         False
4     585.904785     485.882080  3649.899902   585.904785    0.500000   485.882080        0.0  100.022705        0.045166     3.0       585.904785             0.0         False
5     585.904785     585.859619  3749.854492   585.904785    0.500000   585.859619        0.0    0.045166       -0.000244     4.0       585.904785             0.0         False
6     586.359619     585.905029  3849.399902   586.359619    0.500000   585.905029        0.0    0.454590        0.000000     1.0       585.904785             1.0         False
7     586.405029     586.382324  3949.354492   586.405029    0.500000   586.382324        0.0    0.022705        0.000000     1.0       585.904785             0.0         False
8     586.882324     586.405029  4048.877197   586.882324    0.500000   586.405029        0.0    0.477295        0.000000     2.0       585.904785             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:37:45]  --------------------------------------------------------------------------------
[08/23 16:37:45]  Iteration: 140 (45 solution, 94 counterexamples)
[08/23 16:37:51]  Generator returned sat in 4.024737 secs.
[08/23 16:37:52]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:37:58]  Improved gap from 0.47723388671875 to 32.8125
[08/23 16:37:58]  Improved number of small numbers from 60 to 110 out of a max of 110
[08/23 16:37:58]  Verifer returned sat in 6.802099 secs.
[08/23 16:37:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    1399.920166    1399.874756  3468.706055  1399.920166    0.045410  1399.874756        0.0   0.045410        0.045410     3.0      1399.874756            -1.0            -1
1    1399.920166    1399.874756  3535.893555  1399.920166    0.022461  1399.874756        0.0   0.045410      -32.767090     3.0      1399.920166             1.0         False
2    1465.499756    1432.687256  3603.081055  1465.499756   65.625000  1432.687256        0.0  32.812500        0.000000     1.0      1399.920166             1.0         False
3    1498.312256    1465.499756  3670.268555  1498.312256   65.625000  1465.499756        0.0  32.812500        0.000000     2.0      1399.920166             0.0         False
4    1533.124756    1498.312256  3735.456055  1533.124756   67.625000  1498.312256        0.0  34.812500        0.000000     2.0      1399.920166             1.0          True
5    1583.343506    1533.124756  3785.237305  1583.343506   85.031250  1533.124756        0.0  50.218750        0.000000     2.0      1399.920166             1.0          True
6    1627.859131    1583.343506  3840.721436  1627.859131   94.734375  1583.343506        0.0  44.515625       -0.000244     2.0      1399.920166             1.0          True
7    1691.632568    1627.882080  3876.948242  1691.632568  108.289062  1627.882080        0.0  63.750488        0.000000     1.0      1399.920166             1.0          True
8    1691.632568    1691.632568  3876.948242  1691.632568    2.000000  1691.632568        0.0   0.000000     -100.000000     2.0      1691.632568             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:37:59]  --------------------------------------------------------------------------------
[08/23 16:37:59]  Iteration: 141 (45 solution, 95 counterexamples)
[08/23 16:38:06]  Generator returned sat in 4.572273 secs.
[08/23 16:38:06]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:38:08]  Improved gap from 0.045166015625 to 1.5625
[08/23 16:38:08]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:38:08]  Verifer returned sat in 1.807537 secs.
[08/23 16:38:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    1585.934570    1384.372070  3483.680908  1585.934570    0.045166  1384.372070        0.0  201.562500      201.562500     5.0      1384.372070            -1.0            -1
1    1585.934570    1384.719238  3483.680908  1585.934570    1.517334  1384.719238        0.0  201.215332      101.562500     6.0      1384.372070             1.0         False
2    1585.934570    1584.372070  3483.680908  1585.934570    1.517334  1584.372070        0.0    1.562500        1.562500     4.0      1384.372070             1.0          True
3    1585.934570    1584.372070  3582.118408  1585.934570    1.517334  1584.372070        0.0    1.562500        0.000000     4.0      1384.372070             1.0          True
4    1586.372070    1585.934570  3680.555908  1586.372070    2.000000  1585.934570        0.0    0.437500       -1.125000     5.0      1384.372070             1.0         False
5    1689.542236    1587.497070  3680.555908  1689.542236  103.607666  1587.497070        0.0  102.045166        2.045166     1.0      1384.372070             1.0          True
6    1689.542236    1687.497070  3778.510742  1689.542236    2.000000  1687.497070        0.0    2.045166        0.000000     2.0      1689.542236             0.0         False
7    1689.542236    1689.542236  3876.948242  1689.542236    2.000000  1689.542236        0.0    0.000000       -1.562500     3.0      1689.542236             0.0         False
8    1691.542236    1691.542236  3876.948242  1691.542236    2.000000  1691.542236        0.0    0.000000      -99.562500     1.0      1689.542236             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:38:08]  --------------------------------------------------------------------------------
[08/23 16:38:08]  Iteration: 142 (45 solution, 96 counterexamples)
[08/23 16:38:14]  Generator returned sat in 3.029703 secs.
[08/23 16:38:14]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:38:17]  Improved gap from 0.585205078125 to 12.5
[08/23 16:38:17]  Improved number of small numbers from 54 to 110 out of a max of 110
[08/23 16:38:17]  Verifer returned sat in 2.932700 secs.
[08/23 16:38:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    1824.890137    1373.074951  3494.977539  1824.890137    0.045166  1373.074951        0.0  451.815186      451.815186     6.0      1373.074951            -1.0            -1
1    1824.890137    1473.074951  3494.977539  1824.890137    1.999756  1473.074951        0.0  351.815186      351.815186     6.0      1373.074951             1.0         False
2    1824.890137    1539.895020  3494.977539  1824.890137    1.999756  1539.895020        0.0  284.995117      251.815186     7.0      1373.074951             1.0          True
3    1824.890137    1670.250488  3494.977539  1824.890137    1.999756  1670.250488        0.0  154.639648      151.815186     4.0      1373.074951             1.0          True
4    1824.890137    1706.255127  3494.977539  1824.890137    2.000000  1706.255127        0.0  118.635010       51.815186     5.0      1373.074951             0.0         False
5    1824.890137    1773.075195  3543.162354  1824.890137  118.590088  1773.075195        0.0   51.814941        0.000000     6.0      1373.074951             1.0          True
6    1891.665283    1824.890137  3576.342529  1891.665283  118.590088  1824.890137        0.0   66.775146       -0.044678     7.0      1373.074951             1.0          True
7    1904.209961    1891.709961  3663.842529  1904.209961   79.319824  1891.709961        0.0   12.500000        0.000000     1.0      1904.209961             1.0          True
8    1904.209961    1904.209961  3663.842529  1904.209961    2.000000  1904.209961        0.0    0.000000     -100.000000     2.0      1904.209961             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:38:18]  --------------------------------------------------------------------------------
[08/23 16:38:18]  Iteration: 143 (45 solution, 97 counterexamples)
[08/23 16:38:29]  Generator returned sat in 9.170214 secs.
[08/23 16:38:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:31]  Improved gap from 0.0 to 39.0625
[08/23 16:38:32]  Improved number of small numbers from 92 to 106 out of a max of 110
[08/23 16:38:32]  Verifer returned sat in 2.029097 secs.
[08/23 16:38:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    1975.804688    1857.481934  2992.202881  1975.804688    0.045166  1857.481934        0.0  118.322754       99.955078     8.0      1857.481934            -1.0            -1
1    1975.804688    1975.759521  2992.202881  1975.804688    0.045166  1975.759521        0.0    0.045166       -0.044922     6.0      1857.481934             1.0         False
2    2014.912109    1975.849609  3053.140381  2014.912109   39.152588  1975.849609        0.0   39.062500        0.000000     1.0      1857.481934             1.0          True
3    2055.064697    2014.912109  3112.987793  2055.064697   79.215088  2014.912109        0.0   40.152588        0.000000     2.0      1857.481934             0.0         False
4    2094.127197    2055.064697  3173.880371  2094.127197   79.215088  2055.064697        0.0   39.062500       -0.044922     2.0      1857.481934             1.0          True
5    2095.217285    2094.172241  3234.817627  2095.217285   40.152588  2094.172241        0.0    1.045044      -38.017578     1.0      2095.217285             1.0          True
6    2212.494873    2133.943359  3255.557617  2212.494873  118.322632  2133.943359        0.0   78.551514        0.000000     1.0      2095.217285             0.0         False
7    2252.974609    2212.494873  3315.032715  2252.974609  119.031250  2212.494873        0.0   40.479736       -0.045166     2.0      2095.217285             0.0         False
8    2291.709961    2253.019775  3315.032959  2291.709961   79.215088  2253.019775        0.0   38.690186      -61.309570     1.0      2291.709961             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:38:32]  --------------------------------------------------------------------------------
[08/23 16:38:32]  Iteration: 144 (45 solution, 98 counterexamples)
[08/23 16:38:36]  Generator returned sat in 1.482425 secs.
[08/23 16:38:36]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:39]  Improved gap from 36.485799153645836 to 37.5
[08/23 16:38:39]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:38:39]  Verifer returned sat in 2.943676 secs.
[08/23 16:38:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    2487.385986    2365.750977  2541.297363  2487.385986    0.044678  2365.750977        0.0  121.635010       98.724854     8.0      2365.750977            -1.0            -1
1    2487.385986    2487.340820  2541.297363  2487.385986   38.820312  2487.340820        0.0    0.045166       -1.275146     3.0      2365.750977             1.0         False
2    2526.161133    2488.661133  2603.797363  2526.161133   38.820312  2488.661133        0.0   37.500000        0.000000     1.0      2365.750977             1.0          True
3    2566.661133    2526.161133  2663.297363  2566.661133   78.000000  2526.161133        0.0   40.500000        0.000000     2.0      2365.750977             0.0         False
4    2607.866211    2566.661133  2722.092285  2607.866211   81.705078  2566.661133        0.0   41.205078        0.000000     2.0      2365.750977             1.0          True
5    2607.866211    2607.866211  2784.592285  2607.866211   41.160156  2607.866211        0.0    0.000000      -37.500000     2.0      2607.866211             1.0          True
6    2727.071289    2645.366211  2802.887207  2727.071289  119.205078  2645.366211        0.0   81.705078        0.000000     1.0      2607.866211             1.0         False
7    2764.571289    2727.071289  2865.386963  2764.571289  119.205078  2727.071289        0.0   37.500000       -0.000244     2.0      2607.866211             0.0         False
8    2808.776367    2764.616211  2865.386963  2808.776367   81.705078  2764.616211        0.0   44.160156      -55.795166     1.0      2808.776367             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:38:40]  --------------------------------------------------------------------------------
[08/23 16:38:40]  Iteration: 145 (45 solution, 99 counterexamples)
[08/23 16:38:47]  Generator returned sat in 4.849112 secs.
[08/23 16:38:47]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:48]  Verifer returned unsat in 0.708345 secs.
[08/23 16:38:48]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:48]  --------------------------------------------------------------------------------
[08/23 16:38:48]  Iteration: 146 (46 solution, 99 counterexamples)
[08/23 16:38:52]  Generator returned sat in 1.473249 secs.
[08/23 16:38:52]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:53]  Verifer returned unsat in 0.396008 secs.
[08/23 16:38:53]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:53]  --------------------------------------------------------------------------------
[08/23 16:38:53]  Iteration: 147 (47 solution, 99 counterexamples)
[08/23 16:38:57]  Generator returned sat in 1.413548 secs.
[08/23 16:38:57]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:57]  Verifer returned unsat in 0.316287 secs.
[08/23 16:38:57]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:38:57]  --------------------------------------------------------------------------------
[08/23 16:38:57]  Iteration: 148 (48 solution, 99 counterexamples)
[08/23 16:39:01]  Generator returned sat in 1.379488 secs.
[08/23 16:39:01]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:02]  Verifer returned unsat in 0.455685 secs.
[08/23 16:39:02]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:02]  --------------------------------------------------------------------------------
[08/23 16:39:02]  Iteration: 149 (49 solution, 99 counterexamples)
[08/23 16:39:07]  Generator returned sat in 2.438741 secs.
[08/23 16:39:07]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:08]  Improved gap from 2.0 to 1.5625
[08/23 16:39:08]  Improved number of small numbers from 75 to 110 out of a max of 110
[08/23 16:39:08]  Verifer returned sat in 0.813937 secs.
[08/23 16:39:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    2707.955811    2205.910889  2724.047363  2707.955811  0.044678  2205.910889        0.0  502.044922      502.044922     6.0      2205.910889            -1.0            -1
1    2707.955811    2205.910889  2724.047363  2707.955811  0.044678  2205.910889        0.0  502.044922      402.044922     6.0      2205.910889             1.0         False
2    2707.955811    2405.910889  2724.047363  2707.955811  0.044678  2405.910889        0.0  302.044922      302.044922     7.0      2205.910889             1.0         False
3    2707.955811    2505.910889  2724.047363  2707.955811  2.000000  2505.910889        0.0  202.044922      202.044922     6.0      2205.910889             1.0          True
4    2707.955811    2511.563232  2724.047363  2707.955811  2.000000  2511.563232        0.0  196.392578      102.044922     6.0      2205.910889             1.0          True
5    2707.955811    2605.911133  2724.047363  2707.955811  2.000000  2605.911133        0.0  102.044678        2.044922     6.0      2205.910889             1.0          True
6    2707.955811    2705.910889  2822.002441  2707.955811  2.000000  2705.910889        0.0    2.044922        0.000000     7.0      2205.910889             1.0          True
7    2707.955811    2707.955811  2920.439941  2707.955811  2.000000  2707.955811        0.0    0.000000       -1.562500     8.0      2205.910889             1.0          True
8    2709.955811    2709.518311  2920.439941  2709.955811  2.000000  2709.518311        0.0    0.437500      -99.562500     1.0      2205.910889             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:39:08]  --------------------------------------------------------------------------------
[08/23 16:39:08]  Iteration: 150 (49 solution, 100 counterexamples)
[08/23 16:39:14]  Generator returned sat in 2.664225 secs.
[08/23 16:39:14]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:15]  Verifer returned unsat in 0.564955 secs.
[08/23 16:39:15]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:15]  --------------------------------------------------------------------------------
[08/23 16:39:15]  Iteration: 151 (50 solution, 100 counterexamples)
[08/23 16:39:19]  Generator returned sat in 1.385637 secs.
[08/23 16:39:19]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:19]  Verifer returned unsat in 0.679964 secs.
[08/23 16:39:19]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:19]  --------------------------------------------------------------------------------
[08/23 16:39:19]  Iteration: 152 (51 solution, 100 counterexamples)
[08/23 16:39:24]  Generator returned sat in 1.518219 secs.
[08/23 16:39:24]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:25]  Verifer returned unsat in 1.079149 secs.
[08/23 16:39:25]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:25]  --------------------------------------------------------------------------------
[08/23 16:39:25]  Iteration: 153 (52 solution, 100 counterexamples)
[08/23 16:39:29]  Generator returned sat in 1.426622 secs.
[08/23 16:39:29]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:30]  Verifer returned unsat in 1.117408 secs.
[08/23 16:39:30]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:30]  --------------------------------------------------------------------------------
[08/23 16:39:30]  Iteration: 154 (53 solution, 100 counterexamples)
[08/23 16:39:34]  Generator returned sat in 1.482328 secs.
[08/23 16:39:34]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:36]  Improved gap from 0.044677734375 to 3.125
[08/23 16:39:36]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:39:36]  Verifer returned sat in 1.522154 secs.
[08/23 16:39:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    1067.258545     563.213867  2880.013428  1067.258545  0.044434   563.213867        0.0  504.044678      504.044678     8.0       563.213867            -1.0            -1
1    1067.258545     563.213867  2880.013428  1067.258545  0.044434   563.213867        0.0  504.044678      404.044678     8.0       563.213867             0.0         False
2    1067.258545     763.213867  2880.013428  1067.258545  0.044434   763.213867        0.0  304.044678      304.044678     9.0       563.213867             0.0         False
3    1067.258545     763.258301  2880.013428  1067.258545  4.000000   763.258301        0.0  304.000244      204.044678     9.0       563.213867             1.0          True
4    1067.258545     963.213623  2880.013428  1067.258545  4.000000   963.213623        0.0  104.044922      104.044678     9.0       563.213867             1.0          True
5    1067.258545     963.258301  2880.013428  1067.258545  4.000000   963.258301        0.0  104.000244        4.044678     9.0       563.213867             1.0          True
6    1067.258545    1063.213867  2975.968750  1067.258545  4.000000  1063.213867        0.0    4.044678        0.000000     9.0       563.213867             1.0          True
7    1067.258545    1067.258545  3072.843750  1067.258545  4.000000  1067.258545        0.0    0.000000       -3.125000     9.0       563.213867             1.0          True
8    1071.258545    1070.383545  3072.843750  1071.258545  4.000000  1070.383545        0.0    0.875000      -99.125000     1.0       563.213867             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:39:36]  --------------------------------------------------------------------------------
[08/23 16:39:36]  Iteration: 155 (53 solution, 101 counterexamples)
[08/23 16:39:41]  Generator returned sat in 1.642691 secs.
[08/23 16:39:41]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:42]  Improved number of small numbers from 49 to 109 out of a max of 109
[08/23 16:39:42]  Verifer returned sat in 0.880091 secs.
[08/23 16:39:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    1311.158203     711.135742  3072.84375  1311.158203    0.022217   711.135742        0.0  600.022461      600.022461     7.0       711.135742            -1.0            -1
1    1311.158203     711.135742  3072.84375  1311.158203    0.022217   711.135742        0.0  600.022461      500.022461     7.0       711.135742             0.0         False
2    1311.158203     811.135742  3072.84375  1311.158203    0.022461   811.135742        0.0  500.022461      400.022461     8.0       711.135742             0.0         False
3    1311.158203     911.135742  3072.84375  1311.158203    0.022461   911.135742        0.0  400.022461      300.022461     9.0       711.135742             0.0         False
4    1311.158203    1011.135742  3072.84375  1311.158203  102.011230  1011.135742        0.0  300.022461      200.022461     9.0       711.135742             1.0          True
5    1311.158203    1207.225098  3072.84375  1311.158203  203.005615  1207.225098        0.0  103.933105      100.022461     8.0       711.135742             1.0          True
6    1603.314453    1311.135742  3072.84375  1603.314453  396.089355  1311.135742        0.0  292.178711      292.178711     9.0       711.135742             0.0         False
7    1711.180420    1311.157959  3072.84375  1711.180420  400.044678  1311.157959        0.0  400.022461      300.044678     9.0       711.135742             1.0          True
8    1711.180420    1511.135742  3072.84375  1711.180420  352.033447  1511.135742        0.0  200.044678      200.044678     3.0      1711.180420             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:39:42]  --------------------------------------------------------------------------------
[08/23 16:39:42]  Iteration: 156 (53 solution, 102 counterexamples)
[08/23 16:39:48]  Generator returned sat in 3.021874 secs.
[08/23 16:39:48]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:49]  Verifer returned unsat in 0.486714 secs.
[08/23 16:39:49]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:49]  --------------------------------------------------------------------------------
[08/23 16:39:49]  Iteration: 157 (54 solution, 102 counterexamples)
[08/23 16:39:53]  Generator returned sat in 1.469257 secs.
[08/23 16:39:53]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:53]  Verifer returned unsat in 0.342227 secs.
[08/23 16:39:53]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:53]  --------------------------------------------------------------------------------
[08/23 16:39:53]  Iteration: 158 (55 solution, 102 counterexamples)
[08/23 16:39:57]  Generator returned sat in 1.512614 secs.
[08/23 16:39:58]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:58]  Verifer returned unsat in 0.429653 secs.
[08/23 16:39:58]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:39:58]  --------------------------------------------------------------------------------
[08/23 16:39:58]  Iteration: 159 (56 solution, 102 counterexamples)
[08/23 16:40:02]  Generator returned sat in 1.471044 secs.
[08/23 16:40:02]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:03]  Verifer returned unsat in 0.505632 secs.
[08/23 16:40:03]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:03]  --------------------------------------------------------------------------------
[08/23 16:40:03]  Iteration: 160 (57 solution, 102 counterexamples)
[08/23 16:40:07]  Generator returned sat in 1.462182 secs.
[08/23 16:40:07]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:08]  Verifer returned unsat in 0.663153 secs.
[08/23 16:40:08]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:08]  --------------------------------------------------------------------------------
[08/23 16:40:08]  Iteration: 161 (58 solution, 102 counterexamples)
[08/23 16:40:12]  Generator returned sat in 1.468833 secs.
[08/23 16:40:12]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:13]  Verifer returned unsat in 0.415382 secs.
[08/23 16:40:13]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:13]  --------------------------------------------------------------------------------
[08/23 16:40:13]  Iteration: 162 (59 solution, 102 counterexamples)
[08/23 16:40:17]  Generator returned sat in 1.517015 secs.
[08/23 16:40:17]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:17]  Improved number of small numbers from 59 to 109 out of a max of 109
[08/23 16:40:17]  Verifer returned sat in 0.417132 secs.
[08/23 16:40:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    2007.824707    1407.780029  3072.843506  2007.824707    0.044434  1407.780029        0.0  600.044678      600.044678     6.0      1407.780029            -1.0            -1
1    2007.824707    1507.780029  3072.843506  2007.824707  199.000000  1507.780029        0.0  500.044678      500.044678     6.0      1407.780029             0.0         False
2    2007.824707    1507.780029  3072.843506  2007.824707  199.000000  1507.780029        0.0  500.044678      400.044678     6.0      1407.780029             0.0         False
3    2007.824707    1607.780029  3072.843506  2007.824707  199.000000  1607.780029        0.0  400.044678      300.044678     7.0      1407.780029             0.0         False
4    2007.824707    1707.780029  3072.843506  2007.824707  200.000000  1707.780029        0.0  300.044678      200.044678     6.0      1407.780029             1.0          True
5    2007.824707    1906.958252  3072.843506  2007.824707  200.000000  1906.958252        0.0  100.866455      100.044678     6.0      1407.780029             0.0         False
6    2306.136475    2007.780029  3072.843506  2306.136475  399.178223  2007.780029        0.0  298.356445      298.356445     7.0      1407.780029             0.0         False
7    2407.869141    2007.824707  3072.843506  2407.869141  400.089111  2007.824707        0.0  400.044434      300.089111     8.0      1407.780029             1.0          True
8    2407.869141    2207.779785  3072.843506  2407.869141  350.566895  2207.779785        0.0  200.089355      200.089111     3.0      2407.869141             1.0          True
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:40:18]  --------------------------------------------------------------------------------
[08/23 16:40:18]  Iteration: 163 (59 solution, 103 counterexamples)
[08/23 16:40:22]  Generator returned sat in 1.692924 secs.
[08/23 16:40:22]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:23]  Improved gap from 0.0 to 1.5625
[08/23 16:40:23]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 16:40:23]  Verifer returned sat in 0.728424 secs.
[08/23 16:40:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    2011.916016    1509.960449  2974.799072  2011.916016  0.044434  1509.960449        0.0  501.955566      501.955566     6.0      1509.960449            -1.0            -1
1    2011.916016    1510.004883  2974.799072  2011.916016  0.044434  1510.004883        0.0  501.911133      401.955566     6.0      1509.960449             0.0         False
2    2011.916016    1709.916016  2974.799072  2011.916016  0.044434  1709.916016        0.0  302.000000      301.955566     6.0      1509.960449             0.0         False
3    2011.916016    1709.960449  2974.799072  2011.916016  2.000000  1709.960449        0.0  301.955566      201.955566     7.0      1509.960449             0.0         False
4    2011.916016    1909.960449  2974.799072  2011.916016  2.000000  1909.960449        0.0  101.955566      101.955566     8.0      1509.960449             1.0          True
5    2011.916016    1910.004883  2974.799072  2011.916016  2.000000  1910.004883        0.0  101.911133        1.955566     8.0      1509.960449             1.0          True
6    2011.916016    2009.960449  3072.843506  2011.916016  2.000000  2009.960449        0.0    1.955566        0.000000     8.0      1509.960449             1.0          True
7    2011.960449    2011.916016  3170.843506  2011.960449  2.000000  2011.916016        0.0    0.044434       -1.955566     8.0      1509.960449             1.0          True
8    2013.916016    2013.916016  3170.843506  2013.916016  2.000000  2013.916016        0.0    0.000000     -100.000000     1.0      1509.960449             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:40:24]  --------------------------------------------------------------------------------
[08/23 16:40:24]  Iteration: 164 (59 solution, 104 counterexamples)
[08/23 16:40:30]  Generator returned sat in 3.796279 secs.
[08/23 16:40:30]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:33]  Improved gap from 1.95556640625 to 1.5625
[08/23 16:40:33]  Improved number of small numbers from 55 to 110 out of a max of 110
[08/23 16:40:33]  Verifer returned sat in 2.630117 secs.
[08/23 16:40:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     2200.67749    1604.284424  3174.833496   2200.67749  0.044189  1604.284424        0.0  596.393066      596.392822     7.0      1604.284424            -1.0            -1
1     2200.67749    1704.284668  3174.833496   2200.67749  0.044189  1704.284668        0.0  496.392822      496.392822     8.0      1604.284424             0.0         False
2     2200.67749    1704.284668  3174.833496   2200.67749  2.000000  1704.284668        0.0  496.392822      396.392822     8.0      1604.284424             0.0         False
3     2200.67749    1904.284668  3174.833496   2200.67749  2.000000  1904.284668        0.0  296.392822      296.392822     9.0      1604.284424             0.0         False
4     2200.67749    2004.284424  3174.833496   2200.67749  2.000000  2004.284424        0.0  196.393066      196.392822     9.0      1604.284424             1.0          True
5     2200.67749    2004.329102  3174.833496   2200.67749  2.000000  2004.329102        0.0  196.348389       96.392822     9.0      1604.284424             1.0          True
6     2200.67749    2104.284668  3178.440674   2200.67749  2.000000  2104.284668        0.0   96.392822        0.000000     9.0      1604.284424             1.0          True
7     2200.67749    2200.677490  3276.877930   2200.67749  2.000000  2200.677490        0.0    0.000000       -1.562744     9.0      1604.284424             1.0          True
8     2202.67749    2202.240234  3276.877930   2202.67749  2.000000  2202.240234        0.0    0.437256      -99.562744     1.0      1604.284424             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:40:33]  --------------------------------------------------------------------------------
[08/23 16:40:33]  Iteration: 165 (59 solution, 105 counterexamples)
[08/23 16:40:39]  Generator returned sat in 2.695599 secs.
[08/23 16:40:39]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:40]  Verifer returned unsat in 0.544697 secs.
[08/23 16:40:40]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:40]  --------------------------------------------------------------------------------
[08/23 16:40:40]  Iteration: 166 (60 solution, 105 counterexamples)
[08/23 16:40:44]  Generator returned sat in 2.160585 secs.
[08/23 16:40:45]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:45]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/23 16:40:45]  Verifer returned sat in 0.252399 secs.
[08/23 16:40:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    2604.328857    2104.284424  3178.440674  2604.328857    0.044434  2104.284424        0.0  500.044434      500.044434     7.0      2104.284424            -1.0            -1
1    2604.328857    2104.284424  3178.440674  2604.328857    0.044434  2104.284424        0.0  500.044434      400.044434     7.0      2104.284424             0.0         False
2    2604.328857    2206.084473  3178.440674  2604.328857    0.044434  2206.084473        0.0  398.244385      300.044434     8.0      2104.284424             0.0         False
3    2604.328857    2304.284424  3178.440674  2604.328857  202.000000  2304.284424        0.0  300.044434      200.044434     9.0      2104.284424             0.0         False
4    2604.328857    2504.262207  3178.440674  2604.328857  202.000000  2504.262207        0.0  100.066650      100.044434     8.0      2104.284424             1.0          True
5    2904.239990    2604.284424  3178.440674  2904.239990  399.977783  2604.284424        0.0  299.955566      299.955566     9.0      2104.284424             0.0         False
6    3004.373291    2604.328857  3178.440674  3004.373291  400.088867  2604.328857        0.0  400.044434      300.088867     9.0      2104.284424             1.0          True
7    3004.373291    2704.284424  3178.440674  3004.373291  351.066650  2704.284424        0.0  300.088867      200.088867     3.0      3004.373291             1.0          True
8    3004.373291    2904.284424  3178.440674  3004.373291  200.022217  2904.284424        0.0  100.088867      100.088867     3.0      3004.373291             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:40:45]  --------------------------------------------------------------------------------
[08/23 16:40:45]  Iteration: 167 (60 solution, 106 counterexamples)
[08/23 16:40:51]  Generator returned sat in 3.355969 secs.
[08/23 16:40:52]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:40:53]  Improved gap from 0.0 to 1.5625
[08/23 16:40:53]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:40:53]  Verifer returned sat in 1.354888 secs.
[08/23 16:40:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    3001.373291    2499.810791  3178.44043  3001.373291  0.044434  2499.810791        0.0  501.562500        501.5625     9.0      2499.810791            -1.0            -1
1    3001.373291    2599.810791  3178.44043  3001.373291  3.000000  2599.810791        0.0  401.562500        401.5625     4.0      2499.810791             1.0         False
2    3001.373291    2699.810791  3178.44043  3001.373291  3.000000  2699.810791        0.0  301.562500        301.5625     5.0      2499.810791             0.0         False
3    3001.373291    2799.810791  3178.44043  3001.373291  3.000000  2799.810791        0.0  201.562500        201.5625     6.0      2499.810791             0.0         False
4    3001.373291    2899.810791  3178.44043  3001.373291  3.000000  2899.810791        0.0  101.562500        101.5625     7.0      2499.810791             1.0          True
5    3001.373291    2998.328857  3178.44043  3001.373291  3.000000  2998.328857        0.0    3.044434          1.5625     7.0      2499.810791             1.0          True
6    3001.373291    2999.810791  3276.87793  3001.373291  3.000000  2999.810791        0.0    1.562500          0.0000     7.0      2499.810791             1.0          True
7    3002.810791    3001.373291  3373.87793  3002.810791  3.000000  3001.373291        0.0    1.437500         -1.5625     8.0      2499.810791             1.0          True
8    3004.373291    3004.373291  3373.87793  3004.373291  3.000000  3004.373291        0.0    0.000000       -100.0000     1.0      2499.810791             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:40:53]  --------------------------------------------------------------------------------
[08/23 16:40:53]  Iteration: 168 (60 solution, 107 counterexamples)
[08/23 16:40:59]  Generator returned sat in 2.712183 secs.
[08/23 16:40:59]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:01]  Improved gap from 1.5625 to 1.5625
[08/23 16:41:02]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/23 16:41:02]  Verifer returned sat in 2.455055 secs.
[08/23 16:41:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    5535.034668    4938.641602  833.476562  5535.034668  0.044189  4938.641602        0.0  596.393066      596.393066     9.0      4938.641602            -1.0            -1
1    5535.034668    5038.597412  833.476562  5535.034668  0.044434  5038.597412        0.0  496.437256      496.393066     5.0      4938.641602             1.0         False
2    5535.034668    5038.641602  833.476562  5535.034668  0.044434  5038.641602        0.0  496.393066      396.393066     6.0      4938.641602             0.0         False
3    5535.034668    5138.641602  833.476562  5535.034668  3.000000  5138.641602        0.0  396.393066      296.393066     7.0      4938.641602             0.0         False
4    5535.034668    5338.641357  833.476562  5535.034668  3.000000  5338.641357        0.0  196.393311      196.393066     8.0      4938.641602             1.0          True
5    5535.034668    5338.686035  833.476562  5535.034668  3.000000  5338.686035        0.0  196.348633       96.393066     8.0      4938.641602             1.0          True
6    5535.034668    5438.641602  837.083496  5535.034668  3.000000  5438.641602        0.0   96.393066        0.000000     8.0      4938.641602             1.0          True
7    5535.034668    5535.034668  935.520752  5535.034668  3.000000  5535.034668        0.0    0.000000       -1.562744     8.0      4938.641602             1.0          True
8    5538.034668    5536.597412  935.520752  5538.034668  3.000000  5536.597412        0.0    1.437256      -98.562744     1.0      4938.641602             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:41:02]  --------------------------------------------------------------------------------
[08/23 16:41:02]  Iteration: 169 (60 solution, 108 counterexamples)
[08/23 16:41:07]  Generator returned sat in 2.015296 secs.
[08/23 16:41:07]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:10]  Improved gap from 1.0 to 0
[08/23 16:41:10]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 16:41:10]  Verifer returned sat in 2.848366 secs.
[08/23 16:41:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    4422.181152    3824.269531  833.432373  4422.181152  0.044189  3824.269531        0.0  597.911621      597.911621     9.0      3824.269531            -1.0            -1
1    4422.181152    3824.269531  833.432373  4422.181152  0.044189  3824.269531        0.0  597.911621      497.911621     9.0      3824.269531             1.0         False
2    4422.181152    4024.269531  833.432373  4422.181152  0.044189  4024.269531        0.0  397.911621      397.911621     9.0      3824.269531             1.0         False
3    4422.181152    4124.269531  833.432373  4422.181152  1.000000  4124.269531        0.0  297.911621      297.911621     9.0      3824.269531             1.0          True
4    4422.181152    4224.269531  833.432373  4422.181152  1.000000  4224.269531        0.0  197.911621      197.911621     9.0      3824.269531             1.0          True
5    4422.181152    4224.313721  833.432373  4422.181152  1.000000  4224.313721        0.0  197.867432       97.911621     9.0      3824.269531             1.0          True
6    4422.181152    4421.136963  835.520752  4422.181152  1.000000  4421.136963        0.0    1.044189        0.000000     9.0      3824.269531             1.0          True
7    4422.181152    4422.181152  935.520752  4422.181152  1.000000  4422.181152        0.0    0.000000        0.000000     9.0      3824.269531             1.0          True
8    4423.181152    4422.225342  935.520752  4423.181152  1.000000  4422.225342        0.0    0.955811      -99.000000     1.0      3824.269531             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:41:10]  --------------------------------------------------------------------------------
[08/23 16:41:10]  Iteration: 170 (60 solution, 109 counterexamples)
[08/23 16:41:17]  Generator returned sat in 3.492170 secs.
[08/23 16:41:17]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:17]  Verifer returned unsat in 0.405208 secs.
[08/23 16:41:17]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:17]  --------------------------------------------------------------------------------
[08/23 16:41:17]  Iteration: 171 (61 solution, 109 counterexamples)
[08/23 16:41:22]  Generator returned sat in 1.735131 secs.
[08/23 16:41:22]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:24]  Improved gap from 0.0440673828125 to 1.5625
[08/23 16:41:24]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/23 16:41:24]  Verifer returned sat in 1.723822 secs.
[08/23 16:41:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    4019.601807    3516.645996 -657.822266  4019.601807  0.044189  3516.645996        0.0  502.955811      502.955811     6.0      3516.645996            -1.0            -1
1    4019.601807    3616.645752 -657.822266  4019.601807  0.044189  3616.645752        0.0  402.956055      402.955811     7.0      3516.645996             0.0         False
2    4019.601807    3716.645752 -657.822266  4019.601807  0.044189  3716.645752        0.0  302.956055      302.955811     7.0      3516.645996             0.0         False
3    4019.601807    3816.645996 -657.822266  4019.601807  3.000000  3816.645996        0.0  202.955811      202.955811     8.0      3516.645996             0.0         False
4    4019.601807    3823.208496 -657.822266  4019.601807  3.000000  3823.208496        0.0  196.393311      102.955811     9.0      3516.645996             1.0          True
5    4019.601807    4016.601807 -657.822266  4019.601807  3.000000  4016.601807        0.0    3.000000        2.955811     9.0      3516.645996             1.0          True
6    4019.601807    4016.645996 -560.778076  4019.601807  3.000000  4016.645996        0.0    2.955811        0.000000     9.0      3516.645996             1.0          True
7    4019.645996    4019.601807 -462.340576  4019.645996  3.000000  4019.601807        0.0    0.044189       -1.518311     9.0      3516.645996             1.0          True
8    4022.601807    4021.164307 -462.340576  4022.601807  3.000000  4021.164307        0.0    1.437500      -98.562500     1.0      3516.645996             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:41:24]  --------------------------------------------------------------------------------
[08/23 16:41:24]  Iteration: 172 (61 solution, 110 counterexamples)
[08/23 16:41:30]  Generator returned sat in 3.128534 secs.
[08/23 16:41:30]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:31]  Verifer returned unsat in 0.994651 secs.
[08/23 16:41:31]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:32]  --------------------------------------------------------------------------------
[08/23 16:41:32]  Iteration: 173 (62 solution, 110 counterexamples)
[08/23 16:41:36]  Generator returned sat in 1.816428 secs.
[08/23 16:41:36]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:37]  Verifer returned unsat in 0.826016 secs.
[08/23 16:41:37]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:37]  --------------------------------------------------------------------------------
[08/23 16:41:37]  Iteration: 174 (63 solution, 110 counterexamples)
[08/23 16:41:42]  Generator returned sat in 1.728455 secs.
[08/23 16:41:42]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:43]  Improved number of small numbers from 55 to 109 out of a max of 109
[08/23 16:41:43]  Verifer returned sat in 0.856498 secs.
[08/23 16:41:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    3451.266602    2951.266602 -92.442871  3451.266602    0.043701  2951.266602        0.0  500.000000      500.000000     3.0      2951.266602            -1.0            -1
1    3451.266602    2952.046875 -92.442871  3451.266602    0.043945  2952.046875        0.0  499.219727      400.000000     3.0      2951.266602             0.0         False
2    3451.266602    3051.266602 -92.442871  3451.266602    0.043945  3051.266602        0.0  400.000000      300.000000     4.0      2951.266602             0.0         False
3    3451.266602    3201.244629 -92.442871  3451.266602  249.977783  3201.244629        0.0  250.021973      200.000000     4.0      2951.266602             0.0         False
4    3451.266602    3351.266602 -92.442871  3451.266602  249.978027  3351.266602        0.0  100.000000      100.000000     5.0      2951.266602             0.0         False
5    3750.486328    3451.222656 -92.442871  3750.486328  399.219727  3451.222656        0.0  299.263672      299.219727     6.0      2951.266602             0.0         False
6    3851.310547    3451.266602 -92.442871  3851.310547  400.087891  3451.266602        0.0  400.043945      300.043945     7.0      2951.266602             1.0          True
7    3851.310547    3601.266602 -92.442871  3851.310547  325.554932  3601.266602        0.0  250.043945      200.043945     3.0      3851.310547             1.0          True
8    3851.310547    3751.266357 -92.442871  3851.310547  250.000000  3751.266357        0.0  100.044189      100.043945     3.0      3851.310547             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:41:43]  --------------------------------------------------------------------------------
[08/23 16:41:43]  Iteration: 175 (63 solution, 111 counterexamples)
[08/23 16:41:48]  Generator returned sat in 2.011744 secs.
[08/23 16:41:49]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:49]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/23 16:41:49]  Verifer returned sat in 0.134660 secs.
[08/23 16:41:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    3451.266602    2951.266602 -92.442871  3451.266602    0.043701  2951.266602        0.0  500.000000      500.000000     6.0      2951.266602            -1.0            -1
1    3451.266602    2952.046875 -92.442871  3451.266602    0.043945  2952.046875        0.0  499.219727      400.000000     6.0      2951.266602             0.0         False
2    3451.266602    3051.266602 -92.442871  3451.266602    0.043945  3051.266602        0.0  400.000000      300.000000     6.0      2951.266602             0.0         False
3    3451.266602    3201.244629 -92.442871  3451.266602  249.977783  3201.244629        0.0  250.021973      200.000000     7.0      2951.266602             0.0         False
4    3451.266602    3351.266602 -92.442871  3451.266602  249.978027  3351.266602        0.0  100.000000      100.000000     8.0      2951.266602             0.0         False
5    3750.486328    3451.222656 -92.442871  3750.486328  399.219727  3451.222656        0.0  299.263672      299.219727     9.0      2951.266602             0.0         False
6    3851.310547    3451.266602 -92.442871  3851.310547  400.087891  3451.266602        0.0  400.043945      300.043945     9.0      2951.266602             1.0          True
7    3851.310547    3601.266602 -92.442871  3851.310547  325.554932  3601.266602        0.0  250.043945      200.043945     3.0      3851.310547             1.0          True
8    3851.310547    3751.266357 -92.442871  3851.310547  250.000000  3751.266357        0.0  100.044189      100.043945     3.0      3851.310547             0.0         False
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:41:49]  --------------------------------------------------------------------------------
[08/23 16:41:49]  Iteration: 176 (63 solution, 112 counterexamples)
[08/23 16:41:54]  Generator returned sat in 1.926596 secs.
[08/23 16:41:54]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:41:56]  Improved gap from 0.0438232421875 to 1.5625
[08/23 16:41:56]  Improved number of small numbers from 100 to 110 out of a max of 110
[08/23 16:41:56]  Verifer returned sat in 1.644405 secs.
[08/23 16:41:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    3775.383545    3273.821045  -92.442871  3775.383545  0.043701  3273.821045        0.0  501.562500      501.562500     7.0      3273.821045            -1.0            -1
1    3775.383545    3273.821045  -92.442871  3775.383545  0.043701  3273.821045        0.0  501.562500      401.562500     7.0      3273.821045             0.0         False
2    3775.383545    3473.821045  -92.442871  3775.383545  0.043701  3473.821045        0.0  301.562500      301.562500     8.0      3273.821045             0.0         False
3    3775.383545    3573.821045  -92.442871  3775.383545  3.000000  3573.821045        0.0  201.562500      201.562500     9.0      3273.821045             0.0         False
4    3775.383545    3578.990234  -92.442871  3775.383545  3.000000  3578.990234        0.0  196.393311      101.562500     9.0      3273.821045             1.0          True
5    3775.383545    3772.340088  -92.442871  3775.383545  3.000000  3772.340088        0.0    3.043457        1.562500     9.0      3273.821045             1.0          True
6    3775.383545    3773.821045    5.994629  3775.383545  3.000000  3773.821045        0.0    1.562500        0.000000     9.0      3273.821045             1.0          True
7    3776.821045    3775.383545  104.431885  3776.821045  3.000000  3775.383545        0.0    1.437500       -0.125244     9.0      3273.821045             1.0          True
8    3778.383545    3776.946289  104.432129  3778.383545  3.000000  3776.946289        0.0    1.437256      -98.562500     1.0      3273.821045             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:41:56]  --------------------------------------------------------------------------------
[08/23 16:41:56]  Iteration: 177 (63 solution, 113 counterexamples)
[08/23 16:42:01]  Generator returned unsat in 1.603554 secs.
[08/23 16:42:01]  [96mNo more solutions found[0m
[08/23 16:42:01]  Final solutions:
[08/23 16:42:01]  0: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  1: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  2: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  3: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  4: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  5: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  6: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  7: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  8: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  9: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  10: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  11: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  12: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  13: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  14: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  15: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  16: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  17: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  18: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  19: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  20: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  21: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  22: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  23: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  24: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  25: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  26: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  27: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  28: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  29: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  30: [1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  31: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  32: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  33: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  34: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  35: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  36: [1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  37: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  38: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  39: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  40: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  41: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  42: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  43: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  44: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  45: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  46: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  47: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  48: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  49: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  50: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  51: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  52: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  53: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  54: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  55: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  56: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  57: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  58: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  59: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  60: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  61: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  62: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:42:01]  Took 849.584684 secs.
