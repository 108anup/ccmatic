[01/30 14:15:30]  Namespace(infinite_buffer=False, finite_buffer=False, dynamic_buffer=True, T=9, ideal=True, app_limited=False, fix_minc=False, fix_maxc=False, optimize=False, proofs=False, solution=None)
[01/30 14:15:30]  Using cond_vars: ['min_c', 'max_c', 'min_qdel']
[01/30 14:15:31]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=4, desired_large_loss_count_bound=4, desired_loss_amount_bound_multiplier=3, desired_loss_amount_bound_alpha=3
[01/30 14:15:31]  Ideal: desired_util_f=0.5, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=4, desired_large_loss_count_bound=4, desired_loss_amount_bound_multiplier=3, desired_loss_amount_bound_alpha=3
[01/30 14:15:31]  --------------------------------------------------------------------------------
[01/30 14:15:31]  Iteration: 1 (0 solution, 0 counterexamples)
[01/30 14:15:31]  Generator returned sat in 0.005059 secs.
[01/30 14:15:31]  Candidate solution: 
[1m[94mif (0 > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (0 > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 14:15:35]  Improved number of small numbers from 135 to 135 out of a max of 135
[01/30 14:15:35]  Verifer returned sat in 3.572515 secs.
[01/30 14:15:35]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          40217.340909          40166.340909        40217.340909              1.0              1.0        40166.340909               0.0                       0.0              36.0             100.0                  0.0     51.0          -1.0       0.0
1          40236.340909          40236.340909        40236.340909          19051.0             19.0        40236.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
2          40255.340909          40255.340909        40255.340909          19000.0             19.0        40255.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
3          40274.340909          40274.340909        40274.340909          19000.0             19.0        40274.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
4          40293.340909          40293.340909        40293.340909          19000.0             19.0        40293.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
5          40312.340909          40312.340909        40312.340909          19000.0             19.0        40312.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
6          40331.340909          40331.340909        40331.340909          19000.0             19.0        40331.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
7          40350.340909          40350.340909        40350.340909          19000.0             19.0        40350.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
8          40369.340909          40369.340909        40369.340909          19000.0             19.0        40369.340909               0.0                       0.0              36.0             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=51, start_state=[0].[0m
[01/30 14:15:35]  --------------------------------------------------------------------------------
[01/30 14:15:35]  Iteration: 2 (0 solution, 1 counterexamples)
[01/30 14:15:38]  Generator returned sat in 3.316211 secs.
[01/30 14:15:38]  Candidate solution: 
[1m[94mif (+ 1/2min_c + 2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + 2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 14:15:42]  Improved number of small numbers from 59 to 59 out of a max of 135
[01/30 14:15:42]  Verifer returned sat in 3.427176 secs.
[01/30 14:15:42]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -183904.126058        -183982.349257      -183904.126058         0.999756         0.999756      -183982.349257          0.999756                  0.000000         89.888645             100.0                  0.0  77.223443          -1.0       0.0
1        -183724.348768        -183882.349257      -183724.348768    179855.512695       179.777289      -183882.349257         59.000244                  0.999756         89.888645             100.0                  0.0  99.000244           1.0       0.0
2        -183544.571479        -183782.349257      -183544.571479    179935.289985       179.777289      -183782.349257        138.777534                 59.000244         89.888645             100.0                  0.0  99.000244           1.0       0.0
3        -183364.794189        -183682.349257      -183364.794189    180015.067274       179.777289      -183682.349257        218.554823                138.777534         89.888645             100.0                  0.0  99.000244           1.0       0.0
4        -183185.016900        -183582.349257      -183185.016900    180094.844564       179.777289      -183582.349257        298.332113                218.554823         89.888645             100.0                  0.0  99.000244           1.0       0.0
5        -183005.239610        -183482.349257      -183005.239610    180174.621853       179.777289      -183482.349257        378.109402                298.332113         89.888645             100.0                  0.0  99.000244           1.0       0.0
6        -182825.462321        -183382.349257      -182825.462321    180254.399143       179.777289      -183382.349257        457.886692                378.109402         89.888645             100.0                  0.0  99.000244           1.0       0.0
7        -182645.685031        -183282.349257      -182645.685031    180334.176432       179.777289      -183282.349257        537.663981                457.886692         89.888645             100.0                  0.0  99.000244           1.0       0.0
8        -182465.907742        -183182.349257      -182465.907742    180413.953722       179.777289      -183182.349257        617.441271                537.663981         89.888645             100.0                  0.0  99.000244           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=10293185/18432, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77825/4096, buf_size=405505/4096, start_state=[0].[0m
[01/30 14:15:42]  --------------------------------------------------------------------------------
[01/30 14:15:42]  Iteration: 3 (0 solution, 2 counterexamples)
[01/30 14:15:56]  Generator returned sat in 13.667827 secs.
[01/30 14:15:56]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/30 14:16:09]  Improved number of small numbers from 99 to 135 out of a max of 135
[01/30 14:16:09]  Verifer returned sat in 12.993927 secs.
[01/30 14:16:09]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -183017.459473        -183085.459717      -183017.459473         0.999756         0.999512      -183085.459717               0.0                       0.0         63.999023             100.0                  0.0  68.000244          -1.0       1.0
1        -182985.459961        -182985.459961      -182985.459961     32067.511963        31.999512      -182985.459961               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
2        -182953.460449        -182953.460449      -182953.460449     31999.511719        31.999512      -182953.460449               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
3        -182921.460938        -182921.460938      -182921.460938     31999.511719        31.999512      -182921.460938               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
4        -182889.461426        -182889.461426      -182889.461426     31999.511719        31.999512      -182889.461426               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
5        -182857.461914        -182857.461914      -182857.461914     31999.511719        31.999512      -182857.461914               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
6        -182825.462402        -182825.462402      -182825.462402     31999.511719        31.999512      -182825.462402               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
7        -182793.462891        -182793.462891      -182793.462891     31999.511719        31.999512      -182793.462891               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
8        -182761.463379        -182761.463379      -182761.463379     31999.511719        31.999512      -182761.463379               0.0                       0.0         63.999023             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77825/4096, buf_size=278529/4096, start_state=[0].[0m
[01/30 14:16:09]  --------------------------------------------------------------------------------
[01/30 14:16:09]  Iteration: 4 (0 solution, 3 counterexamples)
[01/30 14:16:17]  Generator returned sat in 8.017389 secs.
[01/30 14:16:17]  Candidate solution: 
[1m[94mif (+ 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ -1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 14:16:18]  Improved number of small numbers from 135 to 135 out of a max of 135
[01/30 14:16:18]  Verifer returned sat in 0.487823 secs.
[01/30 14:16:18]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -183017.459473        -183040.463379      -183017.459473         0.999756         0.999512      -183040.463379               0.0                       0.0         31.999512             100.0                  0.0  23.003906          -1.0       1.0
1        -182985.459961        -182985.459961      -182985.459961     32022.515625        31.999512      -182985.459961               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
2        -182953.460449        -182953.460449      -182953.460449     31999.511719        31.999512      -182953.460449               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
3        -182921.460938        -182921.460938      -182921.460938     31999.511719        31.999512      -182921.460938               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
4        -182889.461426        -182889.461426      -182889.461426     31999.511719        31.999512      -182889.461426               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
5        -182857.461914        -182857.461914      -182857.461914     31999.511719        31.999512      -182857.461914               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
6        -182825.462402        -182825.462402      -182825.462402     31999.511719        31.999512      -182825.462402               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
7        -182793.462891        -182793.462891      -182793.462891     31999.511719        31.999512      -182793.462891               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
8        -182761.463379        -182761.463379      -182761.463379     31999.511719        31.999512      -182761.463379               0.0                       0.0         31.999512             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77825/4096, buf_size=278529/4096, start_state=[0].[0m
[01/30 14:16:18]  --------------------------------------------------------------------------------
[01/30 14:16:18]  Iteration: 5 (0 solution, 4 counterexamples)
[01/30 14:17:02]  Generator returned sat in 43.736710 secs.
[01/30 14:17:02]  Candidate solution: 
[1m[94mif (+ -2min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 14:17:48]  Improved number of small numbers from 50 to 59 out of a max of 135
[01/30 14:17:48]  Verifer returned sat in 46.258617 secs.
[01/30 14:17:48]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -184178.024937        -184192.738909      -184178.024937         0.999512         0.999268      -184192.738909          0.999268                  0.000000         93.142648        113.286621                  0.0  13.714704          -1.0       0.0
1        -183991.739641        -184092.738909      -183991.739641    186300.009731       186.285296      -184092.738909          1.998535                  0.999268         93.142648        113.286621                  0.0  99.000732           1.0       0.0
2        -183805.454346        -183992.738909      -183805.454346    186386.295027       186.285296      -183992.738909         88.283831                  1.998535         93.142648        113.286621                  0.0  99.000732           1.0       0.0
3        -183619.169050        -183892.738909      -183619.169050    186472.580322       186.285296      -183892.738909        174.569127                 88.283831         93.142648        113.286621                  0.0  99.000732           1.0       0.0
4        -183432.883754        -183792.738909      -183432.883754    186558.865618       186.285296      -183792.738909        260.854422                174.569127         93.142648        113.286621                  0.0  99.000732           1.0       0.0
5        -183246.598458        -183692.738909      -183246.598458    186645.150914       186.285296      -183692.738909        347.139718                260.854422         93.142648        113.286621                  0.0  99.000732           1.0       0.0
6        -183060.313163        -183592.738909      -183060.313163    186731.436210       186.285296      -183592.738909        433.425014                347.139718         93.142648        113.286621                  0.0  99.000732           1.0       0.0
7        -182874.027867        -183492.738909      -182874.027867    186817.721505       186.285296      -183492.738909        519.710310                433.425014         93.142648        113.286621                  0.0  99.000732           1.0       0.0
8        -182687.742571        -183392.738909      -182687.742571    186904.006801       186.285296      -183392.738909        605.995605                519.710310         93.142648        113.286621                  0.0  99.000732           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=7, loss_amount=618493/1024, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1023/1024, buf_size=405507/4096, start_state=[0].[0m
[01/30 14:17:48]  --------------------------------------------------------------------------------
[01/30 14:17:48]  Iteration: 6 (0 solution, 5 counterexamples)
[01/30 14:18:47]  Generator returned sat in 58.466025 secs.
[01/30 14:18:47]  Candidate solution: 
[1m[94mif (+ -2min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
elif (+ -3/2min_c + 1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 14:18:58]  Improved number of small numbers from 78 to 78 out of a max of 135
[01/30 14:18:58]  Verifer returned sat in 10.655258 secs.
[01/30 14:18:58]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -607639.693635        -607662.483212      -607639.693635         0.999512         0.999268      -607662.483212               0.0                       0.0         39.777127             100.0                  8.0  22.789578          -1.0       9.0
1        -607598.917240        -607598.917240      -607598.917240     40799.183892        40.776394      -607598.917240               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
2        -607558.140846        -607558.140846      -607558.140846     40776.394314        40.776394      -607558.140846               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
3        -607517.364452        -607517.364452      -607517.364452     40776.394314        40.776394      -607517.364452               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
4        -607476.588057        -607476.588057      -607476.588057     40776.394314        40.776394      -607476.588057               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
5        -607435.811663        -607435.811663      -607435.811663     40776.394314        40.776394      -607435.811663               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
6        -607395.035269        -607395.035269      -607395.035269     40776.394314        40.776394      -607395.035269               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
7        -607354.258874        -607354.258874      -607354.258874     40776.394314        40.776394      -607354.258874               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
8        -607313.482480        -607313.482480      -607313.482480     40776.394314        40.776394      -607313.482480               0.0                       0.0         39.777127             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4093/4096, buf_size=800, start_state=[0].[0m
[01/30 14:18:58]  --------------------------------------------------------------------------------
[01/30 14:18:58]  Iteration: 7 (0 solution, 6 counterexamples)
[01/30 14:20:12]  Generator returned sat in 73.623812 secs.
[01/30 14:20:12]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 14:20:23]  Improved number of small numbers from 99 to 135 out of a max of 135
[01/30 14:20:23]  Verifer returned sat in 10.455057 secs.
[01/30 14:20:23]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0        -612948.490967        -613012.990967      -612948.490967         0.999512         0.999023      -613012.990967               0.0                       0.0         55.333496             100.0                  8.0     64.5          -1.0       9.0
1        -612912.990967        -612912.990967      -612912.990967     35564.500000        35.500000      -612912.990967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
2        -612877.490967        -612877.490967      -612877.490967     35500.000000        35.500000      -612877.490967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
3        -612841.990967        -612841.990967      -612841.990967     35500.000000        35.500000      -612841.990967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
4        -612806.490967        -612806.490967      -612806.490967     35500.000000        35.500000      -612806.490967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
5        -612770.990967        -612770.990967      -612770.990967     35500.000000        35.500000      -612770.990967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
6        -612735.490967        -612735.490967      -612735.490967     35500.000000        35.500000      -612735.490967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
7        -612699.990967        -612699.990967      -612699.990967     35500.000000        35.500000      -612699.990967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
8        -612664.490967        -612664.490967      -612664.490967     35500.000000        35.500000      -612664.490967               0.0                       0.0         55.333496             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=40619/2048, buf_size=800, start_state=[0].[0m
[01/30 14:20:23]  --------------------------------------------------------------------------------
[01/30 14:20:23]  Iteration: 8 (0 solution, 7 counterexamples)
[01/30 14:22:13]  Generator returned sat in 109.670537 secs.
[01/30 14:22:13]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 14:22:23]  Improved number of small numbers from 135 to 135 out of a max of 135
[01/30 14:22:23]  Verifer returned sat in 9.592174 secs.
[01/30 14:22:23]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0        -515726.441162        -515726.441162      -515726.441162         0.999512         0.999023      -515726.441162               0.0                       0.0         16.983398             100.0                  0.0      0.0          -1.0       0.0
1        -515708.458740        -515708.458740      -515708.458740     17982.421875        17.982422      -515708.458740               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
2        -515690.476318        -515690.476318      -515690.476318     17982.421875        17.982422      -515690.476318               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
3        -515672.493896        -515672.493896      -515672.493896     17982.421875        17.982422      -515672.493896               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
4        -515654.511475        -515654.511475      -515654.511475     17982.421875        17.982422      -515654.511475               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
5        -515636.529053        -515636.529053      -515636.529053     17982.421875        17.982422      -515636.529053               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
6        -515618.546631        -515618.546631      -515618.546631     17982.421875        17.982422      -515618.546631               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
7        -515600.564209        -515600.564209      -515600.564209     17982.421875        17.982422      -515600.564209               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
8        -515582.581787        -515582.581787      -515582.581787     17982.421875        17.982422      -515582.581787               0.0                       0.0         16.983398             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1023/1024, buf_size=800, start_state=[0].[0m
[01/30 14:22:23]  --------------------------------------------------------------------------------
[01/30 14:22:23]  Iteration: 9 (0 solution, 8 counterexamples)
[01/30 14:24:05]  Generator returned sat in 100.917355 secs.
[01/30 14:24:05]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 14:24:29]  Improved number of small numbers from 83 to 83 out of a max of 135
[01/30 14:24:29]  Verifer returned sat in 24.591804 secs.
[01/30 14:24:29]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0        -757639.940942        -757662.162188      -757639.940942         0.999268         0.999023      -757662.162188          0.999023                  0.000000         89.388889        132.833333                  1.0   21.222222          -1.0       2.0
1        -757461.163164        -757562.162188      -757461.163164    178799.999023       178.777778      -757562.162188          0.999023                  0.999023         89.388889        132.833333                  0.0  100.000000           1.0       0.0
2        -757282.385386        -757462.162188      -757282.385386    178878.776801       178.777778      -757462.162188          0.999023                  0.999023         89.388889        132.833333                  0.0  178.777778           0.0       1.0
3        -757103.607609        -757362.162188      -757103.607609    178957.554579       178.777778      -757362.162188          0.999023                  0.999023         89.388889        132.833333                  0.0  257.555556           0.0       1.0
4        -756924.829831        -757262.162188      -756924.829831    179036.332357       178.777778      -757262.162188         79.276801                  0.999023         89.388889        132.833333                  0.0  258.055556           0.0       1.0
5        -756746.052053        -757162.162188      -756746.052053    179115.110135       178.777778      -757162.162188        158.054579                 79.276801         89.388889        132.833333                  1.0  258.055556           1.0       2.0
6        -756567.274275        -757062.162188      -756567.274275    179193.887912       178.777778      -757062.162188        236.832357                158.054579         89.388889        132.833333                  1.0  258.055556           1.0       2.0
7        -756388.496498        -756962.162188      -756388.496498    179272.665690       178.777778      -756962.162188        315.610135                236.832357         89.388889        132.833333                  1.0  258.055556           1.0       2.0
8        -756209.718720        -756862.162188      -756209.718720    179351.443468       178.777778      -756862.162188        394.387912                315.610135         89.388889        132.833333                  1.0  258.055556           1.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=7081/18, beliefs_remain_consistent=True, beliefs_improve=False, alpha=719/72, buf_size=4645/18, start_state=[0].[0m
[01/30 14:24:29]  --------------------------------------------------------------------------------
[01/30 14:24:29]  Iteration: 10 (0 solution, 9 counterexamples)
[01/30 14:27:03]  Generator returned sat in 152.568048 secs.
[01/30 14:27:03]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 14:27:12]  Verifer returned unsat in 8.931773 secs.
[01/30 14:41:03]  Improved number of small numbers from 145 to 145 out of a max of 145
[01/30 14:41:03]  Verifer returned sat in 831.026432 secs.
[01/30 14:41:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  upper_S_t  qdelay_t
0              -200.5              -200.5            -200.5            0.5            0.5            -200.5             0.0                     0.0           100.0      163.666667                0.0          437.0      0.0          -1.0           -96.0     -104.5       1.0
1                -0.5              -101.0              -0.5       200000.0          200.0            -101.0             0.0                     0.0           100.0      163.666667                0.0          437.0    100.5           0.0             4.0       -4.5       0.0
2               199.5                 0.0             199.5       200100.5          200.0               0.0             0.0                     0.0           100.0      163.666667                0.0          437.0    199.5           0.0           104.0       95.5       0.0
3               399.5                95.5             399.5       200199.5          200.0              95.5             0.0                     0.0           100.0      163.666667                0.0          437.0    304.0           0.0           204.0      195.5       1.0
4               599.5               200.0             599.5       200304.0          200.0             200.0            55.0                     0.0           100.0      163.666667                0.0          437.0    344.5           0.0           249.0      295.5       1.0
5               799.5               295.5             799.5       200399.5          200.0             295.5           155.0                    55.0           100.0      163.666667                1.0          437.0    349.0           1.0           249.0      395.5       2.0
6               999.5               495.5             999.5       200504.0          200.0             495.5           255.0                   155.0           100.0      163.666667                1.0          437.0    249.0           1.0           249.0      495.5       2.0
7              1199.5               595.5            1199.5       200504.0          200.0             595.5           355.0                   255.0           100.0      163.666667                1.0          437.0    249.0           1.0           249.0      595.5       2.0
8              1399.5               692.5            1399.5       200604.0          200.0             692.5           455.0                   355.0           100.0      163.666667                1.0          437.0    252.0           1.0           249.0      695.5       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=455, beliefs_remain_consistent=True, beliefs_improve=False, alpha=109/6, buf_size=249, start_state=[0].[0m
[01/30 14:41:03]  --------------------------------------------------------------------------------
[01/30 14:41:03]  Iteration: 11 (0 solution, 10 counterexamples)
[01/30 14:41:58]  Generator returned sat in 54.079059 secs.
[01/30 14:41:58]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 14:42:10]  Improved number of small numbers from 81 to 81 out of a max of 135
[01/30 14:42:10]  Verifer returned sat in 12.125858 secs.
[01/30 14:42:10]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -656114.065182        -656175.569455      -656114.065182         0.999023         0.998779      -656175.569455               0.0                       0.0          44.50061             100.0                  0.0  61.504272          -1.0       0.0
1        -656088.565793        -656088.565793      -656088.565793     25560.893921        25.499390      -656088.565793               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
2        -656063.066403        -656063.066403      -656063.066403     25499.389648        25.499390      -656063.066403               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
3        -656037.567014        -656037.567014      -656037.567014     25499.389648        25.499390      -656037.567014               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
4        -656012.067624        -656012.067624      -656012.067624     25499.389648        25.499390      -656012.067624               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
5        -655986.568234        -655986.568234      -655986.568234     25499.389648        25.499390      -655986.568234               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
6        -655961.068845        -655961.068845      -655961.068845     25499.389648        25.499390      -655961.068845               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
7        -655935.569455        -655935.569455      -655935.569455     25499.389648        25.499390      -655935.569455               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
8        -655910.070065        -655910.070065      -655910.070065     25499.389648        25.499390      -655910.070065               0.0                       0.0          44.50061             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77829/4096, buf_size=405509/4096, start_state=[0].[0m
[01/30 14:42:10]  --------------------------------------------------------------------------------
[01/30 14:42:10]  Iteration: 12 (0 solution, 11 counterexamples)
[01/30 14:45:24]  Generator returned sat in 192.539572 secs.
[01/30 14:45:24]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 14:45:32]  Improved number of small numbers from 99 to 135 out of a max of 135
[01/30 14:45:32]  Verifer returned sat in 7.714888 secs.
[01/30 14:45:32]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0        -656387.567139        -657191.562012      -656387.567139         0.999023         0.998779      -657191.562012               0.0                       0.0             100.0        100.998535                  8.0  803.994873          -1.0       9.0
1        -656287.567139        -657091.562012      -656287.567139    100803.994873       100.000000      -657091.562012               0.0                       0.0             100.0        100.998535                  8.0  803.994873           1.0       9.0
2        -656187.567139        -656991.562012      -656187.567139    100803.994873       100.000000      -656991.562012               0.0                       0.0             100.0        100.998535                  8.0  803.994873           1.0       9.0
3        -656087.567139        -656891.562012      -656087.567139    100803.994873       100.000000      -656891.562012               0.0                       0.0             100.0        100.998535                  8.0  803.994873           1.0       9.0
4        -655987.567139        -656791.562012      -655987.567139    100803.994873       100.000000      -656791.562012               0.0                       0.0             100.0        100.998535                  5.0  803.994873           1.0       6.0
5        -655887.567139        -656691.562012      -655887.567139    100803.994873       100.000000      -656691.562012               0.0                       0.0             100.0        100.998535                  6.0  803.994873           1.0       7.0
6        -655787.567139        -656591.562012      -655787.567139    100803.994873       100.000000      -656591.562012               0.0                       0.0             100.0        100.998535                  7.0  803.994873           1.0       8.0
7        -655687.567139        -656491.562012      -655687.567139    100803.994873       100.000000      -656491.562012               0.0                       0.0             100.0        100.998535                  7.0  803.994873           1.0       8.0
8        -655587.567139        -656391.562012      -655587.567139    100803.994873       100.000000      -656391.562012               0.0                       0.0             100.0        100.998535                  7.0  803.994873           1.0       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4091/4096, buf_size=3297255/4096, start_state=[0].[0m
[01/30 14:45:32]  --------------------------------------------------------------------------------
[01/30 14:45:32]  Iteration: 13 (0 solution, 12 counterexamples)
[01/30 14:47:21]  Generator returned sat in 107.881950 secs.
[01/30 14:47:21]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 14:47:35]  Improved number of small numbers from 102 to 102 out of a max of 135
[01/30 14:47:35]  Verifer returned sat in 14.457458 secs.
[01/30 14:47:35]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0        -656953.559570        -656953.559570      -656953.559570         0.999023         0.998779      -656953.559570               0.0                       0.0          59.50061             100.0                  0.0      0.0          -1.0       1.0
1        -656913.060181        -656913.060181      -656913.060181     40499.389648        40.499390      -656913.060181               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
2        -656872.560791        -656872.560791      -656872.560791     40499.389648        40.499390      -656872.560791               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
3        -656832.061401        -656832.061401      -656832.061401     40499.389648        40.499390      -656832.061401               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
4        -656791.562012        -656791.562012      -656791.562012     40499.389648        40.499390      -656791.562012               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
5        -656751.062622        -656751.062622      -656751.062622     40499.389648        40.499390      -656751.062622               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
6        -656710.563232        -656710.563232      -656710.563232     40499.389648        40.499390      -656710.563232               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
7        -656670.063843        -656670.063843      -656670.063843     40499.389648        40.499390      -656670.063843               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
8        -656629.564453        -656629.564453      -656629.564453     40499.389648        40.499390      -656629.564453               0.0                       0.0          59.50061             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77829/4096, buf_size=20, start_state=[0].[0m
[01/30 14:47:36]  --------------------------------------------------------------------------------
[01/30 14:47:36]  Iteration: 14 (0 solution, 13 counterexamples)
[01/30 14:49:54]  Generator returned sat in 137.714863 secs.
[01/30 14:49:54]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 14:50:16]  Improved number of small numbers from 112 to 112 out of a max of 135
[01/30 14:50:16]  Verifer returned sat in 21.328999 secs.
[01/30 14:50:16]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -657989.546143        -658088.547363      -657989.546143         0.999023         0.998779      -658088.547363               0.0                       0.0         50.998779             100.0                  0.0  99.001221          -1.0       0.0
1        -657964.046753        -657988.547363      -657964.046753     25598.390869        25.499390      -657988.547363               0.0                       0.0         50.998779             100.0                  0.0  24.500610           0.0       0.0
2        -657938.547363        -657938.547363      -657938.547363     25523.890259        25.499390      -657938.547363               0.0                       0.0         50.998779             100.0                  0.0   0.000000           0.0       0.0
3        -657913.047974        -657913.047974      -657913.047974     25499.389648        25.499390      -657913.047974               0.0                       0.0         50.998779             100.0                  0.0   0.000000           0.0       0.0
4        -657887.548584        -657887.548584      -657887.548584     25499.389648        25.499390      -657887.548584               0.0                       0.0         50.998779             100.0                  0.0   0.000000           0.0       0.0
5        -657862.049194        -657862.049194      -657862.049194     25499.389648        25.499390      -657862.049194               0.0                       0.0         50.998779             100.0                  0.0   0.000000           0.0       0.0
6        -657836.549805        -657836.549805      -657836.549805     25499.389648        25.499390      -657836.549805               0.0                       0.0         50.998779             100.0                  0.0   0.000000           0.0       0.0
7        -657811.050415        -657811.050415      -657811.050415     25499.389648        25.499390      -657811.050415               0.0                       0.0         50.998779             100.0                  0.0   0.000000           0.0       0.0
8        -657785.551025        -657785.551025      -657785.551025     25499.389648        25.499390      -657785.551025               0.0                       0.0         50.998779             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4091/4096, buf_size=405509/4096, start_state=[0].[0m
[01/30 14:50:16]  --------------------------------------------------------------------------------
[01/30 14:50:16]  Iteration: 15 (0 solution, 14 counterexamples)
[01/30 14:52:11]  Generator returned sat in 114.113997 secs.
[01/30 14:52:11]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 14:52:19]  Improved number of small numbers from 121 to 121 out of a max of 135
[01/30 14:52:19]  Verifer returned sat in 7.853197 secs.
[01/30 14:52:19]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0        -658482.945068        -658682.945068      -658482.945068         0.998779         0.998535      -658682.945068               0.0                       0.0              91.8             149.5                  0.0    200.0          -1.0       1.0
1        -658299.345068        -658582.945068      -658299.345068    183800.000000       183.600000      -658582.945068              83.6                       0.0              91.8             149.5                  0.0    200.0           0.0       1.0
2        -658115.745068        -658482.945068      -658115.745068    183883.600000       183.600000      -658482.945068             167.2                      83.6              91.8             149.5                  1.0    200.0           1.0       2.0
3        -658043.445068        -658382.945068      -658043.445068     72667.200000        72.300000      -658382.945068             167.2                     167.2              91.8             149.5                  1.0    172.3           1.0       2.0
4        -657971.145068        -658282.945068      -657971.145068     72639.500000        72.300000      -658282.945068             167.2                     167.2              91.8             149.5                  1.0    144.6           1.0       2.0
5        -657898.845068        -658182.945068      -657898.845068     72611.800000        72.300000      -658182.945068             167.2                     167.2              91.8             149.5                  0.0    116.9           0.0       1.0
6        -657715.245068        -658082.945068      -657715.245068    183884.100000       183.600000      -658082.945068             167.7                     167.2              91.8             149.5                  0.0    200.0           0.0       1.0
7        -657531.645068        -657982.945068      -657531.645068    183967.700000       183.600000      -657982.945068             251.3                     167.7              91.8             149.5                  0.0    200.0           1.0       1.0
8        -657348.045068        -657882.945068      -657348.045068    184051.300000       183.600000      -657882.945068             334.9                     251.3              91.8             149.5                  1.0    200.0           1.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=2513/10, beliefs_remain_consistent=True, beliefs_improve=False, alpha=39/2, buf_size=200, start_state=[0].[0m
[01/30 14:52:19]  --------------------------------------------------------------------------------
[01/30 14:52:19]  Iteration: 16 (0 solution, 15 counterexamples)
[01/30 14:52:58]  Generator returned sat in 36.860267 secs.
[01/30 14:52:58]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 14:53:08]  Improved number of small numbers from 103 to 135 out of a max of 135
[01/30 14:53:08]  Verifer returned sat in 10.240585 secs.
[01/30 14:53:08]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0        -697709.329346        -697709.329346      -697709.329346         0.998535         0.998047      -697709.329346               0.0                       0.0              60.0             100.0                  0.0      0.0          -1.0       0.0
1        -697668.331055        -697668.331055      -697668.331055     40998.291016        40.998291      -697668.331055               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
2        -697627.332764        -697627.332764      -697627.332764     40998.291016        40.998291      -697627.332764               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
3        -697586.334473        -697586.334473      -697586.334473     40998.291016        40.998291      -697586.334473               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
4        -697545.336182        -697545.336182      -697545.336182     40998.291016        40.998291      -697545.336182               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
5        -697504.337891        -697504.337891      -697504.337891     40998.291016        40.998291      -697504.337891               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
6        -697463.339600        -697463.339600      -697463.339600     40998.291016        40.998291      -697463.339600               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
7        -697422.341309        -697422.341309      -697422.341309     40998.291016        40.998291      -697422.341309               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
8        -697381.343018        -697381.343018      -697381.343018     40998.291016        40.998291      -697381.343018               0.0                       0.0              60.0             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77831/4096, buf_size=81919/4096, start_state=[0].[0m
[01/30 14:53:08]  --------------------------------------------------------------------------------
[01/30 14:53:08]  Iteration: 17 (0 solution, 16 counterexamples)
[01/30 14:56:16]  Generator returned sat in 186.831348 secs.
[01/30 14:56:16]  Candidate solution: 
[1m[94mif (+ -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 14:56:25]  Verifer returned unsat in 8.280715 secs.
[01/30 14:56:26]  Improved number of small numbers from 135 to 145 out of a max of 145
[01/30 14:56:26]  Verifer returned sat in 0.817595 secs.
[01/30 14:56:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  upper_S_t  qdelay_t
0         -200.500488         -200.500488       -200.500488       0.500000       0.499756       -200.500488        0.000000                0.000000           100.0      163.166992                0.0     436.999756    0.000000          -1.0      -96.000488     -104.5       1.0
1           -0.500488         -101.001709         -0.500488  200000.000000     200.000000       -101.001709        0.000000                0.000000           100.0      163.166992                0.0     436.999756  100.501221           0.0        3.999512       -4.5       0.0
2          199.499512           -0.000244        199.499512  200100.501221     200.000000         -0.000244        0.000000                0.000000           100.0      163.166992                0.0     436.999756  199.499756           0.0      103.999512       95.5       0.0
3          399.499512           95.500000        399.499512  200199.499756     200.000000         95.500000        0.000000                0.000000           100.0      163.166992                0.0     436.999756  303.999512           0.0      203.999512      195.5       1.0
4          599.499512          199.999512        599.499512  200303.999512     200.000000        199.999512       54.999512                0.000000           100.0      163.166992                0.0     436.999756  344.500488           0.0      249.000000      295.5       1.0
5          799.499512          295.500000        799.499512  200399.500000     200.000000        295.500000      154.999512               54.999512           100.0      163.166992                1.0     436.999756  349.000000           1.0      249.000000      395.5       2.0
6          999.499512          495.499756        999.499512  200503.999512     200.000000        495.499756      254.999512              154.999512           100.0      163.166992                1.0     436.999756  249.000244           1.0      249.000000      495.5       2.0
7         1199.499512          595.500000       1199.499512  200503.999756     200.000000        595.500000      354.999512              254.999512           100.0      163.166992                1.0     436.999756  249.000000           1.0      249.000000      595.5       2.0
8         1399.499512          692.499756       1399.499512  200603.999512     200.000000        692.499756      454.999512              354.999512           100.0      163.166992                1.0     436.999756  252.000244           1.0      249.000000      695.5       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=931839/2048, beliefs_remain_consistent=True, beliefs_improve=False, alpha=76457/4096, buf_size=249, start_state=[0].[0m
[01/30 14:56:26]  --------------------------------------------------------------------------------
[01/30 14:56:26]  Iteration: 18 (0 solution, 17 counterexamples)
[01/30 14:57:42]  Generator returned sat in 74.611720 secs.
[01/30 14:57:42]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 14:57:58]  Improved number of small numbers from 101 to 101 out of a max of 135
[01/30 14:57:58]  Verifer returned sat in 16.190732 secs.
[01/30 14:57:58]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0        -786531.457384        -786630.457384      -786531.457384         0.998535         0.998047      -786630.457384          0.000000                  0.000000         88.888889        133.333333                  1.0   99.000000          -1.0       2.0
1        -786487.012939        -786530.457384      -786487.012939     44543.444444        44.444444      -786530.457384          0.000000                  0.000000         88.888889        133.333333                  0.0   43.444444           0.0       0.0
2        -786309.235162        -786430.457384      -786309.235162    177821.222222       177.777778      -786430.457384          0.000000                  0.000000         88.888889        133.333333                  0.0  121.222222           0.0       0.0
3        -786131.457384        -786330.457384      -786131.457384    177899.000000       177.777778      -786330.457384          0.000000                  0.000000         88.888889        133.333333                  0.0  199.000000           0.0       1.0
4        -785953.679606        -786230.457384      -785953.679606    177976.777778       177.777778      -786230.457384         77.277778                  0.000000         88.888889        133.333333                  0.0  199.500000           0.0       1.0
5        -785775.901828        -786130.457384      -785775.901828    178054.555556       177.777778      -786130.457384        155.055556                 77.277778         88.888889        133.333333                  0.0  199.500000           1.0       1.0
6        -785598.124051        -786030.457384      -785598.124051    178132.333333       177.777778      -786030.457384        232.833333                155.055556         88.888889        133.333333                  0.0  199.500000           1.0       1.0
7        -785420.346273        -785930.457384      -785420.346273    178210.111111       177.777778      -785930.457384        310.611111                232.833333         88.888889        133.333333                  0.0  199.500000           1.0       1.0
8        -785242.568495        -785830.457384      -785242.568495    178287.888889       177.777778      -785830.457384        388.388889                310.611111         88.888889        133.333333                  0.0  199.500000           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=6991/18, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/2, buf_size=399/2, start_state=[0].[0m
[01/30 14:57:59]  --------------------------------------------------------------------------------
[01/30 14:57:59]  Iteration: 19 (0 solution, 18 counterexamples)
[01/30 15:00:20]  Generator returned sat in 140.279186 secs.
[01/30 15:00:20]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 15:00:45]  Verifer returned unsat in 24.178691 secs.
[01/30 15:01:37]  Improved number of small numbers from 89 to 100 out of a max of 145
[01/30 15:01:37]  Verifer returned sat in 51.749026 secs.
[01/30 15:01:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t   upper_S_t  qdelay_t
0         -814.013550         -914.013550       -814.013550       0.499756       0.499756       -914.013550        0.000000                0.000000       83.999674           167.0                0.0     436.999756  100.000000          -1.0      100.000000 -914.013550       0.0
1         -646.014201         -881.513143       -646.014201  168099.348958     167.999349       -881.513143       67.999349                0.000000       83.999674           167.0                0.0     436.999756  167.499593           0.0      100.000000 -814.013550       1.0
2         -478.014852         -814.013550       -478.014852  168234.847900     167.999349       -814.013550      135.998698               67.999349       83.999674           167.0                1.0     436.999756  200.000000           1.0      100.000000 -714.013550       2.0
3         -436.015015         -714.013550       -436.015015   42335.835938      41.999837       -714.013550      135.998698              135.998698       83.999674           167.0                1.0     436.999756  141.999837           1.0       41.999837 -614.013550       2.0
4         -394.015177         -563.513794       -394.015177   42277.835775      41.999837       -563.513794      135.998698              135.998698       83.999674           167.0                0.0     453.000081   33.499919           0.0        0.000000 -530.013875       0.0
5         -226.015828         -529.514119       -226.015828  168168.847575     167.999349       -529.514119      135.998698              135.998698       83.999674           167.0                0.0     453.000081  167.499593           0.0       67.999349 -430.013875       0.0
6          -58.016479         -430.013875        -58.016479  168302.847249     167.999349       -430.013875      171.997396              135.998698       83.999674           167.0                0.0     453.000081  200.000000           0.0      100.000000 -330.013875       1.0
7          109.982869         -330.013875        109.982869  168371.346354     167.999349       -330.013875      239.996745              171.997396       83.999674           167.0                0.0     453.000081  200.000000           1.0      100.000000 -230.013875       1.0
8          277.982218         -229.513916        277.982218  168439.345703     167.999349       -229.513916      307.996094              239.996745       83.999674           167.0                0.0     453.000081  199.500041           1.0      100.000000 -130.013875       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=368635/1536, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2047/4096, buf_size=100, start_state=[0].[0m
[01/30 15:01:37]  --------------------------------------------------------------------------------
[01/30 15:01:37]  Iteration: 20 (0 solution, 19 counterexamples)
[01/30 15:03:01]  Generator returned sat in 82.427045 secs.
[01/30 15:03:01]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 15:03:46]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 15:03:46]  Verifer returned sat in 45.015439 secs.
[01/30 15:03:46]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0        -639663.448513        -639663.448513      -639663.448513         0.998535         0.998047      -639663.448513               0.0                       0.0         40.665365             100.0                  0.0      0.0          -1.0       0.0
1        -639622.783149        -639622.783149      -639622.783149     40665.364583        40.665365      -639622.783149               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
2        -639582.117784        -639582.117784      -639582.117784     40665.364583        40.665365      -639582.117784               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
3        -639541.452420        -639541.452420      -639541.452420     40665.364583        40.665365      -639541.452420               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
4        -639500.787055        -639500.787055      -639500.787055     40665.364583        40.665365      -639500.787055               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
5        -639460.121691        -639460.121691      -639460.121691     40665.364583        40.665365      -639460.121691               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
6        -639419.456326        -639419.456326      -639419.456326     40665.364583        40.665365      -639419.456326               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
7        -639378.790961        -639378.790961      -639378.790961     40665.364583        40.665365      -639378.790961               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
8        -639338.125597        -639338.125597      -639338.125597     40665.364583        40.665365      -639338.125597               0.0                       0.0         40.665365             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19969/1024, buf_size=20991/1024, start_state=[0].[0m
[01/30 15:03:46]  --------------------------------------------------------------------------------
[01/30 15:03:46]  Iteration: 21 (0 solution, 20 counterexamples)
[01/30 15:09:51]  Generator returned sat in 363.082747 secs.
[01/30 15:09:51]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/30 15:10:08]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 15:10:08]  Verifer returned sat in 16.846915 secs.
[01/30 15:10:08]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0        -640429.384174        -640429.384174      -640429.384174         0.998535         0.998047      -640429.384174          0.000000                  0.000000         89.444444        119.444444                  0.0   0.000000          -1.0       1.0
1        -640250.495285        -640329.384174      -640250.495285    178888.888889       178.888889      -640329.384174          0.000000                  0.000000         89.444444        119.444444                  0.0  78.888889           0.0       0.0
2        -640071.606396        -640229.384174      -640071.606396    178967.777778       178.888889      -640229.384174         58.333333                  0.000000         89.444444        119.444444                  0.0  99.444444           0.0       0.0
3        -639892.717508        -640129.384174      -639892.717508    179046.666667       178.888889      -640129.384174        137.222222                 58.333333         89.444444        119.444444                  0.0  99.444444           1.0       0.0
4        -639713.828619        -640029.384174      -639713.828619    179125.555556       178.888889      -640029.384174        216.111111                137.222222         89.444444        119.444444                  0.0  99.444444           1.0       0.0
5        -639534.939730        -639929.384174      -639534.939730    179204.444444       178.888889      -639929.384174        295.000000                216.111111         89.444444        119.444444                  0.0  99.444444           1.0       0.0
6        -639356.050841        -639829.384174      -639356.050841    179283.333333       178.888889      -639829.384174        373.888889                295.000000         89.444444        119.444444                  0.0  99.444444           1.0       0.0
7        -639177.161952        -639729.384174      -639177.161952    179362.222222       178.888889      -639729.384174        452.777778                373.888889         89.444444        119.444444                  0.0  99.444444           1.0       0.0
8        -638998.273063        -639629.384174      -638998.273063    179441.111111       178.888889      -639629.384174        531.666667                452.777778         89.444444        119.444444                  0.0  99.444444           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=6, loss_amount=1595/3, beliefs_remain_consistent=True, beliefs_improve=False, alpha=175/9, buf_size=895/9, start_state=[0].[0m
[01/30 15:10:08]  --------------------------------------------------------------------------------
[01/30 15:10:08]  Iteration: 22 (0 solution, 21 counterexamples)
[01/30 15:14:34]  Generator returned sat in 264.283467 secs.
[01/30 15:14:34]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 15:14:53]  Verifer returned unsat in 18.127449 secs.
[01/30 15:16:29]  Improved number of small numbers from 80 to 82 out of a max of 145
[01/30 15:16:29]  Verifer returned sat in 96.255970 secs.
[01/30 15:16:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t    upper_S_t  qdelay_t
0        -1145.564357        -1200.634565      -1145.564357       0.499756       0.499756      -1200.634565        0.000000                0.000000       78.016529       116.36377                0.0     436.999756   55.070208          -1.0       55.070208 -1200.634565       1.0
1         -989.531299        -1122.783325       -989.531299  156088.128059     156.033058      -1122.783325        0.194175                0.000000       78.016529       116.36377                0.0     436.999756  133.057851           0.0      110.909091 -1100.634565       0.0
2         -833.498242        -1006.254400       -833.498242  156166.309877     156.033058      -1006.254400       56.227233                0.194175       78.016529       116.36377                0.0     436.999756  116.528926           1.0      110.909091 -1000.634565       1.0
3         -677.465184         -967.742003       -677.465184  156205.814009     156.033058       -967.742003      112.260290               56.227233       78.016529       116.36377                0.0     436.999756  178.016529           1.0      110.909091  -900.634565       1.0
4         -521.432126         -889.725474       -521.432126  156323.334671     156.033058       -889.725474      168.293348              112.260290       78.016529       116.36377                1.0     436.999756  200.000000           1.0      110.909091  -800.634565       2.0
5         -423.580886         -733.692416       -423.580886   98219.533018      97.851240       -733.692416      168.293348              168.293348       78.016529       116.36377                0.0     436.999756  141.818182           1.0      108.760331  -700.634565       1.0
6         -267.547828         -655.675887       -267.547828  156343.169381     156.033058       -655.675887      222.177646              168.293348       78.016529       116.36377                0.0     436.999756  165.950413           0.0      110.909091  -600.634565       1.0
7         -111.514771         -591.708945       -111.514771  156421.185910     156.033058       -591.708945      278.210704              222.177646       78.016529       116.36377                0.0     436.999756  201.983471           1.0      110.909091  -500.634565       1.0
8           44.518287         -500.634521         44.518287  156513.252026     156.033058       -500.634521      334.243762              278.210704       78.016529       116.36377                1.0     436.999756  210.909047           1.0      110.909091  -400.634565       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=40420/121, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2400/121, buf_size=1220/11, start_state=[0].[0m
[01/30 15:16:29]  --------------------------------------------------------------------------------
[01/30 15:16:29]  Iteration: 23 (0 solution, 22 counterexamples)
[01/30 15:18:40]  Generator returned sat in 128.388370 secs.
[01/30 15:18:40]  Candidate solution: 
[1m[94mif (+ -1/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
elif (+ 3/2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 15:18:52]  Improved number of small numbers from 80 to 82 out of a max of 135
[01/30 15:18:52]  Verifer returned sat in 11.961151 secs.
[01/30 15:18:52]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         -2.862935e+06         -2.862935e+06       -2.862935e+06         0.998291         0.997803       -2.862935e+06               0.5                       0.0         50.498901             100.0                  0.0      0.0          -1.0       0.0
1         -2.862909e+06         -2.862910e+06       -2.862909e+06     25249.950684        25.249451       -2.862910e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           1.0       0.0
2         -2.862884e+06         -2.862885e+06       -2.862884e+06     25249.950684        25.249451       -2.862885e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           0.0       0.0
3         -2.862859e+06         -2.862859e+06       -2.862859e+06     25249.950684        25.249451       -2.862859e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           0.0       0.0
4         -2.862834e+06         -2.862834e+06       -2.862834e+06     25249.950684        25.249451       -2.862834e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           0.0       0.0
5         -2.862808e+06         -2.862809e+06       -2.862808e+06     25249.950684        25.249451       -2.862809e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           0.0       0.0
6         -2.862783e+06         -2.862784e+06       -2.862783e+06     25249.950684        25.249451       -2.862784e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           0.0       0.0
7         -2.862758e+06         -2.862758e+06       -2.862758e+06     25249.950684        25.249451       -2.862758e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           0.0       0.0
8         -2.862733e+06         -2.862733e+06       -2.862733e+06     25249.950684        25.249451       -2.862733e+06               0.5                       0.5         50.498901             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=25855/2048, buf_size=27899/2048, start_state=[0].[0m
[01/30 15:18:52]  --------------------------------------------------------------------------------
[01/30 15:18:52]  Iteration: 24 (0 solution, 23 counterexamples)
[01/30 15:25:48]  Generator returned sat in 413.649977 secs.
[01/30 15:25:48]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/30 15:26:12]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 15:26:12]  Verifer returned sat in 24.323244 secs.
[01/30 15:26:12]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         -2.957078e+06         -2.957209e+06       -2.957078e+06         0.998291         0.997803       -2.957209e+06          0.000000                  0.000000         89.388889        132.833333                  0.0  131.333333          -1.0       1.0
1         -2.956899e+06         -2.957109e+06       -2.956899e+06    178909.111111       178.777778       -2.957109e+06          0.500000                  0.000000         89.388889        132.833333                  0.0  209.611111           0.0       1.0
2         -2.956720e+06         -2.957009e+06       -2.956720e+06    178987.888889       178.777778       -2.957009e+06         79.277778                  0.500000         89.388889        132.833333                  0.0  209.611111           1.0       1.0
3         -2.956541e+06         -2.956909e+06       -2.956541e+06    179066.666667       178.777778       -2.956909e+06        158.055556                 79.277778         89.388889        132.833333                  1.0  209.611111           1.0       2.0
4         -2.956451e+06         -2.956809e+06       -2.956451e+06     90256.555556        89.888889       -2.956809e+06        158.055556                158.055556         89.388889        132.833333                  1.0  199.500000           1.0       2.0
5         -2.956361e+06         -2.956709e+06       -2.956361e+06     90246.444444        89.888889       -2.956709e+06        158.055556                158.055556         89.388889        132.833333                  1.0  189.388889           1.0       2.0
6         -2.956272e+06         -2.956609e+06       -2.956272e+06     90236.333333        89.888889       -2.956609e+06        158.055556                158.055556         89.388889        132.833333                  0.0  179.277778           0.0       1.0
7         -2.956093e+06         -2.956509e+06       -2.956093e+06    179115.111111       178.777778       -2.956509e+06        206.500000                158.055556         89.388889        132.833333                  0.0  209.611111           0.0       1.0
8         -2.955914e+06         -2.956409e+06       -2.955914e+06    179193.888889       178.777778       -2.956409e+06        285.277778                206.500000         89.388889        132.833333                  0.0  209.611111           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=2563/9, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/2, buf_size=3773/18, start_state=[0].[0m
[01/30 15:26:12]  --------------------------------------------------------------------------------
[01/30 15:26:12]  Iteration: 25 (0 solution, 24 counterexamples)
[01/30 15:29:38]  Generator returned sat in 203.506304 secs.
[01/30 15:29:38]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 15:29:53]  Verifer returned unsat in 14.278403 secs.
[01/30 15:51:11]  Improved gap from 0.0 to 48.4375
[01/30 15:51:13]  Improved number of small numbers from 102 to 107 out of a max of 146
[01/30 15:51:13]  Verifer returned sat in 1280.112110 secs.
[01/30 15:51:13]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -53631.946425       -53632.004295     -53631.946425       0.499512       0.499512     -53632.004295             0.0                     0.0       53.819444           100.0                0.0   99566.573242   0.057870          -1.0        0.000044 -53631.946468       1.0
1       -53578.126980       -53631.946425     -53578.126980   53819.502315      53.819444     -53631.946425             0.0                     0.0       53.819444           100.0                1.0   99612.753754  53.819444           1.0        0.000000 -53578.126980       2.0
2       -53551.217258       -53578.126980     -53551.217258   26963.541667      26.909722     -53578.126980             0.0                     0.0       53.819444           100.0                0.0   99664.316254  26.909722           0.0      -21.527778 -53529.689480       1.0
3       -53497.397814       -53529.689480     -53497.397814   53846.354167      53.819444     -53529.689480             0.0                     0.0       53.819444           100.0                0.0   99715.878754  32.291667           0.0      -16.145833 -53481.251980       0.0
4       -53443.578369       -53481.251980     -53443.578369   53851.736111      53.819444     -53481.251980             0.0                     0.0       53.819444           100.0                0.0   99767.441254  37.673611           0.0      -10.763889 -53432.814480       0.0
5       -53389.758925       -53432.814480     -53389.758925   53857.118056      53.819444     -53432.814480             0.0                     0.0       53.819444           100.0                0.0   99819.003754  43.055556           0.0       -5.381944 -53384.376980       0.0
6       -53335.939480       -53384.376980     -53335.939480   53862.500000      53.819444     -53384.376980             0.0                     0.0       53.819444           100.0                0.0   99870.566254  48.437500           0.0        0.000000 -53335.939480       0.0
7       -53282.120036       -53335.939480     -53282.120036   53867.881944      53.819444     -53335.939480             0.0                     0.0       53.819444           100.0                0.0   99916.688965  53.819444           0.0       -0.057845 -53282.062191       1.0
8       -53228.300591       -53282.062012     -53228.300591   53873.263889      53.819444     -53282.062012             0.0                     0.0       53.819444           100.0                0.0   99916.688965  53.761420           0.0      -46.238400 -53182.062191       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1023/2048, buf_size=399/2, start_state=[0].[0m
[01/30 15:51:13]  --------------------------------------------------------------------------------
[01/30 15:51:13]  Iteration: 26 (0 solution, 25 counterexamples)
[01/30 15:52:46]  Generator returned sat in 90.719657 secs.
[01/30 15:52:46]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 15:53:03]  Improved number of small numbers from 90 to 135 out of a max of 135
[01/30 15:53:03]  Verifer returned sat in 16.547837 secs.
[01/30 15:53:03]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0         -2.956642e+06         -2.956741e+06       -2.956642e+06         0.998291         0.997559       -2.956741e+06          0.997559                  0.000000             100.0         113.28833                  0.0  98.004639          -1.0       0.0
1         -2.956540e+06         -2.956641e+06       -2.956540e+06    102094.119385       101.995117       -2.956641e+06          1.994873                  0.997559             100.0         113.28833                  0.0  99.002441           1.0       0.0
2         -2.956438e+06         -2.956541e+06       -2.956438e+06    102096.114502       101.995117       -2.956541e+06          3.989990                  1.994873             100.0         113.28833                  0.0  99.002441           1.0       0.0
3         -2.956336e+06         -2.956441e+06       -2.956336e+06    102098.109619       101.995117       -2.956441e+06          5.985107                  3.989990             100.0         113.28833                  0.0  99.002441           1.0       0.0
4         -2.956234e+06         -2.956341e+06       -2.956234e+06    102100.104736       101.995117       -2.956341e+06          7.980225                  5.985107             100.0         113.28833                  0.0  99.002441           1.0       0.0
5         -2.956132e+06         -2.956241e+06       -2.956132e+06    102102.099854       101.995117       -2.956241e+06          9.975342                  7.980225             100.0         113.28833                  0.0  99.002441           1.0       0.0
6         -2.956030e+06         -2.956141e+06       -2.956030e+06    102104.094971       101.995117       -2.956141e+06         11.970459                  9.975342             100.0         113.28833                  0.0  99.002441           1.0       0.0
7         -2.955928e+06         -2.956041e+06       -2.955928e+06    102106.090088       101.995117       -2.956041e+06         13.965576                 11.970459             100.0         113.28833                  0.0  99.002441           1.0       0.0
8         -2.955826e+06         -2.955941e+06       -2.955826e+06    102108.085205       101.995117       -2.955941e+06         15.960693                 13.965576             100.0         113.28833                  0.0  99.002441           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=14301/1024, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2043/1024, buf_size=202757/2048, start_state=[0].[0m
[01/30 15:53:03]  --------------------------------------------------------------------------------
[01/30 15:53:03]  Iteration: 27 (0 solution, 26 counterexamples)
[01/30 15:55:01]  Generator returned sat in 115.849620 secs.
[01/30 15:55:01]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 15:55:33]  Verifer returned unsat in 31.722009 secs.
[01/30 15:58:35]  Improved gap from 1.49853515625 to 48.4375
[01/30 15:58:35]  Improved number of small numbers from 100 to 146 out of a max of 146
[01/30 15:58:35]  Verifer returned sat in 182.395578 secs.
[01/30 15:58:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -54052.781982       -54061.157715     -54052.781982       0.499512       0.499512     -54061.157715             0.0                     0.0            50.0           100.0                1.0   99995.784424   8.375732          -1.0        8.375732 -54061.157715       2.0
1       -54002.781982       -54052.781982     -54002.781982   50008.375732      50.000000     -54052.781982             0.0                     0.0            50.0           100.0                2.0  100037.408447  50.000000           1.0       -0.000244 -54002.781738       3.0
2       -53977.781982       -54002.282227     -53977.781982   25050.000000      25.000000     -54002.282227             0.0                     0.0            50.0           100.0                0.0  100088.471436  24.500244           0.0      -23.937256 -53953.844727       0.0
3       -53927.781982       -53953.844727     -53927.781982   50024.500244      50.000000     -53953.844727             0.0                     0.0            50.0           100.0                0.0  100140.033936  26.062744           0.0      -22.374756 -53905.407227       0.0
4       -53877.781982       -53905.407227     -53877.781982   50026.062744      50.000000     -53905.407227             0.0                     0.0            50.0           100.0                0.0  100191.596436  27.625244           0.0      -20.812256 -53856.969727       0.0
5       -53827.781982       -53856.969727     -53827.781982   50027.625244      50.000000     -53856.969727             0.0                     0.0            50.0           100.0                0.0  100243.158936  29.187744           0.0      -19.249756 -53808.532227       0.0
6       -53777.781982       -53808.532227     -53777.781982   50029.187744      50.000000     -53808.532227             0.0                     0.0            50.0           100.0                0.0  100294.721436  30.750244           0.0      -17.687256 -53760.094727       0.0
7       -53727.781982       -53760.094727     -53727.781982   50030.750244      50.000000     -53760.094727             0.0                     0.0            50.0           100.0                0.0  100346.283936  32.312744           0.0      -16.124756 -53711.657227       0.0
8       -53677.781982       -53711.657227     -53677.781982   50032.312744      50.000000     -53711.657227             0.0                     0.0            50.0           100.0                0.0  100346.283936  33.875244           0.0      -66.124756 -53611.657227       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2045/4096, buf_size=200, start_state=[0].[0m
[01/30 15:58:35]  --------------------------------------------------------------------------------
[01/30 15:58:35]  Iteration: 28 (0 solution, 27 counterexamples)
[01/30 15:59:08]  Generator returned sat in 29.700811 secs.
[01/30 15:59:08]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 15:59:33]  Verifer returned unsat in 25.333185 secs.
[01/30 16:00:08]  Improved number of small numbers from 100 to 145 out of a max of 145
[01/30 16:00:08]  Verifer returned sat in 34.597801 secs.
[01/30 16:00:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -158575.215332      -158770.719482    -158575.215332       0.499268       0.499512    -158770.719482        0.000000                0.000000           100.0      150.499512                3.0  204697.096924  195.504150          -1.0      195.504150 -158770.719482       4.0
1      -158475.714844      -158670.719727    -158475.714844   99695.992432      99.500488    -158670.719727        0.000000                0.000000           100.0      150.499512                2.0  204697.096924  195.004883           1.0      195.004639 -158670.719482       3.0
2      -158275.714844      -158575.215332    -158275.714844  200195.004883     200.000000    -158575.215332        0.000000                0.000000           100.0      150.499512                3.0  204697.096924  299.500488           1.0      295.004639 -158570.719482       4.0
3      -158176.214355      -158470.719482    -158176.214355   99799.988770      99.500488    -158470.719482        0.000000                0.000000           100.0      150.499512                0.0  204697.096924  294.505127           0.0      294.505127 -158470.719482       1.0
4      -157976.214355      -158470.719482    -157976.214355  200294.505127     200.000000    -158470.719482       94.505127                0.000000           100.0      150.499512                0.0  204697.096924  400.000000           0.0      300.000000 -158370.719482       1.0
5      -157776.214355      -158275.215332    -157776.214355  200494.505127     200.000000    -158275.215332      194.505127               94.505127           100.0      150.499512                1.0  204697.096924  304.495850           1.0      300.000000 -158270.719482       2.0
6      -157576.214355      -158176.214355    -157576.214355  200499.000977     200.000000    -158176.214355      294.505127              194.505127           100.0      150.499512                2.0  204697.096924  305.494873           1.0      300.000000 -158170.719482       3.0
7      -157376.214355      -158072.717773    -157376.214355  200600.000000     200.000000    -158072.717773      394.505127              294.505127           100.0      150.499512                2.0  204697.096924  301.998291           1.0      300.000000 -158070.719482       3.0
8      -157176.214355      -157973.217285    -157176.214355  200696.503418     200.000000    -157973.217285      494.505127              394.505127           100.0      150.499512                2.0  204697.096924  302.497803           1.0      300.000000 -157970.719482       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=2025493/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1023/2048, buf_size=300, start_state=[0].[0m
[01/30 16:00:08]  --------------------------------------------------------------------------------
[01/30 16:00:08]  Iteration: 29 (0 solution, 28 counterexamples)
[01/30 16:00:42]  Generator returned sat in 31.965168 secs.
[01/30 16:00:43]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 3/2min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 16:00:53]  Improved number of small numbers from 90 to 135 out of a max of 135
[01/30 16:00:53]  Verifer returned sat in 10.686205 secs.
[01/30 16:00:53]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0         -3.046066e+06         -3.046874e+06       -3.046066e+06         0.998047         0.997314       -3.046874e+06          0.997314                  0.000000             100.0        113.288086                  6.0  806.98291          -1.0       7.0
1         -3.045966e+06         -3.046774e+06       -3.045966e+06    100807.980225       100.000000       -3.046774e+06          0.997314                  0.997314             100.0        113.288086                  6.0  806.98291           1.0       7.0
2         -3.045866e+06         -3.046674e+06       -3.045866e+06    100807.980225       100.000000       -3.046674e+06          0.997314                  0.997314             100.0        113.288086                  7.0  806.98291           1.0       8.0
3         -3.045766e+06         -3.046574e+06       -3.045766e+06    100807.980225       100.000000       -3.046574e+06          0.997314                  0.997314             100.0        113.288086                  5.0  806.98291           1.0       6.0
4         -3.045666e+06         -3.046474e+06       -3.045666e+06    100807.980225       100.000000       -3.046474e+06          0.997314                  0.997314             100.0        113.288086                  6.0  806.98291           1.0       7.0
5         -3.045566e+06         -3.046374e+06       -3.045566e+06    100807.980225       100.000000       -3.046374e+06          0.997314                  0.997314             100.0        113.288086                  6.0  806.98291           1.0       7.0
6         -3.045466e+06         -3.046274e+06       -3.045466e+06    100807.980225       100.000000       -3.046274e+06          0.997314                  0.997314             100.0        113.288086                  6.0  806.98291           1.0       7.0
7         -3.045366e+06         -3.046174e+06       -3.045366e+06    100807.980225       100.000000       -3.046174e+06          0.997314                  0.997314             100.0        113.288086                  7.0  806.98291           1.0       8.0
8         -3.045266e+06         -3.046074e+06       -3.045266e+06    100807.980225       100.000000       -3.046074e+06          0.997314                  0.997314             100.0        113.288086                  7.0  806.98291           1.0       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=8171/4096, buf_size=206843/256, start_state=[0].[0m
[01/30 16:00:53]  --------------------------------------------------------------------------------
[01/30 16:00:53]  Iteration: 30 (0 solution, 29 counterexamples)
[01/30 16:04:56]  Generator returned sat in 239.663322 secs.
[01/30 16:04:56]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 16:05:19]  Verifer returned unsat in 23.139043 secs.
[01/30 16:06:39]  Improved number of small numbers from 108 to 145 out of a max of 145
[01/30 16:06:39]  Verifer returned sat in 79.350906 secs.
[01/30 16:06:39]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -318264.628662      -318465.626953    -318264.628662       0.499268       0.499512    -318465.626953        0.499268                0.000000           100.0      194.508057                0.0  204697.096924  200.499023          -1.0      100.499023 -318365.626953       1.0
1      -318064.628662      -318265.626953    -318064.628662  200200.998291     200.000000    -318265.626953        5.990967                0.499268           100.0      194.508057                0.0  204697.096924  195.007324           1.0      195.007324 -318265.626953       1.0
2      -317864.628662      -318265.127930    -317864.628662  200200.998291     200.000000    -318265.127930      105.990967                5.990967           100.0      194.508057                1.0  204697.096924  294.508301           1.0      195.007324 -318165.626953       2.0
3      -317784.129395      -318070.619629    -317784.129395   80899.766846      80.499268    -318070.619629      105.990967              105.990967           100.0      194.508057                1.0  204697.096924  180.499268           1.0      175.506592 -318065.626953       2.0
4      -317703.630127      -317970.120361    -317703.630127   80785.757812      80.499268    -317970.120361      105.990967              105.990967           100.0      194.508057                0.0  204697.096924  160.499268           0.0      156.005859 -317965.626953       1.0
5      -317503.630127      -317868.622559    -317503.630127  200266.490234     200.000000    -317868.622559      166.989502              105.990967           100.0      194.508057                0.0  204697.096924  198.002930           0.0      195.007324 -317865.626953       1.0
6      -317303.630127      -317865.626953    -317303.630127  200364.992432     200.000000    -317865.626953      266.989502              166.989502           100.0      194.508057                1.0  204697.096924  295.007324           1.0      195.007324 -317765.626953       2.0
7      -317223.130859      -317669.621094    -317223.130859   81061.264404      80.499268    -317669.621094      266.989502              266.989502           100.0      194.508057                0.0  204697.096924  179.500732           1.0      175.506592 -317665.626953       1.0
8      -317023.130859      -317570.120605    -317023.130859  200446.490234     200.000000    -317570.120605      347.488770              266.989502           100.0      194.508057                0.0  204697.096924  199.500977           0.0      195.007324 -317565.626953       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=1398775/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=79875/4096, buf_size=399375/2048, start_state=[0].[0m
[01/30 16:06:39]  --------------------------------------------------------------------------------
[01/30 16:06:39]  Iteration: 31 (0 solution, 30 counterexamples)
[01/30 16:08:27]  Generator returned sat in 105.492195 secs.
[01/30 16:08:27]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 16:08:36]  Improved number of small numbers from 99 to 135 out of a max of 135
[01/30 16:08:36]  Verifer returned sat in 8.877798 secs.
[01/30 16:08:36]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         -2.817985e+06         -2.818831e+06       -2.817985e+06         0.997803          0.99707       -2.818831e+06               0.5                       0.0             100.0        113.785645                  4.0  845.232178          -1.0       5.0
1         -2.817885e+06         -2.818731e+06       -2.817885e+06    100845.732178        100.00000       -2.818731e+06               0.5                       0.5             100.0        113.785645                  0.0  845.232178           1.0       1.0
2         -2.817785e+06         -2.818631e+06       -2.817785e+06    100845.732178        100.00000       -2.818631e+06               0.5                       0.5             100.0        113.785645                  1.0  845.232178           1.0       2.0
3         -2.817685e+06         -2.818531e+06       -2.817685e+06    100845.732178        100.00000       -2.818531e+06               0.5                       0.5             100.0        113.785645                  2.0  845.232178           1.0       3.0
4         -2.817585e+06         -2.818431e+06       -2.817585e+06    100845.732178        100.00000       -2.818431e+06               0.5                       0.5             100.0        113.785645                  3.0  845.232178           1.0       4.0
5         -2.817485e+06         -2.818331e+06       -2.817485e+06    100845.732178        100.00000       -2.818331e+06               0.5                       0.5             100.0        113.785645                  4.0  845.232178           1.0       5.0
6         -2.817385e+06         -2.818231e+06       -2.817385e+06    100845.732178        100.00000       -2.818231e+06               0.5                       0.5             100.0        113.785645                  5.0  845.232178           1.0       6.0
7         -2.817285e+06         -2.818131e+06       -2.817285e+06    100845.732178        100.00000       -2.818131e+06               0.5                       0.5             100.0        113.785645                  6.0  845.232178           1.0       7.0
8         -2.817185e+06         -2.818031e+06       -2.817185e+06    100845.732178        100.00000       -2.818031e+06               0.5                       0.5             100.0        113.785645                  7.0  845.232178           1.0       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=835/56, buf_size=3462071/4096, start_state=[0].[0m
[01/30 16:08:36]  --------------------------------------------------------------------------------
[01/30 16:08:36]  Iteration: 32 (0 solution, 31 counterexamples)
[01/30 16:10:49]  Generator returned sat in 130.392275 secs.
[01/30 16:10:50]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 16:11:08]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 16:11:08]  Verifer returned sat in 18.368478 secs.
[01/30 16:11:08]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0         -2.753317e+06         -2.753343e+06       -2.753317e+06         0.997803          0.99707       -2.753343e+06               0.0                       0.0          34.66276             100.0                  0.0  25.689128          -1.0       1.0
1         -2.753282e+06         -2.753282e+06       -2.753282e+06     34688.449544         34.66276       -2.753282e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
2         -2.753248e+06         -2.753248e+06       -2.753248e+06     34662.760417         34.66276       -2.753248e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
3         -2.753213e+06         -2.753213e+06       -2.753213e+06     34662.760417         34.66276       -2.753213e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
4         -2.753178e+06         -2.753178e+06       -2.753178e+06     34662.760417         34.66276       -2.753178e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
5         -2.753144e+06         -2.753144e+06       -2.753144e+06     34662.760417         34.66276       -2.753144e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
6         -2.753109e+06         -2.753109e+06       -2.753109e+06     34662.760417         34.66276       -2.753109e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
7         -2.753074e+06         -2.753074e+06       -2.753074e+06     34662.760417         34.66276       -2.753074e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
8         -2.753040e+06         -2.753040e+06       -2.753040e+06     34662.760417         34.66276       -2.753040e+06               0.0                       0.0          34.66276             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1021/1024, buf_size=78917/3072, start_state=[0].[0m
[01/30 16:11:08]  --------------------------------------------------------------------------------
[01/30 16:11:08]  Iteration: 33 (0 solution, 32 counterexamples)
[01/30 16:15:32]  Generator returned sat in 261.036615 secs.
[01/30 16:15:32]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 16:15:45]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 16:15:45]  Verifer returned sat in 12.103707 secs.
[01/30 16:15:45]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         -2.908255e+06         -2.908337e+06       -2.908255e+06         0.997559         0.996826       -2.908337e+06          0.000000                  0.000000         89.388889        119.518519                  1.0   81.722222          -1.0       2.0
1         -2.908146e+06         -2.908237e+06       -2.908146e+06    108970.611111       108.888889       -2.908237e+06          0.000000                  0.000000         89.388889        119.518519                  0.0   90.611111           0.0       0.0
2         -2.908037e+06         -2.908137e+06       -2.908037e+06    108979.500000       108.888889       -2.908137e+06          0.000000                  0.000000         89.388889        119.518519                  0.0   99.500000           0.0       0.0
3         -2.907928e+06         -2.908037e+06       -2.907928e+06    108988.388889       108.888889       -2.908037e+06          8.388889                  0.000000         89.388889        119.518519                  0.0  100.000000           0.0       0.0
4         -2.907820e+06         -2.907937e+06       -2.907820e+06    108997.277778       108.888889       -2.907937e+06         17.277778                  8.388889         89.388889        119.518519                  0.0  100.000000           1.0       1.0
5         -2.907711e+06         -2.907837e+06       -2.907711e+06    109006.166667       108.888889       -2.907837e+06         26.166667                 17.277778         89.388889        119.518519                  0.0  100.000000           1.0       1.0
6         -2.907602e+06         -2.907737e+06       -2.907602e+06    109015.055556       108.888889       -2.907737e+06         35.055556                 26.166667         89.388889        119.518519                  0.0  100.000000           1.0       1.0
7         -2.907493e+06         -2.907637e+06       -2.907493e+06    109023.944444       108.888889       -2.907637e+06         43.944444                 35.055556         89.388889        119.518519                  0.0  100.000000           1.0       1.0
8         -2.907384e+06         -2.907537e+06       -2.907384e+06    109032.833333       108.888889       -2.907537e+06         52.833333                 43.944444         89.388889        119.518519                  0.0  100.000000           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=0, loss_amount=317/6, beliefs_remain_consistent=True, beliefs_improve=False, alpha=39/2, buf_size=100, start_state=[0].[0m
[01/30 16:15:45]  --------------------------------------------------------------------------------
[01/30 16:15:45]  Iteration: 34 (0 solution, 33 counterexamples)
[01/30 16:19:11]  Generator returned sat in 203.801960 secs.
[01/30 16:19:12]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 16:19:40]  Verifer returned unsat in 27.931498 secs.
[01/30 16:20:06]  Improved number of small numbers from 108 to 110 out of a max of 145
[01/30 16:20:06]  Verifer returned sat in 26.125586 secs.
[01/30 16:20:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -651606.118107      -651606.118107    -651606.118107       0.499023       0.499512    -651606.118107        0.000000                0.000000       87.142857           135.0                0.0  204697.096924    0.000000          -1.0       -6.785714 -651599.332393       0.0
1      -651499.332393      -651572.903822    -651499.332393  106785.714286     106.785714    -651572.903822        0.000000                0.000000       87.142857           135.0                0.0  204697.096924   73.571429           0.0        0.000000 -651499.332393       0.0
2      -651392.546679      -651399.332393    -651392.546679  106859.285714     106.785714    -651399.332393        0.000000                0.000000       87.142857           135.0                0.0  204697.096924    6.785714           0.0        6.785714 -651399.332393       0.0
3      -651285.760964      -651399.332393    -651285.760964  106792.500000     106.785714    -651399.332393        0.000000                0.000000       87.142857           135.0                0.0  204697.096924  113.571429           0.0       13.571429 -651299.332393       0.0
4      -651178.975250      -651285.403822    -651178.975250  106899.285714     106.785714    -651285.403822        0.357143                0.000000       87.142857           135.0                0.0  204697.096924  106.071429           0.0       20.000000 -651199.332393       0.0
5      -651072.189536      -651178.975250    -651072.189536  106892.142857     106.785714    -651178.975250        7.142857                0.357143       87.142857           135.0                0.0  204697.096924   99.642857           1.0       20.000000 -651099.332393       0.0
6      -650965.403822      -651079.332393    -650965.403822  106892.500000     106.785714    -651079.332393       13.928571                7.142857       87.142857           135.0                0.0  204697.096924  100.000000           1.0       20.000000 -650999.332393       1.0
7      -650858.618107      -650979.332393    -650858.618107  106899.642857     106.785714    -650979.332393       20.714286               13.928571       87.142857           135.0                0.0  204697.096924  100.000000           1.0       20.000000 -650899.332393       1.0
8      -650751.832393      -650879.332520    -650751.832393  106906.428571     106.785714    -650879.332520       27.500000               20.714286       87.142857           135.0                0.0  204697.096924  100.000126           1.0       20.000000 -650799.332393       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=55/2, beliefs_remain_consistent=True, beliefs_improve=False, alpha=275/14, buf_size=20, start_state=[0].[0m
[01/30 16:20:06]  --------------------------------------------------------------------------------
[01/30 16:20:06]  Iteration: 35 (0 solution, 34 counterexamples)
[01/30 16:23:08]  Generator returned sat in 178.916058 secs.
[01/30 16:23:08]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/30 16:23:24]  Improved number of small numbers from 82 to 82 out of a max of 135
[01/30 16:23:24]  Verifer returned sat in 15.957499 secs.
[01/30 16:23:24]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         -2.792685e+06         -2.792685e+06       -2.792685e+06         0.997314         0.996582       -2.792685e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0          -1.0       1.0
1         -2.792642e+06         -2.792642e+06       -2.792642e+06     43625.427246        43.625427       -2.792642e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
2         -2.792598e+06         -2.792598e+06       -2.792598e+06     43625.427246        43.625427       -2.792598e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
3         -2.792554e+06         -2.792554e+06       -2.792554e+06     43625.427246        43.625427       -2.792554e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
4         -2.792511e+06         -2.792511e+06       -2.792511e+06     43625.427246        43.625427       -2.792511e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
5         -2.792467e+06         -2.792467e+06       -2.792467e+06     43625.427246        43.625427       -2.792467e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
6         -2.792423e+06         -2.792423e+06       -2.792423e+06     43625.427246        43.625427       -2.792423e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
7         -2.792380e+06         -2.792380e+06       -2.792380e+06     43625.427246        43.625427       -2.792380e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
8         -2.792336e+06         -2.792336e+06       -2.792336e+06     43625.427246        43.625427       -2.792336e+06               0.0                       0.0         87.250854             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2041/2048, buf_size=2041/1024, start_state=[0].[0m
[01/30 16:23:24]  --------------------------------------------------------------------------------
[01/30 16:23:24]  Iteration: 36 (0 solution, 35 counterexamples)
[01/30 16:28:52]  Generator returned sat in 324.503371 secs.
[01/30 16:28:52]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 16:29:11]  Verifer returned unsat in 18.122294 secs.
[01/30 16:30:34]  Improved gap from 0.0 to 48.4375
[01/30 16:30:34]  Improved number of small numbers from 109 to 146 out of a max of 146
[01/30 16:30:34]  Verifer returned sat in 83.570308 secs.
[01/30 16:30:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -645091.796387      -645093.424072    -645091.796387       0.499023       0.499512    -645093.424072             0.0                     0.0            50.0           100.0                0.0  204648.724609   1.627686          -1.0        1.128662 -645092.925049       1.0
1      -645041.796387      -645092.925049    -645041.796387   50001.627686      50.000000    -645092.925049             0.0                     0.0            50.0           100.0                1.0  204697.096924  51.128662           1.0       -0.499023 -645041.297363       2.0
2      -644994.422363      -645041.297363    -644994.422363   47425.152100      47.374023    -645041.297363             0.0                     0.0            50.0           100.0                0.0  204748.659424  46.875000           0.0       -1.562500 -644992.859863       0.0
3      -644944.422363      -644992.859863    -644944.422363   50046.875000      50.000000    -644992.859863             0.0                     0.0            50.0           100.0                0.0  204800.221924  48.437500           0.0        0.000000 -644944.422363       0.0
4      -644894.422363      -644944.422363    -644894.422363   50048.437500      50.000000    -644944.422363             0.0                     0.0            50.0           100.0                0.0  204850.221924  50.000000           0.0        0.000000 -644894.422363       1.0
5      -644844.422363      -644894.422363    -644844.422363   50050.000000      50.000000    -644894.422363             0.0                     0.0            50.0           100.0                0.0  204900.221924  50.000000           0.0        0.000000 -644844.422363       1.0
6      -644794.422363      -644844.422363    -644794.422363   50050.000000      50.000000    -644844.422363             0.0                     0.0            50.0           100.0                0.0  204950.221924  50.000000           0.0        0.000000 -644794.422363       1.0
7      -644744.422363      -644792.859863    -644744.422363   50050.000000      50.000000    -644792.859863             0.0                     0.0            50.0           100.0                0.0  205000.221924  48.437500           0.0        0.000000 -644744.422363       0.0
8      -644694.422363      -644743.923096    -644694.422363   50048.437500      50.000000    -644743.923096             0.0                     0.0            50.0           100.0                0.0  205000.221924  49.500732           0.0      -50.000000 -644644.422363       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2689/1024, buf_size=100, start_state=[0].[0m
[01/30 16:30:34]  --------------------------------------------------------------------------------
[01/30 16:30:34]  Iteration: 37 (0 solution, 36 counterexamples)
[01/30 16:31:45]  Generator returned sat in 67.150347 secs.
[01/30 16:31:45]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 16:32:12]  Verifer returned unsat in 27.033821 secs.
[01/30 16:35:40]  Improved gap from 0.0 to 48.4375
[01/30 16:35:42]  Improved number of small numbers from 94 to 105 out of a max of 146
[01/30 16:35:42]  Verifer returned sat in 209.621738 secs.
[01/30 16:35:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -645090.729610      -645090.780014    -645090.729610       0.498779       0.499512    -645090.780014             0.0                     0.0       53.830645      106.663086                2.0  204648.724609   0.050403          -1.0        0.000000 -645090.729610       3.0
1      -645036.898965      -645090.729610    -645036.898965   53830.695565      53.830645    -645090.729610             0.0                     0.0       53.830645      106.663086                3.0  204694.893799  53.830645           1.0       -0.000165 -645036.898800       4.0
2      -645009.983643      -645036.848562    -645009.983643   26969.153226      26.915323    -645036.848562             0.0                     0.0       53.830645      106.663086                0.0  204746.406061  26.864919           0.0      -21.572581 -644988.411062       0.0
3      -644956.152997      -644988.411062    -644956.152997   53857.510081      53.830645    -644988.411062             0.0                     0.0       53.830645      106.663086                0.0  204797.968561  32.258065           0.0      -16.179435 -644939.973562       0.0
4      -644902.322352      -644939.973562    -644902.322352   53862.903226      53.830645    -644939.973562             0.0                     0.0       53.830645      106.663086                0.0  204849.531061  37.651210           0.0      -10.786290 -644891.536062       0.0
5      -644848.491707      -644891.536062    -644848.491707   53868.296371      53.830645    -644891.536062             0.0                     0.0       53.830645      106.663086                0.0  204901.093561  43.044355           0.0       -5.393145 -644843.098562       0.0
6      -644794.661062      -644843.098562    -644794.661062   53873.689516      53.830645    -644843.098562             0.0                     0.0       53.830645      106.663086                0.0  204952.656061  48.437500           0.0        0.000000 -644794.661062       0.0
7      -644740.830417      -644794.661062    -644740.830417   53879.082661      53.830645    -644794.661062             0.0                     0.0       53.830645      106.663086                0.0  204998.825416  53.830645           0.0        0.000000 -644740.830417       1.0
8      -644686.999772      -644740.830417    -644686.999772   53884.475806      53.830645    -644740.830417             0.0                     0.0       53.830645      106.663086                0.0  204998.825439  53.830645           0.0      -46.169331 -644640.830440       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2043/4096, buf_size=300, start_state=[0].[0m
[01/30 16:35:42]  --------------------------------------------------------------------------------
[01/30 16:35:42]  Iteration: 38 (0 solution, 37 counterexamples)
[01/30 16:38:22]  Generator returned sat in 156.854466 secs.
[01/30 16:38:22]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 16:38:42]  Verifer returned unsat in 19.732996 secs.
[01/30 16:39:16]  Improved gap from 0.498779296875 to 100
[01/30 16:39:17]  Improved number of small numbers from 101 to 146 out of a max of 146
[01/30 16:39:17]  Verifer returned sat in 34.306254 secs.
[01/30 16:39:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -646031.228027      -646234.719238    -646031.228027       0.498535       0.499268    -646234.719238        0.000000                0.000000           100.0           200.0                1.0  205188.724121  203.491211          -1.0      103.491211 -646134.719238       2.0
1      -645831.228027      -646034.719238    -645831.228027  200203.491211     200.000000    -646034.719238        3.491211                0.000000           100.0           200.0                2.0  205188.724121  200.000000           1.0      200.000000 -646034.719238       3.0
2      -645781.228027      -646031.228027    -645781.228027   50203.491211      50.000000    -646031.228027        3.491211                3.491211           100.0           200.0                2.0  205188.724121  246.508789           1.0      150.000000 -645934.719238       3.0
3      -645731.228027      -645834.719238    -645731.228027   50250.000000      50.000000    -645834.719238        3.491211                3.491211           100.0           200.0                1.0  205188.724121  100.000000           1.0      100.000000 -645834.719238       2.0
4      -645531.228027      -645734.719238    -645531.228027  200103.491211     200.000000    -645734.719238        3.491211                3.491211           100.0           200.0                0.0  205188.724121  200.000000           0.0      200.000000 -645734.719238       1.0
5      -645331.228027      -645734.719238    -645331.228027  200203.491211     200.000000    -645734.719238      103.491211                3.491211           100.0           200.0                0.0  205188.724121  300.000000           0.0      200.000000 -645634.719238       1.0
6      -645131.228027      -645538.210693    -645131.228027  200403.491211     200.000000    -645538.210693      203.491211              103.491211           100.0           200.0                1.0  205188.724121  203.491455           1.0      200.000000 -645534.719238       2.0
7      -644931.228027      -645438.709473    -644931.228027  200406.982666     200.000000    -645438.709473      303.491211              203.491211           100.0           200.0                1.0  205188.724121  203.990234           1.0      200.000000 -645434.719238       2.0
8      -644731.228027      -645334.719238    -644731.228027  200507.481445     200.000000    -645334.719238      403.491211              303.491211           100.0           200.0                1.0  205188.724121  200.000000           1.0      200.000000 -645334.719238       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=400, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2043/4096, buf_size=200, start_state=[0].[0m
[01/30 16:39:17]  --------------------------------------------------------------------------------
[01/30 16:39:17]  Iteration: 39 (0 solution, 38 counterexamples)
[01/30 16:40:32]  Generator returned sat in 71.398856 secs.
[01/30 16:40:32]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1/2min_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 16:40:51]  Improved number of small numbers from 80 to 81 out of a max of 135
[01/30 16:40:51]  Verifer returned sat in 19.336232 secs.
[01/30 16:40:51]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         -2.753447e+06         -2.753447e+06       -2.753447e+06         0.996826         0.996338       -2.753447e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0          -1.0       1.0
1         -2.753403e+06         -2.753403e+06       -2.753403e+06     43625.427246        43.625427       -2.753403e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
2         -2.753360e+06         -2.753360e+06       -2.753360e+06     43625.427246        43.625427       -2.753360e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
3         -2.753316e+06         -2.753316e+06       -2.753316e+06     43625.427246        43.625427       -2.753316e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
4         -2.753272e+06         -2.753272e+06       -2.753272e+06     43625.427246        43.625427       -2.753272e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
5         -2.753229e+06         -2.753229e+06       -2.753229e+06     43625.427246        43.625427       -2.753229e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
6         -2.753185e+06         -2.753185e+06       -2.753185e+06     43625.427246        43.625427       -2.753185e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
7         -2.753142e+06         -2.753142e+06       -2.753142e+06     43625.427246        43.625427       -2.753142e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
8         -2.753098e+06         -2.753098e+06       -2.753098e+06     43625.427246        43.625427       -2.753098e+06               0.0                       0.0         57.869446             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=116687/8192, buf_size=31213/2048, start_state=[0].[0m
[01/30 16:40:51]  --------------------------------------------------------------------------------
[01/30 16:40:51]  Iteration: 40 (0 solution, 39 counterexamples)
[01/30 16:46:15]  Generator returned sat in 319.952654 secs.
[01/30 16:46:15]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 16:46:25]  Verifer returned unsat in 10.027758 secs.
[01/30 16:47:23]  Improved gap from 0.0 to 48.4375
[01/30 16:47:25]  Improved number of small numbers from 101 to 108 out of a max of 146
[01/30 16:47:25]  Verifer returned sat in 59.961331 secs.
[01/30 16:47:25]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -646165.079557      -646165.253168    -646165.079557       0.498291       0.499023    -646165.253168             0.0                     0.0       50.173611           100.0                1.0  205219.257812   0.173611          -1.0        0.173372 -646165.252930       2.0
1      -646114.905946      -646165.079557    -646114.905946   50173.784722      50.173611    -646165.079557             0.0                     0.0       50.173611           100.0                2.0  205268.910829  50.173611           1.0        0.000000 -646114.905946       3.0
2      -646066.468446      -646114.905946    -646066.468446   48487.673611      48.437500    -646114.905946             0.0                     0.0       50.173611           100.0                0.0  205320.473329  48.437500           0.0        0.000000 -646066.468446       1.0
3      -646016.294835      -646066.468446    -646016.294835   50222.048611      50.173611    -646066.468446             0.0                     0.0       50.173611           100.0                0.0  205368.563721  50.173611           0.0       -1.735997 -646014.558838       1.0
4      -645966.121224      -646014.558724    -645966.121224   50223.784722      50.173611    -646014.558724             0.0                     0.0       50.173611           100.0                0.0  205420.126107  48.437500           0.0        0.000000 -645966.121224       0.0
5      -645915.947613      -645966.121224    -645915.947613   50222.048611      50.173611    -645966.121224             0.0                     0.0       50.173611           100.0                0.0  205468.216553  50.173611           0.0       -1.735943 -645914.211670       1.0
6      -645865.774002      -645914.211502    -645865.774002   50223.784722      50.173611    -645914.211502             0.0                     0.0       50.173611           100.0                0.0  205519.778885  48.437500           0.0        0.000000 -645865.774002       0.0
7      -645815.600391      -645865.774002    -645815.600391   50222.048611      50.173611    -645865.774002             0.0                     0.0       50.173611           100.0                0.0  205569.605225  50.173611           0.0       -0.000049 -645815.600342       1.0
8      -645765.426779      -645815.427002    -645765.426779   50223.784722      50.173611    -645815.427002             0.0                     0.0       50.173611           100.0                0.0  205569.605469  50.000222           0.0      -49.826194 -645715.600586       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=125/72, buf_size=800, start_state=[0].[0m
[01/30 16:47:25]  --------------------------------------------------------------------------------
[01/30 16:47:25]  Iteration: 41 (0 solution, 40 counterexamples)
[01/30 16:49:20]  Generator returned sat in 110.665411 secs.
[01/30 16:49:20]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 16:49:46]  Verifer returned unsat in 25.739129 secs.
[01/30 16:51:33]  Improved number of small numbers from 145 to 145 out of a max of 145
[01/30 16:51:33]  Verifer returned sat in 106.504745 secs.
[01/30 16:51:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -696991.998535      -697143.493408    -696991.998535       0.498291       0.499023    -697143.493408        0.000000                0.000000           100.0      150.996582                2.0  205465.725098  151.494873          -1.0       51.494873 -697043.493408       3.0
1      -696791.998535      -696991.998535    -696791.998535  200151.494873     200.000000    -696991.998535        0.000000                0.000000           100.0      150.996582                3.0  205465.725098  200.000000           1.0      151.494873 -696943.493408       4.0
2      -696741.998535      -696943.493408    -696741.998535   50200.000000      50.000000    -696943.493408        0.000000                0.000000           100.0      150.996582                0.0  205465.725098  201.494873           0.0      101.494873 -696843.493408       1.0
3      -696541.998535      -696743.493408    -696541.998535  200201.494873     200.000000    -696743.493408        0.000000                0.000000           100.0      150.996582                0.0  205465.725098  201.494873           0.0      201.494873 -696743.493408       1.0
4      -696341.998535      -696702.462646    -696341.998535  200201.494873     200.000000    -696702.462646        1.494873                0.000000           100.0      150.996582                0.0  205465.725098  358.969238           0.0      300.000000 -696643.493408       1.0
5      -696141.998535      -696643.493408    -696141.998535  200360.464111     200.000000    -696643.493408      101.494873                1.494873           100.0      150.996582                1.0  205465.725098  400.000000           1.0      300.000000 -696543.493408       2.0
6      -695941.998535      -696541.500244    -695941.998535  200501.494873     200.000000    -696541.500244      201.494873              101.494873           100.0      150.996582                1.0  205465.725098  398.006836           1.0      300.000000 -696443.493408       2.0
7      -695741.998535      -696399.472900    -695741.998535  200599.501709     200.000000    -696399.472900      301.494873              201.494873           100.0      150.996582                2.0  205465.725098  355.979492           1.0      300.000000 -696343.493408       3.0
8      -695541.998535      -696247.978027    -695541.998535  200657.474365     200.000000    -696247.978027      401.494873              301.494873           100.0      150.996582                2.0  205465.725098  304.484619           1.0      300.000000 -696243.493408       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=1644523/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2041/4096, buf_size=300, start_state=[0].[0m
[01/30 16:51:33]  --------------------------------------------------------------------------------
[01/30 16:51:33]  Iteration: 42 (0 solution, 41 counterexamples)
[01/30 16:52:50]  Generator returned sat in 73.953730 secs.
[01/30 16:52:51]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 16:53:12]  Improved number of small numbers from 99 to 135 out of a max of 135
[01/30 16:53:12]  Verifer returned sat in 20.912061 secs.
[01/30 16:53:12]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         -2.972323e+06         -2.972345e+06       -2.972323e+06         0.996826         0.996094       -2.972345e+06               0.5                       0.0              41.0             100.0                  1.0     21.5          -1.0       2.0
1         -2.972282e+06         -2.972282e+06       -2.972282e+06     41022.000000        41.000000       -2.972282e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           1.0       0.0
2         -2.972241e+06         -2.972241e+06       -2.972241e+06     41000.500000        41.000000       -2.972241e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           0.0       0.0
3         -2.972200e+06         -2.972200e+06       -2.972200e+06     41000.500000        41.000000       -2.972200e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           0.0       0.0
4         -2.972159e+06         -2.972159e+06       -2.972159e+06     41000.500000        41.000000       -2.972159e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           0.0       0.0
5         -2.972118e+06         -2.972118e+06       -2.972118e+06     41000.500000        41.000000       -2.972118e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           0.0       0.0
6         -2.972077e+06         -2.972077e+06       -2.972077e+06     41000.500000        41.000000       -2.972077e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           0.0       0.0
7         -2.972036e+06         -2.972036e+06       -2.972036e+06     41000.500000        41.000000       -2.972036e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           0.0       0.0
8         -2.971995e+06         -2.971995e+06       -2.971995e+06     41000.500000        41.000000       -2.971995e+06               0.5                       0.5              41.0             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=79871/4096, buf_size=100, start_state=[0].[0m
[01/30 16:53:12]  --------------------------------------------------------------------------------
[01/30 16:53:12]  Iteration: 43 (0 solution, 42 counterexamples)
[01/30 17:04:21]  Generator returned sat in 666.078417 secs.
[01/30 17:04:22]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 17:04:44]  Verifer returned unsat in 21.898792 secs.
[01/30 17:05:03]  Improved number of small numbers from 100 to 108 out of a max of 145
[01/30 17:05:03]  Verifer returned sat in 18.602452 secs.
[01/30 17:05:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.890533e+07        9.890533e+07      9.890533e+07       0.498047       0.498535      9.890533e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939691e+07   0.454545          -1.0        0.000223  9.890533e+07       1.0
1        9.890539e+07        9.890533e+07      9.890539e+07   53636.818182      53.636364      9.890533e+07             0.0                     0.0       53.636364           100.0                1.0  -9.939689e+07  53.636364           1.0      -26.363413  9.890541e+07       2.0
2        9.890541e+07        9.890541e+07      9.890541e+07   26871.818182      26.818182      9.890541e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939679e+07   0.454545           0.0        0.000000  9.890541e+07       0.0
3        9.890547e+07        9.890541e+07      9.890547e+07   53636.818182      53.636364      9.890541e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939675e+07  53.636364           0.0        0.000000  9.890547e+07       1.0
4        9.890552e+07        9.890547e+07      9.890552e+07   53690.000000      53.636364      9.890547e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939675e+07  53.636364           0.0      -46.363568  9.890557e+07       1.0
5        9.890557e+07        9.890557e+07      9.890557e+07   53690.000000      53.636364      9.890557e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939670e+07   1.363636           0.0      -51.818025  9.890563e+07       0.0
6        9.890563e+07        9.890563e+07      9.890563e+07   53637.727273      53.636364      9.890563e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939661e+07   1.818182           0.0        0.000000  9.890563e+07       0.0
7        9.890568e+07        9.890563e+07      9.890568e+07   53638.181818      53.636364      9.890563e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939656e+07  53.636364           0.0       -0.454477  9.890568e+07       1.0
8        9.890574e+07        9.890568e+07      9.890574e+07   53690.000000      53.636364      9.890568e+07             0.0                     0.0       53.636364           100.0                0.0  -9.939656e+07  53.181886           0.0      -46.818114  9.890578e+07       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=215/11, buf_size=817339/4096, start_state=[0].[0m
[01/30 17:05:03]  --------------------------------------------------------------------------------
[01/30 17:05:03]  Iteration: 44 (0 solution, 43 counterexamples)
[01/30 17:10:43]  Generator returned sat in 336.580696 secs.
[01/30 17:10:44]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 17:11:09]  Verifer returned unsat in 25.033573 secs.
[01/30 17:18:52]  Verifer returned unsat in 462.857075 secs.
[01/30 17:18:52]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 17:18:52]  --------------------------------------------------------------------------------
[01/30 17:18:52]  Iteration: 45 (1 solution, 43 counterexamples)
[01/30 17:20:02]  Generator returned sat in 66.331394 secs.
[01/30 17:20:02]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 17:20:12]  Verifer returned unsat in 9.845416 secs.
[01/30 17:20:45]  Verifer returned unsat in 32.060231 secs.
[01/30 17:20:45]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 17:20:45]  --------------------------------------------------------------------------------
[01/30 17:20:45]  Iteration: 46 (2 solution, 43 counterexamples)
[01/30 17:21:43]  Generator returned sat in 54.955935 secs.
[01/30 17:21:44]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 17:22:01]  Verifer returned unsat in 17.545562 secs.
[01/30 17:30:02]  Verifer returned unsat in 480.705297 secs.
[01/30 17:30:02]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 17:30:02]  --------------------------------------------------------------------------------
[01/30 17:30:02]  Iteration: 47 (3 solution, 43 counterexamples)
[01/30 17:30:53]  Generator returned sat in 46.715381 secs.
[01/30 17:30:54]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 17:31:05]  Verifer returned unsat in 11.206869 secs.
[01/30 17:32:15]  Improved gap from 1.9921875 to 48.4375
[01/30 17:32:16]  Improved number of small numbers from 100 to 146 out of a max of 146
[01/30 17:32:16]  Verifer returned sat in 71.183891 secs.
[01/30 17:32:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.903566e+07        9.903566e+07      9.903566e+07       0.498047       0.498291      9.903566e+07             0.0                     0.0       50.249023           100.0                1.0  -9.939682e+07   8.129639          -1.0        0.000000  9.903566e+07       2.0
1        9.903571e+07        9.903566e+07      9.903571e+07   50257.153076      50.249023      9.903566e+07             0.0                     0.0       50.249023           100.0                2.0  -9.939677e+07  50.249023           1.0       -0.000244  9.903571e+07       3.0
2        9.903574e+07        9.903572e+07      9.903574e+07   25174.760742      25.124512      9.903572e+07             0.0                     0.0       50.249023           100.0                0.0  -9.939672e+07  24.626465           0.0      -23.811035  9.903576e+07       0.0
3        9.903579e+07        9.903576e+07      9.903579e+07   50273.649902      50.249023      9.903576e+07             0.0                     0.0       50.249023           100.0                0.0  -9.939667e+07  26.437988           0.0      -21.999512  9.903581e+07       0.0
4        9.903584e+07        9.903581e+07      9.903584e+07   50275.461426      50.249023      9.903581e+07             0.0                     0.0       50.249023           100.0                0.0  -9.939662e+07  28.249512           0.0      -20.187988  9.903586e+07       0.0
5        9.903589e+07        9.903586e+07      9.903589e+07   50277.272949      50.249023      9.903586e+07             0.0                     0.0       50.249023           100.0                0.0  -9.939657e+07  30.061035           0.0      -18.376465  9.903591e+07       0.0
6        9.903594e+07        9.903591e+07      9.903594e+07   50279.084473      50.249023      9.903591e+07             0.0                     0.0       50.249023           100.0                0.0  -9.939652e+07  31.872559           0.0      -16.564941  9.903596e+07       0.0
7        9.903599e+07        9.903596e+07      9.903599e+07   50280.895996      50.249023      9.903596e+07             0.0                     0.0       50.249023           100.0                0.0  -9.939647e+07  33.684082           0.0      -14.753418  9.903601e+07       0.0
8        9.903604e+07        9.903601e+07      9.903604e+07   50282.707520      50.249023      9.903601e+07             0.0                     0.0       50.249023           100.0                0.0  -9.939647e+07  35.495361           0.0      -64.504395  9.903611e+07       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=255/512, buf_size=200, start_state=[0].[0m
[01/30 17:32:16]  --------------------------------------------------------------------------------
[01/30 17:32:16]  Iteration: 48 (3 solution, 44 counterexamples)
[01/30 17:33:17]  Generator returned sat in 56.852272 secs.
[01/30 17:33:18]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/30 17:33:30]  Verifer returned unsat in 12.155896 secs.
[01/30 17:33:54]  Improved gap from 0.45454545454545453 to 100
[01/30 17:33:55]  Improved number of small numbers from 101 to 146 out of a max of 146
[01/30 17:33:55]  Verifer returned sat in 24.800960 secs.
[01/30 17:33:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.903565e+07        9.903565e+07      9.903565e+07       0.497803       0.498291      9.903565e+07        0.000000                0.000000       96.513672      145.766357                1.0  -9.939686e+07    0.000000          -1.0      -49.253174  9.903570e+07       2.0
1        9.903584e+07        9.903571e+07      9.903584e+07  193027.343750     193.027344      9.903571e+07        0.000000                0.000000       96.513672      145.766357                0.0  -9.939686e+07  135.805664           0.0       43.774170  9.903580e+07       0.0
2        9.903603e+07        9.903590e+07      9.903603e+07  193163.149414     193.027344      9.903590e+07        0.000000                0.000000       96.513672      145.766357                0.0  -9.939686e+07  136.801514           0.0      136.801514  9.903590e+07       0.0
3        9.903623e+07        9.903590e+07      9.903623e+07  193164.145264     193.027344      9.903590e+07        0.000000                0.000000       96.513672      145.766357                0.0  -9.939686e+07  329.828857           0.0      229.828857  9.903600e+07       0.0
4        9.903642e+07        9.903603e+07      9.903642e+07  193357.172607     193.027344      9.903603e+07       93.027100                0.000000       96.513672      145.766357                0.0  -9.939686e+07  292.529541           0.0      229.829102  9.903610e+07       1.0
5        9.903661e+07        9.903610e+07      9.903661e+07  193412.900391     193.027344      9.903610e+07      186.054443               93.027100       96.513672      145.766357                1.0  -9.939686e+07  329.829102           1.0      229.829102  9.903620e+07       2.0
6        9.903681e+07        9.903620e+07      9.903681e+07  193543.227295     193.027344      9.903620e+07      279.081787              186.054443       96.513672      145.766357                2.0  -9.939686e+07  329.829102           1.0      229.829102  9.903630e+07       3.0
7        9.903700e+07        9.903633e+07      9.903700e+07  193636.254639     193.027344      9.903633e+07      372.109131              279.081787       96.513672      145.766357                2.0  -9.939686e+07  300.000000           1.0      229.829102  9.903640e+07       3.0
8        9.903719e+07        9.903647e+07      9.903719e+07  193699.452881     193.027344      9.903647e+07      465.136475              372.109131       96.513672      145.766357                1.0  -9.939686e+07  253.735596           1.0      229.829102  9.903650e+07       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=1905199/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2039/4096, buf_size=235345/1024, start_state=[0].[0m
[01/30 17:33:55]  --------------------------------------------------------------------------------
[01/30 17:33:55]  Iteration: 49 (3 solution, 45 counterexamples)
[01/30 17:38:58]  Generator returned sat in 299.286082 secs.
[01/30 17:38:59]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 17:39:12]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 17:39:12]  Verifer returned sat in 13.409093 secs.
[01/30 17:39:12]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         -2.284763e+06         -2.284763e+06       -2.284763e+06         0.996826         0.996094       -2.284763e+06               0.0                       0.0              88.0        132.833333                  2.0      0.0          -1.0       3.0
1         -2.284675e+06         -2.284675e+06       -2.284675e+06     87166.666667        87.166667       -2.284675e+06               0.0                       0.0              88.0        132.833333                  0.0      0.0           0.0       0.0
2         -2.284499e+06         -2.284575e+06       -2.284499e+06    176000.000000       176.000000       -2.284575e+06               0.0                       0.0              88.0        132.833333                  0.0     76.0           0.0       0.0
3         -2.284323e+06         -2.284475e+06       -2.284323e+06    176076.000000       176.000000       -2.284475e+06               0.0                       0.0              88.0        132.833333                  0.0    152.0           0.0       0.0
4         -2.284147e+06         -2.284375e+06       -2.284147e+06    176152.000000       176.000000       -2.284375e+06              28.0                       0.0              88.0        132.833333                  0.0    200.0           0.0       1.0
5         -2.283971e+06         -2.284275e+06       -2.283971e+06    176228.000000       176.000000       -2.284275e+06             104.0                      28.0              88.0        132.833333                  0.0    200.0           1.0       1.0
6         -2.283795e+06         -2.284175e+06       -2.283795e+06    176304.000000       176.000000       -2.284175e+06             180.0                     104.0              88.0        132.833333                  1.0    200.0           1.0       2.0
7         -2.283619e+06         -2.284075e+06       -2.283619e+06    176380.000000       176.000000       -2.284075e+06             256.0                     180.0              88.0        132.833333                  1.0    200.0           1.0       2.0
8         -2.283443e+06         -2.283975e+06       -2.283443e+06    176456.000000       176.000000       -2.283975e+06             332.0                     256.0              88.0        132.833333                  1.0    200.0           1.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=332, beliefs_remain_consistent=True, beliefs_improve=False, alpha=5/6, buf_size=200, start_state=[0].[0m
[01/30 17:39:12]  --------------------------------------------------------------------------------
[01/30 17:39:12]  Iteration: 50 (3 solution, 46 counterexamples)
[01/30 17:47:08]  Generator returned sat in 471.595843 secs.
[01/30 17:47:09]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/30 17:47:23]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 17:47:23]  Verifer returned sat in 14.043002 secs.
[01/30 17:47:23]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         -2.285567e+06         -2.285567e+06       -2.285567e+06         0.996582         0.996094       -2.285567e+06          0.000000                  0.000000         88.555556        132.833333                  1.0    0.000000          -1.0       2.0
1         -2.285474e+06         -2.285474e+06       -2.285474e+06     92500.000000        92.500000       -2.285474e+06          0.000000                  0.000000         88.555556        132.833333                  0.0    0.000000           0.0       0.0
2         -2.285297e+06         -2.285374e+06       -2.285297e+06    177111.111111       177.111111       -2.285374e+06          0.000000                  0.000000         88.555556        132.833333                  0.0   77.111111           0.0       0.0
3         -2.285120e+06         -2.285274e+06       -2.285120e+06    177188.222222       177.111111       -2.285274e+06          0.000000                  0.000000         88.555556        132.833333                  0.0  154.222222           0.0       0.0
4         -2.284943e+06         -2.285174e+06       -2.284943e+06    177265.333333       177.111111       -2.285174e+06         31.833333                  0.000000         88.555556        132.833333                  0.0  199.500000           0.0       1.0
5         -2.284766e+06         -2.285074e+06       -2.284766e+06    177342.444444       177.111111       -2.285074e+06        108.944444                 31.833333         88.555556        132.833333                  0.0  199.500000           1.0       1.0
6         -2.284589e+06         -2.284974e+06       -2.284589e+06    177419.555556       177.111111       -2.284974e+06        186.055556                108.944444         88.555556        132.833333                  0.0  199.500000           1.0       1.0
7         -2.284412e+06         -2.284874e+06       -2.284412e+06    177496.666667       177.111111       -2.284874e+06        263.166667                186.055556         88.555556        132.833333                  0.0  199.500000           1.0       1.0
8         -2.284234e+06         -2.284774e+06       -2.284234e+06    177573.777778       177.111111       -2.284774e+06        340.277778                263.166667         88.555556        132.833333                  0.0  199.500000           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=6125/18, beliefs_remain_consistent=True, beliefs_improve=False, alpha=71/18, buf_size=399/2, start_state=[0].[0m
[01/30 17:47:23]  --------------------------------------------------------------------------------
[01/30 17:47:23]  Iteration: 51 (3 solution, 47 counterexamples)
[01/30 17:54:10]  Generator returned sat in 402.577361 secs.
[01/30 17:54:10]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 17:54:21]  Verifer returned unsat in 10.542266 secs.
[01/30 17:54:45]  Improved number of small numbers from 108 to 145 out of a max of 145
[01/30 17:54:45]  Verifer returned sat in 24.055107 secs.
[01/30 17:54:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.893828e+07        9.893808e+07      9.893828e+07       0.497559       0.498047      9.893808e+07        0.000000                0.000000           100.0           200.0                0.0  -9.939686e+07  200.497803          -1.0      102.488770  9.893817e+07       1.0
1        9.893848e+07        9.893827e+07      9.893848e+07  200200.497803     200.000000      9.893827e+07       99.999756                0.000000           100.0           200.0                1.0  -9.939686e+07  102.489014           1.0      102.489014  9.893827e+07       2.0
2        9.893857e+07        9.893828e+07      9.893857e+07   97713.475098      97.510986      9.893828e+07       99.999756               99.999756           100.0           200.0                1.0  -9.939686e+07  197.511230           1.0      100.000000  9.893837e+07       2.0
3        9.893867e+07        9.893838e+07      9.893867e+07   97808.497314      97.510986      9.893838e+07       99.999756               99.999756           100.0           200.0                0.0  -9.939686e+07  194.524170           0.0       97.510986  9.893847e+07       1.0
4        9.893887e+07        9.893847e+07      9.893887e+07  200294.523926     200.000000      9.893847e+07      195.021729               99.999756           100.0           200.0                1.0  -9.939686e+07  202.489014           1.0      102.489014  9.893857e+07       2.0
5        9.893897e+07        9.893858e+07      9.893897e+07   97908.497070      97.510986      9.893858e+07      195.021729              195.021729           100.0           200.0                0.0  -9.939686e+07  196.515625           1.0      100.000000  9.893867e+07       1.0
6        9.893917e+07        9.893877e+07      9.893917e+07  200391.537354     200.000000      9.893877e+07      292.532715              195.021729           100.0           200.0                0.0  -9.939686e+07  105.475830           0.0      102.489014  9.893877e+07       1.0
7        9.893937e+07        9.893887e+07      9.893937e+07  200398.008545     200.000000      9.893887e+07      392.532715              292.532715           100.0           200.0                0.0  -9.939686e+07  104.480225           1.0      102.489014  9.893887e+07       1.0
8        9.893957e+07        9.893897e+07      9.893957e+07  200497.012939     200.000000      9.893897e+07      492.532715              392.532715           100.0           200.0                0.0  -9.939686e+07  104.978271           1.0      102.489014  9.893897e+07       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=1607815/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=10195/4096, buf_size=419795/4096, start_state=[0].[0m
[01/30 17:54:45]  --------------------------------------------------------------------------------
[01/30 17:54:45]  Iteration: 52 (3 solution, 48 counterexamples)
[01/30 17:57:04]  Generator returned sat in 134.486814 secs.
[01/30 17:57:04]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 17:57:16]  Verifer returned unsat in 11.485530 secs.
[01/30 18:04:45]  Verifer returned unsat in 449.691256 secs.
[01/30 18:04:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:04:46]  --------------------------------------------------------------------------------
[01/30 18:04:46]  Iteration: 53 (4 solution, 48 counterexamples)
[01/30 18:05:32]  Generator returned sat in 41.717082 secs.
[01/30 18:05:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:05:52]  Verifer returned unsat in 19.530774 secs.
[01/30 18:06:44]  Verifer returned unsat in 51.781686 secs.
[01/30 18:06:44]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:06:44]  --------------------------------------------------------------------------------
[01/30 18:06:44]  Iteration: 54 (5 solution, 48 counterexamples)
[01/30 18:07:54]  Generator returned sat in 65.695551 secs.
[01/30 18:07:54]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:08:11]  Verifer returned unsat in 16.716848 secs.
[01/30 18:09:10]  Improved gap from 0.49755859375 to 48.4375
[01/30 18:09:12]  Improved number of small numbers from 100 to 106 out of a max of 146
[01/30 18:09:12]  Verifer returned sat in 60.458365 secs.
[01/30 18:09:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.895351e+07        9.895349e+07      9.895351e+07       0.497559       0.497803      9.895349e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941218e+07  11.814024          -1.0       11.814004  9.895349e+07       0.0
1        9.895355e+07        9.895349e+07      9.895355e+07   47084.984756      47.073171      9.895349e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941213e+07  58.389637           0.0       -0.243685  9.895355e+07       1.0
2        9.895360e+07        9.895355e+07      9.895360e+07   47131.560368      47.073171      9.895355e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941208e+07  46.829268           0.0       -1.608232  9.895360e+07       0.0
3        9.895365e+07        9.895360e+07      9.895365e+07   47120.000000      47.073171      9.895360e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941203e+07  45.464939           0.0       -2.972561  9.895365e+07       0.0
4        9.895369e+07        9.895365e+07      9.895369e+07   47118.635671      47.073171      9.895365e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941198e+07  44.100610           0.0       -4.336890  9.895370e+07       0.0
5        9.895374e+07        9.895370e+07      9.895374e+07   47117.271341      47.073171      9.895370e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941193e+07  42.736280           0.0       -5.701220  9.895375e+07       0.0
6        9.895379e+07        9.895375e+07      9.895379e+07   47115.907012      47.073171      9.895375e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941188e+07  41.371951           0.0       -7.065549  9.895380e+07       0.0
7        9.895384e+07        9.895380e+07      9.895384e+07   47114.542683      47.073171      9.895380e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941183e+07  40.007622           0.0       -8.429904  9.895384e+07       0.0
8        9.895388e+07        9.895384e+07      9.895388e+07   47113.178354      47.073171      9.895384e+07             0.0                     0.0       66.829268           100.0                0.0  -9.941177e+07  38.643266           0.0       -9.794234  9.895389e+07       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=810/41, buf_size=81919/4096, start_state=[0].[0m
[01/30 18:09:12]  --------------------------------------------------------------------------------
[01/30 18:09:12]  Iteration: 55 (5 solution, 49 counterexamples)
[01/30 18:11:41]  Generator returned sat in 144.046576 secs.
[01/30 18:11:41]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:11:54]  Verifer returned unsat in 12.499437 secs.
[01/30 18:12:26]  Verifer returned unsat in 32.575004 secs.
[01/30 18:12:26]  Proved solution: 
[1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:12:27]  --------------------------------------------------------------------------------
[01/30 18:12:27]  Iteration: 56 (6 solution, 49 counterexamples)
[01/30 18:13:23]  Generator returned sat in 51.534167 secs.
[01/30 18:13:23]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:13:46]  Verifer returned unsat in 22.460238 secs.
[01/30 18:14:12]  Verifer returned unsat in 25.859147 secs.
[01/30 18:14:12]  Proved solution: 
[1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:14:12]  --------------------------------------------------------------------------------
[01/30 18:14:12]  Iteration: 57 (7 solution, 49 counterexamples)
[01/30 18:16:27]  Generator returned sat in 130.653661 secs.
[01/30 18:16:27]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 18:16:34]  Improved number of small numbers from 99 to 135 out of a max of 135
[01/30 18:16:34]  Verifer returned sat in 6.236486 secs.
[01/30 18:16:34]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         -5.364887e+07         -5.364973e+07       -5.364887e+07         0.996338          0.99585       -5.364973e+07          0.499756                  0.000000             100.0        113.785645                  0.0  855.571533          -1.0       0.0
1         -5.364877e+07         -5.364963e+07       -5.364877e+07    100856.071289        100.00000       -5.364963e+07          0.499756                  0.499756             100.0        113.785645                  0.0  855.571533           1.0       1.0
2         -5.364867e+07         -5.364953e+07       -5.364867e+07    100856.071289        100.00000       -5.364953e+07          0.499756                  0.499756             100.0        113.785645                  1.0  855.571533           1.0       2.0
3         -5.364857e+07         -5.364943e+07       -5.364857e+07    100856.071289        100.00000       -5.364943e+07          0.499756                  0.499756             100.0        113.785645                  2.0  855.571533           1.0       3.0
4         -5.364847e+07         -5.364933e+07       -5.364847e+07    100856.071289        100.00000       -5.364933e+07          0.499756                  0.499756             100.0        113.785645                  3.0  855.571533           1.0       4.0
5         -5.364837e+07         -5.364923e+07       -5.364837e+07    100856.071289        100.00000       -5.364923e+07          0.499756                  0.499756             100.0        113.785645                  4.0  855.571533           1.0       5.0
6         -5.364827e+07         -5.364913e+07       -5.364827e+07    100856.071289        100.00000       -5.364913e+07          0.499756                  0.499756             100.0        113.785645                  5.0  855.571533           1.0       6.0
7         -5.364817e+07         -5.364903e+07       -5.364817e+07    100856.071289        100.00000       -5.364903e+07          0.499756                  0.499756             100.0        113.785645                  6.0  855.571533           1.0       7.0
8         -5.364807e+07         -5.364893e+07       -5.364807e+07    100856.071289        100.00000       -5.364893e+07          0.499756                  0.499756             100.0        113.785645                  7.0  855.571533           1.0       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=37595/2048, buf_size=876617/1024, start_state=[0].[0m
[01/30 18:16:34]  --------------------------------------------------------------------------------
[01/30 18:16:34]  Iteration: 58 (7 solution, 50 counterexamples)
[01/30 18:20:45]  Generator returned sat in 246.088898 secs.
[01/30 18:20:45]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:20:56]  Verifer returned unsat in 11.242122 secs.
[01/30 18:22:04]  Verifer returned unsat in 67.846945 secs.
[01/30 18:22:04]  Proved solution: 
[1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:22:04]  --------------------------------------------------------------------------------
[01/30 18:22:04]  Iteration: 59 (8 solution, 50 counterexamples)
[01/30 18:22:59]  Generator returned sat in 50.346119 secs.
[01/30 18:23:00]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:23:40]  Verifer returned unsat in 39.740025 secs.
[01/30 18:27:22]  Verifer returned unsat in 221.946150 secs.
[01/30 18:27:22]  Proved solution: 
[1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:27:22]  --------------------------------------------------------------------------------
[01/30 18:27:22]  Iteration: 60 (9 solution, 50 counterexamples)
[01/30 18:28:22]  Generator returned sat in 55.908700 secs.
[01/30 18:28:23]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:28:31]  Verifer returned unsat in 8.094393 secs.
[01/30 18:32:46]  Verifer returned unsat in 255.091217 secs.
[01/30 18:32:46]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:32:46]  --------------------------------------------------------------------------------
[01/30 18:32:46]  Iteration: 61 (10 solution, 50 counterexamples)
[01/30 18:33:33]  Generator returned sat in 41.910883 secs.
[01/30 18:33:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:33:57]  Verifer returned unsat in 23.045133 secs.
[01/30 18:34:23]  Verifer returned unsat in 26.425886 secs.
[01/30 18:34:23]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:34:23]  --------------------------------------------------------------------------------
[01/30 18:34:23]  Iteration: 62 (11 solution, 50 counterexamples)
[01/30 18:36:17]  Generator returned sat in 108.728305 secs.
[01/30 18:36:17]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:36:31]  Verifer returned unsat in 13.471209 secs.
[01/30 18:44:32]  Verifer returned unsat in 480.617942 secs.
[01/30 18:44:32]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:44:32]  --------------------------------------------------------------------------------
[01/30 18:44:32]  Iteration: 63 (12 solution, 50 counterexamples)
[01/30 18:46:06]  Generator returned sat in 89.936086 secs.
[01/30 18:46:07]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 18:46:34]  Verifer returned unsat in 27.313899 secs.
[01/30 18:47:01]  Improved number of small numbers from 99 to 99 out of a max of 145
[01/30 18:47:01]  Verifer returned sat in 27.304172 secs.
[01/30 18:47:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.895205e+07        9.895205e+07      9.895205e+07       0.497559       0.497803      9.895205e+07        0.000000                0.000000       91.197559      151.995932                1.0  -9.961135e+07    0.000000          -1.0      -64.607170  9.895211e+07       2.0
1        9.895223e+07        9.895221e+07      9.895223e+07  182395.118230     182.395118      9.895221e+07        0.000000                0.000000       91.197559      151.995932                0.0  -9.961135e+07   17.787948           0.0       17.787948  9.895221e+07       0.0
2        9.895241e+07        9.895223e+07      9.895241e+07  182412.906178     182.395118      9.895223e+07        0.000000                0.000000       91.197559      151.995932                0.0  -9.961135e+07  182.435800           0.0      100.183066  9.895231e+07       1.0
3        9.895260e+07        9.895241e+07      9.895260e+07  182577.554030     182.395118      9.895241e+07        0.000000                0.000000       91.197559      151.995932                0.0  -9.961135e+07  182.578185           0.0      182.578185  9.895241e+07       1.0
4        9.895278e+07        9.895241e+07      9.895278e+07  182577.696415     182.395118      9.895241e+07       82.395118                0.000000       91.197559      151.995932                0.0  -9.961135e+07  282.578185           0.0      182.578185  9.895251e+07       1.0
5        9.895296e+07        9.895257e+07      9.895296e+07  182760.091533     182.395118      9.895257e+07      164.790236               82.395118       91.197559      151.995932                1.0  -9.961135e+07  230.968726           1.0      182.578185  9.895261e+07       2.0
6        9.895314e+07        9.895269e+07      9.895314e+07  182790.877193     182.395118      9.895269e+07      247.185355              164.790236       91.197559      151.995932                1.0  -9.961135e+07  209.046529           1.0      182.578185  9.895271e+07       2.0
7        9.895333e+07        9.895278e+07      9.895333e+07  182851.350114     182.395118      9.895278e+07      329.580473              247.185355       91.197559      151.995932                1.0  -9.961135e+07  219.150775           1.0      182.578185  9.895281e+07       2.0
8        9.895351e+07        9.895287e+07      9.895351e+07  182943.849479     182.395118      9.895287e+07      411.975591              329.580473       91.197559      151.995932                1.0  -9.961135e+07  226.590389           1.0      182.578185  9.895291e+07       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=540100/1311, beliefs_remain_consistent=True, beliefs_improve=False, alpha=59780/3933, buf_size=239360/1311, start_state=[0].[0m
[01/30 18:47:02]  --------------------------------------------------------------------------------
[01/30 18:47:02]  Iteration: 64 (12 solution, 51 counterexamples)
[01/30 18:49:45]  Generator returned sat in 158.320443 secs.
[01/30 18:49:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:50:05]  Verifer returned unsat in 20.028893 secs.
[01/30 18:51:00]  Verifer returned unsat in 54.170351 secs.
[01/30 18:51:00]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:51:00]  --------------------------------------------------------------------------------
[01/30 18:51:00]  Iteration: 65 (13 solution, 51 counterexamples)
[01/30 18:52:00]  Generator returned sat in 55.972254 secs.
[01/30 18:52:01]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:52:20]  Verifer returned unsat in 18.914888 secs.
[01/30 18:55:56]  Verifer returned unsat in 215.611295 secs.
[01/30 18:55:56]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:55:56]  --------------------------------------------------------------------------------
[01/30 18:55:56]  Iteration: 66 (14 solution, 51 counterexamples)
[01/30 18:56:57]  Generator returned sat in 55.964135 secs.
[01/30 18:56:57]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:57:06]  Verifer returned unsat in 8.879383 secs.
[01/30 18:57:22]  Verifer returned unsat in 15.774839 secs.
[01/30 18:57:22]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 18:57:22]  --------------------------------------------------------------------------------
[01/30 18:57:22]  Iteration: 67 (15 solution, 51 counterexamples)
[01/30 18:59:57]  Generator returned sat in 150.307408 secs.
[01/30 18:59:58]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:00:20]  Verifer returned unsat in 22.089904 secs.
[01/30 19:01:05]  Verifer returned unsat in 45.174119 secs.
[01/30 19:01:05]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:01:05]  --------------------------------------------------------------------------------
[01/30 19:01:05]  Iteration: 68 (16 solution, 51 counterexamples)
[01/30 19:01:58]  Generator returned sat in 48.466211 secs.
[01/30 19:01:59]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:02:08]  Verifer returned unsat in 8.914172 secs.
[01/30 19:02:32]  Verifer returned unsat in 23.824362 secs.
[01/30 19:02:32]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:02:32]  --------------------------------------------------------------------------------
[01/30 19:02:32]  Iteration: 69 (17 solution, 51 counterexamples)
[01/30 19:03:34]  Generator returned sat in 57.730340 secs.
[01/30 19:03:35]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:03:44]  Verifer returned unsat in 9.618910 secs.
[01/30 19:04:23]  Verifer returned unsat in 38.982422 secs.
[01/30 19:04:24]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:04:24]  --------------------------------------------------------------------------------
[01/30 19:04:24]  Iteration: 70 (18 solution, 51 counterexamples)
[01/30 19:05:14]  Generator returned sat in 46.074862 secs.
[01/30 19:05:15]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:05:56]  Verifer returned unsat in 40.767869 secs.
[01/30 19:10:27]  Verifer returned unsat in 271.248749 secs.
[01/30 19:10:27]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:10:27]  --------------------------------------------------------------------------------
[01/30 19:10:27]  Iteration: 71 (19 solution, 51 counterexamples)
[01/30 19:11:17]  Generator returned sat in 45.279194 secs.
[01/30 19:11:17]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 19:11:34]  Verifer returned unsat in 16.306269 secs.
[01/30 19:12:04]  Verifer returned unsat in 30.363678 secs.
[01/30 19:12:04]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 19:12:04]  --------------------------------------------------------------------------------
[01/30 19:12:04]  Iteration: 72 (20 solution, 51 counterexamples)
[01/30 19:13:04]  Generator returned sat in 55.229450 secs.
[01/30 19:13:05]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 19:13:33]  Verifer returned unsat in 28.313691 secs.
[01/30 19:17:20]  Verifer returned unsat in 227.314524 secs.
[01/30 19:17:21]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 19:17:21]  --------------------------------------------------------------------------------
[01/30 19:17:21]  Iteration: 73 (21 solution, 51 counterexamples)
[01/30 19:19:09]  Generator returned sat in 104.016881 secs.
[01/30 19:19:10]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:19:28]  Verifer returned unsat in 18.607441 secs.
[01/30 19:23:28]  Improved gap from 0.0 to 48.4375
[01/30 19:23:29]  Improved number of small numbers from 100 to 146 out of a max of 146
[01/30 19:23:29]  Verifer returned sat in 239.958946 secs.
[01/30 19:23:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.892035e+07        9.892035e+07      9.892035e+07       0.497314       0.497559      9.892035e+07             0.0                     0.0            50.0           100.0                2.0  -1.001494e+08   0.567871          -1.0        0.567871  9.892035e+07       3.0
1        9.892040e+07        9.892035e+07      9.892040e+07   50000.567871      50.000000      9.892035e+07             0.0                     0.0            50.0           100.0                3.0  -1.001494e+08  50.070312           1.0        0.000000  9.892040e+07       4.0
2        9.892045e+07        9.892040e+07      9.892045e+07   48487.570312      48.437500      9.892040e+07             0.0                     0.0            50.0           100.0                0.0  -1.001493e+08  48.437500           0.0        0.000000  9.892045e+07       1.0
3        9.892050e+07        9.892045e+07      9.892050e+07   50048.437500      50.000000      9.892045e+07             0.0                     0.0            50.0           100.0                0.0  -1.001493e+08  50.000000           0.0       -3.125000  9.892050e+07       1.0
4        9.892055e+07        9.892050e+07      9.892055e+07   50050.000000      50.000000      9.892050e+07             0.0                     0.0            50.0           100.0                0.0  -1.001492e+08  46.875000           0.0       -1.562500  9.892055e+07       0.0
5        9.892060e+07        9.892055e+07      9.892060e+07   50046.875000      50.000000      9.892055e+07             0.0                     0.0            50.0           100.0                0.0  -1.001492e+08  48.437500           0.0        0.000000  9.892060e+07       0.0
6        9.892065e+07        9.892060e+07      9.892065e+07   50048.437500      50.000000      9.892060e+07             0.0                     0.0            50.0           100.0                0.0  -1.001491e+08  50.000000           0.0       -2.059570  9.892065e+07       1.0
7        9.892070e+07        9.892065e+07      9.892070e+07   50050.000000      50.000000      9.892065e+07             0.0                     0.0            50.0           100.0                0.0  -1.001491e+08  47.940186           0.0       -0.497314  9.892070e+07       0.0
8        9.892075e+07        9.892070e+07      9.892075e+07   50047.940186      50.000000      9.892070e+07             0.0                     0.0            50.0           100.0                0.0  -1.001491e+08  49.502441           0.0      -50.497070  9.892080e+07       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=25/16, buf_size=300, start_state=[0].[0m
[01/30 19:23:29]  --------------------------------------------------------------------------------
[01/30 19:23:29]  Iteration: 74 (21 solution, 52 counterexamples)
[01/30 19:24:51]  Generator returned sat in 77.918714 secs.
[01/30 19:24:52]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:25:27]  Verifer returned unsat in 34.907469 secs.
[01/30 19:26:01]  Improved gap from 6.2316123560855265 to 100
[01/30 19:26:03]  Improved number of small numbers from 69 to 78 out of a max of 146
[01/30 19:26:03]  Verifer returned sat in 35.694347 secs.
[01/30 19:26:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.892087e+07        9.892087e+07      9.892087e+07       0.497070       0.497314      9.892087e+07        0.000000                0.000000       95.542471      157.911377                0.0  -1.001493e+08    0.000000          -1.0      -31.681719  9.892090e+07       0.0
1        9.892098e+07        9.892096e+07      9.892098e+07  112377.958984     112.377959      9.892096e+07        0.000000                0.000000       95.542471      157.911377                0.0  -1.001493e+08   17.332803           0.0      -19.303760  9.892100e+07       0.0
2        9.892109e+07        9.892109e+07      9.892109e+07  112395.291787     112.377959      9.892109e+07        0.000000                0.000000       95.542471      157.911377                0.0  -1.001493e+08    0.000000           0.0       -6.925801  9.892110e+07       0.0
3        9.892121e+07        9.892113e+07      9.892121e+07  112377.958984     112.377959      9.892113e+07        0.000000                0.000000       95.542471      157.911377                0.0  -1.001493e+08   75.723096           0.0        5.452158  9.892120e+07       0.0
4        9.892132e+07        9.892123e+07      9.892132e+07  112453.682080     112.377959      9.892123e+07        0.497314                0.000000       95.542471      157.911377                0.0  -1.001493e+08   92.558584           0.0       17.332803  9.892130e+07       0.0
5        9.892143e+07        9.892132e+07      9.892143e+07  112471.014883     112.377959      9.892132e+07       12.875273                0.497314       95.542471      157.911377                0.0  -1.001493e+08   99.502686           1.0       17.332803  9.892140e+07       0.0
6        9.892154e+07        9.892142e+07      9.892154e+07  112490.336943     112.377959      9.892142e+07       25.253232               12.875273       95.542471      157.911377                0.0  -1.001493e+08  100.000000           1.0       17.332803  9.892150e+07       1.0
7        9.892166e+07        9.892160e+07      9.892166e+07  112503.212217     112.377959      9.892160e+07       37.631191               25.253232       95.542471      157.911377                0.0  -1.001493e+08   17.332803           1.0       17.332803  9.892160e+07       0.0
8        9.892177e+07        9.892170e+07      9.892177e+07  112432.922979     112.377959      9.892170e+07       50.009150               37.631191       95.542471      157.911377                0.0  -1.001493e+08   17.333047           1.0       17.332803  9.892170e+07       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=5120937/102400, beliefs_remain_consistent=True, beliefs_improve=False, alpha=861977/51200, buf_size=1774879/102400, start_state=[0].[0m
[01/30 19:26:03]  --------------------------------------------------------------------------------
[01/30 19:26:03]  Iteration: 75 (21 solution, 53 counterexamples)
[01/30 19:27:46]  Generator returned sat in 98.691011 secs.
[01/30 19:27:47]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:28:10]  Verifer returned unsat in 23.262319 secs.
[01/30 19:28:30]  Verifer returned unsat in 19.961416 secs.
[01/30 19:28:30]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:28:30]  --------------------------------------------------------------------------------
[01/30 19:28:30]  Iteration: 76 (22 solution, 53 counterexamples)
[01/30 19:29:33]  Generator returned sat in 58.431959 secs.
[01/30 19:29:34]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:29:42]  Verifer returned unsat in 7.790638 secs.
[01/30 19:30:59]  Verifer returned unsat in 77.584329 secs.
[01/30 19:31:00]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:31:00]  --------------------------------------------------------------------------------
[01/30 19:31:00]  Iteration: 77 (23 solution, 53 counterexamples)
[01/30 19:32:03]  Generator returned sat in 58.146877 secs.
[01/30 19:32:03]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:32:11]  Verifer returned unsat in 8.251523 secs.
[01/30 19:32:58]  Verifer returned unsat in 46.426157 secs.
[01/30 19:32:58]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:32:58]  --------------------------------------------------------------------------------
[01/30 19:32:58]  Iteration: 78 (24 solution, 53 counterexamples)
[01/30 19:34:36]  Generator returned sat in 92.783127 secs.
[01/30 19:34:36]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:34:57]  Verifer returned unsat in 20.220700 secs.
[01/30 19:36:01]  Verifer returned unsat in 64.494838 secs.
[01/30 19:36:01]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:36:02]  --------------------------------------------------------------------------------
[01/30 19:36:02]  Iteration: 79 (25 solution, 53 counterexamples)
[01/30 19:38:54]  Generator returned sat in 167.968538 secs.
[01/30 19:38:55]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:39:14]  Verifer returned unsat in 18.839189 secs.
[01/30 19:39:48]  Verifer returned unsat in 34.541447 secs.
[01/30 19:39:48]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:39:48]  --------------------------------------------------------------------------------
[01/30 19:39:48]  Iteration: 80 (26 solution, 53 counterexamples)
[01/30 19:40:56]  Generator returned sat in 62.753525 secs.
[01/30 19:40:56]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:41:11]  Verifer returned unsat in 14.820587 secs.
[01/30 19:49:44]  Verifer returned unsat in 512.311751 secs.
[01/30 19:49:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:49:44]  --------------------------------------------------------------------------------
[01/30 19:49:44]  Iteration: 81 (27 solution, 53 counterexamples)
[01/30 19:50:53]  Generator returned sat in 63.829396 secs.
[01/30 19:50:53]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:51:03]  Verifer returned unsat in 9.955314 secs.
[01/30 19:51:20]  Verifer returned unsat in 16.960622 secs.
[01/30 19:51:20]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:51:20]  --------------------------------------------------------------------------------
[01/30 19:51:20]  Iteration: 82 (28 solution, 53 counterexamples)
[01/30 19:52:28]  Generator returned sat in 63.102706 secs.
[01/30 19:52:29]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:52:38]  Verifer returned unsat in 9.125512 secs.
[01/30 19:53:05]  Verifer returned unsat in 27.130556 secs.
[01/30 19:53:05]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:53:05]  --------------------------------------------------------------------------------
[01/30 19:53:05]  Iteration: 83 (29 solution, 53 counterexamples)
[01/30 19:54:14]  Generator returned sat in 63.707379 secs.
[01/30 19:54:15]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:54:25]  Verifer returned unsat in 10.484630 secs.
[01/30 19:55:11]  Verifer returned unsat in 45.544803 secs.
[01/30 19:55:11]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 19:55:11]  --------------------------------------------------------------------------------
[01/30 19:55:11]  Iteration: 84 (30 solution, 53 counterexamples)
[01/30 19:56:25]  Generator returned sat in 68.858425 secs.
[01/30 19:56:25]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:56:39]  Verifer returned unsat in 13.467201 secs.
[01/30 19:57:09]  Verifer returned unsat in 29.661529 secs.
[01/30 19:57:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:57:09]  --------------------------------------------------------------------------------
[01/30 19:57:09]  Iteration: 85 (31 solution, 53 counterexamples)
[01/30 19:58:16]  Generator returned sat in 62.538876 secs.
[01/30 19:58:16]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:58:26]  Verifer returned unsat in 9.724079 secs.
[01/30 19:58:40]  Verifer returned unsat in 13.264191 secs.
[01/30 19:58:40]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 19:58:40]  --------------------------------------------------------------------------------
[01/30 19:58:40]  Iteration: 86 (32 solution, 53 counterexamples)
[01/30 19:59:47]  Generator returned sat in 62.524108 secs.
[01/30 19:59:48]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:00:02]  Verifer returned unsat in 14.153069 secs.
[01/30 20:01:37]  Verifer returned unsat in 94.978272 secs.
[01/30 20:01:37]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:01:37]  --------------------------------------------------------------------------------
[01/30 20:01:37]  Iteration: 87 (33 solution, 53 counterexamples)
[01/30 20:03:18]  Generator returned sat in 95.734709 secs.
[01/30 20:03:19]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:03:32]  Verifer returned unsat in 12.737085 secs.
[01/30 20:04:33]  Improved gap from 0.0 to 48.4375
[01/30 20:04:35]  Improved number of small numbers from 101 to 103 out of a max of 146
[01/30 20:04:35]  Verifer returned sat in 63.098802 secs.
[01/30 20:04:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        9.874720e+07        9.874720e+07      9.874720e+07       0.497070       0.497070      9.874720e+07             0.0                     0.0        50.16569           100.0                2.0  -1.001515e+08   0.165690          -1.0        0.000145  9.874720e+07       3.0
1        9.874725e+07        9.874720e+07      9.874725e+07   50165.855794      50.165690      9.874720e+07             0.0                     0.0        50.16569           100.0                3.0  -1.001514e+08  50.165690           1.0        0.000000  9.874725e+07       4.0
2        9.874730e+07        9.874725e+07      9.874730e+07   48724.644857      48.674479      9.874725e+07             0.0                     0.0        50.16569           100.0                0.0  -1.001514e+08  48.674479           0.0       -5.681414  9.874730e+07       1.0
3        9.874735e+07        9.874730e+07      9.874735e+07   50214.364583      50.165690      9.874730e+07             0.0                     0.0        50.16569           100.0                0.0  -1.001513e+08  44.484049           0.0       -3.953451  9.874735e+07       0.0
4        9.874740e+07        9.874735e+07      9.874740e+07   50210.174154      50.165690      9.874735e+07             0.0                     0.0        50.16569           100.0                0.0  -1.001513e+08  46.212240           0.0       -2.225260  9.874740e+07       0.0
5        9.874745e+07        9.874740e+07      9.874745e+07   50211.902344      50.165690      9.874740e+07             0.0                     0.0        50.16569           100.0                0.0  -1.001512e+08  47.940430           0.0       -0.497070  9.874745e+07       0.0
6        9.874750e+07        9.874745e+07      9.874750e+07   50213.630534      50.165690      9.874745e+07             0.0                     0.0        50.16569           100.0                0.0  -1.001512e+08  49.668620           0.0        0.000000  9.874750e+07       0.0
7        9.874755e+07        9.874750e+07      9.874755e+07   50215.358724      50.165690      9.874750e+07             0.0                     0.0        50.16569           100.0                0.0  -1.001511e+08  50.165690           0.0        0.000000  9.874755e+07       1.0
8        9.874760e+07        9.874755e+07      9.874760e+07   50215.855794      50.165690      9.874755e+07             0.0                     0.0        50.16569           100.0                0.0  -1.001511e+08  50.165690           0.0      -49.834246  9.874765e+07       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1527/1024, buf_size=300, start_state=[0].[0m
[01/30 20:04:35]  --------------------------------------------------------------------------------
[01/30 20:04:35]  Iteration: 88 (33 solution, 54 counterexamples)
[01/30 20:06:49]  Generator returned sat in 127.964302 secs.
[01/30 20:06:49]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:07:29]  Verifer returned unsat in 39.316372 secs.
[01/30 20:12:30]  Verifer returned unsat in 301.054132 secs.
[01/30 20:12:30]  Proved solution: 
[1m[92mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:12:30]  --------------------------------------------------------------------------------
[01/30 20:12:30]  Iteration: 89 (34 solution, 54 counterexamples)
[01/30 20:13:59]  Generator returned sat in 83.565655 secs.
[01/30 20:13:59]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:14:17]  Verifer returned unsat in 17.528712 secs.
[01/30 20:15:02]  Verifer returned unsat in 44.840258 secs.
[01/30 20:15:02]  Proved solution: 
[1m[92mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:15:02]  --------------------------------------------------------------------------------
[01/30 20:15:02]  Iteration: 90 (35 solution, 54 counterexamples)
[01/30 20:16:06]  Generator returned sat in 59.709107 secs.
[01/30 20:16:07]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:16:20]  Improved number of small numbers from 99 to 99 out of a max of 135
[01/30 20:16:20]  Verifer returned sat in 13.017754 secs.
[01/30 20:16:20]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         -5.612898e+07         -5.612898e+07       -5.612898e+07         0.996338         0.995850       -5.612898e+07          0.000000                  0.000000         87.962963         132.87037                  2.0    0.000000          -1.0       3.0
1         -5.612889e+07         -5.612889e+07       -5.612889e+07     87500.000000        87.500000       -5.612889e+07          0.000000                  0.000000         87.962963         132.87037                  0.0    0.000000           0.0       0.0
2         -5.612871e+07         -5.612879e+07       -5.612871e+07    175925.925926       175.925926       -5.612879e+07          0.000000                  0.000000         87.962963         132.87037                  0.0   75.925926           0.0       0.0
3         -5.612854e+07         -5.612869e+07       -5.612854e+07    176001.851852       175.925926       -5.612869e+07          0.000000                  0.000000         87.962963         132.87037                  0.0  151.851852           0.0       0.0
4         -5.612836e+07         -5.612859e+07       -5.612836e+07    176077.777778       175.925926       -5.612859e+07         27.777778                  0.000000         87.962963         132.87037                  0.0  200.000000           0.0       1.0
5         -5.612818e+07         -5.612849e+07       -5.612818e+07    176153.703704       175.925926       -5.612849e+07        103.703704                 27.777778         87.962963         132.87037                  0.0  200.000000           1.0       1.0
6         -5.612801e+07         -5.612839e+07       -5.612801e+07    176229.629630       175.925926       -5.612839e+07        179.629630                103.703704         87.962963         132.87037                  1.0  200.000000           1.0       2.0
7         -5.612783e+07         -5.612829e+07       -5.612783e+07    176305.555556       175.925926       -5.612829e+07        255.555556                179.629630         87.962963         132.87037                  1.0  200.000000           1.0       2.0
8         -5.612766e+07         -5.612819e+07       -5.612766e+07    176381.481481       175.925926       -5.612819e+07        331.481481                255.555556         87.962963         132.87037                  1.0  200.000000           1.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=8950/27, beliefs_remain_consistent=True, beliefs_improve=False, alpha=25/54, buf_size=200, start_state=[0].[0m
[01/30 20:16:20]  --------------------------------------------------------------------------------
[01/30 20:16:20]  Iteration: 91 (35 solution, 55 counterexamples)
[01/30 20:20:09]  Generator returned sat in 223.746219 secs.
[01/30 20:20:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:20:21]  Verifer returned unsat in 11.657053 secs.
[01/30 20:24:31]  Verifer returned unsat in 249.589044 secs.
[01/30 20:24:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:24:31]  --------------------------------------------------------------------------------
[01/30 20:24:31]  Iteration: 92 (36 solution, 55 counterexamples)
[01/30 20:25:31]  Generator returned sat in 54.629481 secs.
[01/30 20:25:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:25:40]  Verifer returned unsat in 8.257231 secs.
[01/30 20:26:06]  Verifer returned unsat in 25.512589 secs.
[01/30 20:26:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:26:06]  --------------------------------------------------------------------------------
[01/30 20:26:06]  Iteration: 93 (37 solution, 55 counterexamples)
[01/30 20:27:06]  Generator returned sat in 55.220710 secs.
[01/30 20:27:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:27:34]  Verifer returned unsat in 27.793657 secs.
[01/30 20:30:32]  Verifer returned unsat in 177.167747 secs.
[01/30 20:30:32]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:32]  --------------------------------------------------------------------------------
[01/30 20:30:32]  Iteration: 94 (38 solution, 55 counterexamples)
[01/30 20:30:37]  Generator returned unsat in 0.001763 secs.
[01/30 20:30:37]  [96mNo more solutions found[0m
[01/30 20:30:37]  Final solutions:
[01/30 20:30:37]  0: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  1: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  2: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  3: [1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  4: [1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  5: [1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  6: [1m[92mif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  7: [1m[92mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  8: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  9: [1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  10: [1m[92mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  11: [1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  12: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  13: [1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  14: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  15: [1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  16: [1m[92mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  17: [1m[92mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  18: [1m[92mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  19: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  20: [1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  21: [1m[92mif (+ 2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  22: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  23: [1m[92mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  24: [1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  25: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  26: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  27: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  28: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  29: [1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  30: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  31: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  32: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  33: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  34: [1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  35: [1m[92mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/30 20:30:37]  36: [1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/30 20:30:37]  37: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/30 20:30:37]  Took 22505.954067 secs.
