[01/09 16:04:06]  Namespace(infinite_buffer=False, finite_buffer=True, dynamic_buffer=False)
[01/09 16:04:06]  --------------------------------------------------------------------------------
[01/09 16:04:06]  Iteration: 1 (0 solution, 0 counterexamples)
[01/09 16:04:06]  Generator returned sat in 0.006526 secs.
[01/09 16:04:06]  Candidate solution: 
[1m[94mif (+ 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + 1min_buffer_bytes + 1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:04:10]  Improved gap from 0.0 to 48.4375
[01/09 16:04:10]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/09 16:04:10]  Verifer returned sat in 3.503669 secs.
[01/09 16:04:10]  sf_get_cex returned in 3.568898 secs.
[01/09 16:04:10]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0           1701.2500           1701.0000         1701.2500         1.0000         1.0000         1701.0000             0.0                     0.0          98.875           100.0                0.0                2.0                  0.0                  3.0     -1701.0000                 0.000                 300.0   0.2500            0.25       1.0
1           1750.6875           1701.2500         1750.6875     49437.7500        49.4375         1701.2500             0.0                     0.0          98.875           100.0                1.0                3.0                  1.0                  3.0     -1651.6875                98.875                 300.0  49.4375           -1.00       2.0
2           1800.1250           1751.6875         1800.1250     49486.9375        49.4375         1751.6875             0.0                     0.0          98.875           100.0                0.0                1.0                  1.0                  3.0     -1600.1250                98.875                 300.0  48.4375            0.00       0.0
3           1849.5625           1801.1250         1849.5625     49485.9375        49.4375         1801.1250             0.0                     0.0          98.875           100.0                0.0                1.0                  1.0                  3.0     -1549.5625                98.875                 300.0  48.4375            0.00       0.0
4           1899.0000           1850.5625         1899.0000     49485.9375        49.4375         1850.5625             0.0                     0.0          98.875           100.0                0.0                1.0                  1.0                  3.0     -1499.0000                98.875                 300.0  48.4375            0.00       0.0
5           1948.4375           1900.0000         1948.4375     49485.9375        49.4375         1900.0000             0.0                     0.0          98.875           100.0                0.0                1.0                  1.0                  3.0     -1449.4375                98.875                 300.0  48.4375           -1.00       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1, buf_size=200.[0m
[01/09 16:04:10]  --------------------------------------------------------------------------------
[01/09 16:04:10]  Iteration: 2 (0 solution, 1 counterexamples)
[01/09 16:04:10]  Generator returned sat in 0.145500 secs.
[01/09 16:04:10]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 1max_c + 1min_buffer_bytes + -1max_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:04:16]  Improved gap from 48.437744140625 to 100
[01/09 16:04:16]  Improved number of small numbers from 111 to 111 out of a max of 134
[01/09 16:04:16]  Verifer returned sat in 6.085861 secs.
[01/09 16:04:16]  sf_get_cex returned in 6.141627 secs.
[01/09 16:04:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0         1033.443359          -51.522009       1033.443359       0.999756       0.999756        -51.522009      858.675325                0.000000       50.480519      109.191919                2.0                4.0                  2.0             4.909091     -1651.6875            100.961039            536.033058  226.290043           200.0       3.0
1         1134.404398            2.413056       1134.404398  102046.004329     100.961039          2.413056      859.636364              858.675325       50.480519      109.191919                2.0                4.0                  2.0             4.909091     -1651.6875            100.961039            536.033058  272.354978           200.0       3.0
2         1235.365437          101.555913       1235.365437  102093.030303     100.961039        101.555913      860.597403              859.636364       51.025974      109.191919                2.0                4.0                  2.0             4.909091     -1651.6875            102.051948            536.033058  273.212121           200.0       3.0
3         1337.417385          174.768035       1337.417385  103185.757576     102.051948        174.768035      862.649351              860.597403       57.451659      109.191919                2.0                4.0                  2.0             4.000000     -1651.6875            114.903319            436.767677  300.000000           200.0       3.0
4         1452.320704          274.768035       1452.320704  116065.968254     114.903319        274.768035      877.552670              862.649351       68.088745      108.763348                2.0                4.0                  2.0             4.000000     -1651.6875            136.177489            435.053391  300.000000           200.0       3.0
5         1588.498193          374.768035       1588.498193  137355.041847     136.177489        374.768035      913.730159              877.552670       74.470996      106.572511                2.0                4.0                  2.0             4.000000     -1651.6875            148.941991            426.290043  300.000000           200.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=2, loss_amount=37487/693, alpha=10/11, buf_size=200.[0m
[01/09 16:04:16]  --------------------------------------------------------------------------------
[01/09 16:04:16]  Iteration: 3 (0 solution, 2 counterexamples)
[01/09 16:04:17]  Generator returned sat in 0.310504 secs.
[01/09 16:04:17]  Candidate solution: 
[1m[94mif (+ -1max_c + 1min_buffer_bytes + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_c + -1min_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes + -1max_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:04:18]  Improved number of small numbers from 108 to 108 out of a max of 133
[01/09 16:04:18]  Verifer returned sat in 0.995432 secs.
[01/09 16:04:18]  sf_get_cex returned in 1.053083 secs.
[01/09 16:04:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0          175.519914          -98.966301        175.519914       0.999512       0.999756        -98.966301        0.751880                0.000000       61.503759           100.0                2.0                4.0                  2.0                  2.0     -1651.6875            123.007519                 200.0  273.734336           200.0       3.0
1          298.527433          -24.480086        298.527433  123282.005013     123.007519        -24.480086       23.759398                0.751880       61.503759           100.0                2.0                4.0                  2.0                  2.0     -1651.6875            123.007519                 200.0  299.248120           200.0       3.0
2          421.534952           98.026180        421.534952  123330.526316     123.007519         98.026180       46.766917               23.759398       65.664160           100.0                2.0                4.0                  2.0                  2.0     -1651.6875            131.328321                 200.0  276.741855           200.0       3.0
3          552.863273          174.768035        552.863273  131651.829574     131.328321        174.768035       78.095238               46.766917       68.433584           100.0                2.0                4.0                  2.0                  2.0     -1651.6875            136.867168                 200.0  300.000000           200.0       3.0
4          689.730441          292.512396        689.730441  137245.263158     136.867168        292.512396      114.962406               78.095238       79.248120           100.0                1.0                3.0                  2.0                  2.0     -1651.6875            158.496241                 200.0  282.255639           200.0       2.0
5          848.226681          375.519914        848.226681  158893.458647     158.496241        375.519914      173.458647              114.962406       80.000000           100.0                1.0                3.0                  2.0                  2.0     -1651.6875            160.000000                 200.0  299.248120           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=19910/133, alpha=2960/399, buf_size=200.[0m
[01/09 16:04:18]  --------------------------------------------------------------------------------
[01/09 16:04:18]  Iteration: 4 (0 solution, 3 counterexamples)
[01/09 16:04:19]  Generator returned sat in 0.670066 secs.
[01/09 16:04:19]  Candidate solution: 
[1m[94mif (+ -1max_c + 1min_buffer_bytes + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + 1max_c + 1max_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes + -1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 16:04:28]  Improved gap from 4.363636363636363 to 100
[01/09 16:04:29]  Improved number of small numbers from 109 to 109 out of a max of 134
[01/09 16:04:29]  Verifer returned sat in 10.317091 secs.
[01/09 16:04:29]  sf_get_cex returned in 10.375921 secs.
[01/09 16:04:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0         -303.809005         -597.618529       -303.809005       0.999512       0.999756       -597.618529        0.476190                0.000000       81.027778      169.833333                2.0                4.0                  2.0             3.416667     -1651.6875            162.055556            580.263889  293.333333      199.166667       3.0
1         -203.392339         -435.118529       -203.392339  100710.476190     100.416667       -435.118529        0.476190                0.476190       81.250000      169.833333                1.0                3.0                  2.0             3.416667     -1651.6875            162.500000            580.263889  231.250000      199.583333       2.0
2         -102.753450         -353.201862       -102.753450  100870.615079     100.638889       -353.201862        0.698413                0.476190       81.472222      169.833333                2.0                4.0                  2.0             3.416667     -1651.6875            162.944444            580.263889  249.750000      200.000000       3.0
3           -1.892339         -265.507418         -1.892339  101111.559524     100.861111       -265.507418        1.559524                0.698413       83.027778      166.055556                1.0                3.0                  2.0             3.000000     -1651.6875            166.055556            498.166667  262.055556      200.000000       2.0
4          100.524328         -103.451862        100.524328  102680.281746     102.416667       -103.451862        3.976190                1.559524       98.833333      164.722222                1.0                3.0                  2.0             3.000000     -1651.6875            197.666667            494.166667  200.000000      200.000000       2.0
5          218.746550         -100.368529        218.746550  118426.198413     118.222222       -100.368529       22.198413                3.976190       98.833333      111.583333                1.0                3.0                  2.0             3.000000     -1651.6875            197.666667            334.750000  296.916667      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=391/18, alpha=349/18, buf_size=200.[0m
[01/09 16:04:29]  --------------------------------------------------------------------------------
[01/09 16:04:29]  Iteration: 5 (0 solution, 4 counterexamples)
[01/09 16:04:29]  Generator returned sat in 0.121033 secs.
[01/09 16:04:29]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + 1max_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes + -1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 16:04:32]  Improved gap from 0.0 to 48.4375
[01/09 16:04:33]  Improved number of small numbers from 91 to 92 out of a max of 134
[01/09 16:04:33]  Verifer returned sat in 3.427566 secs.
[01/09 16:04:33]  sf_get_cex returned in 3.485245 secs.
[01/09 16:04:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0      -226042.472173      -226059.260956    -226042.472173       0.999512       0.999756    -226059.260956             0.0                     0.0       37.882370      164.722412                1.0                3.0                  1.0             3.416748   -1697.016357             37.882370             562.81498  16.788784       16.788773       2.0
1      -226004.606149      -226059.244610    -226004.606149   37882.812057      37.866023    -226059.244610             0.0                     0.0       37.882370      164.722412                2.0                4.0                  2.0             3.416748   -1651.687500             75.764739             562.81498  54.638461       -0.016346       3.0
2      -225966.740126      -226004.589803    -225966.740126   37920.661734      37.866023    -226004.589803             0.0                     0.0       37.882370      164.722412                0.0                1.0                  2.0             3.416748   -1600.125000             75.764739             562.81498  37.849677      -10.587823       0.0
3      -225928.874103      -225956.152303    -225928.874103   37903.872950      37.866023    -225956.152303             0.0                     0.0       37.882370      164.722412                0.0                1.0                  2.0             3.416748   -1548.562500             75.764739             562.81498  27.278200      -21.159300       0.0
4      -225891.008080      -225907.714803    -225891.008080   37893.301474      37.866023    -225907.714803             0.0                     0.0       37.882452      164.722412                0.0                1.0                  2.0             3.416748   -1497.000000             75.764904             562.81498  16.706723      -31.730777       0.0
5      -225853.141974      -225859.277303    -225853.141974   37882.812057      37.866105    -225859.277303             0.0                     0.0       39.993461      164.722412                0.0                1.0                  2.0             3.416748   -1445.437744             79.986923             562.81498   6.135329      -42.302415       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=325/19882, buf_size=200.[0m
[01/09 16:04:33]  --------------------------------------------------------------------------------
[01/09 16:04:33]  Iteration: 6 (0 solution, 5 counterexamples)
[01/09 16:04:36]  Generator returned sat in 2.421663 secs.
[01/09 16:04:36]  Candidate solution: 
[1m[94mif (+ 1min_buffer_bytes + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 1max_c + -1max_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + 1min_buffer_bytes + -1max_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:05:30]  Improved gap from 0.0 to 48.4375
[01/09 16:05:32]  Improved number of small numbers from 103 to 112 out of a max of 134
[01/09 16:05:32]  Verifer returned sat in 55.910843 secs.
[01/09 16:05:32]  sf_get_cex returned in 55.970761 secs.
[01/09 16:05:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0      -226089.232103      -226095.200853    -226089.232103       0.999268       0.999512    -226095.200853             0.0                     0.0       96.880357           100.0                2.0                4.0                  2.0             2.002679   -1661.076416            193.760714            200.267857   5.968750        5.968580       3.0
1      -226040.791925      -226089.229425    -226040.791925   48446.147321      48.440179    -226089.229425             0.0                     0.0       96.880357           100.0                0.0                1.0                  2.0             2.002679   -1615.485352            193.760714            200.267857  48.437500       -0.000177       0.0
2      -225992.351746      -226040.789246    -225992.351746   48488.616071      48.440179    -226040.789246             0.0                     0.0       96.880357           100.0                0.0                1.0                  2.0             2.002679   -1563.925537            193.760714            200.267857  48.437500       -0.000184       0.0
3      -225943.911568      -225992.349068    -225943.911568   48488.616071      48.440179    -225992.349068             0.0                     0.0       96.880357           100.0                0.0                1.0                  2.0             2.002679   -1512.365967            193.760714            200.267857  48.437500       -0.000435       0.0
4      -225895.471389      -225943.908889    -225895.471389   48488.616071      48.440179    -225943.908889             0.0                     0.0       96.880357           100.0                0.0                1.0                  2.0             2.002679   -1460.805908            193.760714            200.267857  48.437500       -0.000198       0.0
5      -225847.031210      -225895.468506    -225847.031210   48488.616071      48.440179    -225895.468506             0.0                     0.0       96.880357           100.0                0.0                1.0                  2.0             2.002679   -1409.246094            193.760714            200.267857  48.437295       -0.000205       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1105/56, buf_size=200.[0m
[01/09 16:05:32]  --------------------------------------------------------------------------------
[01/09 16:05:32]  Iteration: 7 (0 solution, 6 counterexamples)
[01/09 16:05:36]  Generator returned sat in 3.812742 secs.
[01/09 16:05:36]  Candidate solution: 
[1m[94mif (+ -1max_c + 1min_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_c + 1min_buffer_bytes + -1max_buffer_bytes + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:05:36]  Improved gap from 48.4375 to 100
[01/09 16:05:36]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 16:05:36]  Verifer returned sat in 0.661719 secs.
[01/09 16:05:36]  sf_get_cex returned in 0.716959 secs.
[01/09 16:05:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0      -226191.791748      -226427.291748    -226191.791748       0.999268       0.999268    -226427.291748            0.50                    0.00       48.375000      153.749756                1.0                3.0                  1.0             2.249756   -1417.985352             48.375000            345.899414   235.00          146.00       2.0
1      -226095.041748      -226269.791748    -226095.041748   96985.500000      96.750000    -226269.791748            0.50                    0.50       78.750000      153.749756                2.0                4.0                  2.0             2.249756   -1417.985352            157.500000            345.899414   174.25          142.75       3.0
2      -225937.541748      -226191.791748    -225937.541748  157674.750000     157.500000    -226191.791748            0.75                    0.50       78.750000      153.749756                0.0                2.0                  2.0             2.249756   -1417.985352            157.500000            345.899414   253.50          200.00       1.0
3      -225780.041748      -226112.291748    -225780.041748  157754.250000     157.500000    -226112.291748           58.25                    0.75       78.750000      153.749756                1.0                3.0                  2.0             2.249756   -1417.985352            157.500000            345.899414   274.00          200.00       2.0
4      -225622.541748      -226038.291748    -225622.541748  157832.250000     157.500000    -226038.291748          115.75                   58.25       78.750000      153.500000                1.0                3.0                  2.0             2.249756   -1417.985352            157.500000            345.337524   300.00          200.00       2.0
5      -225465.041748      -225883.791748    -225465.041748  157915.750000     157.500000    -225883.791748          173.25                  115.75       90.583333      153.500000                1.0                3.0                  2.0             2.249756   -1417.985352            181.166667            345.337524   245.50          200.00       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=691/4, alpha=80895/4096, buf_size=200.[0m
[01/09 16:05:36]  --------------------------------------------------------------------------------
[01/09 16:05:36]  Iteration: 8 (0 solution, 7 counterexamples)
[01/09 16:05:38]  Generator returned sat in 0.821803 secs.
[01/09 16:05:38]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + 1max_c + -1min_buffer_bytes + 1max_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:05:42]  Improved gap from 0.0 to 100
[01/09 16:05:42]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 16:05:42]  Verifer returned sat in 3.922314 secs.
[01/09 16:05:42]  sf_get_cex returned in 3.983189 secs.
[01/09 16:05:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0      -304301.473389      -304546.973389    -304301.473389       0.999023       0.999268    -304546.973389             0.0                     0.0            81.5      246.499756                0.0                2.0                  0.0                  2.5   76744.696289                   0.0             616.24939    245.5           199.5       1.0
1      -304200.473389      -304462.973389    -304200.473389  101245.500000     101.000000    -304462.973389             0.5                     0.0            81.5      246.499756                1.0                3.0                  1.0                  2.5   76744.696289                  81.5             616.24939    262.0           200.0       2.0
2      -304099.473389      -304300.973389    -304099.473389  101262.500000     101.000000    -304300.973389             1.5                     0.5            82.0      246.000000                0.0                2.0                  1.0                  2.0   76744.696289                  82.0             492.00000    200.0           200.0       1.0
3      -303997.973389      -304204.973389    -303997.973389  101701.500000     101.500000    -304204.973389             3.0                     1.5            86.0      171.000000                1.0                3.0                  1.0                  2.0   76744.696289                  86.0             342.00000    204.0           200.0       2.0
4      -303892.473389      -304200.973389    -303892.473389  105707.000000     105.500000    -304200.973389             8.5                     3.0            86.0      100.000000                2.0                4.0                  2.0                  2.0   76744.696289                 172.0             200.00000    300.0           200.0       3.0
5      -303786.973389      -304099.973389    -303786.973389  105808.500000     105.500000    -304099.973389            14.0                     8.5            86.0      100.000000                1.0                3.0                  2.0                  2.0   76744.696289                 172.0             200.00000    299.0           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=27/2, alpha=39/2, buf_size=200.[0m
[01/09 16:05:42]  --------------------------------------------------------------------------------
[01/09 16:05:42]  Iteration: 9 (0 solution, 8 counterexamples)
[01/09 16:05:43]  Generator returned sat in 0.587720 secs.
[01/09 16:05:43]  Candidate solution: 
[1m[94mif (+ -1min_c + 1min_buffer_bytes + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -1max_c + 1min_buffer_bytes + 1max_buffer_bytes + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:05:45]  Improved gap from 0.0 to 100
[01/09 16:05:46]  Improved number of small numbers from 93 to 93 out of a max of 134
[01/09 16:05:46]  Verifer returned sat in 3.249305 secs.
[01/09 16:05:46]  sf_get_cex returned in 3.308776 secs.
[01/09 16:05:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0      -314882.239994      -315067.361890    -314882.239994       0.999023       0.999268    -315067.361890        0.000000                0.000000       56.436546       150.75188                1.0                3.0                  1.0             4.999023   76744.696289             56.436546            753.612180  185.121896      175.005696       2.0
1      -314769.366902      -314957.245690    -314769.366902  113058.213716     112.873092    -314957.245690        0.000000                0.000000       56.436546       150.75188                1.0                3.0                  1.0             4.999023   76744.696289             56.436546            753.612180  187.878788      187.878788       2.0
2      -314656.493811      -314900.307891    -314656.493811  113060.970608     112.873092    -314900.307891        0.751880                0.000000       56.436546       150.75188                1.0                3.0                  1.0             4.999023   76744.696289             56.436546            753.612180  243.062201      200.000000       2.0
3      -314543.620719      -314764.354371    -314543.620719  113116.905901     112.873092    -314764.354371       13.624972                0.751880       75.751880       150.75188                0.0                2.0                  1.0             2.000000   76744.696289             75.751880            301.503759  207.108681      200.000000       1.0
4      -314392.116959      -314657.245690    -314392.116959  151724.493051     151.503759    -314657.245690       65.128731               13.624972       82.023240       136.70540                1.0                3.0                  1.0             2.000000   76744.696289             82.023240            273.410800  200.000000      200.000000       2.0
5      -314228.070480      -314626.897092    -314228.070480  164311.608567     164.046480    -314626.897092      129.175211               65.128731       82.023240       110.11620                1.0                3.0                  1.0             2.000000   76744.696289             82.023240            220.232399  269.651401      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=566950/4389, alpha=100/133, buf_size=200.[0m
[01/09 16:05:46]  --------------------------------------------------------------------------------
[01/09 16:05:46]  Iteration: 10 (0 solution, 9 counterexamples)
[01/09 16:05:49]  Generator returned sat in 2.626907 secs.
[01/09 16:05:49]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1min_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:06:10]  Improved gap from 6.2198391420911525 to 48.4375
[01/09 16:06:11]  Improved number of small numbers from 106 to 107 out of a max of 134
[01/09 16:06:11]  Verifer returned sat in 21.317833 secs.
[01/09 16:06:11]  sf_get_cex returned in 21.379577 secs.
[01/09 16:06:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0      -264910.076411      -264910.076411    -264910.076411       0.999023       0.999023    -264910.076411             0.0                     0.0       24.888393           100.0                0.0                1.0                  0.0                  3.0   76644.249756                   0.0                 300.0   0.000000       -0.000105       0.0
1      -264860.299626      -264907.844268    -264860.299626   49776.785714      49.776786    -264907.844268             0.0                     0.0       24.888393           100.0                0.0                1.0                  0.0                  3.0   76693.580218                   0.0                 300.0  47.544643       -0.892857       0.0
2      -264810.522840      -264859.406768    -264810.522840   49824.330357      49.776786    -264859.406768             0.0                     0.0       24.888393           100.0                0.0                1.0                  0.0                  3.0   76744.696289                   0.0                 300.0  48.883929        0.000000       0.0
3      -264760.746054      -264810.522840    -264760.746054   49825.669643      49.776786    -264810.522840             0.0                     0.0       32.440476           100.0                0.0                2.0                  0.0                  3.0   76794.919503                   0.0                 300.0  49.776786        0.000000       1.0
4      -264737.801486      -264760.746054    -264737.801486   22994.345238      22.944568    -264760.746054             0.0                     0.0       36.774554           100.0                0.0                2.0                  0.0                  3.0   76844.696289                   0.0                 300.0  22.944568      -27.278646       1.0
5      -264710.522840      -264710.522840    -264710.522840   27301.590402      27.278646    -264710.522840             0.0                     0.0       39.464286           100.0                0.0                1.0                  0.0                  3.0   76896.258545                   0.0                 300.0   0.000000      -48.437744       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=25525/2688, buf_size=200.[0m
[01/09 16:06:11]  --------------------------------------------------------------------------------
[01/09 16:06:11]  Iteration: 11 (0 solution, 10 counterexamples)
[01/09 16:06:16]  Generator returned sat in 4.846706 secs.
[01/09 16:06:16]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1max_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:06:19]  Improved gap from 11.403305785123967 to 100
[01/09 16:06:19]  Improved number of small numbers from 103 to 103 out of a max of 134
[01/09 16:06:19]  Verifer returned sat in 3.400269 secs.
[01/09 16:06:19]  sf_get_cex returned in 3.458901 secs.
[01/09 16:06:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0      -265906.226465      -266161.681011    -265906.226465       0.999023       0.999023    -266161.681011        0.000000                0.000000       84.545455      202.500000                1.0                3.0                  1.0             3.909091   77836.763551             84.545455            791.590909  255.454545      196.363636       2.0
1      -265802.590102      -266066.453738    -265802.590102  103891.818182     103.636364    -266066.453738        0.000000                0.000000       84.545455      202.500000                0.0                2.0                  1.0             3.909091   77836.763551             84.545455            791.590909  263.863636      200.000000       1.0
2      -265633.499193      -265905.317375    -265633.499193  169354.772727     169.090909    -265905.317375       69.090909                0.000000       85.454545      202.500000                0.0                2.0                  1.0             3.909091   77836.763551             85.454545            791.590909  202.727273      200.000000       1.0
3      -265462.590102      -265802.590102    -265462.590102  171180.909091     170.909091    -265802.590102      140.000000               69.090909       89.772727      202.500000                1.0                3.0                  1.0             3.000000   77836.763551             89.772727            607.500000  200.000000      200.000000       2.0
4      -265353.726465      -265703.726465    -265353.726465  109203.636364     108.863636    -265703.726465      148.863636              140.000000       91.590909      201.590909                1.0                3.0                  1.0             3.000000   77836.763551             91.590909            604.772727  201.136364      200.000000       2.0
5      -265243.044647      -265701.681011    -265243.044647  111031.818182     110.681818    -265701.681011      159.545455              148.863636       91.590909      100.909091                1.0                3.0                  1.0             3.000000   77836.763551             91.590909            302.727273  299.090909      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=1755/11, alpha=210/11, buf_size=200.[0m
[01/09 16:06:19]  --------------------------------------------------------------------------------
[01/09 16:06:19]  Iteration: 12 (0 solution, 11 counterexamples)
[01/09 16:06:22]  Generator returned sat in 2.363865 secs.
[01/09 16:06:22]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 16:06:28]  Improved gap from 14.452554744525548 to 48.4375
[01/09 16:06:29]  Improved number of small numbers from 103 to 104 out of a max of 134
[01/09 16:06:29]  Verifer returned sat in 6.368028 secs.
[01/09 16:06:29]  sf_get_cex returned in 6.426387 secs.
[01/09 16:06:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0      -301709.074752      -301727.429439    -301709.074752       0.999023       0.998779    -301727.429439             0.0                     0.0       37.882812           100.0                0.0                1.0                  0.0                4.025  113461.602888                   0.0                 402.5  18.354688       18.354688       0.0
1      -301672.748189      -301727.429439    -301672.748189   36344.917188      36.326563    -301727.429439             0.0                     0.0       37.882812           100.0                0.0                1.0                  0.0                4.025  113506.921638                   0.0                 402.5  54.681250        0.000000       0.0
2      -301636.421627      -301672.748189    -301636.421627   36381.243750      36.326563    -301672.748189             0.0                     0.0       37.882812           100.0                0.0                2.0                  0.0                4.025  113558.484138                   0.0                 402.5  36.326563      -12.110938       1.0
3      -301600.095064      -301624.310689    -301600.095064   36362.889062      36.326563    -301624.310689             0.0                     0.0       37.882812           100.0                0.0                1.0                  0.0                4.025  113610.046638                   0.0                 402.5  24.215625      -24.221875       0.0
4      -301563.768502      -301575.873189    -301563.768502   36350.778125      36.326563    -301575.873189             0.0                     0.0       37.889063           100.0                0.0                1.0                  0.0                4.025  113661.609138                   0.0                 402.5  12.104688      -36.332813       0.0
5      -301527.435689      -301527.435689    -301527.435689   36344.917188      36.332813    -301527.435689             0.0                     0.0       39.998750           100.0                0.0                1.0                  0.0                4.025  113713.171631                   0.0                 402.5   0.000000      -48.437507       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=249/160, buf_size=200.[0m
[01/09 16:06:29]  --------------------------------------------------------------------------------
[01/09 16:06:29]  Iteration: 13 (0 solution, 12 counterexamples)
[01/09 16:06:38]  Generator returned sat in 8.547233 secs.
[01/09 16:06:38]  Candidate solution: 
[1m[94mif (+ -1min_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1min_buffer_bytes + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:06:44]  Improved gap from 0.2224252491694352 to 100
[01/09 16:06:44]  Improved number of small numbers from 99 to 134 out of a max of 134
[01/09 16:06:44]  Verifer returned sat in 5.975450 secs.
[01/09 16:06:44]  sf_get_cex returned in 6.035638 secs.
[01/09 16:06:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0      -301869.880615      -301870.879150    -301869.880615       0.999023       0.998779    -301870.879150        0.000000                0.000000           100.0      100.199707                1.0                3.0                  1.0                  4.0  113605.052734                 100.0            400.798828    0.998535        0.998535       2.0
1      -301669.880615      -301870.879150    -301669.880615  200000.998535     200.000000    -301870.879150        0.000000                0.000000           100.0      100.199707                1.0                3.0                  1.0                  4.0  113605.052734                 100.0            400.798828  200.998535      100.998535       2.0
2      -301469.880615      -301670.879150    -301469.880615  200200.998535     200.000000    -301670.879150        0.998535                0.000000           100.0      100.199707                0.0                2.0                  1.0                  4.0  113605.052734                 100.0            400.798828  200.000000      200.000000       1.0
3      -301269.880615      -301570.879150    -301269.880615  200200.998535     200.000000    -301570.879150      100.998535                0.998535           100.0      100.199707                0.0                2.0                  1.0                  2.0  113605.052734                 100.0            200.399414  200.000000      200.000000       1.0
4      -301069.880615      -301570.879150    -301069.880615  200300.998535     200.000000    -301570.879150      200.998535              100.998535           100.0      100.000000                0.0                2.0                  1.0                  2.0  113605.052734                 100.0            200.000000  300.000000      200.000000       1.0
5      -300869.880615      -301371.878174    -300869.880615  200500.998535     200.000000    -301371.878174      300.998535              200.998535           100.0      100.000000                1.0                3.0                  1.0                  2.0  113605.052734                 100.0            200.000000  200.999023      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=616445/2048, alpha=2045/2048, buf_size=200.[0m
[01/09 16:06:44]  --------------------------------------------------------------------------------
[01/09 16:06:44]  Iteration: 14 (0 solution, 13 counterexamples)
[01/09 16:06:47]  Generator returned sat in 2.597236 secs.
[01/09 16:06:47]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_c + 1min_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + -1max_c + -1min_buffer_bytes + 1max_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 16:07:00]  Improved gap from 0.0 to 100
[01/09 16:07:00]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 16:07:00]  Verifer returned sat in 12.279526 secs.
[01/09 16:07:00]  sf_get_cex returned in 12.340314 secs.
[01/09 16:07:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0      -282264.693848      -282551.693848    -282264.693848       0.998779       0.998779    -282551.693848             0.0                     0.0            81.0           143.0                1.0                3.0                  1.0             3.499756   94198.867188                  81.0            500.465088  287.000000           200.0       2.0
1      -282164.193848      -282435.693604    -282164.193848  100787.000000     100.500000    -282435.693604             0.5                     0.0            81.0           143.0                1.0                3.0                  1.0             3.499756   94198.867188                  81.0            500.465088  270.999756           200.0       2.0
2      -282063.693848      -282307.193848    -282063.693848  100771.499756     100.500000    -282307.193848             1.0                     0.5            81.5           143.0                2.0                4.0                  2.0             3.499756   94198.867188                 163.0            500.465088  242.500000           200.0       3.0
3      -281962.693848      -282264.693848    -281962.693848  101243.500000     101.000000    -282264.693848             2.0                     1.0            81.5           143.0                2.0                4.0                  2.0             3.499756   94198.867188                 163.0            500.465088  300.000000           200.0       3.0
4      -281861.693848      -282164.693848    -281861.693848  101302.000000     101.000000    -282164.693848             3.0                     2.0            81.5           129.0                2.0                4.0                  2.0             3.499756   94198.867188                 163.0            451.468506  300.000000           200.0       3.0
5      -281760.693848      -282035.693848    -281760.693848  101303.000000     101.000000    -282035.693848             4.0                     3.0            86.0           129.0                1.0                3.0                  2.0             3.000000   94198.867188                 172.0            387.000000  271.000000           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=7/2, alpha=39/2, buf_size=200.[0m
[01/09 16:07:00]  --------------------------------------------------------------------------------
[01/09 16:07:00]  Iteration: 15 (0 solution, 14 counterexamples)
[01/09 16:07:03]  Generator returned sat in 2.620590 secs.
[01/09 16:07:03]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 16:07:22]  Improved gap from 0.0 to 48.4375
[01/09 16:07:23]  Improved number of small numbers from 80 to 90 out of a max of 134
[01/09 16:07:23]  Verifer returned sat in 20.084598 secs.
[01/09 16:07:23]  sf_get_cex returned in 20.145262 secs.
[01/09 16:07:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0      -282383.925209      -282402.060273    -282383.925209       0.998535       0.998779    -282402.060273             0.0                     0.0       36.376632      189.999756                0.0                2.0                  0.0             2.994141   94129.509766              0.000000            568.885988  18.135064       12.109618       1.0
1      -282347.554652      -282396.034671    -282347.554652   36388.692668      36.370558    -282396.034671             0.0                     0.0       36.376632      189.999756                1.0                3.0                  1.0             2.994141   94181.029541             36.376632            568.885988  48.480019       -0.000049       2.0
2      -282311.184094      -282347.548578    -282311.184094   36419.037624      36.370558    -282347.548578             0.0                     0.0       36.376632      189.999756                0.0                1.0                  1.0             2.994141   94232.586016             36.376632            568.885988  36.364483      -12.073017       0.0
3      -282274.813537      -282299.111078    -282274.813537   36406.922088      36.370558    -282299.111078             0.0                     0.0       36.376632      189.999756                0.0                1.0                  1.0             2.994141   94283.979004             36.376632            568.885988  24.297541      -24.309471       0.0
4      -282238.442979      -282250.503847    -282238.442979   36394.855146      36.370558    -282250.503847             0.0                     0.0       36.382706      189.999756                0.0                1.0                  1.0             2.994141   94335.541285             36.382706            568.885988  12.060868      -36.376632       0.0
5      -282202.066347      -282202.066347    -282202.066347   36388.692668      36.376632    -282202.066347             0.0                     0.0       38.793665      189.999756                0.0                1.0                  1.0             2.994141   94387.103760             38.793665            568.885988   0.000000      -48.437526       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=97575/16063856, buf_size=200.[0m
[01/09 16:07:23]  --------------------------------------------------------------------------------
[01/09 16:07:23]  Iteration: 16 (0 solution, 15 counterexamples)
[01/09 16:07:32]  Generator returned sat in 8.062913 secs.
[01/09 16:07:32]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + -1max_qdel + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:07:33]  Improved gap from 0.0 to 100
[01/09 16:07:34]  Improved number of small numbers from 102 to 133 out of a max of 134
[01/09 16:07:34]  Verifer returned sat in 1.417957 secs.
[01/09 16:07:34]  sf_get_cex returned in 1.480346 secs.
[01/09 16:07:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0      -281605.941162      -281828.907471    -281605.941162       0.998535       0.998779    -281828.907471        0.000000                0.000000       83.994141      151.996826                1.0                3.0                  1.0                  2.0   93537.418945             83.994141            303.993652  222.966309      198.002686       2.0
1      -281502.945557      -281705.941162    -281502.945557  103218.571777     102.995605    -281705.941162        0.998291                0.000000       83.994141      151.996826                2.0                4.0                  2.0                  2.0   93537.418945            167.988281            303.993652  201.997314      200.000000       3.0
2      -281399.949951      -281604.942383    -281399.949951  103198.601074     102.995605    -281604.942383        3.993896                0.998291       83.994141      151.996826                0.0                2.0                  2.0                  2.0   93537.418945            167.988281            303.993652  200.998535      200.000000       1.0
3      -281296.954346      -281503.944092    -281296.954346  103200.597900     102.995605    -281503.944092        6.989502                3.993896       83.994141      151.996826                1.0                3.0                  2.0                  2.0   93537.418945            167.988281            303.993652  200.000244      200.000000       2.0
4      -281193.958740      -281403.944092    -281193.958740  103202.595215     102.995605    -281403.944092        9.985107                6.989502       84.992676      141.654460                1.0                3.0                  2.0                  2.0   93537.418945            169.985352            283.308919  200.000244      200.000000       2.0
5      -281089.964600      -281402.945312    -281089.964600  104204.125977     103.994141    -281402.945312       13.979248                9.985107       84.992676      100.998535                1.0                3.0                  2.0                  2.0   93537.418945            169.985352            201.997070  299.001465      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=26585/2048, alpha=38915/2048, buf_size=200.[0m
[01/09 16:07:34]  --------------------------------------------------------------------------------
[01/09 16:07:34]  Iteration: 17 (0 solution, 16 counterexamples)
[01/09 16:07:42]  Generator returned sat in 7.804188 secs.
[01/09 16:07:42]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1max_qdel + 1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:07:46]  Improved gap from 0.3409090909090909 to 100
[01/09 16:07:46]  Improved number of small numbers from 89 to 89 out of a max of 134
[01/09 16:07:46]  Verifer returned sat in 3.705212 secs.
[01/09 16:07:46]  sf_get_cex returned in 3.767480 secs.
[01/09 16:07:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.953730e+07        2.953716e+07      2.953730e+07       0.998535       0.998779      2.953716e+07        0.998535                0.000000       76.248169      101.997070                0.0                1.0                  0.0                  2.0  -2.972546e+07              0.000000            203.994141  132.738647       99.001465       0.0
1        2.953745e+07        2.953730e+07      2.953745e+07  152630.075073     152.496338      2.953730e+07        0.998535                0.998535       76.248169      101.997070                0.0                1.0                  0.0                  1.0  -2.972546e+07              0.000000            101.997070  151.497803      151.497803       0.0
2        2.953760e+07        2.953739e+07      2.953760e+07  152648.834229     152.496338      2.953739e+07        4.992676                0.998535       76.248169      101.997070                0.0                2.0                  0.0                  1.0  -2.972546e+07              0.000000            101.997070  204.992676      200.000000       1.0
3        2.953775e+07        2.953750e+07      2.953775e+07  152706.323242     152.496338      2.953750e+07       57.489014                4.992676       83.434296      101.997070                0.0                2.0                  0.0                  1.0  -2.972546e+07              0.000000            101.997070  200.000000      200.000000       1.0
4        2.953792e+07        2.953750e+07      2.953792e+07  167126.080322     166.868591      2.953750e+07      124.357605               57.489014       83.434296      101.997070                0.0                2.0                  0.0                  1.0  -2.972546e+07              0.000000            101.997070  300.000000      200.000000       1.0
5        2.953809e+07        2.953760e+07      2.953809e+07  167292.948914     166.868591      2.953760e+07      191.226196              124.357605       83.434296      100.998535                1.0                3.0                  1.0                  1.0  -2.972546e+07             83.434296            100.998535  299.001465      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1558345/8192, alpha=2045/2048, buf_size=200.[0m
[01/09 16:07:46]  --------------------------------------------------------------------------------
[01/09 16:07:46]  Iteration: 18 (0 solution, 17 counterexamples)
[01/09 16:08:00]  Generator returned sat in 12.377284 secs.
[01/09 16:08:00]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_c + -1min_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:08:03]  Improved gap from 0.0 to 100
[01/09 16:08:04]  Improved number of small numbers from 106 to 106 out of a max of 134
[01/09 16:08:04]  Verifer returned sat in 3.919585 secs.
[01/09 16:08:04]  sf_get_cex returned in 3.980589 secs.
[01/09 16:08:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.953656e+07        2.953628e+07      2.953656e+07       0.998291       0.998779      2.953628e+07        0.000000                0.000000       50.263158      133.333333                1.0                3.0                  1.0                  5.0  -2.972463e+07             50.263158            666.666667  274.736842      200.000000       2.0
1        2.953666e+07        2.953637e+07      2.953666e+07  100801.052632     100.526316      2.953637e+07        0.526316                0.000000       50.263158      133.333333                1.0                3.0                  1.0                  5.0  -2.972463e+07             50.263158            666.666667  290.000000      200.000000       2.0
2        2.953676e+07        2.953647e+07      2.953676e+07  100816.842105     100.526316      2.953647e+07        1.052632                0.526316       62.105263      133.333333                2.0                4.0                  2.0                  5.0  -2.972463e+07            124.210526            666.666667  288.421053      200.000000       3.0
3        2.953688e+07        2.953656e+07      2.953688e+07  124500.000000     124.210526      2.953656e+07       25.263158                1.052632       68.684211      133.333333                2.0                4.0                  2.0                  4.0  -2.972463e+07            137.368421            533.333333  300.000000      200.000000       3.0
4        2.953695e+07        2.953670e+07      2.953695e+07   68483.157895      68.157895      2.953670e+07       25.263158               25.263158       82.631579      133.333333                1.0                3.0                  2.0                  3.0  -2.972463e+07            165.263158            400.000000  229.736842      168.157895       2.0
5        2.953712e+07        2.953677e+07      2.953712e+07  165518.157895     165.263158      2.953677e+07       58.684211               25.263158       82.631579      121.184211                1.0                3.0                  2.0                  3.0  -2.972463e+07            165.263158            363.552632  290.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=1105/19, alpha=10/19, buf_size=200.[0m
[01/09 16:08:04]  --------------------------------------------------------------------------------
[01/09 16:08:04]  Iteration: 19 (0 solution, 18 counterexamples)
[01/09 16:08:15]  Generator returned sat in 10.665274 secs.
[01/09 16:08:15]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:08:31]  Improved gap from 19.816769567815175 to 48.4375
[01/09 16:08:31]  Improved number of small numbers from 104 to 109 out of a max of 134
[01/09 16:08:31]  Verifer returned sat in 16.185367 secs.
[01/09 16:08:31]  sf_get_cex returned in 16.248075 secs.
[01/09 16:08:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.960080e+07        2.960080e+07      2.960080e+07       0.998291       0.998291      2.960080e+07             0.0                     0.0       73.208333           100.0                1.0                3.0                  1.0             2.095238  -2.978906e+07             73.208333             209.52381   0.000000       -0.095039       2.0
1        2.960083e+07        2.960080e+07      2.960083e+07   36604.166667      36.604167      2.960080e+07             0.0                     0.0       73.208333           100.0                0.0                1.0                  1.0             2.095238  -2.978901e+07             73.208333             209.52381  36.508929      -11.928571       0.0
2        2.960089e+07        2.960085e+07      2.960089e+07   54438.294643      54.401786      2.960085e+07             0.0                     0.0       73.208333           100.0                0.0                1.0                  1.0             2.095238  -2.978896e+07             73.208333             209.52381  42.473214       -5.964286       0.0
3        2.960094e+07        2.960089e+07      2.960094e+07   54444.258929      54.401786      2.960089e+07             0.0                     0.0       73.208333           100.0                0.0                1.0                  1.0             2.095238  -2.978891e+07             73.208333             209.52381  48.437500        0.000000       0.0
4        2.960100e+07        2.960094e+07      2.960100e+07   54450.223214      54.401786      2.960094e+07             0.0                     0.0       73.208333           100.0                0.0                2.0                  1.0             2.095238  -2.978886e+07             73.208333             209.52381  54.401786       -0.000115       1.0
5        2.960103e+07        2.960100e+07      2.960103e+07   36658.568452      36.604167      2.960100e+07             0.0                     0.0       73.208333           100.0                0.0                1.0                  1.0             2.095238  -2.978886e+07             73.208333             209.52381  36.508837      -63.395704       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=6319/336, buf_size=200.[0m
[01/09 16:08:32]  --------------------------------------------------------------------------------
[01/09 16:08:32]  Iteration: 20 (0 solution, 19 counterexamples)
[01/09 16:08:47]  Generator returned sat in 14.844270 secs.
[01/09 16:08:47]  Candidate solution: 
[1m[94mif (+ -1max_c + 1min_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + 1min_buffer_bytes + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:08:50]  Improved gap from 0.0 to 100
[01/09 16:08:51]  Improved number of small numbers from 75 to 77 out of a max of 134
[01/09 16:08:51]  Verifer returned sat in 3.514349 secs.
[01/09 16:08:51]  sf_get_cex returned in 3.574517 secs.
[01/09 16:08:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.960075e+07        2.960045e+07      2.960075e+07       0.998047       0.998291      2.960045e+07        0.000000                0.000000       49.500854      209.783203                1.0                3.0                  1.0                  2.0  -2.978901e+07             49.500854            419.566406  300.000000      200.000000       2.0
1        2.960084e+07        2.960055e+07      2.960084e+07   99301.708984      99.001709      2.960055e+07        0.000000                0.000000       51.796924      209.783203                1.0                3.0                  1.0                  2.0  -2.978901e+07             51.796924            419.566406  295.407861      199.001709       2.0
2        2.960095e+07        2.960065e+07      2.960095e+07  103889.255518     103.593848      2.960065e+07        2.595557                0.000000       69.861198      209.583594                1.0                3.0                  1.0                  2.0  -2.978901e+07             69.861198            419.167188  290.416406      200.000000       2.0
3        2.960109e+07        2.960076e+07      2.960109e+07  140015.407796     139.722396      2.960076e+07       42.317952                2.595557       78.444104      156.888208                1.0                3.0                  1.0                  2.0  -2.978901e+07             78.444104            313.776416  286.223584      200.000000       2.0
4        2.960124e+07        2.960092e+07      2.960124e+07  157216.749544     156.888208      2.960092e+07       99.206160               42.317952       94.252720      156.888208                1.0                3.0                  1.0                  2.0  -2.978901e+07             94.252720            313.776416  228.736401      200.000000       2.0
5        2.960143e+07        2.960095e+07      2.960143e+07  188833.382015     188.505439      2.960095e+07      187.711600               99.206160       94.252720      125.249573                1.0                3.0                  1.0                  2.0  -2.978901e+07             94.252720            250.499146  299.001709      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=115330007/614400, alpha=511/512, buf_size=200.[0m
[01/09 16:08:51]  --------------------------------------------------------------------------------
[01/09 16:08:51]  Iteration: 21 (0 solution, 20 counterexamples)
[01/09 16:09:04]  Generator returned sat in 11.772177 secs.
[01/09 16:09:04]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:09:09]  Improved gap from 0.0 to 48.4375
[01/09 16:09:10]  Improved number of small numbers from 103 to 106 out of a max of 134
[01/09 16:09:10]  Verifer returned sat in 6.089368 secs.
[01/09 16:09:10]  sf_get_cex returned in 6.150962 secs.
[01/09 16:09:10]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.955302e+07        2.955302e+07      2.955302e+07       0.997803       0.997803      2.955302e+07        0.998047                0.000000       97.041667      103.124756                1.0                3.0                  1.0                  2.0  -2.978901e+07             97.041667            206.249512   0.000000       -0.000045       2.0
1        2.955307e+07        2.955302e+07      2.955307e+07   48521.831380      48.520833      2.955302e+07        0.998047                0.998047       97.041667      103.124756                0.0                1.0                  1.0                  1.0  -2.978896e+07             97.041667            103.124756  48.354167       -0.083333       0.0
2        2.955312e+07        2.955307e+07      2.955312e+07   48570.185547      48.520833      2.955307e+07        0.998047                0.998047       97.041667      103.124756                0.0                1.0                  1.0                  1.0  -2.978891e+07             97.041667            103.124756  48.437500        0.000000       0.0
3        2.955317e+07        2.955312e+07      2.955317e+07   48570.268880      48.520833      2.955312e+07        0.998047                0.998047       97.041667      103.124756                0.0                2.0                  1.0                  1.0  -2.978886e+07             97.041667            103.124756  48.520833       -5.916549       1.0
4        2.955322e+07        2.955317e+07      2.955322e+07   48570.352214      48.520833      2.955317e+07        0.998047                0.998047       97.041667      103.124756                0.0                1.0                  1.0                  1.0  -2.978881e+07             97.041667            103.124756  42.604167       -5.833333       0.0
5        2.955327e+07        2.955322e+07      2.955327e+07   48564.435547      48.520833      2.955322e+07        0.998047                0.998047       97.041667      103.124756                0.0                1.0                  1.0                  1.0  -2.978876e+07             97.041667            103.124756  42.687500       -5.750126       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=239/12, buf_size=200.[0m
[01/09 16:09:10]  --------------------------------------------------------------------------------
[01/09 16:09:10]  Iteration: 22 (0 solution, 21 counterexamples)
[01/09 16:09:52]  Generator returned sat in 41.170097 secs.
[01/09 16:09:52]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + -1max_c + -1min_buffer_bytes + -1max_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:10:18]  Improved gap from 1.1027384671935305 to 48.4375
[01/09 16:10:19]  Improved number of small numbers from 88 to 91 out of a max of 134
[01/09 16:10:19]  Verifer returned sat in 26.275015 secs.
[01/09 16:10:19]  sf_get_cex returned in 26.339499 secs.
[01/09 16:10:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.955301e+07        2.955301e+07      2.955301e+07       0.997803       0.997803      2.955301e+07             0.0                     0.0       58.802637           100.0                0.0                1.0                  0.0                  4.0  -2.978900e+07                   0.0                 400.0   0.000000       -0.000037       0.0
1        2.955305e+07        2.955302e+07      2.955305e+07   39800.439453      39.800439      2.955302e+07             0.0                     0.0       58.802637           100.0                0.0                1.0                  0.0                  4.0  -2.978895e+07                   0.0                 400.0  38.802637       -9.634900       0.0
2        2.955309e+07        2.955307e+07      2.955309e+07   39839.242090      39.800439      2.955307e+07             0.0                     0.0       58.802637           100.0                0.0                1.0                  0.0                  4.0  -2.978891e+07                   0.0                 400.0  25.911182      -22.526318       0.0
3        2.955313e+07        2.955312e+07      2.955313e+07   39826.350635      39.800439      2.955312e+07             0.0                     0.0       58.802637           100.0                0.0                1.0                  0.0                  4.0  -2.978886e+07                   0.0                 400.0  17.274121      -31.163379       0.0
4        2.955317e+07        2.955316e+07      2.955317e+07   39817.713574      39.800439      2.955316e+07             0.0                     0.0       58.802637           100.0                0.0                1.0                  0.0                  4.0  -2.978880e+07                   0.0                 400.0   8.637061      -39.800439       0.0
5        2.955321e+07        2.955321e+07      2.955321e+07   39809.076514      39.800439      2.955321e+07             0.0                     0.0       58.802637           100.0                0.0                1.0                  0.0                  4.0  -2.978880e+07                   0.0                 400.0   0.000000      -99.999793       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=77833/4096, buf_size=200.[0m
[01/09 16:10:19]  --------------------------------------------------------------------------------
[01/09 16:10:19]  Iteration: 23 (0 solution, 22 counterexamples)
[01/09 16:10:28]  Generator returned sat in 7.935807 secs.
[01/09 16:10:28]  Candidate solution: 
[1m[94mif (+ -1max_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:10:32]  Improved gap from 0.997802734375 to 100
[01/09 16:10:32]  Improved number of small numbers from 103 to 103 out of a max of 134
[01/09 16:10:32]  Verifer returned sat in 4.543111 secs.
[01/09 16:10:32]  sf_get_cex returned in 4.607300 secs.
[01/09 16:10:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.959545e+07        2.959517e+07      2.959545e+07       0.997803       0.997803      2.959517e+07        0.324675                0.000000        0.500000      190.666667                1.0                3.0                  1.0                  2.5  -2.983124e+07              0.500000            476.666667  281.000000           199.5       2.0
1        2.959547e+07        2.959535e+07      2.959547e+07   19781.324675      19.500000      2.959535e+07        0.324675                0.324675       90.750000      190.666667                1.0                3.0                  1.0                  2.5  -2.983124e+07             90.750000            476.666667  119.000000           119.0       2.0
2        2.959565e+07        2.959545e+07      2.959565e+07  181619.324675     181.500000      2.959545e+07        0.824675                0.324675       93.833333      190.666667                0.0                2.0                  1.0                  2.5  -2.983124e+07             93.833333            476.666667  200.000000           200.0       1.0
3        2.959577e+07        2.959546e+07      2.959577e+07  113534.158009     113.333333      2.959546e+07       14.158009                0.824675       93.833333      190.666667                1.0                3.0                  1.0                  2.5  -2.983124e+07             93.833333            476.666667  290.166667           200.0       2.0
4        2.959595e+07        2.959564e+07      2.959595e+07  187970.991342     187.666667      2.959564e+07      101.824675               14.158009       94.333333      190.166667                1.0                3.0                  1.0                  2.5  -2.983124e+07             94.333333            475.416667  209.833333           200.0       2.0
5        2.959614e+07        2.959565e+07      2.959614e+07  188978.324675     188.666667      2.959565e+07      190.491342              101.824675       94.333333      100.250000                1.0                3.0                  1.0                  2.5  -2.983124e+07             94.333333            250.625000  299.500000           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=1141/6, alpha=39/2, buf_size=200.[0m
[01/09 16:10:33]  --------------------------------------------------------------------------------
[01/09 16:10:33]  Iteration: 24 (0 solution, 23 counterexamples)
[01/09 16:10:59]  Generator returned sat in 25.109381 secs.
[01/09 16:10:59]  Candidate solution: 
[1m[94mif (+ -1max_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_c + -1min_buffer_bytes + 1max_buffer_bytes + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:11:03]  Improved gap from 0.0 to 100
[01/09 16:11:03]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 16:11:03]  Verifer returned sat in 4.333096 secs.
[01/09 16:11:03]  sf_get_cex returned in 4.396678 secs.
[01/09 16:11:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.959495e+07        2.959484e+07      2.959495e+07       0.997559       0.997314      2.959484e+07        0.000000                0.000000            98.0           197.0                0.0                1.0                  0.0             2.499756  -2.983124e+07                   0.0            492.451904  109.999756        9.999756       0.0
1        2.959515e+07        2.959495e+07      2.959515e+07  196109.999756     196.000000      2.959495e+07        0.000000                0.000000            98.0           197.0                0.0                2.0                  0.0             2.499756  -2.983124e+07                   0.0            492.451904  203.000000      105.999756       1.0
2        2.959535e+07        2.959505e+07      2.959535e+07  196203.000000     196.000000      2.959505e+07        1.999756                0.000000            98.0           197.0                0.0                2.0                  0.0             2.499756  -2.983124e+07                   0.0            492.451904  297.000000      200.000000       1.0
3        2.959554e+07        2.959524e+07      2.959554e+07  196298.999756     196.000000      2.959524e+07       97.999756                1.999756           100.0           197.0                0.0                2.0                  0.0             2.000000  -2.983124e+07                   0.0            394.000000  200.000000      200.000000       1.0
4        2.959574e+07        2.959524e+07      2.959574e+07  200297.999756     200.000000      2.959524e+07      197.999756               97.999756           100.0           197.0                0.0                2.0                  0.0             2.000000  -2.983124e+07                   0.0            394.000000  300.000000      200.000000       1.0
5        2.959594e+07        2.959544e+07      2.959594e+07  200497.999756     200.000000      2.959544e+07      297.999756              197.999756           100.0           197.0                1.0                3.0                  1.0             2.000000  -2.983124e+07                 100.0            394.000000  203.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1220607/4096, alpha=2047/4096, buf_size=200.[0m
[01/09 16:11:03]  --------------------------------------------------------------------------------
[01/09 16:11:03]  Iteration: 25 (0 solution, 24 counterexamples)
[01/09 16:11:08]  Generator returned sat in 3.896304 secs.
[01/09 16:11:08]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:11:16]  Improved gap from 10.81904761904762 to 48.4375
[01/09 16:11:17]  Improved number of small numbers from 89 to 90 out of a max of 134
[01/09 16:11:17]  Verifer returned sat in 8.405714 secs.
[01/09 16:11:17]  sf_get_cex returned in 8.466199 secs.
[01/09 16:11:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.975360e+07        2.975358e+07      2.975360e+07       0.997559       0.997314      2.975358e+07             0.0                     0.0       37.876586           100.0                2.0                4.0                  2.0                  2.0  -2.983124e+07             75.753172                 200.0  18.335933       18.335933       3.0
1        2.975364e+07        2.975358e+07      2.975364e+07   36344.903125      36.326567      2.975358e+07             0.0                     0.0       37.876586           100.0                2.0                4.0                  2.0                  2.0  -2.983120e+07             75.753172                 200.0  54.656269        0.000000       3.0
2        2.975367e+07        2.975364e+07      2.975367e+07   36381.223461      36.326567      2.975364e+07             0.0                     0.0       37.876586           100.0                0.0                2.0                  2.0                  2.0  -2.983115e+07             75.753172                 200.0  36.326567      -12.110933       1.0
3        2.975371e+07        2.975369e+07      2.975371e+07   36362.893759      36.326567      2.975369e+07             0.0                     0.0       37.876586           100.0                0.0                1.0                  2.0                  2.0  -2.983109e+07             75.753172                 200.0  24.215634      -24.221866       0.0
4        2.975375e+07        2.975373e+07      2.975375e+07   36350.782827      36.326567      2.975373e+07             0.0                     0.0       37.882817           100.0                0.0                1.0                  2.0                  2.0  -2.983104e+07             75.765634                 200.0  12.104702      -36.332798       0.0
5        2.975378e+07        2.975378e+07      2.975378e+07   36344.903125      36.332798      2.975378e+07             0.0                     0.0       39.993754           100.0                0.0                1.0                  2.0                  2.0  -2.983104e+07             79.987508                 200.0   0.000000      -99.999854       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=16517/10656, buf_size=200.[0m
[01/09 16:11:17]  --------------------------------------------------------------------------------
[01/09 16:11:17]  Iteration: 26 (0 solution, 25 counterexamples)
[01/09 16:11:37]  Generator returned sat in 18.583472 secs.
[01/09 16:11:37]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:11:38]  Improved number of small numbers from 103 to 133 out of a max of 133
[01/09 16:11:38]  Verifer returned sat in 0.571667 secs.
[01/09 16:11:38]  sf_get_cex returned in 0.635674 secs.
[01/09 16:11:38]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.975348e+07        2.975322e+07      2.975348e+07       0.997559       0.997314      2.975322e+07             0.0                     0.0            80.0      198.500000                0.0                2.0                  0.0                  2.5  -2.983094e+07                   0.0            496.250000  263.000000           200.0       1.0
1        2.975358e+07        2.975338e+07      2.975358e+07   99763.000000      99.500000      2.975338e+07             0.0                     0.0            81.5      198.500000                0.0                2.0                  0.0                  2.5  -2.983094e+07                   0.0            496.250000  199.500000           199.5       1.0
2        2.975368e+07        2.975338e+07      2.975368e+07  101199.500000     101.000000      2.975338e+07             0.5                     0.0            81.5      198.500000                0.0                2.0                  0.0                  2.5  -2.983094e+07                   0.0            496.250000  300.000000           200.0       1.0
3        2.975379e+07        2.975358e+07      2.975379e+07  101300.500000     101.000000      2.975358e+07             1.5                     0.5           100.0      198.500000                0.0                2.0                  0.0                  2.0  -2.983094e+07                   0.0            397.000000  200.000000           200.0       1.0
4        2.975391e+07        2.975358e+07      2.975391e+07  119701.500000     119.500000      2.975358e+07            21.0                     1.5           100.0      198.500000                0.0                2.0                  0.0                  2.0  -2.983094e+07                   0.0            397.000000  300.000000           200.0       1.0
5        2.975402e+07        2.975378e+07      2.975402e+07  119821.000000     119.500000      2.975378e+07            40.5                    21.0           100.0      197.999756                1.0                3.0                  1.0                  2.0  -2.983094e+07                 100.0            395.999512  202.000244           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=81/2, alpha=39/2, buf_size=200.[0m
[01/09 16:11:38]  --------------------------------------------------------------------------------
[01/09 16:11:38]  Iteration: 27 (0 solution, 26 counterexamples)
[01/09 16:12:28]  Generator returned sat in 49.134022 secs.
[01/09 16:12:28]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1min_buffer_bytes + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:12:30]  Improved gap from 0.15267175572519084 to 100
[01/09 16:12:30]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/09 16:12:30]  Verifer returned sat in 1.560908 secs.
[01/09 16:12:30]  sf_get_cex returned in 1.626520 secs.
[01/09 16:12:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        2.975358e+07        2.975334e+07      2.975358e+07       0.997559       0.997314      2.975334e+07             0.0                     0.0            81.0          121.00                1.0                3.0                  1.0                  2.5  -2.983104e+07                  81.0               302.500    243.0           200.0       2.0
1        2.975368e+07        2.975342e+07      2.975368e+07  100743.000000     100.500000      2.975342e+07             0.5                     0.0            81.0          121.00                1.0                3.0                  1.0                  2.5  -2.983104e+07                  81.0               302.500    261.5           200.0       2.0
2        2.975378e+07        2.975354e+07      2.975378e+07  100762.000000     100.500000      2.975354e+07             1.0                     0.5            81.0          121.00                1.0                3.0                  1.0                  2.5  -2.983104e+07                  81.0               302.500    241.0           200.0       2.0
3        2.975388e+07        2.975366e+07      2.975388e+07  100742.000000     100.500000      2.975366e+07             1.5                     1.0            81.0          121.00                1.0                3.0                  1.0                  2.5  -2.983104e+07                  81.0               302.500    221.0           200.0       2.0
4        2.975398e+07        2.975375e+07      2.975398e+07  100722.500000     100.500000      2.975375e+07             2.0                     1.5            81.5          121.00                1.0                3.0                  1.0                  2.5  -2.983104e+07                  81.5               302.500    235.5           200.0       2.0
5        2.975409e+07        2.975378e+07      2.975409e+07  101237.500000     101.000000      2.975378e+07             3.0                     2.0            81.5          110.75                2.0                4.0                  2.0                  2.5  -2.983104e+07                 163.0               276.875    300.0           200.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=5/2, alpha=39/2, buf_size=200.[0m
[01/09 16:12:30]  --------------------------------------------------------------------------------
[01/09 16:12:30]  Iteration: 28 (0 solution, 27 counterexamples)
[01/09 16:12:55]  Generator returned sat in 24.088330 secs.
[01/09 16:12:55]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1min_buffer_bytes + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:13:00]  Improved number of small numbers from 108 to 110 out of a max of 133
[01/09 16:13:00]  Verifer returned sat in 4.130540 secs.
[01/09 16:13:00]  sf_get_cex returned in 4.193898 secs.
[01/09 16:13:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.975336e+07        2.975306e+07      2.975336e+07       0.997314       0.996826      2.975306e+07        0.000000                0.000000        5.333496           100.0                2.0                4.0                  2.0             2.666748  -2.983104e+07             10.666992            266.674805  297.333333           200.0       3.0
1        2.975336e+07        2.975326e+07      2.975336e+07    3297.333333       3.000000      2.975326e+07        0.000000                0.000000       98.666667           100.0                0.0                2.0                  2.0             2.666748  -2.983104e+07            197.333333            266.674805  103.000000           103.0       1.0
2        2.975356e+07        2.975326e+07      2.975356e+07  197436.333333     197.333333      2.975326e+07        0.333333                0.000000       98.666667           100.0                0.0                2.0                  2.0             2.666748  -2.983104e+07            197.333333            266.674805  300.000000           200.0       1.0
3        2.975376e+07        2.975346e+07      2.975376e+07  197633.666667     197.333333      2.975346e+07       97.666667                0.333333      100.000000           100.0                0.0                2.0                  2.0             2.000000  -2.983104e+07            200.000000            200.000000  200.000000           200.0       1.0
4        2.975396e+07        2.975346e+07      2.975396e+07  200297.666667     200.000000      2.975346e+07      197.666667               97.666667      100.000000           100.0                0.0                2.0                  2.0             2.000000  -2.983104e+07            200.000000            200.000000  300.000000           200.0       1.0
5        2.975416e+07        2.975356e+07      2.975416e+07  200497.666667     200.000000      2.975356e+07      297.666667              197.666667      100.000000           100.0                1.0                3.0                  2.0             2.000000  -2.983104e+07            200.000000            200.000000  299.666477           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=893/3, alpha=3, buf_size=200.[0m
[01/09 16:13:00]  --------------------------------------------------------------------------------
[01/09 16:13:00]  Iteration: 29 (0 solution, 28 counterexamples)
[01/09 16:14:08]  Generator returned sat in 67.290157 secs.
[01/09 16:14:08]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1max_qdel + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_buffer + -1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:14:16]  Improved gap from 0.0 to 48.4375
[01/09 16:14:16]  Improved number of small numbers from 103 to 107 out of a max of 134
[01/09 16:14:16]  Verifer returned sat in 7.957787 secs.
[01/09 16:14:16]  sf_get_cex returned in 8.021941 secs.
[01/09 16:14:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.973338e+07        2.973338e+07      2.973338e+07       0.997314       0.996582      2.973338e+07             0.0                     0.0       32.986111           100.0                0.0                1.0                  0.0                  2.5  -2.981126e+07                   0.0                 250.0   0.000000       -0.000108       0.0
1        2.973343e+07        2.973338e+07      2.973343e+07   49895.833333      49.895833      2.973338e+07             0.0                     0.0       32.986111           100.0                0.0                1.0                  0.0                  2.5  -2.981121e+07                   0.0                 250.0  48.229167       -0.208333       0.0
2        2.973348e+07        2.973343e+07      2.973348e+07   49944.062500      49.895833      2.973343e+07             0.0                     0.0       32.986111           100.0                0.0                1.0                  0.0                  2.5  -2.981116e+07                   0.0                 250.0  49.687500       -0.208197       0.0
3        2.973353e+07        2.973348e+07      2.973353e+07   49945.520833      49.895833      2.973348e+07             0.0                     0.0       32.986111           100.0                0.0                1.0                  0.0                  2.5  -2.981111e+07                   0.0                 250.0  49.687500        0.000000       0.0
4        2.973358e+07        2.973353e+07      2.973358e+07   49945.520833      49.895833      2.973353e+07             0.0                     0.0       37.005208           100.0                0.0                2.0                  0.0                  2.5  -2.981106e+07                   0.0                 250.0  49.895833       -0.000026       1.0
5        2.973360e+07        2.973358e+07      2.973360e+07   18552.500000      18.502604      2.973358e+07             0.0                     0.0       39.625000           100.0                0.0                1.0                  0.0                  2.5  -2.981101e+07                   0.0                 250.0  18.294271      -30.143418       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2435/144, buf_size=200.[0m
[01/09 16:14:17]  --------------------------------------------------------------------------------
[01/09 16:14:17]  Iteration: 30 (0 solution, 29 counterexamples)
[01/09 16:14:52]  Generator returned sat in 33.704166 secs.
[01/09 16:14:52]  Candidate solution: 
[1m[94mif (+ -1min_c + 1max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:14:55]  Improved gap from 19.60026648900733 to 100
[01/09 16:14:56]  Improved number of small numbers from 103 to 103 out of a max of 134
[01/09 16:14:56]  Verifer returned sat in 3.901352 secs.
[01/09 16:14:56]  sf_get_cex returned in 3.965784 secs.
[01/09 16:14:56]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.977984e+07        2.977964e+07      2.977984e+07       0.997314       0.996582      2.977964e+07        0.056872                0.000000       99.071090      103.014218                2.0                4.0                  2.0                  5.0  -2.985763e+07            198.142180            515.071090  201.554502      102.085308       3.0
1        2.978004e+07        2.977974e+07      2.978004e+07  198343.791469     198.142180      2.977974e+07        0.284360                0.056872       99.071090      103.014218                1.0                3.0                  2.0                  5.0  -2.985763e+07            198.142180            515.071090  300.000000      200.000000       2.0
2        2.978014e+07        2.977984e+07      2.978014e+07   99314.502370      99.014218      2.977984e+07        0.284360                0.284360       99.071090      103.014218                1.0                3.0                  2.0                  3.0  -2.985763e+07            198.142180            309.042654  297.554502      199.014218       2.0
3        2.978034e+07        2.978004e+07      2.978034e+07  198440.018957     198.142180      2.978004e+07       97.440758                0.284360       99.127962      103.014218                1.0                3.0                  2.0                  3.0  -2.985763e+07            198.255924            309.042654  202.957346      200.000000       2.0
4        2.978054e+07        2.978014e+07      2.978054e+07  198556.322275     198.255924      2.978014e+07      195.696682               97.440758       99.753555      103.014218                1.0                3.0                  2.0                  3.0  -2.985763e+07            199.507109            309.042654  200.985782      200.000000       2.0
5        2.978074e+07        2.978014e+07      2.978074e+07  199903.791469     199.507109      2.978014e+07      295.203791              195.696682       99.753555      102.957346                1.0                3.0                  2.0                  3.0  -2.985763e+07            199.507109            308.872038  300.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=62228/211, alpha=12/211, buf_size=200.[0m
[01/09 16:14:56]  --------------------------------------------------------------------------------
[01/09 16:14:56]  Iteration: 31 (0 solution, 30 counterexamples)
[01/09 16:15:24]  Generator returned sat in 27.028328 secs.
[01/09 16:15:24]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:15:28]  Improved gap from 0.0 to 100
[01/09 16:15:28]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 16:15:28]  Verifer returned sat in 3.594948 secs.
[01/09 16:15:28]  sf_get_cex returned in 3.664742 secs.
[01/09 16:15:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.977990e+07        2.977961e+07      2.977990e+07        0.99707       0.996338      2.977961e+07             0.0                     0.0           82.00      100.999756                0.0                1.0                  0.0             2.499756  -2.985763e+07                   0.0            252.474732  294.250000           197.0       0.0
1        2.977994e+07        2.977970e+07      2.977994e+07    41294.25000      41.000000      2.977970e+07             0.0                     0.0           82.00      100.999756                0.0                2.0                  0.0             2.499756  -2.985763e+07                   0.0            252.474732  238.000000           138.0       1.0
2        2.978011e+07        2.977990e+07      2.978011e+07   164238.00000     164.000000      2.977990e+07             2.0                     0.0           98.75      100.999756                0.0                2.0                  0.0             2.499756  -2.985763e+07                   0.0            252.474732  202.500000           200.0       1.0
3        2.978030e+07        2.978000e+07      2.978030e+07   197704.50000     197.500000      2.978000e+07            99.5                     2.0          100.00      100.999756                0.0                2.0                  0.0             2.000000  -2.985763e+07                   0.0            201.999512  200.000000           200.0       1.0
4        2.978050e+07        2.978000e+07      2.978050e+07   200299.50000     200.000000      2.978000e+07           199.5                    99.5          100.00      100.999756                0.0                2.0                  0.0             2.000000  -2.985763e+07                   0.0            201.999512  300.000000           200.0       1.0
5        2.978070e+07        2.978010e+07      2.978070e+07   200499.50000     200.000000      2.978010e+07           299.5                   199.5          100.00      100.499756                1.0                3.0                  1.0             2.000000  -2.985763e+07                 100.0            200.999512  299.500244           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=599/2, alpha=2047/4096, buf_size=200.[0m
[01/09 16:15:28]  --------------------------------------------------------------------------------
[01/09 16:15:28]  Iteration: 32 (0 solution, 31 counterexamples)
[01/09 16:16:25]  Generator returned sat in 55.242797 secs.
[01/09 16:16:25]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:16:31]  Improved gap from 19.733333333333334 to 48.4375
[01/09 16:16:32]  Improved number of small numbers from 104 to 108 out of a max of 134
[01/09 16:16:32]  Verifer returned sat in 6.374067 secs.
[01/09 16:16:32]  sf_get_cex returned in 6.445098 secs.
[01/09 16:16:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.977996e+07        2.977996e+07      2.977996e+07       0.996826       0.996338      2.977996e+07             0.0                     0.0       36.324324           100.0                1.0                3.0                  1.0             3.072266  -2.985788e+07             36.324324            307.226562   6.064189        5.992267       2.0
1        2.977998e+07        2.977996e+07      2.977998e+07   18240.298423      18.234234      2.977996e+07             0.0                     0.0       36.324324           100.0                0.0                2.0                  1.0             3.072266  -2.985783e+07             36.324324            307.226562  24.226351      -24.211149       1.0
2        2.978005e+07        2.978001e+07      2.978005e+07   72672.875000      72.648649      2.978001e+07             0.0                     0.0       36.324324           100.0                0.0                1.0                  1.0             3.072266  -2.985778e+07             36.324324            307.226562  48.437500        0.000000       0.0
3        2.978007e+07        2.978005e+07      2.978007e+07   18210.599662      18.162162      2.978005e+07             0.0                     0.0       36.324324           100.0                0.0                2.0                  1.0             3.072266  -2.985772e+07             36.324324            307.226562  18.162162      -30.275432       1.0
4        2.978014e+07        2.978010e+07      2.978014e+07   72666.810811      72.648649      2.978010e+07             0.0                     0.0       36.396396           100.0                0.0                1.0                  1.0             3.072266  -2.985767e+07             36.396396            307.226562  42.100225       -6.337477       0.0
5        2.978016e+07        2.978016e+07      2.978016e+07   18240.298423      18.198198      2.978016e+07             0.0                     0.0       39.971171           100.0                0.0                1.0                  1.0             3.072266  -2.985763e+07             39.971171            307.226562   6.028153      -42.409542       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2008/111, buf_size=200.[0m
[01/09 16:16:32]  --------------------------------------------------------------------------------
[01/09 16:16:32]  Iteration: 33 (0 solution, 32 counterexamples)
[01/09 16:16:42]  Generator returned sat in 9.026253 secs.
[01/09 16:16:42]  Candidate solution: 
[1m[94mif (+ 1max_c + -1min_buffer_bytes + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:16:45]  Improved gap from 0.0 to 100
[01/09 16:16:46]  Improved number of small numbers from 109 to 109 out of a max of 134
[01/09 16:16:46]  Verifer returned sat in 3.119948 secs.
[01/09 16:16:46]  sf_get_cex returned in 3.180179 secs.
[01/09 16:16:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.977978e+07        2.977953e+07      2.977978e+07       0.996826       0.996338      2.977953e+07        0.000000                0.000000       51.895522      110.791045                2.0                4.0                  2.0             4.746269  -2.985767e+07            103.791045            525.844063  247.014925           200.0       3.0
1        2.977989e+07        2.977962e+07      2.977989e+07  104038.059701     103.791045      2.977962e+07        3.791045                0.000000       51.895522      110.791045                1.0                3.0                  2.0             4.746269  -2.985767e+07            103.791045            525.844063  257.925373           200.0       2.0
2        2.977999e+07        2.977969e+07      2.977999e+07  104052.761194     103.791045      2.977969e+07        7.582090                3.791045       51.895522      110.791045                2.0                4.0                  2.0             4.746269  -2.985767e+07            103.791045            525.844063  294.776119           200.0       3.0
3        2.978009e+07        2.977978e+07      2.978009e+07  104093.402985     103.791045      2.977978e+07       11.373134                7.582090       61.753731      110.791045                2.0                4.0                  2.0             4.000000  -2.985767e+07            123.507463            443.164179  300.000000           200.0       3.0
4        2.978022e+07        2.977988e+07      2.978022e+07  123818.835821     123.507463      2.977988e+07       34.880597               11.373134       69.402985      110.791045                2.0                4.0                  2.0             4.000000  -2.985767e+07            138.805970            443.164179  300.000000           200.0       3.0
5        2.978036e+07        2.977998e+07      2.978036e+07  139140.850746     138.805970      2.977998e+07       73.686567               34.880597       74.626866      110.791045                1.0                3.0                  2.0             3.000000  -2.985767e+07            149.253731            332.373134  299.253731           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=4683/67, alpha=50/67, buf_size=200.[0m
[01/09 16:16:46]  --------------------------------------------------------------------------------
[01/09 16:16:46]  Iteration: 34 (0 solution, 33 counterexamples)
[01/09 16:17:00]  Generator returned sat in 12.968208 secs.
[01/09 16:17:00]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:17:06]  Improved gap from 0.99609375 to 48.4375
[01/09 16:17:06]  Improved number of small numbers from 128 to 128 out of a max of 134
[01/09 16:17:06]  Verifer returned sat in 5.462569 secs.
[01/09 16:17:06]  sf_get_cex returned in 5.526682 secs.
[01/09 16:17:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.977960e+07        2.977960e+07      2.977960e+07       0.996582       0.996094      2.977960e+07             0.0                     0.0       63.919271           100.0                2.0                4.0                  2.0                  2.0  -2.985787e+07            127.838542                 200.0   4.257812        4.257812       3.0
1        2.977965e+07        2.977961e+07      2.977965e+07   49437.851562      49.433594      2.977961e+07             0.0                     0.0       63.919271           100.0                0.0                1.0                  2.0                  2.0  -2.985783e+07            127.838542                 200.0  48.437500        0.000000       0.0
2        2.977969e+07        2.977965e+07      2.977969e+07   32008.072917      31.959635      2.977965e+07             0.0                     0.0       63.919271           100.0                0.0                2.0                  2.0                  2.0  -2.985778e+07            127.838542                 200.0  31.959635      -16.477865       1.0
3        2.977974e+07        2.977970e+07      2.977974e+07   49465.553385      49.433594      2.977970e+07             0.0                     0.0       63.919271           100.0                0.0                1.0                  2.0                  2.0  -2.985772e+07            127.838542                 200.0  32.955729      -15.481771       0.0
4        2.977977e+07        2.977975e+07      2.977977e+07   31992.591146      31.959635      2.977975e+07             0.0                     0.0       63.919271           100.0                0.0                1.0                  2.0                  2.0  -2.985767e+07            127.838542                 200.0  16.477865      -31.959635       0.0
5        2.977980e+07        2.977980e+07      2.977980e+07   31976.113281      31.959635      2.977980e+07             0.0                     0.0       63.919271           100.0                0.0                1.0                  2.0                  2.0  -2.985767e+07            127.838542                 200.0   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=11125/768, buf_size=200.[0m
[01/09 16:17:06]  --------------------------------------------------------------------------------
[01/09 16:17:06]  Iteration: 35 (0 solution, 34 counterexamples)
[01/09 16:18:02]  Generator returned sat in 54.787722 secs.
[01/09 16:18:03]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:18:10]  Improved gap from 0.0 to 48.4375
[01/09 16:18:11]  Improved number of small numbers from 108 to 111 out of a max of 134
[01/09 16:18:11]  Verifer returned sat in 8.291568 secs.
[01/09 16:18:11]  sf_get_cex returned in 8.357745 secs.
[01/09 16:18:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.007714e+07        3.007714e+07      3.007714e+07       0.996582       0.995850      3.007714e+07             0.0                     0.0       74.134115      226.512939                2.0                4.0                  2.0                  2.0  -2.985792e+07            148.268229            453.025879   0.221354        0.221191       3.0
1        3.007720e+07        3.007714e+07      3.007720e+07   54245.013021      54.244792      3.007714e+07             0.0                     0.0       74.134115      226.512939                0.0                2.0                  2.0                  2.0  -2.985788e+07            148.268229            453.025879  54.355469       -0.110677       1.0
2        3.007723e+07        3.007720e+07      3.007723e+07   37121.412760      37.067057      3.007720e+07             0.0                     0.0       74.134115      226.512939                0.0                1.0                  2.0                  2.0  -2.985783e+07            148.268229            453.025879  36.956380      -11.481120       0.0
3        3.007727e+07        3.007725e+07      3.007727e+07   37104.013672      37.067057      3.007725e+07             0.0                     0.0       74.134115      226.512939                0.0                1.0                  2.0                  2.0  -2.985778e+07            148.268229            453.025879  25.585938      -22.851562       0.0
4        3.007731e+07        3.007729e+07      3.007731e+07   37092.643229      37.067057      3.007729e+07             0.0                     0.0       74.134115      226.512939                0.0                1.0                  2.0                  2.0  -2.985772e+07            148.268229            453.025879  14.215495      -34.222005       0.0
5        3.007735e+07        3.007734e+07      3.007735e+07   37081.272786      37.067057      3.007734e+07             0.0                     0.0       74.134115      226.512939                0.0                1.0                  2.0                  2.0  -2.985767e+07            148.268229            453.025879   2.844897      -45.592692       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=15275/768, buf_size=200.[0m
[01/09 16:18:11]  --------------------------------------------------------------------------------
[01/09 16:18:11]  Iteration: 36 (0 solution, 35 counterexamples)
[01/09 16:18:38]  Generator returned sat in 24.966579 secs.
[01/09 16:18:38]  Candidate solution: 
[1m[94mif (+ -1min_c + 1max_c + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1max_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:18:41]  Improved gap from 16.652775462577097 to 100
[01/09 16:18:42]  Improved number of small numbers from 105 to 107 out of a max of 134
[01/09 16:18:42]  Verifer returned sat in 4.184272 secs.
[01/09 16:18:42]  sf_get_cex returned in 4.248128 secs.
[01/09 16:18:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        3.007724e+07        3.007696e+07      3.007724e+07       0.996338       0.995605      3.007696e+07        0.318182                0.000000       93.159091      100.159091                0.0                2.0                  0.0                  4.0  -2.985782e+07              0.000000            400.636364  283.772727           200.0       1.0
1        3.007743e+07        3.007705e+07      3.007743e+07  186602.272727     186.318182      3.007705e+07       86.636364                0.318182       93.159091      100.159091                0.0                2.0                  0.0                  2.0  -2.985782e+07              0.000000            200.318182  286.954545           200.0       1.0
2        3.007761e+07        3.007724e+07      3.007761e+07  186691.772727     186.318182      3.007724e+07      172.954545               86.636364       94.590909      100.159091                1.0                3.0                  1.0                  2.0  -2.985782e+07             94.590909            200.318182  200.000000           200.0       2.0
3        3.007780e+07        3.007725e+07      3.007780e+07  189554.772727     189.181818      3.007725e+07      262.136364              172.954545       94.590909      100.159091                1.0                3.0                  1.0                  2.0  -2.985782e+07             94.590909            200.318182  295.863636           200.0       2.0
4        3.007799e+07        3.007744e+07      3.007799e+07  189739.818182     189.181818      3.007744e+07      351.318182              262.136364       95.545455      100.159091                1.0                3.0                  1.0                  2.0  -2.985782e+07             95.545455            200.318182  206.045455           200.0       2.0
5        3.007818e+07        3.007744e+07      3.007818e+07  191648.272727     191.090909      3.007744e+07      442.409091              351.318182       95.545455      100.159091                1.0                3.0                  1.0                  2.0  -2.985782e+07             95.545455            200.318182  299.363725           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=7827/22, alpha=1303/4096, buf_size=200.[0m
[01/09 16:18:42]  --------------------------------------------------------------------------------
[01/09 16:18:42]  Iteration: 37 (0 solution, 36 counterexamples)
[01/09 16:19:12]  Generator returned sat in 28.037806 secs.
[01/09 16:19:12]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 16:19:29]  Improved gap from 0.0 to 48.4375
[01/09 16:19:29]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 16:19:29]  Verifer returned sat in 17.230962 secs.
[01/09 16:19:29]  sf_get_cex returned in 17.307124 secs.
[01/09 16:19:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.007764e+07        3.007763e+07      3.007764e+07       0.996338       0.995605      3.007763e+07             0.5                     0.0        72.65625        138.8125                0.0                2.0                  0.0                  2.0  -2.985841e+07               0.00000               277.625  12.609131       12.609131       1.0
1        3.007768e+07        3.007763e+07      3.007768e+07   36341.234131      36.328125      3.007763e+07             0.5                     0.5        72.65625        138.8125                1.0                3.0                  1.0                  2.0  -2.985836e+07              72.65625               277.625  48.437500        0.000000       2.0
2        3.007771e+07        3.007768e+07      3.007771e+07   36377.062500      36.328125      3.007768e+07             0.5                     0.5        72.65625        138.8125                0.0                2.0                  1.0                  2.0  -2.985831e+07              72.65625               277.625  36.328125      -12.109375       1.0
3        3.007775e+07        3.007772e+07      3.007775e+07   36364.953125      36.328125      3.007772e+07             0.5                     0.5        72.65625        138.8125                0.0                1.0                  1.0                  2.0  -2.985825e+07              72.65625               277.625  24.218750      -24.218750       0.0
4        3.007778e+07        3.007777e+07      3.007778e+07   36352.843750      36.328125      3.007777e+07             0.5                     0.5        72.65625        138.8125                0.0                1.0                  1.0                  2.0  -2.985820e+07              72.65625               277.625  12.109375      -36.328125       0.0
5        3.007782e+07        3.007782e+07      3.007782e+07   36340.734375      36.328125      3.007782e+07             0.5                     0.5        72.65625        138.8125                0.0                1.0                  1.0                  2.0  -2.985820e+07              72.65625               277.625   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=79871/4096, buf_size=200.[0m
[01/09 16:19:29]  --------------------------------------------------------------------------------
[01/09 16:19:29]  Iteration: 38 (0 solution, 37 counterexamples)
[01/09 16:21:39]  Generator returned sat in 127.340048 secs.
[01/09 16:21:39]  Candidate solution: 
[1m[94mif (+ -1max_c + 1min_buffer_bytes + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:21:46]  Improved gap from 9.269406392694064 to 48.4375
[01/09 16:21:47]  Improved number of small numbers from 89 to 91 out of a max of 134
[01/09 16:21:47]  Verifer returned sat in 8.130689 secs.
[01/09 16:21:47]  sf_get_cex returned in 8.197338 secs.
[01/09 16:21:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.003298e+07        3.003298e+07      3.003298e+07       0.996094       0.995361      3.003298e+07             0.0                     0.0       77.898242      164.796631                2.0                4.0                  2.0             5.995361  -2.985836e+07            155.796484            988.015348   0.000000       -0.000195       3.0
1        3.003302e+07        3.003298e+07      3.003302e+07   38949.121094      38.949121      3.003298e+07             0.0                     0.0       77.898242      164.796631                0.0                1.0                  2.0             5.995361  -2.985831e+07            155.796484            988.015348  37.953516      -10.483984       0.0
2        3.003306e+07        3.003303e+07      3.003306e+07   38987.074609      38.949121      3.003303e+07             0.0                     0.0       77.898242      164.796631                0.0                1.0                  2.0             5.995361  -2.985826e+07            155.796484            988.015348  28.465137      -19.972363       0.0
3        3.003309e+07        3.003308e+07      3.003309e+07   38977.586230      38.949121      3.003308e+07             0.0                     0.0       77.898242      164.796631                0.0                1.0                  2.0             5.995361  -2.985820e+07            155.796484            988.015348  18.976758      -29.460742       0.0
4        3.003313e+07        3.003312e+07      3.003313e+07   38968.097852      38.949121      3.003312e+07             0.0                     0.0       77.898242      164.796631                0.0                1.0                  2.0             5.995361  -2.985815e+07            155.796484            988.015348   9.488379      -38.949121       0.0
5        3.003317e+07        3.003317e+07      3.003317e+07   38958.609473      38.949121      3.003317e+07             0.0                     0.0       77.898242      164.796631                0.0                1.0                  2.0             5.995361  -2.985815e+07            155.796484            988.015348   0.000000      -99.999951       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2039/2048, buf_size=200.[0m
[01/09 16:21:47]  --------------------------------------------------------------------------------
[01/09 16:21:47]  Iteration: 39 (0 solution, 38 counterexamples)
[01/09 16:22:37]  Generator returned sat in 47.937041 secs.
[01/09 16:22:37]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 1max_c + 1max_buffer_bytes + -5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:22:48]  Improved gap from 0.9523809523809523 to 48.4375
[01/09 16:22:49]  Improved number of small numbers from 88 to 91 out of a max of 134
[01/09 16:22:49]  Verifer returned sat in 11.557580 secs.
[01/09 16:22:49]  sf_get_cex returned in 11.623393 secs.
[01/09 16:22:49]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.003280e+07        3.003280e+07      3.003280e+07       0.995850       0.995361      3.003280e+07             0.0                     0.0       79.203711           100.0                1.0                3.0                  1.0                  5.0  -2.985818e+07             79.203711                 500.0   0.995361        0.995291       2.0
1        3.003284e+07        3.003280e+07      3.003284e+07   39602.850830      39.601855      3.003280e+07             0.0                     0.0       79.203711           100.0                1.0                3.0                  1.0                  5.0  -2.985813e+07             79.203711                 500.0  39.601855       -8.835645       2.0
2        3.003288e+07        3.003285e+07      3.003288e+07   39641.457324      39.601855      3.003285e+07             0.0                     0.0       79.203711           100.0                0.0                1.0                  1.0                  5.0  -2.985808e+07             79.203711                 500.0  30.766211      -17.671360       0.0
3        3.003292e+07        3.003290e+07      3.003292e+07   39632.621680      39.601855      3.003290e+07             0.0                     0.0       79.203711           100.0                0.0                1.0                  1.0                  5.0  -2.985803e+07             79.203711                 500.0  17.671289      -30.766211       0.0
4        3.003296e+07        3.003295e+07      3.003296e+07   39619.526758      39.601855      3.003295e+07             0.0                     0.0       79.203711           100.0                0.0                1.0                  1.0                  5.0  -2.985798e+07             79.203711                 500.0   8.835645      -39.601855       0.0
5        3.003300e+07        3.003300e+07      3.003300e+07   39610.691113      39.601855      3.003300e+07             0.0                     0.0       79.203711           100.0                0.0                1.0                  1.0                  5.0  -2.985798e+07             79.203711                 500.0   0.000000      -99.999827       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4077/4096, buf_size=200.[0m
[01/09 16:22:49]  --------------------------------------------------------------------------------
[01/09 16:22:49]  Iteration: 40 (0 solution, 39 counterexamples)
[01/09 16:25:15]  Generator returned sat in 144.002892 secs.
[01/09 16:25:15]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:25:16]  Improved gap from 0.0 to 100
[01/09 16:25:17]  Improved number of small numbers from 103 to 105 out of a max of 134
[01/09 16:25:17]  Verifer returned sat in 1.675080 secs.
[01/09 16:25:17]  sf_get_cex returned in 1.740810 secs.
[01/09 16:25:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        3.007061e+07        3.007036e+07      3.007061e+07       0.995605       0.995361      3.007036e+07        0.000000                0.000000       81.290323           100.0                2.0                4.0                  2.0             4.645161  -2.989579e+07            162.580645            464.516129  245.806452           200.0       3.0
1        3.007071e+07        3.007045e+07      3.007071e+07  100890.967742     100.645161      3.007045e+07        0.645161                0.000000       81.290323           100.0                0.0                2.0                  2.0             4.645161  -2.989579e+07            162.580645            464.516129  261.290323           200.0       1.0
2        3.007081e+07        3.007061e+07      3.007081e+07  100907.096774     100.645161      3.007061e+07        1.290323                0.645161       81.935484           100.0                1.0                3.0                  2.0             3.000000  -2.989579e+07            163.870968            300.000000  200.000000           200.0       2.0
3        3.007091e+07        3.007071e+07      3.007091e+07  101491.612903     101.290323      3.007071e+07        2.580645                1.290323       87.096774           100.0                1.0                3.0                  2.0             3.000000  -2.989579e+07            174.193548            300.000000  200.000000           200.0       2.0
4        3.007102e+07        3.007071e+07      3.007102e+07  106654.193548     106.451613      3.007071e+07        9.032258                2.580645       87.096774           100.0                1.0                3.0                  2.0             3.000000  -2.989579e+07            174.193548            300.000000  299.354839           200.0       2.0
5        3.007112e+07        3.007085e+07      3.007112e+07  106760.000000     106.451613      3.007085e+07       15.483871                9.032258       87.096774           100.0                1.0                3.0                  2.0             3.000000  -2.989579e+07            174.193548            300.000000  261.290513           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=460/31, alpha=600/31, buf_size=200.[0m
[01/09 16:25:17]  --------------------------------------------------------------------------------
[01/09 16:25:17]  Iteration: 41 (0 solution, 40 counterexamples)
[01/09 16:27:30]  Generator returned sat in 130.919663 secs.
[01/09 16:27:30]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1min_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:27:34]  Improved gap from 8.822055137844611 to 48.4375
[01/09 16:27:35]  Improved number of small numbers from 88 to 90 out of a max of 134
[01/09 16:27:35]  Verifer returned sat in 5.269161 secs.
[01/09 16:27:35]  sf_get_cex returned in 5.336886 secs.
[01/09 16:27:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.007052e+07        3.007050e+07      3.007052e+07       0.995361       0.995361      3.007050e+07        0.995117                0.000000       75.283569           100.0                0.0                2.0                  0.0             4.995117  -2.989588e+07                   0.0            499.511719  15.055237       15.055124       1.0
1        3.007056e+07        3.007051e+07      3.007056e+07   37657.835022      37.641785      3.007051e+07        0.995117                0.995117       75.283569           100.0                0.0                2.0                  0.0             2.000000  -2.989584e+07                   0.0            200.000000  47.442383       -0.995117       1.0
2        3.007059e+07        3.007056e+07      3.007059e+07   37690.222168      37.641785      3.007056e+07        0.995117                0.995117       75.283569           100.0                0.0                1.0                  0.0             2.000000  -2.989579e+07                   0.0            200.000000  36.646667      -11.790833       0.0
3        3.007063e+07        3.007061e+07      3.007063e+07   37679.426453      37.641785      3.007061e+07        0.995117                0.995117       75.283569           100.0                0.0                1.0                  0.0             2.000000  -2.989573e+07                   0.0            200.000000  25.850952      -22.586548       0.0
4        3.007067e+07        3.007065e+07      3.007067e+07   37668.630737      37.641785      3.007065e+07        0.995117                0.995117       75.283569           100.0                0.0                1.0                  0.0             2.000000  -2.989568e+07                   0.0            200.000000  15.055237      -33.382263       0.0
5        3.007071e+07        3.007070e+07      3.007071e+07   37657.835022      37.641785      3.007070e+07        0.995117                0.995117       75.283569           100.0                0.0                1.0                  0.0             2.000000  -2.989563e+07                   0.0            200.000000   4.259521      -44.178092       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=38921/2048, buf_size=200.[0m
[01/09 16:27:35]  --------------------------------------------------------------------------------
[01/09 16:27:35]  Iteration: 42 (0 solution, 41 counterexamples)
[01/09 16:32:02]  Generator returned sat in 265.231528 secs.
[01/09 16:32:03]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:32:21]  Improved gap from 0.0 to 48.4375
[01/09 16:32:21]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 16:32:21]  Verifer returned sat in 18.088600 secs.
[01/09 16:32:21]  sf_get_cex returned in 18.162405 secs.
[01/09 16:32:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.007059e+07        3.007059e+07      3.007059e+07       0.995361       0.995117      3.007059e+07        0.995117                0.000000       98.865723           100.0                0.0                2.0                  0.0                  2.0  -2.989597e+07                   0.0                 200.0   0.278076        0.278076       1.0
1        3.007064e+07        3.007059e+07      3.007064e+07   49434.134521      49.432861      3.007059e+07        0.995117                0.995117       98.865723           100.0                0.0                1.0                  0.0                  1.0  -2.989592e+07                   0.0                 100.0  48.437500        0.000000       0.0
2        3.007069e+07        3.007064e+07      3.007069e+07   49482.293945      49.432861      3.007064e+07        0.995117                0.995117       98.865723           100.0                0.0                1.0                  0.0                  1.0  -2.989587e+07                   0.0                 100.0  48.437500       -0.995361       0.0
3        3.007074e+07        3.007069e+07      3.007074e+07   49482.293945      49.432861      3.007069e+07        0.995117                0.995117       98.865723           100.0                0.0                1.0                  0.0                  1.0  -2.989582e+07                   0.0                 100.0  48.437500        0.000000       0.0
4        3.007079e+07        3.007074e+07      3.007079e+07   49482.293945      49.432861      3.007074e+07        0.995117                0.995117       98.865723           100.0                0.0                2.0                  0.0                  1.0  -2.989577e+07                   0.0                 100.0  49.432861        0.000000       1.0
5        3.007084e+07        3.007079e+07      3.007084e+07   49483.289307      49.432861      3.007079e+07        0.995117                0.995117       98.865723           100.0                0.0                1.0                  0.0                  1.0  -2.989577e+07                   0.0                 100.0  48.437500      -50.567139       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=38921/2048, buf_size=200.[0m
[01/09 16:32:21]  --------------------------------------------------------------------------------
[01/09 16:32:21]  Iteration: 43 (0 solution, 42 counterexamples)
[01/09 16:32:43]  Generator returned sat in 20.283784 secs.
[01/09 16:32:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:32:45]  Improved gap from 48.4375 to 100
[01/09 16:32:45]  Improved number of small numbers from 109 to 109 out of a max of 134
[01/09 16:32:45]  Verifer returned sat in 1.794450 secs.
[01/09 16:32:45]  sf_get_cex returned in 1.852858 secs.
[01/09 16:32:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        2.997592e+07        2.997562e+07      2.997592e+07       0.995361       0.995117      2.997562e+07        0.000000                0.000000       50.000000      105.155556                0.0                1.0                  0.0             4.533333  -2.989592e+07              0.000000            476.705185  300.000000           200.0       0.0
1        2.997602e+07        2.997581e+07      2.997602e+07  100300.000000     100.000000      2.997581e+07        0.000000                0.000000       97.688889      105.155556                0.0                2.0                  0.0             4.533333  -2.989592e+07              0.000000            476.705185  204.622222           200.0       1.0
2        2.997614e+07        2.997582e+07      2.997614e+07  117360.177778     117.155556      2.997582e+07       17.155556                0.000000       97.688889      105.155556                1.0                3.0                  1.0             4.533333  -2.989592e+07             97.688889            476.705185  299.822222           200.0       2.0
3        2.997625e+07        2.997592e+07      2.997625e+07  117472.533333     117.155556      2.997592e+07       34.311111               17.155556       97.688889      104.622222                2.0                4.0                  2.0             4.000000  -2.989592e+07            195.377778            418.488889  300.000000           200.0       3.0
4        2.997637e+07        2.997612e+07      2.997637e+07  117489.866667     117.155556      2.997612e+07       51.466667               34.311111       99.288889      104.622222                1.0                3.0                  2.0             3.000000  -2.989592e+07            198.577778            313.866667  203.555556           200.0       2.0
5        2.997649e+07        2.997612e+07      2.997649e+07  119010.577778     118.755556      2.997612e+07       70.222222               51.466667       99.288889      101.718519                1.0                3.0                  2.0             3.000000  -2.989592e+07            198.577778            305.155556  299.466667           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=632/9, alpha=292/15, buf_size=200.[0m
[01/09 16:32:45]  --------------------------------------------------------------------------------
[01/09 16:32:45]  Iteration: 44 (0 solution, 43 counterexamples)
[01/09 16:34:53]  Generator returned sat in 125.800688 secs.
[01/09 16:34:53]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:34:57]  Improved gap from 6.964111328125 to 100
[01/09 16:34:58]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 16:34:58]  Verifer returned sat in 4.031506 secs.
[01/09 16:34:58]  sf_get_cex returned in 4.105632 secs.
[01/09 16:34:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.397585e+08        9.397583e+08      9.397585e+08       0.995117       0.994629      9.397583e+08        0.000000                0.000000       86.010254      286.010010                0.0                2.0                  0.0                  3.5  -9.396786e+08              0.000000           1001.035034  213.989502      128.974121       1.0
1        9.397587e+08        9.397585e+08      9.397587e+08  172234.497314     172.020508      9.397585e+08        0.994629                0.000000       86.010254      286.010010                1.0                3.0                  1.0                  3.5  -9.396786e+08             86.010254           1001.035034  214.984619      200.000000       2.0
2        9.397588e+08        9.397586e+08      9.397588e+08   67221.106201      67.005127      9.397586e+08        0.994629                0.994629       95.005127      285.015381                0.0                2.0                  1.0                  2.0  -9.396786e+08             95.005127            570.030762  167.005127      167.005127       1.0
3        9.397590e+08        9.397586e+08      9.397590e+08  190178.253662     190.010254      9.397586e+08       58.010010                0.994629       95.005127      285.015381                0.0                2.0                  1.0                  2.0  -9.396786e+08             95.005127            570.030762  300.000000      200.000000       1.0
4        9.397592e+08        9.397588e+08      9.397592e+08  190368.263916     190.010254      9.397588e+08      148.020264               58.010010      100.000000      285.015381                0.0                2.0                  1.0                  2.0  -9.396786e+08            100.000000            570.030762  200.000000      200.000000       1.0
5        9.397594e+08        9.397589e+08      9.397594e+08  200348.020264     200.000000      9.397589e+08      248.020264              148.020264      100.000000      285.015381                1.0                3.0                  1.0                  2.0  -9.396786e+08            100.000000            570.030762  214.984619      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=1011817/4096, alpha=77845/4096, buf_size=200.[0m
[01/09 16:34:58]  --------------------------------------------------------------------------------
[01/09 16:34:58]  Iteration: 45 (0 solution, 44 counterexamples)
[01/09 16:36:16]  Generator returned sat in 75.819438 secs.
[01/09 16:36:16]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1min_buffer_bytes + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:36:49]  Improved gap from 6.08 to 48.4375
[01/09 16:36:49]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 16:36:49]  Verifer returned sat in 33.002237 secs.
[01/09 16:36:49]  sf_get_cex returned in 33.083703 secs.
[01/09 16:36:49]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        9.397588e+08        9.397588e+08      9.397588e+08       0.994873       0.994629      9.397588e+08        0.994385                0.000000          96.875           100.0                1.0                3.0                  1.0                  2.0  -9.396790e+08                96.875                 200.0   0.0000             0.0       2.0
1        9.397589e+08        9.397588e+08      9.397589e+08   48438.494385      48.437500      9.397588e+08        0.994385                0.994385          96.875           100.0                1.0                3.0                  1.0                  2.0  -9.396790e+08                96.875                 200.0  48.4375             0.0       2.0
2        9.397589e+08        9.397589e+08      9.397589e+08   48486.931885      48.437500      9.397589e+08        0.994385                0.994385          96.875           100.0                0.0                2.0                  1.0                  2.0  -9.396789e+08                96.875                 200.0  48.4375             0.0       1.0
3        9.397590e+08        9.397589e+08      9.397590e+08   48486.931885      48.437500      9.397589e+08        0.994385                0.994385          96.875           100.0                0.0                2.0                  1.0                  2.0  -9.396789e+08                96.875                 200.0  48.4375             0.0       1.0
4        9.397590e+08        9.397590e+08      9.397590e+08   48486.931885      48.437500      9.397590e+08        0.994385                0.994385          96.875           100.0                0.0                2.0                  1.0                  2.0  -9.396788e+08                96.875                 200.0  48.4375             0.0       1.0
5        9.397591e+08        9.397590e+08      9.397591e+08   48486.931885      48.437500      9.397590e+08        0.994385                0.994385          96.875           100.0                0.0                2.0                  1.0                  2.0  -9.396788e+08                96.875                 200.0  48.4375             0.0       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4073/4096, buf_size=200.[0m
[01/09 16:36:49]  --------------------------------------------------------------------------------
[01/09 16:36:49]  Iteration: 46 (0 solution, 45 counterexamples)
[01/09 16:39:16]  Generator returned sat in 144.323689 secs.
[01/09 16:39:16]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:39:24]  Improved gap from 48.4375 to 48.4375
[01/09 16:39:26]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 16:39:26]  Verifer returned sat in 10.007618 secs.
[01/09 16:39:26]  sf_get_cex returned in 10.076971 secs.
[01/09 16:39:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.411569e+08        9.411569e+08      9.411569e+08       0.994629       0.994385      9.411569e+08             0.0                     0.0       49.432129           100.0                2.0                4.0                  2.0                  2.0  -9.410771e+08             98.864258                 200.0   4.260742        4.260498       3.0
1        9.411569e+08        9.411569e+08      9.411569e+08   48441.760742      48.437500      9.411569e+08             0.0                     0.0       49.432129           100.0                2.0                4.0                  2.0                  2.0  -9.410771e+08             98.864258                 200.0  51.703613        0.000000       3.0
2        9.411570e+08        9.411569e+08      9.411570e+08   48489.203613      48.437500      9.411569e+08             0.0                     0.0       49.432129           100.0                0.0                2.0                  2.0                  2.0  -9.410770e+08             98.864258                 200.0  48.437500        0.000000       1.0
3        9.411570e+08        9.411570e+08      9.411570e+08   48485.937500      48.437500      9.411570e+08             0.0                     0.0       49.432129           100.0                0.0                2.0                  2.0                  2.0  -9.410770e+08             98.864258                 200.0  48.437500        0.000000       1.0
4        9.411571e+08        9.411570e+08      9.411571e+08   48485.937500      48.437500      9.411570e+08             0.0                     0.0       49.432129           100.0                0.0                2.0                  2.0                  2.0  -9.410769e+08             98.864258                 200.0  48.437500       -0.000244       1.0
5        9.411571e+08        9.411571e+08      9.411571e+08   48485.937500      48.437500      9.411571e+08             0.0                     0.0       49.432129           100.0                0.0                1.0                  2.0                  2.0  -9.410769e+08             98.864258                 200.0  47.442871      -51.562500       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2037/2048, buf_size=200.[0m
[01/09 16:39:26]  --------------------------------------------------------------------------------
[01/09 16:39:26]  Iteration: 47 (0 solution, 46 counterexamples)
[01/09 16:47:16]  Generator returned sat in 467.525277 secs.
[01/09 16:47:16]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1min_buffer_bytes + 1max_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 16:47:27]  Improved gap from 15.400516795865633 to 48.4375
[01/09 16:47:27]  Improved number of small numbers from 119 to 119 out of a max of 134
[01/09 16:47:27]  Verifer returned sat in 11.217974 secs.
[01/09 16:47:27]  sf_get_cex returned in 11.292083 secs.
[01/09 16:47:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.411569e+08        9.411569e+08      9.411569e+08       0.994629       0.994385      9.411569e+08             0.0                     0.0       25.213068           100.0                0.0                1.0                  0.0                  3.5  -9.410771e+08                   0.0                 350.0   0.000000       -2.840909       0.0
1        9.411569e+08        9.411569e+08      9.411569e+08   50426.136364      50.426136      9.411569e+08             0.0                     0.0       25.213068           100.0                0.0                1.0                  0.0                  3.5  -9.410771e+08                   0.0                 350.0  47.585227       -0.852273       0.0
2        9.411570e+08        9.411569e+08      9.411570e+08   50473.721591      50.426136      9.411569e+08             0.0                     0.0       25.213068           100.0                0.0                1.0                  0.0                  3.5  -9.410770e+08                   0.0                 350.0  48.437500        0.000000       0.0
3        9.411570e+08        9.411570e+08      9.411570e+08   50474.573864      50.426136      9.411570e+08             0.0                     0.0       32.670455           100.0                0.0                2.0                  0.0                  3.5  -9.410770e+08                   0.0                 350.0  50.426136        0.000000       1.0
4        9.411571e+08        9.411570e+08      9.411571e+08   22049.715909      21.999290      9.411570e+08             0.0                     0.0       37.109375           100.0                0.0                2.0                  0.0                  3.5  -9.410769e+08                   0.0                 350.0  21.999290      -26.438210       1.0
5        9.411571e+08        9.411571e+08      9.411571e+08   26460.209517      26.438210      9.411571e+08             0.0                     0.0       39.375000           100.0                0.0                1.0                  0.0                  3.5  -9.410769e+08                   0.0                 350.0   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=15025/1408, buf_size=200.[0m
[01/09 16:47:27]  --------------------------------------------------------------------------------
[01/09 16:47:27]  Iteration: 48 (0 solution, 47 counterexamples)
[01/09 16:49:51]  Generator returned sat in 140.699809 secs.
[01/09 16:49:51]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:49:57]  Improved gap from 0.0 to 48.4375
[01/09 16:49:58]  Improved number of small numbers from 99 to 105 out of a max of 134
[01/09 16:49:58]  Verifer returned sat in 7.096698 secs.
[01/09 16:49:58]  sf_get_cex returned in 7.177777 secs.
[01/09 16:49:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.411573e+08        9.411573e+08      9.411573e+08       0.994385       0.994141      9.411573e+08        0.994141                0.000000        97.10571      283.317139                1.0                3.0                  1.0             2.993896  -9.410771e+08              97.10571            848.222185   0.994141        0.000016       2.0
1        9.411573e+08        9.411573e+08      9.411573e+08   48554.843220      48.552855      9.411573e+08        0.994141                0.994141        97.10571      283.317139                2.0                4.0                  2.0             2.993896  -9.410771e+08             194.21142            848.222185  48.552855       -0.230577       3.0
2        9.411574e+08        9.411573e+08      9.411574e+08   48602.401934      48.552855      9.411573e+08        0.994141                0.994141        97.10571      283.317139                0.0                1.0                  2.0             2.993896  -9.410770e+08             194.21142            848.222185  48.322145       -0.115355       0.0
3        9.411574e+08        9.411574e+08      9.411574e+08   48602.171224      48.552855      9.411574e+08        0.994141                0.994141        97.10571      283.317139                0.0                1.0                  2.0             2.993896  -9.410770e+08             194.21142            848.222185  48.437500        0.000000       0.0
4        9.411575e+08        9.411574e+08      9.411575e+08   48602.286579      48.552855      9.411574e+08        0.994141                0.994141        97.10571      283.317139                0.0                2.0                  2.0             2.993896  -9.410769e+08             194.21142            848.222185  48.552855       -0.000235       1.0
5        9.411575e+08        9.411575e+08      9.411575e+08   48602.401934      48.552855      9.411575e+08        0.994141                0.994141        97.10571      283.317139                0.0                1.0                  2.0             2.993896  -9.410769e+08             194.21142            848.222185  47.676646      -51.447380       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=77847/4096, buf_size=200.[0m
[01/09 16:49:58]  --------------------------------------------------------------------------------
[01/09 16:49:58]  Iteration: 49 (0 solution, 48 counterexamples)
[01/09 16:52:10]  Generator returned sat in 129.322520 secs.
[01/09 16:52:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:52:20]  Improved gap from 12.307692307692308 to 48.4375
[01/09 16:52:20]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 16:52:20]  Verifer returned sat in 9.986804 secs.
[01/09 16:52:20]  sf_get_cex returned in 10.060514 secs.
[01/09 16:52:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.420101e+08        9.420101e+08      9.420101e+08       0.994385       0.993896      9.420101e+08        0.994141                0.000000       98.863281      108.863281                0.0                2.0                  0.0                  2.0  -9.419299e+08                   0.0            217.726562   0.285156        0.285156       1.0
1        9.420102e+08        9.420101e+08      9.420102e+08   49432.919922      49.431641      9.420101e+08        0.994141                0.994141       98.863281      108.863281                0.0                1.0                  0.0                  1.0  -9.419299e+08                   0.0            108.863281  48.437500       -0.994141       0.0
2        9.420102e+08        9.420102e+08      9.420102e+08   49481.072266      49.431641      9.420102e+08        0.994141                0.994141       98.863281      108.863281                0.0                1.0                  0.0                  1.0  -9.419298e+08                   0.0            108.863281  48.437500       -0.000244       0.0
3        9.420103e+08        9.420102e+08      9.420103e+08   49481.072266      49.431641      9.420102e+08        0.994141                0.994141       98.863281      108.863281                0.0                1.0                  0.0                  1.0  -9.419298e+08                   0.0            108.863281  48.437500        0.000000       0.0
4        9.420103e+08        9.420103e+08      9.420103e+08   49481.072266      49.431641      9.420103e+08        0.994141                0.994141       98.863281      108.863281                0.0                2.0                  0.0                  1.0  -9.419297e+08                   0.0            108.863281  49.431641       -0.000244       1.0
5        9.420104e+08        9.420103e+08      9.420104e+08   49482.066406      49.431641      9.420103e+08        0.994141                0.994141       98.863281      108.863281                0.0                1.0                  0.0                  1.0  -9.419297e+08                   0.0            108.863281  48.437500      -50.568359       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=77847/4096, buf_size=200.[0m
[01/09 16:52:20]  --------------------------------------------------------------------------------
[01/09 16:52:20]  Iteration: 50 (0 solution, 49 counterexamples)
[01/09 16:57:50]  Generator returned sat in 327.789612 secs.
[01/09 16:57:51]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 16:58:00]  Improved gap from 0.0 to 48.4375
[01/09 16:58:01]  Improved number of small numbers from 104 to 106 out of a max of 134
[01/09 16:58:01]  Verifer returned sat in 10.150728 secs.
[01/09 16:58:01]  sf_get_cex returned in 10.227198 secs.
[01/09 16:58:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.419218e+08        9.419218e+08      9.419218e+08       0.994141       0.993896      9.419218e+08         0.00625                 0.00000        37.88125           100.0                0.0                1.0                  0.0             2.012451  -9.418417e+08                   0.0            201.245117  18.354688       18.348478       0.0
1        9.419219e+08        9.419218e+08      9.419219e+08   36344.923438      36.326563      9.419218e+08         0.00625                 0.00625        37.88125           100.0                0.0                2.0                  0.0             2.000000  -9.418416e+08                   0.0            200.000000  54.675000        0.000000       1.0
2        9.419219e+08        9.419219e+08      9.419219e+08   36381.243750      36.326563      9.419219e+08         0.00625                 0.00625        37.88125           100.0                0.0                2.0                  0.0             2.000000  -9.418416e+08                   0.0            200.000000  36.326563      -12.110938       1.0
3        9.419220e+08        9.419219e+08      9.419220e+08   36362.895312      36.326563      9.419219e+08         0.00625                 0.00625        37.88125           100.0                0.0                1.0                  0.0             2.000000  -9.418415e+08                   0.0            200.000000  24.215625      -24.221875       0.0
4        9.419220e+08        9.419220e+08      9.419220e+08   36350.784375      36.326563      9.419220e+08         0.00625                 0.00625        37.88750           100.0                0.0                1.0                  0.0             2.000000  -9.418415e+08                   0.0            200.000000  12.104688      -36.332813       0.0
5        9.419220e+08        9.419220e+08      9.419220e+08   36344.923438      36.332813      9.419220e+08         0.00625                 0.00625        39.99750           100.0                0.0                1.0                  0.0             2.000000  -9.418415e+08                   0.0            200.000000   0.000000      -99.999764       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=199/128, buf_size=200.[0m
[01/09 16:58:01]  --------------------------------------------------------------------------------
[01/09 16:58:01]  Iteration: 51 (0 solution, 50 counterexamples)
[01/09 16:58:20]  Generator returned sat in 16.367890 secs.
[01/09 16:58:20]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 16:58:22]  Improved gap from 0.02003606491685033 to 100
[01/09 16:58:22]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 16:58:22]  Verifer returned sat in 2.305406 secs.
[01/09 16:58:22]  sf_get_cex returned in 2.374060 secs.
[01/09 16:58:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.419215e+08        9.419212e+08      9.419215e+08       0.993896       0.993896      9.419212e+08        0.993896                0.000000       44.969482      104.969482                0.0                1.0                  0.0             2.993652  -9.418412e+08              0.000000            314.242137  290.060791      194.036377       0.0
1        9.419216e+08        9.419214e+08      9.419216e+08   90230.019531      89.938965      9.419214e+08        0.993896                0.993896       98.012207      104.969482                0.0                2.0                  0.0             2.000000  -9.418412e+08              0.000000            209.938965  183.975342      183.975342       1.0
2        9.419217e+08        9.419215e+08      9.419217e+08  117203.279785     117.018311      9.419215e+08        1.987549                0.993896       98.012207      104.969482                0.0                2.0                  0.0             2.000000  -9.418412e+08              0.000000            209.938965  204.969482      200.000000       1.0
3        9.419218e+08        9.419216e+08      9.419218e+08  117225.267578     117.018311      9.419216e+08       19.005859                1.987549       99.006104      104.969482                0.0                2.0                  0.0             2.000000  -9.418412e+08              0.000000            209.938965  200.000000      200.000000       1.0
4        9.419220e+08        9.419216e+08      9.419220e+08  118231.212891     118.012207      9.419216e+08       37.018066               19.005859       99.006104      104.969482                0.0                2.0                  0.0             2.000000  -9.418412e+08              0.000000            209.938965  300.000000      200.000000       1.0
5        9.419221e+08        9.419217e+08      9.419221e+08  118349.225098     118.012207      9.419217e+08       55.030273               37.018066       99.006104      104.969482                1.0                3.0                  1.0             2.000000  -9.418412e+08             99.006104            209.938965  295.030518      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=221333/4096, alpha=77849/4096, buf_size=200.[0m
[01/09 16:58:22]  --------------------------------------------------------------------------------
[01/09 16:58:22]  Iteration: 52 (0 solution, 51 counterexamples)
[01/09 17:08:23]  Generator returned sat in 597.754249 secs.
[01/09 17:08:23]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 17:08:25]  Improved gap from 0.0 to 100
[01/09 17:08:26]  Improved number of small numbers from 80 to 83 out of a max of 134
[01/09 17:08:26]  Verifer returned sat in 3.197572 secs.
[01/09 17:08:26]  sf_get_cex returned in 3.267103 secs.
[01/09 17:08:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.419216e+08        9.419213e+08      9.419216e+08       0.993896       0.993652      9.419213e+08        0.520752                0.000000       76.739319      167.037354                2.0                4.0                  2.0                  4.0  -9.418413e+08            153.478638            668.149414  255.347945      174.751607       3.0
1        9.419217e+08        9.419214e+08      9.419217e+08   76001.291060      75.745422      9.419214e+08        0.520752                0.520752       76.739319      167.037354                1.0                3.0                  2.0                  4.0  -9.418413e+08            153.478638            668.149414  236.819613      150.497030       2.0
2        9.419218e+08        9.419215e+08      9.419218e+08  153715.978060     153.478638      9.419215e+08        4.496419                0.520752       76.739319      167.037354                1.0                3.0                  2.0                  4.0  -9.418413e+08            153.478638            668.149414  300.000000      200.000000       2.0
3        9.419220e+08        9.419217e+08      9.419220e+08  153783.134115     153.478638      9.419217e+08       57.975057                4.496419       83.021796      166.043591                0.0                2.0                  2.0                  2.0  -9.418413e+08            166.043591            332.087183  248.509155      200.000000       1.0
4        9.419221e+08        9.419218e+08      9.419221e+08  166350.075521     166.043591      9.419218e+08      124.018648               57.975057       90.298169      150.496948                1.0                3.0                  2.0                  2.0  -9.418413e+08            180.596338            300.993896  229.105493      200.000000       2.0
5        9.419223e+08        9.419218e+08      9.419223e+08  180949.462032     180.596338      9.419218e+08      204.614986              124.018648       90.298169      120.397559                1.0                3.0                  2.0                  2.0  -9.418413e+08            180.596338            240.795117  299.006104      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=50158199/245760, alpha=4071/4096, buf_size=200.[0m
[01/09 17:08:26]  --------------------------------------------------------------------------------
[01/09 17:08:26]  Iteration: 53 (0 solution, 52 counterexamples)
[01/09 17:10:59]  Generator returned sat in 150.199163 secs.
[01/09 17:10:59]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 17:11:17]  Improved gap from 7.94921875 to 48.4375
[01/09 17:11:17]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 17:11:17]  Verifer returned sat in 17.561517 secs.
[01/09 17:11:17]  sf_get_cex returned in 17.635585 secs.
[01/09 17:11:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.419757e+08        9.419757e+08      9.419757e+08       0.993652       0.993408      9.419757e+08        0.993652                0.000000          96.875           100.0                0.0                2.0                  0.0             2.993408  -9.418413e+08                   0.0             299.34082   4.262695        3.269043       1.0
1        9.419757e+08        9.419757e+08      9.419757e+08   48442.756348      48.437500      9.419757e+08        0.993652                0.993652          96.875           100.0                0.0                2.0                  0.0             2.000000  -9.418412e+08                   0.0             200.00000  51.706543        0.000000       1.0
2        9.419758e+08        9.419757e+08      9.419758e+08   48490.200195      48.437500      9.419757e+08        0.993652                0.993652          96.875           100.0                0.0                2.0                  0.0             2.000000  -9.418412e+08                   0.0             200.00000  48.437500        0.000000       1.0
3        9.419758e+08        9.419758e+08      9.419758e+08   48486.931152      48.437500      9.419758e+08        0.993652                0.993652          96.875           100.0                0.0                2.0                  0.0             2.000000  -9.418411e+08                   0.0             200.00000  48.437500        0.000000       1.0
4        9.419759e+08        9.419758e+08      9.419759e+08   48486.931152      48.437500      9.419758e+08        0.993652                0.993652          96.875           100.0                0.0                2.0                  0.0             2.000000  -9.418411e+08                   0.0             200.00000  48.437500        0.000000       1.0
5        9.419759e+08        9.419759e+08      9.419759e+08   48486.931152      48.437500      9.419759e+08        0.993652                0.993652          96.875           100.0                0.0                1.0                  0.0             2.000000  -9.418411e+08                   0.0             200.00000  47.444092      -51.562256       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4069/4096, buf_size=200.[0m
[01/09 17:11:17]  --------------------------------------------------------------------------------
[01/09 17:11:17]  Iteration: 54 (0 solution, 53 counterexamples)
[01/09 17:13:35]  Generator returned sat in 135.282235 secs.
[01/09 17:13:35]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer_bytes + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 17:13:41]  Improved gap from 5.428571428571429 to 100
[01/09 17:13:41]  Improved number of small numbers from 103 to 103 out of a max of 134
[01/09 17:13:41]  Verifer returned sat in 5.742720 secs.
[01/09 17:13:41]  sf_get_cex returned in 5.817870 secs.
[01/09 17:13:41]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.420618e+08        9.420616e+08      9.420618e+08       0.993652       0.993408      9.420616e+08        0.000000                0.000000       81.000000           100.0                1.0                3.0                  1.0                  5.0  -9.419273e+08             81.000000                 500.0  199.666667      199.666667       2.0
1        9.420619e+08        9.420616e+08      9.420619e+08  100866.333333     100.666667      9.420616e+08        0.333333                0.000000       81.000000           100.0                2.0                4.0                  2.0                  5.0  -9.419273e+08            162.000000                 500.0  264.000000      200.000000       3.0
2        9.420620e+08        9.420618e+08      9.420620e+08  100931.000000     100.666667      9.420618e+08        1.000000                0.333333       81.666667           100.0                2.0                4.0                  2.0                  5.0  -9.419273e+08            163.333333                 500.0  200.666667      200.000000       3.0
3        9.420621e+08        9.420618e+08      9.420621e+08  101535.000000     101.333333      9.420618e+08        2.333333                1.000000       81.666667           100.0                1.0                3.0                  2.0                  3.0  -9.419273e+08            163.333333                 300.0  300.000000      200.000000       2.0
4        9.420622e+08        9.420620e+08      9.420622e+08  101635.666667     101.333333      9.420620e+08        3.666667                2.333333       99.833333           100.0                1.0                3.0                  2.0                  3.0  -9.419273e+08            199.666667                 300.0  200.333333      200.000000       2.0
5        9.420623e+08        9.420620e+08      9.420623e+08  119704.000000     119.500000      9.420620e+08       23.166667                3.666667       99.833333           100.0                2.0                4.0                  2.0                  3.0  -9.419273e+08            199.666667                 300.0  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=137/6, alpha=59/3, buf_size=200.[0m
[01/09 17:13:41]  --------------------------------------------------------------------------------
[01/09 17:13:41]  Iteration: 55 (0 solution, 54 counterexamples)
[01/09 17:17:38]  Generator returned sat in 234.219883 secs.
[01/09 17:17:39]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1min_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 17:17:48]  Improved gap from 19.35483870967742 to 48.4375
[01/09 17:17:48]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 17:17:48]  Verifer returned sat in 9.200766 secs.
[01/09 17:17:48]  sf_get_cex returned in 9.273635 secs.
[01/09 17:17:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.420616e+08        9.420616e+08      9.420616e+08       0.993164        0.99292      9.420616e+08             0.0                     0.0            39.0           100.0                0.0                1.0                  0.0             2.694336  -9.419273e+08                   0.0            269.433594  23.930420       23.930176       0.0
1        9.420616e+08        9.420616e+08      9.420616e+08   19773.930420       19.75000      9.420616e+08             0.0                     0.0            39.0           100.0                0.0                2.0                  0.0             2.694336  -9.419273e+08                   0.0            269.433594  38.125000      -10.312500       1.0
2        9.420617e+08        9.420616e+08      9.420617e+08   58788.125000       58.75000      9.420616e+08             0.0                     0.0            39.0           100.0                0.0                1.0                  0.0             2.694336  -9.419272e+08                   0.0            269.433594  48.437500        0.000000       0.0
3        9.420617e+08        9.420617e+08      9.420617e+08   19798.437500       19.75000      9.420617e+08             0.0                     0.0            39.0           100.0                0.0                2.0                  0.0             2.694336  -9.419272e+08                   0.0            269.433594  19.750000      -28.687500       1.0
4        9.420618e+08        9.420617e+08      9.420618e+08   58769.750000       58.75000      9.420617e+08             0.0                     0.0            39.0           100.0                0.0                1.0                  0.0             2.694336  -9.419271e+08                   0.0            269.433594  30.062500      -18.375244       0.0
5        9.420618e+08        9.420618e+08      9.420618e+08   19780.062500       19.75000      9.420618e+08             0.0                     0.0            39.0           100.0                0.0                1.0                  0.0             2.694336  -9.419271e+08                   0.0            269.433594   1.374756      -98.625244       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=79/4, buf_size=200.[0m
[01/09 17:17:48]  --------------------------------------------------------------------------------
[01/09 17:17:48]  Iteration: 56 (0 solution, 55 counterexamples)
[01/09 17:24:11]  Generator returned sat in 380.135207 secs.
[01/09 17:24:11]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 17:24:22]  Improved gap from 0.0 to 48.4375
[01/09 17:24:22]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 17:24:22]  Verifer returned sat in 11.272873 secs.
[01/09 17:24:22]  sf_get_cex returned in 11.343826 secs.
[01/09 17:24:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.420001e+08        9.420001e+08      9.420001e+08       0.992920       0.992676      9.420001e+08             0.0                     0.0        50.42334           100.0                0.0                2.0                  0.0                  3.0  -9.418658e+08               0.00000                 300.0  27.489746       27.489746       1.0
1        9.420002e+08        9.420001e+08      9.420002e+08   25239.159668      25.211670      9.420001e+08             0.0                     0.0        50.42334           100.0                1.0                3.0                  1.0                  3.0  -9.418658e+08              50.42334                 300.0  48.437256       -0.000244       2.0
2        9.420002e+08        9.420002e+08      9.420002e+08   49478.857178      49.430420      9.420002e+08             0.0                     0.0        50.42334           100.0                0.0                1.0                  1.0                  3.0  -9.418657e+08              50.42334                 300.0  48.437500        0.000000       0.0
3        9.420002e+08        9.420002e+08      9.420002e+08   25260.107422      25.211670      9.420002e+08             0.0                     0.0        50.42334           100.0                0.0                2.0                  1.0                  3.0  -9.418657e+08              50.42334                 300.0  25.211670      -23.225830       1.0
4        9.420003e+08        9.420003e+08      9.420003e+08   49455.631592      49.430420      9.420003e+08             0.0                     0.0        50.42334           100.0                0.0                1.0                  1.0                  3.0  -9.418656e+08              50.42334                 300.0  26.204590      -22.233154       0.0
5        9.420003e+08        9.420003e+08      9.420003e+08   25237.874512      25.211670      9.420003e+08             0.0                     0.0        50.42334           100.0                0.0                1.0                  1.0                  3.0  -9.418656e+08              50.42334                 300.0   2.978516      -45.458984       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4067/4096, buf_size=200.[0m
[01/09 17:24:23]  --------------------------------------------------------------------------------
[01/09 17:24:23]  Iteration: 57 (0 solution, 56 counterexamples)
[01/09 17:34:59]  Generator returned sat in 633.900930 secs.
[01/09 17:35:00]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 17:35:03]  Improved gap from 12.857142857142858 to 48.4375
[01/09 17:35:03]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/09 17:35:03]  Verifer returned sat in 3.241240 secs.
[01/09 17:35:03]  sf_get_cex returned in 3.318933 secs.
[01/09 17:35:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.420001e+08        9.420001e+08      9.420001e+08       0.992920       0.992676      9.420001e+08        0.992676                0.000000       49.430176           100.0                0.0                2.0                  0.0                  3.0  -9.418658e+08                   0.0                 300.0   0.992676        0.992676       1.0
1        9.420002e+08        9.420001e+08      9.420002e+08   48439.485352      48.437500      9.420001e+08        0.992676                0.992676       49.430176           100.0                0.0                2.0                  0.0                  2.0  -9.418658e+08                   0.0                 200.0  48.437500        0.000000       1.0
2        9.420002e+08        9.420002e+08      9.420002e+08   48486.930176      48.437500      9.420002e+08        0.992676                0.992676       49.430176           100.0                0.0                2.0                  0.0                  2.0  -9.418657e+08                   0.0                 200.0  48.437500       -0.992676       1.0
3        9.420003e+08        9.420002e+08      9.420003e+08   48486.930176      48.437500      9.420002e+08        0.992676                0.992676       49.430176           100.0                0.0                1.0                  0.0                  2.0  -9.418657e+08                   0.0                 200.0  47.444824       -0.992676       0.0
4        9.420003e+08        9.420003e+08      9.420003e+08   24763.525391      24.715088      9.420003e+08        0.992676                0.992676       49.430176           100.0                0.0                1.0                  0.0                  2.0  -9.418656e+08                   0.0                 200.0  23.722412      -24.715088       0.0
5        9.420003e+08        9.420003e+08      9.420003e+08   24739.802979      24.715088      9.420003e+08        0.992676                0.992676       49.430176           100.0                0.0                1.0                  0.0                  2.0  -9.418656e+08                   0.0                 200.0   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2033/2048, buf_size=200.[0m
[01/09 17:35:03]  --------------------------------------------------------------------------------
[01/09 17:35:03]  Iteration: 58 (0 solution, 57 counterexamples)
[01/09 17:37:10]  Generator returned sat in 124.102628 secs.
[01/09 17:37:10]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_c + -1min_buffer_bytes + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 17:37:34]  Improved gap from 0.0099601593625498 to 48.4375
[01/09 17:37:34]  Improved number of small numbers from 105 to 106 out of a max of 134
[01/09 17:37:34]  Verifer returned sat in 23.628706 secs.
[01/09 17:37:34]  sf_get_cex returned in 23.708172 secs.
[01/09 17:37:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.419637e+08        9.419637e+08      9.419637e+08       0.992432       0.992432      9.419637e+08             0.0                     0.0       24.308894           100.0                0.0                1.0                  0.0                  2.0  -9.418658e+08                   0.0                 200.0   0.000000       -0.000207       0.0
1        9.419638e+08        9.419637e+08      9.419638e+08   48617.788462      48.617788      9.419637e+08             0.0                     0.0       24.308894           100.0                0.0                1.0                  0.0                  2.0  -9.418658e+08                   0.0                 200.0  48.257212       -0.180288       0.0
2        9.419638e+08        9.419638e+08      9.419638e+08   48666.045673      48.617788      9.419638e+08             0.0                     0.0       24.308894           100.0                0.0                1.0                  0.0                  2.0  -9.418657e+08                   0.0                 200.0  48.437500        0.000000       0.0
3        9.419639e+08        9.419638e+08      9.419639e+08   48666.225962      48.617788      9.419638e+08             0.0                     0.0       32.291667           100.0                0.0                2.0                  0.0                  2.0  -9.418657e+08                   0.0                 200.0  48.617788        0.000000       1.0
4        9.419639e+08        9.419639e+08      9.419639e+08   32280.188301      32.231571      9.419639e+08             0.0                     0.0       36.373197           100.0                0.0                2.0                  0.0                  2.0  -9.418656e+08                   0.0                 200.0  32.231571      -21.854968       1.0
5        9.419640e+08        9.419639e+08      9.419640e+08   36345.332532      36.313101      9.419639e+08             0.0                     0.0       39.915865           100.0                0.0                1.0                  0.0                  2.0  -9.418656e+08                   0.0                 200.0  14.458133      -33.979611       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=25/416, buf_size=200.[0m
[01/09 17:37:34]  --------------------------------------------------------------------------------
[01/09 17:37:34]  Iteration: 59 (0 solution, 58 counterexamples)
[01/09 17:40:06]  Generator returned sat in 149.106758 secs.
[01/09 17:40:07]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 17:40:11]  Improved gap from 0.0 to 100
[01/09 17:40:12]  Improved number of small numbers from 80 to 80 out of a max of 134
[01/09 17:40:12]  Verifer returned sat in 5.422343 secs.
[01/09 17:40:12]  sf_get_cex returned in 5.496475 secs.
[01/09 17:40:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.417110e+08        9.417107e+08      9.417110e+08       0.992432       0.992432      9.417107e+08        0.992432                0.000000       37.022705      100.992432                2.0                4.0                  2.0             2.992432  -9.416129e+08             74.045410            302.212948  282.481079      199.007568       3.0
1        9.417110e+08        9.417109e+08      9.417110e+08   18794.826050      18.511353      9.417109e+08        0.992432                0.992432       91.736755      100.992432                0.0                2.0                  2.0             2.000000  -9.416129e+08            183.473511            201.984863  117.518921      117.518921       1.0
2        9.417112e+08        9.417110e+08      9.417112e+08  183592.022095     183.473511      9.417110e+08        1.984863                0.992432       94.491170      100.992432                0.0                2.0                  2.0             2.000000  -9.416129e+08            188.982340            201.984863  200.000000      200.000000       1.0
3        9.417114e+08        9.417111e+08      9.417114e+08  189184.325358     188.982340      9.417111e+08       90.967204                1.984863       95.868378      100.992432                0.0                2.0                  2.0             2.000000  -9.416129e+08            191.736755            201.984863  200.000000      200.000000       1.0
4        9.417116e+08        9.417111e+08      9.417116e+08  192027.722575     191.736755      9.417111e+08      182.703959               90.967204       95.868378      100.000000                0.0                2.0                  2.0             2.000000  -9.416129e+08            191.736755            200.000000  300.000000      200.000000       1.0
5        9.417118e+08        9.417113e+08      9.417118e+08  192219.459330     191.736755      9.417113e+08      274.440715              182.703959      100.000000      100.000000                1.0                3.0                  2.0             2.000000  -9.416129e+08            200.000000            200.000000  200.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=6720265/24576, alpha=151645/8192, buf_size=200.[0m
[01/09 17:40:12]  --------------------------------------------------------------------------------
[01/09 17:40:12]  Iteration: 60 (0 solution, 59 counterexamples)
[01/09 17:48:46]  Generator returned sat in 511.039071 secs.
[01/09 17:48:46]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + -1min_buffer_bytes + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 17:49:01]  Improved gap from 18.01513671875 to 48.4375
[01/09 17:49:01]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 17:49:01]  Verifer returned sat in 14.295321 secs.
[01/09 17:49:01]  sf_get_cex returned in 14.379917 secs.
[01/09 17:49:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.424425e+08        9.424425e+08      9.424425e+08       0.992188       0.992432      9.424425e+08             0.0                     0.0       37.757324           100.0                0.0                1.0                  0.0                  2.0  -9.423446e+08                   0.0                 200.0   9.924316        9.924316       0.0
1        9.424426e+08        9.424425e+08      9.424426e+08   36775.061035      36.765137      9.424425e+08             0.0                     0.0       37.757324           100.0                0.0                1.0                  0.0                  2.0  -9.423446e+08                   0.0                 200.0  46.689453       -1.748047       0.0
2        9.424426e+08        9.424426e+08      9.424426e+08   36811.826172      36.765137      9.424426e+08             0.0                     0.0       37.757324           100.0                0.0                1.0                  0.0                  2.0  -9.423445e+08                   0.0                 200.0  35.017090      -13.420410       0.0
3        9.424426e+08        9.424426e+08      9.424426e+08   36800.153809      36.765137      9.424426e+08             0.0                     0.0       37.757324           100.0                0.0                1.0                  0.0                  2.0  -9.423445e+08                   0.0                 200.0  23.344727      -25.092773       0.0
4        9.424427e+08        9.424427e+08      9.424427e+08   36788.481445      36.765137      9.424427e+08             0.0                     0.0       37.757324           100.0                0.0                1.0                  0.0                  2.0  -9.423444e+08                   0.0                 200.0  11.672363      -36.765137       0.0
5        9.424427e+08        9.424427e+08      9.424427e+08   36776.809082      36.765137      9.424427e+08             0.0                     0.0       38.750000           100.0                0.0                1.0                  0.0                  2.0  -9.423444e+08                   0.0                 200.0   0.000000      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=127/128, buf_size=200.[0m
[01/09 17:49:01]  --------------------------------------------------------------------------------
[01/09 17:49:01]  Iteration: 61 (0 solution, 60 counterexamples)
[01/09 17:51:17]  Generator returned sat in 133.306914 secs.
[01/09 17:51:18]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_c + 1min_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 17:51:30]  Improved gap from 42.721435546875 to 48.4375
[01/09 17:51:31]  Improved number of small numbers from 100 to 104 out of a max of 134
[01/09 17:51:31]  Verifer returned sat in 13.271666 secs.
[01/09 17:51:31]  sf_get_cex returned in 13.334191 secs.
[01/09 17:51:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.424131e+08        9.424131e+08      9.424131e+08       0.992188       0.992432      9.424131e+08             0.0                     0.0       30.497685           100.0                0.0                1.0                  0.0                  2.0  -9.423462e+08                   0.0                 200.0   0.000000       -0.489060       0.0
1        9.424131e+08        9.424131e+08      9.424131e+08   49089.856902      49.089857      9.424131e+08             0.0                     0.0       30.497685           100.0                0.0                1.0                  0.0                  2.0  -9.423462e+08                   0.0                 200.0  48.600589       -1.304477       0.0
2        9.424132e+08        9.424131e+08      9.424132e+08   49138.457492      49.089857      9.424131e+08             0.0                     0.0       30.497685           100.0                0.0                1.0                  0.0                  2.0  -9.423461e+08                   0.0                 200.0  47.785143       -0.652357       0.0
3        9.424132e+08        9.424132e+08      9.424132e+08   49137.642045      49.089857      9.424132e+08             0.0                     0.0       32.780934           100.0                0.0                1.0                  0.0                  2.0  -9.423461e+08                   0.0                 200.0  48.437500        0.000000       0.0
4        9.424133e+08        9.424132e+08      9.424133e+08   51421.543561      51.373106      9.424132e+08             0.0                     0.0       36.695076           100.0                0.0                2.0                  0.0                  2.0  -9.423460e+08                   0.0                 200.0  51.373106       -0.000192       1.0
5        9.424133e+08        9.424133e+08      9.424133e+08   18643.544823      18.592172      9.424133e+08             0.0                     0.0       39.728535           100.0                0.0                1.0                  0.0                  2.0  -9.423460e+08                   0.0                 200.0  18.102904      -81.408020       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=14725/792, buf_size=200.[0m
[01/09 17:51:31]  --------------------------------------------------------------------------------
[01/09 17:51:31]  Iteration: 62 (0 solution, 61 counterexamples)
[01/09 17:57:21]  Generator returned sat in 346.457834 secs.
[01/09 17:57:21]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1min_buffer_bytes + -1max_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 17:57:28]  Improved gap from 0.0 to 100
[01/09 17:57:29]  Improved number of small numbers from 72 to 75 out of a max of 134
[01/09 17:57:29]  Verifer returned sat in 8.299460 secs.
[01/09 17:57:29]  sf_get_cex returned in 8.373095 secs.
[01/09 17:57:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.424129e+08        9.424126e+08      9.424129e+08       0.992188       0.992432      9.424126e+08        0.004998                0.000000       99.980030      200.055176                0.0                2.0                  0.0                  2.0  -9.423458e+08                   0.0            400.110352  299.980010       199.98001       1.0
1        9.424130e+08        9.424128e+08      9.424130e+08  120279.975171     119.979990      9.424128e+08       19.964998                0.004998       99.980030      200.055176                0.0                2.0                  0.0                  2.0  -9.423458e+08                   0.0            400.110352  200.049935       200.00000       1.0
2        9.424131e+08        9.424129e+08      9.424131e+08  120200.005097     119.979990      9.424129e+08       39.944988               19.964998       99.995002      200.055176                0.0                2.0                  0.0                  2.0  -9.423458e+08                   0.0            400.110352  200.014993       200.00000       1.0
3        9.424132e+08        9.424130e+08      9.424132e+08  120234.922816     119.994963      9.424130e+08       59.939951               39.944988      100.000000      200.000000                1.0                3.0                  1.0                  2.0  -9.423458e+08                 100.0            400.000000  200.000000       200.00000       2.0
4        9.424133e+08        9.424131e+08      9.424133e+08  120259.900288     119.999960      9.424131e+08       79.939911               59.939951      100.000000      149.987506                1.0                3.0                  1.0                  2.0  -9.423458e+08                 100.0            299.975012  200.074923       200.00000       2.0
5        9.424135e+08        9.424132e+08      9.424135e+08  120279.975171     119.999960      9.424132e+08       99.939871               79.939911      100.000000      133.333320                1.0                3.0                  1.0                  2.0  -9.423458e+08                 100.0            266.666640  200.049975       200.00000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=2880535/36018, alpha=2521255/126063, buf_size=200.[0m
[01/09 17:57:29]  --------------------------------------------------------------------------------
[01/09 17:57:29]  Iteration: 63 (0 solution, 62 counterexamples)
[01/09 18:00:31]  Generator returned sat in 178.681526 secs.
[01/09 18:00:32]  Candidate solution: 
[1m[94mif (+ -1max_c + 1min_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 18:00:44]  Improved gap from 0.0 to 100
[01/09 18:00:45]  Improved number of small numbers from 103 to 103 out of a max of 134
[01/09 18:00:45]  Verifer returned sat in 13.086076 secs.
[01/09 18:00:45]  sf_get_cex returned in 13.171510 secs.
[01/09 18:00:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.424129e+08        9.424126e+08      9.424129e+08       0.992188       0.992432      9.424126e+08        0.000000                0.000000       50.507502      200.646955                1.0                3.0                  1.0                  4.0  -9.423459e+08             50.507502             802.58782  299.426302      199.955869       2.0
1        9.424130e+08        9.424128e+08      9.424130e+08  101314.430715     101.015004      9.424128e+08        0.970874                0.000000       99.522065      200.646955                2.0                4.0                  2.0                  4.0  -9.423459e+08            199.044131             802.58782  200.426302      200.000000       3.0
2        9.424131e+08        9.424129e+08      9.424131e+08   99583.568402      99.382171      9.424129e+08        0.970874                0.970874       99.823477      200.646955                0.0                2.0                  2.0                  2.0  -9.423459e+08            199.646955             401.29391  199.382171      199.382171       1.0
3        9.424133e+08        9.424129e+08      9.424133e+08  199847.308032     199.646955      9.424129e+08      100.000000                0.970874       99.823477      200.646955                0.0                2.0                  2.0                  2.0  -9.423459e+08            199.646955             401.29391  300.000000      200.000000       1.0
4        9.424135e+08        9.424131e+08      9.424135e+08  200046.954987     199.646955      9.424131e+08      199.646955              100.000000       99.823477      200.646955                0.0                2.0                  2.0                  2.0  -9.423459e+08            199.646955             401.29391  200.573698      200.000000       1.0
5        9.424137e+08        9.424131e+08      9.424137e+08  200047.175640     199.646955      9.424131e+08      299.293910              199.646955       99.823477      200.000000                1.0                3.0                  2.0                  2.0  -9.423459e+08            199.646955             400.00000  300.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=338000/1133, alpha=317/2266, buf_size=200.[0m
[01/09 18:00:45]  --------------------------------------------------------------------------------
[01/09 18:00:45]  Iteration: 64 (0 solution, 63 counterexamples)
[01/09 19:00:07]  Generator returned sat in 3558.365239 secs.
[01/09 19:00:07]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 19:00:08]  Improved gap from 13.846153846153847 to 100
[01/09 19:00:09]  Improved number of small numbers from 82 to 82 out of a max of 134
[01/09 19:00:09]  Verifer returned sat in 2.379387 secs.
[01/09 19:00:09]  sf_get_cex returned in 2.457626 secs.
[01/09 19:00:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.424130e+08        9.424127e+08      9.424130e+08       0.991943       0.992432      9.424127e+08        0.000000                0.000000       58.657078      163.157895                1.0                3.0                  1.0                  5.0  -9.423459e+08             58.657078            815.789474  289.473684           200.0       2.0
1        9.424131e+08        9.424129e+08      9.424131e+08  117603.629946     117.314156      9.424129e+08       17.314156                0.000000       81.052632      163.157895                2.0                4.0                  2.0                  5.0  -9.423459e+08            162.105263            815.789474  227.368421           200.0       3.0
2        9.424132e+08        9.424129e+08      9.424132e+08  100770.998367     100.526316      9.424129e+08       17.840472               17.314156       81.052632      163.157895                2.0                4.0                  2.0                  5.0  -9.423459e+08            162.105263            815.789474  263.157895           200.0       3.0
3        9.424133e+08        9.424131e+08      9.424133e+08  100807.314156     100.526316      9.424131e+08       18.366788               17.840472       97.368421      163.157895                1.0                3.0                  2.0                  3.0  -9.423459e+08            194.736842            489.473684  200.000000           200.0       2.0
4        9.424134e+08        9.424132e+08      9.424134e+08  117060.472051     116.842105      9.424132e+08       35.208893               18.366788       97.894737      163.157895                1.0                3.0                  2.0                  3.0  -9.423459e+08            195.789474            489.473684  200.000000           200.0       2.0
5        9.424136e+08        9.424133e+08      9.424136e+08  117603.629946     117.368421      9.424133e+08       52.577314               35.208893       97.894737      130.175439                1.0                3.0                  2.0                  3.0  -9.423459e+08            195.789474            390.526316  236.842105           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=670/19, alpha=370/19, buf_size=200.[0m
[01/09 19:00:09]  --------------------------------------------------------------------------------
[01/09 19:00:09]  Iteration: 65 (0 solution, 64 counterexamples)
[01/09 19:01:42]  Generator returned sat in 89.055027 secs.
[01/09 19:01:42]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 19:01:43]  Improved number of small numbers from 123 to 130 out of a max of 133
[01/09 19:01:43]  Verifer returned sat in 0.810259 secs.
[01/09 19:01:43]  sf_get_cex returned in 0.885030 secs.
[01/09 19:01:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.424130e+08        9.424128e+08      9.424130e+08       0.991699       0.992188      9.424128e+08        0.991699                0.000000       94.986165      100.991455                0.0                1.0                  0.0             2.991455  -9.423459e+08              0.000000            302.111401  186.997233      186.997233       0.0
1        9.424131e+08        9.424128e+08      9.424131e+08  114182.455078     113.994466      9.424128e+08        1.983398                0.991699       94.986165      100.991455                0.0                1.0                  0.0             1.000000  -9.423459e+08              0.000000            100.991455  300.000000      200.000000       0.0
2        9.424133e+08        9.424130e+08      9.424133e+08  190274.314128     189.972331      9.424130e+08       91.955729                1.983398       94.986165      100.991455                0.0                2.0                  0.0             1.000000  -9.423459e+08              0.000000            100.991455  212.011068      200.000000       1.0
3        9.424135e+08        9.424131e+08      9.424135e+08  190276.297526     189.972331      9.424131e+08      181.928060               91.955729       95.977865      100.991455                1.0                3.0                  1.0             1.000000  -9.423459e+08             95.977865            100.991455  212.066406      200.000000       2.0
4        9.424137e+08        9.424131e+08      9.424137e+08  192349.723633     191.955729      9.424131e+08      273.883789              181.928060       95.977865      100.991455                1.0                3.0                  1.0             1.000000  -9.423459e+08             95.977865            100.991455  294.049805      200.000000       2.0
5        9.424139e+08        9.424132e+08      9.424139e+08  192523.662760     191.955729      9.424132e+08      365.839518              273.883789       95.977865      100.000000                2.0                4.0                  2.0             1.000000  -9.423459e+08            191.955729            100.000000  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=558883/1536, alpha=38929/2048, buf_size=200.[0m
[01/09 19:01:43]  --------------------------------------------------------------------------------
[01/09 19:01:43]  Iteration: 66 (0 solution, 65 counterexamples)
[01/09 19:10:47]  Generator returned sat in 540.414097 secs.
[01/09 19:10:47]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 19:10:51]  Improved gap from 0.7862960085182308 to 100
[01/09 19:10:51]  Improved number of small numbers from 111 to 111 out of a max of 134
[01/09 19:10:51]  Verifer returned sat in 3.946688 secs.
[01/09 19:10:51]  sf_get_cex returned in 4.026582 secs.
[01/09 19:10:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.425891e+08        9.425888e+08      9.425891e+08       0.991699       0.992188      9.425888e+08        0.000000                0.000000       50.461538      150.810811                0.0                2.0                  0.0                  6.0  -9.423459e+08              0.000000            904.864865  300.000000      200.000000       1.0
1        9.425892e+08        9.425890e+08      9.425892e+08  101223.076923     100.923077      9.425890e+08        0.923077                0.000000       74.594595      150.810811                1.0                3.0                  1.0                  6.0  -9.423459e+08             74.594595            904.864865  250.810811      200.000000       2.0
2        9.425893e+08        9.425891e+08      9.425893e+08   94035.517672      93.783784      9.425891e+08        0.923077                0.923077       98.108108      150.810811                2.0                4.0                  2.0                  6.0  -9.423459e+08            196.216216            904.864865  199.459459      193.783784       3.0
3        9.425894e+08        9.425891e+08      9.425894e+08  117497.679834     117.297297      9.425891e+08       12.004158                0.923077       98.108108      150.000000                2.0                4.0                  2.0                  6.0  -9.423459e+08            196.216216            900.000000  300.000000      200.000000       3.0
4        9.425895e+08        9.425893e+08      9.425895e+08  117609.301455     117.297297      9.425893e+08       29.301455               12.004158       98.918919      150.000000                0.0                2.0                  2.0                  2.0  -9.423459e+08            197.837838            300.000000  205.405405      200.000000       1.0
5        9.425897e+08        9.425893e+08      9.425897e+08  118342.814969     118.108108      9.425893e+08       47.409563               29.301455       98.918919      102.837838                1.0                3.0                  2.0                  2.0  -9.423459e+08            197.837838            205.675676  300.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=1720/37, alpha=710/37, buf_size=200.[0m
[01/09 19:10:51]  --------------------------------------------------------------------------------
[01/09 19:10:51]  Iteration: 67 (0 solution, 66 counterexamples)
[01/09 19:22:09]  Generator returned sat in 674.546071 secs.
[01/09 19:22:10]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 19:22:19]  Improved gap from 0.991455078125 to 100
[01/09 19:22:20]  Improved number of small numbers from 74 to 80 out of a max of 134
[01/09 19:22:20]  Verifer returned sat in 10.581452 secs.
[01/09 19:22:20]  sf_get_cex returned in 10.645875 secs.
[01/09 19:22:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.425891e+08        9.425889e+08      9.425891e+08       0.991211       0.991699      9.425889e+08        0.000000                0.000000       53.073511        140.3396                0.0                2.0                  0.0             3.991211  -9.423459e+08              0.000000            560.124945  188.697412      188.697412       1.0
1        9.425892e+08        9.425890e+08      9.425892e+08  106335.718896     106.147021      9.425890e+08        0.000000                0.000000       53.073511        140.3396                0.0                2.0                  0.0             3.991211  -9.423459e+08              0.000000            560.124945  229.631901      194.844434       1.0
2        9.425893e+08        9.425891e+08      9.425893e+08  106376.653385     106.147021      9.425891e+08        0.991455                0.000000       63.229622        140.3396                0.0                2.0                  0.0             3.991211  -9.423459e+08              0.000000            560.124945  210.311133      200.000000       1.0
3        9.425894e+08        9.425892e+08      9.425894e+08  126670.547380     126.459245      9.425892e+08       27.450700                0.991455       69.178353        140.3396                1.0                3.0                  1.0             3.000000  -9.423459e+08             69.178353            421.018799  227.252409      200.000000       2.0
4        9.425896e+08        9.425892e+08      9.425896e+08  138611.408838     138.356706      9.425892e+08       65.807406               27.450700       69.178353        140.3396                1.0                3.0                  1.0             3.000000  -9.423459e+08             69.178353            421.018799  269.971517      200.000000       2.0
5        9.425897e+08        9.425894e+08      9.425897e+08  138692.484652     138.356706      9.425894e+08      104.164111               65.807406       81.031113        140.3396                1.0                3.0                  1.0             3.000000  -9.423459e+08             81.031113            421.018799  229.631901      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=2133281/20480, alpha=1015/1024, buf_size=200.[0m
[01/09 19:22:20]  --------------------------------------------------------------------------------
[01/09 19:22:20]  Iteration: 68 (0 solution, 67 counterexamples)
[01/09 19:45:39]  Generator returned sat in 1394.780290 secs.
[01/09 19:45:39]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 19:45:55]  Improved gap from 1.9607843137254901 to 48.4375
[01/09 19:45:55]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 19:45:55]  Verifer returned sat in 16.376861 secs.
[01/09 19:45:55]  sf_get_cex returned in 16.468233 secs.
[01/09 19:45:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.425893e+08        9.425893e+08      9.425893e+08       0.991211       0.991455      9.425893e+08             0.0                     0.0         48.4375           100.0                0.0                2.0                  0.0             3.991211  -9.423459e+08                   0.0            399.121094   0.000000       -0.000244       1.0
1        9.425893e+08        9.425893e+08      9.425893e+08   49428.710938      49.428711      9.425893e+08             0.0                     0.0         48.4375           100.0                0.0                1.0                  0.0             3.991211  -9.423458e+08                   0.0            399.121094  48.437500        0.000000       0.0
2        9.425894e+08        9.425893e+08      9.425894e+08   49477.148438      49.428711      9.425893e+08             0.0                     0.0         48.4375           100.0                0.0                2.0                  0.0             3.991211  -9.423458e+08                   0.0            399.121094  49.428711       -0.000244       1.0
3        9.425894e+08        9.425894e+08      9.425894e+08   49478.139648      49.428711      9.425894e+08             0.0                     0.0         48.4375           100.0                0.0                1.0                  0.0             3.991211  -9.423457e+08                   0.0            399.121094  48.437500       -0.000244       0.0
4        9.425895e+08        9.425894e+08      9.425895e+08   49477.148438      49.428711      9.425894e+08             0.0                     0.0         48.4375           100.0                0.0                1.0                  0.0             3.991211  -9.423457e+08                   0.0            399.121094  48.437500        0.000000       0.0
5        9.425895e+08        9.425895e+08      9.425895e+08   49477.148438      49.428711      9.425895e+08             0.0                     0.0         48.4375           100.0                0.0                1.0                  0.0             3.991211  -9.423457e+08                   0.0            399.121094  48.135010      -50.571289       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1015/1024, buf_size=200.[0m
[01/09 19:45:55]  --------------------------------------------------------------------------------
[01/09 19:45:55]  Iteration: 69 (0 solution, 68 counterexamples)
[01/09 19:55:55]  Generator returned sat in 596.133110 secs.
[01/09 19:55:55]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 19:56:02]  Improved gap from 0.0 to 48.4375
[01/09 19:56:02]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/09 19:56:02]  Verifer returned sat in 6.465138 secs.
[01/09 19:56:02]  sf_get_cex returned in 6.554011 secs.
[01/09 19:56:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.425900e+08        9.425900e+08      9.425900e+08       0.990967       0.991455      9.425900e+08        0.990967                0.000000       65.244141           100.0                0.0                2.0                  0.0                  4.0  -9.423459e+08              0.000000                 400.0  20.083008       20.083008       1.0
1        9.425901e+08        9.425900e+08      9.425901e+08   32643.144287      32.622070      9.425900e+08        0.990967                0.990967       65.244141           100.0                1.0                3.0                  1.0                  4.0  -9.423458e+08             65.244141                 400.0  51.713867        0.000000       2.0
2        9.425901e+08        9.425901e+08      9.425901e+08   48490.204834      48.437500      9.425901e+08        0.990967                0.990967       65.244141           100.0                0.0                1.0                  1.0                  4.0  -9.423458e+08             65.244141                 400.0  47.446289       -0.991211       0.0
3        9.425901e+08        9.425901e+08      9.425901e+08   32670.507568      32.622070      9.425901e+08        0.990967                0.990967       65.244141           100.0                0.0                1.0                  1.0                  4.0  -9.423457e+08             65.244141                 400.0  31.630859      -16.806641       0.0
4        9.425902e+08        9.425902e+08      9.425902e+08   32654.692139      32.622070      9.425902e+08        0.990967                0.990967       65.244141           100.0                0.0                1.0                  1.0                  4.0  -9.423457e+08             65.244141                 400.0  15.815430      -32.622070       0.0
5        9.425902e+08        9.425902e+08      9.425902e+08   32638.876709      32.622070      9.425902e+08        0.990967                0.990967       65.244141           100.0                0.0                1.0                  1.0                  4.0  -9.423457e+08             65.244141                 400.0   0.000000      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=8605/512, buf_size=200.[0m
[01/09 19:56:02]  --------------------------------------------------------------------------------
[01/09 19:56:02]  Iteration: 70 (0 solution, 69 counterexamples)
[01/09 20:08:43]  Generator returned sat in 757.626386 secs.
[01/09 20:08:44]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + -1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 20:08:48]  Improved number of small numbers from 103 to 105 out of a max of 133
[01/09 20:08:48]  Verifer returned sat in 4.337820 secs.
[01/09 20:08:48]  sf_get_cex returned in 4.429980 secs.
[01/09 20:08:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.425901e+08        9.425900e+08      9.425901e+08       0.990723       0.991455      9.425900e+08             0.0                     0.0            94.2      100.199951                0.0                1.0                  0.0             2.200195  -9.423460e+08                   0.0            220.459463  106.600000            23.4       0.0
1        9.425903e+08        9.425901e+08      9.425903e+08  188506.600000     188.400000      9.425901e+08             0.0                     0.0            94.2      100.199951                0.0                2.0                  0.0             2.200195  -9.423460e+08                   0.0            220.459463  199.800000           111.8       1.0
2        9.425905e+08        9.425903e+08      9.425905e+08  188599.800000     188.400000      9.425903e+08             0.2                     0.0            94.4      100.199951                0.0                2.0                  0.0             2.200195  -9.423460e+08                   0.0            220.459463  200.000000           200.0       1.0
3        9.425907e+08        9.425904e+08      9.425907e+08  189000.200000     188.800000      9.425904e+08            89.0                     0.2            96.0      100.199951                0.0                2.0                  0.0             2.000000  -9.423460e+08                   0.0            200.399902  200.000000           200.0       1.0
4        9.425909e+08        9.425904e+08      9.425909e+08  192289.000000     192.000000      9.425904e+08           181.0                    89.0            96.0      100.000000                0.0                2.0                  0.0             2.000000  -9.423460e+08                   0.0            200.000000  300.000000           200.0       1.0
5        9.425911e+08        9.425905e+08      9.425911e+08  192481.000000     192.000000      9.425905e+08           273.0                   181.0            96.0      100.000000                1.0                3.0                  1.0             2.000000  -9.423460e+08                  96.0            200.000000  299.599967           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=273, alpha=99/5, buf_size=200.[0m
[01/09 20:08:48]  --------------------------------------------------------------------------------
[01/09 20:08:48]  Iteration: 71 (0 solution, 70 counterexamples)
[01/09 20:13:02]  Generator returned sat in 250.620260 secs.
[01/09 20:13:03]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 20:13:04]  Improved gap from 0.0 to 100
[01/09 20:13:05]  Improved number of small numbers from 89 to 89 out of a max of 134
[01/09 20:13:05]  Verifer returned sat in 2.073716 secs.
[01/09 20:13:05]  sf_get_cex returned in 2.152975 secs.
[01/09 20:13:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.425903e+08        9.425901e+08      9.425903e+08       0.990723       0.991455      9.425901e+08        0.000000                0.000000       58.883735      149.009277                1.0                3.0                  1.0             3.990723  -9.423460e+08             58.883735            594.654699  200.000000           200.0       2.0
1        9.425904e+08        9.425902e+08      9.425904e+08  117967.469618     117.767470      9.425902e+08       17.767470                0.000000       58.883735      149.009277                1.0                3.0                  1.0             3.990723  -9.423460e+08             58.883735            594.654699  219.055664           200.0       2.0
2        9.425905e+08        9.425903e+08      9.425905e+08  118004.292752     117.767470      9.425903e+08       35.534939               17.767470       58.883735      149.009277                1.0                3.0                  1.0             3.000000  -9.423460e+08             58.883735            447.027832  226.320964           200.0       2.0
3        9.425906e+08        9.425904e+08      9.425906e+08  118029.325521     117.767470      9.425904e+08       53.302409               35.534939       75.000000      149.009277                1.0                3.0                  1.0             3.000000  -9.423460e+08             75.000000            447.027832  200.000000           200.0       2.0
4        9.425908e+08        9.425905e+08      9.425908e+08  150253.302409     150.000000      9.425905e+08      103.302409               53.302409       76.981445      128.302409                1.0                3.0                  1.0             3.000000  -9.423460e+08             76.981445            384.907227  215.092773           200.0       2.0
5        9.425909e+08        9.425905e+08      9.425909e+08  154281.285807     153.962891      9.425905e+08      157.265299              103.302409       76.981445      107.075602                1.0                3.0                  1.0             3.000000  -9.423460e+08             76.981445            321.226807  271.697591           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=321403/2304, alpha=2029/2048, buf_size=200.[0m
[01/09 20:13:05]  --------------------------------------------------------------------------------
[01/09 20:13:05]  Iteration: 72 (0 solution, 71 counterexamples)
[01/09 20:20:10]  Generator returned sat in 420.773598 secs.
[01/09 20:20:10]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_buffer_bytes + 1max_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 20:20:12]  Improved gap from 0.0 to 100
[01/09 20:20:12]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 20:20:12]  Verifer returned sat in 2.146455 secs.
[01/09 20:20:12]  sf_get_cex returned in 2.225893 secs.
[01/09 20:20:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.425903e+08        9.425900e+08      9.425903e+08       0.990479       0.991211      9.425900e+08        0.990479                0.000000       81.980957      124.952393                1.0                3.0                  1.0                  2.0  -9.423459e+08             81.980957            249.904785  265.942871           200.0       2.0
1        9.425904e+08        9.425902e+08      9.425904e+08  101257.411865     100.990479      9.425902e+08        1.980957                0.990479       82.971436      124.952393                1.0                3.0                  1.0                  2.0  -9.423459e+08             82.971436            249.904785  200.000000           200.0       2.0
2        9.425905e+08        9.425902e+08      9.425905e+08  102182.937988     101.980957      9.425902e+08        3.961914                1.980957       83.961914      124.952393                1.0                3.0                  1.0                  2.0  -9.423459e+08             83.961914            249.904785  214.057129           200.0       2.0
3        9.425906e+08        9.425903e+08      9.425906e+08  103189.454590     102.971436      9.425903e+08        6.933350                3.961914       83.961914      124.952393                1.0                3.0                  1.0                  2.0  -9.423459e+08             83.961914            249.904785  274.057129           200.0       2.0
4        9.425907e+08        9.425904e+08      9.425907e+08  103252.426025     102.971436      9.425904e+08        9.904785                6.933350       84.952393      124.952393                1.0                3.0                  1.0                  2.0  -9.423459e+08             84.952393            249.904785  241.180908           200.0       2.0
5        9.425908e+08        9.425905e+08      9.425908e+08  104212.999756     103.961914      9.425905e+08       13.866699                9.904785       84.952393      112.609619                1.0                3.0                  1.0                  2.0  -9.423459e+08             84.952393            225.219238  262.171143           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=12171/1024, alpha=77863/4096, buf_size=200.[0m
[01/09 20:20:12]  --------------------------------------------------------------------------------
[01/09 20:20:12]  Iteration: 73 (0 solution, 72 counterexamples)
[01/09 20:30:35]  Generator returned sat in 618.692381 secs.
[01/09 20:30:35]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 20:30:40]  Improved gap from 0.0 to 100
[01/09 20:30:41]  Improved number of small numbers from 88 to 88 out of a max of 134
[01/09 20:30:41]  Verifer returned sat in 6.305014 secs.
[01/09 20:30:41]  sf_get_cex returned in 6.385749 secs.
[01/09 20:30:41]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.426046e+08        9.426044e+08      9.426046e+08       0.990479       0.991211      9.426044e+08        0.990479                0.000000       52.476196      108.914307                0.0                2.0                  0.0             2.990479  -9.423459e+08              0.000000            325.705894  196.038086      189.104736       1.0
1        9.426047e+08        9.426045e+08      9.426047e+08  105149.421143     104.952393      9.426045e+08        0.990479                0.990479       53.466675      108.914307                0.0                2.0                  0.0             2.000000  -9.423459e+08              0.000000            217.828613  194.057129      194.057129       1.0
2        9.426048e+08        9.426046e+08      9.426048e+08  107128.397217     106.933350      9.426046e+08        1.980957                0.990479       65.676188      108.914307                0.0                2.0                  0.0             2.000000  -9.423459e+08              0.000000            217.828613  209.904785      200.000000       1.0
3        9.426049e+08        9.426047e+08      9.426049e+08  131564.262044     131.352376      9.426047e+08       33.333333                1.980957       76.733337      108.914307                0.0                2.0                  0.0             2.000000  -9.423459e+08              0.000000            217.828613  200.000000      200.000000       1.0
4        9.426051e+08        9.426047e+08      9.426051e+08  153700.008138     153.466675      9.426047e+08       86.800008               33.333333       76.733337      108.914307                0.0                2.0                  0.0             2.000000  -9.423459e+08              0.000000            217.828613  300.000000      200.000000       1.0
5        9.426053e+08        9.426048e+08      9.426053e+08  153853.474813     153.466675      9.426048e+08      140.266683               86.800008       76.733337      105.942871                1.0                3.0                  1.0             2.000000  -9.423459e+08             76.733337            211.885742  294.057129      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=855713/6144, alpha=4057/4096, buf_size=200.[0m
[01/09 20:30:41]  --------------------------------------------------------------------------------
[01/09 20:30:41]  Iteration: 74 (0 solution, 73 counterexamples)
[01/09 20:46:05]  Generator returned sat in 919.236093 secs.
[01/09 20:46:05]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 20:46:09]  Improved gap from 0.5555555555555556 to 100
[01/09 20:46:10]  Improved number of small numbers from 87 to 87 out of a max of 134
[01/09 20:46:10]  Verifer returned sat in 5.220400 secs.
[01/09 20:46:10]  sf_get_cex returned in 5.300826 secs.
[01/09 20:46:10]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.426050e+08        9.426047e+08      9.426050e+08       0.990479       0.991211      9.426047e+08        0.000000                0.000000       18.488932      101.980957                2.0                4.0                  2.0                  4.0  -9.423459e+08             36.977865            407.923828  294.057129      194.057129       3.0
1        9.426050e+08        9.426049e+08      9.426050e+08   10529.001790      10.234945      9.426049e+08        0.000000                0.000000       98.349202      101.980957                0.0                2.0                  2.0                  4.0  -9.423459e+08            196.698405            407.923828  107.593669      104.292074       1.0
2        9.426052e+08        9.426050e+08      9.426052e+08  196805.998617     196.698405      9.426050e+08        0.990479                0.000000       98.349202      101.980957                0.0                2.0                  2.0                  4.0  -9.423459e+08            196.698405            407.923828  204.952393      200.000000       1.0
3        9.426054e+08        9.426051e+08      9.426054e+08  196904.347819     196.698405      9.426051e+08       97.688883                0.990479      100.000000      101.980957                0.0                2.0                  2.0                  2.0  -9.423459e+08            200.000000            203.961914  200.000000      200.000000       1.0
4        9.426055e+08        9.426051e+08      9.426055e+08  110532.633545     110.234945      9.426051e+08      107.923828               97.688883      100.000000      101.980957                0.0                2.0                  2.0                  2.0  -9.423459e+08            200.000000            203.961914  300.000000      200.000000       1.0
5        9.426056e+08        9.426052e+08      9.426056e+08  110642.868490     110.234945      9.426052e+08      118.158773              107.923828      100.000000      100.990479                1.0                3.0                  2.0                  2.0  -9.423459e+08            200.000000            201.980957  299.009521      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=1, loss_amount=1451935/12288, alpha=125767/12288, buf_size=200.[0m
[01/09 20:46:10]  --------------------------------------------------------------------------------
[01/09 20:46:10]  Iteration: 75 (0 solution, 74 counterexamples)
[01/09 20:53:15]  Generator returned sat in 421.352510 secs.
[01/09 20:53:16]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 20:53:18]  Improved gap from 13.333333333333334 to 100
[01/09 20:53:19]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/09 20:53:19]  Verifer returned sat in 2.815656 secs.
[01/09 20:53:19]  sf_get_cex returned in 2.889693 secs.
[01/09 20:53:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.426050e+08        9.426048e+08      9.426050e+08       0.990479       0.990723      9.426048e+08        0.000000                0.000000       81.980957      100.990479                1.0                3.0                  1.0             4.990234  -9.423461e+08             81.980957            503.966157  205.942871           200.0       2.0
1        9.426051e+08        9.426049e+08      9.426051e+08  101196.421387     100.990479      9.426049e+08        0.990479                0.000000       81.980957      100.990479                2.0                4.0                  2.0             4.990234  -9.423461e+08            163.961914            503.966157  265.942871           200.0       3.0
2        9.426052e+08        9.426050e+08      9.426052e+08  101257.411865     100.990479      9.426050e+08        1.980957                0.990479       82.971436      100.990479                2.0                4.0                  2.0             4.990234  -9.423461e+08            165.942871            503.966157  200.000000           200.0       3.0
3        9.426053e+08        9.426050e+08      9.426053e+08  102182.937988     101.980957      9.426050e+08        3.961914                1.980957       82.971436      100.990479                2.0                4.0                  2.0             4.000000  -9.423461e+08            165.942871            403.961914  300.000000           200.0       3.0
4        9.426054e+08        9.426051e+08      9.426054e+08  102284.918945     101.980957      9.426051e+08        5.942871                3.961914       82.971436      100.000000                2.0                4.0                  2.0             4.000000  -9.423461e+08            165.942871            400.000000  300.000000           200.0       3.0
5        9.426055e+08        9.426052e+08      9.426055e+08  102286.899902     101.980957      9.426052e+08        7.923828                5.942871       82.971436      100.000000                1.0                3.0                  2.0             3.000000  -9.423461e+08            165.942871            300.000000  298.019043           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=28399/4096, alpha=77863/4096, buf_size=200.[0m
[01/09 20:53:19]  --------------------------------------------------------------------------------
[01/09 20:53:19]  Iteration: 76 (0 solution, 75 counterexamples)
[01/09 21:01:10]  Generator returned sat in 467.065759 secs.
[01/09 21:01:10]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1min_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 21:01:29]  Improved gap from 10.895263671875 to 100
[01/09 21:01:30]  Improved number of small numbers from 133 to 133 out of a max of 134
[01/09 21:01:30]  Verifer returned sat in 19.665813 secs.
[01/09 21:01:30]  sf_get_cex returned in 19.750057 secs.
[01/09 21:01:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.426048e+08        9.426045e+08      9.426048e+08       0.990479       0.990723      9.426045e+08        0.990479                0.000000        0.000000      100.990479                1.0                3.0                  1.0             5.990479  -9.423461e+08              0.000000            604.981292  299.009521      199.009521       2.0
1        9.426049e+08        9.426047e+08      9.426049e+08   19309.521484      19.009521      9.426047e+08        0.990479                0.990479       91.485718      100.990479                0.0                2.0                  1.0             2.000000  -9.423461e+08             91.485718            201.980957  135.047607      118.019043       1.0
2        9.426050e+08        9.426048e+08      9.426050e+08  183107.473633     182.971436      9.426048e+08        1.980957                0.990479      100.000000      100.990479                0.0                2.0                  1.0             2.000000  -9.423461e+08            100.000000            201.980957  200.000000      200.000000       1.0
3        9.426052e+08        9.426049e+08      9.426052e+08  200201.980957     200.000000      9.426049e+08      101.980957                1.980957      100.000000      100.990479                0.0                2.0                  1.0             2.000000  -9.423461e+08            100.000000            201.980957  200.000000      200.000000       1.0
4        9.426054e+08        9.426049e+08      9.426054e+08  200301.980957     200.000000      9.426049e+08      201.980957              101.980957      100.000000      100.000000                0.0                2.0                  1.0             2.000000  -9.423461e+08            100.000000            200.000000  300.000000      200.000000       1.0
5        9.426056e+08        9.426050e+08      9.426056e+08  200501.980957     200.000000      9.426050e+08      301.980957              201.980957      100.000000      100.000000                1.0                3.0                  1.0             2.000000  -9.423461e+08            100.000000            200.000000  298.019043      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=1232857/4096, alpha=77863/4096, buf_size=200.[0m
[01/09 21:01:30]  --------------------------------------------------------------------------------
[01/09 21:01:30]  Iteration: 77 (0 solution, 76 counterexamples)
[01/09 21:03:57]  Generator returned sat in 142.760799 secs.
[01/09 21:03:57]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 21:04:08]  Improved gap from 16.79286555611644 to 48.4375
[01/09 21:04:08]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/09 21:04:08]  Verifer returned sat in 11.048102 secs.
[01/09 21:04:08]  sf_get_cex returned in 11.133131 secs.
[01/09 21:04:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t   queue_t  bottle_queue_t  qdelay_t
0        9.426048e+08        9.426048e+08      9.426048e+08       0.990234       0.990479      9.426048e+08        0.990234                0.000000         74.0625           100.0                0.0                2.0                  0.0                  2.0  -9.423462e+08                   0.0                 200.0   0.00000       -0.156250       1.0
1        9.426048e+08        9.426048e+08      9.426048e+08   37032.240234      37.031250      9.426048e+08        0.990234                0.990234         74.0625           100.0                0.0                1.0                  0.0                  1.0  -9.423461e+08                   0.0                 100.0  36.87500      -11.562500       0.0
2        9.426049e+08        9.426048e+08      9.426049e+08   54256.615234      54.218750      9.426048e+08        0.990234                0.990234         74.0625           100.0                0.0                1.0                  0.0                  1.0  -9.423461e+08                   0.0                 100.0  42.65625       -5.781250       0.0
3        9.426049e+08        9.426049e+08      9.426049e+08   54262.396484      54.218750      9.426049e+08        0.990234                0.990234         74.0625           100.0                0.0                1.0                  0.0                  1.0  -9.423460e+08                   0.0                 100.0  48.43750        0.000000       0.0
4        9.426050e+08        9.426049e+08      9.426050e+08   54268.177734      54.218750      9.426049e+08        0.990234                0.990234         74.0625           100.0                0.0                2.0                  0.0                  1.0  -9.423460e+08                   0.0                 100.0  54.21875       -0.000244       1.0
5        9.426050e+08        9.426050e+08      9.426050e+08   37086.458984      37.031250      9.426050e+08        0.990234                0.990234         74.0625           100.0                0.0                1.0                  0.0                  1.0  -9.423460e+08                   0.0                 100.0  36.87500      -62.968750       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=635/32, buf_size=200.[0m
[01/09 21:04:08]  --------------------------------------------------------------------------------
[01/09 21:04:08]  Iteration: 78 (0 solution, 77 counterexamples)
[01/09 21:07:01]  Generator returned sat in 168.366545 secs.
[01/09 21:07:01]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 21:07:02]  Improved gap from 0.0 to 100
[01/09 21:07:03]  Improved number of small numbers from 109 to 109 out of a max of 134
[01/09 21:07:03]  Verifer returned sat in 1.794650 secs.
[01/09 21:07:03]  sf_get_cex returned in 1.870997 secs.
[01/09 21:07:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.432337e+08        9.432335e+08      9.432337e+08       0.990234       0.990479      9.432335e+08        0.116279                0.000000       80.348837      158.255814                1.0                3.0                  1.0             3.116279  -9.423460e+08             80.348837            493.169281  274.418605      199.651163       2.0
1        9.432338e+08        9.432336e+08      9.432338e+08  100507.093023     100.232558      9.432336e+08        0.116279                0.116279       80.348837      158.255814                1.0                3.0                  1.0             3.116279  -9.423460e+08             80.348837            493.169281  241.744186      199.883721       2.0
2        9.432339e+08        9.432337e+08      9.432339e+08  100474.418605     100.232558      9.432337e+08        0.232558                0.116279       80.348837      158.255814                1.0                3.0                  1.0             3.116279  -9.423460e+08             80.348837            493.169281  261.046512      200.000000       2.0
3        9.432340e+08        9.432338e+08      9.432340e+08  100493.837209     100.232558      9.432338e+08        0.465116                0.232558       93.662791      158.255814                1.0                3.0                  1.0             3.000000  -9.423460e+08             93.662791            474.767442  200.116279      200.000000       2.0
4        9.432341e+08        9.432339e+08      9.432341e+08  113747.093023     113.546512      9.432339e+08       14.011628                0.465116       94.953488      158.255814                1.0                3.0                  1.0             3.000000  -9.423460e+08             94.953488            474.767442  200.000000      200.000000       2.0
5        9.432343e+08        9.432340e+08      9.432343e+08  115051.220930     114.837209      9.432340e+08       28.848837               14.011628       94.953488      133.255814                1.0                3.0                  1.0             3.000000  -9.423460e+08             94.953488            399.767442  241.744186      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=2471/86, alpha=855/43, buf_size=200.[0m
[01/09 21:07:03]  --------------------------------------------------------------------------------
[01/09 21:07:03]  Iteration: 79 (0 solution, 78 counterexamples)
[01/09 21:10:09]  Generator returned sat in 181.626875 secs.
[01/09 21:10:09]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1min_buffer_bytes + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 21:10:13]  Improved gap from 0.39215686274509803 to 48.4375
[01/09 21:10:13]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/09 21:10:13]  Verifer returned sat in 4.405464 secs.
[01/09 21:10:13]  sf_get_cex returned in 4.487453 secs.
[01/09 21:10:13]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.439351e+08        9.439350e+08      9.439351e+08       0.989990       0.990234      9.439350e+08             0.0                     0.0        72.65625           100.0                0.0                1.0                  0.0                  3.0  -9.423460e+08                   0.0                 300.0  17.369141       17.369141       0.0
1        9.439351e+08        9.439350e+08      9.439351e+08   36345.494141      36.328125      9.439350e+08             0.0                     0.0        72.65625           100.0                0.0                2.0                  0.0                  3.0  -9.423459e+08                   0.0                 300.0  52.707275        0.000000       1.0
2        9.439351e+08        9.439351e+08      9.439351e+08   36380.832275      36.328125      9.439351e+08             0.0                     0.0        72.65625           100.0                0.0                2.0                  0.0                  3.0  -9.423459e+08                   0.0                 300.0  36.328125      -12.109375       1.0
3        9.439352e+08        9.439351e+08      9.439352e+08   36364.453125      36.328125      9.439351e+08             0.0                     0.0        72.65625           100.0                0.0                1.0                  0.0                  3.0  -9.423458e+08                   0.0                 300.0  24.218750      -24.218750       0.0
4        9.439352e+08        9.439352e+08      9.439352e+08   36352.343750      36.328125      9.439352e+08             0.0                     0.0        72.65625           100.0                0.0                1.0                  0.0                  3.0  -9.423458e+08                   0.0                 300.0  12.109375      -36.328125       0.0
5        9.439352e+08        9.439352e+08      9.439352e+08   36340.234375      36.328125      9.439352e+08             0.0                     0.0        72.65625           100.0                0.0                1.0                  0.0                  3.0  -9.423458e+08                   0.0                 300.0   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=9733/512, buf_size=200.[0m
[01/09 21:10:13]  --------------------------------------------------------------------------------
[01/09 21:10:13]  Iteration: 80 (0 solution, 79 counterexamples)
[01/09 21:11:20]  Generator returned sat in 62.448350 secs.
[01/09 21:11:20]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 21:11:34]  Improved gap from 0.6060606060606061 to 48.4375
[01/09 21:11:34]  Improved number of small numbers from 112 to 134 out of a max of 134
[01/09 21:11:34]  Verifer returned sat in 14.049976 secs.
[01/09 21:11:34]  sf_get_cex returned in 14.135123 secs.
[01/09 21:11:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.439350e+08        9.439350e+08      9.439350e+08       0.989746        0.98999      9.439350e+08        0.989746                0.000000        98.85498           100.0                2.0                4.0                  2.0                  2.0  -9.423460e+08            197.709961                 200.0   0.650391        0.000244       3.0
1        9.439351e+08        9.439350e+08      9.439351e+08   49429.130371       49.42749      9.439350e+08        0.989746                0.989746        98.85498           100.0                2.0                4.0                  2.0                  2.0  -9.423459e+08            197.709961                 200.0  49.427490       -0.989746       3.0
2        9.439351e+08        9.439351e+08      9.439351e+08   49477.907471       49.42749      9.439351e+08        0.989746                0.989746        98.85498           100.0                0.0                1.0                  2.0                  2.0  -9.423459e+08            197.709961                 200.0  48.437744        0.000000       0.0
3        9.439352e+08        9.439351e+08      9.439352e+08   49476.917725       49.42749      9.439351e+08        0.989746                0.989746        98.85498           100.0                0.0                2.0                  2.0                  2.0  -9.423458e+08            197.709961                 200.0  49.427490        0.000000       1.0
4        9.439352e+08        9.439352e+08      9.439352e+08   49477.907471       49.42749      9.439352e+08        0.989746                0.989746        98.85498           100.0                0.0                2.0                  2.0                  2.0  -9.423458e+08            197.709961                 200.0  49.427490        0.000000       1.0
5        9.439353e+08        9.439352e+08      9.439353e+08   49477.907471       49.42749      9.439352e+08        0.989746                0.989746        98.85498           100.0                0.0                1.0                  2.0                  2.0  -9.423457e+08            197.709961                 200.0  48.777588       -0.989990       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=9733/512, buf_size=200.[0m
[01/09 21:11:35]  --------------------------------------------------------------------------------
[01/09 21:11:35]  Iteration: 81 (0 solution, 80 counterexamples)
[01/09 21:23:38]  Generator returned sat in 718.970588 secs.
[01/09 21:23:38]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 21:23:44]  Improved gap from 0.0 to 100
[01/09 21:23:44]  Improved number of small numbers from 133 to 133 out of a max of 134
[01/09 21:23:44]  Verifer returned sat in 5.822607 secs.
[01/09 21:23:44]  sf_get_cex returned in 5.904210 secs.
[01/09 21:23:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.437981e+08        9.437979e+08      9.437981e+08       0.989746       0.989990      9.437979e+08        0.000000                0.000000       51.979492      201.979492                0.0                2.0                  0.0             4.989746  -9.422089e+08              0.000000           1007.826382  198.020508      196.041016       1.0
1        9.437983e+08        9.437981e+08      9.437983e+08  104157.004883     103.958984      9.437981e+08        0.000000                0.000000       51.979492      201.979492                0.0                2.0                  0.0             4.989746  -9.422089e+08              0.000000           1007.826382  200.000000      200.000000       1.0
2        9.437984e+08        9.437981e+08      9.437984e+08  104158.984375     103.958984      9.437981e+08        3.958984                0.000000       51.979492      201.979492                0.0                2.0                  0.0             4.989746  -9.422089e+08              0.000000           1007.826382  300.000000      200.000000       1.0
3        9.437985e+08        9.437982e+08      9.437985e+08  104262.943359     103.958984      9.437982e+08        7.917969                3.958984       67.986328      201.979492                1.0                3.0                  1.0             3.000000  -9.422089e+08             67.986328            605.938477  264.027344      200.000000       2.0
4        9.437986e+08        9.437983e+08      9.437986e+08  136244.601562     135.972656      9.437983e+08       43.890625                7.917969       67.986328      200.989746                1.0                3.0                  1.0             3.000000  -9.422089e+08             67.986328            602.969238  299.010254      200.000000       2.0
5        9.437987e+08        9.437984e+08      9.437987e+08  136315.557129     135.972656      9.437984e+08       79.863281               43.890625       84.240601      168.481201                1.0                3.0                  1.0             3.000000  -9.422089e+08             84.240601            505.443604  263.037598      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=20445/256, alpha=2027/2048, buf_size=200.[0m
[01/09 21:23:44]  --------------------------------------------------------------------------------
[01/09 21:23:44]  Iteration: 82 (0 solution, 81 counterexamples)
[01/09 21:32:01]  Generator returned sat in 493.117051 secs.
[01/09 21:32:02]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 21:32:12]  Improved gap from 0.25 to 48.4375
[01/09 21:32:12]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/09 21:32:12]  Verifer returned sat in 10.529017 secs.
[01/09 21:32:12]  sf_get_cex returned in 10.613384 secs.
[01/09 21:32:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t   queue_t  bottle_queue_t  qdelay_t
0        9.438385e+08        9.438385e+08      9.438385e+08       0.989746       0.989746      9.438385e+08        0.989746                0.000000         74.0625           100.0                2.0                4.0                  2.0                  2.0  -9.422091e+08               148.125                 200.0   0.00000        -0.15625       3.0
1        9.438385e+08        9.438385e+08      9.438385e+08   37032.239746      37.031250      9.438385e+08        0.989746                0.989746         74.0625           100.0                0.0                1.0                  2.0                  1.0  -9.422090e+08               148.125                 100.0  36.87500       -11.56250       0.0
2        9.438385e+08        9.438385e+08      9.438385e+08   54256.614746      54.218750      9.438385e+08        0.989746                0.989746         74.0625           100.0                0.0                1.0                  2.0                  1.0  -9.422090e+08               148.125                 100.0  42.65625        -5.78125       0.0
3        9.438386e+08        9.438386e+08      9.438386e+08   54262.395996      54.218750      9.438386e+08        0.989746                0.989746         74.0625           100.0                0.0                1.0                  2.0                  1.0  -9.422089e+08               148.125                 100.0  48.43750         0.00000       0.0
4        9.438387e+08        9.438386e+08      9.438387e+08   54268.177246      54.218750      9.438386e+08        0.989746                0.989746         74.0625           100.0                0.0                2.0                  2.0                  1.0  -9.422089e+08               148.125                 100.0  54.21875         0.00000       1.0
5        9.438387e+08        9.438387e+08      9.438387e+08   37086.458496      37.031250      9.438387e+08        0.989746                0.989746         74.0625           100.0                0.0                1.0                  2.0                  1.0  -9.422089e+08               148.125                 100.0  36.87500       -62.96875       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=635/32, buf_size=200.[0m
[01/09 21:32:12]  --------------------------------------------------------------------------------
[01/09 21:32:12]  Iteration: 83 (0 solution, 82 counterexamples)
[01/09 21:39:50]  Generator returned sat in 452.792142 secs.
[01/09 21:39:50]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1max_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 21:39:59]  Improved gap from 0.0 to 48.4375
[01/09 21:40:00]  Improved number of small numbers from 108 to 109 out of a max of 134
[01/09 21:40:00]  Verifer returned sat in 10.071318 secs.
[01/09 21:40:00]  sf_get_cex returned in 10.153236 secs.
[01/09 21:40:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.438385e+08        9.438385e+08      9.438385e+08       0.989258       0.989258      9.438385e+08             0.0                     0.0       73.151001           100.0                0.0                2.0                  0.0                  2.0  -9.422091e+08                   0.0                 200.0   0.000000       -0.000183       1.0
1        9.438385e+08        9.438385e+08      9.438385e+08   53424.499512      53.424500      9.438385e+08             0.0                     0.0       73.151001           100.0                0.0                1.0                  0.0                  2.0  -9.422090e+08                   0.0                 200.0  48.437500       -0.000244       0.0
2        9.438385e+08        9.438385e+08      9.438385e+08   36623.937988      36.575500      9.438385e+08             0.0                     0.0       73.151001           100.0                0.0                1.0                  0.0                  2.0  -9.422090e+08                   0.0                 200.0  35.585999      -12.851501       0.0
3        9.438386e+08        9.438386e+08      9.438386e+08   36611.086487      36.575500      9.438386e+08             0.0                     0.0       73.151001           100.0                0.0                1.0                  0.0                  2.0  -9.422089e+08                   0.0                 200.0  23.723999      -24.713501       0.0
4        9.438386e+08        9.438386e+08      9.438386e+08   36599.224487      36.575500      9.438386e+08             0.0                     0.0       73.151001           100.0                0.0                1.0                  0.0                  2.0  -9.422089e+08                   0.0                 200.0  11.862000      -36.575500       0.0
5        9.438387e+08        9.438387e+08      9.438387e+08   36587.362488      36.575500      9.438387e+08             0.0                     0.0       73.151001           100.0                0.0                1.0                  0.0                  2.0  -9.422089e+08                   0.0                 200.0   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=323199/16384, buf_size=200.[0m
[01/09 21:40:00]  --------------------------------------------------------------------------------
[01/09 21:40:00]  Iteration: 84 (0 solution, 83 counterexamples)
[01/09 21:47:23]  Generator returned sat in 437.998632 secs.
[01/09 21:47:23]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_qdel + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 21:47:24]  Improved number of small numbers from 133 to 133 out of a max of 133
[01/09 21:47:24]  Verifer returned sat in 0.647115 secs.
[01/09 21:47:24]  sf_get_cex returned in 0.723944 secs.
[01/09 21:47:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        9.438386e+08        9.438383e+08      9.438386e+08       0.989258       0.989258      9.438383e+08             0.0                     0.0            98.5           100.5                2.0                4.0                  2.0                  2.5  -9.422090e+08                 197.0                251.25    300.0           200.0       3.0
1        9.438387e+08        9.438385e+08      9.438387e+08  100800.000000     100.500000      9.438385e+08             0.5                     0.0            99.0           100.5                2.0                4.0                  2.0                  2.5  -9.422090e+08                 198.0                251.25    202.0           200.0       3.0
2        9.438388e+08        9.438386e+08      9.438388e+08  101202.500000     101.000000      9.438386e+08             1.5                     0.5           100.0           100.5                2.0                4.0                  2.0                  2.5  -9.422090e+08                 200.0                251.25    200.0           200.0       3.0
3        9.438389e+08        9.438386e+08      9.438389e+08  102201.500000     102.000000      9.438386e+08             3.5                     1.5           100.0           100.5                2.0                4.0                  2.0                  2.5  -9.422090e+08                 200.0                251.25    300.0           200.0       3.0
4        9.438390e+08        9.438387e+08      9.438390e+08  102303.500000     102.000000      9.438387e+08             5.5                     3.5           100.0           100.0                2.0                4.0                  2.0                  2.5  -9.422090e+08                 200.0                250.00    300.0           200.0       3.0
5        9.438391e+08        9.438389e+08      9.438391e+08  102305.500000     102.000000      9.438389e+08             7.5                     5.5           100.0           100.0                1.0                3.0                  2.0                  2.5  -9.422090e+08                 200.0                250.00    203.0           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=7, alpha=2, buf_size=200.[0m
[01/09 21:47:24]  --------------------------------------------------------------------------------
[01/09 21:47:24]  Iteration: 85 (0 solution, 84 counterexamples)
[01/09 21:53:23]  Generator returned sat in 354.550878 secs.
[01/09 21:53:23]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 21:53:26]  Improved gap from 0.0 to 100
[01/09 21:53:27]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/09 21:53:27]  Verifer returned sat in 3.420302 secs.
[01/09 21:53:27]  sf_get_cex returned in 3.505579 secs.
[01/09 21:53:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.439482e+08        9.439479e+08      9.439482e+08       0.989014       0.989014      9.439479e+08        0.989014                0.000000       95.054932      200.989014                0.0                2.0                  0.0                  2.0  -9.422090e+08                   0.0            401.978027  296.043945      200.000000       1.0
1        9.439483e+08        9.439481e+08      9.439483e+08   99308.019287      99.010986      9.439481e+08        0.989014                0.989014       98.021973      200.989014                0.0                2.0                  0.0                  2.0  -9.422090e+08                   0.0            401.978027  199.010986      199.010986       1.0
2        9.439484e+08        9.439481e+08      9.439484e+08  102178.027344     101.978027      9.439481e+08        1.978027                0.989014       98.021973      200.989014                0.0                2.0                  0.0                  2.0  -9.422090e+08                   0.0            401.978027  300.000000      200.000000       1.0
3        9.439485e+08        9.439483e+08      9.439485e+08  102280.005371     101.978027      9.439483e+08        3.956055                1.978027      100.000000      200.989014                0.0                2.0                  0.0                  2.0  -9.422090e+08                   0.0            401.978027  200.000000      200.000000       1.0
4        9.439486e+08        9.439483e+08      9.439486e+08  104160.010742     103.956055      9.439483e+08        7.912109                3.956055      100.000000      200.000000                0.0                2.0                  0.0                  2.0  -9.422090e+08                   0.0            400.000000  300.000000      200.000000       1.0
5        9.439487e+08        9.439485e+08      9.439487e+08  104263.966797     103.956055      9.439485e+08       11.868164                7.912109      100.000000      196.043945                1.0                3.0                  1.0                  2.0  -9.422090e+08                 100.0            392.087891  203.956055      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=44561/4096, alpha=4051/1024, buf_size=200.[0m
[01/09 21:53:27]  --------------------------------------------------------------------------------
[01/09 21:53:27]  Iteration: 86 (0 solution, 85 counterexamples)
[01/09 22:46:59]  Generator returned sat in 3207.900941 secs.
[01/09 22:46:59]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 22:47:00]  Improved number of small numbers from 133 to 133 out of a max of 133
[01/09 22:47:00]  Verifer returned sat in 0.492854 secs.
[01/09 22:47:00]  sf_get_cex returned in 0.559047 secs.
[01/09 22:47:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.439492e+08        9.439489e+08      9.439492e+08       0.988770       0.989014      9.439489e+08        0.000000                0.000000       41.977539      200.988770                2.0                4.0                  2.0              4.98877  -9.422090e+08             83.955078           1002.686650  217.033691      200.000000       3.0
1        9.439492e+08        9.439491e+08      9.439492e+08   84172.111816      83.955078      9.439491e+08        0.000000                0.000000       58.516846      200.988770                0.0                2.0                  2.0              4.98877  -9.422090e+08            117.033691           1002.686650  183.955078      183.955078       1.0
2        9.439494e+08        9.439491e+08      9.439494e+08  117217.646484     117.033691      9.439491e+08        0.988770                0.000000       58.516846      200.988770                0.0                2.0                  2.0              4.98877  -9.422090e+08            117.033691           1002.686650  300.000000      200.000000       1.0
3        9.439495e+08        9.439493e+08      9.439495e+08  117334.680176     117.033691      9.439493e+08       18.022461                0.988770      100.000000      200.988770                0.0                2.0                  2.0              2.00000  -9.422090e+08            200.000000            401.977539  200.000000      200.000000       1.0
4        9.439496e+08        9.439493e+08      9.439496e+08  119229.252930     119.011230      9.439493e+08       37.033691               18.022461      100.000000      200.000000                0.0                2.0                  2.0              2.00000  -9.422090e+08            200.000000            400.000000  300.000000      200.000000       1.0
5        9.439497e+08        9.439494e+08      9.439497e+08  119348.264160     119.011230      9.439494e+08       56.044922               37.033691      100.000000      196.044922                1.0                3.0                  2.0              2.00000  -9.422090e+08            200.000000            392.089844  203.955078      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=28695/512, alpha=38935/2048, buf_size=200.[0m
[01/09 22:47:00]  --------------------------------------------------------------------------------
[01/09 22:47:00]  Iteration: 87 (0 solution, 86 counterexamples)
[01/09 22:57:36]  Generator returned sat in 631.076884 secs.
[01/09 22:57:36]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_buffer_bytes + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 22:57:44]  Improved gap from 0.0 to 100
[01/09 22:57:45]  Improved number of small numbers from 128 to 128 out of a max of 134
[01/09 22:57:45]  Verifer returned sat in 8.503029 secs.
[01/09 22:57:45]  sf_get_cex returned in 8.597782 secs.
[01/09 22:57:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.439491e+08        9.439489e+08      9.439491e+08       0.988770       0.989014      9.439489e+08        0.555556                0.000000       62.638889      147.777778                0.0                1.0                  0.0             2.555556  -9.422090e+08              0.000000            377.654321  219.444444      151.666667       0.0
1        9.439492e+08        9.439490e+08      9.439492e+08  125497.777778     125.277778      9.439490e+08        0.555556                0.555556       62.638889      147.777778                0.0                2.0                  0.0             2.000000  -9.422090e+08              0.000000            295.555556  251.111111      176.944444       1.0
2        9.439494e+08        9.439491e+08      9.439494e+08  125529.444444     125.277778      9.439491e+08        2.777778                0.555556       73.333333      147.777778                0.0                2.0                  0.0             2.000000  -9.422090e+08              0.000000            295.555556  247.777778      200.000000       1.0
3        9.439495e+08        9.439492e+08      9.439495e+08  146917.222222     146.666667      9.439492e+08       49.444444                2.777778       91.944444      147.777778                0.0                2.0                  0.0             2.000000  -9.422090e+08              0.000000            295.555556  200.000000      200.000000       1.0
4        9.439497e+08        9.439492e+08      9.439497e+08  184138.333333     183.888889      9.439492e+08      133.333333               49.444444       91.944444      147.777778                0.0                2.0                  0.0             2.000000  -9.422090e+08              0.000000            295.555556  300.000000      200.000000       1.0
5        9.439499e+08        9.439494e+08      9.439499e+08  184322.222222     183.888889      9.439494e+08      217.222222              133.333333       91.944444      147.777778                1.0                3.0                  1.0             2.000000  -9.422090e+08             91.944444            295.555556  251.111111      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=650/3, alpha=5/9, buf_size=200.[0m
[01/09 22:57:45]  --------------------------------------------------------------------------------
[01/09 22:57:45]  Iteration: 88 (0 solution, 87 counterexamples)
[01/09 23:02:22]  Generator returned sat in 272.321238 secs.
[01/09 23:02:22]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 23:02:34]  Improved gap from 0.008318775476249896 to 48.4375
[01/09 23:02:34]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/09 23:02:34]  Verifer returned sat in 11.835189 secs.
[01/09 23:02:34]  sf_get_cex returned in 11.932606 secs.
[01/09 23:02:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.438242e+08        9.438242e+08      9.438242e+08       0.988525        0.98877      9.438242e+08         0.98877                 0.00000          96.875           100.0                2.0                4.0                  2.0                  4.0  -9.420842e+08                193.75                 400.0   4.272461        4.272461       3.0
1        9.438242e+08        9.438242e+08      9.438242e+08   48442.761230       48.43750      9.438242e+08         0.98877                 0.98877          96.875           100.0                0.0                2.0                  2.0                  2.0  -9.420842e+08                193.75                 200.0  51.721191        0.000000       1.0
2        9.438243e+08        9.438242e+08      9.438243e+08   48490.209961       48.43750      9.438242e+08         0.98877                 0.98877          96.875           100.0                0.0                2.0                  2.0                  2.0  -9.420841e+08                193.75                 200.0  48.437500        0.000000       1.0
3        9.438243e+08        9.438243e+08      9.438243e+08   48486.926270       48.43750      9.438243e+08         0.98877                 0.98877          96.875           100.0                0.0                2.0                  2.0                  2.0  -9.420841e+08                193.75                 200.0  48.437500        0.000000       1.0
4        9.438244e+08        9.438243e+08      9.438244e+08   48486.926270       48.43750      9.438243e+08         0.98877                 0.98877          96.875           100.0                0.0                2.0                  2.0                  2.0  -9.420840e+08                193.75                 200.0  48.437500        0.000000       1.0
5        9.438244e+08        9.438244e+08      9.438244e+08   48486.926270       48.43750      9.438244e+08         0.98877                 0.98877          96.875           100.0                0.0                1.0                  2.0                  2.0  -9.420840e+08                193.75                 200.0  47.448975       -0.988525       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=77869/4096, buf_size=200.[0m
[01/09 23:02:34]  --------------------------------------------------------------------------------
[01/09 23:02:34]  Iteration: 89 (0 solution, 88 counterexamples)
[01/09 23:45:04]  Generator returned sat in 2545.323794 secs.
[01/09 23:45:04]  Candidate solution: 
[1m[94mif (+ -1min_c + -1max_c + 1min_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 23:45:14]  Improved gap from 15.3486328125 to 48.4375
[01/09 23:45:15]  Improved number of small numbers from 104 to 109 out of a max of 134
[01/09 23:45:15]  Verifer returned sat in 10.507881 secs.
[01/09 23:45:15]  sf_get_cex returned in 10.603870 secs.
[01/09 23:45:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.438243e+08        9.438243e+08      9.438243e+08       0.988525       0.988525      9.438243e+08             0.0                     0.0       99.133929           100.0                2.0                4.0                  2.0             2.268066  -9.420842e+08            198.267857            226.806641   0.000000       -0.000140       3.0
1        9.438243e+08        9.438243e+08      9.438243e+08   49566.964286      49.566964      9.438243e+08             0.0                     0.0       99.133929           100.0                0.0                1.0                  2.0             2.268066  -9.420842e+08            198.267857            226.806641  48.303571       -0.133929       0.0
2        9.438244e+08        9.438243e+08      9.438244e+08   49615.267857      49.566964      9.438243e+08             0.0                     0.0       99.133929           100.0                0.0                1.0                  2.0             2.268066  -9.420841e+08            198.267857            226.806641  49.433036        0.000000       0.0
3        9.438244e+08        9.438244e+08      9.438244e+08   49616.397321      49.566964      9.438244e+08             0.0                     0.0       99.133929           100.0                0.0                2.0                  2.0             2.268066  -9.420841e+08            198.267857            226.806641  49.566964        0.000000       1.0
4        9.438245e+08        9.438244e+08      9.438245e+08   49616.531250      49.566964      9.438244e+08             0.0                     0.0       99.133929           100.0                0.0                2.0                  2.0             2.268066  -9.420840e+08            198.267857            226.806641  49.566964       -0.000105       1.0
5        9.438245e+08        9.438245e+08      9.438245e+08   49616.531250      49.566964      9.438245e+08             0.0                     0.0       99.133929           100.0                0.0                1.0                  2.0             2.268066  -9.420840e+08            198.267857            226.806641  47.968930       -0.468785       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=549/4096, buf_size=200.[0m
[01/09 23:45:15]  --------------------------------------------------------------------------------
[01/09 23:45:15]  Iteration: 90 (0 solution, 89 counterexamples)
[01/09 23:48:53]  Generator returned sat in 213.445801 secs.
[01/09 23:48:54]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 23:49:06]  Improved gap from 16.67012749698908 to 48.4375
[01/09 23:49:06]  Improved number of small numbers from 105 to 134 out of a max of 134
[01/09 23:49:06]  Verifer returned sat in 11.982824 secs.
[01/09 23:49:06]  sf_get_cex returned in 12.064385 secs.
[01/09 23:49:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.438243e+08        9.438243e+08      9.438243e+08       0.988281       0.988281      9.438243e+08        0.988525                0.000000          96.875           100.0                0.0                2.0                  0.0                  2.0  -9.420842e+08                   0.0                 200.0   0.988525        0.988525       1.0
1        9.438243e+08        9.438243e+08      9.438243e+08   48439.477051      48.437500      9.438243e+08        0.988525                0.988525          96.875           100.0                0.0                2.0                  0.0                  2.0  -9.420842e+08                   0.0                 200.0  48.437500        0.000000       1.0
2        9.438244e+08        9.438243e+08      9.438244e+08   48486.926025      48.437500      9.438243e+08        0.988525                0.988525          96.875           100.0                0.0                2.0                  0.0                  2.0  -9.420841e+08                   0.0                 200.0  48.437500        0.000000       1.0
3        9.438244e+08        9.438243e+08      9.438244e+08   48486.926025      48.437500      9.438243e+08        0.988525                0.988525          96.875           100.0                0.0                2.0                  0.0                  2.0  -9.420841e+08                   0.0                 200.0  48.437500        0.000000       1.0
4        9.438244e+08        9.438244e+08      9.438244e+08   48486.926025      48.437500      9.438244e+08        0.988525                0.988525          96.875           100.0                0.0                2.0                  0.0                  2.0  -9.420840e+08                   0.0                 200.0  48.437500       -4.272705       1.0
5        9.438245e+08        9.438245e+08      9.438245e+08   48486.926025      48.437500      9.438245e+08        0.988525                0.988525          96.875           100.0                0.0                1.0                  0.0                  2.0  -9.420840e+08                   0.0                 200.0  44.164551       -4.272949       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4049/4096, buf_size=200.[0m
[01/09 23:49:06]  --------------------------------------------------------------------------------
[01/09 23:49:06]  Iteration: 91 (0 solution, 90 counterexamples)
[01/09 23:56:52]  Generator returned sat in 461.217369 secs.
[01/09 23:56:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1min_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 23:57:15]  Improved gap from 14.789915966386555 to 48.4375
[01/09 23:57:15]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/09 23:57:15]  Verifer returned sat in 23.053381 secs.
[01/09 23:57:15]  sf_get_cex returned in 23.153912 secs.
[01/09 23:57:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.438423e+08        9.438423e+08      9.438423e+08       0.988281       0.988281      9.438423e+08             0.5                     0.0          96.875         106.875                0.0                2.0                  0.0             2.499756  -9.420842e+08                   0.0            267.161407   0.499756        0.499756       1.0
1        9.438423e+08        9.438423e+08      9.438423e+08   48438.499756      48.437500      9.438423e+08             0.5                     0.5          96.875         106.875                0.0                2.0                  0.0             2.000000  -9.420842e+08                   0.0            213.750000  48.437500        0.000000       1.0
2        9.438424e+08        9.438423e+08      9.438424e+08   48486.437500      48.437500      9.438423e+08             0.5                     0.5          96.875         106.875                0.0                2.0                  0.0             2.000000  -9.420841e+08                   0.0            213.750000  48.437500        0.000000       1.0
3        9.438424e+08        9.438424e+08      9.438424e+08   48486.437500      48.437500      9.438424e+08             0.5                     0.5          96.875         106.875                0.0                2.0                  0.0             2.000000  -9.420841e+08                   0.0            213.750000  48.437500        0.000000       1.0
4        9.438425e+08        9.438424e+08      9.438425e+08   48486.437500      48.437500      9.438424e+08             0.5                     0.5          96.875         106.875                0.0                2.0                  0.0             2.000000  -9.420840e+08                   0.0            213.750000  48.437500        0.000000       1.0
5        9.438425e+08        9.438425e+08      9.438425e+08   48486.437500      48.437500      9.438425e+08             0.5                     0.5          96.875         106.875                0.0                2.0                  0.0             2.000000  -9.420840e+08                   0.0            213.750000  48.437500      -51.562500       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2047/4096, buf_size=200.[0m
[01/09 23:57:15]  --------------------------------------------------------------------------------
[01/09 23:57:15]  Iteration: 92 (0 solution, 91 counterexamples)
[01/10 00:45:14]  Generator returned sat in 2873.134534 secs.
[01/10 00:45:14]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 00:45:36]  Improved gap from 48.431720860160176 to 48.4375
[01/10 00:45:38]  Improved number of small numbers from 92 to 95 out of a max of 134
[01/10 00:45:38]  Verifer returned sat in 23.988703 secs.
[01/10 00:45:38]  sf_get_cex returned in 24.051962 secs.
[01/10 00:45:38]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.433660e+08        9.433660e+08      9.433660e+08       0.988037       0.988037      9.433660e+08             0.0                     0.0       24.066311           100.0                1.0                3.0                  1.0                  5.0  -9.420842e+08             24.066311                 500.0   0.561617        0.561570       2.0
1        9.433661e+08        9.433660e+08      9.433661e+08   48133.183569      48.132622      9.433660e+08             0.0                     0.0       24.066311           100.0                2.0                4.0                  2.0                  5.0  -9.420842e+08             48.132622                 500.0  48.618020        0.000000       3.0
2        9.433661e+08        9.433661e+08      9.433661e+08   48181.239971      48.132622      9.433661e+08             0.0                     0.0       24.309010           100.0                0.0                2.0                  2.0                  5.0  -9.420841e+08             48.618020                 500.0  48.132622       -0.304878       1.0
3        9.433662e+08        9.433661e+08      9.433662e+08   48666.152519      48.618020      9.433661e+08             0.0                     0.0       32.351840           100.0                0.0                1.0                  2.0                  5.0  -9.420841e+08             64.703680                 500.0  48.313142       -0.124358       0.0
4        9.433662e+08        9.433662e+08      9.433662e+08   32388.118448      32.339805      9.433662e+08             0.0                     0.0       36.373255           100.0                0.0                1.0                  2.0                  5.0  -9.420840e+08             72.746510                 500.0  32.215447      -16.222197       0.0
5        9.433662e+08        9.433662e+08      9.433662e+08   36393.435762      36.361220      9.433662e+08             0.0                     0.0       39.969512           100.0                0.0                1.0                  2.0                  5.0  -9.420840e+08             79.939024                 500.0  14.222126      -79.860976       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=75/6232, buf_size=200.[0m
[01/10 00:45:38]  --------------------------------------------------------------------------------
[01/10 00:45:38]  Iteration: 93 (0 solution, 92 counterexamples)
[01/10 01:39:49]  Generator returned sat in 3245.564736 secs.
[01/10 01:39:49]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 01:39:55]  Improved gap from 5.92822265625 to 48.4375
[01/10 01:39:55]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/10 01:39:55]  Verifer returned sat in 6.344126 secs.
[01/10 01:39:55]  sf_get_cex returned in 6.433696 secs.
[01/10 01:39:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.433660e+08        9.433660e+08      9.433660e+08       0.987793       0.988037      9.433660e+08             0.0                     0.0       98.851074           100.0                0.0                2.0                  0.0             8.988037  -9.420842e+08                   0.0            898.803711   0.321777        0.321533       1.0
1        9.433661e+08        9.433660e+08      9.433661e+08   49425.858887      49.425537      9.433660e+08             0.0                     0.0       98.851074           100.0                0.0                1.0                  0.0             8.988037  -9.420842e+08                   0.0            898.803711  48.437500       -0.000488       0.0
2        9.433661e+08        9.433661e+08      9.433661e+08   49473.974609      49.425537      9.433661e+08             0.0                     0.0       98.851074           100.0                0.0                1.0                  0.0             8.988037  -9.420841e+08                   0.0            898.803711  48.437256       -0.000244       0.0
3        9.433662e+08        9.433661e+08      9.433662e+08   49473.974365      49.425537      9.433661e+08             0.0                     0.0       98.851074           100.0                0.0                1.0                  0.0             8.988037  -9.420841e+08                   0.0            898.803711  47.449463       -0.988281       0.0
4        9.433662e+08        9.433662e+08      9.433662e+08   49472.986572      49.425537      9.433662e+08             0.0                     0.0       98.851074           100.0                0.0                1.0                  0.0             8.988037  -9.420840e+08                   0.0            898.803711  48.437256       -0.000244       0.0
5        9.433663e+08        9.433662e+08      9.433663e+08   49473.974365      49.425537      9.433662e+08             0.0                     0.0       98.851074           100.0                0.0                1.0                  0.0             8.988037  -9.420840e+08                   0.0            898.803711  48.437500      -50.574707       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4047/4096, buf_size=200.[0m
[01/10 01:39:55]  --------------------------------------------------------------------------------
[01/10 01:39:55]  Iteration: 94 (0 solution, 93 counterexamples)
[01/10 03:44:15]  Generator returned sat in 7454.929072 secs.
[01/10 03:44:16]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 03:44:26]  Improved gap from 0.4166666666666667 to 48.4375
[01/10 03:44:27]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 03:44:27]  Verifer returned sat in 10.730844 secs.
[01/10 03:44:27]  sf_get_cex returned in 10.828467 secs.
[01/10 03:44:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.433043e+08        9.433043e+08      9.433043e+08       0.987793       0.987793      9.433043e+08             0.0                     0.0          96.875         103.875                0.0                2.0                  0.0                  2.0  -9.420841e+08                   0.0                207.75   0.000000        0.000000       1.0
1        9.433043e+08        9.433043e+08      9.433043e+08   48437.500000      48.437500      9.433043e+08             0.0                     0.0          96.875         103.875                0.0                2.0                  0.0                  2.0  -9.420841e+08                   0.0                207.75  48.437500        0.000000       1.0
2        9.433044e+08        9.433043e+08      9.433044e+08   48485.937500      48.437500      9.433043e+08             0.0                     0.0          96.875         103.875                0.0                2.0                  0.0                  2.0  -9.420840e+08                   0.0                207.75  48.437500        0.000000       1.0
3        9.433044e+08        9.433044e+08      9.433044e+08   48485.937500      48.437500      9.433044e+08             0.0                     0.0          96.875         103.875                0.0                2.0                  0.0                  2.0  -9.420840e+08                   0.0                207.75  48.437500        0.000000       1.0
4        9.433044e+08        9.433044e+08      9.433044e+08   48485.937500      48.437500      9.433044e+08             0.0                     0.0          96.875         103.875                0.0                2.0                  0.0                  2.0  -9.420839e+08                   0.0                207.75  48.437500        0.000000       1.0
5        9.433045e+08        9.433045e+08      9.433045e+08   48485.937500      48.437500      9.433045e+08             0.0                     0.0          96.875         103.875                0.0                1.0                  0.0                  2.0  -9.420839e+08                   0.0                207.75  43.175537       -5.261963       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=77873/4096, buf_size=200.[0m
[01/10 03:44:27]  --------------------------------------------------------------------------------
[01/10 03:44:27]  Iteration: 95 (0 solution, 94 counterexamples)
[01/10 05:21:42]  Generator returned sat in 5829.949081 secs.
[01/10 05:21:42]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + 1max_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 05:21:47]  Improved gap from 19.11111111111111 to 100
[01/10 05:21:48]  Improved number of small numbers from 77 to 79 out of a max of 134
[01/10 05:21:48]  Verifer returned sat in 5.990217 secs.
[01/10 05:21:48]  sf_get_cex returned in 6.076592 secs.
[01/10 05:21:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.432562e+08        9.432560e+08      9.432562e+08       0.987549       0.987793      9.432560e+08        0.987549                0.000000       60.018683      200.966309                0.0                1.0                  0.0                  2.0  -9.420359e+08              0.000000            401.932617  179.965547      179.965547       0.0
1        9.432563e+08        9.432560e+08      9.432563e+08  120218.318813     120.037366      9.432560e+08        0.990462                0.987549       60.018683      200.966309                0.0                1.0                  0.0                  1.0  -9.420359e+08              0.000000            200.966309  300.000000      200.000000       0.0
2        9.432564e+08        9.432562e+08      9.432564e+08   80317.004341      80.016014      9.432562e+08        0.990462                0.990462       99.989324      199.978648                0.0                2.0                  0.0                  1.0  -9.420359e+08              0.000000            199.978648  180.037366      180.016014       1.0
3        9.432565e+08        9.432563e+08      9.432565e+08  120167.682929     119.986655      9.432563e+08        0.993131                0.990462       99.997331      149.995997                1.0                3.0                  1.0                  1.0  -9.420359e+08             99.997331            149.995997  200.008007      200.000000       2.0
4        9.432566e+08        9.432564e+08      9.432566e+08  120195.663178     119.994662      9.432564e+08       20.987793                0.993131      100.000000      133.333333                0.0                2.0                  1.0                  1.0  -9.420359e+08            100.000000            133.333333  200.000000      200.000000       1.0
5        9.432567e+08        9.432564e+08      9.432567e+08  120218.318813     119.997331      9.432564e+08       40.985124               20.987793      100.000000      100.000000                0.0                2.0                  1.0                  1.0  -9.420359e+08            100.000000            100.000000  300.000000      200.000000       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=599400/14987, alpha=299700/14987, buf_size=200.[0m
[01/10 05:21:48]  --------------------------------------------------------------------------------
[01/10 05:21:48]  Iteration: 96 (0 solution, 95 counterexamples)
[01/10 05:42:31]  Generator returned sat in 1237.329975 secs.
[01/10 05:42:31]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -1max_c + -1min_buffer_bytes + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 05:43:04]  Improved gap from 11.333333333333334 to 48.4375
[01/10 05:43:04]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 05:43:04]  Verifer returned sat in 32.807243 secs.
[01/10 05:43:04]  sf_get_cex returned in 32.909769 secs.
[01/10 05:43:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.433084e+08        9.433084e+08      9.433084e+08       0.987305       0.987549      9.433084e+08             0.5                     0.0          96.875         107.375                1.0                3.0                  1.0                  2.5  -9.420883e+08                96.875              268.4375   5.250000          5.2500       2.0
1        9.433085e+08        9.433084e+08      9.433085e+08   48443.250000      48.437500      9.433084e+08             0.5                     0.5          96.875         107.375                2.0                4.0                  2.0                  2.5  -9.420882e+08               193.750              268.4375  48.437500          0.0000       3.0
2        9.433085e+08        9.433085e+08      9.433085e+08   48486.437500      48.437500      9.433085e+08             0.5                     0.5          96.875         107.375                0.0                2.0                  2.0                  2.5  -9.420882e+08               193.750              268.4375  48.437500          0.0000       1.0
3        9.433086e+08        9.433085e+08      9.433086e+08   48486.437500      48.437500      9.433085e+08             0.5                     0.5          96.875         107.375                0.0                2.0                  2.0                  2.5  -9.420881e+08               193.750              268.4375  48.437500          0.0000       1.0
4        9.433086e+08        9.433086e+08      9.433086e+08   48486.437500      48.437500      9.433086e+08             0.5                     0.5          96.875         107.375                0.0                2.0                  2.0                  2.5  -9.420881e+08               193.750              268.4375  48.437500          0.0000       1.0
5        9.433087e+08        9.433086e+08      9.433087e+08   48486.437500      48.437500      9.433086e+08             0.5                     0.5          96.875         107.375                0.0                1.0                  2.0                  2.5  -9.420881e+08               193.750              268.4375  47.937744        -51.5625       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2047/4096, buf_size=200.[0m
[01/10 05:43:04]  --------------------------------------------------------------------------------
[01/10 05:43:04]  Iteration: 97 (0 solution, 96 counterexamples)
[01/10 06:09:07]  Generator returned sat in 1558.108625 secs.
[01/10 06:09:08]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 06:09:17]  Improved gap from 6.666666666666667 to 48.4375
[01/10 06:09:18]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 06:09:18]  Verifer returned sat in 9.818393 secs.
[01/10 06:09:18]  sf_get_cex returned in 9.919360 secs.
[01/10 06:09:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        9.433100e+08        9.433100e+08      9.433100e+08       0.987305       0.987549      9.433100e+08        0.987305                0.000000          96.875      107.862305                2.0                4.0                  2.0                  2.0  -9.420883e+08                193.75            215.724609   0.000000       -0.987305       3.0
1        9.433101e+08        9.433100e+08      9.433101e+08   48438.487305      48.437500      9.433100e+08        0.987305                0.987305          96.875      107.862305                0.0                1.0                  2.0                  1.0  -9.420882e+08                193.75            107.862305  47.450195       -0.987305       0.0
2        9.433101e+08        9.433101e+08      9.433101e+08   48485.937500      48.437500      9.433101e+08        0.987305                0.987305          96.875      107.862305                0.0                1.0                  2.0                  1.0  -9.420882e+08                193.75            107.862305  47.450195       -0.987305       0.0
3        9.433102e+08        9.433101e+08      9.433102e+08   48485.937500      48.437500      9.433101e+08        0.987305                0.987305          96.875      107.862305                0.0                1.0                  2.0                  1.0  -9.420881e+08                193.75            107.862305  47.450195       -0.987305       0.0
4        9.433102e+08        9.433102e+08      9.433102e+08   48485.937500      48.437500      9.433102e+08        0.987305                0.987305          96.875      107.862305                0.0                1.0                  2.0                  1.0  -9.420881e+08                193.75            107.862305  47.450195       -0.987305       0.0
5        9.433103e+08        9.433102e+08      9.433103e+08   48485.937500      48.437500      9.433102e+08        0.987305                0.987305          96.875      107.862305                0.0                1.0                  2.0                  1.0  -9.420881e+08                193.75            107.862305  47.450195      -52.549805       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=19469/1024, buf_size=200.[0m
[01/10 06:09:18]  --------------------------------------------------------------------------------
[01/10 06:09:18]  Iteration: 98 (0 solution, 97 counterexamples)
[01/10 06:46:42]  Generator returned sat in 2239.130733 secs.
[01/10 06:46:42]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 06:46:52]  Improved gap from 19.491651205936922 to 100
[01/10 06:46:52]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 06:46:52]  Verifer returned sat in 9.969359 secs.
[01/10 06:46:52]  sf_get_cex returned in 10.072447 secs.
[01/10 06:46:52]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.433093e+08        9.433092e+08      9.433093e+08       0.987061       0.987549      9.433092e+08        0.986816                0.000000       75.000000      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08              0.000000            207.896484  100.987305      100.987305       1.0
1        9.433095e+08        9.433093e+08      9.433095e+08  150101.974121     150.000000      9.433093e+08        0.986816                0.986816       75.000000      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08              0.000000            207.896484  178.948486      150.987305       1.0
2        9.433096e+08        9.433094e+08      9.433096e+08  150179.935303     150.000000      9.433094e+08        1.974121                0.986816       75.000000      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08              0.000000            207.896484  202.961182      200.000000       1.0
3        9.433098e+08        9.433095e+08      9.433098e+08  150204.935303     150.000000      9.433095e+08       51.974121                1.974121       75.987061      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08              0.000000            207.896484  200.000000      200.000000       1.0
4        9.433099e+08        9.433095e+08      9.433099e+08  152226.095215     151.974121      9.433095e+08      103.948242               51.974121       75.987061      102.961182                0.0                2.0                  0.0                  2.0  -9.420881e+08              0.000000            205.922363  300.000000      200.000000       1.0
5        9.433101e+08        9.433096e+08      9.433101e+08  152378.069336     151.974121      9.433096e+08      155.922363              103.948242       75.987061      100.986816                1.0                3.0                  1.0                  2.0  -9.420881e+08             75.987061            201.973633  299.013184      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=79327/512, alpha=2021/2048, buf_size=200.[0m
[01/10 06:46:53]  --------------------------------------------------------------------------------
[01/10 06:46:53]  Iteration: 99 (0 solution, 98 counterexamples)
[01/10 07:19:45]  Generator returned sat in 1967.177500 secs.
[01/10 07:19:45]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 07:20:00]  Improved gap from 0.06771435826538386 to 100
[01/10 07:20:00]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 07:20:00]  Verifer returned sat in 14.643253 secs.
[01/10 07:20:00]  sf_get_cex returned in 14.739446 secs.
[01/10 07:20:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.433094e+08        9.433091e+08      9.433094e+08       0.987061       0.987549      9.433091e+08        0.987061                0.000000       93.948242      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08                   0.0            207.896484  274.077637      174.077637       1.0
1        9.433095e+08        9.433093e+08      9.433095e+08  113236.246338     112.961182      9.433093e+08        0.987061                0.987061       94.935303      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08                   0.0            207.896484  197.168213      187.038818       1.0
2        9.433096e+08        9.433094e+08      9.433096e+08  114146.397461     113.948242      9.433094e+08        1.974121                0.987061       99.012939      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08                   0.0            207.896484  202.961182      200.000000       1.0
3        9.433097e+08        9.433095e+08      9.433097e+08  118230.814209     118.025879      9.433095e+08       20.000000                1.974121      100.000000      103.948242                0.0                2.0                  0.0                  2.0  -9.420881e+08                   0.0            207.896484  200.000000      200.000000       1.0
4        9.433099e+08        9.433095e+08      9.433099e+08  119232.939453     119.012939      9.433095e+08       39.012939               20.000000      100.000000      102.961182                0.0                2.0                  0.0                  2.0  -9.420881e+08                   0.0            205.922363  300.000000      200.000000       1.0
5        9.433100e+08        9.433096e+08      9.433100e+08  119351.952393     119.012939      9.433096e+08       58.025879               39.012939      100.000000      100.987061                1.0                3.0                  1.0                  2.0  -9.420881e+08                 100.0            201.974121  299.012939      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=233631/4096, alpha=77877/4096, buf_size=200.[0m
[01/10 07:20:00]  --------------------------------------------------------------------------------
[01/10 07:20:00]  Iteration: 100 (0 solution, 99 counterexamples)
[01/10 07:58:32]  Generator returned sat in 2306.406442 secs.
[01/10 07:58:32]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 1max_c + -1max_buffer_bytes + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 07:58:34]  Improved number of small numbers from 87 to 90 out of a max of 133
[01/10 07:58:34]  Verifer returned sat in 1.433136 secs.
[01/10 07:58:34]  sf_get_cex returned in 1.517943 secs.
[01/10 07:58:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.432924e+08        9.432921e+08      9.432924e+08       0.986816       0.987305      9.432921e+08        0.000000                0.000000       98.396027      105.428711                2.0                4.0                  2.0                  2.0  -9.420881e+08            196.792053            210.857422  300.000000           200.0       3.0
1        9.432925e+08        9.432923e+08      9.432925e+08  118202.496338     117.902496      9.432923e+08       17.902496                0.000000       98.396027      105.428711                0.0                2.0                  2.0                  2.0  -9.420881e+08            196.792053            210.857422  203.824860           200.0       1.0
2        9.432926e+08        9.432924e+08      9.432926e+08  118124.223694     117.902496      9.432924e+08       35.804993               17.902496       98.766174      105.428711                1.0                3.0                  2.0                  2.0  -9.420881e+08            197.532349            210.857422  203.701477           200.0       2.0
3        9.432928e+08        9.432924e+08      9.432928e+08  118512.150513     118.272644      9.432924e+08       54.077637               35.804993       98.766174      103.824860                2.0                4.0                  2.0                  2.0  -9.420881e+08            197.532349            207.649719  300.000000           200.0       3.0
4        9.432929e+08        9.432925e+08      9.432929e+08  118626.721680     118.272644      9.432925e+08       72.350281               54.077637       98.766174      101.974121                1.0                3.0                  2.0                  2.0  -9.420881e+08            197.532349            203.948242  299.876617           200.0       2.0
5        9.432930e+08        9.432927e+08      9.432930e+08  118644.870941     118.272644      9.432927e+08       90.622925               72.350281       98.889557      101.974121                1.0                3.0                  2.0                  2.0  -9.420881e+08            197.779114            203.948242  206.662659           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=2382903/32768, alpha=159797/8192, buf_size=200.[0m
[01/10 07:58:34]  --------------------------------------------------------------------------------
[01/10 07:58:34]  Iteration: 101 (0 solution, 100 counterexamples)
[01/10 09:36:05]  Generator returned sat in 5845.341071 secs.
[01/10 09:36:05]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + 1min_buffer_bytes + 1max_buffer_bytes + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 09:36:14]  Improved gap from 0.0 to 48.4375
[01/10 09:36:15]  Improved number of small numbers from 75 to 88 out of a max of 134
[01/10 09:36:15]  Verifer returned sat in 9.940211 secs.
[01/10 09:36:15]  sf_get_cex returned in 10.030870 secs.
[01/10 09:36:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t       queue_t  bottle_queue_t  qdelay_t
0        9.432922e+08        9.432922e+08      9.432922e+08       0.986572       0.987305      9.432922e+08         0.15625                 0.00000          71.875      197.945801                0.0                2.0                  0.0             2.000244  -9.420880e+08                 0.000            395.939928  9.313226e-10        0.000000       1.0
1        9.432922e+08        9.432922e+08      9.432922e+08   54687.656247      54.687500      9.432922e+08         0.15625                 0.15625          71.875      197.945801                1.0                3.0                  1.0             2.000244  -9.420880e+08                71.875            395.939928  5.468750e+01        0.000000       2.0
2        9.432922e+08        9.432922e+08      9.432922e+08   35992.343757      35.937500      9.432922e+08         0.15625                 0.15625          71.875      197.945801                0.0                1.0                  1.0             2.000244  -9.420879e+08                71.875            395.939928  3.593750e+01      -12.500000       0.0
3        9.432923e+08        9.432923e+08      9.432923e+08   54723.593747      54.687500      9.432923e+08         0.15625                 0.15625          71.875      197.945801                0.0                1.0                  1.0             2.000244  -9.420879e+08                71.875            395.939928  4.218750e+01       -6.250000       0.0
4        9.432924e+08        9.432923e+08      9.432924e+08   54729.843747      54.687500      9.432923e+08         0.15625                 0.15625          71.875      197.945801                0.0                1.0                  1.0             2.000244  -9.420878e+08                71.875            395.939928  4.843750e+01        0.000000       0.0
5        9.432924e+08        9.432924e+08      9.432924e+08   54736.093747      54.687500      9.432924e+08         0.15625                 0.15625          71.875      197.945801                0.0                2.0                  1.0             2.000244  -9.420878e+08                71.875            395.939928  5.468750e+01      -45.312287       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=18454937617/1073741824, buf_size=200.[0m
[01/10 09:36:15]  --------------------------------------------------------------------------------
[01/10 09:36:15]  Iteration: 102 (0 solution, 101 counterexamples)
[01/10 09:45:01]  Generator returned sat in 519.786660 secs.
[01/10 09:45:01]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + 1min_buffer_bytes + -1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 09:45:06]  Improved gap from 0.029985007496251874 to 100
[01/10 09:45:08]  Improved number of small numbers from 75 to 75 out of a max of 134
[01/10 09:45:08]  Verifer returned sat in 6.652862 secs.
[01/10 09:45:08]  sf_get_cex returned in 6.744255 secs.
[01/10 09:45:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.432131e+08        9.432129e+08      9.432131e+08       0.986572       0.987305      9.432129e+08        0.986572                0.000000       90.411072      100.328857                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            200.657715  199.671143      199.671143       1.0
1        9.432132e+08        9.432129e+08      9.432132e+08  100406.193604     100.205536      9.432129e+08        0.986572                0.986572       90.411072      100.328857                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            200.657715  271.356537      199.876678       1.0
2        9.432133e+08        9.432131e+08      9.432133e+08  100477.878998     100.205536      9.432131e+08        1.068787                0.986572       90.411072      100.328857                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            200.657715  200.246643      200.000000       1.0
3        9.432134e+08        9.432132e+08      9.432134e+08  100406.851318     100.205536      9.432132e+08        1.274323                1.068787       90.493286      100.328857                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            200.657715  200.000000      200.000000       1.0
4        9.432135e+08        9.432132e+08      9.432135e+08  100489.024567     100.287750      9.432132e+08        1.562073                1.274323       90.493286      100.246643                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            200.493286  300.000000      200.000000       1.0
5        9.432136e+08        9.432133e+08      9.432136e+08  100589.312317     100.287750      9.432133e+08        1.849823                1.562073       90.493286      100.082214                1.0                3.0                  1.0                  2.0  -9.420876e+08             90.493286            200.164429  299.917786      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=28287/32768, alpha=320945/32768, buf_size=200.[0m
[01/10 09:45:08]  --------------------------------------------------------------------------------
[01/10 09:45:08]  Iteration: 103 (0 solution, 102 counterexamples)
[01/10 10:38:49]  Generator returned sat in 3215.880022 secs.
[01/10 10:38:49]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + -1min_buffer_bytes + 1max_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 10:39:09]  Improved gap from 0.4166666666666667 to 100
[01/10 10:39:09]  Improved number of small numbers from 103 to 134 out of a max of 134
[01/10 10:39:09]  Verifer returned sat in 19.637961 secs.
[01/10 10:39:09]  sf_get_cex returned in 19.744890 secs.
[01/10 10:39:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.432131e+08        9.432128e+08      9.432131e+08       0.986328       0.987061      9.432128e+08        0.000000                0.000000       94.958984      102.958740                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            205.917480  278.935303      185.040771       1.0
1        9.432132e+08        9.432129e+08      9.432132e+08  114251.591553     113.972656      9.432129e+08        0.000000                0.000000       94.958984      102.958740                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            205.917480  292.907959      199.013428       1.0
2        9.432133e+08        9.432131e+08      9.432133e+08  114265.564209     113.972656      9.432131e+08       12.986084                0.000000       96.978516      102.958740                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            205.917480  202.958984      200.000000       1.0
3        9.432134e+08        9.432132e+08      9.432134e+08  116208.132568     115.992188      9.432132e+08       28.978271               12.986084       98.473633      102.958740                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            205.917480  200.000000      200.000000       1.0
4        9.432135e+08        9.432132e+08      9.432135e+08  117716.282959     117.487305      9.432132e+08       46.465576               28.978271       98.473633      102.958740                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            205.917480  300.000000      200.000000       1.0
5        9.432136e+08        9.432133e+08      9.432136e+08  117833.770264     117.487305      9.432133e+08       63.952881               46.465576       98.473633      100.986328                1.0                3.0                  1.0                  2.0  -9.420876e+08             98.473633            201.972656  299.013672      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=261951/4096, alpha=9735/512, buf_size=200.[0m
[01/10 10:39:09]  --------------------------------------------------------------------------------
[01/10 10:39:09]  Iteration: 104 (0 solution, 103 counterexamples)
[01/10 10:43:15]  Generator returned sat in 240.330273 secs.
[01/10 10:43:15]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + -1min_buffer_bytes + 1max_buffer_bytes + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 10:43:16]  Improved number of small numbers from 133 to 133 out of a max of 133
[01/10 10:43:16]  Verifer returned sat in 0.473467 secs.
[01/10 10:43:16]  sf_get_cex returned in 0.536184 secs.
[01/10 10:43:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        9.432131e+08        9.432128e+08      9.432131e+08       0.986328       0.987061      9.432128e+08        0.986328                0.000000       94.958984      101.479492                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            202.958984  277.948975      184.054443       1.0
1        9.432132e+08        9.432129e+08      9.432132e+08  114251.591553     113.972656      9.432129e+08        0.986328                0.986328       94.958984      101.479492                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            202.958984  291.921631      198.027100       1.0
2        9.432133e+08        9.432131e+08      9.432133e+08  114265.564209     113.972656      9.432131e+08       12.986084                0.986328       96.978516      101.479492                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            202.958984  202.958984      200.000000       1.0
3        9.432134e+08        9.432132e+08      9.432134e+08  116208.132568     115.992188      9.432132e+08       28.978271               12.986084       98.473633      101.479492                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            202.958984  200.000000      200.000000       1.0
4        9.432135e+08        9.432132e+08      9.432135e+08  117716.282959     117.487305      9.432132e+08       46.465576               28.978271       98.473633      101.479492                0.0                2.0                  0.0                  2.0  -9.420876e+08              0.000000            202.958984  300.000000      200.000000       1.0
5        9.432136e+08        9.432133e+08      9.432136e+08  117833.770264     117.487305      9.432133e+08       63.952881               46.465576       98.473633      100.986328                1.0                3.0                  1.0                  2.0  -9.420876e+08             98.473633            201.972656  299.013672      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=257911/4096, alpha=9735/512, buf_size=200.[0m
[01/10 10:43:16]  --------------------------------------------------------------------------------
[01/10 10:43:16]  Iteration: 105 (0 solution, 104 counterexamples)
[01/10 11:30:09]  Generator returned sat in 2807.786765 secs.
[01/10 11:30:10]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 1max_c + -1max_buffer_bytes + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
