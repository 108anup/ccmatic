[01/06 18:08:21]  Namespace(infinite_buffer=False, finite_buffer=True, dynamic_buffer=False)
[01/06 18:08:22]  --------------------------------------------------------------------------------
[01/06 18:08:22]  Iteration: 1 (0 solution, 0 counterexamples)
[01/06 18:08:22]  Generator returned sat in 0.006376 secs.
[01/06 18:08:22]  Candidate solution: 
[1m[94mif (+ 1min_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_c + 1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_c + 1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/06 18:08:23]  Improved number of small numbers from 127 to 127 out of a max of 127
[01/06 18:08:23]  Verifer returned sat in 1.635995 secs.
[01/06 18:08:23]  sf_get_cex returned in 1.696972 secs.
[01/06 18:08:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0          100.000000         -136.638889        100.000000       0.194444       0.194444       -136.638889        0.000000                0.000000       49.805556      112.407407                2.0                4.0                  2.0             4.194444          100.0  236.638889           200.0       3.0
1          218.194444          -49.416667        218.194444  118431.083333     118.194444        -49.416667       18.194444                0.000000       49.805556      112.407407                2.0                4.0                  2.0             4.194444          100.0  249.416667           200.0       3.0
2          336.388889            0.000000        336.388889  118462.055556     118.194444          0.000000       36.388889               18.194444       49.805556      112.407407                2.0                4.0                  2.0             4.194444          100.0  300.000000           200.0       3.0
3          454.583333          100.000000        454.583333  118530.833333     118.194444        100.000000       54.583333               36.388889       59.159722      112.407407                2.0                4.0                  2.0             4.000000          100.0  300.000000           200.0       3.0
4          591.486111          200.000000        591.486111  137257.361111     136.902778        200.000000       91.486111               54.583333       67.327778      112.212963                2.0                4.0                  2.0             4.000000          100.0  300.000000           200.0       3.0
5          744.725000          324.990741        744.725000  153630.375000     153.238889        324.990741      144.725000               91.486111       81.247685      112.212963                1.0                3.0                  2.0             3.000000          100.0  275.009259           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=45551/360, alpha=223/12, buf_size=200.[0m
[01/06 18:08:23]  --------------------------------------------------------------------------------
[01/06 18:08:23]  Iteration: 2 (0 solution, 1 counterexamples)
[01/06 18:08:23]  Generator returned sat in 0.070519 secs.
[01/06 18:08:23]  Candidate solution: 
[1m[94mif (+ 1max_c + 1max_qdel + 1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 18:08:49]  Improved gap from 19.766233766233768 to 48.4375
[01/06 18:08:50]  Improved number of small numbers from 105 to 128 out of a max of 128
[01/06 18:08:50]  Verifer returned sat in 26.233124 secs.
[01/06 18:08:50]  sf_get_cex returned in 26.284079 secs.
[01/06 18:08:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       252274.683105       252269.016113     252274.683105       0.194092       0.194580     252269.016113             0.0                     0.0       97.263672     5750.999756                0.0                2.0                  0.0               5762.0     -48.826416   5.666992        5.569824       1.0
1       252323.217773       252269.113281     252323.217773   48540.334961      48.534668     252269.113281             0.0                     0.0       97.263672     5750.999756                0.0                2.0                  0.0               5762.0      -3.125000  54.104492       -0.194092       1.0
2       252371.752441       252323.412109     252371.752441   48588.772461      48.534668     252323.412109             0.0                     0.0       97.263672     5750.999756                0.0                1.0                  0.0               5762.0      48.437256  48.340332       -0.097168       0.0
3       252420.287109       252371.849609     252420.287109   48583.008301      48.534668     252371.849609             0.0                     0.0       97.263672     5750.999756                0.0                1.0                  0.0               5762.0      99.999756  48.437500        0.000000       0.0
4       252468.821777       252420.287109     252468.821777   48583.105469      48.534668     252420.287109             0.0                     0.0       97.263672     5750.999756                0.0                2.0                  0.0               5762.0     151.465088  48.534668        0.000000       1.0
5       252517.356445       252468.918945     252517.356445   48583.202637      48.534668     252468.918945             0.0                     0.0       97.263672     5750.999756                0.0                1.0                  0.0               5762.0     151.465332  48.437500      -51.465088       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=199/2048, buf_size=200.[0m
[01/06 18:08:50]  --------------------------------------------------------------------------------
[01/06 18:08:50]  Iteration: 3 (0 solution, 2 counterexamples)
[01/06 18:08:50]  Generator returned sat in 0.241815 secs.
[01/06 18:08:50]  Candidate solution: 
[1m[94mif (+ 1min_c + 1max_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + -1max_c + 1max_qdel + 1min_buffer + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 18:08:52]  Improved gap from 5.14556884765625 to 48.4375
[01/06 18:08:53]  Improved number of small numbers from 105 to 109 out of a max of 128
[01/06 18:08:53]  Verifer returned sat in 2.693699 secs.
[01/06 18:08:53]  sf_get_cex returned in 2.745175 secs.
[01/06 18:08:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       502523.626151       502523.626151     502523.626151       0.194092       0.194580     502523.626151             0.0                     0.0       99.571429           100.0                0.0                1.0                  0.0             2.964355     -53.303711   0.000000       -0.000140       0.0
1       502573.411865       502523.697580     502573.411865   49785.714286      49.785714     502523.697580             0.0                     0.0       99.571429           100.0                0.0                1.0                  0.0             2.964355      -3.125000  49.714286       -0.035714       0.0
2       502623.197580       502573.447754     502623.197580   49835.428571      49.785714     502573.447754             0.0                     0.0       99.571429           100.0                0.0                1.0                  0.0             2.964355      47.125000  49.749826        0.000000       0.0
3       502672.983294       502623.197580     502672.983294   49835.464111      49.785714     502623.197580             0.0                     0.0       99.571429           100.0                0.0                2.0                  0.0             2.964355      97.339111  49.785714       -0.000174       1.0
4       502722.769008       502673.019008     502722.769008   49835.500000      49.785714     502673.019008             0.0                     0.0       99.571429           100.0                0.0                1.0                  0.0             2.964355     147.553467  49.750000       -0.000105       0.0
5       502772.554722       502723.590576     502772.554722   49835.464286      49.785714     502723.590576             0.0                     0.0       99.571429           100.0                0.0                1.0                  0.0             2.964355     196.981934  48.964146       -0.785924       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1/28, buf_size=200.[0m
[01/06 18:08:53]  --------------------------------------------------------------------------------
[01/06 18:08:53]  Iteration: 4 (0 solution, 3 counterexamples)
[01/06 18:08:53]  Generator returned sat in 0.269197 secs.
[01/06 18:08:53]  Candidate solution: 
[1m[94mif (+ 1max_c + -1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + -1max_qdel + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1max_c + -1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:08:55]  Improved number of small numbers from 56 to 62 out of a max of 127
[01/06 18:08:55]  Verifer returned sat in 1.514979 secs.
[01/06 18:08:55]  sf_get_cex returned in 1.568269 secs.
[01/06 18:08:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       502321.246063       502021.149017     502321.246063       0.194092       0.194336     502021.149017        0.097046                0.000000       83.763713      146.012451                0.0                2.0                  0.0             3.096924     349.173492  300.000000           200.0       1.0
1       502471.915894       502148.482351     502471.915894  150969.927368     150.669830     502148.482351       50.766876                0.097046       83.763713      146.012451                1.0                3.0                  1.0             3.096924     349.173492  272.666667           200.0       2.0
2       502622.585724       502275.233409     502622.585724  150993.263865     150.669830     502275.233409      101.436707               50.766876       84.694797      146.012451                1.0                3.0                  1.0             3.000000     349.173492  245.915609           200.0       2.0
3       502775.117723       502321.149017     502775.117723  152879.351691     152.531999     502321.149017      153.968706              101.436707       84.694797      146.012451                2.0                4.0                  2.0             3.000000     349.173492  300.000000           200.0       3.0
4       502927.649723       502421.149017     502927.649723  152985.968082     152.531999     502421.149017      206.500705              153.968706       84.694797      133.333333                2.0                4.0                  2.0             3.000000     349.173492  300.000000           200.0       3.0
5       503080.181722       502528.735524     503080.181722  153038.500081     152.531999     502528.735524      259.032705              206.500705       84.694797      126.751058                1.0                3.0                  2.0             3.000000     349.173492  292.413493           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=5118341/24576, alpha=1657169/98304, buf_size=200.[0m
[01/06 18:08:55]  --------------------------------------------------------------------------------
[01/06 18:08:55]  Iteration: 5 (0 solution, 4 counterexamples)
[01/06 18:08:56]  Generator returned sat in 0.713798 secs.
[01/06 18:08:56]  Candidate solution: 
[1m[94mif (+ 1min_c + 1max_c + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_c + 1max_c + -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 18:09:08]  Improved gap from 0.0 to 48.4375
[01/06 18:09:08]  Improved number of small numbers from 84 to 128 out of a max of 128
[01/06 18:09:08]  Verifer returned sat in 12.684687 secs.
[01/06 18:09:08]  sf_get_cex returned in 12.736344 secs.
[01/06 18:09:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       502595.614746       502583.658203     502595.614746       0.193848       0.194336     502583.658203             0.0                     0.0       36.675049           100.0                1.0                3.0                  1.0             2.903076     297.708008  11.956543       11.956543       2.0
1       502632.192871       502583.755371     502632.192871   36590.081543      36.578125     502583.755371             0.0                     0.0       36.675049           100.0                2.0                4.0                  2.0             2.903076     349.173340  48.437500        0.000000       3.0
2       502668.770996       502632.192871     502668.770996   36626.562500      36.578125     502632.192871             0.0                     0.0       36.675049           100.0                0.0                2.0                  2.0             2.903076     400.735840  36.578125      -11.859375       1.0
3       502705.349121       502680.630615     502705.349121   36614.703125      36.578125     502680.630615             0.0                     0.0       36.675049           100.0                0.0                1.0                  2.0             2.903076     451.298340  24.718506      -24.718750       0.0
4       502741.927246       502730.067871     502741.927246   36602.843506      36.578125     502730.067871             0.0                     0.0       36.675049           100.0                0.0                1.0                  2.0             2.903076     502.860840  11.859375      -36.578125       0.0
5       502778.505371       502778.505371     502778.505371   36589.984375      36.578125     502778.505371             0.0                     0.0       38.950000           100.0                0.0                1.0                  2.0             2.903076     502.861084   0.000000      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=397/4096, buf_size=200.[0m
[01/06 18:09:09]  --------------------------------------------------------------------------------
[01/06 18:09:09]  Iteration: 6 (0 solution, 5 counterexamples)
[01/06 18:09:10]  Generator returned sat in 0.841738 secs.
[01/06 18:09:10]  Candidate solution: 
[1m[94mif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_c + 1max_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 18:09:11]  Improved number of small numbers from 65 to 73 out of a max of 127
[01/06 18:09:11]  Verifer returned sat in 1.088519 secs.
[01/06 18:09:11]  sf_get_cex returned in 1.140843 secs.
[01/06 18:09:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       502668.758881       502468.674072     502668.758881       0.193848       0.194336     502468.674072        0.012115                0.000000       91.915192      100.048340                0.0                2.0                  0.0            95.915283   -1527.608325  200.072693           200.0       1.0
1       502768.770996       502568.698242     502768.770996  100212.200287     100.012115     502568.698242        0.024231                0.012115       91.915192      100.048340                1.0                3.0                  1.0            95.915283   -1527.608325  200.048523           200.0       2.0
2       502952.601379       502568.746765     502952.601379  184030.456055     183.830383     502568.746765       83.854614                0.024231       91.915192      100.048340                1.0                3.0                  1.0             3.000000   -1527.608325  300.000000           200.0       2.0
3       503136.431763       502668.746765     503136.431763  184214.237915     183.830383     502668.746765      167.684998               83.854614       91.915192      100.036346                2.0                4.0                  2.0             3.000000   -1527.608325  300.000000           200.0       3.0
4       503320.262146       502768.746765     503320.262146  184298.068298     183.830383     502768.746765      251.515381              167.684998       91.915192      100.024231                2.0                4.0                  2.0             3.000000   -1527.608325  300.000000           200.0       3.0
5       503504.092529       502944.455994     503504.092529  184381.898682     183.830383     502944.455994      335.345764              251.515381       93.927307      100.024231                1.0                3.0                  2.0             3.000000   -1527.608325  224.290771           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=1373477/4096, alpha=33165/4096, buf_size=200.[0m
[01/06 18:09:11]  --------------------------------------------------------------------------------
[01/06 18:09:11]  Iteration: 7 (0 solution, 6 counterexamples)
[01/06 18:09:12]  Generator returned sat in 0.977885 secs.
[01/06 18:09:12]  Candidate solution: 
[1m[94mif (+ 1min_c + -1min_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_qdel + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 18:09:17]  Improved gap from 0.0 to 48.4375
[01/06 18:09:17]  Improved number of small numbers from 97 to 100 out of a max of 128
[01/06 18:09:17]  Verifer returned sat in 5.209530 secs.
[01/06 18:09:17]  sf_get_cex returned in 5.261454 secs.
[01/06 18:09:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       503161.232734       503161.195970     503161.232734       0.193604       0.194092     503161.195970        0.036765                0.000000       39.713235           100.0                0.0                2.0                  0.0                  2.0   -2220.094238   0.000000       -0.036709       1.0
1       503200.990087       503161.232734     503200.990087   39757.389706      39.757353     503161.232734        0.036765                0.036765       39.713235           100.0                0.0                1.0                  0.0                  1.0   -2168.531794  39.720588       -8.716912       0.0
2       503240.747440       503209.670234     503240.747440   39797.110294      39.757353     503209.670234        0.036765                0.036765       39.713235           100.0                0.0                1.0                  0.0                  1.0   -2116.969294  31.040441      -17.397059       0.0
3       503280.504793       503258.107734     503280.504793   39788.430147      39.757353     503258.107734        0.036765                0.036765       39.713235           100.0                0.0                1.0                  0.0                  1.0   -2065.406982  22.360294      -26.077394       0.0
4       503320.262146       503311.545234     503320.262146   39779.750000      39.757353     503311.545234        0.036765                0.036765       39.713235           100.0                0.0                1.0                  0.0                  1.0   -2018.844294   8.680147      -39.757353       0.0
5       503360.019499       503359.982734     503360.019499   39766.069853      39.757353     503359.982734        0.036765                0.036765       39.750000           100.0                0.0                1.0                  0.0                  1.0   -1967.281982   0.000000      -48.437688       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=5413/272, buf_size=200.[0m
[01/06 18:09:17]  --------------------------------------------------------------------------------
[01/06 18:09:17]  Iteration: 8 (0 solution, 7 counterexamples)
[01/06 18:09:20]  Generator returned sat in 2.430858 secs.
[01/06 18:09:20]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 18:09:32]  Improved gap from 19.9031982421875 to 48.4375
[01/06 18:09:33]  Improved number of small numbers from 71 to 78 out of a max of 128
[01/06 18:09:33]  Verifer returned sat in 12.777110 secs.
[01/06 18:09:33]  sf_get_cex returned in 12.829215 secs.
[01/06 18:09:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       503141.678837       503139.912845     503141.678837       0.193604       0.194092     503139.912845        0.096802                0.000000       99.068604           100.0                2.0                4.0                  2.0                  2.0   -2198.774414   1.669189        1.669181       3.0
1       503191.213138       503141.678837     503191.213138   49536.067749      49.534302     503141.678837        0.096802                0.096802       99.068604           100.0                0.0                1.0                  2.0                  1.0   -2149.978027  49.437500       -0.000131       0.0
2       503240.747440       503191.213138     503240.747440   49583.836060      49.534302     503191.213138        0.096802                0.096802       99.068604           100.0                0.0                1.0                  2.0                  1.0   -2099.512198  49.437500        0.000000       0.0
3       503290.281742       503240.650638     503290.281742   49583.836060      49.534302     503240.650638        0.096802                0.096802       99.068604           100.0                0.0                2.0                  2.0                  1.0   -2049.046500  49.534302        0.000000       1.0
4       503339.816044       503290.184940     503339.816044   49583.932861      49.534302     503290.184940        0.096802                0.096802       99.068604           100.0                0.0                2.0                  2.0                  1.0   -1998.580811  49.534302       -0.000009       1.0
5       503389.350345       503339.816162     503389.350345   49583.932861      49.534302     503339.816162        0.096802                0.096802       99.068604           100.0                0.0                1.0                  2.0                  1.0   -1998.580811  49.437382      -50.465707       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=20381/1024, buf_size=200.[0m
[01/06 18:09:33]  --------------------------------------------------------------------------------
[01/06 18:09:33]  Iteration: 9 (0 solution, 8 counterexamples)
[01/06 18:09:35]  Generator returned sat in 1.928136 secs.
[01/06 18:09:35]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_qdel + -1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 18:09:36]  Improved number of small numbers from 77 to 85 out of a max of 127
[01/06 18:09:36]  Verifer returned sat in 1.058114 secs.
[01/06 18:09:36]  sf_get_cex returned in 1.109061 secs.
[01/06 18:09:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       503830.039921       503549.991581     503830.039921       0.193115       0.194092     503549.991581        0.012207                0.000000       80.024170      240.036133                2.0                4.0                  2.0             3.011963   -2688.889396  280.036133      199.999878       3.0
1       503930.052006       503710.064091     503930.052006  100292.133301     100.012085     503710.064091        0.024170                0.012207       80.036255      240.036133                2.0                4.0                  2.0             3.011963   -2688.889396  219.963745      200.000000       3.0
2       504030.076175       503790.027836     504030.076175  100244.157837     100.024170     503790.027836        0.048340                0.024170       80.036255      240.036133                1.0                3.0                  2.0             3.000000   -2688.889396  240.000000      200.000000       2.0
3       504130.100345       503870.136600     504130.100345  100264.218262     100.024170     503870.136600        0.072510                0.048340       80.036255      160.072510                1.0                3.0                  2.0             3.000000   -2688.889396  259.891235      200.000000       2.0
4       504230.124515       503950.112430     504230.124515  100284.133667     100.024170     503950.112430        0.096680                0.072510       80.036255      120.024170                1.0                3.0                  2.0             3.000000   -2688.889396  279.915405      200.000000       2.0
5       504330.148685       504030.039921     504330.148685  100304.182007     100.024170     504030.039921        0.120850                0.096680       80.036255      106.658610                1.0                3.0                  2.0             3.000000   -2688.889396  299.987915      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=99/1024, alpha=163741/8192, buf_size=200.[0m
[01/06 18:09:36]  --------------------------------------------------------------------------------
[01/06 18:09:36]  Iteration: 10 (0 solution, 9 counterexamples)
[01/06 18:09:43]  Generator returned sat in 6.641946 secs.
[01/06 18:09:44]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1max_qdel + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + 1max_c + -1min_qdel + 1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:09:47]  Improved gap from 7.049881235154395 to 100
[01/06 18:09:47]  Improved number of small numbers from 59 to 66 out of a max of 128
[01/06 18:09:48]  Verifer returned sat in 3.942093 secs.
[01/06 18:09:48]  sf_get_cex returned in 3.995708 secs.
[01/06 18:09:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       503750.184723       503550.015747     503750.184723       0.193115       0.194092     503550.015747        0.000000                0.000000       50.030174      100.181152                0.0                2.0                  0.0             4.011963   -2688.889396  200.168976           200.0       1.0
1       503850.196793       503650.039886     503850.196793  100212.238678     100.012070     503650.039886        0.012070                0.000000       50.030174      100.181152                1.0                3.0                  1.0             4.011963   -2688.889396  200.144836           200.0       2.0
2       503950.208862       503650.184723     503950.208862  100212.226608     100.012070     503650.184723        0.024139                0.012070       50.030174      100.168976                2.0                4.0                  2.0             4.011963   -2688.889396  300.000000           200.0       3.0
3       504050.220932       503750.184723     504050.220932  100312.093842     100.012070     503750.184723        0.036209                0.024139       50.042244      100.084488                2.0                4.0                  2.0             4.000000   -2688.889396  300.000000           200.0       3.0
4       504150.257141       503950.112305     504150.257141  100336.245316     100.036209     503950.112305        0.072418                0.036209       99.975861      100.084488                1.0                3.0                  2.0             3.000000   -2688.889396  200.072418           200.0       2.0
5       504250.281281       504050.039795     504250.281281  100224.284241     100.024139     504050.039795        0.096558                0.072418       99.975861      100.084488                1.0                3.0                  2.0             3.000000   -2688.889396  200.144928           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=5537/65536, alpha=791/16384, buf_size=200.[0m
[01/06 18:09:48]  --------------------------------------------------------------------------------
[01/06 18:09:48]  Iteration: 11 (0 solution, 10 counterexamples)
[01/06 18:09:49]  Generator returned sat in 1.437829 secs.
[01/06 18:09:49]  Candidate solution: 
[1m[94mif (+ 1min_c + 1max_qdel + -1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 18:09:52]  Improved gap from 6.642709900272996 to 48.4375
[01/06 18:09:52]  Improved number of small numbers from 91 to 128 out of a max of 128
[01/06 18:09:52]  Verifer returned sat in 2.383012 secs.
[01/06 18:09:52]  sf_get_cex returned in 2.434610 secs.
[01/06 18:09:52]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t   queue_t  bottle_queue_t  qdelay_t
0        504001.94458        504001.94458      504001.94458       0.193115       0.194092      504001.94458             0.0                     0.0         49.4375           100.0                2.0                4.0                  2.0              2.04834   -2688.889404   0.00000         0.00000       3.0
1        504051.38208        504001.94458      504051.38208   49437.500000      49.437500      504001.94458             0.0                     0.0         49.4375           100.0                2.0                4.0                  2.0              2.04834   -2638.326904  49.43750         0.00000       3.0
2        504100.81958        504051.38208      504100.81958   49486.937500      49.437500      504051.38208             0.0                     0.0         49.4375           100.0                0.0                2.0                  2.0              2.04834   -2587.764404  49.43750         0.00000       1.0
3        504150.25708        504100.81958      504150.25708   49486.937500      49.437500      504100.81958             0.0                     0.0         49.4375           100.0                0.0                2.0                  2.0              2.04834   -2537.201904  49.43750         0.00000       1.0
4        504199.69458        504150.30542      504199.69458   49486.937500      49.437500      504150.30542             0.0                     0.0         49.4375           100.0                0.0                1.0                  2.0              2.04834   -2488.841064  49.38916        -2.20166       0.0
5        504249.13208        504201.89624      504249.13208   49486.889160      49.437500      504201.89624             0.0                     0.0         49.4375           100.0                0.0                1.0                  2.0              2.04834   -2488.841064  47.23584       -52.76416       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40861/2048, buf_size=200.[0m
[01/06 18:09:52]  --------------------------------------------------------------------------------
[01/06 18:09:52]  Iteration: 12 (0 solution, 11 counterexamples)
[01/06 18:09:54]  Generator returned sat in 1.595604 secs.
[01/06 18:09:54]  Candidate solution: 
[1m[94mif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_c + -1max_qdel + -1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1max_c + -1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/06 18:09:58]  Improved gap from 49.4375 to 100
[01/06 18:09:59]  Improved number of small numbers from 65 to 79 out of a max of 128
[01/06 18:09:59]  Verifer returned sat in 4.464998 secs.
[01/06 18:09:59]  sf_get_cex returned in 4.514367 secs.
[01/06 18:09:59]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       213335.654124       213036.509288     213335.654124       0.192871       0.194092     213036.509288        0.048340                0.000000        5.048340      100.048096                0.0                1.0                  0.0              2.04834   -2587.764404  299.096497      199.951660       0.0
1       213355.605845       213216.654124     213355.605845   20250.866028      19.951721     213216.654124        0.048340                0.048340       90.072418      100.048096                0.0                2.0                  0.0              2.00000   -2587.764404  138.903381      119.903381       1.0
2       213535.750682       213335.654124     213535.750682  180283.788147     180.144836     213335.654124        0.096558                0.048340       99.714945      100.048096                0.0                2.0                  0.0              2.00000   -2587.764404  200.000000      200.000000       1.0
3       213735.180573       213435.654124     213735.180573  199629.987508     199.429891     213435.654124       99.526449                0.096558       99.786209      100.048096                0.0                2.0                  0.0              2.00000   -2587.764404  200.000000      200.000000       1.0
4       213934.752991       213435.654124     213934.752991  199871.944661     199.572418     213435.654124      199.098867               99.526449       99.786209      100.000000                0.0                2.0                  0.0              2.00000   -2587.764404  300.000000      200.000000       1.0
5       214134.325409       213535.750488     214134.325409  200071.517080     199.572418     213535.750488      298.671285              199.098867       99.786209      100.000000                1.0                3.0                  1.0              2.00000   -2587.764404  299.903636      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=14677915/49152, alpha=326889/16384, buf_size=200.[0m
[01/06 18:09:59]  --------------------------------------------------------------------------------
[01/06 18:09:59]  Iteration: 13 (0 solution, 12 counterexamples)
[01/06 18:10:06]  Generator returned sat in 6.359749 secs.
[01/06 18:10:06]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 18:10:13]  Improved gap from 2.6519775390625 to 48.4375
[01/06 18:10:13]  Improved number of small numbers from 89 to 99 out of a max of 128
[01/06 18:10:13]  Verifer returned sat in 7.589034 secs.
[01/06 18:10:13]  sf_get_cex returned in 7.641001 secs.
[01/06 18:10:13]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       213285.654124       213285.654124     213285.654124       0.192871       0.194092     213285.654124             0.0                     0.0       99.999756    32160.999756                2.0                4.0                  2.0              2.04834   -2637.812744   0.000000       -0.000122       3.0
1       213335.605906       213285.702342     213335.605906   49951.782227      49.951782     213285.702342             0.0                     0.0       99.999756    32160.999756                0.0                1.0                  2.0              2.04834   -2587.764404  49.903564        0.000000       0.0
2       213385.557688       213335.654124     213385.557688   50001.685791      49.951782     213335.654124             0.0                     0.0       99.999756    32160.999756                0.0                1.0                  2.0              2.04834   -2540.889404  49.903564       -3.173218       0.0
3       213435.509471       213388.730906     213435.509471   50001.685791      49.951782     213388.730906             0.0                     0.0       99.999756    32160.999756                0.0                1.0                  2.0              2.04834   -2489.326904  46.778564       -1.658936       0.0
4       213485.461253       213437.168406     213485.461253   49998.560791      49.951782     213437.168406             0.0                     0.0       99.999756    32160.999756                0.0                1.0                  2.0              2.04834   -2437.764404  48.292847       -0.144653       0.0
5       213535.413035       213485.605957     213535.413035   50000.075073      49.951782     213485.605957             0.0                     0.0       99.999756    32160.999756                0.0                1.0                  2.0              2.04834   -2387.571777  49.807078       -0.000244       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=197/4096, buf_size=200.[0m
[01/06 18:10:13]  --------------------------------------------------------------------------------
[01/06 18:10:13]  Iteration: 14 (0 solution, 13 counterexamples)
[01/06 18:10:16]  Generator returned sat in 2.122871 secs.
[01/06 18:10:16]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + -1max_c + -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:10:21]  Improved gap from 16.9339599609375 to 100
[01/06 18:10:21]  Improved number of small numbers from 97 to 99 out of a max of 128
[01/06 18:10:21]  Verifer returned sat in 5.439428 secs.
[01/06 18:10:21]  sf_get_cex returned in 5.490012 secs.
[01/06 18:10:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       213179.105638       212896.207814     213179.105638       0.192871       0.193848     212896.207814        0.000000                0.000000       45.586172      122.746991                2.0                4.0                  2.0             2.092041   -2331.264136  282.897823           200.0       3.0
1       213279.197827       212987.564536     213279.197827  100375.087324     100.092190     212987.564536        0.092190                0.000000       45.678361      122.746991                2.0                4.0                  2.0             2.092041   -2331.264136  291.541101           200.0       3.0
2       213379.474396       213079.105638     213379.474396  100568.201793     100.276569     213079.105638        0.368758                0.092190       60.965941      122.746991                2.0                4.0                  2.0             2.092041   -2331.264136  300.000000           200.0       3.0
3       213510.326124       213262.925356     213510.326124  131152.097311     130.851729     213262.925356       31.220487                0.368758       91.909859      122.746991                1.0                3.0                  2.0             2.092041   -2331.264136  216.180282           200.0       2.0
4       213685.225996       213354.835215     213685.225996  175147.272727     174.899872     213354.835215      106.120359               31.220487       91.909859      122.746991                1.0                3.0                  2.0             2.092041   -2331.264136  224.270423           200.0       2.0
5       213860.125868       213387.564453     213860.125868  175230.262740     174.899872     213387.564453      181.020230              106.120359       91.909859      122.746991                1.0                3.0                  2.0             2.092041   -2331.264136  291.541185           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=3, loss_amount=706524/3905, alpha=34832/3905, buf_size=200.[0m
[01/06 18:10:22]  --------------------------------------------------------------------------------
[01/06 18:10:22]  Iteration: 15 (0 solution, 14 counterexamples)
[01/06 18:10:26]  Generator returned sat in 4.116373 secs.
[01/06 18:10:26]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1max_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:10:35]  Improved gap from 16.742081447963802 to 100
[01/06 18:10:36]  Improved number of small numbers from 59 to 68 out of a max of 128
[01/06 18:10:36]  Verifer returned sat in 9.737511 secs.
[01/06 18:10:36]  sf_get_cex returned in 9.788977 secs.
[01/06 18:10:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       213201.478794       212901.478794     213201.478794       0.192627       0.193604     212901.478794        0.000000                0.000000       50.024109      200.337402                0.0                1.0                  0.0              2.97583   -2331.264136  300.000000           200.0       0.0
1       213301.502902       213001.575229     213301.502902  100324.108887     100.024109     213001.575229        0.024109                0.000000       50.048218      200.337402                0.0                2.0                  0.0              2.97583   -2331.264136  299.903564           200.0       1.0
2       213401.575229       213101.719882     213401.575229  100372.254333     100.072327     213101.719882        0.096436                0.024109       66.747030      200.337402                1.0                3.0                  1.0              2.97583   -2331.264136  299.758911           200.0       2.0
3       213535.045180       213201.888645     213535.045180  133769.805705     133.469950     213201.888645       33.566386                0.096436       75.102463      200.313416                1.0                3.0                  1.0              2.97583   -2331.264136  299.590149           200.0       2.0
4       213685.225996       213400.948398     213685.225996  150513.973185     150.180817     213400.948398       83.747203               33.566386       99.893921      199.686584                1.0                3.0                  1.0              2.97583   -2331.264136  200.530396           200.0       2.0
5       213884.989729       213401.575229     213884.989729  200048.010508     199.763733     213401.575229      183.510935               83.747203       99.893921      133.333333                1.0                3.0                  1.0              2.97583   -2331.264136  299.903564           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=3, loss_amount=18037489/98304, alpha=395/16384, buf_size=200.[0m
[01/06 18:10:36]  --------------------------------------------------------------------------------
[01/06 18:10:36]  Iteration: 16 (0 solution, 15 counterexamples)
[01/06 18:10:53]  Generator returned sat in 16.034830 secs.
[01/06 18:10:53]  Candidate solution: 
[1m[94mif (+ -1min_c + 1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + -1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 18:10:54]  Improved gap from 0.0 to 100
[01/06 18:10:55]  Improved number of small numbers from 97 to 97 out of a max of 128
[01/06 18:10:55]  Verifer returned sat in 1.663389 secs.
[01/06 18:10:55]  sf_get_cex returned in 1.715691 secs.
[01/06 18:10:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       313574.740391       313474.095947     313574.740391       0.192627       0.193604     313474.095947        0.022222                0.000000       99.733333      100.255556                0.0                1.0                  0.0                  2.0 -102803.881289  100.622222      100.622222       0.0
1       313774.207058       313474.095947     313774.207058  199567.311111     199.466667     313474.095947        0.111111                0.022222       99.733333      100.255556                0.0                1.0                  0.0                  1.0 -102803.881289  300.000000      200.000000       0.0
2       313973.673724       313574.740391     313973.673724  199766.777778     199.466667     313574.740391       99.577778                0.111111       99.733333      100.255556                0.0                2.0                  0.0                  1.0 -102803.881289  299.355556      200.000000       1.0
3       314173.140391       313674.562613     314173.140391  199865.600000     199.466667     313674.562613      199.044444               99.577778       99.733333      100.233333                1.0                3.0                  1.0                  1.0 -102803.881289  299.533333      200.000000       2.0
4       314372.607058       313874.073724     314372.607058  199965.244444     199.466667     313874.073724      298.511111              199.044444       99.994444      100.233333                1.0                3.0                  1.0                  1.0 -102803.881289  200.022222      200.000000       2.0
5       314572.595947       313874.095947     314572.595947  200487.422222     199.988889     313874.095947      398.500000              298.511111       99.994444      100.000000                2.0                4.0                  2.0                  1.0 -102803.881289  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=7171/18, alpha=1/45, buf_size=200.[0m
[01/06 18:10:55]  --------------------------------------------------------------------------------
[01/06 18:10:55]  Iteration: 17 (0 solution, 16 counterexamples)
[01/06 18:11:02]  Generator returned sat in 6.296636 secs.
[01/06 18:11:02]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + -1max_c + -1max_qdel + 1min_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 18:11:03]  Improved gap from 19.445556640625 to 100
[01/06 18:11:03]  Improved number of small numbers from 118 to 128 out of a max of 128
[01/06 18:11:03]  Verifer returned sat in 1.530592 secs.
[01/06 18:11:03]  sf_get_cex returned in 1.582300 secs.
[01/06 18:11:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       313773.721924       313474.828125     313773.721924       0.192383       0.193359     313474.828125        0.048096                0.000000       86.374756      149.446777                0.0                2.0                  0.0                  2.0 -102903.459229  298.845703           200.0       1.0
1       313873.770020       313673.673828     313873.770020  100346.989502     100.048096     313673.673828        0.096191                0.048096       99.422852      149.446777                1.0                3.0                  1.0                  2.0 -102903.459229  200.000000           200.0       2.0
2       313986.866211       313674.106689     313986.866211  113296.287598     113.096191     313674.106689       13.192383                0.096191       99.422852      149.446777                1.0                3.0                  1.0                  2.0 -102903.459229  299.567139           200.0       2.0
3       314099.962402       313773.721924     314099.962402  113408.950928     113.096191     313773.721924       26.288574               13.192383       99.422852      100.048096                1.0                3.0                  1.0                  2.0 -102903.459229  299.951904           200.0       2.0
4       314213.058594       313972.663818     314213.058594  113422.431885     113.096191     313972.663818       39.384766               26.288574       99.567139      100.048096                1.0                3.0                  1.0                  2.0 -102903.459229  201.010010           200.0       2.0
5       314326.299072       314030.962158     314326.299072  113480.873291     113.240479     314030.962158       52.625244               39.384766       99.567139      100.048096                1.0                3.0                  1.0                  2.0 -102903.459229  242.711670           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=215159/4096, alpha=28003/2048, buf_size=200.[0m
[01/06 18:11:03]  --------------------------------------------------------------------------------
[01/06 18:11:03]  Iteration: 18 (0 solution, 17 counterexamples)
[01/06 18:11:11]  Generator returned sat in 7.319508 secs.
[01/06 18:11:11]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_qdel + 1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/06 18:11:13]  Improved gap from 0.76953125 to 100
[01/06 18:11:13]  Improved number of small numbers from 127 to 128 out of a max of 128
[01/06 18:11:13]  Verifer returned sat in 1.366872 secs.
[01/06 18:11:13]  sf_get_cex returned in 1.419899 secs.
[01/06 18:11:13]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       313592.288818       313382.288818     313592.288818       0.192139       0.193359     313382.288818        0.000000                0.000000       77.596191      103.493408                0.0                2.0                  0.0              48220.0 -102903.459229  210.000000      199.999756       1.0
1       313747.481201       313485.109375     313747.481201  155402.382812     155.192383     313485.109375       55.192139                0.000000       77.596191      103.493408                1.0                3.0                  1.0              48220.0 -102903.459229  207.179688      200.000000       2.0
2       313902.673584       313588.698975     313902.673584  155454.754639     155.192383     313588.698975      110.384521               55.192139       77.596191      103.493408                1.0                3.0                  1.0                  3.0 -102903.459229  203.590088      200.000000       2.0
3       314057.865967       313692.289062     314057.865967  155506.357422     155.192383     313692.289062      165.576904              110.384521       77.596191      103.493408                1.0                3.0                  1.0                  3.0 -102903.459229  200.000000      200.000000       2.0
4       314213.058350       313770.750732     314213.058350  155557.959717     155.192383     313770.750732      220.769287              165.576904       77.692383      103.493408                1.0                3.0                  1.0                  3.0 -102903.459229  221.538330      200.000000       2.0
5       314368.443115       313795.878662     314368.443115  155827.073242     155.384766     313795.878662      276.154053              220.769287       77.692383      103.397461                1.0                3.0                  1.0                  3.0 -102903.459229  296.410400      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=226265/1024, alpha=75225/4096, buf_size=200.[0m
[01/06 18:11:13]  --------------------------------------------------------------------------------
[01/06 18:11:13]  Iteration: 19 (0 solution, 18 counterexamples)
[01/06 18:11:15]  Generator returned sat in 1.198775 secs.
[01/06 18:11:15]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_c + -1max_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 18:11:24]  Improved gap from 0.43902439024390244 to 48.4375
[01/06 18:11:25]  Improved number of small numbers from 79 to 90 out of a max of 128
[01/06 18:11:25]  Verifer returned sat in 9.628636 secs.
[01/06 18:11:25]  sf_get_cex returned in 9.679392 secs.
[01/06 18:11:25]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       286064.546417       286064.546417     286064.546417       0.192139       0.193359     286064.546417             0.0                     0.0       96.971069           100.0                2.0                4.0                  2.0             3.048096 -102955.021729   0.000000       -0.096069       3.0
1       286113.031952       286064.642487     286113.031952   48485.534668      48.485535     286064.642487             0.0                     0.0       96.971069           100.0                0.0                1.0                  2.0             3.048096 -102903.459229  48.389465       -0.048035       0.0
2       286161.517487       286113.079987     286161.517487   48533.924133      48.485535     286113.079987             0.0                     0.0       96.971069           100.0                0.0                1.0                  2.0             3.048096 -102851.896729  48.437500        0.000000       0.0
3       286210.003021       286161.517487     286210.003021   48533.972168      48.485535     286161.517487             0.0                     0.0       96.971069           100.0                0.0                2.0                  2.0             3.048096 -102800.382263  48.485535        0.000000       1.0
4       286258.488556       286210.003021     286258.488556   48534.020203      48.485535     286210.003021             0.0                     0.0       96.971069           100.0                0.0                2.0                  2.0             3.048096 -102754.877441  48.485535       -6.009644       1.0
5       286306.974091       286264.498291     286306.974091   48534.020203      48.485535     286264.498291             0.0                     0.0       96.971069           100.0                0.0                1.0                  2.0             3.048096 -102703.315186  42.475800       -5.961853       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=49/1024, buf_size=200.[0m
[01/06 18:11:25]  --------------------------------------------------------------------------------
[01/06 18:11:25]  Iteration: 20 (0 solution, 19 counterexamples)
[01/06 18:11:38]  Generator returned sat in 12.852806 secs.
[01/06 18:11:38]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 18:11:48]  Improved gap from 48.4375 to 48.4375
[01/06 18:11:49]  Improved number of small numbers from 72 to 76 out of a max of 128
[01/06 18:11:49]  Verifer returned sat in 10.827870 secs.
[01/06 18:11:49]  sf_get_cex returned in 10.880150 secs.
[01/06 18:11:49]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       324402.006979       324399.827926     324402.006979       0.191895       0.193359     324399.827926        0.023665                0.000000       49.484782           100.0                2.0                4.0                  2.0                  2.0 -102951.819092   2.155388        2.155355       3.0
1       324451.491761       324399.851590     324451.491761   49486.961165      49.484782     324399.851590        0.023665                0.023665       49.484782           100.0                1.0                3.0                  2.0                  2.0 -102903.459229  51.616506        0.000000       2.0
2       324500.929261       324451.468096     324500.929261   49489.140171      49.437500     324451.468096        0.023665                0.023665       49.484782           100.0                0.0                2.0                  2.0                  2.0 -102852.896729  49.437500        0.000000       1.0
3       324550.366761       324500.905596     324550.366761   49486.961165      49.437500     324500.905596        0.023665                0.023665       49.484782           100.0                0.0                2.0                  2.0                  2.0 -102802.334229  49.437500        0.000000       1.0
4       324599.804261       324550.343096     324599.804261   49486.961165      49.437500     324550.343096        0.023665                0.023665       49.484782           100.0                0.0                2.0                  2.0                  2.0 -102751.771729  49.437500        0.000000       1.0
5       324649.241761       324599.804443     324649.241761   49486.961165      49.437500     324599.804443        0.023665                0.023665       49.484782           100.0                0.0                1.0                  2.0                  2.0 -102701.232910  49.413653       -0.023682       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=376745/7968024, buf_size=200.[0m
[01/06 18:11:49]  --------------------------------------------------------------------------------
[01/06 18:11:49]  Iteration: 21 (0 solution, 20 counterexamples)
[01/06 18:11:55]  Generator returned sat in 4.346614 secs.
[01/06 18:11:55]  Candidate solution: 
[1m[94mif (+ -1min_c + 1max_c + -1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1max_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + 1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:12:16]  Improved gap from 0.095947265625 to 48.4375
[01/06 18:12:16]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/06 18:12:16]  Verifer returned sat in 21.430653 secs.
[01/06 18:12:16]  sf_get_cex returned in 21.482104 secs.
[01/06 18:12:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       325125.847168       325119.789062     325125.847168       0.191650       0.193359     325119.789062             0.0                     0.0          96.875      101.970703                1.0                3.0                  1.0                  2.0 -103622.479248   6.058105        6.058105       2.0
1       325174.284668       325125.847168     325174.284668   48443.558105      48.437500     325125.847168             0.0                     0.0          96.875      101.970703                2.0                4.0                  2.0                  2.0 -103576.974854  48.437500        0.000000       3.0
2       325222.722168       325174.284668     325222.722168   48485.937500      48.437500     325174.284668             0.0                     0.0          96.875      101.970703                0.0                2.0                  2.0                  2.0 -103525.412354  48.437500        0.000000       1.0
3       325271.159668       325222.722168     325271.159668   48485.937500      48.437500     325222.722168             0.0                     0.0          96.875      101.970703                0.0                2.0                  2.0                  2.0 -103473.849854  48.437500        0.000000       1.0
4       325319.597168       325271.255615     325319.597168   48485.937500      48.437500     325271.255615             0.0                     0.0          96.875      101.970703                0.0                1.0                  2.0                  2.0 -103422.383301  48.341553       -0.095947       0.0
5       325368.034668       325319.693115     325368.034668   48485.841553      48.437500     325319.693115             0.0                     0.0          96.875      101.970703                0.0                1.0                  2.0                  2.0 -103370.820801  48.341553       -0.095947       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=49/512, buf_size=200.[0m
[01/06 18:12:16]  --------------------------------------------------------------------------------
[01/06 18:12:16]  Iteration: 22 (0 solution, 21 counterexamples)
[01/06 18:12:26]  Generator returned sat in 8.995366 secs.
[01/06 18:12:26]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:12:33]  Improved gap from 0.0 to 48.4375
[01/06 18:12:34]  Improved number of small numbers from 97 to 104 out of a max of 128
[01/06 18:12:34]  Verifer returned sat in 7.351091 secs.
[01/06 18:12:34]  sf_get_cex returned in 7.402927 secs.
[01/06 18:12:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       277410.321655       277410.321655     277410.321655       0.191406       0.193359     277410.321655             0.0                     0.0       49.533325           100.0                0.0                1.0                  0.0             2.904297 -103627.250000   0.000000       -0.000122       0.0
1       277459.854980       277410.609131     277459.854980   49533.325195      49.533325     277410.609131             0.0                     0.0       49.533325           100.0                0.0                1.0                  0.0             2.904297 -103576.974854  49.245850       -0.191650       0.0
2       277509.388306       277460.046631     277509.388306   49582.571045      49.533325     277460.046631             0.0                     0.0       49.533325           100.0                0.0                1.0                  0.0             2.904297 -103526.412354  49.341675       -0.095825       0.0
3       277558.921631       277509.484131     277558.921631   49582.666870      49.533325     277509.484131             0.0                     0.0       49.533325           100.0                0.0                1.0                  0.0             2.904297 -103475.849854  49.437500        0.000000       0.0
4       277608.454956       277558.921631     277608.454956   49582.762695      49.533325     277558.921631             0.0                     0.0       49.533325           100.0                0.0                2.0                  0.0             2.904297 -103427.154053  49.533325       -1.770874       1.0
5       277620.886200       277610.225830     277620.886200   12480.777222      12.431244     277610.225830             0.0                     0.0       49.533325           100.0                0.0                1.0                  0.0             2.904297 -103376.591553  10.660370      -38.777130       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=407347/32768, buf_size=200.[0m
[01/06 18:12:34]  --------------------------------------------------------------------------------
[01/06 18:12:34]  Iteration: 23 (0 solution, 22 counterexamples)
[01/06 18:12:44]  Generator returned sat in 8.832665 secs.
[01/06 18:12:44]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1max_qdel + 1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 18:12:51]  Improved gap from 1.1402994791666667 to 48.4375
[01/06 18:12:52]  Improved number of small numbers from 91 to 95 out of a max of 128
[01/06 18:12:52]  Verifer returned sat in 8.263344 secs.
[01/06 18:12:52]  sf_get_cex returned in 8.316080 secs.
[01/06 18:12:52]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       272312.906354       272299.319489     272312.906354       0.191162       0.193359     272299.319489             0.0                     0.0       36.531250           100.0                0.0                2.0                  0.0             2.003174  -98516.247803  13.586864       13.586774       1.0
1       272350.188009       272303.928288     272350.188009   37295.241899      37.281655     272303.928288             0.0                     0.0       36.531250           100.0                1.0                3.0                  1.0             2.003174  -98470.119385  46.259721       -3.003153       2.0
2       272387.469664       272353.191249     272387.469664   37327.914756      37.281655     272353.191249             0.0                     0.0       36.531250           100.0                0.0                1.0                  1.0             2.003174  -98418.556972  34.278415      -14.159085       0.0
3       272424.751319       272401.628749     272424.751319   37315.933450      37.281655     272401.628749             0.0                     0.0       36.531250           100.0                0.0                1.0                  1.0             2.003174  -98366.994472  23.122570      -25.314930       0.0
4       272462.032974       272450.066249     272462.032974   37304.777605      37.281655     272450.066249             0.0                     0.0       36.534490           100.0                0.0                1.0                  1.0             2.003174  -98315.432129  11.966725      -36.470932       0.0
5       272499.316249       272499.316249     272499.316249   37295.241899      37.283275     272499.316249             0.0                     0.0       39.077592           100.0                0.0                1.0                  1.0             2.003174  -98264.682129   0.000000      -48.437657       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1220677/64192, buf_size=200.[0m
[01/06 18:12:52]  --------------------------------------------------------------------------------
[01/06 18:12:52]  Iteration: 24 (0 solution, 23 counterexamples)
[01/06 18:13:08]  Generator returned sat in 14.882930 secs.
[01/06 18:13:08]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + 1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 18:13:15]  Improved gap from 0.0 to 48.4375
[01/06 18:13:16]  Improved number of small numbers from 91 to 128 out of a max of 128
[01/06 18:13:16]  Verifer returned sat in 7.632326 secs.
[01/06 18:13:16]  sf_get_cex returned in 7.684199 secs.
[01/06 18:13:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        271837.48877       271836.488770      271837.48877       0.190918       0.193115     271836.488770             0.0                     0.0       63.313721           100.0                0.0                1.0                  0.0             3.095459  -98513.884521   1.000000        1.000000       0.0
1        271884.92627       271836.488770      271884.92627   47438.500000      47.437500     271836.488770             0.0                     0.0       63.313721           100.0                0.0                1.0                  0.0             3.095459  -98462.322021  48.437500        0.000000       0.0
2        271932.36377       271884.926270      271932.36377   47485.937500      47.437500     271884.926270             0.0                     0.0       63.313721           100.0                0.0                2.0                  0.0             3.095459  -98416.913574  47.437500       -7.154053       1.0
3        271948.23999       271939.518066      271948.23999   15923.658203      15.876221     271939.518066             0.0                     0.0       63.313721           100.0                0.0                1.0                  0.0             3.095459  -98365.351318   8.721924      -39.715576       0.0
4        271995.67749       271987.955566      271995.67749   47446.221924      47.437500     271987.955566             0.0                     0.0       63.313721           100.0                0.0                1.0                  0.0             3.095459  -98313.788818   7.721924      -40.715576       0.0
5        272043.11499       272036.393066      272043.11499   47445.221924      47.437500     272036.393066             0.0                     0.0       63.313721           100.0                0.0                1.0                  0.0             3.095459  -98262.226318   6.721924      -41.715576       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=65029/4096, buf_size=200.[0m
[01/06 18:13:16]  --------------------------------------------------------------------------------
[01/06 18:13:16]  Iteration: 25 (0 solution, 24 counterexamples)
[01/06 18:13:35]  Generator returned sat in 18.722412 secs.
[01/06 18:13:35]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 18:15:56]  Improved gap from 31.095458984375 to 48.4375
[01/06 18:15:56]  Improved number of small numbers from 103 to 128 out of a max of 128
[01/06 18:15:56]  Verifer returned sat in 140.495261 secs.
[01/06 18:15:56]  sf_get_cex returned in 140.552963 secs.
[01/06 18:15:56]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       291529.872070       291509.681152     291529.872070       0.190674       0.192871     291509.681152        0.095459                0.000000          58.875           100.0                0.0                1.0                  0.0                  2.0  -98513.884521  20.095459       20.095459       0.0
1       291559.309570       291509.776611     291559.309570   29457.690918      29.437500     291509.776611        0.095459                0.095459          58.875           100.0                0.0                2.0                  0.0                  2.0  -98463.417480  49.437500        0.000000       1.0
2       291608.651611       291559.214111     291608.651611   49391.573975      49.342041     291559.214111        0.095459                0.095459          58.875           100.0                0.0                2.0                  0.0                  2.0  -98412.854980  49.342041       -0.095459       1.0
3       291657.993652       291608.651611     291657.993652   49391.478516      49.342041     291608.651611        0.095459                0.095459          58.875           100.0                0.0                1.0                  0.0                  2.0  -98362.292480  49.246582       -0.190918       0.0
4       291687.431152       291658.089111     291687.431152   29486.842041      29.437500     291658.089111        0.095459                0.095459          58.875           100.0                0.0                1.0                  0.0                  2.0  -98311.729980  29.246582      -20.190918       0.0
5       291716.868652       291707.526611     291716.868652   29466.842041      29.437500     291707.526611        0.095459                0.095459          58.875           100.0                0.0                1.0                  0.0                  2.0  -98311.729980   9.246582      -90.753418       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81529/4096, buf_size=200.[0m
[01/06 18:15:56]  --------------------------------------------------------------------------------
[01/06 18:15:56]  Iteration: 26 (0 solution, 25 counterexamples)
[01/06 18:16:07]  Generator returned sat in 9.472600 secs.
[01/06 18:16:07]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + -1min_qdel + 1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 18:16:20]  Improved gap from 9.14516129032258 to 48.4375
[01/06 18:16:21]  Improved number of small numbers from 76 to 84 out of a max of 128
[01/06 18:16:21]  Verifer returned sat in 13.994311 secs.
[01/06 18:16:21]  sf_get_cex returned in 14.045896 secs.
[01/06 18:16:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       314618.394107       314600.572312     314618.394107       0.190430       0.192871     314600.572312             0.0                     0.0       36.861485           100.0                1.0                3.0                  1.0             2.998047 -121604.775879  17.821794       17.821597       2.0
1       314655.255592       314606.820202     314655.255592   36879.307023      36.861485     314606.820202             0.0                     0.0       36.861485           100.0                2.0                4.0                  2.0             2.998047 -121559.461071  48.435390       -0.002110       3.0
2       314692.117077       314655.257702     314692.117077   36909.920618      36.861485     314655.257702             0.0                     0.0       36.861485           100.0                0.0                1.0                  2.0             2.998047 -121507.898571  36.859375      -11.578125       0.0
3       314728.980672       314703.695202     314728.980672   36900.454832      36.863595     314703.695202             0.0                     0.0       36.861485           100.0                0.0                1.0                  2.0             2.998047 -121456.336071  25.285470      -23.152030       0.0
4       314765.844268       314752.132702     314765.844268   36888.880927      36.863595     314752.132702             0.0                     0.0       36.861485           100.0                0.0                1.0                  2.0             2.998047 -121404.773571  13.711566      -34.725934       0.0
5       314802.707863       314800.570202     314802.707863   36877.307023      36.863595     314800.570202             0.0                     0.0       38.750000           100.0                0.0                1.0                  2.0             2.998047 -121353.211182   2.137661      -46.299949       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=17/8056, buf_size=200.[0m
[01/06 18:16:21]  --------------------------------------------------------------------------------
[01/06 18:16:21]  Iteration: 27 (0 solution, 26 counterexamples)
[01/06 18:16:35]  Generator returned sat in 13.068603 secs.
[01/06 18:16:35]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 18:16:40]  Improved gap from 1.142578125 to 100
[01/06 18:16:41]  Improved number of small numbers from 95 to 102 out of a max of 128
[01/06 18:16:41]  Verifer returned sat in 5.290430 secs.
[01/06 18:16:41]  sf_get_cex returned in 5.343905 secs.
[01/06 18:16:41]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       314474.588867       314335.731934     314474.588867       0.190430       0.192871     314335.731934        0.000000                0.000000       90.380981      219.047363                0.0                2.0                  0.0             2.904541 -121505.059326  138.856934      119.714111       1.0
1       314655.255615       314373.922363     314655.255615  180805.604980     180.666748     314373.922363        0.380859                0.000000       90.380981      219.047363                1.0                3.0                  1.0             2.904541 -121505.059326  280.952393      200.000000       2.0
2       314700.446106       314554.874756     314700.446106   45471.823975      45.190491     314554.874756        0.380859                0.380859       90.476196      219.047363                0.0                2.0                  1.0             2.000000 -121505.059326  145.190491      145.190491       1.0
3       314881.398499       314554.874756     314881.398499  181097.963928     180.952393     314554.874756       26.523743                0.380859       90.476196      219.047363                0.0                2.0                  1.0             2.000000 -121505.059326  300.000000      200.000000       1.0
4       315062.350891       314735.827148     315062.350891  181278.916321     180.952393     314735.827148      107.476135               26.523743       90.476196      219.047363                0.0                2.0                  1.0             2.000000 -121505.059326  219.047607      200.000000       1.0
5       315243.303284       314773.922363     315243.303284  181278.916321     180.952393     314773.922363      188.428528              107.476135       90.476196      219.047363                1.0                3.0                  1.0             2.000000 -121505.059326  280.952393      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=3080973/16384, alpha=195/2048, buf_size=200.[0m
[01/06 18:16:41]  --------------------------------------------------------------------------------
[01/06 18:16:41]  Iteration: 28 (0 solution, 27 counterexamples)
[01/06 18:16:50]  Generator returned sat in 8.242781 secs.
[01/06 18:16:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1max_c + -1max_qdel + -1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 18:16:55]  Improved gap from 0.0 to 48.4375
[01/06 18:16:55]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/06 18:16:55]  Verifer returned sat in 4.901291 secs.
[01/06 18:16:55]  sf_get_cex returned in 4.955572 secs.
[01/06 18:16:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       267326.466309       267326.418701     267326.466309       0.190430       0.192871     267326.418701             0.0                     0.0            98.0           100.0                2.0                4.0                  2.0             2.047607 -121708.963867   0.047607        0.000000       3.0
1       267375.513916       267326.466309     267375.513916   49047.655029      49.047607     267326.466309             0.0                     0.0            98.0           100.0                1.0                3.0                  2.0             2.047607 -121658.011475  49.047607        0.000000       2.0
2       267424.466309       267376.028809     267424.466309   49001.440186      48.952393     267376.028809             0.0                     0.0            98.0           100.0                0.0                1.0                  2.0             2.047607 -121606.963867  48.437500        0.000000       0.0
3       267473.513916       267424.466309     267473.513916   49096.044922      49.047607     267424.466309             0.0                     0.0            98.0           100.0                0.0                2.0                  2.0             2.047607 -121556.011475  49.047607        0.000000       1.0
4       267522.561523       267473.561523     267522.561523   49096.655029      49.047607     267473.561523             0.0                     0.0            98.0           100.0                0.0                1.0                  2.0             2.047607 -121505.059082  49.000000        0.000000       0.0
5       267571.609131       267522.609131     267571.609131   49096.607422      49.047607     267522.609131             0.0                     0.0            98.0           100.0                0.0                1.0                  2.0             2.047607 -121505.059082  49.000000      -50.952393       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=195/4096, buf_size=200.[0m
[01/06 18:16:55]  --------------------------------------------------------------------------------
[01/06 18:16:55]  Iteration: 29 (0 solution, 28 counterexamples)
[01/06 18:16:58]  Generator returned sat in 1.964457 secs.
[01/06 18:16:58]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1max_c + 1min_qdel + 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:17:05]  Improved gap from 19.885714285714286 to 48.4375
[01/06 18:17:06]  Improved number of small numbers from 100 to 107 out of a max of 128
[01/06 18:17:06]  Verifer returned sat in 7.414409 secs.
[01/06 18:17:06]  sf_get_cex returned in 7.468265 secs.
[01/06 18:17:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       267330.578809       267324.266309     267330.578809       0.190186       0.192383     267324.266309           0.025                   0.000          37.525           100.0                0.0                1.0                  0.0                  2.0 -121706.764111   6.287500        6.287500       0.0
1       267369.316309       267324.266309     267369.316309   38743.812500      38.737500     267324.266309           0.025                   0.025          37.525           100.0                0.0                1.0                  0.0                  1.0 -121656.639160  45.025000       -4.850049       0.0
2       267408.053809       267374.616309     267408.053809   38782.550000      38.737500     267374.616309           0.025                   0.025          37.525           100.0                0.0                1.0                  0.0                  1.0 -121606.989014  33.412500      -16.462402       0.0
3       267446.791309       267424.491309     267446.791309   38770.937500      38.737500     267424.491309           0.025                   0.025          37.525           100.0                0.0                1.0                  0.0                  1.0 -121556.864014  22.275000      -27.599902       0.0
4       267485.528809       267474.366211     267485.528809   38759.800000      38.737500     267474.366211           0.025                   0.025          37.525           100.0                0.0                1.0                  0.0                  1.0 -121506.739014  11.137598      -38.737402       0.0
5       267524.266309       267524.241309     267524.266309   38748.662598      38.737500     267524.241309           0.025                   0.025          39.995           100.0                0.0                1.0                  0.0                  1.0 -121456.614014   0.000000      -49.874902       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=799/40, buf_size=200.[0m
[01/06 18:17:06]  --------------------------------------------------------------------------------
[01/06 18:17:06]  Iteration: 30 (0 solution, 29 counterexamples)
[01/06 18:17:23]  Generator returned sat in 15.882263 secs.
[01/06 18:17:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + 1min_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 18:17:24]  Improved number of small numbers from 70 to 75 out of a max of 127
[01/06 18:17:24]  Verifer returned sat in 1.103905 secs.
[01/06 18:17:24]  sf_get_cex returned in 1.155856 secs.
[01/06 18:17:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       204293.410950       204092.125671     204293.410950       0.189941       0.192383     204092.125671        0.047607                0.000000       99.000000           100.0                0.0                2.0                  0.0             2.047363   -58573.81366  201.237671      102.047485       1.0
1       204491.410950       204191.315857     204491.410950  198201.285278     198.000000     204191.315857        0.095093                0.047607       99.000000           100.0                0.0                2.0                  0.0             2.000000   -58573.81366  300.000000      200.000000       1.0
2       204689.410950       204389.410950     204689.410950  198300.095093     198.000000     204389.410950       98.095093                0.095093       99.095093           100.0                0.0                2.0                  0.0             2.000000   -58573.81366  201.904907      200.000000       1.0
3       204887.601135       204488.315857     204887.601135  198490.185547     198.190186     204488.315857      196.285278               98.095093       99.095093           100.0                1.0                3.0                  1.0             2.000000   -58573.81366  203.000000      200.000000       2.0
4       205085.791321       204587.363403     205085.791321  198589.470825     198.190186     204587.363403      294.475464              196.285278       99.095093           100.0                1.0                3.0                  1.0             2.000000   -58573.81366  203.952454      200.000000       2.0
5       205283.981506       204591.315857     205283.981506  198688.613464     198.190186     204591.315857      392.665649              294.475464       99.095093           100.0                2.0                4.0                  2.0             2.000000   -58573.81366  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=1607969/4096, alpha=81725/4096, buf_size=200.[0m
[01/06 18:17:24]  --------------------------------------------------------------------------------
[01/06 18:17:24]  Iteration: 31 (0 solution, 30 counterexamples)
[01/06 18:17:48]  Generator returned sat in 22.373454 secs.
[01/06 18:17:48]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_c + -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 18:17:52]  Improved gap from 19.905029296875 to 48.4375
[01/06 18:17:53]  Improved number of small numbers from 98 to 128 out of a max of 128
[01/06 18:17:53]  Verifer returned sat in 4.486391 secs.
[01/06 18:17:53]  sf_get_cex returned in 4.540357 secs.
[01/06 18:17:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       204983.818359       204978.043213     204983.818359       0.189697       0.192383     204978.043213        0.094727                0.000000       97.064941         84908.0                1.0                3.0                  1.0             2.094971  -59360.541260   5.680420        5.680176       2.0
1       205032.350830       204978.138428     205032.350830   48538.245850      48.532471     204978.138428        0.094727                0.094727       97.064941         84908.0                2.0                4.0                  2.0             2.094971  -59314.753906  54.117676        0.000000       3.0
2       205080.883301       205032.350830     205080.883301   48586.683105      48.532471     205032.350830        0.094727                0.094727       97.064941         84908.0                0.0                1.0                  2.0             2.094971  -59263.286377  48.437744        0.000000       0.0
3       205129.415771       205080.788574     205129.415771   48581.003174      48.532471     205080.788574        0.094727                0.094727       97.064941         84908.0                0.0                2.0                  2.0             2.094971  -59211.818848  48.532471        0.000000       1.0
4       205177.948242       205129.415771     205177.948242   48581.097900      48.532471     205129.415771        0.094727                0.094727       97.064941         84908.0                0.0                1.0                  2.0             2.094971  -59160.351318  48.437744        0.000000       0.0
5       205226.480713       205177.948486     205226.480713   48581.003174      48.532471     205177.948486        0.094727                0.094727       97.064941         84908.0                0.0                1.0                  2.0             2.094971  -59160.351074  48.437500      -51.467285       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81531/4096, buf_size=200.[0m
[01/06 18:17:53]  --------------------------------------------------------------------------------
[01/06 18:17:53]  Iteration: 32 (0 solution, 31 counterexamples)
[01/06 18:18:04]  Generator returned sat in 9.849720 secs.
[01/06 18:18:04]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1max_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 18:18:14]  Improved gap from 9.603174603174603 to 48.4375
[01/06 18:18:14]  Improved number of small numbers from 83 to 128 out of a max of 128
[01/06 18:18:14]  Verifer returned sat in 10.282620 secs.
[01/06 18:18:14]  sf_get_cex returned in 10.334039 secs.
[01/06 18:18:14]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       205080.693604       205074.538574     205080.693604       0.189453       0.192383     205074.538574        0.094971                0.000000       97.064453           100.0                0.0                2.0                  0.0             2.094971  -59479.310791   6.060059        6.060059       1.0
1       205129.131104       205074.538574     205129.131104   48443.655029      48.437500     205074.538574        0.094971                0.094971       97.064453           100.0                0.0                2.0                  0.0             2.000000  -59433.808350  54.497559        0.000000       1.0
2       205177.568604       205129.036133     205177.568604   48492.092529      48.437500     205129.036133        0.094971                0.094971       97.064453           100.0                0.0                2.0                  0.0             2.000000  -59382.245850  48.437500        0.000000       1.0
3       205226.006104       205177.473633     205226.006104   48486.032471      48.437500     205177.473633        0.094971                0.094971       97.064453           100.0                0.0                2.0                  0.0             2.000000  -59330.683350  48.437500        0.000000       1.0
4       205274.443604       205225.911133     205274.443604   48486.032471      48.437500     205225.911133        0.094971                0.094971       97.064453           100.0                0.0                2.0                  0.0             2.000000  -59279.121094  48.437500       -0.000244       1.0
5       205322.881104       205274.443848     205322.881104   48486.032471      48.437500     205274.443848        0.094971                0.094971       97.064453           100.0                0.0                1.0                  0.0             2.000000  -59279.121094  48.342285      -51.562744       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=97/1024, buf_size=200.[0m
[01/06 18:18:14]  --------------------------------------------------------------------------------
[01/06 18:18:14]  Iteration: 33 (0 solution, 32 counterexamples)
[01/06 18:18:44]  Generator returned sat in 28.018997 secs.
[01/06 18:18:44]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + -1max_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 18:18:46]  Improved number of small numbers from 120 to 120 out of a max of 127
[01/06 18:18:46]  Verifer returned sat in 1.491217 secs.
[01/06 18:18:46]  sf_get_cex returned in 1.544669 secs.
[01/06 18:18:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0       153251.915039       152964.346680     153251.915039       0.189453       0.192383     152964.346680        0.000000                0.000000       97.547363      101.642090                0.0                1.0                  0.0             2.094727   -7465.045166  287.568359       191.64209       0.0
1       153360.367676       153068.946777     153360.367676  108740.205078     108.452637     153068.946777        0.094727                0.000000       97.547363      101.642090                0.0                2.0                  0.0             2.094727   -7465.045166  291.326172       200.00000       1.0
2       153468.820312       153257.272949     153468.820312  108744.057617     108.452637     153257.272949        8.547363                0.094727       97.642090      101.642090                0.0                2.0                  0.0             2.000000   -7465.045166  203.000000       200.00000       1.0
3       153577.367676       153264.799316     153577.367676  108758.910645     108.547363     153264.799316       17.094727                8.547363       97.642090      101.642090                1.0                3.0                  1.0             2.000000   -7465.045166  295.473633       200.00000       2.0
4       153685.915039       153460.272949     153685.915039  108859.931641     108.547363     153460.272949       25.642090               17.094727       99.185254      101.642090                1.0                3.0                  1.0             2.000000   -7465.045166  200.000000       200.00000       2.0
5       153796.005566       153460.367676     153796.005566  110316.169434     110.090527     153460.367676       35.732617               25.642090       99.185254      101.547363                1.0                3.0                  1.0             2.000000   -7465.045166  299.905273       200.00000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=91233/2560, alpha=11167/1024, buf_size=200.[0m
[01/06 18:18:46]  --------------------------------------------------------------------------------
[01/06 18:18:46]  Iteration: 34 (0 solution, 33 counterexamples)
[01/06 18:18:53]  Generator returned sat in 6.187012 secs.
[01/06 18:18:53]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_c + 1max_qdel + 1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:19:02]  Improved gap from 21.419461972766523 to 48.4375
[01/06 18:19:02]  Improved number of small numbers from 92 to 128 out of a max of 128
[01/06 18:19:02]  Verifer returned sat in 8.497523 secs.
[01/06 18:19:02]  sf_get_cex returned in 8.549342 secs.
[01/06 18:19:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0      -146132.176025      -146132.270752    -146132.176025       0.189209       0.192383    -146132.270752             0.0                     0.0       59.063965           100.0                2.0                4.0                  2.0             4.094482  291727.403809   0.094727        0.000244       3.0
1      -146082.738525      -146132.176025    -146082.738525   49437.594727      49.437500    -146132.176025             0.0                     0.0       59.063965           100.0                1.0                3.0                  2.0             4.094482  291777.966064  49.437500        0.000000       2.0
2      -146033.301025      -146082.738525    -146033.301025   49486.937500      49.437500    -146082.738525             0.0                     0.0       59.063965           100.0                0.0                2.0                  2.0             4.094482  291828.528564  49.437500        0.000000       1.0
3      -145983.863525      -146033.301025    -145983.863525   49486.937500      49.437500    -146033.301025             0.0                     0.0       59.063965           100.0                0.0                2.0                  2.0             4.094482  291879.091064  49.437500        0.000000       1.0
4      -145934.426025      -145983.863525    -145934.426025   49486.937500      49.437500    -145983.863525             0.0                     0.0       59.063965           100.0                0.0                2.0                  2.0             4.094482  291929.653564  49.437500        0.000000       1.0
5      -145884.988525      -145932.365479    -145884.988525   49486.937500      49.437500    -145932.365479             0.0                     0.0       59.063965           100.0                0.0                1.0                  2.0             4.094482  291929.653809  47.376953      -50.562256       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81533/4096, buf_size=200.[0m
[01/06 18:19:02]  --------------------------------------------------------------------------------
[01/06 18:19:02]  Iteration: 35 (0 solution, 34 counterexamples)
[01/06 18:19:22]  Generator returned sat in 18.916959 secs.
[01/06 18:19:23]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + -1min_qdel + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 18:19:30]  Improved gap from 0.0 to 48.4375
[01/06 18:19:31]  Improved number of small numbers from 64 to 72 out of a max of 128
[01/06 18:19:31]  Verifer returned sat in 8.122049 secs.
[01/06 18:19:31]  sf_get_cex returned in 8.174019 secs.
[01/06 18:19:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0      -107180.405408      -107180.452710    -107180.405408       0.189209       0.192139    -107180.452710        0.047302                0.000000       48.484802           100.0                1.0                3.0                  1.0                  2.0  252775.680176   0.000000       -0.000073       2.0
1      -107131.920605      -107180.405408    -107131.920605   48484.849548      48.484802    -107180.405408        0.047302                0.047302       48.484802           100.0                0.0                1.0                  1.0                  1.0  252827.195312  48.437500       -0.000134       0.0
2      -107083.435803      -107131.920605    -107083.435803   48533.287048      48.484802    -107131.920605        0.047302                0.047302       48.484802           100.0                0.0                1.0                  1.0                  1.0  252878.710645  48.437500        0.000000       0.0
3      -107034.951001      -107083.483105    -107034.951001   48533.287048      48.484802    -107083.483105        0.047302                0.047302       48.484802           100.0                0.0                2.0                  1.0                  1.0  252930.225830  48.484802       -0.000012       1.0
4      -106986.466199      -107034.951001    -106986.466199   48533.334351      48.484802    -107034.951001        0.047302                0.047302       48.484802           100.0                0.0                1.0                  1.0                  1.0  252981.740967  48.437500       -0.000073       0.0
5      -106937.981396      -106986.466064    -106937.981396   48533.287048      48.484802    -106986.466064        0.047302                0.047302       48.484802           100.0                0.0                1.0                  1.0                  1.0  252981.741211  48.437366      -51.515027       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=193/4096, buf_size=200.[0m
[01/06 18:19:31]  --------------------------------------------------------------------------------
[01/06 18:19:31]  Iteration: 36 (0 solution, 35 counterexamples)
[01/06 18:19:47]  Generator returned sat in 14.619777 secs.
[01/06 18:19:47]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_qdel + 1min_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 18:19:57]  Improved gap from 9.238728841145834 to 48.4375
[01/06 18:19:58]  Improved number of small numbers from 98 to 101 out of a max of 128
[01/06 18:19:58]  Verifer returned sat in 10.416803 secs.
[01/06 18:19:58]  sf_get_cex returned in 10.468266 secs.
[01/06 18:19:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0      -107185.039142      -107186.329206    -107185.039142       0.189209       0.192139    -107186.329206        0.092147                0.000000       28.898237           100.0                0.0                1.0                  0.0             2.092147  252781.556641   1.197917        1.197812       0.0
1      -107136.233052      -107184.301963    -107136.233052   48807.379808      48.806090    -107184.301963        0.092147                0.092147       28.898237           100.0                0.0                1.0                  0.0             1.000000  252831.092002  47.976763       -0.460737       0.0
2      -107087.426963      -107135.864463    -107087.426963   48854.158654      48.806090    -107135.864463        0.092147                0.092147       28.898237           100.0                0.0                1.0                  0.0             1.000000  252882.654502  48.345353       -0.092147       0.0
3      -107038.620873      -107087.426963    -107038.620873   48854.527244      48.806090    -107087.426963        0.092147                0.092147       32.291667           100.0                0.0                1.0                  0.0             1.000000  252933.940559  48.713942        0.000000       0.0
4      -106986.421354      -107038.713020    -106986.421354   52248.325321      52.199519    -107038.713020        0.092147                0.092147       36.397236           100.0                0.0                2.0                  0.0             1.000000  252981.740967  52.199519       -0.000073       1.0
5      -106966.513501      -106986.421354    -106966.513501   19960.144231      19.907853    -106986.421354        0.092147                0.092147       39.576122           100.0                0.0                1.0                  0.0             1.000000  252981.741211  19.815705      -80.091977       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=24845/1248, buf_size=200.[0m
[01/06 18:19:58]  --------------------------------------------------------------------------------
[01/06 18:19:58]  Iteration: 37 (0 solution, 36 counterexamples)
[01/06 18:20:48]  Generator returned sat in 48.403862 secs.
[01/06 18:20:48]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1max_qdel + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:20:55]  Improved gap from 12.004611330698287 to 100
[01/06 18:20:56]  Improved number of small numbers from 66 to 69 out of a max of 128
[01/06 18:20:56]  Verifer returned sat in 7.906754 secs.
[01/06 18:20:56]  sf_get_cex returned in 7.961504 secs.
[01/06 18:20:56]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0      -106915.651177      -107198.894341    -106915.651177       0.188965       0.192139    -107198.894341        0.000000                0.000000       99.597931      100.188965                0.0                2.0                  0.0             2.047363  252694.689507  283.243164      183.810791       1.0
1      -106799.509270      -107098.894341    -106799.509270  116425.149902     116.141907    -107098.894341        0.000000                0.000000       99.597931      100.188965                0.0                2.0                  0.0             2.047363  252694.689507  299.385071      199.952698       1.0
2      -106683.367363      -106899.603874    -106683.367363  116441.291809     116.141907    -106899.603874       16.094604                0.000000       99.763489      100.188965                0.0                2.0                  0.0             2.047363  252694.689507  200.141907      200.000000       1.0
3      -106567.059899      -106799.461968    -106567.059899  116523.701111     116.307465    -106799.461968       32.402069               16.094604       99.858093      100.188965                0.0                2.0                  0.0             2.000000  252694.689507  200.000000      200.000000       1.0
4      -106450.657830      -106799.461968    -106450.657830  116634.471161     116.402069    -106799.461968       48.804138               32.402069       99.858093      100.141907                0.0                2.0                  0.0             2.000000  252694.689507  300.000000      200.000000       1.0
5      -106334.255760      -106699.414665    -106334.255760  116750.873230     116.402069    -106699.414665       65.206207               48.804138       99.858093      100.047302                1.0                3.0                  1.0             2.000000  252694.689507  299.952698      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=2136677/32768, alpha=542113/32768, buf_size=200.[0m
[01/06 18:20:56]  --------------------------------------------------------------------------------
[01/06 18:20:56]  Iteration: 38 (0 solution, 37 counterexamples)
[01/06 18:21:39]  Generator returned sat in 42.015777 secs.
[01/06 18:21:39]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1max_qdel + 1min_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 18:21:49]  Improved gap from 0.094482421875 to 48.4375
[01/06 18:21:50]  Improved number of small numbers from 78 to 88 out of a max of 128
[01/06 18:21:50]  Verifer returned sat in 10.368413 secs.
[01/06 18:21:50]  sf_get_cex returned in 10.423577 secs.
[01/06 18:21:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0       -14297.181952       -14297.181952     -14297.181952       0.188721       0.191895     -14297.181952             0.0                     0.0       25.089569           100.0                0.0                1.0                  0.0            74.681152  159892.409424   0.000000       -0.000067       0.0
1       -14247.002814       -14297.087470     -14247.002814   50179.138184      50.179138     -14297.087470             0.0                     0.0       25.089569           100.0                0.0                1.0                  0.0            74.681152  159941.488770  50.084656       -0.741583       0.0
2       -14196.823676       -14246.261176     -14196.823676   50229.222839      50.179138     -14246.261176             0.0                     0.0       25.413147           100.0                0.0                1.0                  0.0            74.681152  159992.051215  49.437500        0.000000       0.0
3       -14164.211585       -14196.823676     -14164.211585   32661.528564      32.612091     -14196.823676             0.0                     0.0       33.421265           100.0                0.0                2.0                  0.0            74.681152  160040.941650  32.612091      -18.497473       1.0
4       -14127.595435       -14145.713934     -14127.595435   36648.761993      36.616150     -14145.713934             0.0                     0.0       37.843384           100.0                0.0                1.0                  0.0            74.681152  160092.503973  18.118500      -30.319000       0.0
5       -14088.768225       -14097.276434     -14088.768225   38845.327972      38.827209     -14097.276434             0.0                     0.0       39.962207           100.0                0.0                1.0                  0.0            74.681152  160144.066406   8.508209      -39.929358       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81533/4096, buf_size=200.[0m
[01/06 18:21:50]  --------------------------------------------------------------------------------
[01/06 18:21:50]  Iteration: 39 (0 solution, 38 counterexamples)
[01/06 18:22:20]  Generator returned sat in 27.859293 secs.
[01/06 18:22:20]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + 1max_qdel + -1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:22:34]  Improved gap from 0.0 to 48.4375
[01/06 18:22:35]  Improved number of small numbers from 58 to 71 out of a max of 128
[01/06 18:22:35]  Verifer returned sat in 15.298388 secs.
[01/06 18:22:35]  sf_get_cex returned in 15.350137 secs.
[01/06 18:22:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        38635.526605        38630.432245      38635.526605       0.188721       0.191895      38630.432245         0.04718                 0.00000        97.42923      103.476318                0.0                1.0                  0.0             2.047363  106964.795166   5.047180        5.047052       0.0
1        38684.241220        38630.479425      38684.241220   48719.709229      48.714615      38630.479425         0.04718                 0.04718        97.42923      103.476318                0.0                2.0                  0.0             2.000000  107011.033499  53.714615        0.000000       1.0
2        38732.955835        38684.194040      38732.955835   48768.376663      48.714615      38684.194040         0.04718                 0.04718        97.42923      103.476318                0.0                2.0                  0.0             2.000000  107062.318884  48.714615        0.000000       1.0
3        38781.670450        38732.908655      38781.670450   48763.376663      48.714615      38732.908655         0.04718                 0.04718        97.42923      103.476318                0.0                2.0                  0.0             2.000000  107113.604248  48.714615       -0.000021       1.0
4        38830.385065        38781.670450      38830.385065   48763.376663      48.714615      38781.670450         0.04718                 0.04718        97.42923      103.476318                0.0                1.0                  0.0             2.000000  107164.842529  48.667435       -0.047125       0.0
5        38879.052499        38830.385010      38879.052499   48716.149307      48.667435      38830.385010         0.04718                 0.04718        97.42923      103.476318                0.0                1.0                  0.0             2.000000  107164.842529  48.620309      -51.379691       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=773/16384, buf_size=200.[0m
[01/06 18:22:35]  --------------------------------------------------------------------------------
[01/06 18:22:35]  Iteration: 40 (0 solution, 39 counterexamples)
[01/06 18:23:30]  Generator returned sat in 53.440500 secs.
[01/06 18:23:30]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_qdel + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 18:23:33]  Improved gap from 8.153335571289062 to 100
[01/06 18:23:33]  Improved number of small numbers from 81 to 90 out of a max of 128
[01/06 18:23:33]  Verifer returned sat in 2.793580 secs.
[01/06 18:23:33]  sf_get_cex returned in 2.847359 secs.
[01/06 18:23:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0      -573971.568671      -574171.568671    -573971.568671       0.188477       0.191895    -574171.568671        0.003174                0.000000       50.010016      100.003174                0.0                2.0                  0.0             2.003418  107011.033499  199.996826      199.996826       1.0
1      -573871.551978      -574071.575349    -573871.551978  100216.693376     100.016693    -574071.575349        0.016693                0.003174       50.010016      100.003174                0.0                2.0                  0.0             2.000000  107011.033499  200.006677      200.000000       1.0
2      -573771.535285      -573971.568671    -573771.535285  100216.716747     100.016693    -573971.568671        0.033387                0.016693       66.666667      100.003174                0.0                2.0                  0.0             2.000000  107011.033499  200.000000      200.000000       1.0
3      -573638.205290      -573971.568671    -573638.205290  133530.028045     133.329995    -573971.568671       33.363381                0.033387       66.666667      100.000000                0.0                2.0                  0.0             2.000000  107011.033499  300.000000      200.000000       1.0
4      -573504.875295      -573771.568671    -573504.875295  133663.358040     133.329995    -573771.568671       66.693376               33.363381      100.000000      100.000000                1.0                3.0                  1.0             2.000000  107011.033499  200.000000      200.000000       2.0
5      -573404.875295      -573763.555420    -573404.875295  100266.693376     100.000000    -573763.555420       66.693376               66.693376      100.000000      100.000000                1.0                3.0                  1.0             2.000000  107011.033499  291.986748      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=55475/832, alpha=25/7488, buf_size=200.[0m
[01/06 18:23:33]  --------------------------------------------------------------------------------
[01/06 18:23:33]  Iteration: 41 (0 solution, 40 counterexamples)
[01/06 18:24:58]  Generator returned sat in 82.867709 secs.
[01/06 18:24:58]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + -1min_buffer + -1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c + -1min_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:25:04]  Improved gap from 0.47119140625 to 48.4375
[01/06 18:25:05]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/06 18:25:05]  Verifer returned sat in 6.513416 secs.
[01/06 18:25:05]  sf_get_cex returned in 6.568096 secs.
[01/06 18:25:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0      -601102.782227      -601102.782227    -601102.782227       0.188232       0.191650    -601102.782227             0.0                     0.0       99.063477      107.968994                1.0                3.0                  1.0                  5.0  133942.246826   0.000000       -0.000244       2.0
1      -601053.250488      -601102.687744    -601053.250488   49531.738281      49.531738    -601102.687744             0.0                     0.0       99.063477      107.968994                0.0                1.0                  1.0                  5.0  133992.715088  49.437256       -0.000244       0.0
2      -601003.718750      -601053.156250    -601003.718750   49581.175537      49.531738    -601053.156250             0.0                     0.0       99.063477      107.968994                0.0                1.0                  1.0                  5.0  134043.183594  49.437500        0.000000       0.0
3      -600954.187012      -601003.718750    -600954.187012   49581.175781      49.531738    -601003.718750             0.0                     0.0       99.063477      107.968994                0.0                2.0                  1.0                  5.0  134093.651611  49.531738       -0.000244       1.0
4      -600902.970703      -600954.092773    -600902.970703   51265.840332      51.216309    -600954.092773             0.0                     0.0       99.063477      107.968994                0.0                1.0                  1.0                  5.0  134142.341309  51.122070       -0.094238       0.0
5      -600853.438965      -600902.876221    -600853.438965   49582.860352      49.531738    -600902.876221             0.0                     0.0       99.063477      107.968994                0.0                1.0                  1.0                  5.0  134192.903564  49.437256       -0.000244       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1725/1024, buf_size=200.[0m
[01/06 18:25:05]  --------------------------------------------------------------------------------
[01/06 18:25:05]  Iteration: 42 (0 solution, 41 counterexamples)
[01/06 18:26:43]  Generator returned sat in 95.972660 secs.
[01/06 18:26:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 18:26:58]  Improved gap from 0.564697265625 to 48.4375
[01/06 18:26:58]  Improved number of small numbers from 81 to 92 out of a max of 128
[01/06 18:26:58]  Verifer returned sat in 15.539437 secs.
[01/06 18:26:58]  sf_get_cex returned in 15.593331 secs.
[01/06 18:26:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0      -608296.445679      -608298.460388    -608296.445679       0.187988       0.191650    -608298.460388             0.0                     0.0       49.484558           100.0                2.0                4.0                  2.0             4.046875  141137.925049   2.014709        2.014526       3.0
1      -608246.961121      -608296.445679    -608246.961121   49486.572815      49.484558    -608296.445679             0.0                     0.0       49.484558           100.0                2.0                4.0                  2.0             4.046875  141186.425781  49.484558       -0.000183       3.0
2      -608197.476562      -608246.914062    -608197.476562   49534.042664      49.484558    -608246.914062             0.0                     0.0       49.484558           100.0                0.0                1.0                  2.0             4.046875  141236.894531  49.437500       -0.046875       0.0
3      -608147.992004      -608197.429504    -608147.992004   49533.995605      49.484558    -608197.429504             0.0                     0.0       49.484558           100.0                0.0                1.0                  2.0             4.046875  141287.456848  49.437500        0.000000       0.0
4      -608098.507446      -608147.992004    -608098.507446   49533.995605      49.484558    -608147.992004             0.0                     0.0       49.484558           100.0                0.0                2.0                  2.0             4.046875  141337.972290  49.484558        0.000000       1.0
5      -608049.022888      -608098.507446    -608049.022888   49534.042664      49.484558    -608098.507446             0.0                     0.0       49.484558           100.0                0.0                2.0                  2.0             4.046875  141388.487549  49.484558       -0.000183       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=193/4096, buf_size=200.[0m
[01/06 18:26:58]  --------------------------------------------------------------------------------
[01/06 18:26:58]  Iteration: 43 (0 solution, 42 counterexamples)
[01/06 18:27:06]  Generator returned sat in 5.339882 secs.
[01/06 18:27:06]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 18:27:08]  Improved gap from 0.3759765625 to 100
[01/06 18:27:09]  Improved number of small numbers from 76 to 85 out of a max of 128
[01/06 18:27:09]  Verifer returned sat in 2.904631 secs.
[01/06 18:27:09]  sf_get_cex returned in 2.957156 secs.
[01/06 18:27:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0      -607551.757019      -607847.663025    -607551.757019       0.187988       0.191406    -607847.663025        0.046875                0.000000       82.140991      199.952881                2.0                4.0                  2.0                  5.0  140587.127869  295.859131      195.859131       3.0
1      -607449.663025      -607683.475037    -607449.663025  102389.900146     102.093994    -607683.475037        0.046875                0.046875       82.140991      199.952881                1.0                3.0                  2.0                  5.0  140587.127869  233.765137      197.953125       2.0
2      -607347.569031      -607647.663025    -607347.569031  102327.806152     102.093994    -607647.663025        0.093994                0.046875       82.140991      199.952881                1.0                3.0                  2.0                  5.0  140587.127869  300.000000      200.000000       2.0
3      -607245.475037      -607519.381042    -607245.475037  102394.088135     102.093994    -607519.381042        2.187988                0.093994       82.140991      164.093994                1.0                3.0                  2.0                  3.0  140587.127869  271.718018      200.000000       2.0
4      -607143.381042      -607355.522034    -607143.381042  102367.900146     102.093994    -607355.522034        4.281982                2.187988       98.428198      163.976501                1.0                3.0                  2.0                  3.0  140587.127869  207.859009      200.000000       2.0
5      -607024.999841      -607319.616028    -607024.999841  118593.342163     118.381201    -607319.616028       22.663184                4.281982       98.428198      121.286336                1.0                3.0                  2.0                  3.0  140587.127869  271.953003      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=231591/10240, alpha=163455/8192, buf_size=200.[0m
[01/06 18:27:09]  --------------------------------------------------------------------------------
[01/06 18:27:09]  Iteration: 44 (0 solution, 43 counterexamples)
[01/06 18:29:17]  Generator returned sat in 126.533241 secs.
[01/06 18:29:17]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:29:26]  Improved gap from 0.0 to 48.4375
[01/06 18:29:27]  Improved number of small numbers from 98 to 101 out of a max of 128
[01/06 18:29:27]  Verifer returned sat in 9.202298 secs.
[01/06 18:29:27]  sf_get_cex returned in 9.255717 secs.
[01/06 18:29:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0      -607613.332947      -607613.332947    -607613.332947       0.187988       0.191406    -607613.332947             0.0                     0.0       36.344401           100.0                2.0                4.0                  2.0             4.016276  140452.684082   0.000000       -0.113708       3.0
1      -607576.988546      -607613.219014    -607576.988546   36344.401042      36.344401    -607613.219014             0.0                     0.0       36.344401           100.0                0.0                1.0                  2.0             4.016276  140504.246358  36.230469      -12.207031       0.0
2      -607522.447530      -607564.781514    -607522.447530   54577.246094      54.541016    -607564.781514             0.0                     0.0       36.344401           100.0                0.0                1.0                  2.0             4.016276  140555.808858  42.333984       -6.103516       0.0
3      -607467.906514      -607516.344014    -607467.906514   54583.349609      54.541016    -607516.344014             0.0                     0.0       36.344401           100.0                0.0                1.0                  2.0             4.016276  140607.371358  48.437500        0.000000       0.0
4      -607413.365499      -607467.906514    -607413.365499   54589.453125      54.541016    -607467.906514             0.0                     0.0       36.344401           100.0                0.0                2.0                  2.0             4.016276  140652.830322  54.541016       -0.000020       1.0
5      -607395.217712      -607413.349223    -607395.217712   18202.327474      18.147786    -607413.349223             0.0                     0.0       39.973958           100.0                0.0                1.0                  2.0             4.016276  140704.376465  18.131510      -30.306091       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=27875/1536, buf_size=200.[0m
[01/06 18:29:27]  --------------------------------------------------------------------------------
[01/06 18:29:27]  Iteration: 45 (0 solution, 44 counterexamples)
[01/06 18:30:22]  Generator returned sat in 53.127920 secs.
[01/06 18:30:22]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 18:30:23]  Improved number of small numbers from 65 to 73 out of a max of 127
[01/06 18:30:23]  Verifer returned sat in 1.285390 secs.
[01/06 18:30:23]  sf_get_cex returned in 1.339250 secs.
[01/06 18:30:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0      -793718.402730      -793997.849202    -793718.402730       0.187988       0.191162    -793997.849202        0.000000                0.000000       93.070496      100.070557                1.0                3.0                  1.0             4.047119  326757.867574  279.446472           200.0       2.0
1      -793532.261739      -793818.426229    -793532.261739  186420.437683     186.140991    -793818.426229       86.140991                0.000000       93.070496      100.070557                0.0                2.0                  1.0             4.047119  326757.867574  200.023499           200.0       1.0
2      -793346.120748      -793718.496724    -793346.120748  186427.155701     186.140991    -793718.496724      172.281982               86.140991       93.117493      100.070557                1.0                3.0                  1.0             3.000000  326757.867574  200.093994           200.0       2.0
3      -793159.885763      -793718.402730    -793159.885763  186607.361328     186.234985    -793718.402730      258.516968              172.281982       93.117493      100.023499                2.0                4.0                  2.0             3.000000  326757.867574  300.000000           200.0       3.0
4      -792973.650777      -793618.285238    -792973.650777  186793.502319     186.234985    -793618.285238      344.751953              258.516968       93.117493      100.023499                1.0                3.0                  2.0             3.000000  326757.867574  299.882507           200.0       2.0
5      -792787.415792      -793518.355713    -792787.415792  186879.619812     186.234985    -793518.355713      430.986938              344.751953       93.117493      100.023499                1.0                3.0                  2.0             3.000000  326757.867574  299.952983           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=1412489/4096, alpha=1277/64, buf_size=200.[0m
[01/06 18:30:23]  --------------------------------------------------------------------------------
[01/06 18:30:23]  Iteration: 46 (0 solution, 45 counterexamples)
[01/06 18:30:48]  Generator returned sat in 22.049235 secs.
[01/06 18:30:48]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 18:30:50]  Improved gap from 6.0 to 100
[01/06 18:30:50]  Improved number of small numbers from 66 to 75 out of a max of 128
[01/06 18:30:50]  Verifer returned sat in 2.618635 secs.
[01/06 18:30:50]  sf_get_cex returned in 2.671876 secs.
[01/06 18:30:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0      -793718.402730      -793932.347896    -793718.402730       0.187988       0.191162    -793932.347896        0.000000                0.000000       78.334204      156.903320                0.0                1.0                  0.0             2.046875  326757.867574  213.945166      121.945166       0.0
1      -793568.781319      -793811.830929    -793568.781319  149835.356299     149.621411    -793811.830929        0.000000                0.000000       78.334204      156.903320                0.0                2.0                  0.0             2.046875  326757.867574  243.049609      171.566577       1.0
2      -793419.159908      -793697.204293    -793419.159908  149864.460742     149.621411    -793697.204293       21.187988                0.000000       78.381201      156.903320                0.0                2.0                  0.0             2.046875  326757.867574  256.856396      200.000000       1.0
3      -793269.444503      -793540.347896    -793269.444503  149993.449658     149.715405    -793540.347896       70.903394               21.187988       98.000000      156.903320                0.0                2.0                  0.0             2.000000  326757.867574  200.000000      200.000000       1.0
4      -793080.491500      -793540.347896    -793080.491500  189223.906323     188.953003    -793540.347896      159.856396               70.903394       98.000000      156.856396                0.0                2.0                  0.0             2.000000  326757.867574  300.000000      200.000000       1.0
5      -792891.538497      -793383.397705    -792891.538497  189412.859326     188.953003    -793383.397705      248.809399              159.856396       98.000000      156.856396                1.0                3.0                  1.0             2.000000  326757.867574  243.049809      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=10191233/40960, alpha=57729/8192, buf_size=200.[0m
[01/06 18:30:50]  --------------------------------------------------------------------------------
[01/06 18:30:50]  Iteration: 47 (0 solution, 46 counterexamples)
[01/06 18:32:18]  Generator returned sat in 85.079916 secs.
[01/06 18:32:18]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 18:32:19]  Improved gap from 12.541341145833334 to 100
[01/06 18:32:20]  Improved number of small numbers from 57 to 74 out of a max of 128
[01/06 18:32:20]  Verifer returned sat in 2.338707 secs.
[01/06 18:32:20]  sf_get_cex returned in 2.392910 secs.
[01/06 18:32:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.601122e+07        1.601105e+07      1.601122e+07       0.187988       0.191162      1.601105e+07        0.047119                0.000000       95.070496      103.133301                1.0                3.0                  1.0             4.046875  -1.647813e+07  169.999878      169.999878       2.0
1        1.601134e+07        1.601105e+07      1.601134e+07  115193.545532     115.023499      1.601105e+07        0.047119                0.047119       95.070496      103.133301                1.0                3.0                  1.0             4.046875  -1.647813e+07  285.023376      185.023376       2.0
2        1.601145e+07        1.601116e+07      1.601145e+07  115308.569031     115.023499      1.601116e+07        0.093994                0.047119       95.070496      103.133301                1.0                3.0                  1.0             4.046875  -1.647813e+07  296.819845      200.000000       2.0
3        1.601157e+07        1.601134e+07      1.601157e+07  115320.412374     115.023499      1.601134e+07       15.117493                0.093994       95.070496      103.133301                0.0                2.0                  1.0             2.000000  -1.647813e+07  214.929504      200.000000       1.0
4        1.601168e+07        1.601144e+07      1.601168e+07  115253.545532     115.023499      1.601144e+07       30.140991               15.117493       97.133158      103.133301                1.0                3.0                  1.0             2.000000  -1.647813e+07  211.467367      200.000000       2.0
5        1.601180e+07        1.601146e+07      1.601180e+07  117327.769653     117.086161      1.601146e+07       47.227153               30.140991       97.133158      103.133301                1.0                3.0                  1.0             2.000000  -1.647813e+07  287.279569      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=2318993/49152, alpha=163455/8192, buf_size=200.[0m
[01/06 18:32:20]  --------------------------------------------------------------------------------
[01/06 18:32:20]  Iteration: 48 (0 solution, 47 counterexamples)
[01/06 18:35:07]  Generator returned sat in 164.268711 secs.
[01/06 18:35:07]  Candidate solution: 
[1m[94mif (+ -1max_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 1max_c + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 18:35:14]  Improved gap from 0.0 to 48.4375
[01/06 18:35:15]  Improved number of small numbers from 75 to 83 out of a max of 128
[01/06 18:35:15]  Verifer returned sat in 7.965809 secs.
[01/06 18:35:15]  sf_get_cex returned in 8.021273 secs.
[01/06 18:35:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.601190e+07        1.601189e+07      1.601190e+07       0.187744       0.190918      1.601189e+07             0.0                     0.0       36.640438           100.0                0.0                2.0                  0.0             3.000244  -1.647897e+07  13.124735       13.124611       1.0
1        1.601194e+07        1.601189e+07      1.601194e+07   36388.140313      36.375016      1.601189e+07             0.0                     0.0       36.640438           100.0                0.0                2.0                  0.0             3.000244  -1.647892e+07  49.499626        0.000000       1.0
2        1.601197e+07        1.601194e+07      1.601197e+07   36424.515204      36.375016      1.601194e+07             0.0                     0.0       36.640438           100.0                0.0                1.0                  0.0             3.000244  -1.647887e+07  36.374891      -12.249978       0.0
3        1.601201e+07        1.601198e+07      1.601201e+07   36411.390469      36.375016      1.601198e+07             0.0                     0.0       36.640438           100.0                0.0                1.0                  0.0             3.000244  -1.647882e+07  24.124907      -24.312593       0.0
4        1.601204e+07        1.601203e+07      1.601204e+07   36399.140485      36.375016      1.601203e+07             0.0                     0.0       36.640563           100.0                0.0                1.0                  0.0             3.000244  -1.647876e+07  12.062422      -36.375078       0.0
5        1.601208e+07        1.601208e+07      1.601208e+07   36387.140313      36.375078      1.601208e+07             0.0                     0.0       38.999950           100.0                0.0                1.0                  0.0             3.000244  -1.647876e+07   0.000000      -99.999869       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2317947/128384, buf_size=200.[0m
[01/06 18:35:15]  --------------------------------------------------------------------------------
[01/06 18:35:15]  Iteration: 49 (0 solution, 48 counterexamples)
[01/06 18:35:54]  Generator returned sat in 36.804106 secs.
[01/06 18:35:54]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c + -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:35:55]  Improved number of small numbers from 102 to 104 out of a max of 127
[01/06 18:35:55]  Verifer returned sat in 0.830214 secs.
[01/06 18:35:55]  sf_get_cex returned in 0.883015 secs.
[01/06 18:35:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.582207e+07        1.582187e+07      1.582207e+07       0.187744       0.190674      1.582187e+07        0.024414                0.000000           100.0           101.0                0.0                1.0                  0.0                  3.0  -1.647892e+07  201.975586      199.975586       0.0
1        1.582217e+07        1.582197e+07      1.582217e+07  100250.621554     100.048622      1.582197e+07        0.048622                0.024414           100.0           101.0                0.0                2.0                  0.0                  2.0  -1.647892e+07  201.024311      200.000000       1.0
2        1.582227e+07        1.582207e+07      1.582227e+07  100249.694486     100.048622      1.582207e+07        0.097243                0.048622           100.0           101.0                0.0                2.0                  0.0                  2.0  -1.647892e+07  200.000000      200.000000       1.0
3        1.582237e+07        1.582207e+07      1.582237e+07  100248.718797     100.048622      1.582207e+07        0.145865                0.097243           100.0           101.0                0.0                2.0                  0.0                  2.0  -1.647892e+07  300.000000      200.000000       1.0
4        1.582247e+07        1.582217e+07      1.582247e+07  100348.767419     100.048622      1.582217e+07        0.194486                0.145865           100.0           101.0                1.0                3.0                  1.0                  2.0  -1.647892e+07  298.927068      200.000000       2.0
5        1.582257e+07        1.582231e+07      1.582257e+07  100299.121554     100.000000      1.582231e+07        0.194486                0.194486           100.0           101.0                1.0                3.0                  1.0                  2.0  -1.647892e+07  257.902812      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=97/665, alpha=97/1995, buf_size=200.[0m
[01/06 18:35:55]  --------------------------------------------------------------------------------
[01/06 18:35:55]  Iteration: 50 (0 solution, 49 counterexamples)
[01/06 18:36:52]  Generator returned sat in 54.638657 secs.
[01/06 18:36:52]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:37:01]  Improved gap from 2.5345458984375 to 48.4375
[01/06 18:37:02]  Improved number of small numbers from 88 to 95 out of a max of 128
[01/06 18:37:02]  Verifer returned sat in 9.988657 secs.
[01/06 18:37:02]  sf_get_cex returned in 10.075310 secs.
[01/06 18:37:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.582212e+07        1.582212e+07      1.582212e+07       0.187744       0.190674      1.582212e+07             0.0                     0.0       97.062744           100.0                0.0                2.0                  0.0                101.0  -1.647924e+07   0.000000       -0.093835       1.0
1        1.582217e+07        1.582212e+07      1.582217e+07   48531.372070      48.531372      1.582212e+07             0.0                     0.0       97.062744           100.0                0.0                1.0                  0.0                101.0  -1.647919e+07  48.437500        0.000000       0.0
2        1.582222e+07        1.582217e+07      1.582222e+07   48579.809570      48.531372      1.582217e+07             0.0                     0.0       97.062744           100.0                0.0                2.0                  0.0                101.0  -1.647914e+07  48.531372        0.000000       1.0
3        1.582227e+07        1.582222e+07      1.582227e+07   48579.903442      48.531372      1.582222e+07             0.0                     0.0       97.062744           100.0                0.0                2.0                  0.0                101.0  -1.647909e+07  48.531372       -5.874474       1.0
4        1.582232e+07        1.582227e+07      1.582232e+07   48579.903442      48.531372      1.582227e+07             0.0                     0.0       97.062744           100.0                0.0                1.0                  0.0                101.0  -1.647904e+07  42.656860       -5.780846       0.0
5        1.582237e+07        1.582232e+07      1.582237e+07   48574.028931      48.531372      1.582232e+07             0.0                     0.0       97.062744           100.0                0.0                1.0                  0.0                101.0  -1.647904e+07  42.750506      -57.249230       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=385/4096, buf_size=200.[0m
[01/06 18:37:02]  --------------------------------------------------------------------------------
[01/06 18:37:02]  Iteration: 51 (0 solution, 50 counterexamples)
[01/06 18:39:29]  Generator returned sat in 142.664102 secs.
[01/06 18:39:29]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 18:39:34]  Improved gap from 0.020833333333333332 to 48.4375
[01/06 18:39:35]  Improved number of small numbers from 85 to 96 out of a max of 128
[01/06 18:39:35]  Verifer returned sat in 6.028462 secs.
[01/06 18:39:35]  sf_get_cex returned in 6.112561 secs.
[01/06 18:39:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.566172e+07        1.566172e+07      1.566172e+07       0.187500       0.190674      1.566172e+07             0.0                     0.0           69.75           100.0                0.0                2.0                  0.0              5.09375  -1.647924e+07   0.000000        0.000000       1.0
1        1.566177e+07        1.566172e+07      1.566177e+07   49843.872070      49.843872      1.566172e+07             0.0                     0.0           69.75           100.0                0.0                2.0                  0.0              5.09375  -1.647919e+07  49.843872        0.000000       1.0
2        1.566182e+07        1.566177e+07      1.566182e+07   49893.715942      49.843872      1.566177e+07             0.0                     0.0           69.75           100.0                0.0                2.0                  0.0              5.09375  -1.647914e+07  49.843872       -0.093750       1.0
3        1.566187e+07        1.566182e+07      1.566187e+07   49893.715942      49.843872      1.566182e+07             0.0                     0.0           69.75           100.0                0.0                1.0                  0.0              5.09375  -1.647909e+07  49.750000        0.000000       0.0
4        1.566191e+07        1.566187e+07      1.566191e+07   34924.750000      34.875000      1.566187e+07             0.0                     0.0           69.75           100.0                0.0                2.0                  0.0              5.09375  -1.647904e+07  34.875000      -14.875122       1.0
5        1.566196e+07        1.566192e+07      1.566196e+07   49878.747070      49.843872      1.566192e+07             0.0                     0.0           69.75           100.0                0.0                1.0                  0.0              5.09375  -1.647904e+07  34.968638      -65.031250       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=163071/8192, buf_size=200.[0m
[01/06 18:39:35]  --------------------------------------------------------------------------------
[01/06 18:39:35]  Iteration: 52 (0 solution, 51 counterexamples)
[01/06 18:42:39]  Generator returned sat in 180.005468 secs.
[01/06 18:42:39]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + 1max_qdel + 1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 18:42:46]  Improved gap from 10.125 to 100
[01/06 18:42:48]  Improved number of small numbers from 97 to 99 out of a max of 128
[01/06 18:42:48]  Verifer returned sat in 8.601061 secs.
[01/06 18:42:48]  sf_get_cex returned in 8.689453 secs.
[01/06 18:42:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.576121e+07        1.576091e+07      1.576121e+07       0.187500       0.190186      1.576091e+07        0.093750                0.000000       98.177083      102.364583                1.0                3.0                  1.0                  2.0  -1.657853e+07  299.000000      200.000000       2.0
1        1.576140e+07        1.576111e+07      1.576140e+07  184622.010417     184.322917      1.576111e+07       84.416667                0.093750       98.270833      102.364583                1.0                3.0                  1.0                  2.0  -1.657853e+07  202.458333      200.000000       2.0
2        1.576158e+07        1.576111e+07      1.576158e+07  184797.291667     184.510417      1.576111e+07      168.927083               84.416667       98.270833      102.364583                1.0                3.0                  1.0                  2.0  -1.657853e+07  299.635417      200.000000       2.0
3        1.576177e+07        1.576121e+07      1.576177e+07  184978.979167     184.510417      1.576121e+07      253.437500              168.927083       98.270833      102.364583                2.0                4.0                  2.0                  2.0  -1.657853e+07  300.000000      200.000000       3.0
4        1.576181e+07        1.576141e+07      1.576181e+07   49688.854167      49.135417      1.576141e+07      253.437500              253.437500       99.541667      102.364583                1.0                3.0                  2.0                  2.0  -1.657853e+07  150.427083      149.135417       2.0
5        1.576200e+07        1.576142e+07      1.576200e+07  187455.947917     187.052083      1.576142e+07      289.625000              253.437500       99.541667      102.364583                1.0                3.0                  2.0                  2.0  -1.657853e+07  295.364349      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=4925/24, alpha=385/32, buf_size=200.[0m
[01/06 18:42:48]  --------------------------------------------------------------------------------
[01/06 18:42:48]  Iteration: 53 (0 solution, 52 counterexamples)
[01/06 18:44:24]  Generator returned sat in 92.645240 secs.
[01/06 18:44:25]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1min_qdel + -1max_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:44:32]  Improved gap from 0.03365384615384615 to 100
[01/06 18:44:32]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/06 18:44:32]  Verifer returned sat in 7.505095 secs.
[01/06 18:44:32]  sf_get_cex returned in 7.595359 secs.
[01/06 18:44:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.576121e+07        1.576101e+07      1.576121e+07       0.187500       0.189941      1.576101e+07        0.000000                0.000000        87.90625           100.0                2.0                4.0                  2.0             3.999756  -1.657853e+07  200.374756      136.374756       3.0
1        1.576130e+07        1.576111e+07      1.576130e+07   88106.624756      87.906250      1.576111e+07        0.000000                0.000000        87.90625           100.0                0.0                2.0                  2.0             3.999756  -1.657853e+07  188.140381      124.281006       1.0
2        1.576147e+07        1.576127e+07      1.576147e+07  175953.765381     175.765625      1.576127e+07        0.046631                0.000000        87.90625           100.0                0.0                2.0                  2.0             3.999756  -1.657853e+07  200.421875      200.000000       1.0
3        1.576165e+07        1.576137e+07      1.576165e+07  175966.093506     175.765625      1.576137e+07       75.812256                0.046631        91.00000           100.0                0.0                2.0                  2.0             2.000000  -1.657853e+07  200.000000      200.000000       1.0
4        1.576183e+07        1.576137e+07      1.576183e+07  182228.937256     181.953125      1.576137e+07      157.765381               75.812256        91.00000           100.0                0.0                2.0                  2.0             2.000000  -1.657853e+07  300.000000      200.000000       1.0
5        1.576201e+07        1.576147e+07      1.576201e+07  182410.890381     181.953125      1.576147e+07      239.718506              157.765381        91.00000           100.0                1.0                3.0                  2.0             2.000000  -1.657853e+07  299.953125      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=981887/4096, alpha=3/64, buf_size=200.[0m
[01/06 18:44:32]  --------------------------------------------------------------------------------
[01/06 18:44:32]  Iteration: 54 (0 solution, 53 counterexamples)
[01/06 18:46:02]  Generator returned sat in 85.388681 secs.
[01/06 18:46:02]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_c + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:46:18]  Improved gap from 0.25 to 48.4375
[01/06 18:46:18]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/06 18:46:18]  Verifer returned sat in 16.167523 secs.
[01/06 18:46:18]  sf_get_cex returned in 16.255524 secs.
[01/06 18:46:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.576127e+07        1.576127e+07      1.576127e+07        0.18750       0.189941      1.576127e+07             0.0                     0.0       30.088542           100.0                0.0                1.0                  0.0              2.09375  -1.657858e+07   0.000000       -0.468750       0.0
1        1.576132e+07        1.576127e+07      1.576132e+07    48812.50000      48.812500      1.576127e+07             0.0                     0.0       30.088542           100.0                0.0                1.0                  0.0              2.09375  -1.657853e+07  48.343750       -0.093750       0.0
2        1.576137e+07        1.576132e+07      1.576137e+07    48860.84375      48.812500      1.576132e+07             0.0                     0.0       30.088542           100.0                0.0                1.0                  0.0              2.09375  -1.657847e+07  48.718750        0.000000       0.0
3        1.576142e+07        1.576137e+07      1.576142e+07    48861.21875      48.812500      1.576137e+07             0.0                     0.0       32.416667           100.0                0.0                1.0                  0.0              2.09375  -1.657842e+07  48.718750        0.000000       0.0
4        1.576147e+07        1.576142e+07      1.576147e+07    53517.46875      53.468750      1.576142e+07             0.0                     0.0       36.492188           100.0                0.0                2.0                  0.0              2.09375  -1.657838e+07  53.468750        0.000000       1.0
5        1.576151e+07        1.576147e+07      1.576151e+07    36545.65625      36.492188      1.576147e+07             0.0                     0.0       39.887500           100.0                0.0                2.0                  0.0              2.09375  -1.657838e+07  36.492188      -63.507812       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1091/96, buf_size=200.[0m
[01/06 18:46:18]  --------------------------------------------------------------------------------
[01/06 18:46:18]  Iteration: 55 (0 solution, 54 counterexamples)
[01/06 18:51:43]  Generator returned sat in 320.827940 secs.
[01/06 18:51:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + 1min_qdel + -1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 18:51:47]  Improved gap from 0.6553955078125 to 100
[01/06 18:51:47]  Improved number of small numbers from 103 to 103 out of a max of 128
[01/06 18:51:47]  Verifer returned sat in 4.062948 secs.
[01/06 18:51:47]  sf_get_cex returned in 4.116822 secs.
[01/06 18:51:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.566180e+07        1.566161e+07      1.566180e+07       0.187256       0.189941      1.566161e+07        0.000000                0.000000       55.593750       112.18750                0.0                2.0                  0.0              2.03125  -1.657842e+07  187.81250       187.81250       1.0
1        1.566191e+07        1.566168e+07      1.566191e+07  109344.062500     109.156250      1.566168e+07        0.000000                0.000000       55.593750       112.18750                0.0                2.0                  0.0              2.03125  -1.657842e+07  221.87500       196.96875       1.0
2        1.566202e+07        1.566180e+07      1.566202e+07  109378.125000     109.156250      1.566180e+07        6.125000                0.000000       62.614583       112.18750                0.0                2.0                  0.0              2.03125  -1.657842e+07  212.15625       200.00000       1.0
3        1.566214e+07        1.566191e+07      1.566214e+07  123416.197917     123.197917      1.566191e+07       29.322917                6.125000       75.000000       112.18750                0.0                2.0                  0.0              2.00000  -1.657842e+07  200.00000       200.00000       1.0
4        1.566229e+07        1.566191e+07      1.566229e+07  148198.072917     147.968750      1.566191e+07       77.291667               29.322917       75.000000       112.15625                0.0                2.0                  0.0              2.00000  -1.657842e+07  300.00000       200.00000       1.0
5        1.566243e+07        1.566202e+07      1.566243e+07  148346.041667     147.968750      1.566202e+07      125.260417               77.291667       75.000000       112.09375                1.0                3.0                  1.0              2.00000  -1.657842e+07  287.90625       200.00000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=12025/96, alpha=65/32, buf_size=200.[0m
[01/06 18:51:48]  --------------------------------------------------------------------------------
[01/06 18:51:48]  Iteration: 56 (0 solution, 55 counterexamples)
[01/06 18:54:16]  Generator returned sat in 145.573027 secs.
[01/06 18:54:16]  Candidate solution: 
[1m[94mif (+ -1max_c + 1max_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1max_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:54:36]  Improved gap from 0.0 to 48.4375
[01/06 18:54:36]  Improved number of small numbers from 81 to 85 out of a max of 128
[01/06 18:54:36]  Verifer returned sat in 20.685082 secs.
[01/06 18:54:36]  sf_get_cex returned in 20.740368 secs.
[01/06 18:54:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.566175e+07        1.566174e+07      1.566175e+07       0.187012       0.189697      1.566174e+07             0.0                     0.0       32.377492           100.0                0.0                1.0                  0.0                  2.0  -1.657856e+07   5.922302       -0.023315       0.0
1        1.566180e+07        1.566175e+07      1.566180e+07   48513.643250      48.507721      1.566175e+07             0.0                     0.0       32.377492           100.0                0.0                1.0                  0.0                  2.0  -1.657851e+07  48.484314       -0.140350       0.0
2        1.566185e+07        1.566180e+07      1.566185e+07   48556.205261      48.507721      1.566180e+07             0.0                     0.0       32.377492           100.0                0.0                1.0                  0.0                  2.0  -1.657846e+07  48.367279       -0.070221       0.0
3        1.566189e+07        1.566185e+07      1.566189e+07   48556.088226      48.507721      1.566185e+07             0.0                     0.0       32.377492           100.0                0.0                1.0                  0.0                  2.0  -1.657841e+07  48.437500        0.000000       0.0
4        1.566194e+07        1.566189e+07      1.566194e+07   48556.158447      48.507721      1.566189e+07             0.0                     0.0       36.374939           100.0                0.0                2.0                  0.0                  2.0  -1.657836e+07  48.507721       -0.023193       1.0
5        1.566196e+07        1.566194e+07      1.566196e+07   16178.736399      16.130229      1.566194e+07             0.0                     0.0       38.806177           100.0                0.0                1.0                  0.0                  2.0  -1.657831e+07  16.106822      -32.330709       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=792833/49152, buf_size=200.[0m
[01/06 18:54:37]  --------------------------------------------------------------------------------
[01/06 18:54:37]  Iteration: 57 (0 solution, 56 counterexamples)
[01/06 18:54:59]  Generator returned sat in 20.152258 secs.
[01/06 18:54:59]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 18:55:04]  Improved gap from 0.0 to 100
[01/06 18:55:04]  Improved number of small numbers from 103 to 128 out of a max of 128
[01/06 18:55:04]  Verifer returned sat in 4.216191 secs.
[01/06 18:55:04]  sf_get_cex returned in 4.268684 secs.
[01/06 18:55:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.569242e+07        1.569222e+07      1.569242e+07       0.186768       0.189697      1.569222e+07        0.000000                0.000000       60.687012      103.999756                0.0                2.0                  0.0            40.312988  -1.660903e+07  199.812744      199.812744       1.0
1        1.569254e+07        1.569222e+07      1.569254e+07  121573.836182     121.374023      1.569222e+07       21.186768                0.000000       60.687012      103.999756                1.0                3.0                  1.0            40.312988  -1.660903e+07  296.000000      200.000000       2.0
2        1.569258e+07        1.569242e+07      1.569258e+07   41191.210205      40.874023      1.569242e+07       21.186768               21.186768       98.000000      103.999756                0.0                2.0                  1.0             2.000000  -1.660903e+07  140.874023      140.874023       1.0
3        1.569277e+07        1.569242e+07      1.569277e+07  196162.060791     196.000000      1.569242e+07       58.060791               21.186768       98.000000      103.999756                0.0                2.0                  1.0             2.000000  -1.660903e+07  300.000000      200.000000       1.0
4        1.569297e+07        1.569262e+07      1.569297e+07  196358.060791     196.000000      1.569262e+07      154.060791               58.060791      100.000000      103.999756                0.0                2.0                  1.0             2.000000  -1.660903e+07  200.000000      200.000000       1.0
5        1.569317e+07        1.569262e+07      1.569317e+07  200354.060791     200.000000      1.569262e+07      254.060791              154.060791      100.000000      103.999756                1.0                3.0                  1.0             2.000000  -1.660903e+07  299.812988      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=238463/1024, alpha=40577/2048, buf_size=200.[0m
[01/06 18:55:04]  --------------------------------------------------------------------------------
[01/06 18:55:04]  Iteration: 58 (0 solution, 57 counterexamples)
[01/06 18:56:16]  Generator returned sat in 69.520578 secs.
[01/06 18:56:16]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + -1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 18:56:17]  Improved number of small numbers from 69 to 78 out of a max of 127
[01/06 18:56:17]  Verifer returned sat in 1.181585 secs.
[01/06 18:56:17]  sf_get_cex returned in 1.235282 secs.
[01/06 18:56:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.569253e+07        1.569233e+07      1.569253e+07       0.186523       0.189453      1.569233e+07        0.046875                0.000000       67.334433      202.499756                0.0                2.0                  0.0             2.046631  -1.660903e+07  202.453125      199.953125       1.0
1        1.569265e+07        1.569234e+07      1.569265e+07  116918.058842     116.715559      1.569234e+07       16.715559                0.046875       67.334433      202.499756                0.0                2.0                  0.0             2.000000  -1.660903e+07  297.453308      200.000000       1.0
2        1.569274e+07        1.569253e+07      1.569274e+07   85601.910446      85.287742      1.569253e+07       16.715559               16.715559       98.726654      202.499756                0.0                2.0                  0.0             2.000000  -1.660903e+07  185.287742      185.287742       1.0
3        1.569285e+07        1.569253e+07      1.569285e+07  116881.965459     116.679962      1.569253e+07       18.683263               16.715559       98.726654      202.499756                0.0                2.0                  0.0             2.000000  -1.660903e+07  300.000000      200.000000       1.0
4        1.569297e+07        1.569273e+07      1.569297e+07  116998.645421     116.679962      1.569273e+07       35.363225               18.683263       98.726654      202.499756                0.0                2.0                  0.0             2.000000  -1.660903e+07  202.733699      200.000000       1.0
5        1.569309e+07        1.569274e+07      1.569309e+07  116918.059082     116.679962      1.569274e+07       52.043187               35.363225       98.726654      202.499756                1.0                3.0                  1.0             2.000000  -1.660903e+07  297.453426      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=2311758585/65437696, alpha=294147/16384, buf_size=200.[0m
[01/06 18:56:17]  --------------------------------------------------------------------------------
[01/06 18:56:17]  Iteration: 59 (0 solution, 58 counterexamples)
[01/06 18:57:25]  Generator returned sat in 65.359064 secs.
[01/06 18:57:25]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 18:57:33]  Improved gap from 2.643798828125 to 48.4375
[01/06 18:57:33]  Improved number of small numbers from 107 to 107 out of a max of 128
[01/06 18:57:33]  Verifer returned sat in 7.487770 secs.
[01/06 18:57:33]  sf_get_cex returned in 7.541897 secs.
[01/06 18:57:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.569245e+07        1.569244e+07      1.569245e+07       0.186523       0.189453      1.569244e+07        0.093262                0.000000       39.069434           100.0                0.0                1.0                  0.0             2.906738  -1.660913e+07  11.663452       11.663452       0.0
1        1.569248e+07        1.569244e+07      1.569248e+07   36879.066284      36.867310      1.569244e+07        0.093262                0.093262       39.069434           100.0                0.0                2.0                  0.0             2.000000  -1.660908e+07  48.437500        0.000000       1.0
2        1.569252e+07        1.569248e+07      1.569252e+07   36915.840332      36.867310      1.569248e+07        0.093262                0.093262       39.069434           100.0                0.0                2.0                  0.0             2.000000  -1.660903e+07  36.867310      -13.633667       1.0
3        1.569256e+07        1.569253e+07      1.569256e+07   36904.270142      36.867310      1.569253e+07        0.093262                0.093262       39.069434           100.0                0.0                1.0                  0.0             2.000000  -1.660898e+07  23.233643      -25.203857       0.0
4        1.569259e+07        1.569258e+07      1.569259e+07   36890.636475      36.867310      1.569258e+07        0.093262                0.093262       39.069434           100.0                0.0                1.0                  0.0             2.000000  -1.660893e+07  11.663452      -36.774048       0.0
5        1.569263e+07        1.569263e+07      1.569263e+07   36879.066284      36.867310      1.569263e+07        0.093262                0.093262       39.162695           100.0                0.0                1.0                  0.0             2.000000  -1.660888e+07   0.093262      -48.344238       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=90199/40960, buf_size=200.[0m
[01/06 18:57:33]  --------------------------------------------------------------------------------
[01/06 18:57:33]  Iteration: 60 (0 solution, 59 counterexamples)
[01/06 18:57:50]  Generator returned sat in 14.276050 secs.
[01/06 18:57:50]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 18:57:59]  Improved gap from 4.103515625 to 48.4375
[01/06 18:57:59]  Improved number of small numbers from 98 to 104 out of a max of 128
[01/06 18:57:59]  Verifer returned sat in 8.962495 secs.
[01/06 18:57:59]  sf_get_cex returned in 9.014067 secs.
[01/06 18:57:59]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t   queue_t  bottle_queue_t  qdelay_t
0        1.572920e+07        1.572920e+07      1.572920e+07       0.186279       0.189209      1.572920e+07           0.025                   0.000         50.4625           100.0                0.0                2.0                  0.0             2.024902  -1.664590e+07   0.15000        0.149878       1.0
1        1.572925e+07        1.572920e+07      1.572925e+07   50462.675000      50.462500      1.572920e+07           0.025                   0.025         50.4625           100.0                0.0                2.0                  0.0             2.000000  -1.664585e+07  50.46250        0.000000       1.0
2        1.572930e+07        1.572925e+07      1.572930e+07   50512.987500      50.462500      1.572925e+07           0.025                   0.025         50.4625           100.0                0.0                2.0                  0.0             2.000000  -1.664580e+07  50.46250       -0.000073       1.0
3        1.572935e+07        1.572930e+07      1.572935e+07   50512.987500      50.462500      1.572930e+07           0.025                   0.025         50.4625           100.0                0.0                1.0                  0.0             2.000000  -1.664575e+07  50.43750        0.000000       0.0
4        1.572938e+07        1.572935e+07      1.572938e+07   25281.712500      25.231250      1.572935e+07           0.025                   0.025         50.4625           100.0                0.0                2.0                  0.0             2.000000  -1.664570e+07  25.23125      -23.206470       1.0
5        1.572943e+07        1.572940e+07      1.572943e+07   50487.756250      50.462500      1.572940e+07           0.025                   0.025         50.4625           100.0                0.0                1.0                  0.0             2.000000  -1.664570e+07  27.25603      -72.743726       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40909/2048, buf_size=200.[0m
[01/06 18:57:59]  --------------------------------------------------------------------------------
[01/06 18:57:59]  Iteration: 61 (0 solution, 60 counterexamples)
[01/06 19:01:03]  Generator returned sat in 180.506912 secs.
[01/06 19:01:03]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 19:01:06]  Improved gap from 2.2353515625 to 100
[01/06 19:01:07]  Improved number of small numbers from 67 to 79 out of a max of 128
[01/06 19:01:07]  Verifer returned sat in 4.101816 secs.
[01/06 19:01:07]  sf_get_cex returned in 4.154938 secs.
[01/06 19:01:07]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.567597e+07        1.567568e+07      1.567597e+07       0.186035       0.188965      1.567568e+07        0.000000                0.000000       23.302454      115.232666                0.0                2.0                  0.0             5.023193  -1.659246e+07  284.000000      200.000000       1.0
1        1.567601e+07        1.567583e+07      1.567601e+07   46888.907227      46.604907      1.567583e+07        0.000000                0.000000       76.744116      115.232666                1.0                3.0                  1.0             5.023193  -1.659246e+07  177.116675      146.604907       2.0
2        1.567617e+07        1.567591e+07      1.567617e+07  153665.349097     153.488232      1.567591e+07        0.093140                0.000000       76.790686      115.232666                2.0                4.0                  2.0             5.023193  -1.659246e+07  253.627942      200.000000       3.0
3        1.567632e+07        1.567607e+07      1.567632e+07  153835.093152     153.581372      1.567607e+07       53.674512                0.093140       96.000000      115.232666                0.0                2.0                  2.0             2.000000  -1.659246e+07  200.000000      200.000000       1.0
4        1.567651e+07        1.567607e+07      1.567651e+07  192253.674512     192.000000      1.567607e+07      145.674512               53.674512       96.000000      115.232666                0.0                2.0                  2.0             2.000000  -1.659246e+07  300.000000      200.000000       1.0
5        1.567670e+07        1.567618e+07      1.567670e+07  192445.674512     192.000000      1.567618e+07      237.674512              145.674512       96.000000      115.232666                1.0                3.0                  2.0             2.000000  -1.659246e+07  284.744135      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=2433787/10240, alpha=95/4096, buf_size=200.[0m
[01/06 19:01:07]  --------------------------------------------------------------------------------
[01/06 19:01:07]  Iteration: 62 (0 solution, 61 counterexamples)
[01/06 19:02:43]  Generator returned sat in 92.881306 secs.
[01/06 19:02:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 19:03:01]  Improved gap from 19.906982421875 to 48.4375
[01/06 19:03:02]  Improved number of small numbers from 75 to 84 out of a max of 128
[01/06 19:03:02]  Verifer returned sat in 19.415030 secs.
[01/06 19:03:02]  sf_get_cex returned in 19.468653 secs.
[01/06 19:03:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.572233e+07        1.572232e+07      1.572233e+07       0.186035       0.188965      1.572232e+07             0.0                     0.0       97.002242           100.0                2.0                4.0                  2.0           103.023438  -1.663902e+07   6.059031        6.059003       3.0
1        1.572237e+07        1.572233e+07      1.572237e+07   48507.179947      48.501121      1.572233e+07             0.0                     0.0       97.002242           100.0                0.0                1.0                  2.0           103.023438  -1.663897e+07  48.458742        0.000000       0.0
2        1.572242e+07        1.572237e+07      1.572242e+07   48507.201190      48.458742      1.572237e+07             0.0                     0.0       97.002242           100.0                0.0                2.0                  2.0           103.023438  -1.663892e+07  48.458742       -0.084649       1.0
3        1.572247e+07        1.572242e+07      1.572247e+07   48549.579659      48.501121      1.572242e+07             0.0                     0.0       97.002242           100.0                0.0                1.0                  2.0           103.023438  -1.663887e+07  48.416258       -0.021242       0.0
4        1.572252e+07        1.572247e+07      1.572252e+07   48507.158705      48.458742      1.572247e+07             0.0                     0.0       97.002242           100.0                0.0                1.0                  2.0           103.023438  -1.663882e+07  48.437500        0.000000       0.0
5        1.572257e+07        1.572252e+07      1.572257e+07   48507.179947      48.458742      1.572252e+07             0.0                     0.0       97.002242           100.0                0.0                2.0                  2.0           103.023438  -1.663876e+07  48.458742       -0.000027       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=447975/10570816, buf_size=200.[0m
[01/06 19:03:02]  --------------------------------------------------------------------------------
[01/06 19:03:02]  Iteration: 63 (0 solution, 62 counterexamples)
[01/06 19:05:12]  Generator returned sat in 126.904898 secs.
[01/06 19:05:12]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 19:05:21]  Improved gap from 0.6046142578125 to 48.4375
[01/06 19:05:21]  Improved number of small numbers from 98 to 128 out of a max of 128
[01/06 19:05:21]  Verifer returned sat in 8.481694 secs.
[01/06 19:05:21]  sf_get_cex returned in 8.537480 secs.
[01/06 19:05:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.585963e+07        1.585963e+07      1.585963e+07       0.185791       0.188721      1.585963e+07        0.093018                0.000000           97.75           100.0                2.0                4.0                  2.0                  2.0  -1.677633e+07   0.093018        0.000244       3.0
1        1.585968e+07        1.585963e+07      1.585968e+07   48875.186035      48.875000      1.585963e+07        0.093018                0.093018           97.75           100.0                1.0                3.0                  2.0                  2.0  -1.677627e+07  48.875000        0.000000       2.0
2        1.585973e+07        1.585968e+07      1.585973e+07   48923.968018      48.875000      1.585968e+07        0.093018                0.093018           97.75           100.0                0.0                2.0                  2.0                  2.0  -1.677622e+07  48.875000        0.000000       1.0
3        1.585978e+07        1.585973e+07      1.585978e+07   48923.968018      48.875000      1.585973e+07        0.093018                0.093018           97.75           100.0                0.0                2.0                  2.0                  2.0  -1.677617e+07  48.875000        0.000000       1.0
4        1.585983e+07        1.585978e+07      1.585983e+07   48923.968018      48.875000      1.585978e+07        0.093018                0.093018           97.75           100.0                0.0                2.0                  2.0                  2.0  -1.677612e+07  48.875000        0.000000       1.0
5        1.585987e+07        1.585983e+07      1.585987e+07   48923.968018      48.875000      1.585983e+07        0.093018                0.093018           97.75           100.0                0.0                1.0                  2.0                  2.0  -1.677612e+07  44.561035      -51.125000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=95/1024, buf_size=200.[0m
[01/06 19:05:21]  --------------------------------------------------------------------------------
[01/06 19:05:21]  Iteration: 64 (0 solution, 63 counterexamples)
[01/06 19:12:09]  Generator returned sat in 405.157519 secs.
[01/06 19:12:09]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 19:12:13]  Improved gap from 5.95355224609375 to 100
[01/06 19:12:13]  Improved number of small numbers from 127 to 127 out of a max of 128
[01/06 19:12:13]  Verifer returned sat in 4.235506 secs.
[01/06 19:12:13]  sf_get_cex returned in 4.291627 secs.
[01/06 19:12:13]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.580836e+07        1.580806e+07      1.580836e+07       0.185791       0.188721      1.580806e+07        0.023810                0.000000       50.238095           101.5                0.0                1.0                  0.0              2.02381  -1.677627e+07  298.976190      199.976190       0.0
1        1.580846e+07        1.580826e+07      1.580846e+07  100346.619048     100.047619      1.580826e+07        0.047619                0.023810       99.500000           101.5                0.0                2.0                  0.0              2.00000  -1.677627e+07  200.000000      200.000000       1.0
2        1.580856e+07        1.580836e+07      1.580856e+07  100128.619048      99.928571      1.580836e+07        0.047619                0.047619       99.666667           101.5                0.0                2.0                  0.0              2.00000  -1.677627e+07  199.928571      199.928571       1.0
3        1.580866e+07        1.580836e+07      1.580866e+07  100295.214286     100.095238      1.580836e+07        0.071429                0.047619       99.666667           101.5                0.0                2.0                  0.0              2.00000  -1.677627e+07  300.000000      200.000000       1.0
4        1.580876e+07        1.580856e+07      1.580876e+07  100395.309524     100.095238      1.580856e+07        0.166667                0.071429       99.976190           101.5                0.0                2.0                  0.0              2.00000  -1.677627e+07  200.047619      200.000000       1.0
5        1.580886e+07        1.580866e+07      1.580886e+07  100604.976190     100.404762      1.580866e+07        0.571429                0.166667      100.000000           101.5                1.0                3.0                  1.0              2.00000  -1.677627e+07  200.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=11/21, alpha=3/7, buf_size=200.[0m
[01/06 19:12:13]  --------------------------------------------------------------------------------
[01/06 19:12:13]  Iteration: 65 (0 solution, 64 counterexamples)
[01/06 19:12:49]  Generator returned sat in 32.900249 secs.
[01/06 19:12:50]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1max_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1max_c + 1max_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 19:12:53]  Improved gap from 2.1311149739259996 to 100
[01/06 19:12:54]  Improved number of small numbers from 96 to 96 out of a max of 128
[01/06 19:12:54]  Verifer returned sat in 4.187365 secs.
[01/06 19:12:54]  sf_get_cex returned in 4.242968 secs.
[01/06 19:12:54]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.590803e+07        1.590775e+07      1.590803e+07       0.185547       0.188721      1.590775e+07        0.000000                0.000000       98.597087      101.759440                0.0                2.0                  0.0                  2.0  -1.677627e+07  280.449300      182.944987       1.0
1        1.590814e+07        1.590785e+07      1.590814e+07  108831.149170     108.550700      1.590785e+07        0.000000                0.000000       98.597087      101.759440                0.0                2.0                  0.0                  2.0  -1.677627e+07  290.495687      191.495687       1.0
2        1.590825e+07        1.590805e+07      1.590825e+07  108841.195557     108.550700      1.590805e+07        0.046387                0.000000       98.643473      101.759440                0.0                2.0                  0.0                  2.0  -1.677627e+07  201.713053      200.000000       1.0
3        1.590836e+07        1.590815e+07      1.590836e+07  108798.846029     108.597087      1.590815e+07        8.643473                0.046387       99.666667      101.759440                0.0                2.0                  0.0                  2.0  -1.677627e+07  200.000000      200.000000       1.0
4        1.590847e+07        1.590815e+07      1.590847e+07  109828.923421     109.620280      1.590815e+07       18.263753                8.643473       99.666667      101.713053                0.0                2.0                  0.0                  2.0  -1.677627e+07  300.000000      200.000000       1.0
5        1.590858e+07        1.590825e+07      1.590858e+07  109938.543701     109.620280      1.590825e+07       27.884033               18.263753       99.666667      101.713053                1.0                3.0                  1.0                  2.0  -1.677627e+07  298.194173      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=114213/4096, alpha=20385/2048, buf_size=200.[0m
[01/06 19:12:54]  --------------------------------------------------------------------------------
[01/06 19:12:54]  Iteration: 66 (0 solution, 65 counterexamples)
[01/06 19:16:19]  Generator returned sat in 201.564594 secs.
[01/06 19:16:19]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1max_c + 1min_qdel + -1max_qdel + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + 1max_qdel + -1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 19:16:22]  Improved gap from 0.0 to 100
[01/06 19:16:22]  Improved number of small numbers from 103 to 128 out of a max of 128
[01/06 19:16:22]  Verifer returned sat in 3.330451 secs.
[01/06 19:16:22]  sf_get_cex returned in 3.385584 secs.
[01/06 19:16:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.534897e+07        1.534868e+07      1.534897e+07       0.185547       0.188477      1.534868e+07        0.000000                0.000000       52.556641           102.0                0.0                1.0                  0.0            45.443359  -1.677627e+07  290.814209      199.814209       0.0
1        1.534908e+07        1.534878e+07      1.534908e+07  104218.548584     103.927734      1.534878e+07        3.741943                0.000000       52.556641           102.0                0.0                2.0                  0.0            45.443359  -1.677627e+07  294.000000      200.000000       1.0
2        1.534910e+07        1.534897e+07      1.534910e+07   26576.062256      26.278320      1.534897e+07        3.741943                3.741943       97.000000           102.0                0.0                2.0                  0.0             2.000000  -1.677627e+07  126.278320      126.278320       1.0
3        1.534930e+07        1.534897e+07      1.534930e+07  192944.473389     192.814453      1.534897e+07       22.834717                3.741943       97.000000           102.0                0.0                2.0                  0.0             2.000000  -1.677627e+07  300.000000      200.000000       1.0
4        1.534949e+07        1.534917e+07      1.534949e+07  193137.287842     192.814453      1.534917e+07      115.649170               22.834717       97.000000           102.0                0.0                2.0                  0.0             2.000000  -1.677627e+07  206.000244      200.000000       1.0
5        1.534968e+07        1.534917e+07      1.534968e+07  193136.102539     192.814453      1.534917e+07      208.463623              115.649170       97.000000           102.0                1.0                3.0                  1.0             2.000000  -1.677627e+07  300.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=209635/1024, alpha=607/512, buf_size=200.[0m
[01/06 19:16:22]  --------------------------------------------------------------------------------
[01/06 19:16:22]  Iteration: 67 (0 solution, 66 counterexamples)
[01/06 19:22:01]  Generator returned sat in 335.410398 secs.
[01/06 19:22:01]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1min_qdel + -1max_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 19:22:14]  Improved gap from 0.05357142857142857 to 48.4375
[01/06 19:22:15]  Improved number of small numbers from 90 to 103 out of a max of 128
[01/06 19:22:15]  Verifer returned sat in 13.565967 secs.
[01/06 19:22:15]  sf_get_cex returned in 13.621513 secs.
[01/06 19:22:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.539879e+07        1.539878e+07      1.539879e+07       0.185303       0.188232      1.539878e+07             0.0                     0.0            75.0           100.0                2.0                4.0                  2.0             3.999512  -1.682628e+07  12.500000       12.499845       3.0
1        1.539883e+07        1.539878e+07      1.539883e+07   37511.937500      37.499437      1.539878e+07             0.0                     0.0            75.0           100.0                0.0                2.0                  2.0             3.999512  -1.682623e+07  49.437500        0.000000       1.0
2        1.539886e+07        1.539883e+07      1.539886e+07   37549.437500      37.500000      1.539883e+07             0.0                     0.0            75.0           100.0                0.0                2.0                  2.0             3.999512  -1.682618e+07  37.500000      -11.937485       1.0
3        1.539890e+07        1.539888e+07      1.539890e+07   37537.500000      37.500000      1.539888e+07             0.0                     0.0            75.0           100.0                0.0                1.0                  2.0             3.999512  -1.682613e+07  25.562500      -25.562485       0.0
4        1.539894e+07        1.539893e+07      1.539894e+07   37525.562500      37.500000      1.539893e+07             0.0                     0.0            75.0           100.0                0.0                1.0                  2.0             3.999512  -1.682608e+07  11.937500      -37.499985       0.0
5        1.539898e+07        1.539898e+07      1.539898e+07   37511.937500      37.500000      1.539898e+07             0.0                     0.0            75.0           100.0                0.0                1.0                  2.0             3.999512  -1.682608e+07   0.000015      -99.999985       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=9/16000, buf_size=200.[0m
[01/06 19:22:15]  --------------------------------------------------------------------------------
[01/06 19:22:15]  Iteration: 68 (0 solution, 67 counterexamples)
[01/06 19:22:47]  Generator returned sat in 29.594675 secs.
[01/06 19:22:48]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 19:22:51]  Improved gap from 0.234375 to 100
[01/06 19:22:52]  Improved number of small numbers from 70 to 74 out of a max of 128
[01/06 19:22:52]  Verifer returned sat in 4.562214 secs.
[01/06 19:22:52]  sf_get_cex returned in 4.614663 secs.
[01/06 19:22:52]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.529881e+07        1.529861e+07      1.529881e+07       0.185059       0.187988      1.529861e+07        0.000000                0.000000       50.011581           100.0                0.0                2.0                  0.0             4.005615  -1.682618e+07  200.017372           200.0       1.0
1        1.529891e+07        1.529868e+07      1.529891e+07  100223.180214     100.023163      1.529868e+07        0.023163                0.000000       50.011581           100.0                1.0                3.0                  1.0             4.005615  -1.682618e+07  233.339124           200.0       2.0
2        1.529901e+07        1.529876e+07      1.529901e+07  100256.525129     100.023163      1.529876e+07        0.046326                0.023163       50.011581           100.0                2.0                4.0                  2.0             4.005615  -1.682618e+07  250.017372           200.0       3.0
3        1.529911e+07        1.529881e+07      1.529911e+07  100273.226540     100.023163      1.529881e+07        0.069489                0.046326       50.011581           100.0                2.0                4.0                  2.0             4.000000  -1.682618e+07  300.000000           200.0       3.0
4        1.529921e+07        1.529891e+07      1.529921e+07  100323.232330     100.023163      1.529891e+07        0.092651                0.069489       60.003474           100.0                2.0                4.0                  2.0             4.000000  -1.682618e+07  300.000000           200.0       3.0
5        1.529933e+07        1.529901e+07      1.529933e+07  120307.041504     120.006949      1.529901e+07       20.099600                0.092651       66.684039           100.0                1.0                3.0                  2.0             3.000000  -1.682618e+07  299.947884           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=6578647/327680, alpha=3/512, buf_size=200.[0m
[01/06 19:22:52]  --------------------------------------------------------------------------------
[01/06 19:22:52]  Iteration: 69 (0 solution, 68 counterexamples)
[01/06 19:29:42]  Generator returned sat in 406.778045 secs.
[01/06 19:29:43]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + 1max_qdel + -1min_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 19:29:52]  Improved gap from 19.873684210526317 to 100
[01/06 19:29:53]  Improved number of small numbers from 88 to 88 out of a max of 128
[01/06 19:29:53]  Verifer returned sat in 10.545094 secs.
[01/06 19:29:53]  sf_get_cex returned in 10.602416 secs.
[01/06 19:29:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.518160e+07        1.518137e+07      1.518160e+07       0.185059       0.187988      1.518137e+07        0.000000                0.000000       97.000000      101.000000                2.0                4.0                  2.0             2.092529  -1.682618e+07  225.352295      125.814941       3.0
1        1.518177e+07        1.518147e+07      1.518177e+07  174317.881592     174.092529      1.518147e+07        0.000000                0.000000       97.000000      101.000000                0.0                2.0                  2.0             2.092529  -1.682618e+07  299.413981      199.907471       1.0
2        1.518189e+07        1.518167e+07      1.518189e+07  117206.884684     116.907471      1.518167e+07       16.814941                0.000000       99.845785      101.000000                0.0                2.0                  2.0             2.092529  -1.682618e+07  200.000000      200.000000       1.0
3        1.518201e+07        1.518167e+07      1.518201e+07  119970.070150     119.753255      1.518167e+07       36.568197               16.814941       99.845785      101.000000                0.0                2.0                  2.0             2.000000  -1.682618e+07  300.000000      200.000000       1.0
4        1.518213e+07        1.518187e+07      1.518213e+07  120089.823405     119.753255      1.518187e+07       56.321452               36.568197      100.000000      101.000000                1.0                3.0                  2.0             2.000000  -1.682618e+07  200.000000      200.000000       2.0
5        1.518231e+07        1.518187e+07      1.518231e+07  180348.850749     180.092529      1.518187e+07      136.413981               56.321452      100.000000      100.293009                1.0                3.0                  2.0             2.000000  -1.682618e+07  299.413981      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=1, loss_amount=1676255/12288, alpha=81541/4096, buf_size=200.[0m
[01/06 19:29:53]  --------------------------------------------------------------------------------
[01/06 19:29:53]  Iteration: 70 (0 solution, 69 counterexamples)
[01/06 19:32:06]  Generator returned sat in 127.686771 secs.
[01/06 19:32:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/06 19:32:17]  Improved gap from 0.092529296875 to 48.4375
[01/06 19:32:17]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/06 19:32:17]  Verifer returned sat in 10.780252 secs.
[01/06 19:32:17]  sf_get_cex returned in 10.867943 secs.
[01/06 19:32:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.590652e+07        1.590650e+07      1.590652e+07       0.185059       0.187744      1.590650e+07        0.092529                0.000000       77.967529    58984.999756                0.0                1.0                  0.0                  2.0  -1.755120e+07  24.064941       24.064941       0.0
1        1.590654e+07        1.590650e+07      1.590654e+07   19931.628174      19.907471      1.590650e+07        0.092529                0.092529       77.967529    58984.999756                0.0                2.0                  0.0                  2.0  -1.755115e+07  43.879883       -4.557617       1.0
2        1.590660e+07        1.590655e+07      1.590660e+07   58104.031006      58.060059      1.590655e+07        0.092529                0.092529       77.967529    58984.999756                0.0                1.0                  0.0                  2.0  -1.755110e+07  48.437500        0.000000       0.0
3        1.590662e+07        1.590660e+07      1.590662e+07   19956.000732      19.907471      1.590660e+07        0.092529                0.092529       77.967529    58984.999756                0.0                2.0                  0.0                  2.0  -1.755105e+07  19.907471      -28.530029       1.0
4        1.590668e+07        1.590665e+07      1.590668e+07   58080.058594      58.060059      1.590665e+07        0.092529                0.092529       77.967529    58984.999756                0.0                1.0                  0.0                  2.0  -1.755100e+07  28.530029      -19.907471       0.0
5        1.590670e+07        1.590670e+07      1.590670e+07   19936.093262      19.907471      1.590670e+07        0.092529                0.092529       77.967529    58984.999756                0.0                1.0                  0.0                  2.0  -1.755100e+07   0.000000      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81541/4096, buf_size=200.[0m
[01/06 19:32:17]  --------------------------------------------------------------------------------
[01/06 19:32:17]  Iteration: 71 (0 solution, 70 counterexamples)
[01/06 19:34:31]  Generator returned sat in 127.853274 secs.
[01/06 19:34:31]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + 1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 19:34:54]  Improved gap from 0.0 to 48.4375
[01/06 19:34:55]  Improved number of small numbers from 105 to 110 out of a max of 128
[01/06 19:34:55]  Verifer returned sat in 23.709831 secs.
[01/06 19:34:55]  sf_get_cex returned in 23.796559 secs.
[01/06 19:34:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.585611e+07        1.585611e+07      1.585611e+07       0.184814       0.187500      1.585611e+07           0.025                   0.000       67.266667           100.0                0.0                2.0                  0.0             2.024902  -1.755125e+07   0.149805        0.125195       1.0
1        1.585616e+07        1.585611e+07      1.585616e+07   50462.674805      50.462500      1.585611e+07           0.025                   0.025       67.266667           100.0                0.0                2.0                  0.0             2.000000  -1.755120e+07  50.587500        0.000000       1.0
2        1.585621e+07        1.585616e+07      1.585621e+07   50513.112500      50.462500      1.585616e+07           0.025                   0.025       67.266667           100.0                0.0                2.0                  0.0             2.000000  -1.755116e+07  50.462500       -2.025000       1.0
3        1.585626e+07        1.585621e+07      1.585626e+07   50512.987500      50.462500      1.585621e+07           0.025                   0.025       67.266667           100.0                0.0                1.0                  0.0             2.000000  -1.755111e+07  48.437500        0.000000       0.0
4        1.585628e+07        1.585626e+07      1.585628e+07   16877.629167      16.829167      1.585626e+07           0.025                   0.025       67.266667           100.0                0.0                2.0                  0.0             2.000000  -1.755105e+07  16.829167      -31.608333       1.0
5        1.585633e+07        1.585631e+07      1.585633e+07   50479.354167      50.462500      1.585631e+07           0.025                   0.025       67.266667           100.0                0.0                1.0                  0.0             2.000000  -1.755100e+07  18.854118      -29.583577       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4039/240, buf_size=200.[0m
[01/06 19:34:55]  --------------------------------------------------------------------------------
[01/06 19:34:55]  Iteration: 72 (0 solution, 71 counterexamples)
[01/06 19:39:49]  Generator returned sat in 288.710197 secs.
[01/06 19:39:49]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 19:40:14]  Improved gap from 0.0 to 48.4375
[01/06 19:40:15]  Improved number of small numbers from 76 to 85 out of a max of 128
[01/06 19:40:15]  Verifer returned sat in 26.043840 secs.
[01/06 19:40:15]  sf_get_cex returned in 26.131360 secs.
[01/06 19:40:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.585625e+07        1.585625e+07      1.585625e+07       0.184814       0.187256      1.585625e+07             0.0                     0.0       39.242407           100.0                1.0                3.0                  1.0            56.757812  -1.755139e+07   0.092407        0.000179       2.0
1        1.585629e+07        1.585625e+07      1.585629e+07   39242.499634      39.242407      1.585625e+07             0.0                     0.0       39.242407           100.0                0.0                2.0                  1.0            56.757812  -1.755134e+07  39.242407       -9.195093       1.0
2        1.585633e+07        1.585630e+07      1.585633e+07   39281.649634      39.242407      1.585630e+07             0.0                     0.0       39.242407           100.0                0.0                1.0                  1.0            56.757812  -1.755129e+07  30.047314      -18.390251       0.0
3        1.585636e+07        1.585635e+07      1.585636e+07   39272.454541      39.242407      1.585635e+07             0.0                     0.0       39.242407           100.0                0.0                1.0                  1.0            56.757812  -1.755124e+07  18.852222      -29.585278       0.0
4        1.585640e+07        1.585639e+07      1.585640e+07   39261.259448      39.242407      1.585639e+07             0.0                     0.0       39.242407           100.0                0.0                1.0                  1.0            56.757812  -1.755119e+07   9.657129      -38.780371       0.0
5        1.585644e+07        1.585644e+07      1.585644e+07   39252.064355      39.242407      1.585644e+07             0.0                     0.0       39.242407           100.0                0.0                1.0                  1.0            56.757812  -1.755114e+07   0.462036      -47.975529       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1607369/81920, buf_size=200.[0m
[01/06 19:40:15]  --------------------------------------------------------------------------------
[01/06 19:40:15]  Iteration: 73 (0 solution, 72 counterexamples)
[01/06 19:44:01]  Generator returned sat in 220.102334 secs.
[01/06 19:44:01]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + 1min_buffer + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 19:44:27]  Improved gap from 0.0 to 48.4375
[01/06 19:44:28]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/06 19:44:28]  Verifer returned sat in 26.551625 secs.
[01/06 19:44:28]  sf_get_cex returned in 26.638666 secs.
[01/06 19:44:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t   queue_t  bottle_queue_t  qdelay_t
0        1.585618e+07        1.585618e+07      1.585618e+07       0.184814       0.187256      1.585618e+07         0.03125                 0.00000            99.0       108.03125                0.0                1.0                  0.0                  2.0  -1.755139e+07   0.00000         0.00000       0.0
1        1.585623e+07        1.585618e+07      1.585623e+07   49437.531250      49.437500      1.585618e+07         0.03125                 0.03125            99.0       108.03125                0.0                1.0                  0.0                  1.0  -1.755133e+07  49.43750        -0.03125       0.0
2        1.585628e+07        1.585623e+07      1.585628e+07   49486.968750      49.437500      1.585623e+07         0.03125                 0.03125            99.0       108.03125                0.0                1.0                  0.0                  1.0  -1.755128e+07  49.40625        -0.03125       0.0
3        1.585633e+07        1.585628e+07      1.585633e+07   49486.937500      49.437500      1.585628e+07         0.03125                 0.03125            99.0       108.03125                0.0                1.0                  0.0                  1.0  -1.755123e+07  49.40625        -0.03125       0.0
4        1.585638e+07        1.585633e+07      1.585638e+07   49486.937500      49.437500      1.585633e+07         0.03125                 0.03125            99.0       108.03125                0.0                1.0                  0.0                  1.0  -1.755118e+07  49.40625        -0.03125       0.0
5        1.585642e+07        1.585638e+07      1.585642e+07   49486.937500      49.437500      1.585638e+07         0.03125                 0.03125            99.0       108.03125                0.0                1.0                  0.0                  1.0  -1.755118e+07  49.40625       -50.59375       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1/16, buf_size=200.[0m
[01/06 19:44:28]  --------------------------------------------------------------------------------
[01/06 19:44:28]  Iteration: 74 (0 solution, 73 counterexamples)
[01/06 19:57:41]  Generator returned sat in 788.066871 secs.
[01/06 19:57:42]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 19:57:47]  Improved gap from 6.38427734375 to 100
[01/06 19:57:48]  Improved number of small numbers from 82 to 85 out of a max of 128
[01/06 19:57:48]  Verifer returned sat in 6.374721 secs.
[01/06 19:57:48]  sf_get_cex returned in 6.462798 secs.
[01/06 19:57:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.585606e+07        1.585580e+07      1.585606e+07       0.184326       0.187012      1.585580e+07        0.000000                0.000000       12.000000      100.092041                2.0                4.0                  2.0             2.023193  -1.755139e+07  260.069214      179.930786       3.0
1        1.585608e+07        1.585598e+07      1.585608e+07   20236.997925      19.976929      1.585598e+07        0.000000                0.000000       90.069214      100.092041                0.0                2.0                  2.0             2.023193  -1.755139e+07   99.907715       99.907715       1.0
2        1.585628e+07        1.585608e+07      1.585628e+07  200215.264160     200.115356      1.585608e+07        0.023071                0.000000       93.356405      100.092041                0.0                1.0                  2.0             2.023193  -1.755139e+07  200.069214      200.000000       0.0
3        1.585648e+07        1.585618e+07      1.585648e+07  206889.830241     206.689738      1.585618e+07      106.712809                0.023071       95.034607      100.092041                0.0                2.0                  2.0             2.000000  -1.755139e+07  200.000000      200.000000       1.0
4        1.585669e+07        1.585618e+07      1.585669e+07  210352.855387     210.046143      1.585618e+07      216.758952              106.712809       95.034607      100.069214                0.0                2.0                  2.0             2.000000  -1.755139e+07  300.000000      200.000000       1.0
5        1.585690e+07        1.585628e+07      1.585690e+07  210562.901530     210.046143      1.585628e+07      326.805094              216.758952       95.034607      100.023071                1.0                3.0                  2.0             2.000000  -1.755139e+07  299.976929      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=4015781/12288, alpha=163651/8192, buf_size=200.[0m
[01/06 19:57:48]  --------------------------------------------------------------------------------
[01/06 19:57:48]  Iteration: 75 (0 solution, 74 counterexamples)
[01/06 20:01:00]  Generator returned sat in 186.145321 secs.
[01/06 20:01:00]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 20:01:07]  Improved gap from 0.07680257161458333 to 100
[01/06 20:01:09]  Improved number of small numbers from 71 to 78 out of a max of 128
[01/06 20:01:09]  Verifer returned sat in 8.251482 secs.
[01/06 20:01:09]  sf_get_cex returned in 8.340428 secs.
[01/06 20:01:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.595026e+07        1.595008e+07      1.595026e+07       0.184326       0.186768      1.595008e+07        0.000000                0.000000       94.264211      109.425293                0.0                2.0                  0.0             2.046143  -1.755139e+07  182.379415       85.230408       1.0
1        1.595047e+07        1.595018e+07      1.595047e+07  207664.719910     207.482340      1.595018e+07        0.000000                0.000000       94.264211      109.425293                0.0                2.0                  0.0             2.046143  -1.755139e+07  290.712748      192.712748       1.0
2        1.595067e+07        1.595036e+07      1.595067e+07  207773.053243     207.482340      1.595036e+07      100.195089                0.000000       95.923197      109.425293                0.0                2.0                  0.0             2.046143  -1.755139e+07  209.379415      200.000000       1.0
3        1.595088e+07        1.595047e+07      1.595088e+07  211109.887817     210.800313      1.595047e+07      210.995402              100.195089       99.333333      109.425293                0.0                2.0                  0.0             2.000000  -1.755139e+07  200.000000      200.000000       1.0
4        1.595110e+07        1.595047e+07      1.595110e+07  218031.580526     217.620585      1.595047e+07      328.615987              210.995402       99.333333      109.379415                0.0                2.0                  0.0             2.000000  -1.755139e+07  300.000000      200.000000       1.0
5        1.595132e+07        1.595058e+07      1.595132e+07  218249.201111     217.620585      1.595058e+07      446.236572              328.615987       99.333333      109.287252                1.0                3.0                  1.0             2.000000  -1.755139e+07  290.712748      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1827785/4096, alpha=310541/16384, buf_size=200.[0m
[01/06 20:01:09]  --------------------------------------------------------------------------------
[01/06 20:01:09]  Iteration: 76 (0 solution, 75 counterexamples)
[01/06 20:10:41]  Generator returned sat in 566.725353 secs.
[01/06 20:10:42]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_qdel + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 20:11:20]  Improved gap from 0.6451416015625 to 48.4375
[01/06 20:11:20]  Improved number of small numbers from 75 to 128 out of a max of 128
[01/06 20:11:20]  Verifer returned sat in 38.621559 secs.
[01/06 20:11:20]  sf_get_cex returned in 38.711854 secs.
[01/06 20:11:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.594998e+07        1.594998e+07      1.594998e+07       0.184082       0.186768      1.594998e+07        0.092285                0.000000          98.875      107.782715                0.0                2.0                  0.0                  2.0  -1.755139e+07   0.407715        0.000000       1.0
1        1.595003e+07        1.594998e+07      1.595003e+07   49438.000000      49.437500      1.594998e+07        0.092285                0.092285          98.875      107.782715                1.0                3.0                  1.0                  2.0  -1.755133e+07  49.437500       -0.000244       2.0
2        1.595007e+07        1.595003e+07      1.595007e+07   49487.029785      49.437500      1.595003e+07        0.092285                0.092285          98.875      107.782715                0.0                1.0                  1.0                  2.0  -1.755129e+07  47.687500       -1.750000       0.0
3        1.595012e+07        1.595008e+07      1.595012e+07   49485.279785      49.437500      1.595008e+07        0.092285                0.092285          98.875      107.782715                0.0                1.0                  1.0                  2.0  -1.755124e+07  47.687500       -1.750000       0.0
4        1.595017e+07        1.595013e+07      1.595017e+07   49485.279785      49.437500      1.595013e+07        0.092285                0.092285          98.875      107.782715                0.0                1.0                  1.0                  2.0  -1.755118e+07  47.687500       -1.750000       0.0
5        1.595022e+07        1.595018e+07      1.595022e+07   49485.279785      49.437500      1.595018e+07        0.092285                0.092285          98.875      107.782715                0.0                1.0                  1.0                  2.0  -1.755113e+07  47.687256       -1.750244       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40771/2048, buf_size=200.[0m
[01/06 20:11:20]  --------------------------------------------------------------------------------
[01/06 20:11:20]  Iteration: 77 (0 solution, 76 counterexamples)
[01/06 20:21:20]  Generator returned sat in 594.126599 secs.
[01/06 20:21:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1min_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 20:21:38]  Improved gap from 12.55813953488372 to 48.4375
[01/06 20:21:39]  Improved number of small numbers from 110 to 116 out of a max of 128
[01/06 20:21:39]  Verifer returned sat in 18.221539 secs.
[01/06 20:21:39]  sf_get_cex returned in 18.306675 secs.
[01/06 20:21:39]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.594998e+07        1.594997e+07      1.594998e+07       0.184082       0.186523      1.594997e+07        0.092041                0.000000       65.350749           100.0                1.0                3.0                  1.0            28.741211  -1.755138e+07   4.131836        4.131836       2.0
1        1.595003e+07        1.594997e+07      1.595003e+07   48971.264893      48.967041      1.594997e+07        0.092041                0.092041       65.350749           100.0                2.0                4.0                  2.0            28.741211  -1.755134e+07  53.006836        0.000000       3.0
2        1.595007e+07        1.595003e+07      1.595007e+07   49020.139893      48.967041      1.595003e+07        0.092041                0.092041       65.350749           100.0                0.0                2.0                  2.0            28.741211  -1.755128e+07  48.967041       -0.092041       1.0
3        1.595012e+07        1.595007e+07      1.595012e+07   49016.100098      48.967041      1.595007e+07        0.092041                0.092041       65.350749           100.0                0.0                1.0                  2.0            28.741211  -1.755123e+07  48.875000        0.000000       0.0
4        1.595014e+07        1.595012e+07      1.595014e+07   16432.674723      16.383708      1.595012e+07        0.092041                0.092041       65.350749           100.0                0.0                2.0                  2.0            28.741211  -1.755118e+07  16.383708      -32.491048       1.0
5        1.595019e+07        1.595017e+07      1.595019e+07   48983.516764      48.967041      1.595017e+07        0.092041                0.092041       65.350749           100.0                0.0                1.0                  2.0            28.741211  -1.755113e+07  16.475749      -32.399251       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=201323/12288, buf_size=200.[0m
[01/06 20:21:39]  --------------------------------------------------------------------------------
[01/06 20:21:39]  Iteration: 78 (0 solution, 77 counterexamples)
[01/06 20:26:34]  Generator returned sat in 288.623048 secs.
[01/06 20:26:34]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + 1min_buffer + -1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 20:26:40]  Improved gap from 0.0 to 100
[01/06 20:26:42]  Improved number of small numbers from 101 to 101 out of a max of 128
[01/06 20:26:42]  Verifer returned sat in 7.607363 secs.
[01/06 20:26:42]  sf_get_cex returned in 7.694489 secs.
[01/06 20:26:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.605628e+07        1.605600e+07      1.605628e+07       0.184082       0.186523      1.605600e+07        0.000000                0.000000       91.092041      100.184082                2.0                4.0                  2.0             7.092041  -1.755113e+07  284.552246      199.815918       3.0
1        1.605635e+07        1.605609e+07      1.605635e+07   65784.552246      65.500000      1.605609e+07        0.000000                0.000000       91.092041      100.184082                0.0                2.0                  2.0             7.092041  -1.755113e+07  253.730103      165.315918       1.0
2        1.605653e+07        1.605628e+07      1.605653e+07  182437.812134     182.184082      1.605628e+07       47.500000                0.000000       94.866089      100.184082                0.0                2.0                  2.0             7.092041  -1.755113e+07  200.138062      200.000000       1.0
3        1.605672e+07        1.605638e+07      1.605672e+07  189979.815796     189.732178      1.605638e+07      137.232178               47.500000       96.184082      100.184082                0.0                2.0                  2.0             2.000000  -1.755113e+07  200.000000      200.000000       1.0
4        1.605691e+07        1.605638e+07      1.605691e+07  192705.396240     192.368164      1.605638e+07      229.600342              137.232178       96.184082      100.138062                0.0                2.0                  2.0             2.000000  -1.755113e+07  300.000000      200.000000       1.0
5        1.605710e+07        1.605648e+07      1.605710e+07  192897.764404     192.368164      1.605648e+07      321.968506              229.600342       96.184082      100.046021                1.0                3.0                  2.0             2.000000  -1.755113e+07  299.953979      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=1318783/4096, alpha=163463/8192, buf_size=200.[0m
[01/06 20:26:42]  --------------------------------------------------------------------------------
[01/06 20:26:42]  Iteration: 79 (0 solution, 78 counterexamples)
[01/06 20:31:57]  Generator returned sat in 309.061580 secs.
[01/06 20:31:57]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + -1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/06 20:32:16]  Improved gap from 8.919189453125 to 48.4375
[01/06 20:32:18]  Improved number of small numbers from 95 to 98 out of a max of 128
[01/06 20:32:18]  Verifer returned sat in 20.660250 secs.
[01/06 20:32:18]  sf_get_cex returned in 20.746675 secs.
[01/06 20:32:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.511652e+07        1.511652e+07      1.511652e+07       0.183838       0.186035      1.511652e+07        0.088315                0.000000       26.482677           100.0                0.0                1.0                  0.0                  2.0  -1.661157e+07   0.000000       -0.000223       0.0
1        1.511657e+07        1.511652e+07      1.511657e+07   52965.441576      52.965353      1.511652e+07        0.088315                0.088315       26.482677           100.0                0.0                1.0                  0.0                  1.0  -1.661152e+07  48.702446        0.000000       0.0
2        1.511660e+07        1.511657e+07      1.511660e+07   33102.459239      33.053668      1.511657e+07        0.088315                0.088315       26.482677           100.0                0.0                2.0                  0.0                  1.0  -1.661147e+07  33.053668      -15.383832       1.0
3        1.511662e+07        1.511662e+07      1.511662e+07   19944.826766      19.911685      1.511662e+07        0.088315                0.088315       32.379982           100.0                0.0                1.0                  0.0                  1.0  -1.661142e+07   4.527853      -43.909647       0.0
4        1.511667e+07        1.511667e+07      1.511667e+07   44852.895154      44.848279      1.511667e+07        0.088315                0.088315       36.394361           100.0                0.0                1.0                  0.0                  1.0  -1.661136e+07   0.938632      -47.499069       0.0
5        1.511672e+07        1.511672e+07      1.511672e+07   52878.064991      52.877038      1.511672e+07        0.088315                0.088315       39.129755           100.0                0.0                1.0                  0.0                  1.0  -1.661131e+07   3.744339      -44.693320       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=14655/736, buf_size=200.[0m
[01/06 20:32:18]  --------------------------------------------------------------------------------
[01/06 20:32:18]  Iteration: 80 (0 solution, 79 counterexamples)
[01/06 20:33:18]  Generator returned sat in 54.733600 secs.
[01/06 20:33:19]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_qdel + -1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 20:33:21]  Improved gap from 2.57373046875 to 100
[01/06 20:33:23]  Improved number of small numbers from 56 to 66 out of a max of 128
[01/06 20:33:23]  Verifer returned sat in 4.309449 secs.
[01/06 20:33:23]  sf_get_cex returned in 4.394000 secs.
[01/06 20:33:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.510300e+07        1.510275e+07      1.510300e+07       0.183594       0.186035      1.510275e+07        0.023193                0.000000       85.743831       128.55835                0.0                2.0                  0.0             3.023193  -1.661132e+07  249.965317      199.999786       1.0
1        1.510310e+07        1.510290e+07      1.510310e+07  100272.968246     100.022980      1.510290e+07        0.045959                0.023193       85.743831       128.55835                1.0                3.0                  1.0             3.023193  -1.661132e+07  200.000000      200.000000       2.0
2        1.510320e+07        1.510290e+07      1.510320e+07  100223.025696     100.022980      1.510290e+07        0.068939                0.045959       85.743831       128.55835                1.0                3.0                  1.0             3.000000  -1.661132e+07  300.000000      200.000000       2.0
3        1.510330e+07        1.510307e+07      1.510330e+07  100323.048676     100.022980      1.510307e+07        0.091919                0.068939       85.743831       128.55835                1.0                3.0                  1.0             3.000000  -1.661132e+07  228.558297      200.000000       2.0
4        1.510340e+07        1.510316e+07      1.510340e+07  100251.629953     100.022980      1.510316e+07        0.114899                0.091919       85.743831       128.55835                1.0                3.0                  1.0             3.000000  -1.661132e+07  242.837446      200.000000       2.0
5        1.510350e+07        1.510320e+07      1.510350e+07  100265.932081     100.022980      1.510320e+07        0.137878                0.114899       85.743831       100.00000                2.0                4.0                  2.0             3.000000  -1.661132e+07  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=753/8192, alpha=1637647/114688, buf_size=200.[0m
[01/06 20:33:23]  --------------------------------------------------------------------------------
[01/06 20:33:23]  Iteration: 81 (0 solution, 80 counterexamples)
[01/06 20:38:35]  Generator returned sat in 305.919404 secs.
[01/06 20:38:35]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 20:38:42]  Improved gap from 2.478515625 to 100
[01/06 20:38:43]  Improved number of small numbers from 97 to 99 out of a max of 128
[01/06 20:38:43]  Verifer returned sat in 7.140172 secs.
[01/06 20:38:43]  sf_get_cex returned in 7.225223 secs.
[01/06 20:38:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.497446e+07        1.497419e+07      1.497446e+07       0.183350       0.186035      1.497419e+07        0.000000                0.000000       74.308108           100.0                0.0                2.0                  0.0             2.986486  -1.661132e+07  267.491892      171.383784       1.0
1        1.497459e+07        1.497429e+07      1.497459e+07  128897.221622     128.629730      1.497429e+07        0.013514                0.000000       74.308108           100.0                0.0                2.0                  0.0             2.986486  -1.661132e+07  296.940541      200.000000       1.0
2        1.497471e+07        1.497443e+07      1.497471e+07  128926.683784     128.629730      1.497443e+07       28.643243                0.013514       79.918919           100.0                1.0                3.0                  1.0             2.986486  -1.661132e+07  256.351351      200.000000       2.0
3        1.497473e+07        1.497459e+07      1.497473e+07   20271.481081      19.986486      1.497459e+07       28.643243               28.643243       99.027027           100.0                1.0                3.0                  1.0             2.986486  -1.661132e+07  119.986486      119.986486       2.0
4        1.497495e+07        1.497469e+07      1.497495e+07  218189.170270     218.040541      1.497469e+07       66.670270               28.643243       99.235135           100.0                1.0                3.0                  1.0             2.986486  -1.661132e+07  200.000000      200.000000       2.0
5        1.497517e+07        1.497469e+07      1.497517e+07  218723.427027     218.456757      1.497469e+07      185.127027               66.670270       99.235135           100.0                1.0                3.0                  1.0             2.986486  -1.661132e+07  299.986677      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=1, loss_amount=34246/185, alpha=1479/74, buf_size=200.[0m
[01/06 20:38:43]  --------------------------------------------------------------------------------
[01/06 20:38:43]  Iteration: 82 (0 solution, 81 counterexamples)
[01/06 20:45:15]  Generator returned sat in 385.820050 secs.
[01/06 20:45:15]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1max_qdel + -1min_buffer + -1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 20:45:30]  Improved gap from 0.01718902587890625 to 48.4375
[01/06 20:45:31]  Improved number of small numbers from 63 to 84 out of a max of 128
[01/06 20:45:31]  Verifer returned sat in 16.515977 secs.
[01/06 20:45:31]  sf_get_cex returned in 16.601840 secs.
[01/06 20:45:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.497620e+07        1.497618e+07      1.497620e+07       0.183105       0.185791      1.497618e+07        0.091553                0.000000       36.942809           100.0                0.0                1.0                  0.0            57.057373  -1.661132e+07  16.561464       16.561464       0.0
1        1.497623e+07        1.497618e+07      1.497623e+07   36959.461628      36.942809      1.497618e+07        0.091553                0.091553       36.942809           100.0                0.0                1.0                  0.0             1.000000  -1.661127e+07  53.504272       -0.091431       0.0
2        1.497627e+07        1.497623e+07      1.497627e+07   36539.027315      36.485431      1.497623e+07        0.091553                0.091553       36.942809           100.0                0.0                1.0                  0.0             1.000000  -1.661122e+07  36.393879      -12.043621       0.0
3        1.497631e+07        1.497628e+07      1.497631e+07   36521.916922      36.485431      1.497628e+07        0.091553                0.091553       36.942809           100.0                0.0                1.0                  0.0             1.000000  -1.661117e+07  24.441810      -23.995812       0.0
4        1.497634e+07        1.497633e+07      1.497634e+07   36509.964853      36.485431      1.497633e+07        0.091553                0.091553       37.867706           100.0                0.0                1.0                  0.0             1.000000  -1.661112e+07  11.489742      -36.947758       0.0
5        1.497638e+07        1.497638e+07      1.497638e+07   36959.461628      36.947880      1.497638e+07        0.091553                0.091553       39.981665           100.0                0.0                1.0                  0.0             1.000000  -1.661112e+07   0.000122      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4324417967/240058368, buf_size=200.[0m
[01/06 20:45:32]  --------------------------------------------------------------------------------
[01/06 20:45:32]  Iteration: 83 (0 solution, 82 counterexamples)
[01/06 20:50:09]  Generator returned sat in 273.611146 secs.
[01/06 20:50:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1max_qdel + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 20:50:18]  Improved gap from 18.908447265625 to 48.4375
[01/06 20:50:18]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/06 20:50:18]  Verifer returned sat in 8.800992 secs.
[01/06 20:50:18]  sf_get_cex returned in 8.857515 secs.
[01/06 20:50:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.497621e+07        1.497619e+07      1.497621e+07       0.183105       0.185791      1.497619e+07             0.0                     0.0       37.424316         83224.0                0.0                1.0                  0.0         83178.575684  -1.661132e+07  25.117188       24.934082       0.0
1        1.497623e+07        1.497619e+07      1.497623e+07   19842.011719      19.816895      1.497619e+07             0.0                     0.0       37.424316         83224.0                0.0                2.0                  0.0         83178.575684  -1.661127e+07  44.750977       -3.686523       1.0
2        1.497629e+07        1.497624e+07      1.497629e+07   57285.961914      57.241211      1.497624e+07             0.0                     0.0       37.424316         83224.0                0.0                1.0                  0.0         83178.575684  -1.661122e+07  48.437500        0.000000       0.0
3        1.497631e+07        1.497629e+07      1.497631e+07   19865.332031      19.816895      1.497629e+07             0.0                     0.0       37.424316         83224.0                0.0                2.0                  0.0         83178.575684  -1.661117e+07  19.816895      -28.620605       1.0
4        1.497637e+07        1.497634e+07      1.497637e+07   57261.027832      57.241211      1.497634e+07             0.0                     0.0       37.607422         83224.0                0.0                1.0                  0.0         83178.575684  -1.661112e+07  28.620605      -19.816895       0.0
5        1.497639e+07        1.497639e+07      1.497639e+07   19845.515137      19.816895      1.497639e+07             0.0                     0.0       39.773438         83224.0                0.0                1.0                  0.0         83178.575684  -1.661112e+07   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40585/2048, buf_size=200.[0m
[01/06 20:50:18]  --------------------------------------------------------------------------------
[01/06 20:50:18]  Iteration: 84 (0 solution, 83 counterexamples)
[01/06 21:04:40]  Generator returned sat in 858.336995 secs.
[01/06 21:04:41]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 21:04:51]  Improved gap from 0.0 to 100
[01/06 21:04:53]  Improved number of small numbers from 73 to 81 out of a max of 128
[01/06 21:04:53]  Verifer returned sat in 12.239840 secs.
[01/06 21:04:53]  sf_get_cex returned in 12.325669 secs.
[01/06 21:04:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.497614e+07        1.497593e+07      1.497614e+07       0.183105       0.185547      1.497593e+07        0.000000                0.000000       60.251498      102.045654                0.0                2.0                  0.0             4.022705  -1.661112e+07  211.314441      159.039783       1.0
1        1.497626e+07        1.497602e+07      1.497626e+07  120737.199451     120.525885      1.497602e+07        0.000000                0.000000       60.251498      102.045654                0.0                2.0                  0.0             4.022705  -1.661112e+07  243.702997      179.565668       1.0
2        1.497638e+07        1.497614e+07      1.497638e+07  120769.588007     120.525885      1.497614e+07        0.091553                0.000000       70.445776      102.045654                0.0                2.0                  0.0             4.022705  -1.661112e+07  240.937329      200.000000       1.0
3        1.497652e+07        1.497628e+07      1.497652e+07  141155.469800     140.914441      1.497628e+07       41.005994                0.091553       88.068665      102.045654                0.0                2.0                  0.0             2.000000  -1.661112e+07  200.000000      200.000000       1.0
4        1.497670e+07        1.497628e+07      1.497670e+07  176355.446912     176.114441      1.497628e+07      117.120435               41.005994       88.068665      102.045654                0.0                2.0                  0.0             2.000000  -1.661112e+07  300.000000      200.000000       1.0
5        1.497687e+07        1.497638e+07      1.497687e+07  176531.561353     176.114441      1.497638e+07      193.234875              117.120435       88.068665      102.022888                1.0                3.0                  1.0             2.000000  -1.661112e+07  297.977112      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=15829801/81920, alpha=375/16384, buf_size=200.[0m
[01/06 21:04:53]  --------------------------------------------------------------------------------
[01/06 21:04:53]  Iteration: 85 (0 solution, 84 counterexamples)
[01/06 21:09:02]  Generator returned sat in 242.297516 secs.
[01/06 21:09:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + -1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/06 21:09:14]  Improved gap from 0.0 to 48.4375
[01/06 21:09:15]  Improved number of small numbers from 93 to 99 out of a max of 128
[01/06 21:09:15]  Verifer returned sat in 13.182633 secs.
[01/06 21:09:15]  sf_get_cex returned in 13.268999 secs.
[01/06 21:09:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.507579e+07        1.507579e+07      1.507579e+07       0.183105       0.185547      1.507579e+07             0.0                     0.0       99.658447      109.658447                0.0                2.0                  0.0                  2.0  -1.671093e+07   0.091553        0.091309       1.0
1        1.507584e+07        1.507579e+07      1.507584e+07   49829.315186      49.829224      1.507579e+07             0.0                     0.0       99.658447      109.658447                0.0                2.0                  0.0                  2.0  -1.671088e+07  49.875000        0.000000       1.0
2        1.507589e+07        1.507584e+07      1.507589e+07   49879.098633      49.829224      1.507584e+07             0.0                     0.0       99.658447      109.658447                0.0                2.0                  0.0                  2.0  -1.671083e+07  49.829224       -0.045654       1.0
3        1.507594e+07        1.507589e+07      1.507594e+07   49879.052856      49.829224      1.507589e+07             0.0                     0.0       99.658447      109.658447                0.0                1.0                  0.0                  2.0  -1.671078e+07  49.783447       -0.091431       0.0
4        1.507597e+07        1.507594e+07      1.507597e+07   29924.783447      29.875000      1.507594e+07             0.0                     0.0       99.658447      109.658447                0.0                1.0                  0.0                  2.0  -1.671073e+07  29.783447      -20.091431       0.0
5        1.507600e+07        1.507599e+07      1.507600e+07   29904.783447      29.875000      1.507599e+07             0.0                     0.0       99.658447      109.658447                0.0                1.0                  0.0                  2.0  -1.671068e+07   9.783337      -40.091675       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=163465/8192, buf_size=200.[0m
[01/06 21:09:15]  --------------------------------------------------------------------------------
[01/06 21:09:15]  Iteration: 86 (0 solution, 85 counterexamples)
[01/06 21:33:26]  Generator returned sat in 1444.242648 secs.
[01/06 21:33:26]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + -1max_qdel + -1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 21:33:45]  Improved gap from 19.966666666666665 to 48.4375
[01/06 21:33:46]  Improved number of small numbers from 94 to 94 out of a max of 128
[01/06 21:33:46]  Verifer returned sat in 19.728579 secs.
[01/06 21:33:46]  sf_get_cex returned in 19.816637 secs.
[01/06 21:33:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.427376e+07        1.427376e+07      1.427376e+07       0.183105       0.185547      1.427376e+07             0.0                     0.0       24.757935           100.0                0.0                1.0                  0.0             2.091553  -1.671093e+07   2.485840        2.485840       0.0
1        1.427381e+07        1.427376e+07      1.427381e+07   49518.354980      49.515869      1.427376e+07             0.0                     0.0       24.757935           100.0                0.0                1.0                  0.0             2.091553  -1.671088e+07  48.600342       -0.274658       0.0
2        1.427386e+07        1.427381e+07      1.427386e+07   49564.469482      49.515869      1.427381e+07             0.0                     0.0       24.757935           100.0                0.0                1.0                  0.0             2.091553  -1.671083e+07  48.875000        0.000000       0.0
3        1.427391e+07        1.427386e+07      1.427391e+07   49564.744141      49.515869      1.427386e+07             0.0                     0.0       32.705404           100.0                0.0                2.0                  0.0             2.091553  -1.671078e+07  49.515869        0.000000       1.0
4        1.427394e+07        1.427391e+07      1.427394e+07   32663.366781      32.613851      1.427391e+07             0.0                     0.0       36.908020           100.0                0.0                2.0                  0.0             2.091553  -1.671073e+07  32.613851      -16.261149       1.0
5        1.427398e+07        1.427396e+07      1.427398e+07   36849.081136      36.816467      1.427396e+07             0.0                     0.0       39.301416           100.0                0.0                1.0                  0.0             2.091553  -1.671068e+07  20.555318      -28.319682       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=375/4096, buf_size=200.[0m
[01/06 21:33:46]  --------------------------------------------------------------------------------
[01/06 21:33:46]  Iteration: 87 (0 solution, 86 counterexamples)
[01/06 21:39:19]  Generator returned sat in 326.452499 secs.
[01/06 21:39:20]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 21:39:22]  Improved gap from 0.0 to 100
[01/06 21:39:24]  Improved number of small numbers from 91 to 103 out of a max of 128
[01/06 21:39:24]  Verifer returned sat in 3.693047 secs.
[01/06 21:39:24]  sf_get_cex returned in 3.778087 secs.
[01/06 21:39:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.427388e+07        1.427361e+07      1.427388e+07       0.182617       0.185303      1.427361e+07        0.091309                0.000000       77.365723           100.0                1.0                3.0                  1.0            18.725586  -1.671085e+07  266.365845      194.000122       2.0
1        1.427403e+07        1.427376e+07      1.427403e+07  154997.902466     154.731445      1.427376e+07       48.822876                0.091309       77.365723           100.0                1.0                3.0                  1.0            18.725586  -1.671085e+07  217.817139      200.000000       2.0
2        1.427419e+07        1.427380e+07      1.427419e+07  154998.085327     154.731445      1.427380e+07      103.554321               48.822876       77.365723           100.0                1.0                3.0                  1.0             3.000000  -1.671085e+07  284.822876      200.000000       2.0
3        1.427421e+07        1.427398e+07      1.427421e+07   20296.946533      19.908569      1.427398e+07      103.554321              103.554321       93.091431           100.0                1.0                3.0                  1.0             3.000000  -1.671085e+07  119.908569      119.908569       2.0
4        1.427439e+07        1.427408e+07      1.427439e+07  186406.324219     186.182861      1.427408e+07      109.645752              103.554321       94.000000           100.0                1.0                3.0                  1.0             3.000000  -1.671085e+07  202.822876      200.000000       2.0
5        1.427458e+07        1.427410e+07      1.427458e+07  188312.468628     188.000000      1.427410e+07      197.645752              109.645752       94.000000           100.0                0.0                2.0                  1.0             2.000000  -1.671085e+07  280.000000      200.000000       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=1, loss_amount=1219157/8192, alpha=163091/8192, buf_size=200.[0m
[01/06 21:39:24]  --------------------------------------------------------------------------------
[01/06 21:39:24]  Iteration: 88 (0 solution, 87 counterexamples)
[01/06 22:03:46]  Generator returned sat in 1455.702735 secs.
[01/06 22:03:46]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 22:03:55]  Improved gap from 12.716417910447761 to 48.4375
[01/06 22:03:55]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/06 22:03:55]  Verifer returned sat in 8.451281 secs.
[01/06 22:03:55]  sf_get_cex returned in 8.552449 secs.
[01/06 22:03:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.427399e+07        1.427399e+07      1.427399e+07       0.182617       0.185303      1.427399e+07             0.0                     0.0         49.4375           100.0                0.0                2.0                  0.0             2.908691  -1.671116e+07   0.091309        0.091309       1.0
1        1.427404e+07        1.427399e+07      1.427404e+07   49437.591309      49.437500      1.427399e+07             0.0                     0.0         49.4375           100.0                1.0                3.0                  1.0             2.908691  -1.671111e+07  49.437500        0.000000       2.0
2        1.427409e+07        1.427404e+07      1.427409e+07   49486.937500      49.437500      1.427404e+07             0.0                     0.0         49.4375           100.0                0.0                2.0                  1.0             2.908691  -1.671106e+07  49.437500        0.000000       1.0
3        1.427414e+07        1.427409e+07      1.427414e+07   49486.937500      49.437500      1.427409e+07             0.0                     0.0         49.4375           100.0                0.0                2.0                  1.0             2.908691  -1.671101e+07  49.437500        0.000000       1.0
4        1.427419e+07        1.427414e+07      1.427419e+07   49486.937500      49.437500      1.427414e+07             0.0                     0.0         49.4375           100.0                0.0                2.0                  1.0             2.908691  -1.671096e+07  49.437500        0.000000       1.0
5        1.427424e+07        1.427419e+07      1.427424e+07   49486.937500      49.437500      1.427419e+07             0.0                     0.0         49.4375           100.0                0.0                1.0                  1.0             2.908691  -1.671091e+07  47.370117       -2.067383       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=187/2048, buf_size=200.[0m
[01/06 22:03:55]  --------------------------------------------------------------------------------
[01/06 22:03:55]  Iteration: 89 (0 solution, 88 counterexamples)
[01/06 22:16:19]  Generator returned sat in 736.628294 secs.
[01/06 22:16:19]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + -1max_c + 1min_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 22:16:28]  Improved gap from 1.2443665498247372 to 100
[01/06 22:16:30]  Improved number of small numbers from 79 to 88 out of a max of 128
[01/06 22:16:30]  Verifer returned sat in 10.837484 secs.
[01/06 22:16:30]  sf_get_cex returned in 10.926503 secs.
[01/06 22:16:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.427328e+07        1.427318e+07      1.427328e+07       0.182617       0.185059      1.427318e+07        0.045654                0.000000       76.324188      152.419922                2.0                4.0                  2.0             4.045654  -1.671101e+07  100.433716       94.954346       3.0
1        1.427343e+07        1.427328e+07      1.427343e+07  152817.337280     152.716858      1.427328e+07        0.045654                0.045654       76.324188      152.419922                0.0                1.0                  2.0             1.000000  -1.671101e+07  152.671143      147.671204       0.0
2        1.427359e+07        1.427333e+07      1.427359e+07  152732.611816     152.579895      1.427333e+07        0.296753                0.045654       76.324188      152.419922                0.0                2.0                  2.0             1.000000  -1.671101e+07  252.374451      200.000000       1.0
3        1.427374e+07        1.427349e+07      1.427374e+07  152832.566223     152.579895      1.427349e+07       52.876648                0.296753       76.369843      152.419922                0.0                2.0                  2.0             1.000000  -1.671101e+07  200.000000      200.000000       1.0
4        1.427389e+07        1.427349e+07      1.427389e+07  152924.080261     152.671204      1.427349e+07      105.547852               52.876648       76.369843      152.374451                0.0                2.0                  2.0             1.000000  -1.671101e+07  300.000000      200.000000       1.0
5        1.427404e+07        1.427364e+07      1.427404e+07  153076.751465     152.671204      1.427364e+07      158.219055              105.547852       76.369843      152.374451                1.0                3.0                  2.0             1.000000  -1.671101e+07  247.534119      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=2591513/16384, alpha=561/8192, buf_size=200.[0m
[01/06 22:16:30]  --------------------------------------------------------------------------------
[01/06 22:16:30]  Iteration: 90 (0 solution, 89 counterexamples)
[01/06 22:20:33]  Generator returned sat in 235.861254 secs.
[01/06 22:20:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1max_qdel + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 22:20:41]  Improved gap from 0.028350515463917526 to 100
[01/06 22:20:41]  Improved number of small numbers from 121 to 128 out of a max of 128
[01/06 22:20:41]  Verifer returned sat in 8.142206 secs.
[01/06 22:20:41]  sf_get_cex returned in 8.231687 secs.
[01/06 22:20:41]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.427332e+07        1.427312e+07      1.427332e+07       0.182617       0.184814      1.427312e+07        0.000000                0.000000       80.091309      255.593262                2.0                4.0                  2.0           161.547852  -1.671098e+07  200.319580      159.771729       3.0
1        1.427338e+07        1.427321e+07      1.427338e+07   60337.282471      60.136963      1.427321e+07        0.000000                0.000000       80.091309      255.593262                0.0                2.0                  2.0           161.547852  -1.671098e+07  175.456543      119.908691       1.0
2        1.427356e+07        1.427330e+07      1.427356e+07  180312.419434     180.136963      1.427330e+07        0.045654                0.000000       80.091309      255.593262                1.0                3.0                  2.0           161.547852  -1.671098e+07  260.273926      200.000000       2.0
3        1.427366e+07        1.427346e+07      1.427366e+07  100305.973877     100.045654      1.427346e+07        0.091309                0.045654       85.182617      255.547852                0.0                2.0                  2.0             2.000000  -1.671098e+07  200.000000      200.000000       1.0
4        1.427385e+07        1.427346e+07      1.427385e+07  190519.671387     190.319580      1.427346e+07       90.410889                0.091309       85.182617      127.773926                0.0                2.0                  2.0             2.000000  -1.671098e+07  300.000000      200.000000       1.0
5        1.427404e+07        1.427358e+07      1.427404e+07  190709.990967     190.319580      1.427358e+07      180.730469               90.410889       85.182617      112.045410                1.0                3.0                  2.0             2.000000  -1.671098e+07  287.954590      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=46267/256, alpha=81733/4096, buf_size=200.[0m
[01/06 22:20:41]  --------------------------------------------------------------------------------
[01/06 22:20:41]  Iteration: 91 (0 solution, 90 counterexamples)
[01/06 22:21:43]  Generator returned sat in 54.607066 secs.
[01/06 22:21:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1max_qdel + 1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/06 22:22:08]  Improved gap from 0.01141357421875 to 48.4375
[01/06 22:22:08]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/06 22:22:08]  Verifer returned sat in 24.793365 secs.
[01/06 22:22:08]  sf_get_cex returned in 24.884750 secs.
[01/06 22:22:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.427381e+07        1.427381e+07      1.427381e+07       0.182617       0.184814      1.427381e+07        0.091309                0.000000       61.932617           100.0                0.0                1.0                  0.0                  2.0  -1.671098e+07   0.000000       -0.091309       0.0
1        1.427385e+07        1.427381e+07      1.427385e+07   39394.134277      39.394043      1.427381e+07        0.091309                0.091309       61.932617           100.0                0.0                1.0                  0.0                  1.0  -1.671093e+07  39.302734       -9.134766       0.0
2        1.427391e+07        1.427386e+07      1.427391e+07   53544.276855      53.504883      1.427386e+07        0.091309                0.091309       61.932617           100.0                0.0                1.0                  0.0                  1.0  -1.671088e+07  44.370117       -4.067383       0.0
3        1.427396e+07        1.427391e+07      1.427396e+07   53549.344238      53.504883      1.427391e+07        0.091309                0.091309       61.932617           100.0                0.0                1.0                  0.0                  1.0  -1.671083e+07  49.437500        0.000000       0.0
4        1.427401e+07        1.427396e+07      1.427401e+07   53554.411621      53.504883      1.427396e+07        0.091309                0.091309       61.932617           100.0                0.0                2.0                  0.0                  1.0  -1.671078e+07  53.504883        0.000000       1.0
5        1.427404e+07        1.427401e+07      1.427404e+07   31019.904785      30.966309      1.427401e+07        0.091309                0.091309       61.932617           100.0                0.0                2.0                  0.0                  1.0  -1.671073e+07  30.966309      -17.471191       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=4315/512, buf_size=200.[0m
[01/06 22:22:08]  --------------------------------------------------------------------------------
[01/06 22:22:08]  Iteration: 92 (0 solution, 91 counterexamples)
[01/06 22:23:47]  Generator returned sat in 91.377780 secs.
[01/06 22:23:47]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 22:24:08]  Improved gap from 0.0 to 48.4375
[01/06 22:24:09]  Improved number of small numbers from 104 to 128 out of a max of 128
[01/06 22:24:09]  Verifer returned sat in 21.433703 secs.
[01/06 22:24:09]  sf_get_cex returned in 21.518343 secs.
[01/06 22:24:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.448707e+07        1.448707e+07      1.448707e+07       0.182373       0.184326      1.448707e+07             0.0                     0.0       65.227539           100.0                2.0                4.0                  2.0             5.091309  -1.671093e+07   4.317139        4.317139       3.0
1        1.448712e+07        1.448707e+07      1.448712e+07   48879.317139      48.875000      1.448707e+07             0.0                     0.0       65.227539           100.0                1.0                3.0                  2.0             5.091309  -1.671089e+07  53.101074        0.000000       2.0
2        1.448717e+07        1.448712e+07      1.448717e+07   48928.101074      48.875000      1.448712e+07             0.0                     0.0       65.227539           100.0                0.0                2.0                  2.0             5.091309  -1.671084e+07  48.875000        0.000000       1.0
3        1.448722e+07        1.448717e+07      1.448722e+07   48923.875000      48.875000      1.448717e+07             0.0                     0.0       65.227539           100.0                0.0                2.0                  2.0             5.091309  -1.671078e+07  48.875000        0.000000       1.0
4        1.448726e+07        1.448722e+07      1.448726e+07   48923.875000      48.875000      1.448722e+07             0.0                     0.0       65.227539           100.0                0.0                1.0                  2.0             5.091309  -1.671073e+07  48.783691       -0.091553       0.0
5        1.448728e+07        1.448727e+07      1.448728e+07   16401.322754      16.352539      1.448727e+07             0.0                     0.0       65.227539           100.0                0.0                1.0                  2.0             5.091309  -1.671073e+07  16.260986      -83.739014       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=16745/1024, buf_size=200.[0m
[01/06 22:24:09]  --------------------------------------------------------------------------------
[01/06 22:24:09]  Iteration: 93 (0 solution, 92 counterexamples)
[01/06 22:28:01]  Generator returned sat in 225.325412 secs.
[01/06 22:28:02]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 22:28:20]  Improved gap from 15.817626953125 to 48.4375
[01/06 22:28:20]  Improved number of small numbers from 96 to 128 out of a max of 128
[01/06 22:28:20]  Verifer returned sat in 18.396029 secs.
[01/06 22:28:20]  sf_get_cex returned in 18.485250 secs.
[01/06 22:28:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.448712e+07        1.448712e+07      1.448712e+07       0.182373       0.184326      1.448712e+07             0.0                     0.0            99.0      109.091064                0.0                2.0                  0.0                  2.0  -1.671093e+07   2.880127        2.879883       1.0
1        1.448717e+07        1.448712e+07      1.448717e+07   49502.880127      49.500000      1.448712e+07             0.0                     0.0            99.0      109.091064                0.0                2.0                  0.0                  2.0  -1.671089e+07  52.289062       -1.062500       1.0
2        1.448722e+07        1.448717e+07      1.448722e+07   49552.289062      49.500000      1.448717e+07             0.0                     0.0            99.0      109.091064                0.0                1.0                  0.0                  2.0  -1.671084e+07  48.437500        0.000000       0.0
3        1.448727e+07        1.448722e+07      1.448727e+07   48485.937500      48.437500      1.448722e+07             0.0                     0.0            99.0      109.091064                0.0                2.0                  0.0                  2.0  -1.671078e+07  48.437500        0.000000       1.0
4        1.448732e+07        1.448727e+07      1.448732e+07   49548.437500      49.500000      1.448727e+07             0.0                     0.0            99.0      109.091064                0.0                2.0                  0.0                  2.0  -1.671073e+07  49.500000       -0.000244       1.0
5        1.448737e+07        1.448732e+07      1.448737e+07   49549.500000      49.500000      1.448732e+07             0.0                     0.0            99.0      109.091064                0.0                1.0                  0.0                  2.0  -1.671073e+07  49.408691      -50.500244       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=17/16, buf_size=200.[0m
[01/06 22:28:20]  --------------------------------------------------------------------------------
[01/06 22:28:20]  Iteration: 94 (0 solution, 93 counterexamples)
[01/06 22:32:07]  Generator returned sat in 219.131258 secs.
[01/06 22:32:07]  Candidate solution: 
[1m[94mif (+ -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_qdel + -1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1max_c + -1max_qdel + -1min_buffer + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/06 22:32:36]  Improved gap from 4.380667066107449 to 48.4375
[01/06 22:32:37]  Improved number of small numbers from 102 to 104 out of a max of 128
[01/06 22:32:37]  Verifer returned sat in 30.135019 secs.
[01/06 22:32:37]  sf_get_cex returned in 30.221841 secs.
[01/06 22:32:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.445252e+07        1.445252e+07      1.445252e+07       0.182373       0.184082      1.445252e+07             0.0                     0.0       24.950893           100.0                0.0                1.0                  0.0                  2.0  -1.671094e+07   0.375000        0.374895       0.0
1        1.445257e+07        1.445252e+07      1.445257e+07   49902.160714      49.901786      1.445252e+07             0.0                     0.0       24.950893           100.0                0.0                1.0                  0.0                  2.0  -1.671089e+07  49.848214       -0.026786       0.0
2        1.445262e+07        1.445257e+07      1.445262e+07   49951.633929      49.901786      1.445257e+07             0.0                     0.0       24.950893           100.0                0.0                1.0                  0.0                  2.0  -1.671084e+07  49.875000        0.000000       0.0
3        1.445267e+07        1.445262e+07      1.445267e+07   49951.660714      49.901786      1.445262e+07             0.0                     0.0       33.250000           100.0                0.0                2.0                  0.0                  2.0  -1.671079e+07  49.901786        0.000000       1.0
4        1.445270e+07        1.445267e+07      1.445270e+07   33299.901786      33.250000      1.445267e+07             0.0                     0.0       37.412946           100.0                0.0                2.0                  0.0                  2.0  -1.671074e+07  33.250000      -16.625070       1.0
5        1.445274e+07        1.445272e+07      1.445274e+07   37446.196429      37.412946      1.445272e+07             0.0                     0.0       39.912500           100.0                0.0                1.0                  0.0                  2.0  -1.671069e+07  20.752232      -29.123012       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81883/4096, buf_size=200.[0m
[01/06 22:32:37]  --------------------------------------------------------------------------------
[01/06 22:32:37]  Iteration: 95 (0 solution, 94 counterexamples)
[01/06 22:37:13]  Generator returned sat in 268.281559 secs.
[01/06 22:37:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 22:37:21]  Improved gap from 0.013888888888888888 to 100
[01/06 22:37:22]  Improved number of small numbers from 64 to 75 out of a max of 128
[01/06 22:37:22]  Verifer returned sat in 9.155923 secs.
[01/06 22:37:22]  sf_get_cex returned in 9.242157 secs.
[01/06 22:37:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.441822e+07        1.441794e+07      1.441822e+07       0.182129       0.184082      1.441794e+07        0.000000                0.000000       80.022797       109.95459                1.0                3.0                  1.0              4.01123  -1.671074e+07  280.056992           200.0       2.0
1        1.441832e+07        1.441802e+07      1.441832e+07  100291.455307     100.011398      1.441802e+07        0.011398                0.000000       80.022797       109.95459                1.0                3.0                  1.0              4.01123  -1.671074e+07  299.988602           200.0       2.0
2        1.441842e+07        1.441818e+07      1.441842e+07  100311.398315     100.011398      1.441818e+07        0.022797                0.011398       80.045593       109.95459                2.0                4.0                  2.0              4.01123  -1.671074e+07  239.920212           200.0       3.0
3        1.441852e+07        1.441822e+07      1.441852e+07  100274.137955     100.034195      1.441822e+07        0.056992                0.022797       80.045593       109.95459                2.0                4.0                  2.0              4.00000  -1.671074e+07  300.000000           200.0       3.0
4        1.441862e+07        1.441832e+07      1.441862e+07  100334.251938     100.034195      1.441832e+07        0.091187                0.056992       80.045593       109.95459                2.0                4.0                  2.0              4.00000  -1.671074e+07  300.000000           200.0       3.0
5        1.441872e+07        1.441842e+07      1.441872e+07  100334.286133     100.034195      1.441842e+07        0.125381                0.091187       80.045593       109.95459                1.0                3.0                  2.0              3.00000  -1.671074e+07  299.988820           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=3735/32768, alpha=1309973/65536, buf_size=200.[0m
[01/06 22:37:22]  --------------------------------------------------------------------------------
[01/06 22:37:22]  Iteration: 96 (0 solution, 95 counterexamples)
[01/06 22:38:47]  Generator returned sat in 77.570587 secs.
[01/06 22:38:47]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + -1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 22:39:07]  Improved gap from 0.02276611328125 to 48.4375
[01/06 22:39:07]  Improved number of small numbers from 88 to 90 out of a max of 128
[01/06 22:39:07]  Verifer returned sat in 19.854957 secs.
[01/06 22:39:07]  sf_get_cex returned in 19.941976 secs.
[01/06 22:39:07]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.450647e+07        1.450645e+07      1.450647e+07       0.181885       0.184082      1.450645e+07         0.09082                 0.00000       73.201782           100.0                0.0                1.0                  0.0                  2.0  -1.671078e+07  16.904724       16.904724       0.0
1        1.450651e+07        1.450645e+07      1.450651e+07   36617.886658      36.600891      1.450645e+07         0.09082                 0.09082       73.201782           100.0                0.0                1.0                  0.0                  1.0  -1.671074e+07  53.505615        0.000000       0.0
2        1.450654e+07        1.450651e+07      1.450654e+07   36654.487549      36.600891      1.450651e+07         0.09082                 0.09082       73.201782           100.0                0.0                1.0                  0.0                  1.0  -1.671069e+07  36.510071      -12.927429       0.0
3        1.450658e+07        1.450655e+07      1.450658e+07   36637.492004      36.600891      1.450655e+07         0.09082                 0.09082       73.201782           100.0                0.0                1.0                  0.0                  1.0  -1.671063e+07  23.673462      -24.764038       0.0
4        1.450662e+07        1.450660e+07      1.450662e+07   36624.655396      36.600891      1.450660e+07         0.09082                 0.09082       73.201782           100.0                0.0                1.0                  0.0                  1.0  -1.671058e+07  11.836853      -36.600647       0.0
5        1.450665e+07        1.450665e+07      1.450665e+07   36612.818787      36.600891      1.450665e+07         0.09082                 0.09082       73.201782           100.0                0.0                1.0                  0.0                  1.0  -1.671058e+07   0.000068      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81547/4096, buf_size=200.[0m
[01/06 22:39:08]  --------------------------------------------------------------------------------
[01/06 22:39:08]  Iteration: 97 (0 solution, 96 counterexamples)
[01/06 22:44:54]  Generator returned sat in 339.087770 secs.
[01/06 22:44:54]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 22:45:14]  Improved gap from 0.0 to 48.4375
[01/06 22:45:15]  Improved number of small numbers from 90 to 93 out of a max of 128
[01/06 22:45:15]  Verifer returned sat in 20.997488 secs.
[01/06 22:45:15]  sf_get_cex returned in 21.083719 secs.
[01/06 22:45:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.450660e+07        1.450660e+07      1.450660e+07       0.181885       0.184082      1.450660e+07             0.0                     0.0       14.727168           100.0                1.0                3.0                  1.0                  4.0  -1.671093e+07   0.000000        0.000000       2.0
1        1.450665e+07        1.450660e+07      1.450665e+07   48528.343023      48.528343      1.450660e+07             0.0                     0.0       14.727168           100.0                1.0                3.0                  1.0                  4.0  -1.671088e+07  48.528343       -0.090710       2.0
2        1.450670e+07        1.450665e+07      1.450670e+07   48576.871366      48.528343      1.450665e+07             0.0                     0.0       24.309593           100.0                0.0                1.0                  1.0                  4.0  -1.671083e+07  48.437500        0.000000       0.0
3        1.450672e+07        1.450670e+07      1.450672e+07   19122.444283      19.074007      1.450670e+07             0.0                     0.0       32.352229           100.0                0.0                2.0                  1.0                  4.0  -1.671078e+07  19.074007      -29.363604       1.0
4        1.450680e+07        1.450675e+07      1.450680e+07   83797.538154      83.778464      1.450675e+07             0.0                     0.0       37.731650           100.0                0.0                1.0                  1.0                  4.0  -1.671073e+07  48.982558        0.000000       0.0
5        1.450682e+07        1.450680e+07      1.450682e+07   19122.989341      19.074007      1.450680e+07             0.0                     0.0       39.981831           100.0                0.0                2.0                  1.0                  4.0  -1.671073e+07  19.074007      -80.925928       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=157475/8256, buf_size=200.[0m
[01/06 22:45:16]  --------------------------------------------------------------------------------
[01/06 22:45:16]  Iteration: 98 (0 solution, 97 counterexamples)
[01/06 22:50:00]  Generator returned sat in 277.218793 secs.
[01/06 22:50:00]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_qdel + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/06 22:50:09]  Improved gap from 3.9105224609375 to 48.4375
[01/06 22:50:09]  Improved number of small numbers from 77 to 128 out of a max of 128
[01/06 22:50:09]  Verifer returned sat in 8.750327 secs.
[01/06 22:50:09]  sf_get_cex returned in 8.835994 secs.
[01/06 22:50:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.445780e+07        1.445780e+07      1.445780e+07       0.181641       0.183838      1.445780e+07             0.0                     0.0       48.841064      225.272705                1.0                3.0                  1.0              2.09082  -1.666213e+07   0.091064        0.090820       2.0
1        1.445785e+07        1.445780e+07      1.445785e+07   48750.091064      48.750000      1.445780e+07             0.0                     0.0       48.841064      225.272705                0.0                2.0                  1.0              2.09082  -1.666208e+07  48.750000        0.000000       1.0
2        1.445790e+07        1.445785e+07      1.445790e+07   48798.750000      48.750000      1.445785e+07             0.0                     0.0       48.841064      225.272705                0.0                2.0                  1.0              2.09082  -1.666203e+07  48.750000        0.000000       1.0
3        1.445795e+07        1.445790e+07      1.445795e+07   48798.750000      48.750000      1.445790e+07             0.0                     0.0       48.841064      225.272705                0.0                2.0                  1.0              2.09082  -1.666198e+07  48.750000        0.000000       1.0
4        1.445800e+07        1.445795e+07      1.445800e+07   48798.750000      48.750000      1.445795e+07             0.0                     0.0       48.841064      225.272705                0.0                2.0                  1.0              2.09082  -1.666193e+07  48.750000       -0.000244       1.0
5        1.445804e+07        1.445800e+07      1.445804e+07   48798.750000      48.750000      1.445800e+07             0.0                     0.0       48.841064      225.272705                0.0                1.0                  1.0              2.09082  -1.666188e+07  43.931885       -4.818115       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=373/4096, buf_size=200.[0m
[01/06 22:50:09]  --------------------------------------------------------------------------------
[01/06 22:50:09]  Iteration: 99 (0 solution, 98 counterexamples)
[01/06 22:56:03]  Generator returned sat in 346.346468 secs.
[01/06 22:56:04]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/06 22:56:08]  Improved gap from 0.008032128514056224 to 48.4375
[01/06 22:56:08]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/06 22:56:08]  Verifer returned sat in 4.204853 secs.
[01/06 22:56:08]  sf_get_cex returned in 4.292680 secs.
[01/06 22:56:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t   queue_t  bottle_queue_t  qdelay_t
0        1.373576e+07        1.373576e+07      1.373576e+07       0.181641       0.183838      1.373576e+07         0.09082                 0.00000       48.619141           100.0                0.0                1.0                  0.0              3.09082  -1.594009e+07   0.00000         0.00000       0.0
1        1.373581e+07        1.373576e+07      1.373581e+07   48619.231445      48.619141      1.373576e+07         0.09082                 0.09082       48.619141           100.0                0.0                1.0                  0.0              1.00000  -1.594004e+07  48.52832        -0.09082       0.0
2        1.373586e+07        1.373581e+07      1.373586e+07   48576.939453      48.528320      1.373581e+07         0.09082                 0.09082       48.619141           100.0                0.0                1.0                  0.0              1.00000  -1.593999e+07  48.43750         0.00000       0.0
3        1.373591e+07        1.373586e+07      1.373591e+07   48576.848633      48.528320      1.373586e+07         0.09082                 0.09082       48.619141           100.0                0.0                1.0                  0.0              1.00000  -1.593994e+07  48.43750         0.00000       0.0
4        1.373596e+07        1.373591e+07      1.373596e+07   48576.848633      48.528320      1.373591e+07         0.09082                 0.09082       48.619141           100.0                0.0                1.0                  0.0              1.00000  -1.593989e+07  48.34668        -0.09082       0.0
5        1.373600e+07        1.373596e+07      1.373600e+07   48576.757812      48.528320      1.373596e+07         0.09082                 0.09082       48.619141           100.0                0.0                1.0                  0.0              1.00000  -1.593989e+07  48.43750       -51.56250       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=93/1024, buf_size=200.[0m
[01/06 22:56:08]  --------------------------------------------------------------------------------
[01/06 22:56:08]  Iteration: 100 (0 solution, 99 counterexamples)
[01/06 23:01:55]  Generator returned sat in 339.518547 secs.
[01/06 23:01:55]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 23:02:12]  Improved gap from 0.0 to 48.4375
[01/06 23:02:13]  Improved number of small numbers from 81 to 90 out of a max of 128
[01/06 23:02:13]  Verifer returned sat in 17.253022 secs.
[01/06 23:02:13]  sf_get_cex returned in 17.340519 secs.
[01/06 23:02:13]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.369858e+07        1.369856e+07      1.369858e+07       0.181396       0.183594      1.369856e+07             0.0                     0.0       37.109375           100.0                1.0                3.0                  1.0            52.893555  -1.594003e+07  17.568797       17.568794       2.0
1        1.369862e+07        1.369856e+07      1.369862e+07   37130.053249      37.112484      1.369856e+07             0.0                     0.0       37.109375           100.0                0.0                2.0                  1.0            52.893555  -1.593999e+07  51.571828       -0.003048       1.0
2        1.369865e+07        1.369862e+07      1.369865e+07   37164.056281      37.112484      1.369862e+07             0.0                     0.0       37.109375           100.0                0.0                1.0                  1.0            52.893555  -1.593994e+07  37.109375      -11.328125       0.0
3        1.369869e+07        1.369866e+07      1.369869e+07   37149.593828      37.112484      1.369866e+07             0.0                     0.0       37.109375           100.0                0.0                1.0                  1.0            52.893555  -1.593988e+07  25.784359      -22.653141       0.0
4        1.369873e+07        1.369871e+07      1.369873e+07   37138.268812      37.112484      1.369871e+07             0.0                     0.0       37.112484           100.0                0.0                1.0                  1.0            52.893555  -1.593983e+07  14.459344      -33.978156       0.0
5        1.369876e+07        1.369876e+07      1.369876e+07   37130.053249      37.115594      1.369876e+07             0.0                     0.0       39.377488           100.0                0.0                1.0                  1.0            52.893555  -1.593983e+07   3.137438      -96.862500       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=5/1608, buf_size=200.[0m
[01/06 23:02:13]  --------------------------------------------------------------------------------
[01/06 23:02:13]  Iteration: 101 (0 solution, 100 counterexamples)
[01/06 23:04:32]  Generator returned sat in 131.310649 secs.
[01/06 23:04:32]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/06 23:04:39]  Improved gap from 19.818603515625 to 48.4375
[01/06 23:04:41]  Improved number of small numbers from 89 to 95 out of a max of 128
[01/06 23:04:41]  Verifer returned sat in 8.350413 secs.
[01/06 23:04:41]  sf_get_cex returned in 8.438090 secs.
[01/06 23:04:41]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.369854e+07        1.369854e+07      1.369854e+07       0.181396       0.183594      1.369854e+07             0.0                     0.0       59.237793           100.0                0.0                2.0                  0.0            31.762207  -1.594003e+07   1.887207        1.887147       1.0
1        1.369859e+07        1.369854e+07      1.369859e+07   49530.085449      49.528198      1.369854e+07             0.0                     0.0       59.237793           100.0                0.0                2.0                  0.0            31.762207  -1.593999e+07  51.324707        0.000000       1.0
2        1.369864e+07        1.369859e+07      1.369864e+07   49579.522949      49.528198      1.369859e+07             0.0                     0.0       59.237793           100.0                0.0                2.0                  0.0            31.762207  -1.593993e+07  49.528198       -0.000060       1.0
3        1.369869e+07        1.369864e+07      1.369869e+07   49577.726440      49.528198      1.369864e+07             0.0                     0.0       59.237793           100.0                0.0                1.0                  0.0            31.762207  -1.593988e+07  49.437500        0.000000       0.0
4        1.369871e+07        1.369869e+07      1.369871e+07   19958.739258      19.909302      1.369869e+07             0.0                     0.0       59.237793           100.0                0.0                2.0                  0.0            31.762207  -1.593983e+07  19.909302      -29.528136       1.0
5        1.369876e+07        1.369874e+07      1.369876e+07   49548.107544      49.528198      1.369874e+07             0.0                     0.0       59.237793           100.0                0.0                1.0                  0.0            31.762207  -1.593983e+07  19.999960      -79.999938       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=163097/8192, buf_size=200.[0m
[01/06 23:04:41]  --------------------------------------------------------------------------------
[01/06 23:04:41]  Iteration: 102 (0 solution, 101 counterexamples)
[01/06 23:10:12]  Generator returned sat in 323.198454 secs.
[01/06 23:10:12]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/06 23:10:16]  Improved gap from 26.45465087890625 to 100
[01/06 23:10:17]  Improved number of small numbers from 72 to 74 out of a max of 128
[01/06 23:10:17]  Verifer returned sat in 4.899512 secs.
[01/06 23:10:17]  sf_get_cex returned in 4.986108 secs.
[01/06 23:10:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.361019e+07        1.360995e+07      1.361019e+07       0.181152       0.183350      1.360995e+07        0.000000                0.000000       80.072559           100.0                2.0                4.0                  2.0         58011.999756  -1.585149e+07  240.036279      199.954651       3.0
1        1.361023e+07        1.361004e+07      1.361023e+07   40230.966455      39.990930      1.361004e+07        0.000000                0.000000       80.072559           100.0                0.0                2.0                  2.0         58011.999756  -1.585149e+07  191.648091      139.945581       1.0
2        1.361039e+07        1.361019e+07      1.361039e+07  160291.416157     160.099768      1.361019e+07        0.045349                0.000000       80.072559           100.0                0.0                2.0                  2.0         58011.999756  -1.585149e+07  200.000000      200.000000       1.0
3        1.361055e+07        1.361022e+07      1.361055e+07  160299.813416     160.099768      1.361022e+07       60.145117                0.045349       80.072559           100.0                1.0                3.0                  2.0             3.000000  -1.585149e+07  275.941953      200.000000       2.0
4        1.361071e+07        1.361039e+07      1.361071e+07  160435.855137     160.099768      1.361039e+07      120.244885               60.145117       88.016326           100.0                1.0                3.0                  2.0             3.000000  -1.585149e+07  200.000000      200.000000       2.0
5        1.361089e+07        1.361039e+07      1.361089e+07  176307.547131     175.987302      1.361039e+07      196.232188              120.244885       88.016326           100.0                1.0                3.0                  2.0             3.000000  -1.585149e+07  299.909166      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=627943/3200, alpha=743/16384, buf_size=200.[0m
[01/06 23:10:17]  --------------------------------------------------------------------------------
[01/06 23:10:17]  Iteration: 103 (0 solution, 102 counterexamples)
[01/06 23:21:00]  Generator returned sat in 635.237201 secs.
[01/06 23:21:01]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/06 23:21:19]  Improved gap from 0.0 to 48.4375
[01/06 23:21:20]  Improved number of small numbers from 89 to 92 out of a max of 128
[01/06 23:21:20]  Verifer returned sat in 19.715791 secs.
[01/06 23:21:20]  sf_get_cex returned in 19.803105 secs.
[01/06 23:21:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.356177e+07        1.356176e+07      1.356177e+07       0.181152       0.183350      1.356176e+07             0.0                     0.0       32.291667           100.0                0.0                1.0                  0.0             3.090332  -1.585159e+07   1.000000       -3.197849       0.0
1        1.356182e+07        1.356177e+07      1.356182e+07   50037.539714      50.036540      1.356177e+07             0.0                     0.0       32.291667           100.0                0.0                1.0                  0.0             3.090332  -1.585154e+07  46.838460       -1.599040       0.0
2        1.356187e+07        1.356182e+07      1.356187e+07   50083.378174      50.036540      1.356182e+07             0.0                     0.0       32.291667           100.0                0.0                1.0                  0.0             3.090332  -1.585149e+07  48.437500        0.000000       0.0
3        1.356192e+07        1.356187e+07      1.356192e+07   50084.977214      50.036540      1.356187e+07             0.0                     0.0       32.291667           100.0                0.0                2.0                  0.0             3.090332  -1.585144e+07  50.036540        0.000000       1.0
4        1.356195e+07        1.356192e+07      1.356195e+07   33940.742920      33.890706      1.356192e+07             0.0                     0.0       36.727885           100.0                0.0                2.0                  0.0             3.090332  -1.585139e+07  33.890706      -14.546889       1.0
5        1.356199e+07        1.356196e+07      1.356199e+07   36142.706217      36.108816      1.356196e+07             0.0                     0.0       39.142269           100.0                0.0                1.0                  0.0             3.090332  -1.585139e+07  21.199717      -78.437829       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=72683/4096, buf_size=200.[0m
[01/06 23:21:20]  --------------------------------------------------------------------------------
[01/06 23:21:20]  Iteration: 104 (0 solution, 103 counterexamples)
[01/06 23:33:38]  Generator returned sat in 729.810708 secs.
[01/06 23:33:39]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_c + -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + 1min_buffer + -1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/06 23:33:57]  Improved gap from 0.05263157894736842 to 48.4375
[01/06 23:33:58]  Improved number of small numbers from 97 to 101 out of a max of 128
[01/06 23:33:58]  Verifer returned sat in 19.534200 secs.
[01/06 23:33:58]  sf_get_cex returned in 19.622424 secs.
[01/06 23:33:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.356180e+07        1.356179e+07      1.356180e+07       0.181152       0.183350      1.356179e+07             0.0                     0.0       37.500000           100.0                1.0                3.0                  1.0                 54.5  -1.585161e+07  12.499219       12.499058       2.0
1        1.356184e+07        1.356179e+07      1.356184e+07   37511.717969      37.499219      1.356179e+07             0.0                     0.0       37.500000           100.0                0.0                2.0                  1.0                 54.5  -1.585156e+07  48.439844       -0.000746       1.0
2        1.356187e+07        1.356184e+07      1.356187e+07   37548.439844      37.500000      1.356184e+07             0.0                     0.0       37.500000           100.0                0.0                1.0                  1.0                 54.5  -1.585151e+07  37.499219      -10.938490       0.0
3        1.356191e+07        1.356189e+07      1.356191e+07   37537.499219      37.500000      1.356189e+07             0.0                     0.0       37.500000           100.0                0.0                1.0                  1.0                 54.5  -1.585146e+07  21.874219      -26.563281       0.0
4        1.356195e+07        1.356194e+07      1.356195e+07   37521.874219      37.500000      1.356194e+07             0.0                     0.0       37.500781           100.0                0.0                1.0                  1.0                 54.5  -1.585141e+07  10.936719      -37.500781       0.0
5        1.356199e+07        1.356199e+07      1.356199e+07   37511.717969      37.500781      1.356199e+07             0.0                     0.0       39.688125           100.0                0.0                1.0                  1.0                 54.5  -1.585141e+07   0.000000      -99.999965       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1/1280, buf_size=200.[0m
[01/06 23:33:58]  --------------------------------------------------------------------------------
[01/06 23:33:58]  Iteration: 105 (0 solution, 104 counterexamples)
[01/07 00:10:03]  Generator returned sat in 2156.951933 secs.
[01/07 00:10:04]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1max_qdel + 1min_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 00:10:06]  Improved number of small numbers from 88 to 90 out of a max of 127
[01/07 00:10:06]  Verifer returned sat in 2.588779 secs.
[01/07 00:10:06]  sf_get_cex returned in 2.645195 secs.
[01/07 00:10:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.339134e+07        1.339104e+07      1.339134e+07       0.181152       0.183350      1.339104e+07        0.090576                0.000000       89.088745           104.0                2.0                4.0                  2.0             2.090332  -1.568096e+07  294.184814      200.000000       3.0
1        1.339145e+07        1.339114e+07      1.339145e+07  109292.444336     108.998169      1.339114e+07        9.088745                0.090576       89.088745           104.0                2.0                4.0                  2.0             2.090332  -1.568096e+07  299.909424      200.000000       3.0
2        1.339156e+07        1.339131e+07      1.339156e+07  109307.167114     108.998169      1.339131e+07       18.086914                9.088745       90.090576           104.0                2.0                4.0                  2.0             2.090332  -1.568096e+07  223.913086      200.000000       3.0
3        1.339165e+07        1.339140e+07      1.339165e+07   90332.576172      90.090576      1.339140e+07       18.086914               18.086914       90.090576           104.0                1.0                3.0                  2.0             2.090332  -1.568096e+07  224.275391      190.090576       2.0
4        1.339176e+07        1.339150e+07      1.339176e+07  110242.362305     110.000000      1.339150e+07       18.177490               18.086914       91.000000           104.0                1.0                3.0                  2.0             2.090332  -1.568096e+07  239.184814      200.000000       2.0
5        1.339187e+07        1.339154e+07      1.339187e+07  111166.786133     110.909424      1.339154e+07       29.086914               18.177490       91.000000           104.0                1.0                3.0                  2.0             2.090332  -1.568096e+07  299.909520      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=163825/8192, alpha=81549/4096, buf_size=200.[0m
[01/07 00:10:06]  --------------------------------------------------------------------------------
[01/07 00:10:06]  Iteration: 106 (0 solution, 105 counterexamples)
[01/07 00:15:23]  Generator returned sat in 311.496732 secs.
[01/07 00:15:23]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1max_qdel + 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1max_qdel + -1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/07 00:15:31]  Improved gap from 0.02264404296875 to 48.4375
[01/07 00:15:31]  Improved number of small numbers from 121 to 125 out of a max of 128
[01/07 00:15:31]  Verifer returned sat in 8.182985 secs.
[01/07 00:15:31]  sf_get_cex returned in 8.237763 secs.
[01/07 00:15:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.339140e+07        1.339140e+07      1.339140e+07       0.181152        0.18335      1.339140e+07             0.0                     0.0          60.975         20038.0                0.0                1.0                  0.0            19969.025  -1.568096e+07   0.000000       -2.049965       0.0
1        1.339145e+07        1.339140e+07      1.339145e+07   50462.500000       50.46250      1.339140e+07             0.0                     0.0          60.975         20038.0                0.0                1.0                  0.0            19969.025  -1.568091e+07  48.412500       -0.025000       0.0
2        1.339150e+07        1.339145e+07      1.339150e+07   50510.912500       50.46250      1.339145e+07             0.0                     0.0          60.975         20038.0                0.0                1.0                  0.0            19969.025  -1.568086e+07  50.437500        0.000000       0.0
3        1.339155e+07        1.339150e+07      1.339155e+07   50512.937500       50.46250      1.339150e+07             0.0                     0.0          60.975         20038.0                0.0                2.0                  0.0            19969.025  -1.568081e+07  50.462500       -0.000111       1.0
4        1.339157e+07        1.339155e+07      1.339157e+07   20025.462500       19.97500      1.339155e+07             0.0                     0.0          60.975         20038.0                0.0                1.0                  0.0            19969.025  -1.568076e+07  19.950000      -28.612514       0.0
5        1.339162e+07        1.339160e+07      1.339162e+07   50482.450000       50.46250      1.339160e+07             0.0                     0.0          60.975         20038.0                0.0                1.0                  0.0            19969.025  -1.568076e+07  21.849805      -78.149770       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=799/40, buf_size=200.[0m
[01/07 00:15:32]  --------------------------------------------------------------------------------
[01/07 00:15:32]  Iteration: 107 (0 solution, 106 counterexamples)
[01/07 00:39:14]  Generator returned sat in 1417.539020 secs.
[01/07 00:39:15]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1max_qdel + 1min_buffer + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/07 00:39:18]  Improved gap from 0.0 to 100
[01/07 00:39:19]  Improved number of small numbers from 107 to 107 out of a max of 128
[01/07 00:39:19]  Verifer returned sat in 4.129280 secs.
[01/07 00:39:19]  sf_get_cex returned in 4.217277 secs.
[01/07 00:39:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.339116e+07        1.339086e+07      1.339116e+07       0.180908       0.183350      1.339086e+07        0.027778                0.000000       83.083333      166.333333                2.0                4.0                  2.0             2.027778  -1.568081e+07  295.916667      196.916667       3.0
1        1.339126e+07        1.339098e+07      1.339126e+07  103351.500000     103.055556      1.339098e+07        0.027778                0.027778       83.083333      166.333333                0.0                2.0                  2.0             2.000000  -1.568081e+07  274.569444      199.972222       1.0
2        1.339136e+07        1.339111e+07      1.339136e+07  103330.152778     103.055556      1.339111e+07        3.055556                0.027778       83.111111      166.333333                1.0                3.0                  2.0             2.000000  -1.568081e+07  249.666667      200.000000       2.0
3        1.339147e+07        1.339119e+07      1.339147e+07  103336.055556     103.083333      1.339119e+07        6.138889                3.055556       83.152778      166.305556                1.0                3.0                  2.0             2.000000  -1.568081e+07  266.388889      200.000000       2.0
4        1.339157e+07        1.339136e+07      1.339157e+07  103397.527778     103.125000      1.339136e+07        9.263889                6.138889       99.800000      166.305556                1.0                3.0                  2.0             2.000000  -1.568081e+07  200.000000      200.000000       2.0
5        1.339169e+07        1.339136e+07      1.339169e+07  119981.486111     119.772222      1.339136e+07       29.036111                9.263889       99.800000      124.756944                1.0                3.0                  2.0             2.000000  -1.568081e+07  299.972222      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=3481/120, alpha=719/36, buf_size=200.[0m
[01/07 00:39:19]  --------------------------------------------------------------------------------
[01/07 00:39:19]  Iteration: 108 (0 solution, 107 counterexamples)
[01/07 00:42:09]  Generator returned sat in 162.291444 secs.
[01/07 00:42:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/07 00:42:25]  Improved gap from 1.4210526315789473 to 48.4375
[01/07 00:42:26]  Improved number of small numbers from 97 to 99 out of a max of 128
[01/07 00:42:26]  Verifer returned sat in 15.841115 secs.
[01/07 00:42:26]  sf_get_cex returned in 15.931664 secs.
[01/07 00:42:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.339117e+07        1.339115e+07      1.339117e+07       0.180664       0.183105      1.339115e+07        0.113636                0.000000       95.113636      105.999756                0.0                1.0                  0.0                  2.0  -1.568100e+07  20.767045       20.767045       0.0
1        1.339119e+07        1.339115e+07      1.339119e+07   27691.335227      27.670455      1.339115e+07        0.113636                0.113636       95.113636      105.999756                0.0                1.0                  0.0                  1.0  -1.568094e+07  48.437500        0.000000       0.0
2        1.339122e+07        1.339119e+07      1.339122e+07   27719.005682      27.670455      1.339119e+07        0.113636                0.113636       95.113636      105.999756                0.0                2.0                  0.0                  1.0  -1.568089e+07  27.670455      -20.767045       1.0
3        1.339130e+07        1.339124e+07      1.339130e+07   75255.056818      75.227273      1.339124e+07        0.113636                0.113636       95.113636      105.999756                0.0                1.0                  0.0                  1.0  -1.568085e+07  54.460227       -0.000150       0.0
4        1.339132e+07        1.339130e+07      1.339132e+07   27725.028409      27.670455      1.339130e+07        0.113636                0.113636       95.113636      105.999756                0.0                1.0                  0.0                  1.0  -1.568079e+07  27.556818      -20.880682       0.0
5        1.339135e+07        1.339135e+07      1.339135e+07   27698.125000      27.670455      1.339135e+07        0.113636                0.113636       95.113636      105.999756                0.0                1.0                  0.0                  1.0  -1.568074e+07   6.789773      -41.647767       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=875/44, buf_size=200.[0m
[01/07 00:42:26]  --------------------------------------------------------------------------------
[01/07 00:42:26]  Iteration: 109 (0 solution, 108 counterexamples)
[01/07 00:54:22]  Generator returned sat in 708.162773 secs.
[01/07 00:54:23]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/07 00:54:35]  Improved gap from 18.316162109375 to 48.4375
[01/07 00:54:36]  Improved number of small numbers from 96 to 99 out of a max of 128
[01/07 00:54:36]  Verifer returned sat in 12.904191 secs.
[01/07 00:54:36]  sf_get_cex returned in 12.988404 secs.
[01/07 00:54:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.470019e+07        1.470019e+07      1.470019e+07       0.180420       0.183105      1.470019e+07             0.0                     0.0       48.527832           100.0                0.0                1.0                  0.0                  2.0  -1.695906e+07   0.000000       -0.000051       0.0
1        1.470024e+07        1.470019e+07      1.470024e+07   48527.832031      48.527832      1.470019e+07             0.0                     0.0       48.527832           100.0                0.0                1.0                  0.0                  2.0  -1.695901e+07  48.437500       -0.000051       0.0
2        1.470029e+07        1.470024e+07      1.470029e+07   48576.269531      48.527832      1.470024e+07             0.0                     0.0       48.527832           100.0                0.0                1.0                  0.0                  2.0  -1.695896e+07  48.347168       -0.090332       0.0
3        1.470034e+07        1.470029e+07      1.470034e+07   48576.179199      48.527832      1.470029e+07             0.0                     0.0       48.527832           100.0                0.0                1.0                  0.0                  2.0  -1.695891e+07  48.437500        0.000000       0.0
4        1.470039e+07        1.470034e+07      1.470039e+07   48576.269531      48.527832      1.470034e+07             0.0                     0.0       48.527832           100.0                0.0                2.0                  0.0                  2.0  -1.695886e+07  48.527832        0.000000       1.0
5        1.470040e+07        1.470039e+07      1.470040e+07   13578.190918      13.529663      1.470039e+07             0.0                     0.0       48.527832           100.0                0.0                2.0                  0.0                  2.0  -1.695886e+07  13.529663      -86.470144       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=110835/8192, buf_size=200.[0m
[01/07 00:54:36]  --------------------------------------------------------------------------------
[01/07 00:54:36]  Iteration: 110 (0 solution, 109 counterexamples)
[01/07 01:46:58]  Generator returned sat in 3136.920475 secs.
[01/07 01:46:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 01:47:00]  Improved gap from 0.0 to 100
[01/07 01:47:01]  Improved number of small numbers from 58 to 67 out of a max of 128
[01/07 01:47:01]  Verifer returned sat in 3.006691 secs.
[01/07 01:47:01]  sf_get_cex returned in 3.060177 secs.
[01/07 01:47:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.470003e+07        1.469980e+07      1.470003e+07       0.180420       0.183105      1.469980e+07        0.000000                0.000000       51.152975      100.416016                2.0                4.0                  2.0            24.090088  -1.695870e+07  233.934733           200.0       3.0
1        1.470014e+07        1.469988e+07      1.470014e+07  101735.950024     101.502015      1.469988e+07        1.502015                0.000000       51.152975      100.416016                2.0                4.0                  2.0            24.090088  -1.695870e+07  253.188296           200.0       3.0
2        1.470024e+07        1.469995e+07      1.470024e+07  101756.705601     101.502015      1.469995e+07        3.004031                1.502015       51.152975      100.416016                2.0                4.0                  2.0            24.090088  -1.695870e+07  289.620592           200.0       3.0
3        1.470034e+07        1.470003e+07      1.470034e+07  101794.639913     101.502015      1.470003e+07        4.506046                3.004031       58.483683      100.416016                2.0                4.0                  2.0             4.000000  -1.695870e+07  300.000000           200.0       3.0
4        1.470046e+07        1.470013e+07      1.470046e+07  116467.937472     116.163431      1.470013e+07       20.669477                4.506046       66.786947      100.416016                2.0                4.0                  2.0             4.000000  -1.695870e+07  300.000000           200.0       3.0
5        1.470059e+07        1.470023e+07      1.470059e+07  133090.627597     132.769958      1.470023e+07       53.439435               20.669477       72.427700      100.416016                1.0                3.0                  2.0             3.000000  -1.695870e+07  299.909790           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=2, loss_amount=34463179/663552, alpha=2133811/2654208, buf_size=200.[0m
[01/07 01:47:02]  --------------------------------------------------------------------------------
[01/07 01:47:02]  Iteration: 111 (0 solution, 110 counterexamples)
[01/07 02:01:38]  Generator returned sat in 871.509151 secs.
[01/07 02:01:39]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_qdel + 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/07 02:01:41]  Improved gap from 24.36083984375 to 100
[01/07 02:01:42]  Improved number of small numbers from 59 to 74 out of a max of 128
[01/07 02:01:42]  Verifer returned sat in 3.598540 secs.
[01/07 02:01:42]  sf_get_cex returned in 3.655035 secs.
[01/07 02:01:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.489408e+07        1.489390e+07      1.489408e+07       0.180176       0.182861      1.489390e+07        0.022705                0.000000       99.977448      199.887451                1.0                3.0                  1.0             2.022461  -1.695870e+07  178.123886      178.123886       2.0
1        1.489413e+07        1.489400e+07      1.489413e+07   50166.870346      49.988724      1.489400e+07        0.022705                0.022705       99.977448      199.887451                0.0                2.0                  1.0             2.000000  -1.695870e+07  128.112610      128.112610       1.0
2        1.489434e+07        1.489400e+07      1.489434e+07  214105.582825     213.977448      1.489400e+07       42.112762                0.022705       99.977448      199.887451                0.0                2.0                  1.0             2.000000  -1.695870e+07  300.000000      200.000000       1.0
3        1.489456e+07        1.489420e+07      1.489456e+07  214319.560272     213.977448      1.489420e+07      156.090210               42.112762      100.000000      199.887451                0.0                2.0                  1.0             2.000000  -1.695870e+07  200.000000      200.000000       1.0
4        1.489477e+07        1.489420e+07      1.489477e+07  214378.642700     214.022552      1.489420e+07      270.112762              156.090210      100.000000      199.887451                0.0                2.0                  1.0             2.000000  -1.695870e+07  300.000000      200.000000       1.0
5        1.489498e+07        1.489440e+07      1.489498e+07  214592.665253     214.022552      1.489440e+07      384.135315              270.112762      100.000000      199.887451                1.0                3.0                  1.0             2.000000  -1.695870e+07  200.090441      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=6293301/16384, alpha=459491/32768, buf_size=200.[0m
[01/07 02:01:42]  --------------------------------------------------------------------------------
[01/07 02:01:42]  Iteration: 112 (0 solution, 111 counterexamples)
[01/07 02:10:56]  Generator returned sat in 548.202139 secs.
[01/07 02:10:56]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/07 02:10:57]  Improved gap from 8.916666666666666 to 100
[01/07 02:10:58]  Improved number of small numbers from 109 to 116 out of a max of 128
[01/07 02:10:58]  Verifer returned sat in 1.391912 secs.
[01/07 02:10:58]  sf_get_cex returned in 1.445806 secs.
[01/07 02:10:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.492890e+07        1.492870e+07      1.492890e+07       0.179932       0.182617      1.492870e+07        0.000000                0.000000       80.270264      100.089844                0.0                2.0                  0.0             2.090088  -1.699350e+07  199.729736      199.729736       1.0
1        1.492900e+07        1.492874e+07      1.492900e+07  100379.905518     100.180176      1.492874e+07        0.000000                0.000000       80.270264      100.089844                0.0                2.0                  0.0             2.090088  -1.699350e+07  260.630615      199.909912       1.0
2        1.492910e+07        1.492890e+07      1.492910e+07  100440.806396     100.180176      1.492890e+07        0.090088                0.000000       80.360352      100.089844                0.0                2.0                  0.0             2.090088  -1.699350e+07  200.000000      200.000000       1.0
3        1.492920e+07        1.492900e+07      1.492920e+07  100470.353760     100.270264      1.492900e+07        0.360352                0.090088       86.906901      100.089844                0.0                2.0                  0.0             2.000000  -1.699350e+07  200.000000      200.000000       1.0
4        1.492931e+07        1.492900e+07      1.492931e+07  107017.173503     106.816813      1.492900e+07        7.177165                0.360352       86.906901      100.000000                0.0                2.0                  0.0             2.000000  -1.699350e+07  300.000000      200.000000       1.0
5        1.492941e+07        1.492914e+07      1.492941e+07  107123.990316     106.816813      1.492914e+07       13.993978                7.177165       86.906901      100.000000                1.0                3.0                  1.0             2.000000  -1.699350e+07  260.630615      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=85979/6144, alpha=81551/4096, buf_size=200.[0m
[01/07 02:10:58]  --------------------------------------------------------------------------------
[01/07 02:10:58]  Iteration: 113 (0 solution, 112 counterexamples)
[01/07 02:26:23]  Generator returned sat in 919.447181 secs.
[01/07 02:26:23]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 02:26:31]  Improved gap from 0.0 to 48.4375
[01/07 02:26:32]  Improved number of small numbers from 63 to 66 out of a max of 128
[01/07 02:26:32]  Verifer returned sat in 9.128672 secs.
[01/07 02:26:32]  sf_get_cex returned in 9.182654 secs.
[01/07 02:26:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.502213e+07        1.502213e+07      1.502213e+07       0.179932       0.182373      1.502213e+07        0.044983                0.000000       99.977509      262.499756                0.0                2.0                  0.0                  2.0  -1.699370e+07   0.000000       -0.089885       1.0
1        1.502218e+07        1.502213e+07      1.502218e+07   50033.782166      50.033737      1.502213e+07        0.044983                0.044983       99.977509      262.499756                0.0                1.0                  0.0                  1.0  -1.699365e+07  49.943771        0.000000       0.0
2        1.502223e+07        1.502218e+07      1.502223e+07   49993.760117      49.943771      1.502218e+07        0.044983                0.044983       99.977509      262.499756                0.0                2.0                  0.0                  1.0  -1.699361e+07  49.943771       -1.562328       1.0
3        1.502228e+07        1.502223e+07      1.502228e+07   50083.725937      50.033737      1.502223e+07        0.044983                0.044983       99.977509      262.499756                0.0                1.0                  0.0                  1.0  -1.699356e+07  46.931229       -1.506271       0.0
4        1.502233e+07        1.502228e+07      1.502233e+07   49990.747574      49.943771      1.502228e+07        0.044983                0.044983       99.977509      262.499756                0.0                1.0                  0.0                  1.0  -1.699350e+07  48.437500        0.000000       0.0
5        1.502238e+07        1.502233e+07      1.502238e+07   49992.253845      49.943771      1.502233e+07        0.044983                0.044983       99.977509      262.499756                0.0                2.0                  0.0                  1.0  -1.699350e+07  49.943771      -50.056087       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=737/16384, buf_size=200.[0m
[01/07 02:26:32]  --------------------------------------------------------------------------------
[01/07 02:26:32]  Iteration: 114 (0 solution, 113 counterexamples)
[01/07 02:29:59]  Generator returned sat in 200.782988 secs.
[01/07 02:29:59]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 02:30:29]  Improved gap from 1.9346846846846846 to 48.4375
[01/07 02:30:30]  Improved number of small numbers from 97 to 100 out of a max of 128
[01/07 02:30:30]  Verifer returned sat in 30.560113 secs.
[01/07 02:30:30]  sf_get_cex returned in 30.616796 secs.
[01/07 02:30:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.502285e+07        1.502285e+07      1.502285e+07       0.179932       0.182129      1.502285e+07             0.0                     0.0       25.736719           100.0                2.0                4.0                  2.0                  9.0  -1.699370e+07   0.028125        0.018940       3.0
1        1.502290e+07        1.502285e+07      1.502290e+07   51473.465625      51.473438      1.502285e+07             0.0                     0.0       25.736719           100.0                2.0                4.0                  2.0                  9.0  -1.699366e+07  51.492188        0.000000       3.0
2        1.502295e+07        1.502290e+07      1.502295e+07   51524.929688      51.473438      1.502290e+07             0.0                     0.0       25.746094           100.0                0.0                2.0                  2.0                  9.0  -1.699361e+07  51.473438       -0.000005       1.0
3        1.502298e+07        1.502295e+07      1.502298e+07   25788.192188      25.736719      1.502295e+07             0.0                     0.0       34.334375           100.0                0.0                1.0                  2.0                  9.0  -1.699356e+07  25.699219      -22.738281       0.0
4        1.502301e+07        1.502300e+07      1.502301e+07   34350.699219      34.325000      1.502300e+07             0.0                     0.0       37.860156           100.0                0.0                1.0                  2.0                  9.0  -1.699350e+07  11.586719      -36.850781       0.0
5        1.502305e+07        1.502305e+07      1.502305e+07   37862.367969      37.850781      1.502305e+07             0.0                     0.0       39.975625           100.0                0.0                1.0                  2.0                  9.0  -1.699350e+07   1.000000      -98.999858       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=3/320, buf_size=200.[0m
[01/07 02:30:30]  --------------------------------------------------------------------------------
[01/07 02:30:30]  Iteration: 115 (0 solution, 114 counterexamples)
[01/07 02:34:10]  Generator returned sat in 214.771961 secs.
[01/07 02:34:11]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/07 02:34:20]  Improved gap from 0.0 to 48.4375
[01/07 02:34:21]  Improved number of small numbers from 97 to 101 out of a max of 128
[01/07 02:34:21]  Verifer returned sat in 10.063790 secs.
[01/07 02:34:21]  sf_get_cex returned in 10.120188 secs.
[01/07 02:34:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.502283e+07        1.502281e+07      1.502283e+07       0.179932       0.182129      1.502281e+07             0.0                     0.0       75.001563           100.0                1.0                3.0                  1.0             3.998291  -1.699366e+07  17.186719       17.186519       2.0
1        1.502286e+07        1.502281e+07      1.502286e+07   37516.405469      37.499219      1.502281e+07             0.0                     0.0       75.001563           100.0                2.0                4.0                  2.0             3.998291  -1.699362e+07  54.684375        0.000000       3.0
2        1.502290e+07        1.502286e+07      1.502290e+07   37553.903125      37.499219      1.502286e+07             0.0                     0.0       75.001563           100.0                0.0                2.0                  2.0             3.998291  -1.699357e+07  37.499219      -10.938281       1.0
3        1.502294e+07        1.502291e+07      1.502294e+07   37536.717969      37.499219      1.502291e+07             0.0                     0.0       75.001563           100.0                0.0                1.0                  2.0             3.998291  -1.699351e+07  26.560938      -21.876562       0.0
4        1.502298e+07        1.502296e+07      1.502298e+07   37527.342187      37.500781      1.502296e+07             0.0                     0.0       75.001563           100.0                0.0                1.0                  2.0             3.998291  -1.699346e+07  15.624219      -32.813281       0.0
5        1.502301e+07        1.502301e+07      1.502301e+07   37516.405469      37.500781      1.502301e+07             0.0                     0.0       75.001563           100.0                0.0                1.0                  2.0             3.998291  -1.699341e+07   4.687491      -43.750054       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1/640, buf_size=200.[0m
[01/07 02:34:21]  --------------------------------------------------------------------------------
[01/07 02:34:21]  Iteration: 116 (0 solution, 115 counterexamples)
[01/07 02:44:18]  Generator returned sat in 591.467082 secs.
[01/07 02:44:18]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 02:44:33]  Improved gap from 0.0 to 48.4375
[01/07 02:44:33]  Improved number of small numbers from 90 to 93 out of a max of 128
[01/07 02:44:33]  Verifer returned sat in 15.079636 secs.
[01/07 02:44:33]  sf_get_cex returned in 15.136358 secs.
[01/07 02:44:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.502297e+07        1.502295e+07      1.502297e+07       0.179932       0.181885      1.502295e+07        0.001465                0.000000       37.888190           100.0                0.0                1.0                  0.0                  2.0  -1.699380e+07  16.325037       16.325004       0.0
1        1.502300e+07        1.502295e+07      1.502300e+07   36750.701502      36.734375      1.502295e+07        0.001465                0.001465       37.888190           100.0                0.0                2.0                  0.0                  2.0  -1.699376e+07  53.057788       -1.626412       1.0
2        1.502304e+07        1.502301e+07      1.502304e+07   36787.434253      36.734375      1.502301e+07        0.001465                0.001465       37.888190           100.0                0.0                1.0                  0.0                  2.0  -1.699371e+07  35.107910      -13.329590       0.0
3        1.502308e+07        1.502305e+07      1.502308e+07   36769.484375      36.734375      1.502305e+07        0.001465                0.001465       37.888190           100.0                0.0                1.0                  0.0                  2.0  -1.699366e+07  23.404785      -25.032715       0.0
4        1.502311e+07        1.502310e+07      1.502311e+07   36757.781250      36.734375      1.502310e+07        0.001465                0.001465       37.889813           100.0                0.0                1.0                  0.0                  2.0  -1.699360e+07  11.701660      -36.735840       0.0
5        1.502315e+07        1.502315e+07      1.502315e+07   36747.701502      36.735998      1.502315e+07        0.001465                0.001465       39.999351           100.0                0.0                1.0                  0.0                  2.0  -1.699360e+07   0.000159      -99.999789       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2843/2464, buf_size=200.[0m
[01/07 02:44:33]  --------------------------------------------------------------------------------
[01/07 02:44:33]  Iteration: 117 (0 solution, 116 counterexamples)
[01/07 03:10:53]  Generator returned sat in 1573.500202 secs.
[01/07 03:10:53]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/07 03:10:59]  Improved gap from 18.24137931034483 to 48.4375
[01/07 03:11:00]  Improved number of small numbers from 86 to 97 out of a max of 128
[01/07 03:11:00]  Verifer returned sat in 6.515413 secs.
[01/07 03:11:00]  sf_get_cex returned in 6.568141 secs.
[01/07 03:11:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.461807e+07        1.461807e+07      1.461807e+07       0.179688       0.181641      1.461807e+07             0.0                     0.0         68.4375           100.0                0.0                1.0                  0.0             2.954834  -1.697409e+07   0.000000       -0.000191       0.0
1        1.461812e+07        1.461807e+07      1.461812e+07   48482.482910      48.482483      1.461807e+07             0.0                     0.0         68.4375           100.0                0.0                1.0                  0.0             2.954834  -1.697404e+07  48.392517       -0.044983       0.0
2        1.461817e+07        1.461812e+07      1.461817e+07   48530.875427      48.482483      1.461812e+07             0.0                     0.0         68.4375           100.0                0.0                1.0                  0.0             2.954834  -1.697399e+07  48.437500        0.000000       0.0
3        1.461822e+07        1.461817e+07      1.461822e+07   48530.920410      48.482483      1.461817e+07             0.0                     0.0         68.4375           100.0                0.0                2.0                  0.0             2.954834  -1.697394e+07  48.482483        0.000000       1.0
4        1.461825e+07        1.461822e+07      1.461825e+07   34267.232483      34.218750      1.461822e+07             0.0                     0.0         68.4375           100.0                0.0                2.0                  0.0             2.954834  -1.697389e+07  34.218750      -14.218758       1.0
5        1.461829e+07        1.461827e+07      1.461829e+07   34252.968750      34.218750      1.461827e+07             0.0                     0.0         68.4375           100.0                0.0                1.0                  0.0             2.954834  -1.697389e+07  19.999992      -79.999764       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=326943/16384, buf_size=200.[0m
[01/07 03:11:00]  --------------------------------------------------------------------------------
[01/07 03:11:00]  Iteration: 118 (0 solution, 117 counterexamples)
[01/07 03:17:58]  Generator returned sat in 412.903862 secs.
[01/07 03:17:59]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/07 03:18:00]  Improved gap from 0.0 to 100
[01/07 03:18:01]  Improved number of small numbers from 101 to 101 out of a max of 128
[01/07 03:18:01]  Verifer returned sat in 1.937739 secs.
[01/07 03:18:01]  sf_get_cex returned in 1.992801 secs.
[01/07 03:18:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.461811e+07        1.461796e+07      1.461811e+07       0.179688       0.181641      1.461796e+07        0.044922                0.000000       79.267904      119.238770                0.0                2.0                  0.0             2.044922  -1.697409e+07  158.580729       81.580729       1.0
1        1.461827e+07        1.461811e+07      1.461827e+07  158694.432943     158.535807      1.461811e+07        0.044922                0.044922       79.312826      119.238770                0.0                1.0                  0.0             1.000000  -1.697409e+07  158.490885      140.116536       0.0
2        1.461843e+07        1.461819e+07      1.461843e+07  160086.921224     159.928385      1.461819e+07        0.089844                0.044922       79.537435      119.238770                0.0                2.0                  0.0             1.000000  -1.697409e+07  238.387695      200.000000       1.0
3        1.461859e+07        1.461827e+07      1.461859e+07  160616.081706     160.377604      1.461827e+07       60.467448                0.089844       79.537435      119.238770                0.0                2.0                  0.0             1.000000  -1.697409e+07  259.029948      200.000000       1.0
4        1.461875e+07        1.461843e+07      1.461875e+07  160697.101562     160.377604      1.461843e+07      120.845052               60.467448       95.391016      119.238770                1.0                3.0                  1.0             1.000000  -1.697409e+07  200.044922      200.000000       2.0
5        1.461895e+07        1.461843e+07      1.461895e+07  192405.655599     192.084766      1.461843e+07      212.929818              120.845052       95.391016      119.193848                2.0                4.0                  2.0             1.000000  -1.697409e+07  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=408739/1920, alpha=667/512, buf_size=200.[0m
[01/07 03:18:01]  --------------------------------------------------------------------------------
[01/07 03:18:01]  Iteration: 119 (0 solution, 118 counterexamples)
[01/07 04:31:52]  Generator returned sat in 4425.268675 secs.
[01/07 04:31:52]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 04:31:56]  Improved gap from 9.064317698674747 to 100
[01/07 04:31:57]  Improved number of small numbers from 103 to 105 out of a max of 128
[01/07 04:31:57]  Verifer returned sat in 4.883622 secs.
[01/07 04:31:57]  sf_get_cex returned in 4.939222 secs.
[01/07 04:31:57]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.461836e+07        1.461809e+07      1.461836e+07       0.179443       0.181396      1.461809e+07        0.089600                0.000000       96.089844           100.0                2.0                4.0                  2.0                  7.0  -1.697409e+07  275.168213      180.269775       3.0
1        1.461854e+07        1.461819e+07      1.461854e+07  174365.101562     174.089844      1.461819e+07       54.449219                0.089600       96.089844           100.0                1.0                3.0                  2.0                  7.0  -1.697409e+07  291.078125      200.000000       2.0
2        1.461857e+07        1.461829e+07      1.461857e+07   30300.605469      29.955078      1.461829e+07       54.449219               54.449219       96.089844           100.0                2.0                4.0                  2.0                  7.0  -1.697409e+07  224.494141      129.955078       3.0
3        1.461874e+07        1.461848e+07      1.461874e+07  174368.787109     174.089844      1.461848e+07       58.494141               54.449219       98.089844           100.0                1.0                3.0                  2.0                  7.0  -1.697409e+07  202.539062      200.000000       2.0
4        1.461892e+07        1.461858e+07      1.461892e+07  178350.876953     178.089844      1.461858e+07      136.583984               58.494141       98.979687           100.0                0.0                2.0                  2.0                  2.0  -1.697409e+07  200.000000      200.000000       1.0
5        1.461910e+07        1.461858e+07      1.461910e+07  180206.115234     179.869531      1.461858e+07      216.453516              136.583984       98.979687           100.0                1.0                3.0                  2.0                  2.0  -1.697409e+07  299.909945      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=414731/2560, alpha=4631/256, buf_size=200.[0m
[01/07 04:31:57]  --------------------------------------------------------------------------------
[01/07 04:31:57]  Iteration: 120 (0 solution, 119 counterexamples)
[01/07 04:56:54]  Generator returned sat in 1491.229764 secs.
[01/07 04:56:54]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/07 04:56:56]  Improved number of small numbers from 77 to 86 out of a max of 127
[01/07 04:56:56]  Verifer returned sat in 2.100124 secs.
[01/07 04:56:56]  sf_get_cex returned in 2.153953 secs.
[01/07 04:56:56]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.460561e+07        1.460540e+07      1.460561e+07       0.179199       0.181396      1.460540e+07        0.000000                0.000000       93.179443      208.076904                1.0                3.0                  1.0             2.910156  -1.696132e+07  216.154004           200.0       2.0
1        1.460573e+07        1.460542e+07      1.460573e+07  113305.875684     113.089722      1.460542e+07       13.089722                0.000000       93.179443      208.076904                2.0                4.0                  2.0             2.910156  -1.696132e+07  294.615332           200.0       3.0
2        1.460584e+07        1.460560e+07      1.460584e+07  113397.426733     113.089722      1.460560e+07       26.179443               13.089722       93.269165      208.076904                2.0                4.0                  2.0             2.910156  -1.696132e+07  208.077002           200.0       3.0
3        1.460595e+07        1.460561e+07      1.460595e+07  113413.699805     113.179443      1.460561e+07       39.358887               26.179443       93.269165      108.077002                2.0                4.0                  2.0             2.910156  -1.696132e+07  300.000000           200.0       3.0
4        1.460606e+07        1.460571e+07      1.460606e+07  113518.802246     113.179443      1.460571e+07       52.538330               39.358887       93.269165      105.384668                2.0                4.0                  2.0             2.910156  -1.696132e+07  300.000000           200.0       3.0
5        1.460618e+07        1.460582e+07      1.460618e+07  113531.981689     113.179443      1.460582e+07       65.717773               52.538330       93.269165      105.384668                1.0                3.0                  2.0             2.910156  -1.696132e+07  294.615332           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=431129/8192, alpha=163105/8192, buf_size=200.[0m
[01/07 04:56:56]  --------------------------------------------------------------------------------
[01/07 04:56:56]  Iteration: 121 (0 solution, 120 counterexamples)
[01/07 05:05:05]  Generator returned sat in 483.167600 secs.
[01/07 05:05:06]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1max_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/07 05:05:11]  Improved gap from 0.089599609375 to 100
[01/07 05:05:11]  Improved number of small numbers from 103 to 128 out of a max of 128
[01/07 05:05:11]  Verifer returned sat in 5.764396 secs.
[01/07 05:05:11]  sf_get_cex returned in 5.821892 secs.
[01/07 05:05:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        1.460632e+07        1.460614e+07      1.460632e+07       0.179199       0.181396      1.460614e+07        0.000000                0.000000         97.0896           102.0                0.0                2.0                  0.0               2.9104  -1.696132e+07  179.999756       85.999756       1.0
1        1.460653e+07        1.460633e+07      1.460653e+07  214269.599365     214.089600      1.460633e+07        0.089355                0.000000         97.0896           102.0                0.0                1.0                  0.0               2.9104  -1.696132e+07  208.000000      200.000000       0.0
2        1.460661e+07        1.460643e+07      1.460661e+07   77387.288574      77.179199      1.460643e+07        0.089355                0.089355         98.0000           102.0                0.0                2.0                  0.0               2.0000  -1.696132e+07  177.179199      177.179199       1.0
3        1.460683e+07        1.460643e+07      1.460683e+07  216087.668945     215.910400      1.460643e+07       93.178955                0.089355         98.0000           102.0                0.0                2.0                  0.0               2.0000  -1.696132e+07  300.000000      200.000000       1.0
4        1.460704e+07        1.460663e+07      1.460704e+07  216303.579346     215.910400      1.460663e+07      209.089355               93.178955         98.0000           102.0                0.0                2.0                  0.0               2.0000  -1.696132e+07  204.000000      200.000000       1.0
5        1.460726e+07        1.460663e+07      1.460726e+07  216323.489746     215.910400      1.460663e+07      324.999756              209.089355         98.0000           102.0                1.0                3.0                  1.0               2.0000  -1.696132e+07  300.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=1330833/4096, alpha=81553/4096, buf_size=200.[0m
[01/07 05:05:12]  --------------------------------------------------------------------------------
[01/07 05:05:12]  Iteration: 122 (0 solution, 121 counterexamples)
[01/07 05:07:49]  Generator returned sat in 151.385076 secs.
[01/07 05:07:49]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -1max_c + -1min_qdel + -1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 05:08:03]  Improved gap from 0.0 to 48.4375
[01/07 05:08:04]  Improved number of small numbers from 97 to 98 out of a max of 128
[01/07 05:08:04]  Verifer returned sat in 14.984299 secs.
[01/07 05:08:04]  sf_get_cex returned in 15.039936 secs.
[01/07 05:08:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.460625e+07        1.460624e+07      1.460625e+07       0.179199       0.181396      1.460624e+07        0.089355                0.000000       22.263550      100.999756                1.0                3.0                  1.0                  5.0  -1.696153e+07   4.927104        4.927002       2.0
1        1.460629e+07        1.460624e+07      1.460629e+07   44532.116069      44.527100      1.460624e+07        0.089355                0.089355       22.263550      100.999756                2.0                4.0                  2.0                  5.0  -1.696148e+07  48.616943       -0.089355       3.0
2        1.460633e+07        1.460629e+07      1.460633e+07   44575.805908      44.527100      1.460629e+07        0.089355                0.089355       24.353149      100.999756                0.0                1.0                  2.0                  5.0  -1.696143e+07  44.437744       -4.447754       0.0
3        1.460637e+07        1.460634e+07      1.460637e+07   32131.502197      32.086975      1.460634e+07        0.089355                0.089355       32.530599      100.999756                0.0                1.0                  2.0                  5.0  -1.696138e+07  27.639221      -20.798279       0.0
4        1.460640e+07        1.460639e+07      1.460640e+07   36203.428446      36.175700      1.460639e+07        0.089355                0.089355       36.507324      100.999756                0.0                1.0                  2.0                  5.0  -1.696132e+07  15.377421      -33.060323       0.0
5        1.460644e+07        1.460644e+07      1.460644e+07   38179.529277      38.164062      1.460644e+07        0.089355                0.089355       39.814628      100.999756                0.0                1.0                  2.0                  5.0  -1.696132e+07   0.497640      -94.896016       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81553/4096, buf_size=200.[0m
[01/07 05:08:04]  --------------------------------------------------------------------------------
[01/07 05:08:04]  Iteration: 123 (0 solution, 122 counterexamples)
[01/07 05:20:03]  Generator returned sat in 712.981944 secs.
[01/07 05:20:04]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 05:20:14]  Improved gap from 7.995800839832033 to 48.4375
[01/07 05:20:15]  Improved number of small numbers from 81 to 85 out of a max of 128
[01/07 05:20:15]  Verifer returned sat in 10.811767 secs.
[01/07 05:20:15]  sf_get_cex returned in 10.868156 secs.
[01/07 05:20:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.460837e+07        1.460837e+07      1.460837e+07       0.178955       0.181396      1.460837e+07          0.0448                  0.0000         48.5271           100.0                0.0                2.0                  0.0             6.044678  -1.696152e+07   6.070801        6.070679       1.0
1        1.460842e+07        1.460837e+07      1.460842e+07   48533.215210      48.527100      1.460837e+07          0.0448                  0.0448         48.5271           100.0                0.0                2.0                  0.0             2.000000  -1.696148e+07  48.527100       -0.044800       1.0
2        1.460847e+07        1.460842e+07      1.460847e+07   48530.871704      48.482300      1.460842e+07          0.0448                  0.0448         48.5271           100.0                0.0                1.0                  0.0             2.000000  -1.696143e+07  48.437500        0.000000       0.0
3        1.460849e+07        1.460847e+07      1.460849e+07   24356.831909      24.308350      1.460847e+07          0.0448                  0.0448         48.5271           100.0                0.0                2.0                  0.0             2.000000  -1.696138e+07  24.308350      -24.129150       1.0
4        1.460854e+07        1.460852e+07      1.460854e+07   48506.652954      48.482300      1.460852e+07          0.0448                  0.0448         48.5271           100.0                0.0                1.0                  0.0             2.000000  -1.696132e+07  24.353149      -24.084351       0.0
5        1.460857e+07        1.460857e+07      1.460857e+07   24332.747559      24.308350      1.460857e+07          0.0448                  0.0448         48.5271           100.0                0.0                1.0                  0.0             2.000000  -1.696127e+07   0.223918      -48.213745       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=367/8192, buf_size=200.[0m
[01/07 05:20:15]  --------------------------------------------------------------------------------
[01/07 05:20:15]  Iteration: 124 (0 solution, 123 counterexamples)
[01/07 05:40:33]  Generator returned sat in 1212.677758 secs.
[01/07 05:40:34]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + -1min_qdel + -1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 05:40:43]  Improved gap from 13.333333333333334 to 48.4375
[01/07 05:40:43]  Improved number of small numbers from 109 to 128 out of a max of 128
[01/07 05:40:43]  Verifer returned sat in 9.613493 secs.
[01/07 05:40:43]  sf_get_cex returned in 9.670784 secs.
[01/07 05:40:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        1.442822e+07        1.442821e+07      1.442822e+07       0.178711       0.181152      1.442821e+07             0.0                     0.0          96.875      106.785645                0.0                2.0                  0.0               2.0896  -1.696152e+07   6.070801        6.070801       1.0
1        1.442827e+07        1.442821e+07      1.442827e+07   48443.570801      48.437500      1.442821e+07             0.0                     0.0          96.875      106.785645                0.0                2.0                  0.0               2.0896  -1.696148e+07  54.418945        0.000000       1.0
2        1.442831e+07        1.442827e+07      1.442831e+07   48491.918945      48.437500      1.442827e+07             0.0                     0.0          96.875      106.785645                0.0                2.0                  0.0               2.0896  -1.696143e+07  48.437500        0.000000       1.0
3        1.442836e+07        1.442831e+07      1.442836e+07   48485.937500      48.437500      1.442831e+07             0.0                     0.0          96.875      106.785645                0.0                2.0                  0.0               2.0896  -1.696138e+07  48.437500        0.000000       1.0
4        1.442841e+07        1.442836e+07      1.442841e+07   48485.937500      48.437500      1.442836e+07             0.0                     0.0          96.875      106.785645                0.0                2.0                  0.0               2.0896  -1.696132e+07  48.437500       -0.000244       1.0
5        1.442846e+07        1.442841e+07      1.442846e+07   48485.937500      48.437500      1.442841e+07             0.0                     0.0          96.875      106.785645                0.0                1.0                  0.0               2.0896  -1.696127e+07  48.347900       -0.089600       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=367/4096, buf_size=200.[0m
[01/07 05:40:44]  --------------------------------------------------------------------------------
[01/07 05:40:44]  Iteration: 125 (0 solution, 124 counterexamples)
[01/07 05:56:15]  Generator returned sat in 925.352597 secs.
[01/07 05:56:15]  Candidate solution: 
[1m[94mif (+ -1min_c + -1min_qdel + 1max_qdel + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/07 05:56:40]  Improved gap from 5.97393798828125 to 48.4375
[01/07 05:56:40]  Improved number of small numbers from 103 to 128 out of a max of 128
[01/07 05:56:40]  Verifer returned sat in 24.980644 secs.
[01/07 05:56:40]  sf_get_cex returned in 25.033573 secs.
[01/07 05:56:40]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.660127e+07        4.660126e+07      4.660127e+07       0.178711       0.180908      4.660126e+07        0.089355                0.000000       97.053711      101.053467                1.0                3.0                  1.0             3.089355  -4.951452e+07   6.071289        0.000000       2.0
1        4.660132e+07        4.660127e+07      4.660132e+07   48443.660645      48.437500      4.660127e+07        0.089355                0.089355       97.053711      101.053467                2.0                4.0                  2.0             3.089355  -4.951447e+07  48.437500        0.000000       3.0
2        4.660137e+07        4.660132e+07      4.660137e+07   48486.026855      48.437500      4.660132e+07        0.089355                0.089355       97.053711      101.053467                0.0                2.0                  2.0             3.089355  -4.951442e+07  48.437500        0.000000       1.0
3        4.660142e+07        4.660137e+07      4.660142e+07   48486.026855      48.437500      4.660137e+07        0.089355                0.089355       97.053711      101.053467                0.0                2.0                  2.0             3.089355  -4.951437e+07  48.437500        0.000000       1.0
4        4.660146e+07        4.660142e+07      4.660146e+07   48486.026855      48.437500      4.660142e+07        0.089355                0.089355       97.053711      101.053467                0.0                2.0                  2.0             3.089355  -4.951431e+07  48.437500       -0.089355       1.0
5        4.660151e+07        4.660146e+07      4.660151e+07   48486.026855      48.437500      4.660146e+07        0.089355                0.089355       97.053711      101.053467                0.0                1.0                  2.0             3.089355  -4.951426e+07  48.348145       -0.089600       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=183/2048, buf_size=200.[0m
[01/07 05:56:40]  --------------------------------------------------------------------------------
[01/07 05:56:40]  Iteration: 126 (0 solution, 125 counterexamples)
[01/07 06:06:32]  Generator returned sat in 586.036091 secs.
[01/07 06:06:33]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/07 06:06:50]  Improved gap from 13.206298828125 to 48.4375
[01/07 06:06:51]  Improved number of small numbers from 83 to 87 out of a max of 128
[01/07 06:06:51]  Verifer returned sat in 18.090522 secs.
[01/07 06:06:51]  sf_get_cex returned in 18.143899 secs.
[01/07 06:06:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.660121e+07        4.660119e+07      4.660121e+07       0.178711       0.180908      4.660119e+07        0.000583                0.000000       36.576491           100.0                2.0                4.0                  2.0                  2.0  -4.951445e+07  17.109903       11.862870       3.0
1        4.660125e+07        4.660120e+07      4.660125e+07   36591.793582      36.574683      4.660120e+07        0.000583                0.000583       36.576491           100.0                1.0                3.0                  2.0                  2.0  -4.951440e+07  48.437500        0.000000       2.0
2        4.660128e+07        4.660125e+07      4.660128e+07   36626.737383      36.578299      4.660125e+07        0.000583                0.000583       36.576491           100.0                0.0                2.0                  2.0                  2.0  -4.951434e+07  36.578299      -11.859392       1.0
3        4.660132e+07        4.660129e+07      4.660132e+07   36614.878182      36.578299      4.660129e+07        0.000583                0.000583       36.576491           100.0                0.0                1.0                  2.0                  2.0  -4.951429e+07  23.719099      -24.718401       0.0
4        4.660135e+07        4.660134e+07      4.660135e+07   36602.018982      36.578299      4.660134e+07        0.000583                0.000583       36.578125           100.0                0.0                1.0                  2.0                  2.0  -4.951424e+07  11.859898      -36.579747       0.0
5        4.660139e+07        4.660139e+07      4.660139e+07   36591.793582      36.579933      4.660139e+07        0.000583                0.000583       38.950466           100.0                0.0                1.0                  2.0                  2.0  -4.951424e+07   0.000000      -99.999814       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=287/158730, buf_size=200.[0m
[01/07 06:06:51]  --------------------------------------------------------------------------------
[01/07 06:06:51]  Iteration: 127 (0 solution, 126 counterexamples)
[01/07 06:15:10]  Generator returned sat in 493.459945 secs.
[01/07 06:15:11]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1max_qdel + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 06:15:17]  Improved gap from 18.229310344827585 to 48.4375
[01/07 06:15:18]  Improved number of small numbers from 98 to 101 out of a max of 128
[01/07 06:15:18]  Verifer returned sat in 6.959246 secs.
[01/07 06:15:18]  sf_get_cex returned in 7.013586 secs.
[01/07 06:15:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.660128e+07        4.660128e+07      4.660128e+07       0.178711       0.180664      4.660128e+07             0.0                     0.0       24.245536           100.0                0.0                1.0                  0.0             2.008789  -4.951453e+07   0.000000       -0.000243       0.0
1        4.660133e+07        4.660128e+07      4.660133e+07   50517.857143      50.517857      4.660128e+07             0.0                     0.0       24.245536           100.0                0.0                1.0                  0.0             2.008789  -4.951448e+07  46.464286       -2.008753       0.0
2        4.660138e+07        4.660133e+07      4.660138e+07   50564.321429      50.517857      4.660133e+07             0.0                     0.0       24.245536           100.0                0.0                1.0                  0.0             2.008789  -4.951443e+07  48.508929        0.000000       0.0
3        4.660143e+07        4.660138e+07      4.660143e+07   50566.366071      50.517857      4.660138e+07             0.0                     0.0       32.327381           100.0                0.0                2.0                  0.0             2.008789  -4.951438e+07  50.517857        0.000000       1.0
4        4.660146e+07        4.660143e+07      4.660146e+07   30351.113095      30.300595      4.660143e+07             0.0                     0.0       36.875000           100.0                0.0                2.0                  0.0             2.008789  -4.951433e+07  30.300595      -18.136905       1.0
5        4.660150e+07        4.660148e+07      4.660150e+07   34878.514881      34.848214      4.660148e+07             0.0                     0.0       39.187500           100.0                0.0                1.0                  0.0             2.008789  -4.951433e+07  16.711310      -83.288584       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=227/112, buf_size=200.[0m
[01/07 06:15:18]  --------------------------------------------------------------------------------
[01/07 06:15:18]  Iteration: 128 (0 solution, 127 counterexamples)
[01/07 06:30:51]  Generator returned sat in 927.167261 secs.
[01/07 06:30:51]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/07 06:31:27]  Improved gap from 0.28708133971291866 to 48.4375
[01/07 06:31:27]  Improved number of small numbers from 89 to 101 out of a max of 128
[01/07 06:31:27]  Verifer returned sat in 35.821009 secs.
[01/07 06:31:27]  sf_get_cex returned in 35.874743 secs.
[01/07 06:31:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.660123e+07        4.660122e+07      4.660123e+07       0.178711       0.180420      4.660122e+07        0.089355                0.000000       65.345378           100.0                1.0                3.0                  1.0            23.743896  -4.951447e+07   4.142578        4.142454       2.0
1        4.660128e+07        4.660122e+07      4.660128e+07   48968.587402      48.964355      4.660122e+07        0.089355                0.089355       65.345378           100.0                2.0                4.0                  2.0            23.743896  -4.951443e+07  53.017578        0.000000       3.0
2        4.660132e+07        4.660127e+07      4.660132e+07   49017.462402      48.964355      4.660127e+07        0.089355                0.089355       65.345378           100.0                0.0                2.0                  2.0            23.743896  -4.951437e+07  48.964355       -0.000124       1.0
3        4.660137e+07        4.660132e+07      4.660137e+07   49013.409180      48.964355      4.660132e+07        0.089355                0.089355       65.345378           100.0                0.0                1.0                  2.0            23.743896  -4.951432e+07  48.875000        0.000000       0.0
4        4.660139e+07        4.660137e+07      4.660139e+07   16429.986491      16.381022      4.660137e+07        0.089355                0.089355       65.345378           100.0                0.0                2.0                  2.0            23.743896  -4.951427e+07  16.381022      -32.494102       1.0
5        4.660144e+07        4.660142e+07      4.660144e+07   48980.825846      48.964355      4.660142e+07        0.089355                0.089355       65.345378           100.0                0.0                1.0                  2.0            23.743896  -4.951427e+07  16.470253      -83.529502       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=100645/6144, buf_size=200.[0m
[01/07 06:31:27]  --------------------------------------------------------------------------------
[01/07 06:31:27]  Iteration: 129 (0 solution, 128 counterexamples)
[01/07 07:45:47]  Generator returned sat in 4453.266417 secs.
[01/07 07:45:47]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + -1min_buffer + 1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/07 07:45:51]  Improved gap from 0.0 to 100
[01/07 07:45:51]  Improved number of small numbers from 97 to 97 out of a max of 128
[01/07 07:45:51]  Verifer returned sat in 4.098278 secs.
[01/07 07:45:51]  sf_get_cex returned in 4.168986 secs.
[01/07 07:45:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.660118e+07        4.660090e+07      4.660118e+07       0.178711       0.180420      4.660090e+07        0.071429                0.000000       58.535714           102.0                2.0                4.0                  2.0             4.071429  -4.951432e+07  286.142857           200.0       3.0
1        4.660128e+07        4.660108e+07      4.660128e+07  100357.642857     100.071429      4.660108e+07        0.142857                0.071429       93.071429           102.0                0.0                2.0                  2.0             2.000000  -4.951432e+07  200.000000           200.0       1.0
2        4.660139e+07        4.660109e+07      4.660139e+07  110271.571429     110.071429      4.660109e+07       10.214286                0.142857       93.071429           102.0                1.0                3.0                  2.0             2.000000  -4.951432e+07  296.128571           200.0       2.0
3        4.660150e+07        4.660119e+07      4.660150e+07  110377.771429     110.071429      4.660119e+07       20.285714               10.214286       93.071429           102.0                1.0                3.0                  2.0             2.000000  -4.951432e+07  297.928571           200.0       2.0
4        4.660161e+07        4.660137e+07      4.660161e+07  110389.642857     110.071429      4.660137e+07       30.357143               20.285714       94.900000           102.0                1.0                3.0                  2.0             2.000000  -4.951432e+07  211.642857           200.0       2.0
5        4.660173e+07        4.660147e+07      4.660173e+07  112142.000000     111.900000      4.660147e+07       42.257143               30.357143       95.221429           102.0                1.0                3.0                  2.0             2.000000  -4.951432e+07  215.242857           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=1474/35, alpha=17, buf_size=200.[0m
[01/07 07:45:51]  --------------------------------------------------------------------------------
[01/07 07:45:51]  Iteration: 130 (0 solution, 129 counterexamples)
[01/07 08:03:22]  Generator returned sat in 1044.202996 secs.
[01/07 08:03:22]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/07 08:03:42]  Improved gap from 17.151515151515152 to 48.4375
[01/07 08:03:43]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/07 08:03:43]  Verifer returned sat in 20.438672 secs.
[01/07 08:03:43]  sf_get_cex returned in 20.493510 secs.
[01/07 08:03:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.660104e+07        4.660103e+07      4.660104e+07       0.178711       0.180176      4.660103e+07        0.089355                0.000000       97.053711      102.143066                2.0                4.0                  2.0                  2.0  -4.951437e+07   5.713867        5.713867       3.0
1        4.660109e+07        4.660104e+07      4.660109e+07   48532.658691      48.526855      4.660104e+07        0.089355                0.089355       97.053711      102.143066                0.0                1.0                  2.0                  1.0  -4.951433e+07  48.437500       -0.089355       0.0
2        4.660114e+07        4.660109e+07      4.660114e+07   48575.382324      48.526855      4.660109e+07        0.089355                0.089355       97.053711      102.143066                0.0                1.0                  2.0                  1.0  -4.951428e+07  48.437500        0.000000       0.0
3        4.660119e+07        4.660114e+07      4.660119e+07   48575.382324      48.526855      4.660114e+07        0.089355                0.089355       97.053711      102.143066                0.0                2.0                  2.0                  1.0  -4.951423e+07  48.526855        0.000000       1.0
4        4.660123e+07        4.660119e+07      4.660123e+07   48575.471680      48.526855      4.660119e+07        0.089355                0.089355       97.053711      102.143066                0.0                2.0                  2.0                  1.0  -4.951417e+07  48.526855       -0.000244       1.0
5        4.660128e+07        4.660123e+07      4.660128e+07   48575.471680      48.526855      4.660123e+07        0.089355                0.089355       97.053711      102.143066                0.0                1.0                  2.0                  1.0  -4.951417e+07  48.437500      -51.473145       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40777/2048, buf_size=200.[0m
[01/07 08:03:43]  --------------------------------------------------------------------------------
[01/07 08:03:43]  Iteration: 131 (0 solution, 130 counterexamples)
[01/07 08:20:20]  Generator returned sat in 991.490707 secs.
[01/07 08:20:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1max_qdel + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/07 08:20:39]  Improved gap from 17.863636363636363 to 48.4375
[01/07 08:20:39]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/07 08:20:39]  Verifer returned sat in 18.122424 secs.
[01/07 08:20:39]  sf_get_cex returned in 18.207272 secs.
[01/07 08:20:39]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.660212e+07        4.660211e+07      4.660212e+07       0.178711       0.180176      4.660211e+07        0.044678                0.000000       96.964355      103.919678                1.0                3.0                  1.0             4.044678  -4.951497e+07   6.160645        6.160645       2.0
1        4.660216e+07        4.660211e+07      4.660216e+07   48443.705322      48.437500      4.660211e+07        0.044678                0.044678       96.964355      103.919678                2.0                4.0                  2.0             4.044678  -4.951493e+07  54.553467        0.000000       3.0
2        4.660221e+07        4.660216e+07      4.660221e+07   48492.098145      48.437500      4.660216e+07        0.044678                0.044678       96.964355      103.919678                0.0                2.0                  2.0             4.044678  -4.951488e+07  48.437500        0.000000       1.0
3        4.660226e+07        4.660221e+07      4.660226e+07   48485.982178      48.437500      4.660221e+07        0.044678                0.044678       96.964355      103.919678                0.0                2.0                  2.0             4.044678  -4.951483e+07  48.437500        0.000000       1.0
4        4.660231e+07        4.660226e+07      4.660231e+07   48485.982178      48.437500      4.660226e+07        0.044678                0.044678       96.964355      103.919678                0.0                2.0                  2.0             4.044678  -4.951477e+07  48.437500        0.000000       1.0
5        4.660236e+07        4.660231e+07      4.660236e+07   48485.982178      48.437500      4.660231e+07        0.044678                0.044678       96.964355      103.919678                0.0                1.0                  2.0             4.044678  -4.951472e+07  48.392822       -0.044678       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=183/4096, buf_size=200.[0m
[01/07 08:20:39]  --------------------------------------------------------------------------------
[01/07 08:20:39]  Iteration: 132 (0 solution, 131 counterexamples)
[01/07 08:45:49]  Generator returned sat in 1499.394514 secs.
[01/07 08:45:49]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c + 1max_qdel + -1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/07 08:45:55]  Improved gap from 48.4375 to 100
[01/07 08:45:56]  Improved number of small numbers from 91 to 94 out of a max of 128
[01/07 08:45:56]  Verifer returned sat in 7.061234 secs.
[01/07 08:45:56]  sf_get_cex returned in 7.144326 secs.
[01/07 08:45:56]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.660206e+07        4.660186e+07      4.660206e+07       0.178711       0.180176      4.660186e+07        0.000000                0.000000       80.044678      160.223145                0.0                2.0                  0.0                  2.0  -4.951493e+07  200.000000           200.0       1.0
1        4.660216e+07        4.660194e+07      4.660216e+07  100222.338867     100.022339      4.660194e+07        0.022339                0.000000       80.044678      160.223145                0.0                2.0                  0.0                  2.0  -4.951493e+07  220.268066           200.0       1.0
2        4.660226e+07        4.660206e+07      4.660226e+07  100242.629272     100.022339      4.660206e+07        0.044678                0.022339       80.044678      160.223145                1.0                3.0                  1.0                  2.0  -4.951493e+07  200.000000           200.0       2.0
3        4.660236e+07        4.660210e+07      4.660236e+07  100222.383545     100.022339      4.660210e+07        0.067017                0.044678       80.044678      160.223145                1.0                3.0                  1.0                  2.0  -4.951493e+07  260.044556           200.0       2.0
4        4.660246e+07        4.660226e+07      4.660246e+07  100282.450439     100.022339      4.660226e+07        0.089355                0.067017       80.067017      160.134033                1.0                3.0                  1.0                  2.0  -4.951493e+07  200.000000           200.0       2.0
5        4.660256e+07        4.660230e+07      4.660256e+07  100244.767090     100.044678      4.660230e+07        0.134033                0.089355       80.067017      120.201050                1.0                3.0                  1.0                  2.0  -4.951493e+07  259.597900           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=915/8192, alpha=163657/8192, buf_size=200.[0m
[01/07 08:45:57]  --------------------------------------------------------------------------------
[01/07 08:45:57]  Iteration: 133 (0 solution, 132 counterexamples)
[01/07 09:37:11]  Generator returned sat in 3064.337785 secs.
[01/07 09:37:12]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 09:37:16]  Improved gap from 0.0 to 100
[01/07 09:37:17]  Improved number of small numbers from 91 to 91 out of a max of 128
[01/07 09:37:17]  Verifer returned sat in 5.323306 secs.
[01/07 09:37:17]  sf_get_cex returned in 5.411678 secs.
[01/07 09:37:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.658828e+07        4.658808e+07      4.658828e+07       0.178711       0.180176      4.658808e+07        0.000000                0.000000       75.726237      200.089355                2.0                4.0                  2.0             2.089355  -4.951493e+07  200.000000      200.000000       3.0
1        4.658836e+07        4.658818e+07      4.658836e+07   75836.881510      75.636882      4.658818e+07        0.000000                0.000000       75.726237      200.089355                0.0                2.0                  2.0             2.089355  -4.951493e+07  175.636882      175.636882       1.0
2        4.658851e+07        4.658818e+07      4.658851e+07  151628.110840     151.452474      4.658818e+07       27.089355                0.000000       75.726237      200.089355                0.0                2.0                  2.0             2.089355  -4.951493e+07  300.000000      200.000000       1.0
3        4.658866e+07        4.658838e+07      4.658866e+07  151779.563314     151.452474      4.658838e+07       78.541829               27.089355      100.000000      200.089355                0.0                2.0                  2.0             2.000000  -4.951493e+07  200.000000      200.000000       1.0
4        4.658886e+07        4.658838e+07      4.658886e+07  200278.541829     200.000000      4.658838e+07      178.541829               78.541829      100.000000      200.000000                0.0                2.0                  2.0             2.000000  -4.951493e+07  300.000000      200.000000       1.0
5        4.658906e+07        4.658853e+07      4.658906e+07  200478.541829     200.000000      4.658853e+07      278.541829              178.541829      100.000000      151.642578                1.0                3.0                  2.0             2.000000  -4.951493e+07  248.357422      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1711361/6144, alpha=183/2048, buf_size=200.[0m
[01/07 09:37:17]  --------------------------------------------------------------------------------
[01/07 09:37:17]  Iteration: 134 (0 solution, 133 counterexamples)
[01/07 10:25:43]  Generator returned sat in 2894.998348 secs.
[01/07 10:25:43]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + 1max_qdel + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 10:25:47]  Improved gap from 0.0 to 48.4375
[01/07 10:25:48]  Improved number of small numbers from 65 to 68 out of a max of 128
[01/07 10:25:48]  Verifer returned sat in 4.912855 secs.
[01/07 10:25:48]  sf_get_cex returned in 4.968090 secs.
[01/07 10:25:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.658808e+07        4.658806e+07      4.658808e+07       0.178711       0.179932      4.658806e+07        0.003122                0.000000       37.885942           100.0                1.0                3.0                  1.0            56.114258  -4.951490e+07  18.356643       18.353591       2.0
1        4.658811e+07        4.658806e+07      4.658811e+07   36346.094530      36.327735      4.658806e+07        0.003122                0.003122       37.885942           100.0                0.0                2.0                  1.0             2.000000  -4.951486e+07  54.681256        0.000000       1.0
2        4.658815e+07        4.658811e+07      4.658815e+07   36382.419143      36.327735      4.658811e+07        0.003122                0.003122       37.885942           100.0                0.0                2.0                  1.0             2.000000  -4.951481e+07  36.327735      -12.109765       1.0
3        4.658819e+07        4.658816e+07      4.658819e+07   36364.065622      36.327735      4.658816e+07        0.003122                0.003122       37.885942           100.0                0.0                1.0                  1.0             2.000000  -4.951476e+07  24.217970      -24.219530       0.0
4        4.658822e+07        4.658821e+07      4.658822e+07   36351.955857      36.327735      4.658821e+07        0.003122                0.003122       37.889064           100.0                0.0                1.0                  1.0             2.000000  -4.951470e+07  12.108204      -36.329296       0.0
5        4.658826e+07        4.658826e+07      4.658826e+07   36341.407030      36.329296      4.658826e+07        0.003122                0.003122       39.998751           100.0                0.0                1.0                  1.0             2.000000  -4.951465e+07   0.000000      -48.437571       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2227475/128128, buf_size=200.[0m
[01/07 10:25:48]  --------------------------------------------------------------------------------
[01/07 10:25:48]  Iteration: 135 (0 solution, 134 counterexamples)
[01/07 10:33:04]  Generator returned sat in 429.396987 secs.
[01/07 10:33:04]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_c + -1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 10:33:18]  Improved gap from 0.04964908967156719 to 48.4375
[01/07 10:33:19]  Improved number of small numbers from 81 to 83 out of a max of 128
[01/07 10:33:19]  Verifer returned sat in 14.130194 secs.
[01/07 10:33:19]  sf_get_cex returned in 14.182921 secs.
[01/07 10:33:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.661843e+07        4.661843e+07      4.661843e+07       0.178711       0.179688      4.661843e+07             0.0                     0.0       34.034685           100.0                2.0                4.0                  2.0             4.089355  -4.951400e+07   5.101667        5.101667       3.0
1        4.661848e+07        4.661843e+07      4.661848e+07   48640.329415      48.635228      4.661843e+07             0.0                     0.0       34.034685           100.0                2.0                4.0                  2.0             4.089355  -4.951395e+07  53.736895        0.000000       3.0
2        4.661853e+07        4.661848e+07      4.661853e+07   48688.964643      48.635228      4.661848e+07             0.0                     0.0       34.034685           100.0                0.0                2.0                  2.0             4.089355  -4.951390e+07  48.635228        0.000000       1.0
3        4.661858e+07        4.661853e+07      4.661858e+07   48683.862976      48.635228      4.661853e+07             0.0                     0.0       34.124041           100.0                0.0                2.0                  2.0             4.089355  -4.951385e+07  48.635228       -0.465686       1.0
4        4.661863e+07        4.661858e+07      4.661863e+07   48862.573914      48.813939      4.661858e+07             0.0                     0.0       37.868286           100.0                0.0                1.0                  2.0             4.089355  -4.951380e+07  48.348145       -0.089355       0.0
5        4.661865e+07        4.661863e+07      4.661865e+07   19482.491211      19.434143      4.661863e+07             0.0                     0.0       39.982129           100.0                0.0                1.0                  2.0             4.089355  -4.951380e+07  19.344788      -80.655104       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=318409/16384, buf_size=200.[0m
[01/07 10:33:19]  --------------------------------------------------------------------------------
[01/07 10:33:19]  Iteration: 136 (0 solution, 135 counterexamples)
[01/07 10:42:07]  Generator returned sat in 521.602035 secs.
[01/07 10:42:07]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/07 10:42:26]  Improved gap from 13.69775390625 to 48.4375
[01/07 10:42:26]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/07 10:42:26]  Verifer returned sat in 18.677802 secs.
[01/07 10:42:26]  sf_get_cex returned in 18.731634 secs.
[01/07 10:42:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.606831e+07        4.606831e+07      4.606831e+07       0.178711       0.179443      4.606831e+07        0.089355                0.000000       59.053711           100.0                0.0                2.0                  0.0                  2.0  -4.899393e+07   0.089355        0.089355       1.0
1        4.606835e+07        4.606831e+07      4.606835e+07   49437.678711      49.437500      4.606831e+07        0.089355                0.089355       59.053711           100.0                0.0                2.0                  0.0                  2.0  -4.899388e+07  49.437500        0.000000       1.0
2        4.606840e+07        4.606835e+07      4.606840e+07   49487.026855      49.437500      4.606835e+07        0.089355                0.089355       59.053711           100.0                0.0                2.0                  0.0                  2.0  -4.899383e+07  49.437500        0.000000       1.0
3        4.606845e+07        4.606840e+07      4.606845e+07   49487.026855      49.437500      4.606840e+07        0.089355                0.089355       59.053711           100.0                0.0                2.0                  0.0                  2.0  -4.899378e+07  49.437500        0.000000       1.0
4        4.606850e+07        4.606845e+07      4.606850e+07   49487.026855      49.437500      4.606845e+07        0.089355                0.089355       59.053711           100.0                0.0                2.0                  0.0                  2.0  -4.899373e+07  49.437500        0.000000       1.0
5        4.606855e+07        4.606850e+07      4.606855e+07   49487.026855      49.437500      4.606850e+07        0.089355                0.089355       59.053711           100.0                0.0                1.0                  0.0                  2.0  -4.899368e+07  49.348145       -0.089355       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40777/2048, buf_size=200.[0m
[01/07 10:42:26]  --------------------------------------------------------------------------------
[01/07 10:42:26]  Iteration: 137 (0 solution, 136 counterexamples)
[01/07 11:00:01]  Generator returned sat in 1048.222215 secs.
[01/07 11:00:01]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1max_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/07 11:00:04]  Improved gap from 9.26806640625 to 100
[01/07 11:00:05]  Improved number of small numbers from 74 to 82 out of a max of 128
[01/07 11:00:05]  Verifer returned sat in 3.742016 secs.
[01/07 11:00:05]  sf_get_cex returned in 3.796259 secs.
[01/07 11:00:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.606815e+07        4.606791e+07      4.606815e+07       0.178711       0.179199      4.606791e+07        0.000000                0.000000       40.000000      113.811523                2.0                4.0                  2.0             4.044434  -4.899398e+07  242.670166      200.000000       3.0
1        4.606825e+07        4.606804e+07      4.606825e+07  100197.992432      99.955322      4.606804e+07        0.000000                0.000000       63.964258      113.811523                1.0                3.0                  2.0             4.044434  -4.899398e+07  214.696973      199.955322       2.0
2        4.606840e+07        4.606810e+07      4.606840e+07  148098.534863     147.883838      4.606810e+07       47.839160                0.000000       64.053613      113.811523                2.0                4.0                  2.0             4.044434  -4.899398e+07  250.509326      200.000000       3.0
3        4.606855e+07        4.606823e+07      4.606855e+07  148360.897314     148.062549      4.606823e+07       95.901709               47.839160       80.089355      113.811523                1.0                3.0                  2.0             3.000000  -4.899398e+07  222.312744      200.000000       2.0
4        4.606865e+07        4.606831e+07      4.606865e+07  100362.892187     100.044678      4.606831e+07       95.946387               95.901709       80.134033      113.811523                1.0                3.0                  2.0             3.000000  -4.899398e+07  242.000000      200.000000       2.0
5        4.606875e+07        4.606839e+07      4.606875e+07  100427.301855     100.089355      4.606839e+07       96.035742               95.946387       80.134033      113.811523                1.0                3.0                  2.0             3.000000  -4.899398e+07  262.133813      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=491703/5120, alpha=81737/4096, buf_size=200.[0m
[01/07 11:00:05]  --------------------------------------------------------------------------------
[01/07 11:00:05]  Iteration: 138 (0 solution, 137 counterexamples)
[01/07 11:07:05]  Generator returned sat in 413.885041 secs.
[01/07 11:07:06]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 11:07:23]  Improved gap from 0.08935546875 to 48.4375
[01/07 11:07:24]  Improved number of small numbers from 74 to 83 out of a max of 128
[01/07 11:07:24]  Verifer returned sat in 17.567237 secs.
[01/07 11:07:24]  sf_get_cex returned in 17.621803 secs.
[01/07 11:07:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.606844e+07        4.606842e+07      4.606844e+07       0.178711       0.179199      4.606842e+07             0.0                     0.0       74.655406           100.0                1.0                3.0                  1.0             2.999268  -4.899378e+07  13.359798       13.359588       2.0
1        4.606848e+07        4.606843e+07      4.606848e+07   37339.937078      37.326577      4.606843e+07             0.0                     0.0       74.655406           100.0                2.0                4.0                  2.0             2.999268  -4.899373e+07  48.436937       -0.000562       3.0
2        4.606851e+07        4.606848e+07      4.606851e+07   37375.014218      37.326577      4.606848e+07             0.0                     0.0       74.655406           100.0                0.0                1.0                  2.0             2.999268  -4.899368e+07  37.326015      -11.111525       0.0
3        4.606855e+07        4.606853e+07      4.606855e+07   37366.154421      37.328828      4.606853e+07             0.0                     0.0       74.655406           100.0                0.0                1.0                  2.0             2.999268  -4.899363e+07  22.217343      -26.220157       0.0
4        4.606859e+07        4.606858e+07      4.606859e+07   37351.045750      37.328828      4.606858e+07             0.0                     0.0       74.655406           100.0                0.0                1.0                  2.0             2.999268  -4.899358e+07  11.108672      -37.328828       0.0
5        4.606862e+07        4.606862e+07      4.606862e+07   37339.937078      37.328828      4.606862e+07             0.0                     0.0       74.655406           100.0                0.0                1.0                  2.0             2.999268  -4.899358e+07   0.000000      -99.999796       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1999/1776000, buf_size=200.[0m
[01/07 11:07:24]  --------------------------------------------------------------------------------
[01/07 11:07:24]  Iteration: 139 (0 solution, 138 counterexamples)
[01/07 11:11:40]  Generator returned sat in 249.793161 secs.
[01/07 11:11:40]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 11:11:49]  Improved gap from 37.32882840653153 to 48.4375
[01/07 11:11:51]  Improved number of small numbers from 73 to 96 out of a max of 128
[01/07 11:11:51]  Verifer returned sat in 10.005670 secs.
[01/07 11:11:51]  sf_get_cex returned in 10.058102 secs.
[01/07 11:11:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.587247e+07        4.587245e+07      4.587247e+07       0.178711       0.178955      4.587245e+07        0.000977                0.000000       37.375000           100.0                0.0                1.0                  0.0                  2.0  -4.899373e+07  13.122962       13.122770       0.0
1        4.587250e+07        4.587245e+07      4.587250e+07   37388.123939      37.375000      4.587245e+07        0.000977                0.000977       37.375000           100.0                0.0                2.0                  0.0                  2.0  -4.899368e+07  49.440769       -0.000032       1.0
2        4.587254e+07        4.587250e+07      4.587254e+07   37424.441746      37.375000      4.587250e+07        0.000977                0.000977       37.375000           100.0                0.0                1.0                  0.0                  2.0  -4.899363e+07  37.374023      -11.063509       0.0
3        4.587258e+07        4.587255e+07      4.587258e+07   37412.375000      37.375000      4.587255e+07        0.000977                0.000977       37.375000           100.0                0.0                1.0                  0.0                  2.0  -4.899358e+07  23.124023      -25.313477       0.0
4        4.587262e+07        4.587260e+07      4.587262e+07   37398.125000      37.375000      4.587260e+07        0.000977                0.000977       37.376061           100.0                0.0                1.0                  0.0                  2.0  -4.899353e+07  12.061523      -37.375765       0.0
5        4.587265e+07        4.587265e+07      4.587265e+07   37388.123939      37.376061      4.587265e+07        0.000977                0.000977       39.788349           100.0                0.0                1.0                  0.0                  2.0  -4.899353e+07   0.000085      -99.999703       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81915/4096, buf_size=200.[0m
[01/07 11:11:51]  --------------------------------------------------------------------------------
[01/07 11:11:51]  Iteration: 140 (0 solution, 139 counterexamples)
[01/07 11:16:59]  Generator returned sat in 301.437144 secs.
[01/07 11:16:59]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/07 11:17:26]  Improved gap from 22.64921513310185 to 48.4375
[01/07 11:17:27]  Improved number of small numbers from 86 to 92 out of a max of 128
[01/07 11:17:27]  Verifer returned sat in 27.397535 secs.
[01/07 11:17:27]  sf_get_cex returned in 27.452909 secs.
[01/07 11:17:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.700362e+07        4.700362e+07      4.700362e+07       0.178467       0.178955      4.700362e+07        0.089355                0.000000       64.642904           100.0                0.0                1.0                  0.0             2.089355  -5.012389e+07   3.845919        3.845819       0.0
1        4.700367e+07        4.700362e+07      4.700367e+07   49509.442803      49.505508      4.700362e+07        0.089355                0.089355       64.642904           100.0                0.0                2.0                  0.0             2.000000  -5.012385e+07  53.262071       -0.000236       1.0
2        4.700372e+07        4.700367e+07      4.700372e+07   47512.199366      47.458848      4.700367e+07        0.089355                0.089355       64.642904           100.0                0.0                1.0                  0.0             2.000000  -5.012380e+07  47.369492       -1.068008       0.0
3        4.700377e+07        4.700372e+07      4.700377e+07   49552.966377      49.505508      4.700372e+07        0.089355                0.089355       64.642904           100.0                0.0                1.0                  0.0             2.000000  -5.012374e+07  48.437500        0.000000       0.0
4        4.700382e+07        4.700377e+07      4.700382e+07   49554.034384      49.505508      4.700377e+07        0.089355                0.089355       64.642904           100.0                0.0                2.0                  0.0             2.000000  -5.012369e+07  49.505508       -0.089211       1.0
5        4.700387e+07        4.700382e+07      4.700387e+07   47508.442803      47.458848      4.700382e+07        0.089355                0.089355       64.642904           100.0                0.0                1.0                  0.0             2.000000  -5.012369e+07  47.369345      -52.630363       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=52710235/3067392, buf_size=200.[0m
[01/07 11:17:27]  --------------------------------------------------------------------------------
[01/07 11:17:27]  Iteration: 141 (0 solution, 140 counterexamples)
[01/07 12:45:42]  Generator returned sat in 5288.865481 secs.
[01/07 12:45:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/07 12:45:49]  Improved gap from 8.21416015625 to 100
[01/07 12:45:50]  Improved number of small numbers from 80 to 82 out of a max of 128
[01/07 12:45:50]  Verifer returned sat in 7.032149 secs.
[01/07 12:45:50]  sf_get_cex returned in 7.087135 secs.
[01/07 12:45:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.701268e+07        4.701242e+07      4.701268e+07       0.178223       0.178711      4.701242e+07        0.000000                0.000000       91.089233           105.0                2.0                4.0                  2.0                  2.0  -5.013276e+07  264.713867      200.000000       3.0
1        4.701277e+07        4.701251e+07      4.701277e+07   91353.947266      91.089233      4.701251e+07        0.000000                0.000000       91.089233           105.0                0.0                2.0                  2.0                  2.0  -5.013276e+07  261.230835      191.089233       1.0
2        4.701288e+07        4.701260e+07      4.701288e+07  109261.230835     109.000000      4.701260e+07        0.089233                0.000000       91.089233           105.0                1.0                3.0                  2.0                  2.0  -5.013276e+07  278.516968      200.000000       2.0
3        4.701299e+07        4.701278e+07      4.701299e+07  109278.606201     109.000000      4.701278e+07        9.089233                0.089233       91.178467           105.0                0.0                2.0                  2.0                  2.0  -5.013276e+07  200.000000      200.000000       1.0
4        4.701310e+07        4.701288e+07      4.701310e+07  109298.322632     109.089233      4.701288e+07       18.178467                9.089233       92.000000           105.0                1.0                3.0                  2.0                  2.0  -5.013276e+07  204.713867      200.000000       2.0
5        4.701321e+07        4.701289e+07      4.701321e+07  110133.658936     109.910767      4.701289e+07       28.089233               18.178467       92.000000           105.0                1.0                3.0                  2.0                  2.0  -5.013276e+07  294.999961      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=230107/8192, alpha=146725/8192, buf_size=200.[0m
[01/07 12:45:50]  --------------------------------------------------------------------------------
[01/07 12:45:50]  Iteration: 142 (0 solution, 141 counterexamples)
[01/07 13:22:12]  Generator returned sat in 2175.280599 secs.
[01/07 13:22:13]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 13:22:18]  Improved gap from 0.0 to 100
[01/07 13:22:19]  Improved number of small numbers from 84 to 94 out of a max of 128
[01/07 13:22:19]  Verifer returned sat in 6.113220 secs.
[01/07 13:22:19]  sf_get_cex returned in 6.168452 secs.
[01/07 13:22:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.711964e+07        4.711936e+07      4.711964e+07       0.177979       0.178711      4.711936e+07        0.044678                0.000000       38.044678           111.0                0.0                2.0                  0.0             2.044434  -5.023973e+07  287.541138      187.541138       1.0
1        4.711966e+07        4.711955e+07      4.711966e+07   20243.030151      19.955444      4.711955e+07        0.044678                0.044678       96.273926           111.0                0.0                2.0                  0.0             2.000000  -5.023973e+07  114.948730      107.496582       1.0
2        4.711986e+07        4.711965e+07      4.711986e+07  192662.844971     192.547852      4.711965e+07        0.089111                0.044678       96.318481           111.0                0.0                2.0                  0.0             2.000000  -5.023973e+07  211.044556      200.000000       1.0
3        4.712005e+07        4.711976e+07      4.712005e+07  192848.096558     192.636963      4.711976e+07       92.726074                0.089111      100.000000           111.0                0.0                2.0                  0.0             2.000000  -5.023973e+07  200.000000      200.000000       1.0
4        4.712025e+07        4.711976e+07      4.712025e+07  200292.726074     200.000000      4.711976e+07      192.726074               92.726074      100.000000           111.0                0.0                2.0                  0.0             2.000000  -5.023973e+07  300.000000      200.000000       1.0
5        4.712045e+07        4.711987e+07      4.712045e+07  200492.726074     200.000000      4.711987e+07      292.726074              192.726074      100.000000           111.0                1.0                3.0                  1.0             2.000000  -5.023973e+07  288.955503      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=1198823/4096, alpha=163475/8192, buf_size=200.[0m
[01/07 13:22:19]  --------------------------------------------------------------------------------
[01/07 13:22:19]  Iteration: 143 (0 solution, 142 counterexamples)
[01/07 14:16:01]  Generator returned sat in 3215.703256 secs.
[01/07 14:16:02]  Candidate solution: 
[1m[94mif (+ -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/07 14:16:04]  Improved number of small numbers from 61 to 64 out of a max of 127
[01/07 14:16:04]  Verifer returned sat in 2.092607 secs.
[01/07 14:16:04]  sf_get_cex returned in 2.145892 secs.
[01/07 14:16:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.717277e+07        4.717252e+07      4.717277e+07       0.177734       0.178467      4.717252e+07        0.044495                0.000000       40.044495      172.667480                2.0                4.0                  2.0                  6.0  -5.029285e+07  258.800903      200.000000       3.0
1        4.717287e+07        4.717260e+07      4.717287e+07  100303.340027     100.044495      4.717260e+07        0.088989                0.044495       43.088989      172.667480                1.0                3.0                  2.0                  6.0  -5.029285e+07  272.622925      200.000000       2.0
2        4.717294e+07        4.717277e+07      4.717294e+07   66495.185059      66.222473      4.717277e+07        0.088989                0.088989       86.311462      172.667480                2.0                4.0                  2.0                  6.0  -5.029285e+07  166.222473      166.222473       3.0
3        4.717313e+07        4.717277e+07      4.717313e+07  192744.741638     192.578430      4.717277e+07       58.889893                0.088989       86.311462      129.400452                2.0                4.0                  2.0                  6.0  -5.029285e+07  300.000000      200.000000       3.0
4        4.717333e+07        4.717294e+07      4.717333e+07  192937.320068     192.578430      4.717294e+07      151.468323               58.889893       86.311462      129.400452                0.0                2.0                  2.0                  2.0  -5.029285e+07  233.733032      200.000000       1.0
5        4.717352e+07        4.717300e+07      4.717352e+07  192963.631531     192.578430      4.717300e+07      244.046753              151.468323       86.311462      113.688538                1.0                3.0                  2.0                  2.0  -5.029285e+07  272.622925      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=999251/4096, alpha=326951/16384, buf_size=200.[0m
[01/07 14:16:04]  --------------------------------------------------------------------------------
[01/07 14:16:04]  Iteration: 144 (0 solution, 143 counterexamples)
[01/07 14:23:37]  Generator returned sat in 445.939564 secs.
[01/07 14:23:37]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 14:23:51]  Improved gap from 0.533203125 to 48.4375
[01/07 14:23:51]  Improved number of small numbers from 114 to 121 out of a max of 128
[01/07 14:23:51]  Verifer returned sat in 14.130230 secs.
[01/07 14:23:51]  sf_get_cex returned in 14.185042 secs.
[01/07 14:23:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.717187e+07        4.717187e+07      4.717187e+07       0.177734       0.178467      4.717187e+07             0.0                     0.0       28.881836           100.0                0.0                1.0                  0.0             2.088623  -5.029215e+07   0.000000       -0.000244       0.0
1        4.717192e+07        4.717187e+07      4.717192e+07   48792.968750      48.792969      4.717187e+07             0.0                     0.0       28.881836           100.0                0.0                1.0                  0.0             2.088623  -5.029210e+07  47.993164       -0.444336       0.0
2        4.717197e+07        4.717192e+07      4.717197e+07   48840.961914      48.792969      4.717192e+07             0.0                     0.0       28.881836           100.0                0.0                1.0                  0.0             2.088623  -5.029205e+07  48.348633       -0.088867       0.0
3        4.717202e+07        4.717197e+07      4.717202e+07   48841.317383      48.792969      4.717197e+07             0.0                     0.0       32.291667           100.0                0.0                1.0                  0.0             2.088623  -5.029200e+07  48.704102        0.000000       0.0
4        4.717207e+07        4.717202e+07      4.717207e+07   52251.503581      52.202799      4.717202e+07             0.0                     0.0       36.394775           100.0                0.0                2.0                  0.0             2.088623  -5.029195e+07  52.202799       -0.000081       1.0
5        4.717209e+07        4.717207e+07      4.717209e+07   19963.335612      19.911133      4.717207e+07             0.0                     0.0       39.574154           100.0                0.0                1.0                  0.0             2.088623  -5.029195e+07  19.822266      -80.088704       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=20389/1024, buf_size=200.[0m
[01/07 14:23:51]  --------------------------------------------------------------------------------
[01/07 14:23:51]  Iteration: 145 (0 solution, 144 counterexamples)
[01/07 14:40:22]  Generator returned sat in 983.480161 secs.
[01/07 14:40:22]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/07 14:40:35]  Improved gap from 0.016327890703098966 to 48.4375
[01/07 14:40:36]  Improved number of small numbers from 105 to 109 out of a max of 128
[01/07 14:40:36]  Verifer returned sat in 13.559319 secs.
[01/07 14:40:36]  sf_get_cex returned in 13.613870 secs.
[01/07 14:40:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.717187e+07        4.717187e+07      4.717187e+07       0.177734       0.178467      4.717187e+07             0.0                     0.0       24.971591           100.0                0.0                1.0                  0.0                  2.0  -5.029215e+07   0.000000       -0.000064       0.0
1        4.717192e+07        4.717187e+07      4.717192e+07   49954.545455      49.954545      4.717187e+07             0.0                     0.0       24.971591           100.0                0.0                1.0                  0.0                  2.0  -5.029210e+07  49.840909       -0.034044       0.0
2        4.717197e+07        4.717192e+07      4.717197e+07   50004.386364      49.954545      4.717192e+07             0.0                     0.0       24.971591           100.0                0.0                1.0                  0.0                  2.0  -5.029205e+07  49.875000        0.000000       0.0
3        4.717202e+07        4.717197e+07      4.717202e+07   50004.420455      49.954545      4.717197e+07             0.0                     0.0       33.265152           100.0                0.0                2.0                  0.0                  2.0  -5.029200e+07  49.954545        0.000000       1.0
4        4.717205e+07        4.717202e+07      4.717205e+07   33315.106061      33.265152      4.717202e+07             0.0                     0.0       37.437500           100.0                0.0                2.0                  0.0                  2.0  -5.029195e+07  33.265152      -16.609801       1.0
5        4.717209e+07        4.717207e+07      4.717209e+07   37470.765152      37.437500      4.717207e+07             0.0                     0.0       39.925000           100.0                0.0                1.0                  0.0                  2.0  -5.029190e+07  20.827652      -29.047545       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1/88, buf_size=200.[0m
[01/07 14:40:36]  --------------------------------------------------------------------------------
[01/07 14:40:36]  Iteration: 146 (0 solution, 145 counterexamples)
[01/07 14:44:01]  Generator returned sat in 197.869059 secs.
[01/07 14:44:01]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1max_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 14:44:11]  Improved gap from 0.003472222222222222 to 48.4375
[01/07 14:44:11]  Improved number of small numbers from 121 to 128 out of a max of 128
[01/07 14:44:11]  Verifer returned sat in 10.179974 secs.
[01/07 14:44:11]  sf_get_cex returned in 10.233983 secs.
[01/07 14:44:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.725427e+07        4.725426e+07      4.725427e+07       0.177734       0.178467      4.725426e+07             0.0                     0.0       71.466797           100.0                0.0                1.0                  0.0            25.621826  -5.029215e+07   7.585693        7.585693       0.0
1        4.725429e+07        4.725426e+07      4.725429e+07   17918.718506      17.911133      4.725426e+07             0.0                     0.0       71.466797           100.0                0.0                2.0                  0.0            25.621826  -5.029209e+07  25.408203      -23.029297       1.0
2        4.725436e+07        4.725431e+07      4.725436e+07   71492.205078      71.466797      4.725431e+07             0.0                     0.0       71.466797           100.0                0.0                1.0                  0.0            25.621826  -5.029204e+07  48.437500        0.000000       0.0
3        4.725438e+07        4.725436e+07      4.725438e+07   17959.570312      17.911133      4.725436e+07             0.0                     0.0       71.466797           100.0                0.0                2.0                  0.0            25.621826  -5.029199e+07  17.911133      -30.526611       1.0
4        4.725445e+07        4.725441e+07      4.725445e+07   71484.708008      71.466797      4.725441e+07             0.0                     0.0       71.466797           100.0                0.0                1.0                  0.0            25.621826  -5.029195e+07  40.940186      -13.569336       0.0
5        4.725447e+07        4.725446e+07      4.725447e+07   17952.072998      17.911133      4.725446e+07             0.0                     0.0       71.466797           100.0                0.0                1.0                  0.0            25.621826  -5.029195e+07   4.341553      -95.658203       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=18341/1024, buf_size=200.[0m
[01/07 14:44:11]  --------------------------------------------------------------------------------
[01/07 14:44:11]  Iteration: 147 (0 solution, 146 counterexamples)
[01/07 14:47:12]  Generator returned sat in 173.607771 secs.
[01/07 14:47:13]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 14:47:16]  Improved gap from 0.03278688524590164 to 100
[01/07 14:47:16]  Improved number of small numbers from 124 to 124 out of a max of 128
[01/07 14:47:16]  Verifer returned sat in 3.313990 secs.
[01/07 14:47:16]  sf_get_cex returned in 3.368968 secs.
[01/07 14:47:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.725426e+07        4.725396e+07      4.725426e+07       0.177734       0.178467      4.725396e+07        0.000000                0.000000       70.414714           100.0                2.0                4.0                  2.0            31.674154  -5.029194e+07  297.622070      200.000000       3.0
1        4.725440e+07        4.725406e+07      4.725440e+07  141127.049154     140.829427      4.725406e+07       40.829427                0.000000       70.414714           100.0                1.0                3.0                  2.0            31.674154  -5.029194e+07  298.177734      200.000000       2.0
2        4.725454e+07        4.725416e+07      4.725454e+07  141168.434245     140.829427      4.725416e+07       81.658854               40.829427       70.414714           100.0                2.0                4.0                  2.0            31.674154  -5.029194e+07  298.644531      200.000000       3.0
3        4.725468e+07        4.725426e+07      4.725468e+07  141209.730469     140.829427      4.725426e+07      122.488281               81.658854       74.405518           100.0                2.0                4.0                  2.0             4.000000  -5.029194e+07  300.000000      200.000000       3.0
4        4.725474e+07        4.725446e+07      4.725474e+07   54916.873047      54.494385      4.725446e+07      122.488281              122.488281       99.088867           100.0                1.0                3.0                  2.0             3.000000  -5.029194e+07  156.672119      154.494385       2.0
5        4.725494e+07        4.725446e+07      4.725494e+07  198456.894775     198.177734      4.725446e+07      175.160400              122.488281       99.088867           100.0                1.0                3.0                  2.0             3.000000  -5.029194e+07  299.911133      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=1650659/12288, alpha=20389/1024, buf_size=200.[0m
[01/07 14:47:16]  --------------------------------------------------------------------------------
[01/07 14:47:16]  Iteration: 148 (0 solution, 147 counterexamples)
[01/07 15:01:39]  Generator returned sat in 855.819624 secs.
[01/07 15:01:39]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1min_buffer + 1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/07 15:01:42]  Improved number of small numbers from 70 to 82 out of a max of 127
[01/07 15:01:42]  Verifer returned sat in 2.860205 secs.
[01/07 15:01:42]  sf_get_cex returned in 2.915129 secs.
[01/07 15:01:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.725416e+07        4.725396e+07      4.725416e+07       0.177490       0.177979      4.725396e+07        0.001953                0.000000       99.995245      109.995361                0.0                2.0                  0.0             2.001953  -5.029194e+07  199.984970       99.993886       1.0
1        4.725436e+07        4.725416e+07      4.725436e+07  200207.714347     200.007727      4.725416e+07        0.003567                0.001953       99.995245      109.995361                0.0                1.0                  0.0             1.000000  -5.029194e+07  200.004161      200.000000       0.0
2        4.725446e+07        4.725426e+07      4.725446e+07  100195.252390      99.995245      4.725426e+07        0.003567                0.003567       99.997028      109.995361                0.0                2.0                  0.0             1.000000  -5.029194e+07  199.995245      199.995245       1.0
3        4.725466e+07        4.725426e+07      4.725466e+07  200176.816539     199.976818      4.725426e+07       99.975629                0.003567       99.997028      109.995361                0.0                2.0                  0.0             1.000000  -5.029194e+07  300.000000      200.000000       1.0
4        4.725486e+07        4.725446e+07      4.725486e+07  200376.793357     199.976818      4.725446e+07      199.952447               99.975629      100.000000      109.995361                0.0                2.0                  0.0             1.000000  -5.029194e+07  200.000000      200.000000       1.0
5        4.725506e+07        4.725446e+07      4.725506e+07  200382.714347     199.982762      4.725446e+07      299.935209              199.952447      100.000000      109.995361                1.0                3.0                  1.0             1.000000  -5.029194e+07  299.998047      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=12614525/42058, alpha=725/42058, buf_size=200.[0m
[01/07 15:01:42]  --------------------------------------------------------------------------------
[01/07 15:01:42]  Iteration: 149 (0 solution, 148 counterexamples)
[01/07 15:37:16]  Generator returned sat in 2126.887986 secs.
[01/07 15:37:17]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 15:37:25]  Improved gap from 0.0 to 48.4375
[01/07 15:37:25]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/07 15:37:25]  Verifer returned sat in 8.126344 secs.
[01/07 15:37:25]  sf_get_cex returned in 8.181792 secs.
[01/07 15:37:25]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.720591e+07        4.720591e+07      4.720591e+07       0.177246       0.177979      4.720591e+07             0.0                     0.0         48.4375           100.0                0.0                2.0                  0.0             2.088623  -5.029194e+07   6.072510        0.000000       1.0
1        4.720596e+07        4.720591e+07      4.720596e+07   48443.572510      48.437500      4.720591e+07             0.0                     0.0         48.4375           100.0                0.0                2.0                  0.0             2.088623  -5.029189e+07  48.437500        0.000000       1.0
2        4.720601e+07        4.720596e+07      4.720601e+07   48485.937500      48.437500      4.720596e+07             0.0                     0.0         48.4375           100.0                0.0                2.0                  0.0             2.088623  -5.029184e+07  48.437500        0.000000       1.0
3        4.720606e+07        4.720601e+07      4.720606e+07   48485.937500      48.437500      4.720601e+07             0.0                     0.0         48.4375           100.0                0.0                2.0                  0.0             2.088623  -5.029179e+07  48.437500        0.000000       1.0
4        4.720611e+07        4.720606e+07      4.720611e+07   48485.937500      48.437500      4.720606e+07             0.0                     0.0         48.4375           100.0                0.0                2.0                  0.0             2.088623  -5.029174e+07  48.437500        0.000000       1.0
5        4.720616e+07        4.720611e+07      4.720616e+07   48485.937500      48.437500      4.720611e+07             0.0                     0.0         48.4375           100.0                0.0                1.0                  0.0             2.088623  -5.029169e+07  48.349121       -0.088867       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81557/4096, buf_size=200.[0m
[01/07 15:37:25]  --------------------------------------------------------------------------------
[01/07 15:37:25]  Iteration: 150 (0 solution, 149 counterexamples)
[01/07 15:55:17]  Generator returned sat in 1064.224302 secs.
[01/07 15:55:17]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + -1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 15:55:23]  Improved gap from 0.0 to 100
[01/07 15:55:23]  Improved number of small numbers from 98 to 100 out of a max of 128
[01/07 15:55:23]  Verifer returned sat in 6.016357 secs.
[01/07 15:55:23]  sf_get_cex returned in 6.073273 secs.
[01/07 15:55:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.720567e+07        4.720545e+07      4.720567e+07       0.177246       0.177734      4.720545e+07        0.000000                0.000000       99.153846      101.077148                0.0                2.0                  0.0             2.077148  -5.029158e+07  219.769231      121.538462       1.0
1        4.720585e+07        4.720555e+07      4.720585e+07  178604.384615     178.384615      4.720555e+07        0.000000                0.000000       99.153846      101.077148                0.0                2.0                  0.0             2.077148  -5.029158e+07  298.365385      199.923077       1.0
2        4.720603e+07        4.720575e+07      4.720603e+07  178682.980769     178.384615      4.720575e+07       78.307692                0.000000       99.153846      101.077148                0.0                2.0                  0.0             2.077148  -5.029158e+07  201.000000      200.000000       1.0
3        4.720620e+07        4.720585e+07      4.720620e+07  178663.923077     178.384615      4.720585e+07      156.692308               78.307692       99.557692      101.077148                0.0                2.0                  0.0             2.000000  -5.029158e+07  200.000000      200.000000       1.0
4        4.720638e+07        4.720585e+07      4.720638e+07  179549.000000     179.192308      4.720585e+07      235.884615              156.692308       99.557692      101.000000                0.0                2.0                  0.0             2.000000  -5.029158e+07  300.000000      200.000000       1.0
5        4.720656e+07        4.720595e+07      4.720656e+07  179728.192308     179.192308      4.720595e+07      315.076923              235.884615       99.557692      101.000000                1.0                3.0                  1.0             2.000000  -5.029158e+07  298.846229      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=4096/13, alpha=259/13, buf_size=200.[0m
[01/07 15:55:23]  --------------------------------------------------------------------------------
[01/07 15:55:23]  Iteration: 151 (0 solution, 150 counterexamples)
[01/07 16:09:46]  Generator returned sat in 855.943801 secs.
[01/07 16:09:47]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/07 16:09:51]  Improved gap from 19.59124087591241 to 100
[01/07 16:09:52]  Improved number of small numbers from 81 to 85 out of a max of 128
[01/07 16:09:52]  Verifer returned sat in 4.417181 secs.
[01/07 16:09:52]  sf_get_cex returned in 4.472709 secs.
[01/07 16:09:52]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.700407e+07        4.700380e+07      4.700407e+07       0.177246       0.177490      4.700380e+07        0.000000                0.000000       40.132935      200.088379                0.0                2.0                  0.0           142.955566  -5.029158e+07  271.772461      199.911377       1.0
1        4.700417e+07        4.700389e+07      4.700417e+07  100449.018555     100.177246      4.700389e+07        0.088623                0.000000       45.221558      200.088379                0.0                2.0                  0.0           142.955566  -5.029158e+07  281.417969      200.000000       1.0
2        4.700421e+07        4.700407e+07      4.700421e+07   45503.064209      45.221558      4.700407e+07        0.088623                0.088623       90.708984      200.088379                0.0                2.0                  0.0             2.000000  -5.029158e+07  145.221558      145.221558       1.0
3        4.700441e+07        4.700407e+07      4.700441e+07  201474.655884     201.329346      4.700407e+07       46.639526                0.088623       90.708984      200.088379                0.0                2.0                  0.0             2.000000  -5.029158e+07  300.000000      200.000000       1.0
4        4.700461e+07        4.700427e+07      4.700461e+07  201675.985229     201.329346      4.700427e+07      147.968872               46.639526      100.000000      200.088379                0.0                2.0                  0.0             2.000000  -5.029158e+07  200.000000      200.000000       1.0
5        4.700483e+07        4.700427e+07      4.700483e+07  220259.345825     219.911377      4.700427e+07      267.880249              147.968872      100.000000      200.088379                1.0                3.0                  1.0             2.000000  -5.029158e+07  299.911161      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=2, loss_amount=2193749/8192, alpha=81557/4096, buf_size=200.[0m
[01/07 16:09:52]  --------------------------------------------------------------------------------
[01/07 16:09:52]  Iteration: 152 (0 solution, 151 counterexamples)
[01/07 16:38:39]  Generator returned sat in 1720.530801 secs.
[01/07 16:38:40]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_qdel + -1min_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/07 16:38:51]  Improved gap from 12.831136067708334 to 48.4375
[01/07 16:38:52]  Improved number of small numbers from 82 to 88 out of a max of 128
[01/07 16:38:52]  Verifer returned sat in 12.289526 secs.
[01/07 16:38:52]  sf_get_cex returned in 12.344221 secs.
[01/07 16:38:52]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.810552e+07        4.810552e+07      4.810552e+07       0.177002       0.177490      4.810552e+07        0.088379                0.000000       39.388623           100.0                2.0                4.0                  2.0             3.911377  -5.029158e+07   0.000244        0.000038       3.0
1        4.810556e+07        4.810552e+07      4.810556e+07   39605.777100      39.605688      4.810552e+07        0.088379                0.088379       39.388623           100.0                0.0                1.0                  2.0             1.000000  -5.029153e+07  38.077490      -10.360010       0.0
2        4.810560e+07        4.810557e+07      4.810560e+07   39643.854346      39.605688      4.810557e+07        0.088379                0.088379       39.388623           100.0                0.0                1.0                  2.0             1.000000  -5.029148e+07  29.245679      -21.941662       0.0
3        4.810564e+07        4.810562e+07      4.810564e+07   39635.022534      39.605688      4.810562e+07        0.088379                0.088379       39.388623           100.0                0.0                1.0                  2.0             1.000000  -5.029143e+07  17.663867      -30.773633       0.0
4        4.810568e+07        4.810567e+07      4.810568e+07   39623.440723      39.605688      4.810567e+07        0.088379                0.088379       39.388623           100.0                0.0                1.0                  2.0             1.000000  -5.029138e+07   8.832056      -39.605529       0.0
5        4.810571e+07        4.810571e+07      4.810571e+07   39614.608911      39.605688      4.810571e+07        0.088379                0.088379       39.388623           100.0                0.0                1.0                  2.0             1.000000  -5.029138e+07   0.000015      -99.999596       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81557/4096, buf_size=200.[0m
[01/07 16:38:52]  --------------------------------------------------------------------------------
[01/07 16:38:52]  Iteration: 153 (0 solution, 152 counterexamples)
[01/07 16:40:09]  Generator returned sat in 69.539315 secs.
[01/07 16:40:10]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/07 16:40:30]  Improved gap from 0.0 to 48.4375
[01/07 16:40:31]  Improved number of small numbers from 80 to 83 out of a max of 128
[01/07 16:40:31]  Verifer returned sat in 21.366080 secs.
[01/07 16:40:31]  sf_get_cex returned in 21.429406 secs.
[01/07 16:40:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.734777e+07        4.734776e+07      4.734777e+07       0.177002       0.177490      4.734776e+07             0.0                     0.0       37.637354           100.0                0.0                1.0                  0.0                  2.0  -4.953382e+07  12.431939       12.431939       0.0
1        4.734781e+07        4.734776e+07      4.734781e+07   37325.259082      37.312827      4.734776e+07             0.0                     0.0       37.637354           100.0                0.0                1.0                  0.0                  2.0  -4.953377e+07  49.744766       -0.000133       0.0
2        4.734784e+07        4.734781e+07      4.734784e+07   37362.571909      37.312827      4.734781e+07             0.0                     0.0       37.637354           100.0                0.0                1.0                  0.0                  2.0  -4.953372e+07  37.310210      -11.127492       0.0
3        4.734788e+07        4.734786e+07      4.734788e+07   37350.137354      37.312827      4.734786e+07             0.0                     0.0       37.637354           100.0                0.0                1.0                  0.0                  2.0  -4.953367e+07  22.248037      -26.189463       0.0
4        4.734792e+07        4.734791e+07      4.734792e+07   37335.075181      37.312827      4.734791e+07             0.0                     0.0       37.639971           100.0                0.0                1.0                  0.0                  2.0  -4.953362e+07  11.123364      -37.314136       0.0
5        4.734796e+07        4.734796e+07      4.734796e+07   37325.259082      37.314136      4.734796e+07             0.0                     0.0       39.799477           100.0                0.0                1.0                  0.0                  2.0  -4.953356e+07   0.000000      -48.437702       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2374353/128384, buf_size=200.[0m
[01/07 16:40:31]  --------------------------------------------------------------------------------
[01/07 16:40:31]  Iteration: 154 (0 solution, 153 counterexamples)
[01/07 16:48:40]  Generator returned sat in 481.099444 secs.
[01/07 16:48:40]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 16:48:42]  Improved gap from 9.60894775390625 to 100
[01/07 16:48:43]  Improved number of small numbers from 103 to 103 out of a max of 128
[01/07 16:48:43]  Verifer returned sat in 2.454252 secs.
[01/07 16:48:43]  sf_get_cex returned in 2.507840 secs.
[01/07 16:48:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.728030e+07        4.728014e+07      4.728030e+07       0.176758       0.177490      4.728014e+07        0.000000                0.000000       67.854032      107.121505                0.0                2.0                  0.0                  3.0  -4.953362e+07  157.190323      157.190323       1.0
1        4.728042e+07        4.728022e+07      4.728042e+07  121563.641935     121.406452      4.728022e+07        0.000000                0.000000       67.854032      107.121505                0.0                2.0                  0.0                  3.0  -4.953362e+07  199.996774      178.596774       1.0
2        4.728054e+07        4.728030e+07      4.728054e+07  121606.448387     121.406452      4.728030e+07        0.003226                0.000000       67.854032      107.121505                1.0                3.0                  1.0                  3.0  -4.953362e+07  242.809677      200.000000       2.0
3        4.728066e+07        4.728043e+07      4.728066e+07  121649.264516     121.406452      4.728043e+07       21.409677                0.003226       73.218817      107.121505                0.0                2.0                  1.0                  2.0  -4.953362e+07  207.124731      200.000000       1.0
4        4.728079e+07        4.728053e+07      4.728079e+07  132364.555914     132.136022      4.728053e+07       53.545699               21.409677       78.603226      107.121505                1.0                3.0                  1.0                  2.0  -4.953362e+07  207.000000      200.000000       2.0
5        4.728094e+07        4.728054e+07      4.728094e+07  143165.384409     142.904839      4.728054e+07       96.450538               53.545699       78.603226      107.121505                2.0                4.0                  2.0                  2.0  -4.953362e+07  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=89699/930, alpha=8867/620, buf_size=200.[0m
[01/07 16:48:43]  --------------------------------------------------------------------------------
[01/07 16:48:43]  Iteration: 155 (0 solution, 154 counterexamples)
[01/07 17:01:58]  Generator returned sat in 787.646392 secs.
[01/07 17:01:58]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 17:02:09]  Improved gap from 0.9448818897637795 to 48.4375
[01/07 17:02:10]  Improved number of small numbers from 78 to 86 out of a max of 128
[01/07 17:02:10]  Verifer returned sat in 11.621521 secs.
[01/07 17:02:10]  sf_get_cex returned in 11.677048 secs.
[01/07 17:02:10]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.728044e+07        4.728044e+07      4.728044e+07       0.176270       0.177246      4.728044e+07             0.0                     0.0       28.878784           100.0                0.0                1.0                  0.0             3.088135  -4.953392e+07   1.336751        1.336722       0.0
1        4.728049e+07        4.728044e+07      4.728049e+07   48791.864095      48.790527      4.728044e+07             0.0                     0.0       28.878784           100.0                0.0                1.0                  0.0             3.088135  -4.953387e+07  47.996216       -0.441284       0.0
2        4.728054e+07        4.728049e+07      4.728054e+07   48838.523560      48.790527      4.728049e+07             0.0                     0.0       28.878784           100.0                0.0                1.0                  0.0             3.088135  -4.953382e+07  48.349243       -0.088257       0.0
3        4.728059e+07        4.728054e+07      4.728059e+07   48838.876587      48.790527      4.728054e+07             0.0                     0.0       32.291667           100.0                0.0                1.0                  0.0             3.088135  -4.953377e+07  48.702271        0.000000       0.0
4        4.728064e+07        4.728059e+07      4.728064e+07   52252.112101      52.203410      4.728059e+07             0.0                     0.0       36.394318           100.0                0.0                2.0                  0.0             3.088135  -4.953372e+07  52.203410        0.000000       1.0
5        4.728066e+07        4.728064e+07      4.728066e+07   19963.946574      19.911743      4.728064e+07             0.0                     0.0       39.556136           100.0                0.0                2.0                  0.0             3.088135  -4.953372e+07  19.911743      -80.088164       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=163117/8192, buf_size=200.[0m
[01/07 17:02:10]  --------------------------------------------------------------------------------
[01/07 17:02:10]  Iteration: 156 (0 solution, 155 counterexamples)
[01/07 17:03:52]  Generator returned sat in 93.951108 secs.
[01/07 17:03:52]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 17:04:01]  Improved gap from 7.970926711084191 to 48.4375
[01/07 17:04:02]  Improved number of small numbers from 95 to 98 out of a max of 128
[01/07 17:04:02]  Verifer returned sat in 9.448166 secs.
[01/07 17:04:02]  sf_get_cex returned in 9.502509 secs.
[01/07 17:04:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.728042e+07        4.728042e+07      4.728042e+07       0.176025       0.177246      4.728042e+07        0.088135                0.000000       27.615356           100.0                1.0                3.0                  1.0             4.088135  -4.953392e+07   0.000000       -0.088042       2.0
1        4.728047e+07        4.728042e+07      4.728047e+07   48790.127197      48.790039      4.728042e+07        0.088135                0.088135       27.615356           100.0                0.0                1.0                  1.0             1.000000  -4.953387e+07  48.701904       -0.000151       0.0
2        4.728052e+07        4.728047e+07      4.728052e+07   48838.829102      48.790039      4.728047e+07        0.088135                0.088135       27.615356           100.0                0.0                1.0                  1.0             1.000000  -4.953382e+07  48.437500        0.000000       0.0
3        4.728057e+07        4.728052e+07      4.728057e+07   48838.564697      48.790039      4.728052e+07        0.088135                0.088135       32.497314           100.0                0.0                2.0                  1.0             1.000000  -4.953377e+07  48.790039        0.000000       1.0
4        4.728060e+07        4.728057e+07      4.728060e+07   26105.518799      26.056641      4.728057e+07        0.088135                0.088135       36.570496           100.0                0.0                2.0                  1.0             1.000000  -4.953372e+07  26.056641      -22.380859       1.0
5        4.728063e+07        4.728062e+07      4.728063e+07   30155.966553      30.129822      4.728062e+07        0.088135                0.088135       38.943896           100.0                0.0                1.0                  1.0             1.000000  -4.953367e+07   7.748962      -40.688689       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=26381/4096, buf_size=200.[0m
[01/07 17:04:02]  --------------------------------------------------------------------------------
[01/07 17:04:02]  Iteration: 157 (0 solution, 156 counterexamples)
[01/07 17:29:17]  Generator returned sat in 1507.939536 secs.
[01/07 17:29:18]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 17:29:28]  Improved gap from 19.84 to 48.4375
[01/07 17:29:28]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/07 17:29:28]  Verifer returned sat in 10.470308 secs.
[01/07 17:29:28]  sf_get_cex returned in 10.525369 secs.
[01/07 17:29:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.724626e+07        4.724626e+07      4.724626e+07       0.175781       0.177002      4.724626e+07        0.019287                0.000000       34.218750           100.0                0.0                1.0                  0.0            55.800537  -4.949976e+07   0.000244       -5.702881       0.0
1        4.724631e+07        4.724627e+07      4.724631e+07   54199.238281      54.199219      4.724627e+07        0.019287                0.019287       34.218750           100.0                0.0                1.0                  0.0             1.000000  -4.949971e+07  48.496094       -0.019531       0.0
2        4.724636e+07        4.724631e+07      4.724636e+07   48505.546631      48.457031      4.724631e+07        0.019287                0.019287       34.218750           100.0                0.0                1.0                  0.0             1.000000  -4.949966e+07  48.437500        0.000000       0.0
3        4.724641e+07        4.724636e+07      4.724641e+07   48505.488037      48.457031      4.724636e+07        0.019287                0.019287       34.218750           100.0                0.0                2.0                  0.0             1.000000  -4.949961e+07  48.457031        0.000000       1.0
4        4.724643e+07        4.724641e+07      4.724643e+07   20028.945068      19.980469      4.724641e+07        0.019287                0.019287       36.459961           100.0                0.0                1.0                  0.0             1.000000  -4.949956e+07  19.550781      -28.886719       0.0
5        4.724648e+07        4.724646e+07      4.724648e+07   52959.023193      52.939453      4.724646e+07        0.019287                0.019287       38.855469           100.0                0.0                1.0                  0.0             1.000000  -4.949956e+07  24.052734      -75.947266       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=5115/256, buf_size=200.[0m
[01/07 17:29:28]  --------------------------------------------------------------------------------
[01/07 17:29:28]  Iteration: 158 (0 solution, 157 counterexamples)
[01/07 17:49:52]  Generator returned sat in 1216.338612 secs.
[01/07 17:49:53]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + -1max_qdel + 1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 17:49:56]  Improved gap from 0.0 to 100
[01/07 17:49:56]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/07 17:49:56]  Verifer returned sat in 3.579502 secs.
[01/07 17:49:56]  sf_get_cex returned in 3.634492 secs.
[01/07 17:49:56]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.724621e+07        4.724593e+07      4.724621e+07       0.175781       0.177002      4.724593e+07        0.087891                0.000000       93.087891      278.912109                0.0                2.0                  0.0         10332.912109  -4.949956e+07  279.000000      199.033203       1.0
1        4.724631e+07        4.724611e+07      4.724631e+07  108279.087891     108.000000      4.724611e+07        7.121094                0.087891       93.087891      278.912109                1.0                3.0                  1.0         10332.912109  -4.949956e+07  200.000000      200.000000       2.0
2        4.724642e+07        4.724621e+07      4.724642e+07  108207.121094     108.000000      4.724621e+07       15.121094                7.121094       93.087891      278.912109                2.0                4.0                  2.0         10332.912109  -4.949956e+07  200.966797      200.000000       3.0
3        4.724653e+07        4.724621e+07      4.724653e+07  108216.087891     108.000000      4.724621e+07       23.121094               15.121094       93.087891      100.000000                1.0                3.0                  2.0             3.000000  -4.949956e+07  300.000000      200.000000       2.0
4        4.724664e+07        4.724639e+07      4.724664e+07  108323.121094     108.000000      4.724639e+07       31.121094               23.121094       93.263672      100.000000                1.0                3.0                  2.0             3.000000  -4.949956e+07  213.648438      200.000000       2.0
5        4.724675e+07        4.724641e+07      4.724675e+07  108420.550781     108.175781      4.724641e+07       39.296875               31.121094       93.263672      100.000000                1.0                3.0                  2.0             3.000000  -4.949956e+07  299.736328      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=8237/256, alpha=7635/512, buf_size=200.[0m
[01/07 17:49:56]  --------------------------------------------------------------------------------
[01/07 17:49:56]  Iteration: 159 (0 solution, 158 counterexamples)
[01/07 17:58:25]  Generator returned sat in 501.407398 secs.
[01/07 17:58:26]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1max_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 17:58:37]  Improved gap from 0.0 to 48.4375
[01/07 17:58:38]  Improved number of small numbers from 97 to 103 out of a max of 128
[01/07 17:58:38]  Verifer returned sat in 11.839232 secs.
[01/07 17:58:38]  sf_get_cex returned in 11.894945 secs.
[01/07 17:58:38]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.732487e+07        4.732487e+07      4.732487e+07       0.175537       0.176514      4.732487e+07             0.0                     0.0       73.274821           100.0                0.0                2.0                  0.0             2.087646  -4.949977e+07   0.000000       -6.161987       1.0
1        4.732492e+07        4.732487e+07      4.732492e+07   53362.589518      53.362590      4.732487e+07             0.0                     0.0       73.274821           100.0                0.0                1.0                  0.0             2.087646  -4.949971e+07  47.200358       -1.237142       0.0
2        4.732496e+07        4.732492e+07      4.732496e+07   36684.610840      36.637410      4.732492e+07             0.0                     0.0       73.274821           100.0                0.0                1.0                  0.0             2.087646  -4.949966e+07  35.400269      -13.037231       0.0
3        4.732499e+07        4.732497e+07      4.732499e+07   36672.810750      36.637410      4.732497e+07             0.0                     0.0       73.274821           100.0                0.0                1.0                  0.0             2.087646  -4.949961e+07  23.600179      -24.837321       0.0
4        4.732503e+07        4.732502e+07      4.732503e+07   36661.010661      36.637410      4.732502e+07             0.0                     0.0       73.274821           100.0                0.0                1.0                  0.0             2.087646  -4.949956e+07  11.800090      -36.637410       0.0
5        4.732507e+07        4.732507e+07      4.732507e+07   36649.210571      36.637410      4.732507e+07             0.0                     0.0       73.274821           100.0                0.0                1.0                  0.0             2.087646  -4.949951e+07   0.000000      -48.437500       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=163121/8192, buf_size=200.[0m
[01/07 17:58:38]  --------------------------------------------------------------------------------
[01/07 17:58:38]  Iteration: 160 (0 solution, 159 counterexamples)
[01/07 18:14:17]  Generator returned sat in 931.022371 secs.
[01/07 18:14:17]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 18:14:25]  Improved gap from 0.07954545454545454 to 48.4375
[01/07 18:14:26]  Improved number of small numbers from 89 to 95 out of a max of 128
[01/07 18:14:26]  Verifer returned sat in 9.080657 secs.
[01/07 18:14:26]  sf_get_cex returned in 9.137509 secs.
[01/07 18:14:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.732497e+07        4.732497e+07      4.732497e+07       0.175293       0.176270      4.732497e+07             0.0                     0.0       18.689517           100.0                0.0                1.0                  0.0            35.214912  -4.949986e+07   0.000000       -1.183979       0.0
1        4.732501e+07        4.732497e+07      4.732501e+07   38630.306117      38.630306      4.732497e+07             0.0                     0.0       18.689517           100.0                0.0                1.0                  0.0            35.214912  -4.949981e+07  37.446096      -10.991417       0.0
2        4.732505e+07        4.732502e+07      4.732505e+07   38667.752212      38.630306      4.732502e+07             0.0                     0.0       24.837171           100.0                0.0                1.0                  0.0            35.214912  -4.949976e+07  26.402060      -22.035672       0.0
3        4.732509e+07        4.732507e+07      4.732509e+07   44804.362586      44.777961      4.732507e+07             0.0                     0.0       33.155702           100.0                0.0                1.0                  0.0            35.214912  -4.949971e+07  21.387257      -27.050436       0.0
4        4.732514e+07        4.732512e+07      4.732514e+07   53117.878485      53.096491      4.732512e+07             0.0                     0.0       37.329770           100.0                0.0                1.0                  0.0            35.214912  -4.949966e+07  24.631775      -23.805751       0.0
5        4.732518e+07        4.732517e+07      4.732518e+07   38630.306117      38.605674      4.732517e+07             0.0                     0.0       39.751316           100.0                0.0                1.0                  0.0            35.214912  -4.949966e+07  13.799949      -85.200077       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=3031/152, buf_size=200.[0m
[01/07 18:14:26]  --------------------------------------------------------------------------------
[01/07 18:14:26]  Iteration: 161 (0 solution, 160 counterexamples)
[01/07 18:21:07]  Generator returned sat in 392.402439 secs.
[01/07 18:21:07]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_qdel + 1max_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 18:21:23]  Improved gap from 5.6574445279657 to 48.4375
[01/07 18:21:23]  Improved number of small numbers from 85 to 95 out of a max of 128
[01/07 18:21:23]  Verifer returned sat in 16.028146 secs.
[01/07 18:21:23]  sf_get_cex returned in 16.084513 secs.
[01/07 18:21:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.732497e+07        4.732497e+07      4.732497e+07       0.175049       0.176270      4.732497e+07             0.0                     0.0       24.245845           100.0                0.0                2.0                  0.0            15.254639  -4.949986e+07   0.000000       -0.000020       1.0
1        4.732498e+07        4.732497e+07      4.732498e+07   18190.028902      18.190029      4.732497e+07             0.0                     0.0       24.245845           100.0                0.0                1.0                  0.0            15.254639  -4.949981e+07  12.120665      -36.317071       0.0
2        4.732505e+07        4.732502e+07      4.732505e+07   66693.840318      66.681720      4.732502e+07             0.0                     0.0       24.245845           100.0                0.0                1.0                  0.0            15.254639  -4.949976e+07  30.328757      -18.180762       0.0
3        4.732512e+07        4.732507e+07      4.732512e+07   66712.048410      66.681720      4.732507e+07             0.0                     0.0       32.327794           100.0                0.0                1.0                  0.0            15.254639  -4.949971e+07  48.500723        0.000000       0.0
4        4.732515e+07        4.732512e+07      4.732515e+07   34402.426541      34.353926      4.732512e+07             0.0                     0.0       36.371026           100.0                0.0                2.0                  0.0            15.254639  -4.949966e+07  34.353926      -14.083574       1.0
5        4.732517e+07        4.732517e+07      4.732517e+07   18224.382828      18.190029      4.732517e+07             0.0                     0.0       38.784321           100.0                0.0                1.0                  0.0            15.254639  -4.949966e+07   4.106455      -95.893320       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=25175/1384, buf_size=200.[0m
[01/07 18:21:24]  --------------------------------------------------------------------------------
[01/07 18:21:24]  Iteration: 162 (0 solution, 161 counterexamples)
[01/07 18:26:21]  Generator returned sat in 290.246619 secs.
[01/07 18:26:22]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 18:26:34]  Improved gap from 0.0 to 48.4375
[01/07 18:26:35]  Improved number of small numbers from 77 to 87 out of a max of 128
[01/07 18:26:35]  Verifer returned sat in 13.044941 secs.
[01/07 18:26:35]  sf_get_cex returned in 13.099930 secs.
[01/07 18:26:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.730748e+07        4.730747e+07      4.730748e+07       0.175049       0.176270      4.730747e+07             0.0                     0.0       37.496903           100.0                0.0                2.0                  0.0            59.504639  -4.948236e+07  12.489160       10.934610       1.0
1        4.730752e+07        4.730747e+07      4.730752e+07   37514.037723      37.501549      4.730747e+07             0.0                     0.0       37.496903           100.0                1.0                3.0                  1.0            59.504639  -4.948231e+07  48.435951       -0.001549       2.0
2        4.730756e+07        4.730752e+07      4.730756e+07   37549.984514      37.501549      4.730752e+07             0.0                     0.0       37.496903           100.0                0.0                1.0                  1.0            59.504639  -4.948226e+07  37.500000      -10.937500       0.0
3        4.730759e+07        4.730757e+07      4.730759e+07   37539.048563      37.501549      4.730757e+07             0.0                     0.0       37.496903           100.0                0.0                1.0                  1.0            59.504639  -4.948221e+07  26.564049      -21.873488       0.0
4        4.730763e+07        4.730762e+07      4.730763e+07   37528.112611      37.501549      4.730762e+07             0.0                     0.0       37.500000           100.0                0.0                1.0                  1.0            59.504639  -4.948216e+07  10.940597      -37.503043       0.0
5        4.730767e+07        4.730767e+07      4.730767e+07   37514.037723      37.503097      4.730767e+07             0.0                     0.0       39.688739           100.0                0.0                1.0                  1.0            59.504639  -4.948216e+07   0.000000      -99.999946       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=151375/8072, buf_size=200.[0m
[01/07 18:26:35]  --------------------------------------------------------------------------------
[01/07 18:26:35]  Iteration: 163 (0 solution, 162 counterexamples)
[01/07 18:40:06]  Generator returned sat in 803.281644 secs.
[01/07 18:40:07]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1max_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 18:40:14]  Improved gap from 13.6875 to 100
[01/07 18:40:16]  Improved number of small numbers from 59 to 69 out of a max of 128
[01/07 18:40:16]  Verifer returned sat in 8.649740 secs.
[01/07 18:40:16]  sf_get_cex returned in 8.704949 secs.
[01/07 18:40:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.730763e+07        4.730744e+07      4.730763e+07       0.175049       0.176025      4.730744e+07        0.043945                0.000000       92.481384      101.609619                2.0                4.0                  2.0                  5.0  -4.948242e+07  190.649719       96.912292       3.0
1        4.730774e+07        4.730763e+07      4.730774e+07  112628.315735     112.437622      4.730763e+07        0.043945                0.043945       95.346832      101.609619                0.0                1.0                  2.0                  1.0  -4.948242e+07  112.393677      109.349915       0.0
2        4.730793e+07        4.730773e+07      4.730793e+07  190806.102173     190.693665      4.730773e+07        0.087524                0.043945       97.390594      101.609619                0.0                2.0                  2.0                  1.0  -4.948242e+07  201.565643      200.000000       1.0
3        4.730813e+07        4.730783e+07      4.730813e+07  194982.842133     194.781189      4.730783e+07       94.868713                0.087524       98.434357      101.609619                0.0                2.0                  2.0                  1.0  -4.948242e+07  200.000000      200.000000       1.0
4        4.730832e+07        4.730783e+07      4.730832e+07  197163.582092     196.868713      4.730783e+07      191.737427               94.868713       98.434357      101.565643                0.0                2.0                  2.0                  1.0  -4.948242e+07  300.000000      200.000000       1.0
5        4.730852e+07        4.730803e+07      4.730852e+07  197360.450806     196.868713      4.730803e+07      288.606140              191.737427       98.500000      101.565643                1.0                3.0                  2.0                  1.0  -4.948242e+07  203.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=4727803/16384, alpha=326963/16384, buf_size=200.[0m
[01/07 18:40:16]  --------------------------------------------------------------------------------
[01/07 18:40:16]  Iteration: 164 (0 solution, 163 counterexamples)
[01/07 18:58:52]  Generator returned sat in 1108.368593 secs.
[01/07 18:58:53]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 18:59:02]  Improved gap from 6.2142333984375 to 48.4375
[01/07 18:59:03]  Improved number of small numbers from 97 to 101 out of a max of 128
[01/07 18:59:03]  Verifer returned sat in 10.800699 secs.
[01/07 18:59:03]  sf_get_cex returned in 10.857532 secs.
[01/07 18:59:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.730779e+07        4.730779e+07      4.730779e+07       0.175049       0.176025      4.730779e+07        0.008333                0.000000       32.925000           100.0                1.0                3.0                  1.0                  4.0  -4.948247e+07   0.000000       -0.008332       2.0
1        4.730784e+07        4.730779e+07      4.730784e+07   48204.175000      48.204167      4.730779e+07        0.008333                0.008333       32.925000           100.0                0.0                1.0                  1.0                  1.0  -4.948242e+07  48.195833       -0.241909       0.0
2        4.730789e+07        4.730784e+07      4.730789e+07   50619.037500      50.570833      4.730784e+07        0.008333                0.008333       32.925000           100.0                0.0                1.0                  1.0                  1.0  -4.948237e+07  48.329167       -0.108333       0.0
3        4.730794e+07        4.730789e+07      4.730794e+07   50619.170833      50.570833      4.730789e+07        0.008333                0.008333       32.958333           100.0                0.0                1.0                  1.0                  1.0  -4.948232e+07  50.462500        0.000000       0.0
4        4.730799e+07        4.730794e+07      4.730799e+07   50687.970833      50.637500      4.730794e+07        0.008333                0.008333       37.334375           100.0                0.0                2.0                  1.0                  1.0  -4.948227e+07  50.637500       -0.008153       1.0
5        4.730802e+07        4.730799e+07      4.730802e+07   22105.854167      22.055208      4.730799e+07        0.008333                0.008333       39.996667           100.0                0.0                1.0                  1.0                  1.0  -4.948227e+07  22.046875      -77.952945       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=3667/240, buf_size=200.[0m
[01/07 18:59:04]  --------------------------------------------------------------------------------
[01/07 18:59:04]  Iteration: 165 (0 solution, 164 counterexamples)
[01/07 19:10:58]  Generator returned sat in 706.437662 secs.
[01/07 19:10:59]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + 1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 19:11:07]  Improved gap from 5.053466796875 to 48.4375
[01/07 19:11:08]  Improved number of small numbers from 96 to 101 out of a max of 128
[01/07 19:11:08]  Verifer returned sat in 9.721461 secs.
[01/07 19:11:08]  sf_get_cex returned in 9.775182 secs.
[01/07 19:11:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.725563e+07        4.725563e+07      4.725563e+07       0.174805       0.175781      4.725563e+07             0.0                     0.0       28.699707           100.0                0.0                1.0                  0.0             6.087402  -4.943032e+07   1.638346       -0.087328       0.0
1        4.725568e+07        4.725563e+07      4.725568e+07   48613.943034      48.612305      4.725563e+07             0.0                     0.0       28.699707           100.0                0.0                1.0                  0.0             6.087402  -4.943026e+07  48.524902       -0.000170       0.0
2        4.725573e+07        4.725568e+07      4.725573e+07   48660.829590      48.612305      4.725568e+07             0.0                     0.0       28.699707           100.0                0.0                1.0                  0.0             6.087402  -4.943021e+07  48.437500       -0.000170       0.0
3        4.725578e+07        4.725573e+07      4.725578e+07   48660.742188      48.612305      4.725573e+07             0.0                     0.0       32.437337           100.0                0.0                1.0                  0.0             6.087402  -4.943016e+07  48.437500        0.000000       0.0
4        4.725583e+07        4.725578e+07      4.725583e+07   52398.372396      52.349935      4.725578e+07             0.0                     0.0       36.437378           100.0                0.0                2.0                  0.0             6.087402  -4.943011e+07  52.349935       -0.000088       1.0
5        4.725585e+07        4.725583e+07      4.725585e+07   19964.947591      19.912598      4.725583e+07             0.0                     0.0       39.637370           100.0                0.0                1.0                  0.0             6.087402  -4.943006e+07  19.825195      -28.612393       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40781/2048, buf_size=200.[0m
[01/07 19:11:08]  --------------------------------------------------------------------------------
[01/07 19:11:08]  Iteration: 166 (0 solution, 165 counterexamples)
[01/07 19:18:40]  Generator returned sat in 443.224483 secs.
[01/07 19:18:40]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 19:18:47]  Improved gap from 0.0 to 48.4375
[01/07 19:18:47]  Improved number of small numbers from 98 to 128 out of a max of 128
[01/07 19:18:47]  Verifer returned sat in 7.046319 secs.
[01/07 19:18:47]  sf_get_cex returned in 7.101083 secs.
[01/07 19:18:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.723950e+07        4.723950e+07      4.723950e+07       0.174805       0.175537      4.723950e+07        0.043701                0.000000       69.437256           100.0                0.0                2.0                  0.0                  2.0  -4.938087e+07   0.000000        0.000000       1.0
1        4.723955e+07        4.723950e+07      4.723955e+07   49481.244873      49.481201      4.723950e+07        0.043701                0.043701       69.437256           100.0                0.0                1.0                  0.0                  1.0  -4.938082e+07  49.393799       -0.043457       0.0
2        4.723960e+07        4.723955e+07      4.723960e+07   49530.638672      49.481201      4.723955e+07        0.043701                0.043701       69.437256           100.0                0.0                1.0                  0.0                  1.0  -4.938077e+07  49.437500        0.000000       0.0
3        4.723965e+07        4.723960e+07      4.723965e+07   49530.682373      49.481201      4.723960e+07        0.043701                0.043701       69.437256           100.0                0.0                2.0                  0.0                  1.0  -4.938072e+07  49.481201       -0.043701       1.0
4        4.723970e+07        4.723965e+07      4.723970e+07   49530.726074      49.481201      4.723965e+07        0.043701                0.043701       69.437256           100.0                0.0                1.0                  0.0                  1.0  -4.938067e+07  49.437500        0.000000       0.0
5        4.723975e+07        4.723970e+07      4.723975e+07   49530.682373      49.481201      4.723970e+07        0.043701                0.043701       69.437256           100.0                0.0                1.0                  0.0                  1.0  -4.938067e+07  47.449707      -50.518799       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=20435/1024, buf_size=200.[0m
[01/07 19:18:47]  --------------------------------------------------------------------------------
[01/07 19:18:47]  Iteration: 167 (0 solution, 166 counterexamples)
[01/07 19:52:08]  Generator returned sat in 1992.762061 secs.
[01/07 19:52:09]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + -1min_buffer + 1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/07 19:52:21]  Improved gap from 14.520547945205479 to 48.4375
[01/07 19:52:22]  Improved number of small numbers from 89 to 92 out of a max of 128
[01/07 19:52:22]  Verifer returned sat in 13.385983 secs.
[01/07 19:52:22]  sf_get_cex returned in 13.441922 secs.
[01/07 19:52:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.723955e+07        4.723955e+07      4.723955e+07       0.174561       0.175293      4.723955e+07        0.087402                0.000000       36.736111           100.0                0.0                1.0                  0.0             2.087158  -4.938092e+07   0.000000       -0.000020       0.0
1        4.723959e+07        4.723955e+07      4.723959e+07   38280.740614      38.280653      4.723955e+07        0.087402                0.087402       36.736111           100.0                0.0                1.0                  0.0             1.000000  -4.938087e+07  38.193251      -10.244249       0.0
2        4.723965e+07        4.723960e+07      4.723965e+07   53597.905219      53.559625      4.723960e+07        0.087402                0.087402       36.736111           100.0                0.0                1.0                  0.0             1.000000  -4.938082e+07  43.315375       -5.122125       0.0
3        4.723970e+07        4.723965e+07      4.723970e+07   53603.027344      53.559625      4.723965e+07        0.087402                0.087402       36.736111           100.0                0.0                1.0                  0.0             1.000000  -4.938077e+07  48.437500        0.000000       0.0
4        4.723975e+07        4.723970e+07      4.723975e+07   53608.149468      53.559625      4.723970e+07        0.087402                0.087402       36.736111           100.0                0.0                2.0                  0.0             1.000000  -4.938072e+07  53.559625       -0.000210       1.0
5        4.723977e+07        4.723975e+07      4.723977e+07   19966.244683      19.912598      4.723975e+07        0.087402                0.087402       39.965039           100.0                0.0                1.0                  0.0             1.000000  -4.938072e+07  18.959527      -80.087612       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40781/2048, buf_size=200.[0m
[01/07 19:52:22]  --------------------------------------------------------------------------------
[01/07 19:52:22]  Iteration: 168 (0 solution, 167 counterexamples)
[01/07 19:59:05]  Generator returned sat in 394.682914 secs.
[01/07 19:59:05]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 19:59:13]  Improved gap from 4.53857421875 to 48.4375
[01/07 19:59:14]  Improved number of small numbers from 81 to 94 out of a max of 128
[01/07 19:59:14]  Verifer returned sat in 8.253894 secs.
[01/07 19:59:14]  sf_get_cex returned in 8.308968 secs.
[01/07 19:59:14]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.723956e+07        4.723956e+07      4.723956e+07       0.174316       0.175049      4.723956e+07             0.0                     0.0       55.622369           100.0                0.0                2.0                  0.0             2.087158  -4.938093e+07   0.087280        0.087057       1.0
1        4.723961e+07        4.723956e+07      4.723961e+07   50475.307007      50.475220      4.723956e+07             0.0                     0.0       55.622369           100.0                1.0                3.0                  1.0             2.087158  -4.938088e+07  50.475220       -1.037577       2.0
2        4.723966e+07        4.723961e+07      4.723966e+07   50525.694946      50.475220      4.723961e+07             0.0                     0.0       55.622369           100.0                0.0                1.0                  1.0             2.087158  -4.938083e+07  49.437500        0.000000       0.0
3        4.723969e+07        4.723966e+07      4.723969e+07   33007.770833      32.958333      4.723966e+07             0.0                     0.0       55.622369           100.0                0.0                2.0                  1.0             2.087158  -4.938078e+07  32.958333      -16.479024       1.0
4        4.723973e+07        4.723971e+07      4.723973e+07   32991.291667      32.958333      4.723971e+07             0.0                     0.0       55.622369           100.0                0.0                1.0                  1.0             2.087158  -4.938073e+07  16.479167      -32.958191       0.0
5        4.723976e+07        4.723976e+07      4.723976e+07   32974.812500      32.958333      4.723976e+07             0.0                     0.0       55.622369           100.0                0.0                1.0                  1.0             2.087158  -4.938068e+07   0.000143      -49.437601       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=379489/73728, buf_size=200.[0m
[01/07 19:59:14]  --------------------------------------------------------------------------------
[01/07 19:59:14]  Iteration: 169 (0 solution, 168 counterexamples)
[01/07 20:03:44]  Generator returned sat in 261.801980 secs.
[01/07 20:03:44]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + 1max_qdel + -1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/07 20:04:10]  Improved gap from 17.185078165518263 to 48.4375
[01/07 20:04:11]  Improved number of small numbers from 90 to 98 out of a max of 128
[01/07 20:04:11]  Verifer returned sat in 26.209169 secs.
[01/07 20:04:11]  sf_get_cex returned in 26.264636 secs.
[01/07 20:04:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.729115e+07        4.729115e+07      4.729115e+07       0.174072       0.174805      4.729115e+07             0.0                     0.0       32.378906           100.0                0.0                1.0                  0.0                  2.0  -4.943252e+07   0.000000       -1.307149       0.0
1        4.729120e+07        4.729115e+07      4.729120e+07   49047.607422      49.047607      4.729115e+07             0.0                     0.0       32.378906           100.0                0.0                1.0                  0.0                  2.0  -4.943246e+07  47.740234       -0.697266       0.0
2        4.729125e+07        4.729120e+07      4.729125e+07   49095.347656      49.047607      4.729120e+07             0.0                     0.0       32.378906           100.0                0.0                1.0                  0.0                  2.0  -4.943241e+07  48.350342       -0.087158       0.0
3        4.729129e+07        4.729125e+07      4.729129e+07   49095.957764      49.047607      4.729125e+07             0.0                     0.0       32.378906           100.0                0.0                1.0                  0.0                  2.0  -4.943236e+07  48.960449        0.000000       0.0
4        4.729134e+07        4.729129e+07      4.729134e+07   49096.567871      49.047607      4.729129e+07             0.0                     0.0       36.458862           100.0                0.0                2.0                  0.0                  2.0  -4.943231e+07  49.047607       -0.000020       1.0
5        4.729136e+07        4.729134e+07      4.729136e+07   18278.478760      18.229431      4.729134e+07             0.0                     0.0       38.994043           100.0                0.0                1.0                  0.0                  2.0  -4.943231e+07  18.142273      -81.770345       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=64349/4096, buf_size=200.[0m
[01/07 20:04:11]  --------------------------------------------------------------------------------
[01/07 20:04:11]  Iteration: 170 (0 solution, 169 counterexamples)
[01/07 21:50:50]  Generator returned sat in 6390.895979 secs.
[01/07 21:50:51]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 21:51:01]  Improved gap from 4.7869873046875 to 48.4375
[01/07 21:51:02]  Improved number of small numbers from 68 to 70 out of a max of 128
[01/07 21:51:02]  Verifer returned sat in 11.411751 secs.
[01/07 21:51:02]  sf_get_cex returned in 11.466826 secs.
[01/07 21:51:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  queue_t  bottle_queue_t  qdelay_t
0        4.729094e+07        4.729094e+07      4.729094e+07       0.173828       0.174561      4.729094e+07        0.087036                0.000000       66.558024           100.0                2.0                4.0                  2.0                  2.0  -4.943230e+07    0.000       -0.000173       3.0
1        4.729099e+07        4.729094e+07      4.729099e+07   49962.123169      49.962036      4.729094e+07        0.087036                0.087036       66.558024           100.0                0.0                1.0                  2.0                  1.0  -4.943225e+07   49.875        0.000000       0.0
2        4.729104e+07        4.729099e+07      4.729104e+07   49924.962036      49.875000      4.729099e+07        0.087036                0.087036       66.558024           100.0                0.0                2.0                  2.0                  1.0  -4.943220e+07   49.875        0.000000       1.0
3        4.729109e+07        4.729104e+07      4.729109e+07   49924.962036      49.875000      4.729104e+07        0.087036                0.087036       66.558024           100.0                0.0                2.0                  2.0                  1.0  -4.943215e+07   49.875        0.000000       1.0
4        4.729114e+07        4.729109e+07      4.729114e+07   49924.962036      49.875000      4.729109e+07        0.087036                0.087036       66.558024           100.0                0.0                2.0                  2.0                  1.0  -4.943210e+07   49.875        0.000000       1.0
5        4.729119e+07        4.729114e+07      4.729119e+07   49924.962036      49.875000      4.729114e+07        0.087036                0.087036       66.558024           100.0                0.0                2.0                  2.0                  1.0  -4.943205e+07   49.875       -0.000050       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=407863/24576, buf_size=200.[0m
[01/07 21:51:02]  --------------------------------------------------------------------------------
[01/07 21:51:02]  Iteration: 171 (0 solution, 170 counterexamples)
[01/07 23:44:41]  Generator returned sat in 6810.454387 secs.
[01/07 23:44:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1max_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/07 23:44:43]  Improved gap from 0.0 to 100
[01/07 23:44:44]  Improved number of small numbers from 93 to 93 out of a max of 128
[01/07 23:44:44]  Verifer returned sat in 2.605676 secs.
[01/07 23:44:44]  sf_get_cex returned in 2.693549 secs.
[01/07 23:44:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.720660e+07        4.720642e+07      4.720660e+07       0.173828       0.174561      4.720642e+07        0.043457                0.000000       68.078939     8446.000977                0.0                1.0                  0.0                  2.0  -4.934789e+07  179.421061       79.421061       0.0
1        4.720674e+07        4.720661e+07      4.720674e+07  136337.342122     136.157878      4.720661e+07        0.043457                0.043457       92.232259     8446.000977                0.0                1.0                  0.0                  1.0  -4.934789e+07  131.114421      115.578939       0.0
2        4.720692e+07        4.720662e+07      4.720692e+07  184595.676107     184.464518      4.720662e+07        0.086914                0.043457       92.232259     8446.000977                0.0                2.0                  0.0                  1.0  -4.934789e+07  299.406087      200.000000       1.0
3        4.720711e+07        4.720672e+07      4.720711e+07  184764.011230     184.464518      4.720672e+07       84.551432                0.086914       92.232259     8446.000977                1.0                3.0                  1.0                  1.0  -4.934789e+07  300.000000      200.000000       2.0
4        4.720729e+07        4.720692e+07      4.720729e+07  184849.069661     184.464518      4.720692e+07      169.015951               84.551432       99.710286      297.957520                1.0                3.0                  1.0                  1.0  -4.934789e+07  201.448568      200.000000       2.0
5        4.720749e+07        4.720702e+07      4.720749e+07  199791.037435     199.420573      4.720702e+07      268.436523              169.015951       99.710286      198.703532                1.0                3.0                  1.0                  1.0  -4.934789e+07  201.999023      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=549669/2048, alpha=89/2048, buf_size=200.[0m
[01/07 23:44:45]  --------------------------------------------------------------------------------
[01/07 23:44:45]  Iteration: 172 (0 solution, 171 counterexamples)
[01/08 00:43:17]  Generator returned sat in 3499.737788 secs.
[01/08 00:43:18]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_qdel + 1max_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/08 00:43:34]  Improved gap from 12.1697998046875 to 48.4375
[01/08 00:43:36]  Improved number of small numbers from 82 to 91 out of a max of 128
[01/08 00:43:36]  Verifer returned sat in 17.566799 secs.
[01/08 00:43:36]  sf_get_cex returned in 17.655492 secs.
[01/08 00:43:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.728616e+07        4.728616e+07      4.728616e+07       0.173584       0.174316      4.728616e+07             0.0                     0.0       64.583333           100.0                0.0                2.0                  0.0              2.08667  -4.934789e+07   1.989624        1.989533       1.0
1        4.728621e+07        4.728616e+07      4.728621e+07   50526.281616      50.524292      4.728616e+07             0.0                     0.0       64.583333           100.0                0.0                2.0                  0.0              2.08667  -4.934784e+07  52.427124       -2.086761       1.0
2        4.728626e+07        4.728621e+07      4.728626e+07   50576.719116      50.524292      4.728621e+07             0.0                     0.0       64.583333           100.0                0.0                1.0                  0.0              2.08667  -4.934779e+07  48.437500        0.000000       0.0
3        4.728631e+07        4.728626e+07      4.728631e+07   46399.145508      46.350708      4.728626e+07             0.0                     0.0       64.583333           100.0                0.0                2.0                  0.0              2.08667  -4.934774e+07  46.350708       -2.086792       1.0
4        4.728636e+07        4.728631e+07      4.728636e+07   50570.642700      50.524292      4.728631e+07             0.0                     0.0       64.583333           100.0                0.0                1.0                  0.0              2.08667  -4.934769e+07  48.437500        0.000000       0.0
5        4.728641e+07        4.728636e+07      4.728641e+07   46399.145508      46.350708      4.728636e+07             0.0                     0.0       64.583333           100.0                0.0                2.0                  0.0              2.08667  -4.934769e+07  46.350708      -53.649261       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=345515/24576, buf_size=200.[0m
[01/08 00:43:36]  --------------------------------------------------------------------------------
[01/08 00:43:36]  Iteration: 173 (0 solution, 172 counterexamples)
[01/08 02:48:48]  Generator returned sat in 7498.220753 secs.
[01/08 02:48:48]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 02:48:59]  Improved gap from 10.771697998046875 to 48.4375
[01/08 02:48:59]  Improved number of small numbers from 75 to 76 out of a max of 128
[01/08 02:48:59]  Verifer returned sat in 10.904258 secs.
[01/08 02:48:59]  sf_get_cex returned in 10.959255 secs.
[01/08 02:48:59]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.728209e+07        4.728209e+07      4.728209e+07       0.173584       0.174316      4.728209e+07        0.086792                0.000000       74.186523         66113.0                0.0                1.0                  0.0                  2.0  -4.934789e+07   0.000000        0.000000       0.0
1        4.728213e+07        4.728209e+07      4.728213e+07   37093.348511      37.093262      4.728209e+07        0.086792                0.086792       74.186523         66113.0                0.0                1.0                  0.0                  1.0  -4.934784e+07  37.006470      -11.431030       0.0
2        4.728218e+07        4.728214e+07      4.728218e+07   54310.408691      54.273315      4.728214e+07        0.086792                0.086792       74.186523         66113.0                0.0                1.0                  0.0                  1.0  -4.934779e+07  42.842285       -5.595215       0.0
3        4.728224e+07        4.728219e+07      4.728224e+07   54316.244507      54.273315      4.728219e+07        0.086792                0.086792       74.186523         66113.0                0.0                1.0                  0.0                  1.0  -4.934773e+07  48.678101        0.000000       0.0
4        4.728229e+07        4.728224e+07      4.728229e+07   54322.080322      54.273315      4.728224e+07        0.086792                0.086792       74.186523         66113.0                0.0                2.0                  0.0                  1.0  -4.934769e+07  54.273315        0.000000       1.0
5        4.728231e+07        4.728229e+07      4.728231e+07   19967.568115      19.913208      4.728229e+07        0.086792                0.086792       74.186523         66113.0                0.0                2.0                  0.0                  1.0  -4.934769e+07  19.913208      -80.086670       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=163129/8192, buf_size=200.[0m
[01/08 02:48:59]  --------------------------------------------------------------------------------
[01/08 02:48:59]  Iteration: 174 (0 solution, 173 counterexamples)
[01/08 03:24:48]  Generator returned sat in 2140.741052 secs.
[01/08 03:24:49]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1min_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1max_qdel + -1min_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 03:25:00]  Improved gap from 9.9438202247191 to 48.4375
[01/08 03:25:00]  Improved number of small numbers from 79 to 90 out of a max of 128
[01/08 03:25:00]  Verifer returned sat in 11.441886 secs.
[01/08 03:25:00]  sf_get_cex returned in 11.497504 secs.
[01/08 03:25:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.728207e+07        4.728207e+07      4.728207e+07       0.173340       0.174072      4.728207e+07             0.0                     0.0       97.239624           103.0                2.0                4.0                  2.0              2.08667  -4.934794e+07   0.000000       -0.000122       3.0
1        4.728212e+07        4.728207e+07      4.728212e+07   48706.604004      48.706604      4.728207e+07             0.0                     0.0       97.239624           103.0                0.0                1.0                  2.0              2.08667  -4.934789e+07  48.619812       -0.269104       0.0
2        4.728217e+07        4.728212e+07      4.728217e+07   48755.223816      48.706604      4.728212e+07             0.0                     0.0       97.239624           103.0                0.0                1.0                  2.0              2.08667  -4.934784e+07  48.437500        0.000000       0.0
3        4.728222e+07        4.728217e+07      4.728222e+07   48755.041504      48.706604      4.728217e+07             0.0                     0.0       97.239624           103.0                0.0                2.0                  2.0              2.08667  -4.934779e+07  48.706604       -0.000183       1.0
4        4.728227e+07        4.728222e+07      4.728227e+07   48755.310608      48.706604      4.728222e+07             0.0                     0.0       97.239624           103.0                0.0                1.0                  2.0              2.08667  -4.934774e+07  48.619812       -0.000122       0.0
5        4.728232e+07        4.728227e+07      4.728232e+07   48755.223816      48.706604      4.728227e+07             0.0                     0.0       97.239624           103.0                0.0                1.0                  2.0              2.08667  -4.934769e+07  48.619781       -0.269104       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=711/8192, buf_size=200.[0m
[01/08 03:25:00]  --------------------------------------------------------------------------------
[01/08 03:25:00]  Iteration: 175 (0 solution, 174 counterexamples)
[01/08 04:33:18]  Generator returned sat in 4089.201162 secs.
[01/08 04:33:19]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 1min_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 04:33:42]  Improved gap from 0.36834716796875 to 48.4375
[01/08 04:33:42]  Improved number of small numbers from 103 to 128 out of a max of 128
[01/08 04:33:42]  Verifer returned sat in 23.047908 secs.
[01/08 04:33:42]  sf_get_cex returned in 23.105641 secs.
[01/08 04:33:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.728207e+07        4.728207e+07      4.728207e+07        0.17334       0.174072      4.728207e+07        0.086426                0.000000          98.875           100.0                1.0                3.0                  1.0                  2.0  -4.934794e+07   0.000244       -0.086182       2.0
1        4.728212e+07        4.728207e+07      4.728212e+07    49437.58667      49.437500      4.728207e+07        0.086426                0.086426          98.875           100.0                0.0                1.0                  1.0                  1.0  -4.934789e+07  49.351074       -0.086182       0.0
2        4.728217e+07        4.728212e+07      4.728217e+07    49486.93750      49.437500      4.728212e+07        0.086426                0.086426          98.875           100.0                0.0                1.0                  1.0                  1.0  -4.934785e+07  49.351074       -2.162842       0.0
3        4.728222e+07        4.728217e+07      4.728222e+07    49486.93750      49.437500      4.728217e+07        0.086426                0.086426          98.875           100.0                0.0                1.0                  1.0                  1.0  -4.934779e+07  47.274414       -2.162842       0.0
4        4.728227e+07        4.728222e+07      4.728227e+07    49484.86084      49.437500      4.728222e+07        0.086426                0.086426          98.875           100.0                0.0                1.0                  1.0                  1.0  -4.934774e+07  47.274414       -2.162842       0.0
5        4.728232e+07        4.728227e+07      4.728232e+07    49484.86084      49.437500      4.728227e+07        0.086426                0.086426          98.875           100.0                0.0                1.0                  1.0                  1.0  -4.934769e+07  47.274658       -2.163086       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=355/4096, buf_size=200.[0m
[01/08 04:33:42]  --------------------------------------------------------------------------------
[01/08 04:33:42]  Iteration: 176 (0 solution, 175 counterexamples)
[01/08 05:45:35]  Generator returned sat in 4304.684725 secs.
[01/08 05:45:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/08 05:45:51]  Improved gap from 37.4566650390625 to 48.4375
[01/08 05:45:51]  Improved number of small numbers from 100 to 106 out of a max of 128
[01/08 05:45:51]  Verifer returned sat in 15.458382 secs.
[01/08 05:45:51]  sf_get_cex returned in 15.511631 secs.
[01/08 05:45:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.733874e+07        4.733874e+07      4.733874e+07       0.173340       0.174072      4.733874e+07        0.027778                0.000000       66.037037           100.0                1.0                3.0                  1.0            25.962963  -4.934794e+07   0.027778        0.027534       2.0
1        4.733879e+07        4.733874e+07      4.733879e+07   49465.333333      49.465278      4.733874e+07        0.027778                0.027778       66.037037           100.0                2.0                4.0                  2.0            25.962963  -4.934789e+07  49.465278        0.000000       3.0
2        4.733884e+07        4.733879e+07      4.733884e+07   49514.770833      49.465278      4.733879e+07        0.027778                0.027778       66.037037           100.0                0.0                2.0                  2.0            25.962963  -4.934784e+07  49.465278       -0.000163       1.0
3        4.733889e+07        4.733884e+07      4.733889e+07   49514.770833      49.465278      4.733884e+07        0.027778                0.027778       66.037037           100.0                0.0                1.0                  2.0            25.962963  -4.934779e+07  49.437572        0.000000       0.0
4        4.733890e+07        4.733889e+07      4.733890e+07   16621.224609      16.571759      4.733889e+07        0.027778                0.027778       66.037037           100.0                0.0                2.0                  2.0            25.962963  -4.934774e+07  16.571759      -31.865741       1.0
5        4.733895e+07        4.733893e+07      4.733895e+07   49481.877315      49.465278      4.733893e+07        0.027778                0.027778       66.037037           100.0                0.0                1.0                  2.0            25.962963  -4.934769e+07  17.599365      -30.838180       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=7159/432, buf_size=200.[0m
[01/08 05:45:52]  --------------------------------------------------------------------------------
[01/08 05:45:52]  Iteration: 177 (0 solution, 176 counterexamples)
[01/08 07:22:11]  Generator returned sat in 5771.274509 secs.
[01/08 07:22:12]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/08 07:22:23]  Improved gap from 2.49835205078125 to 100
[01/08 07:22:23]  Improved number of small numbers from 99 to 128 out of a max of 128
[01/08 07:22:23]  Verifer returned sat in 10.935000 secs.
[01/08 07:22:23]  sf_get_cex returned in 11.018888 secs.
[01/08 07:22:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.733872e+07        4.733842e+07      4.733872e+07       0.173340       0.174072      4.733842e+07         0.00000                 0.00000        90.26001      199.913086                0.0                1.0                  0.0             97.65332  -4.934779e+07  298.653320       198.91333       0.0
1        4.733882e+07        4.733860e+07      4.733882e+07  101471.993164     101.173340      4.733860e+07         0.08667                 0.00000        90.26001      199.913086                0.0                2.0                  0.0             97.65332  -4.934779e+07  219.393311       200.00000       1.0
2        4.733891e+07        4.733872e+07      4.733891e+07   90479.489746      90.260010      4.733872e+07         0.08667                 0.08667        99.91333      199.913086                0.0                2.0                  0.0              2.00000  -4.934779e+07  190.260010       190.26001       1.0
3        4.733902e+07        4.733872e+07      4.733902e+07  111017.006836     110.826660      4.733872e+07         1.17334                 0.08667        99.91333      199.913086                0.0                2.0                  0.0              2.00000  -4.934779e+07  300.000000       200.00000       1.0
4        4.733914e+07        4.733892e+07      4.733914e+07  111127.833496     110.826660      4.733892e+07        12.00000                 1.17334        99.91333      199.913086                0.0                2.0                  0.0              2.00000  -4.934779e+07  200.173340       200.00000       1.0
5        4.733925e+07        4.733892e+07      4.733925e+07  111038.833496     110.826660      4.733892e+07        22.82666                12.00000        99.91333      199.913086                1.0                3.0                  1.0              2.00000  -4.934779e+07  300.000000       200.00000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=93143/4096, alpha=44701/4096, buf_size=200.[0m
[01/08 07:22:23]  --------------------------------------------------------------------------------
[01/08 07:22:23]  Iteration: 178 (0 solution, 177 counterexamples)
[01/08 07:40:16]  Generator returned sat in 1058.955952 secs.
[01/08 07:40:16]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1max_qdel + -1min_buffer + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/08 07:40:35]  Improved gap from 0.03546099290780142 to 48.4375
[01/08 07:40:35]  Improved number of small numbers from 102 to 103 out of a max of 128
[01/08 07:40:35]  Verifer returned sat in 18.623654 secs.
[01/08 07:40:35]  sf_get_cex returned in 18.711956 secs.
[01/08 07:40:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.750924e+07        4.750922e+07      4.750924e+07       0.173096       0.174072      4.750922e+07             0.0                     0.0       77.517857           100.0                0.0                1.0                  0.0              13.5625  -4.934800e+07  19.437500       19.437465       0.0
1        4.750926e+07        4.750923e+07      4.750926e+07   19939.080357      19.919643      4.750923e+07             0.0                     0.0       77.517857           100.0                0.0                2.0                  0.0              13.5625  -4.934795e+07  39.276786       -9.160714       1.0
2        4.750932e+07        4.750927e+07      4.750932e+07   57637.491071      57.598214      4.750927e+07             0.0                     0.0       77.517857           100.0                0.0                1.0                  0.0              13.5625  -4.934790e+07  48.437500        0.000000       0.0
3        4.750934e+07        4.750932e+07      4.750934e+07   19968.080357      19.919643      4.750932e+07             0.0                     0.0       77.517857           100.0                0.0                2.0                  0.0              13.5625  -4.934784e+07  19.919643      -28.517857       1.0
4        4.750940e+07        4.750937e+07      4.750940e+07   57618.133929      57.598214      4.750937e+07             0.0                     0.0       77.517857           100.0                0.0                1.0                  0.0              13.5625  -4.934779e+07  28.517857      -19.919643       0.0
5        4.750942e+07        4.750942e+07      4.750942e+07   19948.160714      19.919643      4.750942e+07             0.0                     0.0       77.517857           100.0                0.0                1.0                  0.0              13.5625  -4.934774e+07   0.000000      -48.437744       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2231/112, buf_size=200.[0m
[01/08 07:40:35]  --------------------------------------------------------------------------------
[01/08 07:40:35]  Iteration: 179 (0 solution, 178 counterexamples)
[01/08 07:43:57]  Generator returned sat in 187.836128 secs.
[01/08 07:43:58]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + 1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/08 07:44:01]  Improved gap from 0.0865478515625 to 100
[01/08 07:44:03]  Improved number of small numbers from 65 to 73 out of a max of 128
[01/08 07:44:03]  Verifer returned sat in 5.125393 secs.
[01/08 07:44:03]  sf_get_cex returned in 5.213965 secs.
[01/08 07:44:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.750976e+07        4.750953e+07      4.750976e+07       0.173096       0.174072      4.750953e+07        0.000000                0.000000       92.000000           100.0                1.0                3.0                  1.0              2.91333  -4.934840e+07  230.423014           131.0       2.0
1        4.750993e+07        4.750973e+07      4.750993e+07  169316.970866     169.086548      4.750973e+07        0.086548                0.000000       99.711507           100.0                1.0                3.0                  1.0              2.91333  -4.934840e+07  200.000000           200.0       2.0
2        4.751011e+07        4.750973e+07      4.751011e+07  184709.648722     184.509562      4.750973e+07       84.596110                0.086548       99.711507           100.0                1.0                3.0                  1.0              2.91333  -4.934840e+07  299.394165           200.0       2.0
3        4.751030e+07        4.750993e+07      4.751030e+07  184893.552450     184.509562      4.750993e+07      169.105672               84.596110       99.711507           100.0                1.0                3.0                  1.0              2.91333  -4.934840e+07  200.923177           200.0       2.0
4        4.751048e+07        4.751003e+07      4.751048e+07  184879.591024     184.509562      4.751003e+07      253.615234              169.105672       99.884603           100.0                1.0                3.0                  1.0              2.91333  -4.934840e+07  200.000000           200.0       2.0
5        4.751067e+07        4.751003e+07      4.751067e+07  185309.368815     184.855754      4.751003e+07      338.470988              253.615234       99.884603           100.0                1.0                3.0                  1.0              2.91333  -4.934840e+07  299.740349           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=1039517/3072, alpha=122171/8192, buf_size=200.[0m
[01/08 07:44:03]  --------------------------------------------------------------------------------
[01/08 07:44:03]  Iteration: 180 (0 solution, 179 counterexamples)
[01/08 08:56:45]  Generator returned sat in 4347.812075 secs.
[01/08 08:56:46]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1max_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/08 08:56:55]  Improved gap from 0.8173963758680556 to 48.4375
[01/08 08:56:55]  Improved number of small numbers from 89 to 128 out of a max of 128
[01/08 08:56:55]  Verifer returned sat in 9.203191 secs.
[01/08 08:56:55]  sf_get_cex returned in 9.259005 secs.
[01/08 08:56:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.750953e+07        4.750953e+07      4.750953e+07       0.172852       0.174072      4.750953e+07             0.0                     0.0         49.4375         12229.0                1.0                3.0                  1.0         12178.648926  -4.934830e+07   0.086426        0.086182       2.0
1        4.750958e+07        4.750953e+07      4.750958e+07   49437.586426      49.437500      4.750953e+07             0.0                     0.0         49.4375         12229.0                2.0                4.0                  2.0         12178.648926  -4.934825e+07  49.437500        0.000000       3.0
2        4.750963e+07        4.750958e+07      4.750963e+07   49486.937500      49.437500      4.750958e+07             0.0                     0.0         49.4375         12229.0                0.0                2.0                  2.0         12178.648926  -4.934820e+07  49.437500        0.000000       1.0
3        4.750968e+07        4.750963e+07      4.750968e+07   49486.937500      49.437500      4.750963e+07             0.0                     0.0         49.4375         12229.0                0.0                2.0                  2.0         12178.648926  -4.934815e+07  49.437500        0.000000       1.0
4        4.750973e+07        4.750968e+07      4.750973e+07   49486.937500      49.437500      4.750968e+07             0.0                     0.0         49.4375         12229.0                0.0                2.0                  2.0         12178.648926  -4.934810e+07  49.437500        0.000000       1.0
5        4.750978e+07        4.750973e+07      4.750978e+07   49486.937500      49.437500      4.750973e+07             0.0                     0.0         49.4375         12229.0                0.0                2.0                  2.0         12178.648926  -4.934805e+07  49.437500       -0.000244       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=177/2048, buf_size=200.[0m
[01/08 08:56:55]  --------------------------------------------------------------------------------
[01/08 08:56:55]  Iteration: 181 (0 solution, 180 counterexamples)
[01/08 09:35:21]  Generator returned sat in 2297.681051 secs.
[01/08 09:35:22]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/08 09:35:27]  Improved gap from 0.0 to 48.4375
[01/08 09:35:28]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/08 09:35:28]  Verifer returned sat in 5.615020 secs.
[01/08 09:35:28]  sf_get_cex returned in 5.672044 secs.
[01/08 09:35:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.749730e+07        4.749730e+07      4.749730e+07       0.172852       0.174072      4.749730e+07        0.086426                0.000000       49.523926         84742.0                2.0                4.0                  2.0                  2.0  -4.934830e+07   0.000000       -0.086426       3.0
1        4.749735e+07        4.749730e+07      4.749735e+07   49437.586426      49.437500      4.749730e+07        0.086426                0.086426       49.523926         84742.0                0.0                1.0                  2.0                  1.0  -4.934825e+07  49.351074       -0.086426       0.0
2        4.749740e+07        4.749735e+07      4.749740e+07   49573.363281      49.523926      4.749735e+07        0.086426                0.086426       49.523926         84742.0                0.0                1.0                  2.0                  1.0  -4.934820e+07  49.437500        0.000000       0.0
3        4.749745e+07        4.749740e+07      4.749745e+07   49573.449707      49.523926      4.749740e+07        0.086426                0.086426       49.523926         84742.0                0.0                2.0                  2.0                  1.0  -4.934815e+07  49.523926        0.000000       1.0
4        4.749750e+07        4.749745e+07      4.749750e+07   49487.110352      49.437500      4.749745e+07        0.086426                0.086426       49.523926         84742.0                0.0                2.0                  2.0                  1.0  -4.934810e+07  49.437500       -1.990723       1.0
5        4.749755e+07        4.749750e+07      4.749755e+07   49487.023926      49.437500      4.749750e+07        0.086426                0.086426       49.523926         84742.0                0.0                1.0                  2.0                  1.0  -4.934810e+07  47.446777      -52.553223       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=177/2048, buf_size=200.[0m
[01/08 09:35:28]  --------------------------------------------------------------------------------
[01/08 09:35:28]  Iteration: 182 (0 solution, 181 counterexamples)
[01/08 11:50:29]  Generator returned sat in 8092.278852 secs.
[01/08 11:50:29]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + 1max_c + 1min_qdel + 1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 11:50:48]  Improved gap from 13.56787109375 to 48.4375
[01/08 11:50:48]  Improved number of small numbers from 69 to 128 out of a max of 128
[01/08 11:50:48]  Verifer returned sat in 18.758303 secs.
[01/08 11:50:48]  sf_get_cex returned in 18.818163 secs.
[01/08 11:50:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.754667e+07        4.754667e+07      4.754667e+07       0.172607       0.173828      4.754667e+07        0.010742                0.000000       98.896484           100.0                0.0                2.0                  0.0                  2.0  -4.934830e+07   2.228516        2.228271       1.0
1        4.754672e+07        4.754667e+07      4.754672e+07   49439.739258      49.437500      4.754667e+07        0.010742                0.010742       98.896484           100.0                0.0                2.0                  0.0                  2.0  -4.934826e+07  49.437500        0.000000       1.0
2        4.754677e+07        4.754672e+07      4.754677e+07   49486.948242      49.437500      4.754672e+07        0.010742                0.010742       98.896484           100.0                0.0                2.0                  0.0                  2.0  -4.934821e+07  49.437500        0.000000       1.0
3        4.754682e+07        4.754677e+07      4.754682e+07   49486.948242      49.437500      4.754677e+07        0.010742                0.010742       98.896484           100.0                0.0                2.0                  0.0                  2.0  -4.934815e+07  49.437500        0.000000       1.0
4        4.754687e+07        4.754682e+07      4.754687e+07   49486.948242      49.437500      4.754682e+07        0.010742                0.010742       98.896484           100.0                0.0                2.0                  0.0                  2.0  -4.934810e+07  49.437500        0.000000       1.0
5        4.754692e+07        4.754687e+07      4.754692e+07   49486.948242      49.437500      4.754687e+07        0.010742                0.010742       98.896484           100.0                0.0                1.0                  0.0                  2.0  -4.934805e+07  49.427002       -0.010498       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=11/1024, buf_size=200.[0m
[01/08 11:50:48]  --------------------------------------------------------------------------------
[01/08 11:50:48]  Iteration: 183 (0 solution, 182 counterexamples)
[01/08 12:51:03]  Generator returned sat in 3606.130916 secs.
[01/08 12:51:04]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 12:51:07]  Improved gap from 0.586865234375 to 100
[01/08 12:51:09]  Improved number of small numbers from 64 to 75 out of a max of 128
[01/08 12:51:09]  Verifer returned sat in 4.444718 secs.
[01/08 12:51:09]  sf_get_cex returned in 4.530804 secs.
[01/08 12:51:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.750612e+07        4.750592e+07      4.750612e+07       0.172363       0.173584      4.750592e+07        0.043213                0.000000       97.681051      109.637695                0.0                2.0                  0.0                  2.0  -4.930766e+07  195.405192       99.956787       1.0
1        4.750621e+07        4.750612e+07      4.750621e+07   97876.499023      97.681051      4.750612e+07        0.043213                0.043213       97.724202      109.637695                0.0                1.0                  0.0                  1.0  -4.930766e+07   97.637838       97.637838       0.0
2        4.750642e+07        4.750612e+07      4.750642e+07  202502.934143     202.405253      4.750612e+07        0.086304                0.043213       97.724202      109.637695                0.0                2.0                  0.0                  1.0  -4.930766e+07  297.810506      200.000000       1.0
3        4.750662e+07        4.750632e+07      4.750662e+07  202703.149902     202.405253      4.750632e+07      102.491557                0.086304       98.905253      109.637695                0.0                2.0                  0.0                  1.0  -4.930766e+07  200.000000      200.000000       1.0
4        4.750682e+07        4.750632e+07      4.750682e+07  205069.845886     204.767354      4.750632e+07      207.258911              102.491557       98.905253      109.637695                0.0                2.0                  0.0                  1.0  -4.930766e+07  300.000000      200.000000       1.0
5        4.750703e+07        4.750642e+07      4.750703e+07  205274.613241     204.767354      4.750642e+07      312.026265              207.258911       98.905253      100.043152                1.0                3.0                  1.0                  1.0  -4.930766e+07  299.956848      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=15334591/49152, alpha=113981/16384, buf_size=200.[0m
[01/08 12:51:09]  --------------------------------------------------------------------------------
[01/08 12:51:09]  Iteration: 184 (0 solution, 183 counterexamples)
[01/08 14:23:27]  Generator returned sat in 5524.259571 secs.
[01/08 14:23:28]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + 1max_qdel + 1min_buffer + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/08 14:24:02]  Improved gap from 0.0 to 48.4375
[01/08 14:24:02]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/08 14:24:02]  Verifer returned sat in 34.028603 secs.
[01/08 14:24:02]  sf_get_cex returned in 34.119757 secs.
[01/08 14:24:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.753213e+07        4.753213e+07      4.753213e+07       0.172363       0.173340      4.753213e+07             0.0                     0.0       99.219727    45792.305664                2.0                4.0                  2.0         45685.999756  -4.930806e+07   0.000000        0.000000       3.0
1        4.753218e+07        4.753213e+07      4.753218e+07   49523.681641      49.523682      4.753213e+07             0.0                     0.0       99.219727    45792.305664                0.0                1.0                  2.0         45685.999756  -4.930801e+07  49.437500       -0.085938       0.0
2        4.753223e+07        4.753218e+07      4.753223e+07   49573.119141      49.523682      4.753218e+07             0.0                     0.0       99.219727    45792.305664                0.0                1.0                  2.0         45685.999756  -4.930796e+07  49.437500        0.000000       0.0
3        4.753228e+07        4.753223e+07      4.753228e+07   49573.119141      49.523682      4.753223e+07             0.0                     0.0       99.219727    45792.305664                0.0                1.0                  2.0         45685.999756  -4.930791e+07  48.437500        0.000000       0.0
4        4.753233e+07        4.753228e+07      4.753233e+07   49572.119141      49.523682      4.753228e+07             0.0                     0.0       99.219727    45792.305664                0.0                2.0                  2.0         45685.999756  -4.930786e+07  49.523682        0.000000       1.0
5        4.753237e+07        4.753233e+07      4.753237e+07   49573.205322      49.523682      4.753233e+07             0.0                     0.0       99.219727    45792.305664                0.0                1.0                  2.0         45685.999756  -4.930781e+07  49.437500       -0.085938       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=353/4096, buf_size=200.[0m
[01/08 14:24:03]  --------------------------------------------------------------------------------
[01/08 14:24:03]  Iteration: 185 (0 solution, 184 counterexamples)
[01/08 14:50:20]  Generator returned sat in 1563.540155 secs.
[01/08 14:50:21]  Candidate solution: 
[1m[94mif (+ -1min_c + 1min_qdel + 1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -1max_qdel + 1min_buffer + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/08 14:50:27]  Improved gap from 0.0 to 100
[01/08 14:50:28]  Improved number of small numbers from 94 to 100 out of a max of 128
[01/08 14:50:28]  Verifer returned sat in 6.411179 secs.
[01/08 14:50:28]  sf_get_cex returned in 6.497354 secs.
[01/08 14:50:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.747686e+07        4.747658e+07      4.747686e+07       0.172119       0.173340      4.747658e+07        0.000000                0.000000       92.525879      111.335938                0.0                2.0                  0.0             3.043213  -4.930781e+07  277.663818      188.663818       1.0
1        4.747696e+07        4.747669e+07      4.747696e+07  109570.754639     109.293091      4.747669e+07        0.000000                0.000000       92.525879      111.335938                0.0                2.0                  0.0             3.043213  -4.930781e+07  275.534668      197.956909       1.0
2        4.747707e+07        4.747686e+07      4.747707e+07  109568.625488     109.293091      4.747686e+07        7.250000                0.000000       92.568970      111.335938                0.0                2.0                  0.0             3.043213  -4.930781e+07  211.293091      200.000000       1.0
3        4.747718e+07        4.747697e+07      4.747718e+07  109554.724731     109.336182      4.747697e+07       16.586182                7.250000       97.250000      111.335938                0.0                2.0                  0.0             2.000000  -4.930781e+07  200.000000      200.000000       1.0
4        4.747730e+07        4.747697e+07      4.747730e+07  114233.798096     114.017212      4.747697e+07       30.603394               16.586182       97.250000      111.293091                0.0                2.0                  0.0             2.000000  -4.930781e+07  300.000000      200.000000       1.0
5        4.747741e+07        4.747708e+07      4.747741e+07  114347.815308     114.017212      4.747708e+07       44.620605               30.603394       97.250000      111.293091                1.0                3.0                  1.0             2.000000  -4.930781e+07  288.620972      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=91383/2048, alpha=137357/8192, buf_size=200.[0m
[01/08 14:50:28]  --------------------------------------------------------------------------------
[01/08 14:50:28]  Iteration: 186 (0 solution, 185 counterexamples)
[01/08 16:38:14]  Generator returned sat in 6451.364922 secs.
[01/08 16:38:14]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/08 16:38:35]  Improved gap from 0.0860595703125 to 48.4375
[01/08 16:38:36]  Improved number of small numbers from 69 to 74 out of a max of 128
[01/08 16:38:36]  Verifer returned sat in 21.588952 secs.
[01/08 16:38:36]  sf_get_cex returned in 21.676009 secs.
[01/08 16:38:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.747691e+07        4.747691e+07      4.747691e+07       0.171875       0.173096      4.747691e+07         0.04303                 0.00000        98.96106           100.0                0.0                2.0                  0.0                  2.0  -4.930805e+07   0.000000        0.000000       1.0
1        4.747696e+07        4.747692e+07      4.747696e+07   49523.602600      49.523560      4.747692e+07         0.04303                 0.04303        98.96106           100.0                0.0                1.0                  0.0                  1.0  -4.930800e+07  48.437500       -0.000122       0.0
2        4.747701e+07        4.747696e+07      4.747701e+07   49529.010315      49.480530      4.747696e+07         0.04303                 0.04303        98.96106           100.0                0.0                1.0                  0.0                  1.0  -4.930795e+07  48.437500        0.000000       0.0
3        4.747706e+07        4.747701e+07      4.747706e+07   49529.010315      49.480530      4.747701e+07         0.04303                 0.04303        98.96106           100.0                0.0                2.0                  0.0                  1.0  -4.930790e+07  49.480530        0.000000       1.0
4        4.747711e+07        4.747706e+07      4.747711e+07   49530.053345      49.480530      4.747706e+07         0.04303                 0.04303        98.96106           100.0                0.0                2.0                  0.0                  1.0  -4.930785e+07  49.480530       -1.991882       1.0
5        4.747716e+07        4.747711e+07      4.747716e+07   49530.053345      49.480530      4.747711e+07         0.04303                 0.04303        98.96106           100.0                0.0                1.0                  0.0                  1.0  -4.930785e+07  47.488525      -52.511108       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=705/16384, buf_size=200.[0m
[01/08 16:38:36]  --------------------------------------------------------------------------------
[01/08 16:38:36]  Iteration: 187 (0 solution, 186 counterexamples)
[01/08 18:31:52]  Generator returned sat in 6781.933189 secs.
[01/08 18:31:53]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 18:32:03]  Improved gap from 19.664429530201343 to 48.4375
[01/08 18:32:03]  Improved number of small numbers from 97 to 128 out of a max of 128
[01/08 18:32:03]  Verifer returned sat in 10.024033 secs.
[01/08 18:32:03]  sf_get_cex returned in 10.078936 secs.
[01/08 18:32:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.747834e+07        4.747834e+07      4.747834e+07       0.171875       0.173096      4.747834e+07        0.085938                0.000000       97.046875      104.132568                1.0                3.0                  1.0                  2.0  -4.930947e+07   5.734375        5.734131       2.0
1        4.747839e+07        4.747834e+07      4.747839e+07   48529.257812      48.523438      4.747834e+07        0.085938                0.085938       97.046875      104.132568                0.0                1.0                  1.0                  1.0  -4.930943e+07  48.437500        0.000000       0.0
2        4.747844e+07        4.747839e+07      4.747844e+07   48571.960938      48.523438      4.747839e+07        0.085938                0.085938       97.046875      104.132568                0.0                2.0                  1.0                  1.0  -4.930938e+07  48.523438        0.000000       1.0
3        4.747849e+07        4.747844e+07      4.747849e+07   48572.046875      48.523438      4.747844e+07        0.085938                0.085938       97.046875      104.132568                0.0                2.0                  1.0                  1.0  -4.930933e+07  48.523438        0.000000       1.0
4        4.747854e+07        4.747849e+07      4.747854e+07   48572.046875      48.523438      4.747849e+07        0.085938                0.085938       97.046875      104.132568                0.0                2.0                  1.0                  1.0  -4.930927e+07  48.523438       -0.085938       1.0
5        4.747858e+07        4.747854e+07      4.747858e+07   48572.046875      48.523438      4.747854e+07        0.085938                0.085938       97.046875      104.132568                0.0                1.0                  1.0                  1.0  -4.930927e+07  48.437500      -51.562500       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=11/128, buf_size=200.[0m
[01/08 18:32:03]  --------------------------------------------------------------------------------
[01/08 18:32:03]  Iteration: 188 (0 solution, 187 counterexamples)
[01/08 19:28:26]  Generator returned sat in 3373.161573 secs.
[01/08 19:28:27]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 19:28:35]  Improved gap from 0.0 to 100
[01/08 19:28:35]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/08 19:28:35]  Verifer returned sat in 8.146882 secs.
[01/08 19:28:35]  sf_get_cex returned in 8.234535 secs.
[01/08 19:28:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.747832e+07        4.747818e+07      4.747832e+07       0.171875       0.173096      4.747818e+07        0.000000                0.000000       72.000000      166.564453                0.0                2.0                  0.0             2.021484  -4.930929e+07  139.000000      130.000000       1.0
1        4.747848e+07        4.747829e+07      4.747848e+07  162117.515625     161.978516      4.747829e+07        0.000000                0.000000       72.000000      166.564453                0.0                2.0                  0.0             2.021484  -4.930929e+07  191.978516      191.978516       1.0
2        4.747864e+07        4.747832e+07      4.747864e+07  162170.494141     161.978516      4.747832e+07       53.957031                0.000000       72.000000      166.564453                0.0                2.0                  0.0             2.021484  -4.930929e+07  266.542969      200.000000       1.0
3        4.747880e+07        4.747849e+07      4.747880e+07  162299.015625     161.978516      4.747849e+07      115.935547               53.957031       83.271484      166.564453                0.0                2.0                  0.0             2.000000  -4.930929e+07  200.000000      200.000000       1.0
4        4.747899e+07        4.747849e+07      4.747899e+07  184837.419922     184.521484      4.747849e+07      200.457031              115.935547       83.271484      166.542969                0.0                2.0                  0.0             2.000000  -4.930929e+07  300.000000      200.000000       1.0
5        4.747917e+07        4.747865e+07      4.747917e+07  185021.941406     184.521484      4.747865e+07      284.978516              200.457031       83.271484      166.457031                1.0                3.0                  1.0             2.000000  -4.930929e+07  233.542969      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=145909/512, alpha=9205/512, buf_size=200.[0m
[01/08 19:28:35]  --------------------------------------------------------------------------------
[01/08 19:28:35]  Iteration: 189 (0 solution, 188 counterexamples)
[01/08 20:16:17]  Generator returned sat in 2847.293616 secs.
[01/08 20:16:18]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/08 20:16:45]  Improved gap from 0.04296875 to 48.4375
[01/08 20:16:46]  Improved number of small numbers from 111 to 111 out of a max of 128
[01/08 20:16:46]  Verifer returned sat in 28.464637 secs.
[01/08 20:16:46]  sf_get_cex returned in 28.553673 secs.
[01/08 20:16:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.747857e+07        4.747855e+07      4.747857e+07       0.171875       0.172852      4.747855e+07        0.002248                0.000000       37.637815           100.0                0.0                1.0                  0.0                  2.0  -4.930949e+07  14.604879       14.604879       0.0
1        4.747860e+07        4.747855e+07      4.747860e+07   37092.732127      37.078125      4.747855e+07        0.002248                0.002248       37.637815           100.0                0.0                1.0                  0.0                  1.0  -4.930944e+07  51.683004       -0.002248       0.0
2        4.747864e+07        4.747860e+07      4.747864e+07   37129.810252      37.078125      4.747860e+07        0.002248                0.002248       37.637815           100.0                0.0                1.0                  0.0                  1.0  -4.930939e+07  37.075877      -12.361623       0.0
3        4.747868e+07        4.747865e+07      4.747868e+07   37115.203125      37.078125      4.747865e+07        0.002248                0.002248       37.637815           100.0                0.0                1.0                  0.0                  1.0  -4.930934e+07  24.716502      -24.720998       0.0
4        4.747871e+07        4.747870e+07      4.747871e+07   37102.843750      37.078125      4.747870e+07        0.002248                0.002248       37.640063           100.0                0.0                1.0                  0.0                  1.0  -4.930929e+07  12.357127      -37.080373       0.0
5        4.747875e+07        4.747875e+07      4.747875e+07   37092.732127      37.080373      4.747875e+07        0.002248                0.002248       39.999550           100.0                0.0                1.0                  0.0                  1.0  -4.930929e+07   0.000000     -100.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2241/4004, buf_size=200.[0m
[01/08 20:16:47]  --------------------------------------------------------------------------------
[01/08 20:16:47]  Iteration: 190 (0 solution, 189 counterexamples)
[01/08 22:30:08]  Generator returned sat in 7986.731312 secs.
[01/08 22:30:09]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/08 22:30:23]  Improved gap from 3.3515625 to 48.4375
[01/08 22:30:23]  Improved number of small numbers from 98 to 128 out of a max of 128
[01/08 22:30:23]  Verifer returned sat in 14.388191 secs.
[01/08 22:30:23]  sf_get_cex returned in 14.448616 secs.
[01/08 22:30:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.747906e+07        4.747905e+07      4.747906e+07       0.171631       0.172607      4.747905e+07             0.0                     0.0       97.046875      100.057129                0.0                2.0                  0.0                  2.0  -4.930999e+07   5.820312        5.820068       1.0
1        4.747911e+07        4.747905e+07      4.747911e+07   48529.257812      48.523438      4.747905e+07             0.0                     0.0       97.046875      100.057129                1.0                3.0                  1.0                  2.0  -4.930994e+07  54.257568        0.000000       2.0
2        4.747915e+07        4.747911e+07      4.747915e+07   48491.757568      48.437500      4.747911e+07             0.0                     0.0       97.046875      100.057129                0.0                2.0                  1.0                  2.0  -4.930989e+07  48.437500        0.000000       1.0
3        4.747920e+07        4.747915e+07      4.747920e+07   48571.875000      48.523438      4.747915e+07             0.0                     0.0       97.046875      100.057129                0.0                2.0                  1.0                  2.0  -4.930984e+07  48.523438        0.000000       1.0
4        4.747925e+07        4.747920e+07      4.747925e+07   48571.960938      48.523438      4.747920e+07             0.0                     0.0       97.046875      100.057129                0.0                2.0                  1.0                  2.0  -4.930979e+07  48.523438       -0.086182       1.0
5        4.747930e+07        4.747925e+07      4.747930e+07   48571.960938      48.523438      4.747925e+07             0.0                     0.0       97.046875      100.057129                0.0                1.0                  1.0                  2.0  -4.930973e+07  48.437256       -0.000244       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=11/128, buf_size=200.[0m
[01/08 22:30:23]  --------------------------------------------------------------------------------
[01/08 22:30:23]  Iteration: 191 (0 solution, 190 counterexamples)
[01/08 23:54:35]  Generator returned sat in 5043.039537 secs.
[01/08 23:54:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1min_qdel + -1min_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/08 23:54:58]  Improved gap from 2.372093023255814 to 48.4375
[01/08 23:55:00]  Improved number of small numbers from 65 to 81 out of a max of 128
[01/08 23:55:00]  Verifer returned sat in 23.238536 secs.
[01/08 23:55:00]  sf_get_cex returned in 23.326566 secs.
[01/08 23:55:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.737933e+07        4.737933e+07      4.737933e+07       0.171387       0.172363      4.737933e+07        0.085815                0.000000       97.414185      115.414307                2.0                4.0                  2.0             3.999756  -4.921026e+07   0.000000       -0.000183       3.0
1        4.737937e+07        4.737933e+07      4.737937e+07   48707.178101      48.707092      4.737933e+07        0.085815                0.085815       97.414185      115.414307                0.0                1.0                  2.0             1.000000  -4.921021e+07  48.621216       -0.000122       0.0
2        4.737942e+07        4.737937e+07      4.737942e+07   48755.799316      48.707092      4.737937e+07        0.085815                0.085815       97.414185      115.414307                0.0                1.0                  2.0             1.000000  -4.921016e+07  48.437500        0.000000       0.0
3        4.737947e+07        4.737942e+07      4.737947e+07   48755.615601      48.707092      4.737942e+07        0.085815                0.085815       97.414185      115.414307                0.0                2.0                  2.0             1.000000  -4.921011e+07  48.707092        0.000000       1.0
4        4.737952e+07        4.737947e+07      4.737952e+07   48755.885193      48.707092      4.737947e+07        0.085815                0.085815       97.414185      115.414307                0.0                2.0                  2.0             1.000000  -4.921006e+07  48.707092       -0.000183       1.0
5        4.737957e+07        4.737952e+07      4.737957e+07   48755.885193      48.707092      4.737952e+07        0.085815                0.085815       97.414185      115.414307                0.0                1.0                  2.0             1.000000  -4.921000e+07  48.621216       -0.000122       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=81569/4096, buf_size=200.[0m
[01/08 23:55:00]  --------------------------------------------------------------------------------
[01/08 23:55:00]  Iteration: 192 (0 solution, 191 counterexamples)
[01/09 00:19:47]  Generator returned sat in 1472.735281 secs.
[01/09 00:19:48]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/09 00:20:05]  Improved gap from 8.923482849604222 to 48.4375
[01/09 00:20:05]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/09 00:20:05]  Verifer returned sat in 16.382077 secs.
[01/09 00:20:05]  sf_get_cex returned in 16.471246 secs.
[01/09 00:20:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.737932e+07        4.737932e+07      4.737932e+07       0.171387       0.172363      4.737932e+07             0.0                     0.0       49.960693           100.0                1.0                3.0                  1.0            48.039307  -4.921025e+07   0.000000        0.000000       2.0
1        4.737937e+07        4.737932e+07      4.737937e+07   49875.000000      49.875000      4.737932e+07             0.0                     0.0       49.960693           100.0                1.0                3.0                  1.0            48.039307  -4.921020e+07  49.875000        0.000000       2.0
2        4.737942e+07        4.737937e+07      4.737942e+07   49924.875000      49.875000      4.737937e+07             0.0                     0.0       49.960693           100.0                0.0                2.0                  1.0            48.039307  -4.921015e+07  49.875000        0.000000       1.0
3        4.737947e+07        4.737942e+07      4.737947e+07   49924.875000      49.875000      4.737942e+07             0.0                     0.0       49.960693           100.0                0.0                2.0                  1.0            48.039307  -4.921010e+07  49.875000        0.000000       1.0
4        4.737952e+07        4.737947e+07      4.737952e+07   49924.875000      49.875000      4.737947e+07             0.0                     0.0       49.960693           100.0                0.0                2.0                  1.0            48.039307  -4.921005e+07  49.875000        0.000000       1.0
5        4.737957e+07        4.737952e+07      4.737957e+07   49924.875000      49.875000      4.737952e+07             0.0                     0.0       49.960693           100.0                0.0                1.0                  1.0            48.039307  -4.921000e+07  49.460693       -0.414307       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=351/4096, buf_size=200.[0m
[01/09 00:20:05]  --------------------------------------------------------------------------------
[01/09 00:20:05]  Iteration: 193 (0 solution, 192 counterexamples)
[01/09 00:23:44]  Generator returned sat in 203.994140 secs.
[01/09 00:23:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1max_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/09 00:24:06]  Improved gap from 0.0 to 48.4375
[01/09 00:24:06]  Improved number of small numbers from 89 to 128 out of a max of 128
[01/09 00:24:06]  Verifer returned sat in 21.411999 secs.
[01/09 00:24:06]  sf_get_cex returned in 21.500959 secs.
[01/09 00:24:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.737932e+07        4.737932e+07      4.737932e+07       0.171143       0.171875      4.737932e+07             0.0                     0.0       97.920898      103.835449                2.0                4.0                  2.0             8.085693  -4.921030e+07   0.085449        0.085449       3.0
1        4.737937e+07        4.737932e+07      4.737937e+07   48875.085449      48.875000      4.737932e+07             0.0                     0.0       97.920898      103.835449                2.0                4.0                  2.0             8.085693  -4.921025e+07  48.875000        0.000000       3.0
2        4.737942e+07        4.737937e+07      4.737942e+07   48923.875000      48.875000      4.737937e+07             0.0                     0.0       97.920898      103.835449                0.0                2.0                  2.0             8.085693  -4.921020e+07  48.875000        0.000000       1.0
3        4.737947e+07        4.737942e+07      4.737947e+07   48923.875000      48.875000      4.737942e+07             0.0                     0.0       97.920898      103.835449                0.0                2.0                  2.0             8.085693  -4.921015e+07  48.875000        0.000000       1.0
4        4.737952e+07        4.737947e+07      4.737952e+07   48923.875000      48.875000      4.737947e+07             0.0                     0.0       97.920898      103.835449                0.0                2.0                  2.0             8.085693  -4.921010e+07  48.875000        0.000000       1.0
5        4.737956e+07        4.737952e+07      4.737956e+07   48923.875000      48.875000      4.737952e+07             0.0                     0.0       97.920898      103.835449                0.0                1.0                  2.0             8.085693  -4.921010e+07  48.789551      -51.124756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=175/2048, buf_size=200.[0m
[01/09 00:24:06]  --------------------------------------------------------------------------------
[01/09 00:24:06]  Iteration: 194 (0 solution, 193 counterexamples)
[01/09 00:49:58]  Generator returned sat in 1536.865920 secs.
[01/09 00:49:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1max_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/09 00:50:15]  Improved gap from 48.875 to 48.4375
[01/09 00:50:17]  Improved number of small numbers from 79 to 89 out of a max of 128
[01/09 00:50:17]  Verifer returned sat in 17.797812 secs.
[01/09 00:50:17]  sf_get_cex returned in 17.883677 secs.
[01/09 00:50:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.765409e+07        4.765409e+07      4.765409e+07       0.170898       0.171875      4.765409e+07             0.0                     0.0       96.960571      107.960693                0.0                1.0                  0.0                  2.0  -4.918051e+07   5.993286       -0.042664       0.0
1        4.765414e+07        4.765409e+07      4.765414e+07   48486.278931      48.480286      4.765409e+07             0.0                     0.0       96.960571      107.960693                0.0                1.0                  0.0                  2.0  -4.918046e+07  48.437500        0.000000       0.0
2        4.765419e+07        4.765414e+07      4.765419e+07   48528.723145      48.480286      4.765414e+07             0.0                     0.0       96.960571      107.960693                0.0                2.0                  0.0                  2.0  -4.918041e+07  48.480286       -0.042786       1.0
3        4.765424e+07        4.765419e+07      4.765424e+07   48528.765930      48.480286      4.765419e+07             0.0                     0.0       96.960571      107.960693                0.0                1.0                  0.0                  2.0  -4.918036e+07  48.437500        0.000000       0.0
4        4.765429e+07        4.765424e+07      4.765429e+07   48528.723145      48.480286      4.765424e+07             0.0                     0.0       96.960571      107.960693                0.0                2.0                  0.0                  2.0  -4.918030e+07  48.480286       -0.000183       1.0
5        4.765434e+07        4.765429e+07      4.765434e+07   48528.765930      48.480286      4.765429e+07             0.0                     0.0       96.960571      107.960693                0.0                1.0                  0.0                  2.0  -4.918025e+07  48.437500       -0.000122       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=11/256, buf_size=200.[0m
[01/09 00:50:17]  --------------------------------------------------------------------------------
[01/09 00:50:17]  Iteration: 195 (0 solution, 194 counterexamples)
[01/09 03:19:08]  Generator returned sat in 8916.206621 secs.
[01/09 03:19:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/09 03:19:21]  Improved gap from 0.0 to 48.4375
[01/09 03:19:22]  Improved number of small numbers from 104 to 128 out of a max of 128
[01/09 03:19:22]  Verifer returned sat in 12.460594 secs.
[01/09 03:19:22]  sf_get_cex returned in 12.515128 secs.
[01/09 03:19:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.755355e+07        4.755355e+07      4.755355e+07       0.170898       0.171875      4.755355e+07             0.0                     0.0       99.045898      109.045898                1.0                3.0                  1.0             2.085449  -4.907997e+07   0.085205        0.085205       2.0
1        4.755360e+07        4.755355e+07      4.755360e+07   49437.585205      49.437500      4.755355e+07             0.0                     0.0       99.045898      109.045898                2.0                4.0                  2.0             2.085449  -4.907992e+07  49.437500        0.000000       3.0
2        4.755365e+07        4.755360e+07      4.755365e+07   49486.937500      49.437500      4.755360e+07             0.0                     0.0       99.045898      109.045898                0.0                2.0                  2.0             2.085449  -4.907987e+07  49.437500        0.000000       1.0
3        4.755370e+07        4.755365e+07      4.755370e+07   49486.937500      49.437500      4.755365e+07             0.0                     0.0       99.045898      109.045898                0.0                2.0                  2.0             2.085449  -4.907981e+07  49.437500        0.000000       1.0
4        4.755375e+07        4.755370e+07      4.755375e+07   49486.937500      49.437500      4.755370e+07             0.0                     0.0       99.045898      109.045898                0.0                2.0                  2.0             2.085449  -4.907976e+07  49.437500        0.000000       1.0
5        4.755380e+07        4.755375e+07      4.755380e+07   49486.937500      49.437500      4.755375e+07             0.0                     0.0       99.045898      109.045898                0.0                1.0                  2.0             2.085449  -4.907976e+07  49.351807      -50.562500       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=175/2048, buf_size=200.[0m
[01/09 03:19:22]  --------------------------------------------------------------------------------
[01/09 03:19:22]  Iteration: 196 (0 solution, 195 counterexamples)
[01/09 03:39:47]  Generator returned sat in 1215.615545 secs.
[01/09 03:39:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1max_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c + -1alpha)
elif (+ 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 03:39:50]  Improved gap from 0.003256839362661589 to 100
[01/09 03:39:51]  Improved number of small numbers from 86 to 93 out of a max of 128
[01/09 03:39:51]  Verifer returned sat in 3.338734 secs.
[01/09 03:39:51]  sf_get_cex returned in 3.392174 secs.
[01/09 03:39:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.750681e+07        4.750664e+07      4.750681e+07       0.170654       0.171875      4.750664e+07        0.085449                0.000000       93.168077    15297.934082                0.0                1.0                  0.0                  2.0  -4.907992e+07  167.421604      167.421604       0.0
1        4.750686e+07        4.750664e+07      4.750686e+07   46751.545681      46.584039      4.750664e+07        0.085449                0.085449       93.168077    15297.934082                0.0                1.0                  0.0                  1.0  -4.907992e+07  214.005642      114.005642       0.0
2        4.750704e+07        4.750683e+07      4.750704e+07  186550.245605     186.336155      4.750683e+07        0.427246                0.085449       93.253526    15297.934082                0.0                2.0                  0.0                  1.0  -4.907992e+07  213.492947      200.000000       1.0
3        4.750723e+07        4.750686e+07      4.750723e+07  186720.973145     186.507053      4.750686e+07       86.934299                0.427246       93.253526    15297.934082                0.0                2.0                  0.0                  1.0  -4.907992e+07  285.908908      200.000000       1.0
4        4.750742e+07        4.750702e+07      4.750742e+07  186879.896159     186.507053      4.750702e+07      173.441352               86.934299       93.338976      186.848850                1.0                3.0                  1.0                  1.0  -4.907992e+07  226.644097      200.000000       2.0
5        4.750760e+07        4.750711e+07      4.750760e+07  187078.036838     186.677951      4.750711e+07      260.119303              173.441352       93.338976      139.880371                1.0                3.0                  1.0                  1.0  -4.907992e+07  233.732205      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=99853/384, alpha=349/4096, buf_size=200.[0m
[01/09 03:39:51]  --------------------------------------------------------------------------------
[01/09 03:39:51]  Iteration: 197 (0 solution, 196 counterexamples)
[01/09 04:15:04]  Generator returned sat in 2104.065408 secs.
[01/09 04:15:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + 1alpha)[0m
[01/09 04:15:21]  Improved gap from 11.344444444444445 to 48.4375
[01/09 04:15:21]  Improved number of small numbers from 128 to 128 out of a max of 128
[01/09 04:15:21]  Verifer returned sat in 15.883687 secs.
[01/09 04:15:21]  sf_get_cex returned in 15.940237 secs.
[01/09 04:15:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t   queue_t  bottle_queue_t  qdelay_t
0        4.764401e+07        4.764401e+07      4.764401e+07       0.170654       0.171875      4.764401e+07         0.03125                 0.00000            99.0         26567.0                2.0                4.0                  2.0               5891.0  -4.907996e+07   2.18750         2.18750       3.0
1        4.764406e+07        4.764401e+07      4.764406e+07   49439.718750      49.437500      4.764401e+07         0.03125                 0.03125            99.0         26567.0                1.0                3.0                  2.0               5891.0  -4.907992e+07  51.59375         0.00000       2.0
2        4.764411e+07        4.764406e+07      4.764411e+07   49489.125000      49.437500      4.764406e+07         0.03125                 0.03125            99.0         26567.0                0.0                2.0                  2.0               5891.0  -4.907987e+07  49.43750         0.00000       1.0
3        4.764416e+07        4.764411e+07      4.764416e+07   49486.968750      49.437500      4.764411e+07         0.03125                 0.03125            99.0         26567.0                0.0                2.0                  2.0               5891.0  -4.907981e+07  49.43750         0.00000       1.0
4        4.764421e+07        4.764416e+07      4.764421e+07   49486.968750      49.437500      4.764416e+07         0.03125                 0.03125            99.0         26567.0                0.0                2.0                  2.0               5891.0  -4.907976e+07  49.43750        -0.03125       1.0
5        4.764426e+07        4.764421e+07      4.764426e+07   49486.968750      49.437500      4.764421e+07         0.03125                 0.03125            99.0         26567.0                0.0                1.0                  2.0               5891.0  -4.907976e+07  49.40625       -50.59375       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1/16, buf_size=200.[0m
[01/09 04:15:21]  --------------------------------------------------------------------------------
[01/09 04:15:21]  Iteration: 198 (0 solution, 197 counterexamples)
[01/09 04:48:09]  Generator returned sat in 1958.552892 secs.
[01/09 04:48:10]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
elif (+ 1min_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/09 04:48:18]  Improved gap from 0.0853271484375 to 48.4375
[01/09 04:48:19]  Improved number of small numbers from 70 to 72 out of a max of 128
[01/09 04:48:19]  Verifer returned sat in 9.242098 secs.
[01/09 04:48:19]  sf_get_cex returned in 9.296601 secs.
[01/09 04:48:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.764380e+07        4.764380e+07      4.764380e+07       0.170654       0.171387      4.764380e+07        0.085327                0.000000       24.304077           100.0                1.0                3.0                  1.0             4.085449  -4.907996e+07   4.970093        4.970093       2.0
1        4.764385e+07        4.764380e+07      4.764385e+07   48613.209717      48.608154      4.764380e+07        0.085327                0.085327       24.304077           100.0                0.0                1.0                  1.0             1.000000  -4.907992e+07  48.522827       -0.255981       0.0
2        4.764390e+07        4.764385e+07      4.764390e+07   48912.743896      48.864136      4.764385e+07        0.085327                0.085327       24.389404           100.0                0.0                1.0                  1.0             1.000000  -4.907986e+07  48.608154        0.000000       0.0
3        4.764395e+07        4.764390e+07      4.764395e+07   49083.483521      49.034790      4.764390e+07        0.085327                0.085327       32.462321           100.0                0.0                2.0                  1.0             1.000000  -4.907981e+07  49.034790        0.000000       1.0
4        4.764398e+07        4.764395e+07      4.764398e+07   32511.441081      32.462321      4.764395e+07        0.085327                0.085327       36.605438           100.0                0.0                2.0                  1.0             1.000000  -4.907976e+07  32.462321      -15.975179       1.0
5        4.764402e+07        4.764400e+07      4.764402e+07   36637.985881      36.605438      4.764400e+07        0.085327                0.085327       38.971851           100.0                0.0                1.0                  1.0             1.000000  -4.907971e+07  20.630259      -27.807363       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=2097/8192, buf_size=200.[0m
[01/09 04:48:19]  --------------------------------------------------------------------------------
[01/09 04:48:19]  Iteration: 199 (0 solution, 198 counterexamples)
[01/09 05:24:22]  Generator returned sat in 2153.655603 secs.
[01/09 05:24:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/09 05:24:25]  Improved gap from 8.620689655172415 to 100
[01/09 05:24:26]  Improved number of small numbers from 57 to 60 out of a max of 128
[01/09 05:24:26]  Verifer returned sat in 3.224143 secs.
[01/09 05:24:26]  sf_get_cex returned in 3.277915 secs.
[01/09 05:24:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.764385e+07        4.764359e+07      4.764385e+07       0.170410       0.171143      4.764359e+07        0.021332                0.000000       80.042664      130.042480                1.0                3.0                  1.0                  2.0  -4.907965e+07  260.127991           200.0       2.0
1        4.764395e+07        4.764373e+07      4.764395e+07  100281.481110     100.021332      4.764373e+07        0.042664                0.021332       80.042664      130.042480                1.0                3.0                  1.0                  2.0  -4.907965e+07  220.031998           200.0       2.0
2        4.764405e+07        4.764375e+07      4.764405e+07  100241.406448     100.021332      4.764375e+07        0.063995                0.042664       80.042664      130.042480                2.0                4.0                  2.0                  2.0  -4.907965e+07  300.000000           200.0       3.0
3        4.764415e+07        4.764385e+07      4.764415e+07  100321.395782     100.021332      4.764385e+07        0.085327                0.063995       80.042664      120.031998                2.0                4.0                  2.0                  2.0  -4.907965e+07  300.000000           200.0       3.0
4        4.764425e+07        4.764399e+07      4.764425e+07  100321.417114     100.021332      4.764399e+07        0.106659                0.085327       80.063995      120.031998                1.0                3.0                  2.0                  2.0  -4.907965e+07  259.808014           200.0       2.0
5        4.764435e+07        4.764409e+07      4.764435e+07  100302.578247     100.042664      4.764409e+07        0.149323                0.106659       85.031998      120.031998                1.0                3.0                  2.0                  2.0  -4.907965e+07  259.872009           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=3495/32768, alpha=654661/32768, buf_size=200.[0m
[01/09 05:24:26]  --------------------------------------------------------------------------------
[01/09 05:24:26]  Iteration: 200 (0 solution, 199 counterexamples)
[01/09 06:24:52]  Generator returned sat in 3616.346215 secs.
[01/09 06:24:53]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 06:25:00]  Improved gap from 0.0 to 48.4375
[01/09 06:25:00]  Improved number of small numbers from 103 to 128 out of a max of 128
[01/09 06:25:00]  Verifer returned sat in 6.669732 secs.
[01/09 06:25:00]  sf_get_cex returned in 6.725698 secs.
[01/09 06:25:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.764370e+07        4.764370e+07      4.764370e+07       0.170166       0.170898      4.764370e+07        0.085205                0.000000       48.522705           100.0                2.0                4.0                  2.0             3.914551  -4.907965e+07   5.738770         5.73877       3.0
1        4.764375e+07        4.764370e+07      4.764375e+07   48528.529053      48.522705      4.764370e+07        0.085205                0.085205       48.522705           100.0                0.0                1.0                  2.0             1.000000  -4.907960e+07  48.437500         0.00000       0.0
2        4.764380e+07        4.764375e+07      4.764380e+07   48571.227783      48.522705      4.764375e+07        0.085205                0.085205       48.522705           100.0                0.0                2.0                  2.0             1.000000  -4.907955e+07  48.522705         0.00000       1.0
3        4.764385e+07        4.764380e+07      4.764385e+07   48571.312988      48.522705      4.764380e+07        0.085205                0.085205       48.522705           100.0                0.0                1.0                  2.0             1.000000  -4.907950e+07  48.437500         0.00000       0.0
4        4.764390e+07        4.764385e+07      4.764390e+07   48571.227783      48.522705      4.764385e+07        0.085205                0.085205       48.522705           100.0                0.0                1.0                  2.0             1.000000  -4.907945e+07  48.437500         0.00000       0.0
5        4.764394e+07        4.764390e+07      4.764394e+07   48571.227783      48.522705      4.764390e+07        0.085205                0.085205       48.522705           100.0                0.0                1.0                  2.0             1.000000  -4.907940e+07  48.437500         0.00000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=349/4096, buf_size=200.[0m
[01/09 06:25:00]  --------------------------------------------------------------------------------
[01/09 06:25:00]  Iteration: 201 (0 solution, 200 counterexamples)
[01/09 09:12:08]  Generator returned sat in 10017.797115 secs.
[01/09 09:12:09]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c + -1min_qdel + -1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 09:12:24]  Improved gap from 13.243697478991596 to 48.4375
[01/09 09:12:24]  Improved number of small numbers from 94 to 110 out of a max of 128
[01/09 09:12:24]  Verifer returned sat in 15.678894 secs.
[01/09 09:12:24]  sf_get_cex returned in 15.765195 secs.
[01/09 09:12:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.764370e+07        4.764370e+07      4.764370e+07       0.170166       0.170898      4.764370e+07             0.0                     0.0       97.045166      197.130127                1.0                3.0                  1.0                  2.0  -4.907964e+07   0.085205        0.000087       2.0
1        4.764375e+07        4.764370e+07      4.764375e+07   48522.668213      48.522583      4.764370e+07             0.0                     0.0       97.045166      197.130127                1.0                3.0                  1.0                  2.0  -4.907959e+07  48.522583       -0.084996       2.0
2        4.764380e+07        4.764375e+07      4.764380e+07   48571.105591      48.522583      4.764375e+07             0.0                     0.0       97.045166      197.130127                0.0                1.0                  1.0                  2.0  -4.907954e+07  48.437500        0.000000       0.0
3        4.764385e+07        4.764380e+07      4.764385e+07   48571.020508      48.522583      4.764380e+07             0.0                     0.0       97.045166      197.130127                0.0                2.0                  1.0                  2.0  -4.907949e+07  48.522583        0.000000       1.0
4        4.764390e+07        4.764385e+07      4.764390e+07   48571.105591      48.522583      4.764385e+07             0.0                     0.0       97.045166      197.130127                0.0                2.0                  1.0                  2.0  -4.907944e+07  48.522583       -0.000157       1.0
5        4.764394e+07        4.764390e+07      4.764394e+07   48571.105591      48.522583      4.764390e+07             0.0                     0.0       97.045166      197.130127                0.0                1.0                  1.0                  2.0  -4.907939e+07  48.437622       -0.085240       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=87/1024, buf_size=200.[0m
[01/09 09:12:25]  --------------------------------------------------------------------------------
[01/09 09:12:25]  Iteration: 202 (0 solution, 201 counterexamples)
[01/09 09:50:48]  Generator returned sat in 2287.410897 secs.
[01/09 09:50:49]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + 1min_qdel + 1min_buffer + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + -1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 09:50:51]  Improved gap from 0.0 to 100
[01/09 09:50:51]  Improved number of small numbers from 121 to 121 out of a max of 128
[01/09 09:50:51]  Verifer returned sat in 2.677823 secs.
[01/09 09:50:51]  sf_get_cex returned in 2.763015 secs.
[01/09 09:50:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.771224e+07        4.771196e+07      4.771224e+07       0.170166       0.170898      4.771196e+07        0.000000                0.000000       96.666667      107.083333                1.0                3.0                  1.0         48105.416667  -4.907954e+07  284.333333      189.750000       2.0
1        4.771235e+07        4.771206e+07      4.771235e+07  105451.000000     105.166667      4.771206e+07        0.000000                0.000000       96.666667      107.083333                1.0                3.0                  1.0         48105.416667  -4.907954e+07  290.916667      194.916667       2.0
2        4.771245e+07        4.771216e+07      4.771245e+07  105457.583333     105.166667      4.771216e+07        0.083333                0.000000       96.666667      107.083333                2.0                4.0                  2.0         48105.416667  -4.907954e+07  297.000000      200.000000       3.0
3        4.771256e+07        4.771235e+07      4.771256e+07  105463.750000     105.166667      4.771235e+07        5.250000                0.083333       97.083333      107.083333                1.0                3.0                  2.0             3.000000  -4.907954e+07  206.250000      200.000000       2.0
4        4.771266e+07        4.771245e+07      4.771266e+07  105794.833333     105.583333      4.771245e+07       10.833333                5.250000       99.000000      107.083333                1.0                3.0                  2.0             3.000000  -4.907954e+07  200.000000      200.000000       2.0
5        4.771277e+07        4.771245e+07      4.771277e+07  107710.833333     107.500000      4.771245e+07       18.333333               10.833333       99.000000      106.250000                1.0                3.0                  2.0             3.000000  -4.907954e+07  300.000000      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=55/3, alpha=17/2, buf_size=200.[0m
[01/09 09:50:52]  --------------------------------------------------------------------------------
[01/09 09:50:52]  Iteration: 203 (0 solution, 202 counterexamples)
[01/09 11:48:51]  Generator returned sat in 7064.229663 secs.
[01/09 11:48:52]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 11:48:57]  Improved gap from 18.766666666666666 to 100
[01/09 11:48:58]  Improved number of small numbers from 77 to 85 out of a max of 128
[01/09 11:48:58]  Verifer returned sat in 6.034427 secs.
[01/09 11:48:58]  sf_get_cex returned in 6.119561 secs.
[01/09 11:48:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.761235e+07        4.761205e+07      4.761235e+07       0.170166       0.170654      4.761205e+07        0.000000                0.000000       99.688029      114.688232                0.0                2.0                  0.0             2.999756  -4.897964e+07  299.489502      199.914917       1.0
1        4.761246e+07        4.761225e+07      4.761246e+07  111469.655518     111.170166      4.761225e+07       11.085083                0.000000       99.773112      114.688232                0.0                2.0                  0.0             2.999756  -4.897964e+07  200.028361      200.000000       1.0
2        4.761256e+07        4.761235e+07      4.761256e+07   99984.225423      99.773112      4.761235e+07       11.085083               11.085083       99.858195      114.688232                0.0                2.0                  0.0             2.000000  -4.897964e+07  199.773112      199.773112       1.0
3        4.761267e+07        4.761235e+07      4.761267e+07  111551.190226     111.340332      4.761235e+07       22.198527               11.085083       99.858195      114.688232                0.0                2.0                  0.0             2.000000  -4.897964e+07  300.000000      200.000000       1.0
4        4.761279e+07        4.761255e+07      4.761279e+07  111662.530558     111.340332      4.761255e+07       33.538859               22.198527      100.000000      114.688232                0.0                2.0                  0.0             2.000000  -4.897964e+07  200.000000      200.000000       1.0
5        4.761290e+07        4.761255e+07      4.761290e+07  111715.675903     111.482137      4.761255e+07       45.020996               33.538859      100.000000      114.688232                1.0                3.0                  1.0             2.000000  -4.897964e+07  299.914836      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=278003/8192, alpha=282185/24576, buf_size=200.[0m
[01/09 11:48:58]  --------------------------------------------------------------------------------
[01/09 11:48:58]  Iteration: 204 (0 solution, 203 counterexamples)
[01/09 12:02:59]  Generator returned sat in 824.964406 secs.
[01/09 12:03:00]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + 1min_qdel + -1max_qdel + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)[0m
[01/09 12:03:23]  Improved gap from 12.56084656084656 to 48.4375
[01/09 12:03:24]  Improved number of small numbers from 94 to 101 out of a max of 128
[01/09 12:03:24]  Verifer returned sat in 23.534505 secs.
[01/09 12:03:24]  sf_get_cex returned in 23.624066 secs.
[01/09 12:03:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.766362e+07        4.766361e+07      4.766362e+07       0.169922       0.170654      4.766361e+07             0.0                     0.0            88.0           100.0                0.0                2.0                  0.0        104491.085205  -4.897964e+07   5.824585        0.000000       1.0
1        4.766367e+07        4.766362e+07      4.766367e+07   48528.407593      48.522583      4.766362e+07             0.0                     0.0            88.0           100.0                1.0                3.0                  1.0        104491.085205  -4.897959e+07  48.522583        0.000000       2.0
2        4.766371e+07        4.766367e+07      4.766371e+07   48571.105591      48.522583      4.766367e+07             0.0                     0.0            88.0           100.0                0.0                2.0                  1.0        104491.085205  -4.897954e+07  48.522583        0.000000       1.0
3        4.766376e+07        4.766371e+07      4.766376e+07   48571.105591      48.522583      4.766371e+07             0.0                     0.0            88.0           100.0                0.0                2.0                  1.0        104491.085205  -4.897949e+07  48.522583       -0.000122       1.0
4        4.766381e+07        4.766376e+07      4.766381e+07   48571.105591      48.522583      4.766376e+07             0.0                     0.0            88.0           100.0                0.0                1.0                  1.0        104491.085205  -4.897943e+07  48.437500        0.000000       0.0
5        4.766386e+07        4.766381e+07      4.766386e+07   44048.437500      44.000000      4.766381e+07             0.0                     0.0            88.0           100.0                0.0                2.0                  1.0        104491.085205  -4.897943e+07  44.000000      -56.000000       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=37049/8192, buf_size=200.[0m
[01/09 12:03:24]  --------------------------------------------------------------------------------
[01/09 12:03:24]  Iteration: 205 (0 solution, 204 counterexamples)
[01/09 12:25:11]  Generator returned sat in 1292.154881 secs.
[01/09 12:25:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1min_qdel + 1max_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/09 12:25:36]  Improved gap from 1.6016949152542372 to 48.4375
[01/09 12:25:37]  Improved number of small numbers from 96 to 98 out of a max of 128
[01/09 12:25:37]  Verifer returned sat in 24.213848 secs.
[01/09 12:25:37]  sf_get_cex returned in 24.303124 secs.
[01/09 12:25:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.766361e+07        4.766361e+07      4.766361e+07       0.169678       0.170410      4.766361e+07        0.084717                0.000000       77.533984           100.0                1.0                3.0                  1.0                  2.0  -4.897964e+07   4.080322       -0.084717       2.0
1        4.766365e+07        4.766361e+07      4.766365e+07   38771.157227      38.766992      4.766361e+07        0.084717                0.084717       77.533984           100.0                0.0                1.0                  1.0                  1.0  -4.897959e+07  38.682275       -9.755225       0.0
2        4.766369e+07        4.766366e+07      4.766369e+07   38805.759180      38.766992      4.766366e+07        0.084717                0.084717       77.533984           100.0                0.0                1.0                  1.0                  1.0  -4.897954e+07  29.011768      -19.425732       0.0
3        4.766373e+07        4.766371e+07      4.766373e+07   38796.088672      38.766992      4.766371e+07        0.084717                0.084717       77.533984           100.0                0.0                1.0                  1.0                  1.0  -4.897949e+07  19.341260      -29.096240       0.0
4        4.766377e+07        4.766376e+07      4.766377e+07   38786.418164      38.766992      4.766376e+07        0.084717                0.084717       77.533984           100.0                0.0                1.0                  1.0                  1.0  -4.897943e+07   9.670752      -38.766748       0.0
5        4.766381e+07        4.766381e+07      4.766381e+07   38776.747656      38.766992      4.766381e+07        0.084717                0.084717       77.533984           100.0                0.0                1.0                  1.0                  1.0  -4.897943e+07   0.000122      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=20393/1024, buf_size=200.[0m
[01/09 12:25:37]  --------------------------------------------------------------------------------
[01/09 12:25:37]  Iteration: 206 (0 solution, 205 counterexamples)
[01/09 12:44:56]  Generator returned sat in 1143.013485 secs.
[01/09 12:44:57]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/09 12:45:31]  Improved gap from 26.614395141601562 to 48.4375
[01/09 12:45:31]  Improved number of small numbers from 98 to 128 out of a max of 128
[01/09 12:45:31]  Verifer returned sat in 33.867691 secs.
[01/09 12:45:31]  sf_get_cex returned in 33.956322 secs.
[01/09 12:45:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.766361e+07        4.766361e+07      4.766361e+07       0.169434        0.17041      4.766361e+07             0.0                     0.0           100.0         28056.0                2.0                4.0                  2.0             4.031006  -4.897964e+07   0.312500        0.312256       3.0
1        4.766366e+07        4.766361e+07      4.766366e+07   50000.312500       50.00000      4.766361e+07             0.0                     0.0           100.0         28056.0                0.0                2.0                  2.0             4.031006  -4.897959e+07  50.281006        0.000000       1.0
2        4.766371e+07        4.766366e+07      4.766371e+07   49925.281006       49.87500      4.766366e+07             0.0                     0.0           100.0         28056.0                0.0                2.0                  2.0             4.031006  -4.897954e+07  49.875000        0.000000       1.0
3        4.766376e+07        4.766371e+07      4.766376e+07   49924.875000       49.87500      4.766371e+07             0.0                     0.0           100.0         28056.0                0.0                2.0                  2.0             4.031006  -4.897949e+07  49.875000        0.000000       1.0
4        4.766381e+07        4.766376e+07      4.766381e+07   49924.875000       49.87500      4.766376e+07             0.0                     0.0           100.0         28056.0                0.0                2.0                  2.0             4.031006  -4.897944e+07  49.875000        0.000000       1.0
5        4.766386e+07        4.766381e+07      4.766386e+07   49924.875000       49.87500      4.766381e+07             0.0                     0.0           100.0         28056.0                0.0                1.0                  2.0             4.031006  -4.897944e+07  49.843750      -50.125000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=1/8, buf_size=200.[0m
[01/09 12:45:32]  --------------------------------------------------------------------------------
[01/09 12:45:32]  Iteration: 207 (0 solution, 206 counterexamples)
[01/09 13:00:00]  Generator returned sat in 851.914023 secs.
[01/09 13:00:01]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_c + 1max_c + -1min_qdel + -1min_buffer + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1min_qdel + 1max_qdel + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c + -1alpha)[0m
[01/09 13:00:17]  Improved gap from 17.0 to 48.4375
[01/09 13:00:18]  Improved number of small numbers from 80 to 89 out of a max of 128
[01/09 13:00:18]  Verifer returned sat in 17.525330 secs.
[01/09 13:00:18]  sf_get_cex returned in 17.577629 secs.
[01/09 13:00:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.633393e+07        4.633392e+07      4.633393e+07       0.169189       0.170410      4.633392e+07             0.0                     0.0       73.118749           100.0                1.0                3.0                  1.0             2.997559  -4.764987e+07  17.185631       17.185302       2.0
1        4.633397e+07        4.633392e+07      4.633397e+07   36576.560002      36.559374      4.633392e+07             0.0                     0.0       73.118749           100.0                2.0                4.0                  2.0             2.997559  -4.764982e+07  53.742507       -0.000197       3.0
2        4.633401e+07        4.633397e+07      4.633401e+07   36613.116879      36.559374      4.633397e+07             0.0                     0.0       73.118749           100.0                0.0                1.0                  2.0             2.997559  -4.764977e+07  36.556877      -12.193020       0.0
3        4.633404e+07        4.633402e+07      4.633404e+07   36600.931254      36.564374      4.633402e+07             0.0                     0.0       73.118749           100.0                0.0                1.0                  2.0             2.997559  -4.764972e+07  24.371251      -24.378646       0.0
4        4.633408e+07        4.633407e+07      4.633408e+07   36588.745628      36.564374      4.633407e+07             0.0                     0.0       73.118749           100.0                0.0                1.0                  2.0             2.997559  -4.764967e+07  12.185626      -36.564271       0.0
5        4.633412e+07        4.633412e+07      4.633412e+07   36576.560002      36.564374      4.633412e+07             0.0                     0.0       73.118749           100.0                0.0                1.0                  2.0             2.997559  -4.764967e+07   0.000103      -99.999897       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=5000/999999, buf_size=200.[0m
[01/09 13:00:18]  --------------------------------------------------------------------------------
[01/09 13:00:18]  Iteration: 208 (0 solution, 207 counterexamples)
[01/09 13:20:56]  Generator returned sat in 1227.430093 secs.
[01/09 13:20:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 1max_qdel + 1min_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/09 13:21:07]  Improved gap from 0.75 to 48.4375
[01/09 13:21:08]  Improved number of small numbers from 64 to 91 out of a max of 128
[01/09 13:21:08]  Verifer returned sat in 11.457528 secs.
[01/09 13:21:08]  sf_get_cex returned in 11.512966 secs.
[01/09 13:21:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.633393e+07        4.633392e+07      4.633393e+07       0.169189       0.170166      4.633392e+07        0.084473                0.000000       75.238953        106430.0                2.0                4.0                  2.0                  4.0  -4.764967e+07  11.818146       11.817783       3.0
1        4.633397e+07        4.633392e+07      4.633397e+07   37631.378937      37.619476      4.633392e+07        0.084473                0.084473       75.238953        106430.0                2.0                4.0                  2.0                  4.0  -4.764962e+07  49.353027       -0.084469       3.0
2        4.633401e+07        4.633397e+07      4.633401e+07   37668.913818      37.619476      4.633397e+07        0.084473                0.084473       75.238953        106430.0                0.0                1.0                  2.0                  4.0  -4.764957e+07  35.454193      -13.983303       0.0
3        4.633404e+07        4.633402e+07      4.633404e+07   37655.014984      37.619476      4.633402e+07        0.084473                0.084473       75.238953        106430.0                0.0                1.0                  2.0                  4.0  -4.764952e+07  23.636169      -25.801327       0.0
4        4.633408e+07        4.633407e+07      4.633408e+07   37643.196960      37.619476      4.633407e+07        0.084473                0.084473       75.238953        106430.0                0.0                1.0                  2.0                  4.0  -4.764947e+07  11.818146      -37.619351       0.0
5        4.633412e+07        4.633412e+07      4.633412e+07   37631.378937      37.619476      4.633412e+07        0.084473                0.084473       75.238953        106430.0                0.0                1.0                  2.0                  4.0  -4.764947e+07   0.000126      -99.999874       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=40787/2048, buf_size=200.[0m
[01/09 13:21:08]  --------------------------------------------------------------------------------
[01/09 13:21:08]  Iteration: 209 (0 solution, 208 counterexamples)
[01/09 13:52:04]  Generator returned sat in 1845.501484 secs.
[01/09 13:52:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + -1min_qdel + -1max_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 13:52:11]  Improved number of small numbers from 72 to 75 out of a max of 127
[01/09 13:52:11]  Verifer returned sat in 6.634376 secs.
[01/09 13:52:11]  sf_get_cex returned in 6.722790 secs.
[01/09 13:52:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.633397e+07        4.633367e+07      4.633397e+07       0.168945       0.169922      4.633367e+07        0.000000                0.000000       76.835536      214.650391                2.0                4.0                  2.0             5.037007  -4.764952e+07  300.000000      200.000000       3.0
1        4.633403e+07        4.633379e+07      4.633403e+07   57680.760832      57.380761      4.633379e+07        0.000000                0.000000       76.835536      214.650391                1.0                3.0                  2.0             5.037007  -4.764952e+07  232.260487      157.380761       2.0
2        4.633420e+07        4.633388e+07      4.633420e+07  172866.325537     172.634065      4.633388e+07       30.014826                0.000000       76.835536      214.650391                1.0                3.0                  2.0             5.037007  -4.764952e+07  285.349500      200.000000       2.0
3        4.633437e+07        4.633403e+07      4.633437e+07  172949.429376     172.634065      4.633403e+07      102.648891               30.014826       89.345190      178.690380                1.0                3.0                  2.0             3.000000  -4.764952e+07  242.619239      200.000000       2.0
4        4.633448e+07        4.633415e+07      4.633448e+07  108653.451098     108.308183      4.633415e+07      110.957074              102.648891       96.559418      160.932364                1.0                3.0                  2.0             3.000000  -4.764952e+07  217.202908      200.000000       2.0
5        4.633460e+07        4.633417e+07      4.633460e+07  115850.571199     115.522411      4.633417e+07      126.479485              110.957074       96.559418      124.972245                1.0                3.0                  2.0             3.000000  -4.764952e+07  299.962993      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=1, loss_amount=157214/1243, alpha=23571/1243, buf_size=200.[0m
[01/09 13:52:12]  --------------------------------------------------------------------------------
[01/09 13:52:12]  Iteration: 210 (0 solution, 209 counterexamples)
[01/09 14:17:51]  Generator returned sat in 1523.209620 secs.
[01/09 14:17:52]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + 1max_qdel + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)[0m
[01/09 14:18:24]  Improved gap from 18.962962962962962 to 48.4375
[01/09 14:18:25]  Improved number of small numbers from 98 to 102 out of a max of 128
[01/09 14:18:25]  Verifer returned sat in 33.333750 secs.
[01/09 14:18:26]  sf_get_cex returned in 33.423496 secs.
[01/09 14:18:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.779639e+07        4.779639e+07      4.779639e+07       0.168945       0.169922      4.779639e+07             0.0                     0.0       24.839286           100.0                0.0                1.0                  0.0                  2.0  -4.911214e+07   0.000000       -0.401748       0.0
1        4.779644e+07        4.779639e+07      4.779644e+07   49678.571429      49.678571      4.779639e+07             0.0                     0.0       24.839286           100.0                0.0                1.0                  0.0                  2.0  -4.911209e+07  49.276786       -0.160677       0.0
2        4.779649e+07        4.779644e+07      4.779649e+07   49727.848214      49.678571      4.779644e+07             0.0                     0.0       24.839286           100.0                0.0                1.0                  0.0                  2.0  -4.911204e+07  49.517857        0.000000       0.0
3        4.779654e+07        4.779649e+07      4.779654e+07   49728.089286      49.678571      4.779649e+07             0.0                     0.0       32.985119           100.0                0.0                2.0                  0.0                  2.0  -4.911199e+07  49.678571        0.000000       1.0
4        4.779657e+07        4.779654e+07      4.779657e+07   32954.440476      32.904762      4.779654e+07             0.0                     0.0       37.158482           100.0                0.0                2.0                  0.0                  2.0  -4.911194e+07  32.904762      -16.532805       1.0
5        4.779661e+07        4.779659e+07      4.779661e+07   37111.029762      37.078125      4.779659e+07             0.0                     0.0       39.903571           100.0                0.0                1.0                  0.0                  2.0  -4.911194e+07  19.098958      -79.454680       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=9/112, buf_size=200.[0m
[01/09 14:18:26]  --------------------------------------------------------------------------------
[01/09 14:18:26]  Iteration: 211 (0 solution, 210 counterexamples)
[01/09 14:37:08]  Generator returned sat in 1105.538475 secs.
[01/09 14:37:09]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/09 14:37:28]  Improved gap from 14.722222222222221 to 48.4375
[01/09 14:37:30]  Improved number of small numbers from 86 to 90 out of a max of 128
[01/09 14:37:30]  Verifer returned sat in 20.670288 secs.
[01/09 14:37:30]  sf_get_cex returned in 20.758346 secs.
[01/09 14:37:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.776315e+07        4.776315e+07      4.776315e+07       0.168701       0.169922      4.776315e+07        0.041992                0.000000       92.850684           100.0                0.0                1.0                  0.0                  2.0  -4.911214e+07   0.000244        0.000072       0.0
1        4.776319e+07        4.776315e+07      4.776319e+07   46425.384033      46.425342      4.776315e+07        0.041992                0.041992       92.850684           100.0                0.0                1.0                  0.0                  1.0  -4.911209e+07  40.217822       -8.219678       0.0
2        4.776323e+07        4.776320e+07      4.776323e+07   38423.365283      38.383105      4.776320e+07        0.041992                0.041992       92.850684           100.0                0.0                1.0                  0.0                  1.0  -4.911204e+07  30.163428      -18.274072       0.0
3        4.776327e+07        4.776325e+07      4.776327e+07   38413.310889      38.383105      4.776325e+07        0.041992                0.041992       92.850684           100.0                0.0                1.0                  0.0                  1.0  -4.911199e+07  20.109033      -28.328467       0.0
4        4.776331e+07        4.776330e+07      4.776331e+07   38403.256494      38.383105      4.776330e+07        0.041992                0.041992       92.850684           100.0                0.0                1.0                  0.0                  1.0  -4.911194e+07  10.054639      -38.382861       0.0
5        4.776335e+07        4.776335e+07      4.776335e+07   38393.202100      38.383105      4.776335e+07        0.041992                0.041992       92.850684           100.0                0.0                1.0                  0.0                  1.0  -4.911194e+07   0.000130      -99.999684       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=32941/4096, buf_size=200.[0m
[01/09 14:37:30]  --------------------------------------------------------------------------------
[01/09 14:37:30]  Iteration: 212 (0 solution, 211 counterexamples)
[01/09 15:42:53]  Generator returned sat in 3906.517802 secs.
[01/09 15:42:54]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c + -1alpha)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -1min_qdel + -1max_qdel + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/09 15:43:01]  Improved gap from 0.04217529296875 to 100
[01/09 15:43:02]  Improved number of small numbers from 63 to 71 out of a max of 128
[01/09 15:43:02]  Verifer returned sat in 8.011564 secs.
[01/09 15:43:02]  sf_get_cex returned in 8.100469 secs.
[01/09 15:43:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t     queue_t  bottle_queue_t  qdelay_t
0        4.776301e+07        4.776281e+07      4.776301e+07       0.168457       0.169678      4.776281e+07        0.084229                0.000000       97.810211      133.220703                0.0                1.0                  0.0                  2.0  -4.911180e+07  193.358612      193.358612       0.0
1        4.776312e+07        4.776281e+07      4.776312e+07  111919.303436     111.725861      4.776281e+07        5.168701                0.084229       97.810211      133.220703                0.0                1.0                  0.0                  1.0  -4.911180e+07  300.000000      200.000000       0.0
2        4.776323e+07        4.776301e+07      4.776323e+07  112031.029297     111.725861      4.776301e+07       16.894562                5.168701       99.894562      133.220703                0.0                2.0                  0.0                  1.0  -4.911180e+07  200.210876      200.000000       1.0
3        4.776334e+07        4.776308e+07      4.776334e+07  114027.316620     113.810211      4.776308e+07       30.704773               16.894562       99.894562      133.220703                1.0                3.0                  1.0                  1.0  -4.911180e+07  233.558268      200.000000       2.0
4        4.776346e+07        4.776321e+07      4.776346e+07  114074.474223     113.810211      4.776321e+07       44.514984               30.704773       99.978912      133.220703                1.0                3.0                  1.0                  1.0  -4.911180e+07  200.084351      200.000000       2.0
5        4.776357e+07        4.776321e+07      4.776357e+07  114139.161102     113.894562      4.776321e+07       58.409546               44.514984       99.978912      100.000000                2.0                4.0                  2.0                  1.0  -4.911180e+07  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=436149/8192, alpha=113997/8192, buf_size=200.[0m
[01/09 15:43:02]  --------------------------------------------------------------------------------
[01/09 15:43:02]  Iteration: 213 (0 solution, 212 counterexamples)
[01/09 17:14:00]  Generator returned sat in 5441.926183 secs.
[01/09 17:14:00]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 1min_qdel + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_c + -1min_qdel + -1min_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 2min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/09 17:14:11]  Improved gap from 0.07417582417582418 to 48.4375
[01/09 17:14:11]  Improved number of small numbers from 98 to 128 out of a max of 128
[01/09 17:14:11]  Verifer returned sat in 10.810910 secs.
[01/09 17:14:11]  sf_get_cex returned in 10.865115 secs.
[01/09 17:14:11]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t    queue_t  bottle_queue_t  qdelay_t
0        4.776279e+07        4.776279e+07      4.776279e+07       0.168457       0.169678      4.776279e+07             0.0                     0.0          98.875         110.875                2.0                4.0                  2.0             2.083984  -4.911185e+07   0.084229        0.084229       3.0
1        4.776283e+07        4.776279e+07      4.776283e+07   49437.584229      49.437500      4.776279e+07             0.0                     0.0          98.875         110.875                2.0                4.0                  2.0             2.083984  -4.911180e+07  49.437500        0.000000       3.0
2        4.776288e+07        4.776283e+07      4.776288e+07   49486.937500      49.437500      4.776283e+07             0.0                     0.0          98.875         110.875                0.0                2.0                  2.0             2.083984  -4.911175e+07  49.437500        0.000000       1.0
3        4.776293e+07        4.776288e+07      4.776293e+07   49486.937500      49.437500      4.776288e+07             0.0                     0.0          98.875         110.875                0.0                2.0                  2.0             2.083984  -4.911170e+07  49.437500        0.000000       1.0
4        4.776298e+07        4.776293e+07      4.776298e+07   49486.937500      49.437500      4.776293e+07             0.0                     0.0          98.875         110.875                0.0                2.0                  2.0             2.083984  -4.911165e+07  49.437500        0.000000       1.0
5        4.776303e+07        4.776298e+07      4.776303e+07   49486.937500      49.437500      4.776298e+07             0.0                     0.0          98.875         110.875                0.0                1.0                  2.0             2.083984  -4.911165e+07  47.355957      -50.562500       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, alpha=43/512, buf_size=200.[0m
[01/09 17:14:11]  --------------------------------------------------------------------------------
[01/09 17:14:11]  Iteration: 214 (0 solution, 213 counterexamples)
