[01/10 18:16:23]  Namespace(optimize=None, infinite_buffer=False, finite_buffer=False, dynamic_buffer=True, T=9)
[01/10 18:16:23]  Using cond_vars: ['min_c', 'max_c', 'min_qdel', 'min_buffer', 'max_buffer']
[01/10 18:16:24]  --------------------------------------------------------------------------------
[01/10 18:16:24]  Iteration: 1 (0 solution, 0 counterexamples)
[01/10 18:16:24]  Generator returned sat in 0.006190 secs.
[01/10 18:16:24]  Candidate solution: 
[1m[94mif (+ 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:22:31]  Improved gap from 14.753846153846155 to 48.4375
[01/10 18:22:32]  Improved number of small numbers from 166 to 166 out of a max of 166
[01/10 18:22:32]  Verifer returned sat in 367.926652 secs.
[01/10 18:22:32]  sf_get_cex returned in 368.077819 secs.
[01/10 18:22:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t  upper_S_t  qdelay_t
0            0.000000              0.0000          0.000000       0.125000       0.125000            0.0000             0.0                     0.0        86.96875           100.0                0.0                2.0                  0.0                2.125         0.0000                   0.0                 212.5   0.000000          -1.0       -0.125000     0.1250       1.0
1           43.484375              0.1250         43.484375   43484.375000      43.484375            0.1250             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125        51.5625                   0.0                 212.5  43.359375           0.0       -5.078125    48.5625       0.0
2           86.968750             57.2500         86.968750   43527.734375      43.484375           57.2500             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125        94.4375                   0.0                 212.5  29.718750           0.0      -18.718750   105.6875       0.0
3          130.453125            105.6875        130.453125   43514.093750      43.484375          105.6875             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       146.0000                   0.0                 212.5  24.765625           0.0      -23.671875   154.1250       0.0
4          173.937500            154.1250        173.937500   43509.140625      43.484375          154.1250             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       197.5625                   0.0                 212.5  19.812500           0.0      -28.625000   202.5625       0.0
5          217.421875            202.5625        217.421875   43504.187500      43.484375          202.5625             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       249.1250                   0.0                 212.5  14.859375           0.0      -33.578125   251.0000       0.0
6          260.906250            251.0000        260.906250   43499.234375      43.484375          251.0000             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       300.6875                   0.0                 212.5   9.906250           0.0      -38.531250   299.4375       0.0
7          304.390625            299.4375        304.390625   43494.281250      43.484375          299.4375             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       352.2500                   0.0                 212.5   4.953125           0.0      -43.484375   347.8750       0.0
8          347.875000            347.8750        347.875000   43489.328125      43.484375          347.8750             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       403.8125                   0.0                 212.5   0.000000           0.0      -48.437500   396.3125       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/8, buf_size=1/4.[0m
[01/10 18:22:32]  --------------------------------------------------------------------------------
[01/10 18:22:32]  Iteration: 2 (0 solution, 1 counterexamples)
[01/10 18:22:32]  Generator returned sat in 0.388135 secs.
[01/10 18:22:32]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:22:42]  Improved number of small numbers from 102 to 165 out of a max of 165
[01/10 18:22:42]  Verifer returned sat in 9.267414 secs.
[01/10 18:22:42]  sf_get_cex returned in 9.392934 secs.
[01/10 18:22:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t  upper_S_t  qdelay_t
0           -6.050537         -199.750244         -6.050537       0.124756       0.124512       -199.750244          0.0625                  0.0000           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.637207          -1.0       93.761963    -99.875       1.0
1          193.949463            0.125000        193.949463  200193.699707     200.000000          0.125000        100.0625                  0.0625           100.0           100.0                0.0                1.0                  0.0             0.937744      99.999756                   0.0             93.774414   93.761963           1.0       93.761963      0.125       0.0
2          393.949463            0.125000        393.949463  200193.824463     200.000000          0.125000        200.0625                100.0625           100.0           100.0                0.0                1.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.761963           1.0       93.761963    100.125       0.0
3          593.949463          193.886963        593.949463  200393.824463     200.000000        193.886963        300.0625                200.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  100.000000           1.0       93.761963    200.125       1.0
4          793.949463          293.886963        793.949463  200400.062500     200.000000        293.886963        400.0625                300.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  100.000000           1.0       93.761963    300.125       1.0
5          993.949463          300.312256        993.949463  200500.062500     200.000000        300.312256        500.0625                400.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.574707           1.0       93.761963    400.125       1.0
6         1193.949463          400.125000       1193.949463  200693.637207     200.000000        400.125000        600.0625                500.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.761963           1.0       93.761963    500.125       1.0
7         1393.949463          500.125000       1393.949463  200793.824463     200.000000        500.125000        700.0625                600.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.761963           1.0       93.761963    600.125       1.0
8         1593.949463          600.499268       1593.949463  200893.824463     200.000000        600.499268        800.0625                700.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.387695           1.0       93.761963    700.125       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=700, beliefs_improve=False, alpha=255/4096, buf_size=384049/4096.[0m
[01/10 18:22:42]  --------------------------------------------------------------------------------
[01/10 18:22:42]  Iteration: 3 (0 solution, 2 counterexamples)
[01/10 18:22:43]  Generator returned sat in 0.837447 secs.
[01/10 18:22:43]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:22:50]  Improved number of small numbers from 59 to 83 out of a max of 165
[01/10 18:22:50]  Verifer returned sat in 6.880013 secs.
[01/10 18:22:50]  sf_get_cex returned in 7.008365 secs.
[01/10 18:22:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t   upper_S_t  qdelay_t
0          193.949463         -593.518799        193.949463       0.124756       0.124512       -593.518799        0.007812                0.000000       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  787.460449          -1.0      737.439659 -543.498009       8.0
1          293.957245         -506.050537        293.957245  100795.250244     100.007782       -506.050537        0.015564                0.007812       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  799.992218           1.0      737.439690 -443.498009       8.0
2          393.965027         -368.488930        393.965027  100807.789764     100.007782       -368.488930        0.023346                0.015564       87.530479      112.487549                6.0                8.0                  7.0             7.374512      149.97641            612.713356            829.540747  762.430611           1.0      737.439690 -343.498009       7.0
3          493.972809         -256.032379        493.972809  100770.235939     100.007782       -256.032379        0.031128                0.023346       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  749.974060           1.0      737.439690 -243.498009       8.0
4          593.980591         -155.928619        593.980591  100757.787170     100.007782       -155.928619        0.038910                0.031128       87.530479      112.487549                4.0                6.0                  7.0             7.374512      149.97641            612.713356            829.540747  749.870300           1.0      737.439690 -143.498009       5.0
5          693.988373         -143.498009        693.988373  100757.691193     100.007782       -143.498009        0.046692                0.038910       87.530479      112.487549                5.0                7.0                  7.0             7.374512      149.97641            612.713356            829.540747  837.439690           1.0      737.439690  -43.498009       6.0
6          793.996155           19.085648        793.996155  100845.268364     100.007782         19.085648        0.054474                0.046692       87.530479      112.487549                6.0                8.0                  7.0             7.374512      149.97641            612.713356            829.540747  774.856033           1.0      737.439690   56.501991       7.0
7          894.003937          106.662819        894.003937  100782.692490     100.007782        106.662819        0.062256                0.054474       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  787.278862           1.0      737.439690  156.501991       8.0
8          994.011719          193.949219        994.011719  100795.123100     100.007782        193.949219        0.070038                0.062256       87.530479      112.487549                6.0                8.0                  7.0             7.374512      149.97641            612.713356            829.540747  799.992462           1.0      737.439690  256.501991       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=1785/32768, beliefs_improve=False, alpha=1635425/131072, buf_size=96657695/131072.[0m
[01/10 18:22:50]  --------------------------------------------------------------------------------
[01/10 18:22:50]  Iteration: 4 (0 solution, 3 counterexamples)
[01/10 18:22:51]  Generator returned sat in 0.272949 secs.
[01/10 18:22:51]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:00]  Improved gap from 0.0 to 100
[01/10 18:23:02]  Improved number of small numbers from 99 to 105 out of a max of 166
[01/10 18:23:02]  Verifer returned sat in 11.505841 secs.
[01/10 18:23:02]  sf_get_cex returned in 11.633108 secs.
[01/10 18:23:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        20208.332031        19464.960653      20208.332031       0.124756       0.124268      19464.960653        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  743.371379          -1.0      735.246867  19473.085164       8.0
1        20367.116292        19566.991781      20367.116292  159527.632446     158.784261      19566.991781        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  800.124512           1.0      794.031128  19573.085164       8.0
2        20525.900553        19669.022909      20525.900553  159584.385579     158.784261      19669.022909        0.000000                     0.0       79.392131           102.0                6.0                8.0                  7.0                 14.0      149.97641            555.744914                1428.0  856.877645           1.0      852.815389  19673.085164       7.0
3        20605.292684        19771.085164      20605.292684   80249.008179      79.392131      19771.085164        0.000000                     0.0       79.392131           102.0                5.0                7.0                  7.0                 14.0      149.97641            555.744914                1428.0  834.207520           1.0      832.207520  19773.085164       6.0
4        20684.684814        19782.404663      20684.684814   80226.338053      79.392131      19782.404663        0.000000                     0.0       79.392131           102.0                6.0                8.0                  7.0                 14.0      149.97641            555.744914                1428.0  902.280151           1.0      811.599650  19873.085164       7.0
5        20764.076945        19873.085164      20764.076945   80294.410685      79.392131      19873.085164        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  890.991781           1.0      790.991781  19973.085164       8.0
6        20922.861206        19975.147420      20922.861206  159675.252848     158.784261      19975.147420        0.000000                     0.0       79.392131           102.0                6.0                8.0                  7.0                 14.0      149.97641            555.744914                1428.0  947.713786           1.0      849.776042  20073.085164       7.0
7        21002.253337        20077.178711      21002.253337   80339.844320      79.392131      20077.178711        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  925.074626           1.0      829.168172  20173.085164       8.0
8        21161.037598        20179.209717      21161.037598  159709.335693     158.784261      20179.209717       35.137044                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  946.690837           1.0      852.815389  20273.085164       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=107941/3072, beliefs_improve=False, alpha=1/32, buf_size=20958791/24576.[0m
[01/10 18:23:02]  --------------------------------------------------------------------------------
[01/10 18:23:02]  Iteration: 5 (0 solution, 4 counterexamples)
[01/10 18:23:04]  Generator returned sat in 1.374173 secs.
[01/10 18:23:04]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:12]  Improved number of small numbers from 101 to 165 out of a max of 165
[01/10 18:23:12]  Verifer returned sat in 7.310144 secs.
[01/10 18:23:12]  sf_get_cex returned in 7.456826 secs.
[01/10 18:23:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        20325.900635        19625.838379      20325.900635       0.124512       0.124268      19625.838379             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062256          -1.0      700.062012  19625.838623       8.0
1        20425.900635        19725.838623      20425.900635  100700.062256     100.000000      19725.838623             0.0                     0.0           100.0           100.0                0.0                2.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062012           0.0      700.062012  19725.838623       1.0
2        20525.900635        19825.838379      20525.900635  100700.062012     100.000000      19825.838379             0.0                     0.0           100.0           100.0                1.0                3.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062256           1.0      700.062012  19825.838623       2.0
3        20625.900635        19925.838623      20625.900635  100700.062256     100.000000      19925.838623             0.0                     0.0           100.0           100.0                2.0                4.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062012           1.0      700.062012  19925.838623       3.0
4        20725.900635        20025.838379      20725.900635  100700.062012     100.000000      20025.838379             0.0                     0.0           100.0           100.0                3.0                5.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062256           1.0      700.062012  20025.838623       4.0
5        20825.900635        20125.838623      20825.900635  100700.062256     100.000000      20125.838623             0.0                     0.0           100.0           100.0                4.0                6.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062012           1.0      700.062012  20125.838623       5.0
6        20925.900635        20125.900635      20925.900635  100700.062012     100.000000      20125.900635             0.0                     0.0           100.0           100.0                5.0                7.0                  7.0             7.015625     149.976318                 700.0              701.5625  800.000000           1.0      700.062012  20225.838623       6.0
7        21025.900635        20225.838623      21025.900635  100800.000000     100.000000      20225.838623             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             7.015625     149.976318                 700.0              701.5625  800.062012           1.0      700.062012  20325.838623       7.0
8        21125.900635        20325.838623      21125.900635  100800.062012     100.000000      20325.838623             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             7.015625     149.976318                 700.0              701.5625  800.062012           1.0      700.062012  20425.838623       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/64, buf_size=1433727/2048.[0m
[01/10 18:23:12]  --------------------------------------------------------------------------------
[01/10 18:23:12]  Iteration: 6 (0 solution, 5 counterexamples)
[01/10 18:23:14]  Generator returned sat in 1.426207 secs.
[01/10 18:23:14]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 3/2min_c + 2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:46]  Improved gap from 0.0621337890625 to 100
[01/10 18:23:49]  Improved number of small numbers from 80 to 97 out of a max of 166
[01/10 18:23:49]  Verifer returned sat in 34.789519 secs.
[01/10 18:23:49]  sf_get_cex returned in 34.921703 secs.
[01/10 18:23:49]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -152561.748305      -153253.360786    -152561.748305       0.124268       0.124023    -153253.360786        0.062012                0.000000       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  691.550469          -1.0      614.115533 -153175.925849       8.0
1      -152388.860718      -153142.298652    -152388.860718  173579.199287     172.887587    -153142.298652        0.062012                0.062012       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  753.375922           1.0      687.003120 -153075.925849       8.0
2      -152215.973131      -153031.236518    -152215.973131  173641.024740     172.887587    -153031.236518       59.704183                0.062012       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  755.559204           1.0      700.248535 -152975.925849       8.0
3      -152043.085544      -152920.174384    -152043.085544  173702.850193     172.887587    -152920.174384      132.591770               59.704183       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  744.497070           1.0      700.248535 -152875.925849       8.0
4      -151870.197957      -152821.452488    -151870.197957  173764.675646     172.887587    -152821.452488      205.479357              132.591770       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  745.775174           1.0      700.248535 -152775.925849       8.0
5      -151697.310371      -152775.925849    -151697.310371  173838.841336     172.887587    -152775.925849      278.366943              205.479357       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  800.248535           1.0      700.248535 -152675.925849       8.0
6      -151524.422784      -152675.925849    -151524.422784  173966.202284     172.887587    -152675.925849      351.254530              278.366943       86.443793      110.999756                6.0                8.0                  7.0             8.062256     149.976318            605.106554            894.908432  800.248535           1.0      700.248535 -152575.925849       7.0
7      -151438.041124      -152561.810438    -151438.041124   87533.162679      86.381660    -152561.810438      351.254530              351.254530       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  772.514784           1.0      686.630195 -152475.925849       8.0
8      -151265.153537      -152475.925781    -151265.153537  174011.356120     172.887587    -152475.925781      410.523777              351.254530       86.443793      110.999756                6.0                8.0                  7.0             8.062256     149.976318            605.106554            894.908432  800.248467           1.0      700.248535 -152375.925849       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=30262525/73728, beliefs_improve=False, alpha=509/8192, buf_size=1434109/2048.[0m
[01/10 18:23:49]  --------------------------------------------------------------------------------
[01/10 18:23:49]  Iteration: 7 (0 solution, 6 counterexamples)
[01/10 18:23:50]  Generator returned sat in 0.941308 secs.
[01/10 18:23:50]  Candidate solution: 
[1m[94mif (+ 1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + 2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:56]  Improved gap from 0.0 to 48.4375
[01/10 18:23:57]  Improved number of small numbers from 166 to 166 out of a max of 166
[01/10 18:23:57]  Verifer returned sat in 6.039022 secs.
[01/10 18:23:57]  sf_get_cex returned in 6.171700 secs.
[01/10 18:23:57]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -152313.034912      -152313.065918    -152313.034912       0.124268       0.124023    -152313.065918             0.0                     0.0       48.562012           100.0                0.0                2.0                  0.0             1.968994     -55.868652                   0.0            196.899414   0.031006          -1.0        0.031006 -152313.065918       1.0
1      -152264.503906      -152313.034912    -152264.503906   48531.036865      48.531006    -152313.034912             0.0                     0.0       48.562012           100.0                0.0                2.0                  0.0             1.968994      -4.430664                   0.0            196.899414  48.531006           0.0        0.000000 -152264.503906       1.0
2      -152215.972900      -152264.503906    -152215.972900   48579.536865      48.531006    -152264.503906             0.0                     0.0       48.562012           100.0                0.0                2.0                  0.0             1.968994      47.038330                   0.0            196.899414  48.531006           0.0        0.000000 -152215.972900       1.0
3      -152167.441895      -152215.941895    -152167.441895   48579.536865      48.531006    -152215.941895             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994      98.507324                   0.0            196.899414  48.500000           0.0        0.000000 -152167.441895       0.0
4      -152118.910889      -152167.410889    -152118.910889   48579.505859      48.531006    -152167.410889             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     149.976318                   0.0            196.899414  48.500000           0.0        0.000000 -152118.910889       0.0
5      -152070.379883      -152118.879883    -152070.379883   48579.505859      48.531006    -152118.879883             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     201.445312                   0.0            196.899414  48.500000           0.0        0.000000 -152070.379883       0.0
6      -152021.848877      -152070.317871    -152021.848877   48579.505859      48.531006    -152070.317871             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     252.883301                   0.0            196.899414  48.468994           0.0       -0.031006 -152021.817871       0.0
7      -151973.317871      -152021.817871    -151973.317871   48579.474854      48.531006    -152021.817871             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     304.383301                   0.0            196.899414  48.500000           0.0        0.000000 -151973.317871       0.0
8      -151924.786865      -151973.286865    -151924.786865   48579.505859      48.531006    -151973.286865             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     304.383301                   0.0            196.899414  48.500000           0.0      -51.468994 -151873.317871       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=127/4096, buf_size=127/2048.[0m
[01/10 18:23:57]  --------------------------------------------------------------------------------
[01/10 18:23:57]  Iteration: 8 (0 solution, 7 counterexamples)
[01/10 18:24:04]  Generator returned sat in 6.281066 secs.
[01/10 18:24:04]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:24:43]  Improved gap from 0.01953125 to 100
[01/10 18:24:45]  Improved number of small numbers from 86 to 98 out of a max of 166
[01/10 18:24:45]  Verifer returned sat in 41.287142 secs.
[01/10 18:24:45]  sf_get_cex returned in 41.425441 secs.
[01/10 18:24:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -151758.348877      -152364.550415    -151758.348877       0.124023       0.124023    -152364.550415        0.015625                0.000000       97.994832           100.0                7.0                9.0                  7.0                 12.0      -4.430664            685.963826                1200.0  606.185913          -1.0      606.139404 -152364.503906       8.0
1      -151660.354045      -152358.488403    -151660.354045   98601.033895      97.994832    -152358.488403        0.015625                0.015625       97.994832           100.0                4.0                6.0                  7.0                 12.0      -4.430664            685.963826                1200.0  698.118734           1.0      604.134237 -152264.503906       5.0
2      -151464.364380      -152260.493571    -151464.364380  196687.799072     195.989665    -152260.493571        0.031006                0.015625       97.994832           100.0                4.0                6.0                  7.0                 12.0      -4.430664            685.963826                1200.0  796.098185           1.0      700.108521 -152164.503906       5.0
3      -151268.374715      -152064.503906    -151268.374715  196785.793905     195.989665    -152064.503906       96.020671                0.031006       97.994832           100.0                4.0                6.0                  7.0                 12.0      -4.430664            685.963826                1200.0  700.108521           1.0      700.108521 -152064.503906       5.0
4      -151072.385050      -152064.457397    -151072.385050  196785.793905     195.989665    -152064.457397      192.010335               96.020671       97.994832           100.0                5.0                7.0                  7.0                 12.0      -4.430664            685.963826                1200.0  800.062012           1.0      700.108521 -151964.503906       6.0
5      -150974.390218      -151868.591553    -150974.390218   98986.904704      97.994832    -151868.591553      192.010335              192.010335       97.994832           100.0                6.0                8.0                  7.0                 12.0      -4.430664            685.963826                1200.0  702.190999           1.0      698.103353 -151864.503906       7.0
6      -150876.395386      -151770.519409    -150876.395386   98889.033691      97.994832    -151770.519409      192.010335              192.010335       97.994832           100.0                7.0                9.0                  7.0                 12.0      -4.430664            685.963826                1200.0  702.113688           1.0      696.098185 -151764.503906       8.0
7      -150778.400553      -151764.457397    -150778.400553   98888.956380      97.994832    -151764.457397      192.010335              192.010335       97.994832           100.0                7.0                9.0                  7.0                 12.0      -4.430664            685.963826                1200.0  794.046509           1.0      694.093018 -151664.503906       8.0
8      -150680.405721      -151660.354248    -150680.405721   98980.889201      97.994832    -151660.354248      192.010335              192.010335       97.994832           100.0                5.0                7.0                  7.0                 12.0      -4.430664            685.963826                1200.0  787.938192           1.0      692.087850 -151564.503906       6.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=2, loss_amount=2359231/12288, beliefs_improve=False, alpha=1/64, buf_size=5735289/8192.[0m
[01/10 18:24:45]  --------------------------------------------------------------------------------
[01/10 18:24:45]  Iteration: 9 (0 solution, 8 counterexamples)
[01/10 18:24:50]  Generator returned sat in 3.784850 secs.
[01/10 18:24:50]  Candidate solution: 
[1m[94mif (+ -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:24:57]  Improved gap from 0.0 to 48.4375
[01/10 18:24:57]  Improved number of small numbers from 120 to 166 out of a max of 166
[01/10 18:24:57]  Verifer returned sat in 7.052371 secs.
[01/10 18:24:57]  sf_get_cex returned in 7.184501 secs.
[01/10 18:24:57]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -50687.182617       -50687.182617     -50687.182617       0.123779       0.123779     -50687.182617             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25752.516113                   0.0         349678.277817   0.000000          -1.0        0.000000 -50687.182617       0.0
1       -50637.683105       -50686.120605     -50637.683105   49499.511719      49.499512     -50686.120605             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25803.016602                   0.0         349678.277817  48.437500           0.0        0.000000 -50637.683105       0.0
2       -50588.183594       -50637.683105     -50588.183594   49547.949219      49.499512     -50637.683105             0.0                     0.0         69.4375    86084.999756                0.0                2.0                  0.0             4.062012   25853.455078                   0.0         349678.277817  49.499512           0.0       -0.062012 -50588.121582       1.0
3       -50538.684082       -50588.121338     -50538.684082   49549.011230      49.499512     -50588.121338             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25904.017334                   0.0         349678.277817  49.437256           0.0       -0.000244 -50538.683838       0.0
4       -50489.184570       -50536.560059     -50489.184570   49548.948975      49.499512     -50536.560059             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25953.456055                   0.0         349678.277817  47.375488           0.0       -1.062012 -50488.122559       0.0
5       -50439.685059       -50488.122559     -50439.685059   49546.887207      49.499512     -50488.122559             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   26005.018555                   0.0         349678.277817  48.437500           0.0        0.000000 -50439.685059       0.0
6       -50390.185547       -50439.685059     -50390.185547   49547.949219      49.499512     -50439.685059             0.0                     0.0         69.4375    86084.999756                0.0                2.0                  0.0             4.062012   26055.518799                   0.0         349678.277817  49.499512           0.0       -0.000244 -50390.185303       1.0
7       -50340.686035       -50390.123535     -50340.686035   49549.011230      49.499512     -50390.123535             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   26106.019531                   0.0         349678.277817  49.437500           0.0        0.000000 -50340.686035       0.0
8       -50291.186523       -50337.244629     -50291.186523   49548.949219      49.499512     -50337.244629             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   26154.140625                   0.0         349678.277817  46.058105           0.0       -2.379395 -50288.807129       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40833/2048, buf_size=20.[0m
[01/10 18:24:57]  --------------------------------------------------------------------------------
[01/10 18:24:57]  Iteration: 10 (0 solution, 9 counterexamples)
[01/10 18:25:03]  Generator returned sat in 4.371336 secs.
[01/10 18:25:03]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:25:27]  Improved gap from 39.9381103515625 to 100
[01/10 18:25:28]  Improved number of small numbers from 121 to 166 out of a max of 166
[01/10 18:25:28]  Verifer returned sat in 24.532675 secs.
[01/10 18:25:28]  sf_get_cex returned in 24.662972 secs.
[01/10 18:25:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        62792.309082        61911.956299      62792.309082       0.123779       0.123535      61911.956299        0.000000                0.000000           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  880.352783          -1.0      780.353027  62011.956055       8.0
1        62892.309082        62011.956299      62892.309082  100880.352783     100.000000      62011.956299        0.000000                0.000000           100.0      120.058838                4.0                6.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  880.352783           1.0      780.353027  62111.956055       5.0
2        63092.309082        62111.956055      63092.309082  200880.352783     200.000000      62111.956055       19.646973                0.000000           100.0      120.058838                5.0                7.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  960.706055           1.0      860.706055  62211.956055       6.0
3        63292.309082        62311.956055      63292.309082  200980.353027     200.000000      62311.956055      119.646973               19.646973           100.0      120.058838                6.0                8.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  860.706055           1.0      860.706055  62311.956055       7.0
4        63492.309082        62311.985596      63492.309082  200980.353027     200.000000      62311.985596      219.646973              119.646973           100.0      120.058838                6.0                8.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  960.676514           1.0      860.706055  62411.956055       7.0
5        63692.309082        62432.044434      63692.309082  201180.323486     200.000000      62432.044434      319.646973              219.646973           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  940.617676           1.0      860.706055  62511.956055       8.0
6        63792.309082        62580.132568      63792.309082  101260.264648     100.000000      62580.132568      319.646973              319.646973           100.0      120.058838                6.0                8.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  892.529541           1.0      860.706055  62611.956055       7.0
7        63992.309082        62711.220947      63992.309082  201212.176514     200.000000      62711.220947      419.646973              319.646973           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  861.441162           1.0      860.706055  62711.956055       8.0
8        64092.309082        62792.309082      64092.309082  101281.088135     100.000000      62792.309082      419.646973              419.646973           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  880.353027           1.0      860.706055  62811.956055       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=859437/2048, beliefs_improve=False, alpha=15/512, buf_size=881363/1024.[0m
[01/10 18:25:28]  --------------------------------------------------------------------------------
[01/10 18:25:28]  Iteration: 11 (0 solution, 10 counterexamples)
[01/10 18:25:30]  Generator returned sat in 1.341017 secs.
[01/10 18:25:30]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:25:36]  Improved number of small numbers from 165 to 165 out of a max of 165
[01/10 18:25:36]  Verifer returned sat in 5.930091 secs.
[01/10 18:25:36]  sf_get_cex returned in 6.058161 secs.
[01/10 18:25:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        62892.309082        62132.062012      62892.309082       0.123779       0.123535      62132.062012             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  760.247070          -1.0       760.24707  62132.062012       8.0
1        62992.309082        62232.062012      62992.309082  100760.247070     100.000000      62232.062012             0.0                     0.0           100.0           100.0                5.0                7.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  760.247070           1.0       760.24707  62232.062012       6.0
2        63092.309082        62232.123779      63092.309082  100760.247070     100.000000      62232.123779             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  860.185303           1.0       760.24707  62332.062012       7.0
3        63192.309082        62388.185547      63192.309082  100860.185303     100.000000      62388.185547             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  804.123535           1.0       760.24707  62432.062012       8.0
4        63292.309082        62432.062012      63292.309082  100804.123535     100.000000      62432.062012             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  860.247070           1.0       760.24707  62532.062012       7.0
5        63392.309082        62532.309082      63392.309082  100860.247070     100.000000      62532.309082             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  860.000000           1.0       760.24707  62632.062012       8.0
6        63492.309082        62632.370850      63492.309082  100860.000000     100.000000      62632.370850             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  859.938232           1.0       760.24707  62732.062012       8.0
7        63592.309082        62732.432617      63592.309082  100859.938232     100.000000      62732.432617             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  859.876465           1.0       760.24707  62832.062012       8.0
8        63692.309082        62892.370850      63692.309082  100859.876465     100.000000      62892.370850             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  799.938232           1.0       760.24707  62932.062012       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81667/4096, buf_size=3114225/4096.[0m
[01/10 18:25:36]  --------------------------------------------------------------------------------
[01/10 18:25:36]  Iteration: 12 (0 solution, 11 counterexamples)
[01/10 18:25:42]  Generator returned sat in 4.516006 secs.
[01/10 18:25:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:26:00]  Improved gap from 4.9411764705882355 to 48.4375
[01/10 18:26:01]  Improved number of small numbers from 142 to 144 out of a max of 166
[01/10 18:26:01]  Verifer returned sat in 18.161935 secs.
[01/10 18:26:01]  sf_get_cex returned in 18.296454 secs.
[01/10 18:26:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        62961.696582        62957.927832      62961.696582       0.123291       0.123047      62957.927832             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86993.398193                   0.0            326.029536   3.768750          -1.0        3.768604  62957.927979       0.0
1        63011.152832        62961.715332      63011.152832   49460.018750      49.456250      62961.715332             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86946.623047                   0.0            326.029536  49.437500           0.0        0.000000  63011.152832       0.0
2        63060.609082        63011.152832      63060.609082   49505.687500      49.456250      63011.152832             0.0                     0.0        53.01875      107.999756                0.0                2.0                  0.0             3.018799  -86896.079346                   0.0            326.029536  49.456250           0.0       -0.000049  63060.609131       1.0
3        63110.065332        63060.646582      63110.065332   49505.706250      49.456250      63060.646582             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86845.554297                   0.0            326.029536  49.418750           0.0       -0.018750  63110.084082       0.0
4        63159.521582        63110.084082      63159.521582   49505.668750      49.456250      63110.084082             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86794.991943                   0.0            326.029536  49.437500           0.0       -0.000146  63159.521729       0.0
5        63208.977832        63159.540332      63208.977832   49505.687500      49.456250      63159.540332             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86744.448047                   0.0            326.029536  49.437500           0.0        0.000000  63208.977832       0.0
6        63258.434082        63208.996582      63258.434082   49505.687500      49.456250      63208.996582             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86693.904297                   0.0            326.029536  49.437500           0.0        0.000000  63258.434082       0.0
7        63307.890332        63258.434082      63307.890332   49505.687500      49.456250      63258.434082             0.0                     0.0        53.01875      107.999756                0.0                2.0                  0.0             3.018799  -86643.379297                   0.0            326.029536  49.456250           0.0       -0.018750  63307.909082       1.0
8        63357.346582        63307.909180      63357.346582   49505.706250      49.456250      63307.909180             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86643.379150                   0.0            326.029536  49.437402           0.0      -50.562354  63407.908936       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=57/16, buf_size=15437/4096.[0m
[01/10 18:26:01]  --------------------------------------------------------------------------------
[01/10 18:26:01]  Iteration: 13 (0 solution, 12 counterexamples)
[01/10 18:26:09]  Generator returned sat in 6.978704 secs.
[01/10 18:26:09]  Candidate solution: 
[1m[94mif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:33:00]  Improved gap from 0.369140625 to 48.4375
[01/10 18:33:03]  Improved number of small numbers from 119 to 121 out of a max of 166
[01/10 18:33:03]  Verifer returned sat in 413.781970 secs.
[01/10 18:33:03]  sf_get_cex returned in 413.917092 secs.
[01/10 18:33:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        33532.003331        33531.941807      33532.003331       0.123291       0.123047      33531.941807             0.0                     0.0       98.821987           100.0                2.0                4.0                  2.0             2.061279  -86997.347900            197.643973             206.12793   0.061523          -1.0        0.000070  33532.003261       3.0
1        33581.414324        33532.003331      33581.414324   49411.054827      49.410993      33532.003331             0.0                     0.0       98.821987           100.0                2.0                4.0                  2.0             2.061279  -86946.758963            197.643973             206.12793  49.410993           1.0        0.000000  33581.414324       3.0
2        33630.825317        33581.414324      33630.825317   49460.404297      49.410993      33581.414324             0.0                     0.0       98.821987           100.0                0.0                2.0                  2.0             2.061279  -86896.169957            197.643973             206.12793  49.410993           0.0        0.000000  33630.825317       1.0
3        33680.236311        33630.825317      33680.236311   49460.404297      49.410993      33630.825317             0.0                     0.0       98.821987           100.0                0.0                2.0                  2.0             2.061279  -86845.580950            197.643973             206.12793  49.410993           0.0        0.000000  33680.236311       1.0
4        33729.647304        33680.236311      33729.647304   49460.404297      49.410993      33680.236311             0.0                     0.0       98.821987           100.0                0.0                2.0                  2.0             2.061279  -86794.992188            197.643973             206.12793  49.410993           0.0       -0.000244  33729.647548       1.0
5        33779.058297        33730.682321      33779.058297   49460.404297      49.410993      33730.682321             0.0                     0.0       98.821987           100.0                0.0                1.0                  2.0             2.061279  -86744.464460            197.643973             206.12793  48.375977           0.0       -0.061523  33779.119821       0.0
6        33828.469291        33779.119821      33828.469291   49459.369280      49.410993      33779.119821             0.0                     0.0       98.821987           100.0                0.0                1.0                  2.0             2.061279  -86693.813930            197.643973             206.12793  49.349470           0.0        0.000000  33828.469291       0.0
7        33877.880284        33828.469291      33877.880284   49460.342773      49.410993      33828.469291             0.0                     0.0       98.821987           100.0                0.0                2.0                  2.0             2.061279  -86643.224923            197.643973             206.12793  49.410993           0.0        0.000000  33877.880284       1.0
8        33927.291277        33877.880284      33927.291277   49460.404297      49.410993      33877.880284             0.0                     0.0       98.821987           100.0                0.0                2.0                  2.0             2.061279  -86643.224854            197.643973             206.12793  49.410993           0.0      -50.588937  33977.880214       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=20417/1024, buf_size=200.[0m
[01/10 18:33:03]  --------------------------------------------------------------------------------
[01/10 18:33:03]  Iteration: 14 (0 solution, 13 counterexamples)
[01/10 18:33:15]  Generator returned sat in 10.033432 secs.
[01/10 18:33:15]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:33:29]  Improved number of small numbers from 105 to 165 out of a max of 165
[01/10 18:33:29]  Verifer returned sat in 14.370842 secs.
[01/10 18:33:29]  sf_get_cex returned in 14.503749 secs.
[01/10 18:33:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        33448.111816        33343.660400      33448.111816       0.123291       0.123047      33343.660400        0.030762                0.000000            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826  104.420654          -1.0       16.604980  33431.476074       0.0
1        33644.111816        33464.747559      33644.111816  196104.451416     196.000000      33464.747559       96.030518                0.030762            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826   83.333740           1.0       16.605225  33531.476074       0.0
2        33840.111816        33581.414551      33840.111816  196179.364258     196.000000      33581.414551      192.030518               96.030518            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826   66.666748           1.0       16.605225  33631.476074       0.0
3        34036.111816        33648.111816      34036.111816  196258.697266     196.000000      33648.111816      288.030518              192.030518            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826   99.969482           1.0       16.605225  33731.476074       0.0
4        34232.111816        33814.747559      34232.111816  196388.000000     196.000000      33814.747559      384.030518              288.030518            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826   33.333740           1.0       16.605225  33831.476074       0.0
5        34428.111816        33931.476074      34428.111816  196417.364258     196.000000      33931.476074      480.030518              384.030518            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826   16.605225           1.0       16.605225  33931.476074       0.0
6        34624.111816        33931.506592      34624.111816  196496.635742     196.000000      33931.506592      576.030518              480.030518            98.0      116.635742                0.0                2.0                  0.0             0.969238  -86943.090576                   0.0            113.047826  116.574707           1.0       16.605225  34031.476074       1.0
7        34820.111816        34048.111816      34820.111816  196692.605225     196.000000      34048.111816      672.030518              576.030518            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826   99.969482           1.0       16.605225  34131.476074       0.0
8        35016.111816        34164.747559      35016.111816  196772.000000     196.000000      34164.747559      768.030518              672.030518            98.0      116.635742                0.0                1.0                  0.0             0.969238  -86943.090576                   0.0            113.047826   83.333740           1.0       16.605225  34231.476074       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=672, beliefs_improve=False, alpha=63/2048, buf_size=68015/4096.[0m
[01/10 18:33:29]  --------------------------------------------------------------------------------
[01/10 18:33:29]  Iteration: 15 (0 solution, 14 counterexamples)
[01/10 18:33:41]  Generator returned sat in 9.886436 secs.
[01/10 18:33:41]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 18:33:48]  Improved number of small numbers from 109 to 122 out of a max of 165
[01/10 18:33:48]  Verifer returned sat in 6.655805 secs.
[01/10 18:33:48]  sf_get_cex returned in 6.782364 secs.
[01/10 18:33:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        34107.373291        33222.966553      34107.373291       0.123291       0.123047      33222.966553        0.000000                0.000000       92.587908      107.999756                7.0                9.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  884.406738          -1.0      799.230957  33308.142334       8.0
1        34207.380981        33408.142334      34207.380981  100892.097168     100.007690      33408.142334        0.007690                0.000000       92.587908      107.999756                6.0                8.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  799.230957           1.0      799.230957  33408.142334       7.0
2        34307.388672        33408.142334      34307.388672  100806.929077     100.007690      33408.142334        0.015381                0.007690       92.587908      107.999756                6.0                8.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  899.230957           1.0      799.230957  33508.142334       7.0
3        34407.396362        33593.287388      34407.396362  100906.936768     100.007690      33593.287388        0.023071                0.015381       92.587908      107.999756                7.0                9.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  814.085903           1.0      799.230957  33608.142334       8.0
4        34507.404053        33685.867676      34507.404053  100821.799404     100.007690      33685.867676        0.030762                0.023071       92.587908      107.999756                7.0                9.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  821.505615           1.0      799.230957  33708.142334       8.0
5        34607.411743        33778.447824      34607.411743  100829.226807     100.007690      33778.447824        0.038452                0.030762       92.587908      107.999756                7.0                9.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  828.925467           1.0      799.230957  33808.142334       8.0
6        34707.419434        33840.173096      34707.419434  100836.654349     100.007690      33840.173096        0.046143                0.038452       92.587908      107.999756                7.0                9.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  867.200195           1.0      799.230957  33908.142334       8.0
7        34807.427124        33948.180786      34807.427124  100874.936768     100.007690      33948.180786        0.053833                0.046143       92.587908      107.999756                7.0                9.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  859.192505           1.0      799.230957  34008.142334       8.0
8        34907.434814        34056.188232      34907.434814  100866.936768     100.007690      34056.188232        0.061523                0.053833       92.587908      107.999756                7.0                9.0                  7.0             7.992432   -86943.09082            648.115356            863.180666  851.185059           1.0      799.230957  34108.142334       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=441/8192, beliefs_improve=False, alpha=53185/7168, buf_size=1636825/2048.[0m
[01/10 18:33:48]  --------------------------------------------------------------------------------
[01/10 18:33:48]  Iteration: 16 (0 solution, 15 counterexamples)
[01/10 18:33:53]  Generator returned sat in 3.480275 secs.
[01/10 18:33:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + -1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 18:34:17]  Improved gap from 43.0615234375 to 100
[01/10 18:34:19]  Improved number of small numbers from 124 to 135 out of a max of 166
[01/10 18:34:19]  Verifer returned sat in 25.503169 secs.
[01/10 18:34:19]  sf_get_cex returned in 25.638587 secs.
[01/10 18:34:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        34107.373291        34107.373291      34107.373291       0.123047       0.122803      34107.373291        0.000000                0.000000           100.0           194.0                0.0                1.0                  0.0             0.115234   -86943.09082                   0.0             22.355469    0.000000          -1.0       -2.483180  34109.856471       0.0
1        34210.856471        34209.801426      34210.856471  103483.180428     103.483180      34209.801426        0.000000                0.000000           100.0           194.0                0.0                1.0                  0.0             0.115234   -86943.09082                   0.0             22.355469    1.055046           0.0        1.000000  34209.856471       0.0
2        34314.339652        34209.856471      34314.339652  103484.235474     103.483180      34209.856471        0.000000                0.000000           100.0           194.0                0.0                2.0                  0.0             0.115234   -86943.09082                   0.0             22.355469  104.483180           0.0        4.483180  34309.856471       1.0
3        34417.822832        34314.394698      34417.822832  103587.663609     103.483180      34314.394698        0.000000                0.000000           100.0           194.0                0.0                1.0                  0.0             0.115234   -86943.09082                   0.0             22.355469  103.428135           0.0        7.966361  34409.856471       0.0
4        34521.306013        34417.822832      34521.306013  103586.608563     103.483180      34417.822832        0.000000                0.000000           100.0           194.0                0.0                2.0                  0.0             0.115234   -86943.09082                   0.0             22.355469  103.483180           0.0       11.449541  34509.856471       1.0
5        34624.789193        34521.361059      34624.789193  103586.663609     103.483180      34521.361059        3.428135                0.000000           100.0           194.0                0.0                1.0                  0.0             0.115234   -86943.09082                   0.0             22.355469  100.000000           0.0       11.504587  34609.856471       0.0
6        34728.272374        34609.856471      34728.272374  103586.608563     103.483180      34609.856471        6.911315                3.428135           100.0           194.0                0.0                2.0                  0.0             0.115234   -86943.09082                   0.0             22.355469  111.504587           1.0       11.504587  34709.856471       1.0
7        34831.755554        34721.416104      34831.755554  103601.596330     103.483180      34721.416104       10.394495                6.911315           100.0           194.0                0.0                1.0                  0.0             0.115234   -86943.09082                   0.0             22.355469   99.944954           1.0       11.504587  34809.856471       0.0
8        34935.238734        34909.471191      34935.238734  103593.519878     103.483180      34909.471191       13.877676               10.394495           100.0           194.0                0.0                1.0                  0.0             0.115234   -86943.09082                   0.0             22.355469   11.889867           1.0       11.504587  34909.856471       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=4538/327, beliefs_improve=False, alpha=1139/327, buf_size=1254/109.[0m
[01/10 18:34:19]  --------------------------------------------------------------------------------
[01/10 18:34:19]  Iteration: 17 (0 solution, 16 counterexamples)
[01/10 18:34:31]  Generator returned sat in 10.661768 secs.
[01/10 18:34:32]  Candidate solution: 
[1m[94mif (+ -1/2min_c + 1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -3/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:34:43]  Improved number of small numbers from 105 to 165 out of a max of 165
[01/10 18:34:43]  Verifer returned sat in 11.314184 secs.
[01/10 18:34:43]  sf_get_cex returned in 11.445497 secs.
[01/10 18:34:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        33606.006592        32795.576904      33606.006592       0.123047       0.122559      32795.576904             0.0                     0.0           100.0      110.122559                6.0                8.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  810.429688          -1.0      739.140137  32866.866455       7.0
1        33706.006592        32905.761230      33706.006592  100810.429688     100.000000      32905.761230             0.0                     0.0           100.0      110.122559                4.0                6.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  800.245361           1.0      739.140137  32966.866455       5.0
2        33806.006592        33016.252441      33806.006592  100800.245361     100.000000      33016.252441             0.0                     0.0           100.0      110.122559                4.0                6.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  789.754150           1.0      739.140137  33066.866455       5.0
3        33906.006592        33067.173096      33906.006592  100789.754150     100.000000      33067.173096             0.0                     0.0           100.0      110.122559                4.0                6.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  838.833496           1.0      739.140137  33166.866455       5.0
4        34006.006592        33236.497803      34006.006592  100838.833496     100.000000      33236.497803             0.0                     0.0           100.0      110.122559                4.0                6.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  769.508789           1.0      739.140137  33266.866455       5.0
5        34106.006592        33267.050293      34106.006592  100769.508789     100.000000      33267.050293             0.0                     0.0           100.0      110.122559                5.0                7.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  838.956299           1.0      739.140137  33366.866455       6.0
6        34206.006592        33366.989258      34206.006592  100838.956299     100.000000      33366.989258             0.0                     0.0           100.0      110.122559                6.0                8.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  839.017334           1.0      739.140137  33466.866455       7.0
7        34306.006592        33566.866455      34306.006592  100839.017334     100.000000      33566.866455             0.0                     0.0           100.0      110.122559                6.0                8.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  739.140137           1.0      739.140137  33566.866455       7.0
8        34406.006592        33566.866455      34406.006592  100739.140137     100.000000      33566.866455             0.0                     0.0           100.0      110.122559                6.0                8.0                  6.0              7.39209  -85700.100586                 600.0            814.035847  839.140137           1.0      739.140137  33666.866455       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=63/1024, buf_size=1513885/2048.[0m
[01/10 18:34:43]  --------------------------------------------------------------------------------
[01/10 18:34:43]  Iteration: 18 (0 solution, 17 counterexamples)
[01/10 18:34:57]  Generator returned sat in 12.052282 secs.
[01/10 18:34:57]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:35:15]  Improved gap from 0.061279296875 to 48.4375
[01/10 18:35:15]  Improved number of small numbers from 166 to 166 out of a max of 166
[01/10 18:35:15]  Verifer returned sat in 17.982812 secs.
[01/10 18:35:15]  sf_get_cex returned in 18.120965 secs.
[01/10 18:35:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        33269.873779        33266.426514      33269.873779       0.123047       0.122559      33266.426514             0.0                     0.0         69.4375      139.813721                0.0                1.0                  0.0             3.061279  -85898.658203                   0.0            428.008849   3.447266          -1.0        3.447266  33266.426514       0.0
1        33319.372559        33269.873779      33319.372559   49502.226562      49.498779      33269.873779             0.0                     0.0         69.4375      139.813721                0.0                2.0                  0.0             3.061279  -85851.604248                   0.0            428.008849  49.498779           0.0        0.000000  33319.372559       1.0
2        33368.871338        33319.372559      33368.871338   49548.278076      49.498779      33319.372559             0.0                     0.0         69.4375      139.813721                0.0                2.0                  0.0             3.061279  -85801.103027                   0.0            428.008849  49.498779           0.0        0.000000  33368.871338       1.0
3        33418.370117        33368.871338      33418.370117   49548.278076      49.498779      33368.871338             0.0                     0.0         69.4375      139.813721                0.0                2.0                  0.0             3.061279  -85750.601807                   0.0            428.008849  49.498779           0.0        0.000000  33418.370117       1.0
4        33467.868896        33418.370117      33467.868896   49548.278076      49.498779      33418.370117             0.0                     0.0         69.4375      139.813721                0.0                2.0                  0.0             3.061279  -85700.100586                   0.0            428.008849  49.498779           0.0        0.000000  33467.868896       1.0
5        33517.367676        33467.868896      33517.367676   49548.278076      49.498779      33467.868896             0.0                     0.0         69.4375      139.813721                0.0                2.0                  0.0             3.061279  -85649.660645                   0.0            428.008849  49.498779           0.0       -0.061279  33517.428955       1.0
6        33566.866455        33517.428955      33566.866455   49548.278076      49.498779      33517.428955             0.0                     0.0         69.4375      139.813721                0.0                1.0                  0.0             3.061279  -85599.098145                   0.0            428.008849  49.437500           0.0        0.000000  33566.866455       0.0
7        33616.365234        33566.866455      33616.365234   49548.216797      49.498779      33566.866455             0.0                     0.0         69.4375      139.813721                0.0                2.0                  0.0             3.061279  -85548.596924                   0.0            428.008849  49.498779           0.0        0.000000  33616.365234       1.0
8        33665.864014        33616.365234      33665.864014   49548.278076      49.498779      33616.365234             0.0                     0.0         69.4375      139.813721                0.0                2.0                  0.0             3.061279  -85548.596924                   0.0            428.008849  49.498779           0.0      -50.501221  33716.365234       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81669/4096, buf_size=313475/1024.[0m
[01/10 18:35:15]  --------------------------------------------------------------------------------
[01/10 18:35:15]  Iteration: 19 (0 solution, 18 counterexamples)
[01/10 18:35:32]  Generator returned sat in 14.037994 secs.
[01/10 18:35:32]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + -3/2max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:48:57]  Improved gap from 49.437255859375 to 48.4375
[01/10 18:49:01]  Improved number of small numbers from 80 to 108 out of a max of 166
[01/10 18:49:01]  Verifer returned sat in 809.050579 secs.
[01/10 18:49:01]  sf_get_cex returned in 809.174732 secs.
[01/10 18:49:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -351443.875993      -351443.875993    -351443.875993       0.122803       0.122070    -351443.875993             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85898.658447                   0.0            199.322305   0.000000          -1.0       -1.061157 -351442.814836       0.0
1      -351394.036324      -351442.814836    -351394.036324   49839.669364      49.839669    -351442.814836             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85848.839111                   0.0            199.322305  48.778512           0.0       -1.402152 -351392.634172       0.0
2      -351344.196654      -351392.634154    -351344.196654   49888.447876      49.839669    -351392.634154             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85797.276855                   0.0            199.322305  48.437500           0.0       -0.000227 -351344.196428       0.0
3      -351294.356985      -351344.135497    -351294.356985   49888.106864      49.839669    -351344.135497             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85747.116455                   0.0            199.322305  49.778512           0.0       -0.000157 -351294.356828       0.0
4      -351244.517316      -351294.295828    -351244.517316   49889.447876      49.839669    -351294.295828             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85696.956055                   0.0            199.322305  49.778512           0.0       -0.000087 -351244.517228       0.0
5      -351194.677646      -351244.456158    -351194.677646   49889.447876      49.839669    -351244.456158             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85646.856689                   0.0            199.322305  49.778512           0.0       -0.061053 -351194.616594       0.0
6      -351144.837977      -351194.616489    -351144.837977   49889.447876      49.839669    -351194.616489             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85596.696289                   0.0            199.322305  49.778512           0.0       -0.060983 -351144.776994       0.0
7      -351094.998308      -351144.776820    -351094.998308   49889.447876      49.839669    -351144.776820             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85547.536133                   0.0            199.322305  49.778512           0.0       -1.061157 -351093.937150       0.0
8      -351045.158638      -351093.937012    -351045.158638   49889.447876      49.839669    -351093.937012             0.0                     0.0       99.679339      199.419678                0.0                1.0                  0.0             0.999512  -85547.536133                   0.0            199.322305  48.778374           0.0      -51.221488 -350993.937150       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=125/2048, buf_size=204675/2048.[0m
[01/10 18:49:01]  --------------------------------------------------------------------------------
[01/10 18:49:01]  Iteration: 20 (0 solution, 19 counterexamples)
[01/10 18:49:26]  Generator returned sat in 22.281805 secs.
[01/10 18:49:26]  Candidate solution: 
[1m[94mif (+ -2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:49:39]  Improved gap from 12.3662109375 to 48.4375
[01/10 18:49:39]  Improved number of small numbers from 122 to 166 out of a max of 166
[01/10 18:49:39]  Verifer returned sat in 13.474851 secs.
[01/10 18:49:39]  sf_get_cex returned in 13.613697 secs.
[01/10 18:49:39]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -351634.359131      -351634.420166    -351634.359131       0.122803       0.121826    -351634.420166             0.0                     0.0       48.498535   114224.999756                1.0                3.0                  1.0             6.999756  -85707.052979             48.498535         799547.111328   0.061035          -1.0        0.061035 -351634.420166       2.0
1      -351585.860596      -351634.359131    -351585.860596   48498.596191      48.498535    -351634.359131             0.0                     0.0       48.498535   114224.999756                1.0                3.0                  1.0             6.999756  -85655.612549             48.498535         799547.111328  48.498535           1.0        0.000000 -351585.860596       2.0
2      -351537.362061      -351585.799561    -351537.362061   48547.033691      48.498535    -351585.799561             0.0                     0.0       48.498535   114224.999756                0.0                1.0                  1.0             6.999756  -85604.111084             48.498535         799547.111328  48.437500           0.0        0.000000 -351537.362061       0.0
3      -351488.863525      -351537.362061    -351488.863525   48546.972656      48.498535    -351537.362061             0.0                     0.0       48.498535   114224.999756                0.0                2.0                  1.0             6.999756  -85552.609619             48.498535         799547.111328  48.498535           0.0        0.000000 -351488.863525       1.0
4      -351440.364990      -351488.863525    -351440.364990   48547.033691      48.498535    -351488.863525             0.0                     0.0       48.498535   114224.999756                0.0                2.0                  1.0             6.999756  -85501.108154             48.498535         799547.111328  48.498535           0.0        0.000000 -351440.364990       1.0
5      -351391.866455      -351440.364990    -351391.866455   48547.033691      48.498535    -351440.364990             0.0                     0.0       48.498535   114224.999756                0.0                2.0                  1.0             6.999756  -85449.606689             48.498535         799547.111328  48.498535           0.0        0.000000 -351391.866455       1.0
6      -351343.367920      -351391.866455    -351343.367920   48547.033691      48.498535    -351391.866455             0.0                     0.0       48.498535   114224.999756                0.0                2.0                  1.0             6.999756  -85398.105225             48.498535         799547.111328  48.498535           0.0        0.000000 -351343.367920       1.0
7      -351294.869385      -351343.367920    -351294.869385   48547.033691      48.498535    -351343.367920             0.0                     0.0       48.498535   114224.999756                0.0                2.0                  1.0             6.999756  -85346.603760             48.498535         799547.111328  48.498535           0.0        0.000000 -351294.869385       1.0
8      -351246.370850      -351294.808594    -351246.370850   48547.033691      48.498535    -351294.808594             0.0                     0.0       48.498535   114224.999756                0.0                1.0                  1.0             6.999756  -85295.102295             48.498535         799547.111328  48.437744           0.0        0.000000 -351246.370850       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=50949/4096, buf_size=1638149/4096.[0m
[01/10 18:49:39]  --------------------------------------------------------------------------------
[01/10 18:49:39]  Iteration: 21 (0 solution, 20 counterexamples)
[01/10 18:50:04]  Generator returned sat in 21.968891 secs.
[01/10 18:50:04]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:50:22]  Improved number of small numbers from 121 to 132 out of a max of 165
[01/10 18:50:22]  Verifer returned sat in 18.110907 secs.
[01/10 18:50:22]  sf_get_cex returned in 18.242542 secs.
[01/10 18:50:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -351660.860474      -351685.799561    -351660.860474       0.122803       0.121582    -351685.799561             0.0                     0.0            56.5           101.0                0.0                1.0                  0.0             2.061035  -85655.673584                   0.0            208.164551  24.939087          -1.0       24.939087 -351685.799561       0.0
1      -351623.299561      -351623.299561    -351623.299561   37585.852173      37.560913    -351623.299561             0.0                     0.0            56.5           101.0                0.0                1.0                  0.0             2.061035  -85655.673584                   0.0            208.164551   0.000000           0.0      -37.500000 -351585.799561       0.0
2      -351585.738647      -351585.799561    -351585.738647   37560.913086      37.560913    -351585.799561             0.0                     0.0            56.5           101.0                0.0                1.0                  0.0             2.061035  -85555.734497                   0.0            208.164551   0.060913           0.0        0.000000 -351585.738647       0.0
3      -351548.177734      -351585.738647    -351548.177734   37560.973999      37.560913    -351585.738647             0.0                     0.0            56.5           101.0                0.0                2.0                  0.0             2.061035  -85493.295410                   0.0            208.164551  37.560913           0.0        0.000000 -351548.177734       1.0
4      -351510.616821      -351548.177734    -351510.616821   37598.473999      37.560913    -351548.177734             0.0                     0.0            56.5           101.0                0.0                2.0                  0.0             2.061035  -85468.417236                   0.0            208.164551  37.560913           0.0      -37.560913 -351473.055908       1.0
5      -351473.055908      -351473.055908    -351473.055908   37598.473999      37.560913    -351473.055908             0.0                     0.0            56.5           101.0                0.0                1.0                  0.0             2.061035  -85405.917236                   0.0            208.164551   0.000000           0.0      -37.500000 -351435.555908       0.0
6      -351435.494995      -351435.555908    -351435.494995   37560.913086      37.560913    -351435.555908             0.0                     0.0            56.5           101.0                0.0                1.0                  0.0             2.061035  -85305.978149                   0.0            208.164551   0.060913           0.0        0.000000 -351435.494995       0.0
7      -351397.934082      -351435.494995    -351397.934082   37560.973999      37.560913    -351435.494995             0.0                     0.0            56.5           101.0                0.0                2.0                  0.0             2.061035  -85281.099854                   0.0            208.164551  37.560913           0.0      -37.560791 -351360.373291       1.0
8      -351360.373169      -351360.373169    -351360.373169   37598.473999      37.560913    -351360.373169             0.0                     0.0            56.5           101.0                0.0                1.0                  0.0             2.061035  -85281.099854                   0.0            208.164551   0.000000           0.0      -99.999878 -351260.373291       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=155149/8192, buf_size=844149/4096.[0m
[01/10 18:50:22]  --------------------------------------------------------------------------------
[01/10 18:50:22]  Iteration: 22 (0 solution, 21 counterexamples)
[01/10 18:50:44]  Generator returned sat in 19.307359 secs.
[01/10 18:50:44]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -3/2min_c + -1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:50:52]  Improved gap from 0.0 to 100
[01/10 18:50:53]  Improved number of small numbers from 111 to 166 out of a max of 166
[01/10 18:50:53]  Verifer returned sat in 8.195830 secs.
[01/10 18:50:53]  sf_get_cex returned in 8.329117 secs.
[01/10 18:50:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       -351691.36499      -351817.729736     -351691.36499       0.122803       0.121338    -351817.729736           120.0              119.999756           100.0           153.0                3.0                5.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328    6.364746          -1.0        6.364746 -351817.729736       4.0
1       -351491.36499      -351811.364990     -351491.36499  200126.364746     200.000000    -351811.364990           120.0              120.000000           100.0           153.0                2.0                4.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  200.000000           1.0      106.364746 -351717.729736       3.0
2       -351291.36499      -351617.729736     -351291.36499  200320.000000     200.000000    -351617.729736           120.0              120.000000           100.0           153.0                0.0                2.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  206.364746           0.0      206.364746 -351617.729736       1.0
3       -351091.36499      -351517.729736     -351091.36499  200326.364746     200.000000    -351517.729736           120.0              120.000000           100.0           153.0                0.0                2.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  306.364746           0.0      306.364746 -351517.729736       1.0
4       -350891.36499      -351517.729736     -350891.36499  200426.364746     200.000000    -351517.729736           120.0              120.000000           100.0           153.0                0.0                2.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  506.364746           0.0      406.364746 -351417.729736       1.0
5       -350691.36499      -351364.668945     -350691.36499  200626.364746     200.000000    -351364.668945           120.0              120.000000           100.0           153.0                1.0                3.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  553.303955           1.0      506.364746 -351317.729736       2.0
6       -350491.36499      -351217.912109     -350491.36499  200673.303955     200.000000    -351217.912109           120.0              120.000000           100.0           153.0                2.0                4.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  606.547119           1.0      606.364746 -351217.729736       3.0
7       -350291.36499      -351211.608154     -350291.36499  200726.547119     200.000000    -351211.608154           120.0              120.000000           100.0           153.0                3.0                5.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  800.243164           1.0      706.364746 -351117.729736       4.0
8       -350091.36499      -351058.547363     -350091.36499  200920.243164     200.000000    -351058.547363           120.0              120.000000           100.0           153.0                3.0                5.0                  3.0             8.064453  -85681.828613                 300.0           1233.861328  847.182373           1.0      806.364746 -351017.729736       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=31/512, buf_size=1651559/2048.[0m
[01/10 18:50:53]  --------------------------------------------------------------------------------
[01/10 18:50:53]  Iteration: 23 (0 solution, 22 counterexamples)
[01/10 18:51:25]  Generator returned sat in 29.618401 secs.
[01/10 18:51:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -3/2min_c + 2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:51:41]  Improved gap from 0.0606689453125 to 100
[01/10 18:51:43]  Improved number of small numbers from 129 to 131 out of a max of 166
[01/10 18:51:43]  Verifer returned sat in 18.238163 secs.
[01/10 18:51:43]  sf_get_cex returned in 18.368924 secs.
[01/10 18:51:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -169809.677371      -169859.265943    -169809.677371       0.122803       0.121338    -169859.265943        0.000000                0.000000        83.20381      150.499756                2.0                4.0                  2.0              2.99619  -85681.828613            166.407619            450.925935   49.588571          -1.0       33.588571 -169843.265943       3.0
1      -169643.269752      -169743.265943    -169643.269752  166457.207619     166.407619    -169743.265943        0.000000                0.000000        83.20381      150.499756                0.0                1.0                  2.0              2.99619  -85681.828613            166.407619            450.925935   99.996190           0.0       99.996190 -169743.265943       0.0
2      -169476.862133      -169643.265943    -169476.862133  166507.615238     166.407619    -169643.265943        0.000000                0.000000        83.20381      150.499756                0.0                1.0                  2.0              2.99619  -85681.828613            166.407619            450.925935  166.403810           0.0      166.403810 -169643.265943       0.0
3      -169310.454514      -169543.265943    -169310.454514  166574.022857     166.407619    -169543.265943        0.000000                0.000000        83.20381      150.499756                0.0                2.0                  2.0              2.99619  -85681.828613            166.407619            450.925935  232.811429           0.0      232.811429 -169543.265943       1.0
4      -169144.046895      -169443.265943    -169144.046895  166640.430476     166.407619    -169443.265943        0.000000                0.000000        83.20381      150.499756                0.0                2.0                  2.0              2.99619  -85681.828613            166.407619            450.925935  299.219048           0.0      299.219048 -169443.265943       1.0
5      -168977.639276      -169443.265943    -168977.639276  166706.838095     166.407619    -169443.265943       66.007619                0.000000        83.20381      150.499756                0.0                2.0                  2.0              2.99619  -85681.828613            166.407619            450.925935  399.619048           0.0      299.619048 -169343.265943       1.0
6      -168811.231657      -169310.450705    -168811.231657  166873.245714     166.407619    -169310.450705      132.415238               66.007619        83.20381      150.499756                1.0                3.0                  2.0              2.99619  -85681.828613            166.407619            450.925935  366.803810           1.0      299.619048 -169243.265943       2.0
7      -168644.824038      -169243.265943    -168644.824038  166906.838095     166.407619    -169243.265943      198.822857              132.415238        83.20381      150.499756                2.0                4.0                  2.0              2.99619  -85681.828613            166.407619            450.925935  399.619048           1.0      299.619048 -169143.265943       3.0
8      -168478.416419      -169142.266113    -168478.416419  167006.060952     166.407619    -169142.266113      265.230476              198.822857        83.20381      150.499756                2.0                4.0                  2.0              2.99619  -85681.828613            166.407619            450.925935  398.619218           1.0      299.619048 -169043.265943       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=139246/525, beliefs_improve=False, alpha=2/525, buf_size=6292/21.[0m
[01/10 18:51:43]  --------------------------------------------------------------------------------
[01/10 18:51:43]  Iteration: 24 (0 solution, 23 counterexamples)
[01/10 18:52:13]  Generator returned sat in 26.904768 secs.
[01/10 18:52:13]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:52:20]  Improved gap from 27.46966552734375 to 100
[01/10 18:52:21]  Improved number of small numbers from 87 to 166 out of a max of 166
[01/10 18:52:21]  Verifer returned sat in 7.208490 secs.
[01/10 18:52:21]  sf_get_cex returned in 7.340578 secs.
[01/10 18:52:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       -170040.97583      -170784.869873     -170040.97583       0.122559       0.121094    -170784.869873        0.000000                0.000000            92.0           100.0                7.0                9.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  743.894043          -1.0      743.893799 -170784.869629       8.0
1       -169856.97583      -170684.899902     -169856.97583  184743.894043     184.000000    -170684.899902       83.939453                0.000000            92.0           100.0                7.0                9.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  743.984619           1.0      743.954346 -170684.869629       8.0
2       -169672.97583      -170684.869629     -169672.97583  184827.924072     184.000000    -170684.869629      167.939453               83.939453            92.0           100.0                6.0                8.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  843.954346           1.0      743.954346 -170584.869629       7.0
3       -169626.97583      -170584.869629     -169626.97583   47011.893799      46.000000    -170584.869629      167.939453              167.939453            92.0           100.0                7.0                9.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  789.954346           1.0      689.954346 -170484.869629       8.0
4       -169442.97583      -170484.869629     -169442.97583  184957.893799     184.000000    -170484.869629      197.939453              167.939453            92.0           100.0                7.0                9.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  843.954346           1.0      743.954346 -170384.869629       8.0
5       -169258.97583      -170316.930176     -169258.97583  185041.893799     184.000000    -170316.930176      281.939453              197.939453            92.0           100.0                7.0                9.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  776.014893           1.0      743.954346 -170284.869629       8.0
6       -169074.97583      -170224.945312     -169074.97583  185057.954346     184.000000    -170224.945312      365.939453              281.939453            92.0           100.0                6.0                8.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  784.030029           1.0      743.954346 -170184.869629       7.0
7       -169028.97583      -170132.960693     -169028.97583   47149.969482      46.000000    -170132.960693      365.939453              365.939453            92.0           100.0                7.0                9.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  738.045410           1.0      689.954346 -170084.869629       8.0
8       -168844.97583      -170040.975830     -168844.97583  185103.984863     184.000000    -170040.975830      395.939453              365.939453            92.0           100.0                7.0                9.0                  7.0                 10.0  -84740.224854                 644.0                1000.0  800.060547           1.0      743.954346 -169984.869629       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=312, beliefs_improve=False, alpha=31/2048, buf_size=3047237/4096.[0m
[01/10 18:52:21]  --------------------------------------------------------------------------------
[01/10 18:52:21]  Iteration: 25 (0 solution, 24 counterexamples)
[01/10 18:52:40]  Generator returned sat in 17.051023 secs.
[01/10 18:52:41]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:52:53]  Improved gap from 0.060546875 to 100
[01/10 18:52:54]  Improved number of small numbers from 129 to 166 out of a max of 166
[01/10 18:52:54]  Verifer returned sat in 12.871251 secs.
[01/10 18:52:54]  sf_get_cex returned in 13.013436 secs.
[01/10 18:52:54]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -619677.053711      -619677.053711    -619677.053711       0.122559       0.121094    -619677.053711        0.000000                0.000000       94.939453       146.40918                2.0                4.0                  2.0             3.060303  -84740.224854            189.878906            448.056413    0.000000          -1.0      -59.636719 -619617.416992       3.0
1      -619487.174805      -619607.174561    -619487.174805  189878.906250     189.878906    -619607.174561        0.000000                0.000000       94.939453       146.40918                0.0                1.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  119.999756           0.0       30.242188 -619517.416992       0.0
2      -619297.295898      -619417.416992    -619297.295898  189998.906006     189.878906    -619417.416992        0.000000                0.000000       94.939453       146.40918                0.0                1.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  120.121094           0.0      120.121094 -619417.416992       0.0
3      -619107.416992      -619417.416992    -619107.416992  189999.027344     189.878906    -619417.416992        0.000000                0.000000       94.939453       146.40918                0.0                1.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  310.000000           0.0      210.000000 -619317.416992       0.0
4      -618917.538086      -619297.235107    -618917.538086  190188.906250     189.878906    -619297.235107        0.000000                0.000000       94.939453       146.40918                0.0                2.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  379.697021           0.0      299.878906 -619217.416992       1.0
5      -618727.659180      -619141.082764    -618727.659180  190258.603271     189.878906    -619141.082764       89.818359                0.000000       94.939453       146.40918                1.0                3.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  323.605225           1.0      299.939453 -619117.416992       2.0
6      -618537.780273      -619117.416748    -618537.780273  190292.329834     189.878906    -619117.416748      179.697266               89.818359       94.939453       146.40918                2.0                4.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  399.939209           1.0      299.939453 -619017.416992       3.0
7      -618347.901367      -618994.613037    -618347.901367  190458.542725     189.878906    -618994.613037      269.576172              179.697266       94.939453       146.40918                2.0                4.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  377.135498           1.0      299.939453 -618917.416992       3.0
8      -618158.022461      -618848.143311    -618158.022461  190525.617920     189.878906    -618848.143311      359.455078              269.576172       94.939453       146.40918                2.0                4.0                  2.0             3.060303  -84740.224854            189.878906            448.056413  330.665771           1.0      299.939453 -618817.416992       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=184041/512, beliefs_improve=False, alpha=247/4096, buf_size=153569/512.[0m
[01/10 18:52:54]  --------------------------------------------------------------------------------
[01/10 18:52:54]  Iteration: 26 (0 solution, 25 counterexamples)
[01/10 18:54:01]  Generator returned sat in 64.149624 secs.
[01/10 18:54:01]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:54:18]  Improved gap from 18.666666666666668 to 48.4375
[01/10 18:54:18]  Improved number of small numbers from 129 to 166 out of a max of 166
[01/10 18:54:18]  Verifer returned sat in 17.050178 secs.
[01/10 18:54:18]  sf_get_cex returned in 17.198190 secs.
[01/10 18:54:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -488923.450684      -488931.958496    -488923.450684       0.122314       0.120850    -488931.958496             0.0                     0.0       48.780273           100.0                0.0                2.0                  0.0             1.969727  -85047.482666                   0.0            196.972656   8.507812          -1.0        0.060547 -488923.511230       1.0
1      -488874.670410      -488923.511230    -488874.670410   48788.781250      48.780273    -488923.511230             0.0                     0.0       48.780273           100.0                0.0                2.0                  0.0             1.969727  -84996.323486                   0.0            196.972656  48.840820           0.0        0.000000 -488874.670410       1.0
2      -488825.890137      -488874.579590    -488825.890137   48829.114258      48.780273    -488874.579590             0.0                     0.0       48.780273           100.0                0.0                1.0                  0.0             1.969727  -84945.164307                   0.0            196.972656  48.689453           0.0       -0.060547 -488825.829590       0.0
3      -488777.109863      -488825.829590    -488777.109863   48828.962891      48.780273    -488825.829590             0.0                     0.0       48.780273           100.0                0.0                1.0                  0.0             1.969727  -84893.914307                   0.0            196.972656  48.719727           0.0       -0.030273 -488777.079590       0.0
4      -488728.329590      -488777.079590    -488728.329590   48828.993164      48.780273    -488777.079590             0.0                     0.0       48.780273           100.0                0.0                1.0                  0.0             1.969727  -84842.664307                   0.0            196.972656  48.750000           0.0        0.000000 -488728.329590       0.0
5      -488679.549316      -488728.329590    -488679.549316   48829.023438      48.780273    -488728.329590             0.0                     0.0       48.780273           100.0                0.0                2.0                  0.0             1.969727  -84791.444580                   0.0            196.972656  48.780273           0.0        0.000000 -488679.549316       1.0
6      -488630.769043      -488679.549316    -488630.769043   48829.053711      48.780273    -488679.549316             0.0                     0.0       48.780273           100.0                0.0                2.0                  0.0             1.969727  -84740.225098                   0.0            196.972656  48.780273           0.0       -0.000244 -488630.768799       1.0
7      -488581.988770      -488630.738770    -488581.988770   48829.053711      48.780273    -488630.738770             0.0                     0.0       48.780273           100.0                0.0                1.0                  0.0             1.969727  -84689.005127                   0.0            196.972656  48.750000           0.0        0.000000 -488581.988770       0.0
8      -488533.208496      -488581.988770    -488533.208496   48829.023438      48.780273    -488581.988770             0.0                     0.0       48.780273           100.0                0.0                2.0                  0.0             1.969727  -84637.785400                   0.0            196.972656  48.780273           0.0        0.000000 -488533.208496       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=31/1024, buf_size=31/512.[0m
[01/10 18:54:18]  --------------------------------------------------------------------------------
[01/10 18:54:18]  Iteration: 27 (0 solution, 26 counterexamples)
[01/10 18:55:31]  Generator returned sat in 69.879452 secs.
[01/10 18:55:31]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:55:40]  Improved gap from 48.75 to 100
[01/10 18:55:42]  Improved number of small numbers from 123 to 123 out of a max of 166
[01/10 18:55:42]  Verifer returned sat in 10.608429 secs.
[01/10 18:55:42]  sf_get_cex returned in 10.732510 secs.
[01/10 18:55:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0      -488126.546059      -488925.933865    -488126.546059       0.122314       0.120850    -488925.933865        0.000000                0.000000           100.0           100.0                7.0                9.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  799.387806          -1.0      799.356572 -488925.90263       8.0
1      -488026.539812      -488925.871396    -488026.539812  100805.634683     100.006247    -488925.871396        0.000000                0.000000           100.0           100.0                7.0                9.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  899.331584           1.0      799.362819 -488825.90263       8.0
2      -487926.533565      -488825.877643    -487926.533565  100905.578461     100.006247    -488825.877643        0.000000                0.000000           100.0           100.0                7.0                9.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  899.344078           1.0      799.369065 -488725.90263       8.0
3      -487826.527318      -488625.915124    -487826.527318  100905.590955     100.006247    -488625.915124        0.000000                0.000000           100.0           100.0                7.0                9.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  799.387806           1.0      799.375312 -488625.90263       8.0
4      -487726.521071      -488625.902630    -487726.521071  100805.634683     100.006247    -488625.902630        0.006247                0.000000           100.0           100.0                7.0                9.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  899.375312           1.0      799.375312 -488525.90263       8.0
5      -487626.514824      -488425.902630    -487626.514824  100905.628436     100.006247    -488425.902630        0.012494                0.006247           100.0           100.0                7.0                9.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  799.375312           1.0      799.375312 -488425.90263       8.0
6      -487526.508577      -488326.552306    -487526.508577  100805.634683     100.006247    -488326.552306        0.018741                0.012494           100.0           100.0                6.0                8.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  800.024988           1.0      799.375312 -488325.90263       7.0
7      -487426.514824      -488238.396384    -487426.514824  100793.796852      99.993753    -488238.396384        0.018741                0.018741           100.0           100.0                6.0                8.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  811.862819           1.0      799.369065 -488225.90263       7.0
8      -487326.521071      -488225.890137    -487326.521071  100805.634683      99.993753    -488225.890137        0.018741                0.018741           100.0           100.0                7.0                9.0                  7.0             7.993753  -85045.091266                 700.0            799.375312  899.350325           1.0      799.362819 -488125.90263       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=0, loss_amount=25/1334, beliefs_improve=False, alpha=25/4002, buf_size=1599550/2001.[0m
[01/10 18:55:42]  --------------------------------------------------------------------------------
[01/10 18:55:42]  Iteration: 28 (0 solution, 27 counterexamples)
[01/10 18:57:30]  Generator returned sat in 104.762282 secs.
[01/10 18:57:30]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:57:43]  Verifer returned unsat in 12.480480 secs.
[01/10 18:57:43]  sf_get_cex returned in 12.618661 secs.
[01/10 18:57:43]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:57:43]  --------------------------------------------------------------------------------
[01/10 18:57:43]  Iteration: 29 (1 solution, 27 counterexamples)
[01/10 18:58:00]  Generator returned sat in 13.794306 secs.
[01/10 18:58:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:58:12]  Verifer returned unsat in 11.590265 secs.
[01/10 18:58:12]  sf_get_cex returned in 11.730141 secs.
[01/10 18:58:12]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:58:12]  --------------------------------------------------------------------------------
[01/10 18:58:12]  Iteration: 30 (2 solution, 27 counterexamples)
[01/10 18:58:29]  Generator returned sat in 13.651197 secs.
[01/10 18:58:29]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:58:43]  Improved gap from 0.0301513671875 to 48.4375
[01/10 18:58:44]  Improved number of small numbers from 120 to 166 out of a max of 166
[01/10 18:58:44]  Verifer returned sat in 14.727160 secs.
[01/10 18:58:44]  sf_get_cex returned in 14.865526 secs.
[01/10 18:58:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -486259.651855      -486259.712158    -486259.651855       0.122314       0.120605    -486259.712158             0.0                     0.0       96.995605           165.0                7.0                9.0                  7.0         25626.060303  -86029.558350            678.969238          4.228300e+06   0.060303          -1.0        0.060059 -486259.711914       8.0
1      -486211.154053      -486259.651855    -486211.154053   48497.863037      48.497803    -486259.651855             0.0                     0.0       96.995605           165.0                4.0                6.0                  7.0         25626.060303  -85978.116211            678.969238          4.228300e+06  48.497803           1.0        0.000000 -486211.154053       5.0
2      -486162.656250      -486211.154053    -486162.656250   48546.300537      48.497803    -486211.154053             0.0                     0.0       96.995605           165.0                0.0                2.0                  7.0         25626.060303  -85926.614258            678.969238          4.228300e+06  48.497803           0.0       -0.000244 -486162.656006       1.0
3      -486114.158447      -486162.475342    -486114.158447   48546.300537      48.497803    -486162.475342             0.0                     0.0       96.995605           165.0                0.0                1.0                  7.0         25626.060303  -85875.232422            678.969238          4.228300e+06  48.316895           0.0       -0.120605 -486114.037842       0.0
4      -486065.660645      -486114.037842    -486065.660645   48546.119629      48.497803    -486114.037842             0.0                     0.0       96.995605           165.0                0.0                1.0                  7.0         25626.060303  -85823.669922            678.969238          4.228300e+06  48.377197           0.0       -0.060303 -486065.600342       0.0
5      -486017.162842      -486065.600342    -486017.162842   48546.179932      48.497803    -486065.600342             0.0                     0.0       96.995605           165.0                0.0                1.0                  7.0         25626.060303  -85772.107422            678.969238          4.228300e+06  48.437500           0.0        0.000000 -486017.162842       0.0
6      -485968.665039      -486017.162842    -485968.665039   48546.240234      48.497803    -486017.162842             0.0                     0.0       96.995605           165.0                0.0                2.0                  7.0         25626.060303  -85720.605225            678.969238          4.228300e+06  48.497803           0.0        0.000000 -485968.665039       1.0
7      -485920.167236      -485968.604736    -485920.167236   48546.300537      48.497803    -485968.604736             0.0                     0.0       96.995605           165.0                0.0                1.0                  7.0         25626.060303  -85669.103027            678.969238          4.228300e+06  48.437500           0.0        0.000000 -485920.167236       0.0
8      -485871.669434      -485920.167236    -485871.669434   48546.240234      48.497803    -485920.167236             0.0                     0.0       96.995605           165.0                0.0                2.0                  7.0         25626.060303  -85617.600830            678.969238          4.228300e+06  48.497803           0.0        0.000000 -485871.669434       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=247/4096, buf_size=700.[0m
[01/10 18:58:44]  --------------------------------------------------------------------------------
[01/10 18:58:44]  Iteration: 31 (2 solution, 28 counterexamples)
[01/10 18:59:24]  Generator returned sat in 36.680986 secs.
[01/10 18:59:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:00:15]  Improved gap from 0.060302734375 to 100
[01/10 19:00:16]  Improved number of small numbers from 120 to 166 out of a max of 166
[01/10 19:00:16]  Verifer returned sat in 51.744143 secs.
[01/10 19:00:16]  sf_get_cex returned in 51.881061 secs.
[01/10 19:00:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -486518.566162      -486518.566162    -486518.566162       0.122070       0.120361    -486518.566162        0.000000                0.000000       93.202637      172.405273                2.0                4.0                  2.0             2.939697  -83941.017822            186.405273            506.819311    0.000000          -1.0      -65.711914 -486452.854248       3.0
1      -486332.160889      -486352.854248    -486332.160889  186405.273438     186.405273    -486352.854248        0.000000                0.000000       93.202637      172.405273                0.0                1.0                  2.0             2.939697  -83941.017822            186.405273            506.819311   20.693359           0.0       20.693359 -486352.854248       0.0
2      -486145.755615      -486252.854248    -486145.755615  186425.966797     186.405273    -486252.854248        0.000000                0.000000       93.202637      172.405273                0.0                1.0                  2.0             2.939697  -83941.017822            186.405273            506.819311  107.098633           0.0      107.098633 -486252.854248       0.0
3      -485959.350342      -486239.138916    -485959.350342  186512.372070     186.405273    -486239.138916        0.000000                0.000000       93.202637      172.405273                0.0                2.0                  2.0             2.939697  -83941.017822            186.405273            506.819311  279.788574           0.0      193.503906 -486152.854248       1.0
4      -485772.945068      -486052.854248    -485772.945068  186685.062012     186.405273    -486052.854248        0.000000                0.000000       93.202637      172.405273                0.0                2.0                  2.0             2.939697  -83941.017822            186.405273            506.819311  279.909180           0.0      279.909180 -486052.854248       1.0
5      -485586.539795      -486052.854248    -485586.539795  186685.182617     186.405273    -486052.854248       72.344971                0.000000       93.202637      172.405273                0.0                2.0                  2.0             2.939697  -83941.017822            186.405273            506.819311  393.969482           0.0      293.969482 -485952.854248       1.0
6      -485400.134521      -485952.854248    -485400.134521  186871.587891     186.405273    -485952.854248      158.750244               72.344971       93.202637      172.405273                1.0                3.0                  2.0             2.939697  -83941.017822            186.405273            506.819311  393.969482           1.0      293.969482 -485852.854248       2.0
7      -485213.729248      -485773.427246    -485213.729248  186957.993164     186.405273    -485773.427246      245.155518              158.750244       93.202637      172.405273                2.0                4.0                  2.0             2.939697  -83941.017822            186.405273            506.819311  314.542480           1.0      293.969482 -485752.854248       3.0
8      -485027.323975      -485680.284912    -485027.323975  186964.971436     186.405273    -485680.284912      331.560791              245.155518       93.202637      172.405273                2.0                4.0                  2.0             2.939697  -83941.017822            186.405273            506.819311  321.400146           1.0      293.969482 -485652.854248       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1358073/4096, beliefs_improve=False, alpha=123/2048, buf_size=1204099/4096.[0m
[01/10 19:00:16]  --------------------------------------------------------------------------------
[01/10 19:00:16]  Iteration: 32 (2 solution, 29 counterexamples)
[01/10 19:01:20]  Generator returned sat in 60.397717 secs.
[01/10 19:01:20]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + 1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:01:44]  Improved gap from 0.0 to 48.4375
[01/10 19:01:47]  Improved number of small numbers from 89 to 116 out of a max of 166
[01/10 19:01:47]  Verifer returned sat in 26.444908 secs.
[01/10 19:01:47]  sf_get_cex returned in 26.577773 secs.
[01/10 19:01:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -467225.070758      -467228.466632    -467225.070758       0.121826       0.120361    -467228.466632             0.0                     0.0       98.995361      199.050781                2.0                4.0                  2.0             2.939697 -103165.405518            197.990723            585.149037   3.395874          -1.0        3.395794 -467228.466553       3.0
1      -467175.573078      -467228.406452    -467175.573078   49501.076538      49.497681    -467228.406452             0.0                     0.0       98.995361      199.050781                1.0                3.0                  2.0             2.939697 -103118.298993            197.990723            585.149037  52.833374           1.0        0.000000 -467175.573078       2.0
2      -467126.075397      -467175.573078    -467126.075397   49550.514038      49.497681    -467175.573078             0.0                     0.0       98.995361      199.050781                0.0                2.0                  2.0             2.939697 -103067.796673            197.990723            585.149037  49.497681           0.0        0.000000 -467126.075397       1.0
3      -467076.577716      -467126.075397    -467076.577716   49547.178345      49.497681    -467126.075397             0.0                     0.0       98.995361      199.050781                0.0                2.0                  2.0             2.939697 -103017.294434            197.990723            585.149037  49.497681           0.0       -0.000080 -467076.577637       1.0
4      -467027.080036      -467076.517536    -467027.080036   49547.178345      49.497681    -467076.517536             0.0                     0.0       98.995361      199.050781                0.0                1.0                  2.0             2.939697 -102966.792035            197.990723            585.149037  49.437500           0.0        0.000000 -467027.080036       0.0
5      -466977.582355      -467027.080036    -466977.582355   49547.118164      49.497681    -467027.080036             0.0                     0.0       98.995361      199.050781                0.0                2.0                  2.0             2.939697 -102916.289795            197.990723            585.149037  49.497681           0.0       -0.000080 -466977.582275       1.0
6      -466928.084674      -466977.522174    -466928.084674   49547.178345      49.497681    -466977.522174             0.0                     0.0       98.995361      199.050781                0.0                1.0                  2.0             2.939697 -102865.787598            197.990723            585.149037  49.437500           0.0       -0.000202 -466928.084473       0.0
7      -466878.586994      -466928.024494    -466878.586994   49547.118164      49.497681    -466928.024494             0.0                     0.0       98.995361      199.050781                0.0                1.0                  2.0             2.939697 -102815.285156            197.990723            585.149037  49.437500           0.0       -0.000080 -466878.586914       0.0
8      -466829.089313      -466878.526611    -466829.089313   49547.118164      49.497681    -466878.526611             0.0                     0.0       98.995361      199.050781                0.0                1.0                  2.0             2.939697 -102764.782959            197.990723            585.149037  49.437298           0.0       -0.000202 -466829.089111       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40837/2048, buf_size=200.[0m
[01/10 19:01:47]  --------------------------------------------------------------------------------
[01/10 19:01:47]  Iteration: 33 (2 solution, 30 counterexamples)
[01/10 19:02:10]  Generator returned sat in 19.143123 secs.
[01/10 19:02:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 19:02:38]  Improved gap from 0.0601806640625 to 100
[01/10 19:02:38]  Improved number of small numbers from 99 to 166 out of a max of 166
[01/10 19:02:38]  Verifer returned sat in 28.433408 secs.
[01/10 19:02:38]  sf_get_cex returned in 28.569410 secs.
[01/10 19:02:38]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -467278.987549      -467278.987549    -467278.987549       0.121582       0.120117    -467278.987549             0.0                     0.0           100.0      199.909912                7.0                9.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072    0.000000          -1.0       -0.120361 -467278.867188       8.0
1      -467078.987549      -467178.867188    -467078.987549  200000.000000     200.000000    -467178.867188             0.0                     0.0           100.0      199.909912                0.0                1.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072   99.879639           0.0       99.879639 -467178.867188       0.0
2      -466878.987549      -467078.867188    -466878.987549  200099.879639     200.000000    -467078.867188             0.0                     0.0           100.0      199.909912                0.0                1.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072  199.879639           0.0      199.879639 -467078.867188       0.0
3      -466678.987549      -467078.867188    -466678.987549  200199.879639     200.000000    -467078.867188             0.0                     0.0           100.0      199.909912                0.0                1.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072  399.879639           0.0      299.879639 -466978.867188       0.0
4      -466478.987549      -466878.867188    -466478.987549  200399.879639     200.000000    -466878.867188             0.0                     0.0           100.0      199.909912                0.0                2.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072  399.879639           0.0      399.879639 -466878.867188       1.0
5      -466278.987549      -466878.867188    -466278.987549  200399.879639     200.000000    -466878.867188             0.0                     0.0           100.0      199.909912                0.0                2.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072  599.879639           0.0      499.879639 -466778.867188       1.0
6      -466078.987549      -466678.972412    -466078.987549  200599.879639     200.000000    -466678.972412             0.0                     0.0           100.0      199.909912                1.0                3.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072  599.984863           1.0      599.879639 -466678.867188       2.0
7      -465878.987549      -466578.942383    -465878.987549  200599.984863     200.000000    -466578.942383             0.0                     0.0           100.0      199.909912                2.0                4.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072  699.954834           1.0      699.879639 -466578.867188       3.0
8      -465678.987549      -466479.047363    -465678.987549  200699.954834     200.000000    -466479.047363             0.0                     0.0           100.0      199.909912                3.0                5.0                  7.0             7.999023 -103115.004883                 700.0           1599.084072  800.059814           1.0      799.879639 -466478.867188       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=31/2048, buf_size=204773/256.[0m
[01/10 19:02:38]  --------------------------------------------------------------------------------
[01/10 19:02:38]  Iteration: 34 (2 solution, 31 counterexamples)
[01/10 19:03:39]  Generator returned sat in 57.001859 secs.
[01/10 19:03:39]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 19:04:11]  Improved gap from 19.5350341796875 to 100
[01/10 19:04:12]  Improved number of small numbers from 166 to 166 out of a max of 166
[01/10 19:04:12]  Verifer returned sat in 32.224946 secs.
[01/10 19:04:12]  sf_get_cex returned in 32.363549 secs.
[01/10 19:04:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -468965.267578      -469764.727051    -468965.267578       0.121582       0.120117    -469764.727051             0.0                     0.0           100.0           118.0                7.0                9.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  799.459473          -1.0      699.819824 -469665.087402       8.0
1      -468855.327637      -469664.787109    -468855.327637  110739.400879     109.939941    -469664.787109             0.0                     0.0           100.0           118.0                5.0                7.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  809.459473           1.0      709.759766 -469565.087402       6.0
2      -468745.387695      -469564.847168    -468745.387695  110749.400879     109.939941    -469564.847168             0.0                     0.0           100.0           118.0                5.0                7.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  819.459473           1.0      719.699707 -469465.087402       6.0
3      -468635.447754      -469401.327637    -468635.447754  110759.400879     109.939941    -469401.327637             0.0                     0.0           100.0           118.0                6.0                8.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  765.879883           1.0      729.639648 -469365.087402       7.0
4      -468525.507812      -469355.387695    -468525.507812  110705.821289     109.939941    -469355.387695             0.0                     0.0           100.0           118.0                6.0                8.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  829.879883           1.0      739.579590 -469265.087402       7.0
5      -468415.567871      -469165.087402    -468415.567871  110769.821289     109.939941    -469165.087402             0.0                     0.0           100.0           118.0                6.0                8.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  749.519531           1.0      749.519531 -469165.087402       7.0
6      -468305.627930      -469065.147461    -468305.627930  110689.460938     109.939941    -469065.147461             0.0                     0.0           100.0           118.0                6.0                8.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  759.519531           1.0      759.459473 -469065.087402       7.0
7      -468195.687988      -468965.207520    -468195.687988  110699.460938     109.939941    -468965.207520             0.0                     0.0           100.0           118.0                5.0                7.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  769.519531           1.0      769.399414 -468965.087402       6.0
8      -468085.748047      -468929.087402    -468085.748047  110709.460938     109.939941    -468929.087402             0.0                     0.0           100.0           118.0                6.0                8.0                  7.0            16.060059 -100728.784668                 700.0           1895.086914  843.339355           1.0      779.339355 -468865.087402       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=20357/2048, buf_size=798105/1024.[0m
[01/10 19:04:12]  --------------------------------------------------------------------------------
[01/10 19:04:12]  Iteration: 35 (2 solution, 32 counterexamples)
[01/10 19:05:16]  Generator returned sat in 59.874356 secs.
[01/10 19:05:16]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:05:35]  Improved number of small numbers from 121 to 165 out of a max of 165
[01/10 19:05:35]  Verifer returned sat in 18.625709 secs.
[01/10 19:05:35]  sf_get_cex returned in 18.759279 secs.
[01/10 19:05:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -975063.333496      -975258.213623    -975063.333496       0.121582       0.119629    -975258.213623        0.000000                0.000000            99.0           134.0                2.0                4.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  194.880127          -1.0      194.880127 -975258.213623       3.0
1      -974958.213623      -975158.213623    -974958.213623  105314.753174     105.119873    -975158.213623        0.000000                0.000000            99.0           134.0                0.0                2.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  200.000000           0.0      200.000000 -975158.213623       1.0
2      -974853.093750      -975158.213623    -974853.093750  105319.873047     105.119873    -975158.213623        5.059814                0.000000            99.0           134.0                0.0                2.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  300.060059           0.0      200.060059 -975058.213623       1.0
3      -974747.973877      -975001.872803    -974747.973877  105424.992920     105.119873    -975001.872803       10.179688                5.059814            99.0           134.0                1.0                3.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  243.719238           1.0      200.060059 -974958.213623       2.0
4      -974642.854004      -974958.213623    -974642.854004  105373.771973     105.119873    -974958.213623       15.299561               10.179688            99.0           134.0                2.0                4.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  300.060059           1.0      200.060059 -974858.213623       3.0
5      -974537.734131      -974858.153564    -974537.734131  105435.232666     105.119873    -974858.153564       20.419434               15.299561            99.0           134.0                2.0                4.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  300.000000           1.0      200.060059 -974758.213623       3.0
6      -974432.614258      -974733.872803    -974432.614258  105440.292480     105.119873    -974733.872803       25.539307               20.419434            99.0           134.0                1.0                3.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  275.719238           1.0      200.060059 -974658.213623       2.0
7      -974327.494385      -974599.872803    -974327.494385  105421.131592     105.119873    -974599.872803       30.659180               25.539307            99.0           134.0                1.0                3.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  241.719238           1.0      200.060059 -974558.213623       2.0
8      -974222.374512      -974465.633301    -974222.374512  105392.251465     105.119873    -974465.633301       35.779053               30.659180            99.0           134.0                1.0                3.0                  2.0             2.940186 -100728.784912                 198.0            393.984863  207.479736           1.0      200.060059 -974458.213623       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=146551/4096, beliefs_improve=False, alpha=25067/4096, buf_size=409723/2048.[0m
[01/10 19:05:35]  --------------------------------------------------------------------------------
[01/10 19:05:35]  Iteration: 36 (2 solution, 33 counterexamples)
[01/10 19:06:18]  Generator returned sat in 39.049994 secs.
[01/10 19:06:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:07:58]  Improved gap from 0.0299072265625 to 100
[01/10 19:07:59]  Improved number of small numbers from 123 to 132 out of a max of 166
[01/10 19:07:59]  Verifer returned sat in 100.731889 secs.
[01/10 19:07:59]  sf_get_cex returned in 100.871399 secs.
[01/10 19:07:59]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -970702.462891      -970702.462891    -970702.462891       0.121582       0.119385    -970702.462891        0.000000                0.000000       97.886556      195.593506                2.0                4.0                  2.0             2.940186 -100728.784912            195.773112            575.081199    0.000000          -1.0      -89.133708 -970613.329183       3.0
1      -970506.689779      -970604.636149    -970506.689779  195773.111979     195.773112    -970604.636149        0.000000                0.000000       97.886556      195.593506                0.0                1.0                  2.0             2.940186 -100728.784912            195.773112            575.081199   97.946370           0.0        6.639404 -970513.329183       0.0
2      -970310.916667      -970506.689779    -970310.916667  195871.058350     195.773112    -970506.689779        0.000000                0.000000       97.886556      195.593506                0.0                2.0                  2.0             2.940186 -100728.784912            195.773112            575.081199  195.773112           0.0      102.412516 -970413.329183       1.0
3      -970115.143555      -970313.329183    -970115.143555  195968.885091     195.773112    -970313.329183        0.000000                0.000000       97.886556      195.593506                0.0                2.0                  2.0             2.940186 -100728.784912            195.773112            575.081199  198.185628           0.0      198.185628 -970313.329183       1.0
4      -969919.370443      -970213.329183    -969919.370443  195971.297607     195.773112    -970213.329183        0.000000                0.000000       97.886556      195.593506                0.0                2.0                  2.0             2.940186 -100728.784912            195.773112            575.081199  293.958740           0.0      293.958740 -970213.329183       1.0
5      -969723.597331      -970213.329183    -969723.597331  196067.070719     195.773112    -970213.329183       95.713298                0.000000       97.886556      195.593506                0.0                2.0                  2.0             2.940186 -100728.784912            195.773112            575.081199  394.018555           0.0      294.018555 -970113.329183       1.0
6      -969527.824219      -970017.675700    -969527.824219  196262.843831     195.773112    -970017.675700      191.486410               95.713298       97.886556      195.593506                1.0                3.0                  2.0             2.940186 -100728.784912            195.773112            575.081199  298.365072           1.0      294.018555 -970013.329183       2.0
7      -969332.051107      -970013.329183    -969332.051107  196262.963460     195.773112    -970013.329183      287.259521              191.486410       97.886556      195.593506                2.0                4.0                  2.0             2.940186 -100728.784912            195.773112            575.081199  394.018555           1.0      294.018555 -969913.329183       3.0
8      -969136.277995      -969822.022217    -969136.277995  196454.390055     195.773112    -969822.022217      383.032633              287.259521       97.886556      195.593506                2.0                4.0                  2.0             2.940186 -100728.784912            195.773112            575.081199  302.711589           1.0      294.018555 -969813.329183       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=4706705/12288, beliefs_improve=False, alpha=40837/2048, buf_size=301075/1024.[0m
[01/10 19:07:59]  --------------------------------------------------------------------------------
[01/10 19:07:59]  Iteration: 37 (2 solution, 34 counterexamples)
[01/10 19:08:37]  Generator returned sat in 34.194316 secs.
[01/10 19:08:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:08:49]  Improved gap from 0.0 to 48.4375
[01/10 19:08:50]  Improved number of small numbers from 109 to 124 out of a max of 166
[01/10 19:08:50]  Verifer returned sat in 13.067076 secs.
[01/10 19:08:50]  sf_get_cex returned in 13.197890 secs.
[01/10 19:08:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -970099.020874      -970099.020874    -970099.020874       0.121582       0.119385    -970099.020874             0.0                     0.0       62.559692           113.0                0.0                2.0                  0.0              3.05957 -100831.730713                   0.0            345.731445   0.000000          -1.0       -0.059570 -970098.961304       1.0
1      -970050.523682      -970098.961182    -970050.523682   48497.192383      48.497192    -970098.961182             0.0                     0.0       62.559692           113.0                0.0                1.0                  0.0              3.05957 -100780.347412                   0.0            345.731445  48.437500           0.0       -0.179077 -970050.344604       0.0
2      -970002.026489      -970050.344604    -970002.026489   48545.629883      48.497192    -970050.344604             0.0                     0.0       62.559692           113.0                0.0                1.0                  0.0              3.05957 -100728.784912                   0.0            345.731445  48.318115           0.0       -0.119385 -970001.907104       0.0
3      -969953.529297      -970001.907104    -969953.529297   48545.510498      48.497192    -970001.907104             0.0                     0.0       62.559692           113.0                0.0                1.0                  0.0              3.05957 -100677.222412                   0.0            345.731445  48.377808           0.0       -0.059692 -969953.469604       0.0
4      -969905.032104      -969953.469604    -969905.032104   48545.570190      48.497192    -969953.469604             0.0                     0.0       62.559692           113.0                0.0                1.0                  0.0              3.05957 -100625.659912                   0.0            345.731445  48.437500           0.0        0.000000 -969905.032104       0.0
5      -969856.534912      -969905.032104    -969856.534912   48545.629883      48.497192    -969905.032104             0.0                     0.0       62.559692           113.0                0.0                2.0                  0.0              3.05957 -100574.157104                   0.0            345.731445  48.497192           0.0        0.000000 -969856.534912       1.0
6      -969808.037720      -969856.534912    -969808.037720   48545.689575      48.497192    -969856.534912             0.0                     0.0       62.559692           113.0                0.0                2.0                  0.0              3.05957 -100522.654541                   0.0            345.731445  48.497192           0.0       -0.000244 -969808.037476       1.0
7      -969759.540527      -969807.978027    -969759.540527   48545.689575      48.497192    -969807.978027             0.0                     0.0       62.559692           113.0                0.0                1.0                  0.0              3.05957 -100471.151611                   0.0            345.731445  48.437500           0.0       -0.000122 -969759.540405       0.0
8      -969711.043335      -969759.480713    -969711.043335   48545.629883      48.497192    -969759.480713             0.0                     0.0       62.559692           113.0                0.0                1.0                  0.0              3.05957 -100471.151367                   0.0            345.731445  48.437378           0.0      -51.502686 -969659.540649       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=225/16, buf_size=57845/4096.[0m
[01/10 19:08:50]  --------------------------------------------------------------------------------
[01/10 19:08:50]  Iteration: 38 (2 solution, 35 counterexamples)
[01/10 19:13:27]  Generator returned sat in 272.743800 secs.
[01/10 19:13:28]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:13:45]  Improved gap from 0.71630859375 to 100
[01/10 19:13:45]  Improved number of small numbers from 117 to 166 out of a max of 166
[01/10 19:13:45]  Verifer returned sat in 17.476785 secs.
[01/10 19:13:45]  sf_get_cex returned in 17.609274 secs.
[01/10 19:13:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.173010e+06       -1.173910e+06     -1.173010e+06       0.121338       0.119141     -1.173910e+06             0.0                     0.0           100.0           105.0                7.0                9.0                  7.0                 10.0  102899.541504                 700.0                1050.0  900.238770          -1.0       800.23877 -1.173810e+06       8.0
1       -1.172910e+06       -1.173710e+06     -1.172910e+06  100900.238770     100.000000     -1.173710e+06             0.0                     0.0           100.0           105.0                7.0                9.0                  7.0                 10.0  102899.541504                 700.0                1050.0  800.238770           1.0       800.23877 -1.173710e+06       8.0
2       -1.172810e+06       -1.173610e+06     -1.172810e+06  100800.238770     100.000000     -1.173610e+06             0.0                     0.0           100.0           105.0                7.0                9.0                  7.0                 10.0  102899.541504                 700.0                1050.0  800.238770           1.0       800.23877 -1.173610e+06       8.0
3       -1.172710e+06       -1.173510e+06     -1.172710e+06  100800.238770     100.000000     -1.173510e+06             0.0                     0.0           100.0           105.0                6.0                8.0                  7.0                 10.0  102899.541504                 700.0                1050.0  800.238770           1.0       800.23877 -1.173510e+06       7.0
4       -1.172610e+06       -1.173500e+06     -1.172610e+06  100800.238770     100.000000     -1.173500e+06             0.0                     0.0           100.0           105.0                6.0                8.0                  7.0                 10.0  102899.541504                 700.0                1050.0  890.119385           1.0       800.23877 -1.173410e+06       7.0
5       -1.172510e+06       -1.173395e+06     -1.172510e+06  100890.119385     100.000000     -1.173395e+06             0.0                     0.0           100.0           105.0                7.0                9.0                  7.0                 10.0  102899.541504                 700.0                1050.0  885.059570           1.0       800.23877 -1.173310e+06       8.0
6       -1.172410e+06       -1.173266e+06     -1.172410e+06  100885.059570     100.000000     -1.173266e+06             0.0                     0.0           100.0           105.0                6.0                8.0                  7.0                 10.0  102899.541504                 700.0                1050.0  856.000000           1.0       800.23877 -1.173210e+06       7.0
7       -1.172310e+06       -1.173185e+06     -1.172310e+06  100856.000000     100.000000     -1.173185e+06             0.0                     0.0           100.0           105.0                7.0                9.0                  7.0                 10.0  102899.541504                 700.0                1050.0  874.940186           1.0       800.23877 -1.173110e+06       8.0
8       -1.172210e+06       -1.173079e+06     -1.172210e+06  100874.940186     100.000000     -1.173079e+06             0.0                     0.0           100.0           105.0                7.0                9.0                  7.0                 10.0  102899.541504                 700.0                1050.0  869.880615           1.0       800.23877 -1.173010e+06       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=61/1024, buf_size=3278023/4096.[0m
[01/10 19:13:45]  --------------------------------------------------------------------------------
[01/10 19:13:45]  Iteration: 39 (2 solution, 36 counterexamples)
[01/10 19:16:22]  Generator returned sat in 151.755184 secs.
[01/10 19:16:22]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:16:34]  Improved number of small numbers from 165 to 165 out of a max of 165
[01/10 19:16:34]  Verifer returned sat in 11.875048 secs.
[01/10 19:16:34]  sf_get_cex returned in 12.024203 secs.
[01/10 19:16:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.173110e+06       -1.173910e+06     -1.173110e+06       0.121338       0.119141     -1.173910e+06         0.05957                 0.00000           100.0           100.0                7.0                9.0                  7.0                 14.0  102899.541504                 700.0                1400.0  800.000000          -1.0      700.000000 -1.173810e+06       8.0
1       -1.173028e+06       -1.173710e+06     -1.173028e+06   82740.489258      81.940430     -1.173710e+06         0.05957                 0.05957           100.0           100.0                7.0                9.0                  7.0                 14.0  102899.541504                 700.0                1400.0  681.940430           1.0      681.940430 -1.173710e+06       8.0
2       -1.172946e+06       -1.173610e+06     -1.172946e+06   82622.429688      81.940430     -1.173610e+06         0.05957                 0.05957           100.0           100.0                6.0                8.0                  7.0                 14.0  102899.541504                 700.0                1400.0  664.059570           1.0      663.880859 -1.173610e+06       7.0
3       -1.172746e+06       -1.173600e+06     -1.172746e+06  200664.119141     200.000000     -1.173600e+06         0.05957                 0.05957           100.0           100.0                6.0                8.0                  7.0                 14.0  102899.541504                 700.0                1400.0  854.238281           1.0      763.880859 -1.173510e+06       7.0
4       -1.172546e+06       -1.173410e+06     -1.172546e+06  200854.297852     200.000000     -1.173410e+06         0.05957                 0.05957           100.0           100.0                7.0                9.0                  7.0                 14.0  102899.541504                 700.0                1400.0  863.880859           1.0      863.880859 -1.173410e+06       8.0
5       -1.172464e+06       -1.173410e+06     -1.172464e+06   82804.370117      81.940430     -1.173410e+06         0.05957                 0.05957           100.0           100.0                7.0                9.0                  7.0                 14.0  102899.541504                 700.0                1400.0  945.642578           1.0      845.821289 -1.173310e+06       8.0
6       -1.172382e+06       -1.173310e+06     -1.172382e+06   82886.131836      81.940430     -1.173310e+06         0.05957                 0.05957           100.0           100.0                7.0                9.0                  7.0                 14.0  102899.541504                 700.0                1400.0  927.761719           1.0      827.761719 -1.173210e+06       8.0
7       -1.172300e+06       -1.173110e+06     -1.172300e+06   82868.250977      81.940430     -1.173110e+06         0.05957                 0.05957           100.0           100.0                7.0                9.0                  7.0                 14.0  102899.541504                 700.0                1400.0  809.702148           1.0      809.702148 -1.173110e+06       8.0
8       -1.172218e+06       -1.173109e+06     -1.172218e+06   82750.191406      81.940430     -1.173109e+06         0.05957                 0.05957           100.0           100.0                6.0                8.0                  7.0                 14.0  102899.541504                 700.0                1400.0  891.285156           1.0      791.642578 -1.173010e+06       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=18493/1024, buf_size=884675/1024.[0m
[01/10 19:16:34]  --------------------------------------------------------------------------------
[01/10 19:16:34]  Iteration: 40 (2 solution, 37 counterexamples)
[01/10 19:17:58]  Generator returned sat in 79.667851 secs.
[01/10 19:17:58]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:18:08]  Improved gap from 6.880859375 to 100
[01/10 19:18:08]  Improved number of small numbers from 166 to 166 out of a max of 166
[01/10 19:18:08]  Verifer returned sat in 9.911177 secs.
[01/10 19:18:08]  sf_get_cex returned in 10.062050 secs.
[01/10 19:18:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.173000e+06       -1.173713e+06     -1.173000e+06       0.121094       0.119141     -1.173713e+06             0.0                     0.0           100.0           102.0                7.0                9.0                  7.0              7.05957  102899.541504                 700.0            720.076172  712.774414          -1.0      700.416992 -1.173700e+06       8.0
1       -1.172900e+06       -1.173611e+06     -1.172900e+06  100653.204102      99.940430     -1.173611e+06             0.0                     0.0           100.0           102.0                4.0                6.0                  7.0              7.05957  102899.541504                 700.0            720.076172  710.655273           1.0      700.357422 -1.173600e+06       5.0
2       -1.172800e+06       -1.173600e+06     -1.172800e+06  100710.655273     100.000000     -1.173600e+06             0.0                     0.0           100.0           102.0                4.0                6.0                  7.0              7.05957  102899.541504                 700.0            720.076172  800.059570           1.0      700.357422 -1.173500e+06       5.0
3       -1.172700e+06       -1.173496e+06     -1.172700e+06  100800.059570     100.000000     -1.173496e+06             0.0                     0.0           100.0           102.0                5.0                7.0                  7.0              7.05957  102899.541504                 700.0            720.076172  796.119141           1.0      700.357422 -1.173400e+06       6.0
4       -1.172600e+06       -1.173400e+06     -1.172600e+06  100796.119141     100.000000     -1.173400e+06             0.0                     0.0           100.0           102.0                4.0                6.0                  7.0              7.05957  102899.541504                 700.0            720.076172  800.178711           1.0      700.357422 -1.173300e+06       5.0
5       -1.172500e+06       -1.173300e+06     -1.172500e+06  100800.178711     100.000000     -1.173300e+06             0.0                     0.0           100.0           102.0                5.0                7.0                  7.0              7.05957  102899.541504                 700.0            720.076172  800.238281           1.0      700.357422 -1.173200e+06       6.0
6       -1.172400e+06       -1.173100e+06     -1.172400e+06  100800.238281     100.000000     -1.173100e+06             0.0                     0.0           100.0           102.0                5.0                7.0                  7.0              7.05957  102899.541504                 700.0            720.076172  700.357422           1.0      700.357422 -1.173100e+06       6.0
7       -1.172300e+06       -1.173100e+06     -1.172300e+06  100700.357422     100.000000     -1.173100e+06             0.0                     0.0           100.0           102.0                5.0                7.0                  7.0              7.05957  102899.541504                 700.0            720.076172  800.357422           1.0      700.357422 -1.173000e+06       6.0
8       -1.172200e+06       -1.172911e+06     -1.172200e+06  100800.357422     100.000000     -1.172911e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0              7.05957  102899.541504                 700.0            720.076172  710.655273           1.0      700.357422 -1.172900e+06       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=61/1024, buf_size=717227/1024.[0m
[01/10 19:18:08]  --------------------------------------------------------------------------------
[01/10 19:18:08]  Iteration: 41 (2 solution, 38 counterexamples)
[01/10 19:19:23]  Generator returned sat in 69.762282 secs.
[01/10 19:19:23]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:19:42]  Improved gap from 0.044586181640625 to 100
[01/10 19:19:43]  Improved number of small numbers from 135 to 166 out of a max of 166
[01/10 19:19:43]  Verifer returned sat in 19.764625 secs.
[01/10 19:19:43]  sf_get_cex returned in 19.903522 secs.
[01/10 19:19:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.172911e+06       -1.173709e+06     -1.172911e+06       0.121094       0.118652     -1.173709e+06             0.0                     0.0           100.0           114.0                7.0                9.0                  7.0             7.140137   102899.54126                 700.0            813.975586  798.356445          -1.0      713.940674 -1.173625e+06       8.0
1       -1.172811e+06       -1.173611e+06     -1.172811e+06  100798.356445     100.000000     -1.173611e+06             0.0                     0.0           100.0           114.0                5.0                7.0                  7.0             7.140137   102899.54126                 700.0            813.975586  799.940430           1.0      713.940674 -1.173525e+06       6.0
2       -1.172711e+06       -1.173481e+06     -1.172711e+06  100799.940430     100.000000     -1.173481e+06             0.0                     0.0           100.0           114.0                5.0                7.0                  7.0             7.140137   102899.54126                 700.0            813.975586  770.237793           1.0      713.940674 -1.173425e+06       6.0
3       -1.172611e+06       -1.173367e+06     -1.172611e+06  100770.237793     100.000000     -1.173367e+06             0.0                     0.0           100.0           114.0                6.0                8.0                  7.0             7.140137   102899.54126                 700.0            813.975586  755.940430           1.0      713.940674 -1.173325e+06       7.0
4       -1.172511e+06       -1.173253e+06     -1.172511e+06  100755.940430     100.000000     -1.173253e+06             0.0                     0.0           100.0           114.0                6.0                8.0                  7.0             7.140137   102899.54126                 700.0            813.975586  741.940674           1.0      713.940674 -1.173225e+06       7.0
5       -1.172411e+06       -1.173211e+06     -1.172411e+06  100741.940674     100.000000     -1.173211e+06             0.0                     0.0           100.0           114.0                7.0                9.0                  7.0             7.140137   102899.54126                 700.0            813.975586  800.237793           1.0      713.940674 -1.173125e+06       8.0
6       -1.172311e+06       -1.173025e+06     -1.172311e+06  100800.237793     100.000000     -1.173025e+06             0.0                     0.0           100.0           114.0                7.0                9.0                  7.0             7.140137   102899.54126                 700.0            813.975586  713.999756           1.0      713.940674 -1.173025e+06       8.0
7       -1.172211e+06       -1.173025e+06     -1.172211e+06  100713.999756     100.000000     -1.173025e+06             0.0                     0.0           100.0           114.0                7.0                9.0                  7.0             7.140137   102899.54126                 700.0            813.975586  813.940430           1.0      713.940674 -1.172925e+06       8.0
8       -1.172111e+06       -1.172911e+06     -1.172111e+06  100813.940430     100.000000     -1.172911e+06             0.0                     0.0           100.0           114.0                6.0                8.0                  7.0             7.140137   102899.54126                 700.0            813.975586  799.940430           1.0      713.940674 -1.172825e+06       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=243/4096, buf_size=714.[0m
[01/10 19:19:43]  --------------------------------------------------------------------------------
[01/10 19:19:43]  Iteration: 42 (2 solution, 39 counterexamples)
[01/10 19:20:59]  Generator returned sat in 71.393842 secs.
[01/10 19:20:59]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:21:10]  Improved gap from 16.35595703125 to 100
[01/10 19:21:12]  Improved number of small numbers from 92 to 125 out of a max of 166
[01/10 19:21:12]  Verifer returned sat in 12.809605 secs.
[01/10 19:21:12]  sf_get_cex returned in 12.943668 secs.
[01/10 19:21:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.333510e+06       -1.333661e+06     -1.333510e+06       0.121094       0.118408     -1.333661e+06        0.000000                0.000000       97.980225           100.0                1.0                3.0                  1.0             1.510254   102899.54126             97.980225            151.025391  151.009888          -1.0      151.009888 -1.333661e+06       2.0
1       -1.333461e+06       -1.333661e+06     -1.333461e+06   49141.122192      48.990112     -1.333661e+06        0.000000                0.000000       97.980225           100.0                0.0                2.0                  1.0             1.510254   102899.54126             97.980225            151.025391  199.940674           0.0      100.000000 -1.333561e+06       1.0
2       -1.333265e+06       -1.333561e+06     -1.333265e+06  196160.389893     195.960449     -1.333561e+06       44.950439                0.000000       97.980225           100.0                1.0                3.0                  1.0             1.510254   102899.54126             97.980225            151.025391  251.010010           1.0      151.010010 -1.333461e+06       2.0
3       -1.333216e+06       -1.333461e+06     -1.333216e+06   49286.072754      48.990112     -1.333461e+06       44.950439               44.950439       97.980225           100.0                1.0                3.0                  1.0             1.510254   102899.54126             97.980225            151.025391  200.000122           1.0      100.000122 -1.333361e+06       2.0
4       -1.333167e+06       -1.333269e+06     -1.333167e+06   49235.062866      48.990112     -1.333269e+06       44.950439               44.950439       97.980225           100.0                0.0                2.0                  1.0             1.510254   102899.54126             97.980225            151.025391   57.247314           0.0       48.990234 -1.333261e+06       1.0
5       -1.332971e+06       -1.333261e+06     -1.332971e+06  196062.646973     195.960449     -1.333261e+06       44.950439               44.950439       97.980225           100.0                0.0                2.0                  1.0             1.510254   102899.54126             97.980225            151.025391  244.891357           0.0      144.950684 -1.333161e+06       1.0
6       -1.332775e+06       -1.333161e+06     -1.332775e+06  196250.291016     195.960449     -1.333161e+06      134.851562               44.950439       97.980225           100.0                0.0                2.0                  1.0             1.510254   102899.54126             97.980225            151.025391  251.010010           0.0      151.010010 -1.333061e+06       1.0
7       -1.332579e+06       -1.333016e+06     -1.332579e+06  196346.310791     195.960449     -1.333016e+06      230.812012              134.851562       97.980225           100.0                0.0                2.0                  1.0             1.510254   102899.54126             97.980225            151.025391  206.000122           1.0      151.010010 -1.332961e+06       1.0
8       -1.332383e+06       -1.332961e+06     -1.332383e+06  196397.261353     195.960449     -1.332961e+06      326.772461              230.812012       97.980225           100.0                1.0                3.0                  1.0             1.510254   102899.54126             97.980225            151.025391  251.009783           1.0      151.010010 -1.332861e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=334615/1024, beliefs_improve=False, alpha=61291/4096, buf_size=618537/4096.[0m
[01/10 19:21:12]  --------------------------------------------------------------------------------
[01/10 19:21:12]  Iteration: 43 (2 solution, 40 counterexamples)
[01/10 19:22:31]  Generator returned sat in 73.401628 secs.
[01/10 19:22:31]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:22:58]  Improved gap from 4.276923076923077 to 100
[01/10 19:22:59]  Improved number of small numbers from 115 to 166 out of a max of 166
[01/10 19:22:59]  Verifer returned sat in 27.977224 secs.
[01/10 19:22:59]  sf_get_cex returned in 28.112887 secs.
[01/10 19:22:59]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.332909e+06       -1.333673e+06     -1.332909e+06       0.121094       0.118164     -1.333673e+06             0.0                     0.0           100.0           102.0                7.0                9.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  764.118408          -1.0      752.118408 -1.333661e+06       8.0
1       -1.332859e+06       -1.333571e+06     -1.332859e+06   50764.118408      50.000000     -1.333571e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  712.296143           1.0      702.118408 -1.333561e+06       7.0
2       -1.332759e+06       -1.333469e+06     -1.332759e+06  100712.296143     100.000000     -1.333469e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  710.266602           1.0      702.118408 -1.333461e+06       7.0
3       -1.332659e+06       -1.333367e+06     -1.332659e+06  100710.266602     100.000000     -1.333367e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  708.236816           1.0      702.118408 -1.333361e+06       7.0
4       -1.332559e+06       -1.333361e+06     -1.332559e+06  100708.236816     100.000000     -1.333361e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  802.029785           1.0      702.118408 -1.333261e+06       7.0
5       -1.332459e+06       -1.333163e+06     -1.332459e+06  100802.029785     100.000000     -1.333163e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  704.177734           1.0      702.118408 -1.333161e+06       7.0
6       -1.332359e+06       -1.333061e+06     -1.332359e+06  100704.177734     100.000000     -1.333061e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  702.118408           1.0      702.118408 -1.333061e+06       7.0
7       -1.332259e+06       -1.333061e+06     -1.332259e+06  100702.118408     100.000000     -1.333061e+06             0.0                     0.0           100.0           102.0                6.0                8.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  802.118408           1.0      702.118408 -1.332961e+06       7.0
8       -1.332159e+06       -1.332959e+06     -1.332159e+06  100802.118408     100.000000     -1.332959e+06             0.0                     0.0           100.0           102.0                7.0                9.0                  7.0            10.970215  102899.541016                 700.0           1118.961914  800.118408           1.0      702.118408 -1.332861e+06       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=61/2048, buf_size=3080677/4096.[0m
[01/10 19:22:59]  --------------------------------------------------------------------------------
[01/10 19:22:59]  Iteration: 44 (2 solution, 41 counterexamples)
[01/10 19:24:23]  Generator returned sat in 78.711403 secs.
[01/10 19:24:23]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 19:24:33]  Improved gap from 4.41876220703125 to 100
[01/10 19:24:34]  Improved number of small numbers from 111 to 166 out of a max of 166
[01/10 19:24:34]  Verifer returned sat in 10.457992 secs.
[01/10 19:24:34]  sf_get_cex returned in 10.597737 secs.
[01/10 19:24:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.332888e+06       -1.332999e+06     -1.332888e+06       0.120850       0.118164     -1.332999e+06        0.000000                0.000000       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  110.586426          -1.0       84.586182 -1.332973e+06       1.0
1       -1.332783e+06       -1.332888e+06     -1.332783e+06  105228.750488     105.118164     -1.332888e+06        0.000000                0.000000       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  105.118164           0.0       89.704346 -1.332873e+06       1.0
2       -1.332678e+06       -1.332783e+06     -1.332678e+06  105223.282227     105.118164     -1.332783e+06        0.000000                0.000000       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  105.118164           0.0       94.822510 -1.332773e+06       1.0
3       -1.332573e+06       -1.332678e+06     -1.332573e+06  105223.282227     105.118164     -1.332678e+06        0.000000                0.000000       89.487793      134.142822                0.0                1.0                  0.0             1.940674  102211.954834                   0.0            260.327464  105.059082           0.0       99.940674 -1.332673e+06       0.0
4       -1.332468e+06       -1.332641e+06     -1.332468e+06  105223.223145     105.118164     -1.332641e+06        5.059082                0.000000       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  168.285645           0.0       99.999756 -1.332573e+06       1.0
5       -1.332363e+06       -1.332507e+06     -1.332363e+06  105291.508789     105.118164     -1.332507e+06       10.177246                5.059082       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  134.143066           1.0       99.999756 -1.332473e+06       1.0
6       -1.332258e+06       -1.332373e+06     -1.332258e+06  105262.484375     105.118164     -1.332373e+06       15.295410               10.177246       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  100.000000           1.0       99.999756 -1.332373e+06       1.0
7       -1.332153e+06       -1.332373e+06     -1.332153e+06  105233.459473     105.118164     -1.332373e+06       20.413574               15.295410       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  199.999756           1.0       99.999756 -1.332273e+06       1.0
8       -1.332048e+06       -1.332239e+06     -1.332048e+06  105338.577393     105.118164     -1.332239e+06       25.531738               20.413574       89.487793      134.142822                0.0                2.0                  0.0             1.940674  102211.954834                   0.0            260.327464  165.857178           1.0       99.999756 -1.332173e+06       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=52289/2048, beliefs_improve=False, alpha=32011/2048, buf_size=409599/4096.[0m
[01/10 19:24:34]  --------------------------------------------------------------------------------
[01/10 19:24:34]  Iteration: 45 (2 solution, 42 counterexamples)
[01/10 19:25:48]  Generator returned sat in 68.488173 secs.
[01/10 19:25:48]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:26:18]  Improved gap from 0.05908203125 to 48.4375
[01/10 19:26:21]  Improved number of small numbers from 94 to 112 out of a max of 166
[01/10 19:26:21]  Verifer returned sat in 33.435405 secs.
[01/10 19:26:21]  sf_get_cex returned in 33.572170 secs.
[01/10 19:26:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.646562e+06       -1.646562e+06     -1.646562e+06       0.120605       0.117920     -1.646562e+06             0.0                     0.0       69.638323      104.398438                0.0                2.0                  0.0             3.058838  415799.338379                   0.0            319.337896   0.000000          -1.0       -2.059030 -1.646560e+06       1.0
1       -1.646513e+06       -1.646560e+06     -1.646513e+06   49697.405134      49.697405     -1.646560e+06             0.0                     0.0       69.638323      104.398438                0.0                1.0                  0.0             3.058838  415850.440186                   0.0            319.337896  47.638323           0.0       -1.259818 -1.646512e+06       0.0
2       -1.646463e+06       -1.646512e+06     -1.646463e+06   49745.043457      49.697405     -1.646512e+06             0.0                     0.0       69.638323      104.398438                0.0                1.0                  0.0             3.058838  415902.002441                   0.0            319.337896  48.437500           0.0       -0.000157 -1.646463e+06       0.0
3       -1.646413e+06       -1.646462e+06     -1.646413e+06   49745.842634      49.697405     -1.646462e+06             0.0                     0.0       69.638323      104.398438                0.0                1.0                  0.0             3.058838  415952.305176                   0.0            319.337896  48.437500           0.0       -0.000017 -1.646413e+06       0.0
4       -1.646364e+06       -1.646412e+06     -1.646364e+06   49745.842634      49.697405     -1.646412e+06             0.0                     0.0       69.638323      104.398438                0.0                1.0                  0.0             3.058838  416002.607788                   0.0            319.337896  48.437500           0.0        0.000000 -1.646364e+06       0.0
5       -1.646314e+06       -1.646364e+06     -1.646314e+06   49745.842634      49.697405     -1.646364e+06             0.0                     0.0       69.638323      104.398438                0.0                2.0                  0.0             3.058838  416052.910383                   0.0            319.337896  49.697405           0.0        0.000000 -1.646314e+06       1.0
6       -1.646264e+06       -1.646314e+06     -1.646264e+06   49747.102539      49.697405     -1.646314e+06             0.0                     0.0       69.638323      104.398438                0.0                2.0                  0.0             3.058838  416103.212891                   0.0            319.337896  49.697405           0.0       -0.000087 -1.646264e+06       1.0
7       -1.646215e+06       -1.646261e+06     -1.646215e+06   49747.102539      49.697405     -1.646261e+06             0.0                     0.0       69.638323      104.398438                0.0                1.0                  0.0             3.058838  416151.456299                   0.0            319.337896  46.378418           0.0       -2.059274 -1.646213e+06       0.0
8       -1.646165e+06       -1.646213e+06     -1.646165e+06   49743.783552      49.697405     -1.646213e+06             0.0                     0.0       69.638323      104.398438                0.0                1.0                  0.0             3.058838  416151.456543                   0.0            319.337896  47.638131           0.0      -52.361625 -1.646113e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40839/2048, buf_size=20.[0m
[01/10 19:26:21]  --------------------------------------------------------------------------------
[01/10 19:26:21]  Iteration: 46 (2 solution, 43 counterexamples)
[01/10 19:28:05]  Generator returned sat in 98.689272 secs.
[01/10 19:28:06]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:28:14]  Improved number of small numbers from 52 to 64 out of a max of 165
[01/10 19:28:14]  Verifer returned sat in 7.912364 secs.
[01/10 19:28:14]  sf_get_cex returned in 8.048479 secs.
[01/10 19:28:14]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.758654e+06       -1.758654e+06     -1.758654e+06       0.120361       0.117920     -1.758654e+06        0.000000                0.000000       95.622447      115.622447                0.0                2.0                  0.0             0.970703   436503.68389                   0.0             112.23507    0.058960          -1.0         0.05896 -1.758654e+06       1.0
1       -1.758463e+06       -1.758617e+06     -1.758463e+06  191244.952352     191.244893     -1.758617e+06       91.244893                0.000000       95.622447      115.622447                0.0                1.0                  0.0             0.970703   436503.68389                   0.0             112.23507   62.607707           0.0         0.05896 -1.758554e+06       0.0
2       -1.758271e+06       -1.758554e+06     -1.758271e+06  191398.745992     191.244893     -1.758554e+06      182.489787               91.244893       95.622447      115.622447                0.0                2.0                  0.0             0.970703   436503.68389                   0.0             112.23507  100.000000           1.0         0.05896 -1.758454e+06       1.0
3       -1.758080e+06       -1.758385e+06     -1.758080e+06  191527.383179     191.244893     -1.758385e+06      273.734680              182.489787       95.622447      115.622447                0.0                1.0                  0.0             0.970703   436503.68389                   0.0             112.23507   31.215413           1.0         0.05896 -1.758354e+06       0.0
4       -1.757889e+06       -1.758354e+06     -1.757889e+06  191549.843486     191.244893     -1.758354e+06      364.979574              273.734680       95.622447      115.622447                0.0                2.0                  0.0             0.970703   436503.68389                   0.0             112.23507  100.000000           1.0         0.05896 -1.758254e+06       1.0
5       -1.757698e+06       -1.758254e+06     -1.757698e+06  191709.872965     191.244893     -1.758254e+06      456.224467              364.979574       95.622447      115.622447                0.0                1.0                  0.0             0.970703   436503.68389                   0.0             112.23507   99.970520           1.0         0.05896 -1.758154e+06       0.0
6       -1.757506e+06       -1.758154e+06     -1.757506e+06  191801.088379     191.244893     -1.758154e+06      547.469360              456.224467       95.622447      115.622447                0.0                1.0                  0.0             0.970703   436503.68389                   0.0             112.23507   99.970520           1.0         0.05896 -1.758054e+06       0.0
7       -1.757315e+06       -1.758038e+06     -1.757315e+06  191892.333272     191.244893     -1.758038e+06      638.714254              547.469360       95.622447      115.622447                0.0                1.0                  0.0             0.970703   436503.68389                   0.0             112.23507   84.348073           1.0         0.05896 -1.757954e+06       0.0
8       -1.757124e+06       -1.757923e+06     -1.757124e+06  191967.955719     191.244893     -1.757923e+06      729.959147              638.714254       95.622447      115.622447                0.0                1.0                  0.0             0.970703   436503.68389                   0.0             112.23507   68.607823           1.0         0.05896 -1.757854e+06       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=31394083/49152, beliefs_improve=False, alpha=15/512, buf_size=483/8192.[0m
[01/10 19:28:14]  --------------------------------------------------------------------------------
[01/10 19:28:14]  Iteration: 47 (2 solution, 44 counterexamples)
[01/10 19:31:14]  Generator returned sat in 174.453802 secs.
[01/10 19:31:14]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:31:37]  Improved gap from 0.0 to 48.4375
[01/10 19:31:40]  Improved number of small numbers from 107 to 124 out of a max of 166
[01/10 19:31:40]  Verifer returned sat in 26.261432 secs.
[01/10 19:31:40]  sf_get_cex returned in 26.396477 secs.
[01/10 19:31:40]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.757655e+06       -1.757665e+06     -1.757655e+06       0.120117       0.117676     -1.757665e+06             0.0                     0.0        55.05896           110.0                0.0                2.0                  0.0             7.058838  436195.301514                   0.0            776.472168  10.465820          -1.0       10.406951 -1.757665e+06       1.0
1       -1.757606e+06       -1.757665e+06     -1.757606e+06   48506.925781      48.496460     -1.757665e+06             0.0                     0.0        55.05896           110.0                0.0                2.0                  0.0             7.058838  436236.398103                   0.0            776.472168  58.903320           0.0        0.000000 -1.757606e+06       1.0
2       -1.757558e+06       -1.757606e+06     -1.757558e+06   48555.363281      48.496460     -1.757606e+06             0.0                     0.0        55.05896           110.0                0.0                2.0                  0.0             7.058838  436287.842773                   0.0            776.472168  48.496460           0.0       -0.058870 -1.757558e+06       1.0
3       -1.757509e+06       -1.757558e+06     -1.757509e+06   48544.956421      48.496460     -1.757558e+06             0.0                     0.0        55.05896           110.0                0.0                1.0                  0.0             7.058838  436339.405183                   0.0            776.472168  48.437500           0.0        0.000000 -1.757509e+06       0.0
4       -1.757461e+06       -1.757509e+06     -1.757461e+06   48544.897461      48.496460     -1.757509e+06             0.0                     0.0        55.05896           110.0                0.0                2.0                  0.0             7.058838  436390.791016                   0.0            776.472168  48.496460           0.0       -0.117708 -1.757461e+06       1.0
5       -1.757412e+06       -1.757461e+06     -1.757412e+06   48544.956421      48.496460     -1.757461e+06             0.0                     0.0        55.05896           110.0                0.0                1.0                  0.0             7.058838  436442.353303                   0.0            776.472168  48.378662           0.0       -0.058960 -1.757412e+06       0.0
6       -1.757364e+06       -1.757412e+06     -1.757364e+06   48544.838623      48.496460     -1.757412e+06             0.0                     0.0        55.05896           110.0                0.0                1.0                  0.0             7.058838  436493.915803                   0.0            776.472168  48.437500           0.0        0.000000 -1.757364e+06       0.0
7       -1.757315e+06       -1.757364e+06     -1.757315e+06   48544.897461      48.496460     -1.757364e+06             0.0                     0.0        55.05896           110.0                0.0                2.0                  0.0             7.058838  436545.419343                   0.0            776.472168  48.496460           0.0        0.000000 -1.757315e+06       1.0
8       -1.757267e+06       -1.757315e+06     -1.757267e+06   48544.956421      48.496460     -1.757315e+06             0.0                     0.0        55.05896           110.0                0.0                2.0                  0.0             7.058838  436545.419434                   0.0            776.472168  48.496460           0.0      -51.503450 -1.757215e+06       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=105/16, buf_size=42627/4096.[0m
[01/10 19:31:40]  --------------------------------------------------------------------------------
[01/10 19:31:40]  Iteration: 48 (2 solution, 45 counterexamples)
[01/10 19:33:01]  Generator returned sat in 75.193380 secs.
[01/10 19:33:01]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 19:33:12]  Improved gap from 0.0 to 100
[01/10 19:33:15]  Improved number of small numbers from 101 to 103 out of a max of 166
[01/10 19:33:15]  Verifer returned sat in 13.233096 secs.
[01/10 19:33:15]  sf_get_cex returned in 13.373538 secs.
[01/10 19:33:15]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.758195e+06       -1.758595e+06     -1.758195e+06       0.120117       0.117676     -1.758595e+06        0.000000                0.000000           100.0           100.0                2.0                4.0                  2.0                  4.0  437024.926301                 200.0                 400.0  399.867615          -1.0      299.867615 -1.758495e+06       3.0
1       -1.758095e+06       -1.758395e+06     -1.758095e+06  100385.158142      99.985291     -1.758395e+06        0.000000                0.000000           100.0           100.0                2.0                4.0                  2.0                  4.0  437024.926301                 200.0                 400.0  299.882324           1.0      299.852905 -1.758395e+06       3.0
2       -1.757995e+06       -1.758295e+06     -1.757995e+06  100285.172852      99.985291     -1.758295e+06        0.000000                0.000000           100.0           100.0                1.0                3.0                  2.0                  4.0  437024.926301                 200.0                 400.0  299.882324           1.0      299.838196 -1.758295e+06       2.0
3       -1.757795e+06       -1.758195e+06     -1.757795e+06  200299.882324     200.000000     -1.758195e+06       99.970581                0.000000           100.0           100.0                1.0                3.0                  2.0                  4.0  437024.926301                 200.0                 400.0  299.867615           1.0      299.867615 -1.758195e+06       2.0
4       -1.757595e+06       -1.758195e+06     -1.757595e+06  200399.838196     200.000000     -1.758195e+06      199.970581               99.970581           100.0           100.0                2.0                4.0                  2.0                  4.0  437024.926301                 200.0                 400.0  399.852905           1.0      299.867615 -1.758095e+06       3.0
5       -1.757495e+06       -1.758095e+06     -1.757495e+06  100585.114014      99.985291     -1.758095e+06      199.970581              199.970581           100.0           100.0                2.0                4.0                  2.0                  4.0  437024.926301                 200.0                 400.0  399.838196           1.0      299.852905 -1.757995e+06       3.0
6       -1.757395e+06       -1.757895e+06     -1.757395e+06  100585.099304      99.985291     -1.757895e+06      199.970581              199.970581           100.0           100.0                1.0                3.0                  2.0                  4.0  437024.926301                 200.0                 400.0  299.941162           1.0      299.838196 -1.757895e+06       2.0
7       -1.757195e+06       -1.757795e+06     -1.757195e+06  200499.911743     200.000000     -1.757795e+06      299.941162              199.970581           100.0           100.0                1.0                3.0                  2.0                  4.0  437024.926301                 200.0                 400.0  299.985291           1.0      299.867615 -1.757795e+06       2.0
8       -1.756995e+06       -1.757795e+06     -1.756995e+06  200599.926453     200.000000     -1.757795e+06      399.941162              299.941162           100.0           100.0                2.0                4.0                  2.0                  4.0  437024.926301                 200.0                 400.0  399.808899           1.0      299.867615 -1.757695e+06       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1638159/4096, beliefs_improve=False, alpha=241/16384, buf_size=4913031/16384.[0m
[01/10 19:33:15]  --------------------------------------------------------------------------------
[01/10 19:33:15]  Iteration: 49 (2 solution, 46 counterexamples)
[01/10 19:34:02]  Generator returned sat in 41.741339 secs.
[01/10 19:34:03]  Candidate solution: 
[1m[94mif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:34:21]  Improved gap from 0.0 to 48.4375
[01/10 19:34:21]  Improved number of small numbers from 120 to 166 out of a max of 166
[01/10 19:34:21]  Verifer returned sat in 18.324563 secs.
[01/10 19:34:21]  sf_get_cex returned in 18.464474 secs.
[01/10 19:34:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.758329e+06       -1.758329e+06     -1.758329e+06       0.119873       0.117432     -1.758329e+06             0.0                     0.0       66.437256           100.0                5.0                7.0                  5.0             5.058838  436859.104980            332.186279            505.883789   0.000000          -1.0       -0.000244 -1.758329e+06       6.0
1       -1.758282e+06       -1.758329e+06     -1.758282e+06   46496.337891      46.496338     -1.758329e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  436910.608643            332.186279            505.883789  46.437256           0.0       -2.000244 -1.758280e+06       0.0
2       -1.758236e+06       -1.758270e+06     -1.758236e+06   46542.775146      46.496338     -1.758270e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  436951.351562            332.186279            505.883789  33.676514           0.0      -14.760986 -1.758221e+06       0.0
3       -1.758189e+06       -1.758221e+06     -1.758189e+06   46530.014404      46.496338     -1.758221e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  437002.914062            332.186279            505.883789  31.735352           0.0      -16.702148 -1.758173e+06       0.0
4       -1.758143e+06       -1.758173e+06     -1.758143e+06   46528.073242      46.496338     -1.758173e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  437054.476562            332.186279            505.883789  29.794189           0.0      -18.643311 -1.758124e+06       0.0
5       -1.758096e+06       -1.758124e+06     -1.758096e+06   46526.132080      46.496338     -1.758124e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  437106.039062            332.186279            505.883789  27.853027           0.0      -20.584473 -1.758076e+06       0.0
6       -1.758050e+06       -1.758076e+06     -1.758050e+06   46524.190918      46.496338     -1.758076e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  437157.601318            332.186279            505.883789  25.911865           0.0      -22.525879 -1.758027e+06       0.0
7       -1.758003e+06       -1.758027e+06     -1.758003e+06   46522.249756      46.496338     -1.758027e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  437209.163818            332.186279            505.883789  23.970459           0.0      -24.467041 -1.757979e+06       0.0
8       -1.757957e+06       -1.757979e+06     -1.757957e+06   46520.308350      46.496338     -1.757979e+06             0.0                     0.0       66.437256           100.0                0.0                1.0                  5.0             5.058838  437209.163818            332.186279            505.883789  22.029297           0.0      -77.970703 -1.757879e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40839/2048, buf_size=500.[0m
[01/10 19:34:21]  --------------------------------------------------------------------------------
[01/10 19:34:21]  Iteration: 50 (2 solution, 47 counterexamples)
[01/10 19:36:17]  Generator returned sat in 109.789880 secs.
[01/10 19:36:17]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:36:33]  Improved gap from 18.882568359375 to 48.4375
[01/10 19:36:35]  Improved number of small numbers from 117 to 132 out of a max of 166
[01/10 19:36:35]  Verifer returned sat in 18.104590 secs.
[01/10 19:36:35]  sf_get_cex returned in 18.237369 secs.
[01/10 19:36:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.761683e+06       -1.761684e+06     -1.761683e+06       0.119873       0.117188     -1.761684e+06             0.0                     0.0       99.617432      201.352051                3.0                5.0                  3.0             3.058594  436852.249023            298.852295            615.854124   1.280273          -1.0        1.280029 -1.761684e+06       4.0
1       -1.761633e+06       -1.761683e+06     -1.761633e+06   49809.996094      49.808716     -1.761683e+06             0.0                     0.0       99.617432      201.352051                2.0                4.0                  3.0             3.058594  436901.101562            298.852295            615.854124  49.808838           1.0       -0.058716 -1.761633e+06       3.0
2       -1.761583e+06       -1.761633e+06     -1.761583e+06   49858.524658      49.808716     -1.761633e+06             0.0                     0.0       99.617432      201.352051                0.0                1.0                  3.0             3.058594  436951.351318            298.852295            615.854124  49.750000           0.0       -0.000244 -1.761583e+06       0.0
3       -1.761534e+06       -1.761583e+06     -1.761534e+06   49858.465820      49.808716     -1.761583e+06             0.0                     0.0       99.617432      201.352051                0.0                1.0                  3.0             3.058594  437001.542847            298.852295            615.854124  49.750000           0.0        0.000000 -1.761534e+06       0.0
4       -1.761484e+06       -1.761534e+06     -1.761484e+06   49858.465820      49.808716     -1.761534e+06             0.0                     0.0       99.617432      201.352051                0.0                2.0                  3.0             3.058594  437051.734131            298.852295            615.854124  49.808716           0.0        0.000000 -1.761484e+06       1.0
5       -1.761434e+06       -1.761484e+06     -1.761434e+06   49858.524536      49.808716     -1.761484e+06             0.0                     0.0       99.617432      201.352051                0.0                2.0                  3.0             3.058594  437101.925293            298.852295            615.854124  49.808716           0.0       -0.000122 -1.761434e+06       1.0
6       -1.761384e+06       -1.761434e+06     -1.761384e+06   49858.524536      49.808716     -1.761434e+06             0.0                     0.0       99.617432      201.352051                0.0                1.0                  3.0             3.058594  437152.116699            298.852295            615.854124  49.750000           0.0        0.000000 -1.761384e+06       0.0
7       -1.761334e+06       -1.761384e+06     -1.761334e+06   49858.465820      49.808716     -1.761384e+06             0.0                     0.0       99.617432      201.352051                0.0                2.0                  3.0             3.058594  437202.307983            298.852295            615.854124  49.808716           0.0        0.000000 -1.761334e+06       1.0
8       -1.761284e+06       -1.761334e+06     -1.761284e+06   49858.524536      49.808716     -1.761334e+06             0.0                     0.0       99.617432      201.352051                0.0                2.0                  3.0             3.058594  437202.308105            298.852295            615.854124  49.808716           0.0      -50.191162 -1.761234e+06       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=5105/256, buf_size=300.[0m
[01/10 19:36:35]  --------------------------------------------------------------------------------
[01/10 19:36:35]  Iteration: 51 (2 solution, 48 counterexamples)
[01/10 19:40:27]  Generator returned sat in 226.281830 secs.
[01/10 19:40:28]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + -1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:40:37]  Improved number of small numbers from 110 to 165 out of a max of 165
[01/10 19:40:37]  Verifer returned sat in 8.949337 secs.
[01/10 19:40:37]  sf_get_cex returned in 9.097542 secs.
[01/10 19:40:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.858730e+06       -1.859580e+06     -1.858730e+06       0.119629       0.117432     -1.859580e+06             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0                 13.0  534747.658203                 700.0                1300.0  850.058594          -1.0      850.058594 -1.859580e+06       8.0
1       -1.858680e+06       -1.859480e+06     -1.858680e+06   50850.058594      50.000000     -1.859480e+06             0.0                     0.0           100.0           100.0                4.0                6.0                  7.0                 13.0  534747.658203                 700.0                1300.0  800.058594           1.0      800.058594 -1.859480e+06       5.0
2       -1.858580e+06       -1.859380e+06     -1.858580e+06  100800.058594     100.000000     -1.859380e+06             0.0                     0.0           100.0           100.0                5.0                7.0                  7.0                 13.0  534747.658203                 700.0                1300.0  800.058594           1.0      800.058594 -1.859380e+06       6.0
3       -1.858480e+06       -1.859280e+06     -1.858480e+06  100800.058594     100.000000     -1.859280e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0                 13.0  534747.658203                 700.0                1300.0  800.058594           1.0      800.058594 -1.859280e+06       7.0
4       -1.858380e+06       -1.859180e+06     -1.858380e+06  100800.058594     100.000000     -1.859180e+06             0.0                     0.0           100.0           100.0                3.0                5.0                  7.0                 13.0  534747.658203                 700.0                1300.0  800.058594           1.0      800.058594 -1.859180e+06       4.0
5       -1.858280e+06       -1.859180e+06     -1.858280e+06  100800.058594     100.000000     -1.859180e+06             0.0                     0.0           100.0           100.0                4.0                6.0                  7.0                 13.0  534747.658203                 700.0                1300.0  899.999756           1.0      800.058594 -1.859080e+06       5.0
6       -1.858180e+06       -1.858980e+06     -1.858180e+06  100899.999756     100.000000     -1.858980e+06             0.0                     0.0           100.0           100.0                5.0                7.0                  7.0                 13.0  534747.658203                 700.0                1300.0  800.058594           1.0      800.058594 -1.858980e+06       6.0
7       -1.858080e+06       -1.858880e+06     -1.858080e+06  100800.058594     100.000000     -1.858880e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0                 13.0  534747.658203                 700.0                1300.0  800.058594           1.0      800.058594 -1.858880e+06       7.0
8       -1.857980e+06       -1.858880e+06     -1.857980e+06  100800.058594     100.000000     -1.858880e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0                 13.0  534747.658203                 700.0                1300.0  900.058594           1.0      800.058594 -1.858780e+06       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=61/4096, buf_size=3481841/4096.[0m
[01/10 19:40:37]  --------------------------------------------------------------------------------
[01/10 19:40:37]  Iteration: 52 (2 solution, 49 counterexamples)
[01/10 19:42:45]  Generator returned sat in 121.694440 secs.
[01/10 19:42:45]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:43:08]  Improved number of small numbers from 76 to 96 out of a max of 165
[01/10 19:43:08]  Verifer returned sat in 23.467467 secs.
[01/10 19:43:08]  sf_get_cex returned in 23.602137 secs.
[01/10 19:43:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.858346e+06       -1.858346e+06     -1.858346e+06       0.119629       0.117432     -1.858346e+06        0.000000                0.000000       99.941284      193.897217                0.0                2.0                  0.0             0.014893  534747.657959                   0.0              2.887629    0.000000          -1.0       -0.029602 -1.858346e+06       1.0
1       -1.858246e+06       -1.858258e+06     -1.858246e+06  100029.357910     100.029358     -1.858258e+06        0.000000                0.000000       99.941284      193.897217                0.0                1.0                  0.0             0.014893  534747.658203                   0.0              2.887629   12.278900           0.0        0.000000 -1.858246e+06       0.0
2       -1.858146e+06       -1.858246e+06     -1.858146e+06  100041.636810     100.029358     -1.858246e+06        0.000000                0.000000       99.941284      193.897217                0.0                1.0                  0.0             0.014893  534747.658203                   0.0              2.887629   99.882568           0.0        0.029358 -1.858146e+06       0.0
3       -1.858046e+06       -1.858146e+06     -1.858046e+06  100129.240479     100.029358     -1.858146e+06        0.000000                0.000000       99.941284      193.897217                0.0                1.0                  0.0             0.014893  534747.658203                   0.0              2.887629   99.985321           0.0        0.058716 -1.858046e+06       0.0
4       -1.857946e+06       -1.858046e+06     -1.857946e+06  100129.343231     100.029358     -1.858046e+06        0.000000                0.000000       99.941284      193.897217                0.0                2.0                  0.0             0.014893  534747.658203                   0.0              2.887629  100.088074           0.0        0.088074 -1.857946e+06       1.0
5       -1.857846e+06       -1.857946e+06     -1.857846e+06  100129.445984     100.029358     -1.857946e+06        0.014679                0.000000       99.941284      193.897217                0.0                2.0                  0.0             0.014893  534747.658203                   0.0              2.887629  100.102753           0.0        0.102753 -1.857846e+06       1.0
6       -1.857746e+06       -1.857846e+06     -1.857746e+06  100129.475342     100.029358     -1.857846e+06        0.044037                0.014679       99.941284      193.897217                0.0                2.0                  0.0             0.014893  534747.658203                   0.0              2.887629  100.102753           1.0        0.102753 -1.857746e+06       1.0
7       -1.857646e+06       -1.857646e+06     -1.857646e+06  100129.504700     100.029358     -1.857646e+06        0.073395                0.044037       99.941284      193.897217                0.0                1.0                  0.0             0.014893  534747.658203                   0.0              2.887629    0.396332           1.0        0.102753 -1.857646e+06       0.0
8       -1.857546e+06       -1.857558e+06     -1.857546e+06  100029.827637     100.029358     -1.857558e+06        0.102753                0.073395       99.941284      193.897217                0.0                1.0                  0.0             0.014893  534747.658203                   0.0              2.887629   12.279065           1.0        0.102753 -1.857546e+06       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=3367/32768, beliefs_improve=False, alpha=1443/16384, buf_size=3367/32768.[0m
[01/10 19:43:09]  --------------------------------------------------------------------------------
[01/10 19:43:09]  Iteration: 53 (2 solution, 50 counterexamples)
[01/10 19:45:39]  Generator returned sat in 144.149326 secs.
[01/10 19:45:39]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 19:45:47]  Improved number of small numbers from 108 to 165 out of a max of 165
[01/10 19:45:47]  Verifer returned sat in 7.560194 secs.
[01/10 19:45:47]  sf_get_cex returned in 7.694866 secs.
[01/10 19:45:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.925681e+06       -1.925681e+06     -1.925681e+06       0.119629       0.117432     -1.925681e+06        0.000000                0.000000           100.0           149.0                1.0                3.0                  1.0             2.058838  601983.065186                 100.0            306.766846    0.000000          -1.0     -100.000000 -1.925581e+06       2.0
1       -1.925481e+06       -1.925581e+06     -1.925481e+06  200000.000000     200.000000     -1.925581e+06        0.000000                0.000000           100.0           149.0                0.0                1.0                  1.0             2.058838  601983.065186                 100.0            306.766846  100.000000           0.0        0.000000 -1.925481e+06       0.0
2       -1.925281e+06       -1.925381e+06     -1.925281e+06  200100.000000     200.000000     -1.925381e+06        0.000000                0.000000           100.0           149.0                0.0                1.0                  1.0             2.058838  601983.065186                 100.0            306.766846  100.176270           0.0      100.000000 -1.925381e+06       0.0
3       -1.925081e+06       -1.925381e+06     -1.925081e+06  200100.176270     200.000000     -1.925381e+06        3.765137                0.000000           100.0           149.0                0.0                2.0                  1.0             2.058838  601983.065186                 100.0            306.766846  296.234863           0.0      196.234863 -1.925281e+06       1.0
4       -1.924881e+06       -1.925281e+06     -1.924881e+06  200300.000000     200.000000     -1.925281e+06      103.765137                3.765137           100.0           149.0                1.0                3.0                  1.0             2.058838  601983.065186                 100.0            306.766846  296.234863           1.0      196.234863 -1.925181e+06       2.0
5       -1.924681e+06       -1.925085e+06     -1.924681e+06  200400.000000     200.000000     -1.925085e+06      203.765137              103.765137           100.0           149.0                1.0                3.0                  1.0             2.058838  601983.065186                 100.0            306.766846  200.000000           1.0      196.234863 -1.925081e+06       2.0
6       -1.924481e+06       -1.924999e+06     -1.924481e+06  200403.765137     200.000000     -1.924999e+06      303.765137              203.765137           100.0           149.0                1.0                3.0                  1.0             2.058838  601983.065186                 100.0            306.766846  214.234863           1.0      196.234863 -1.924981e+06       2.0
7       -1.924281e+06       -1.924885e+06     -1.924281e+06  200518.000000     200.000000     -1.924885e+06      403.765137              303.765137           100.0           149.0                1.0                3.0                  1.0             2.058838  601983.065186                 100.0            306.766846  200.000000           1.0      196.234863 -1.924881e+06       2.0
8       -1.924081e+06       -1.924785e+06     -1.924081e+06  200603.765137     200.000000     -1.924785e+06      503.765137              403.765137           100.0           149.0                1.0                3.0                  1.0             2.058838  601983.065186                 100.0            306.766846  200.000000           1.0      196.234863 -1.924781e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=1031711/2048, beliefs_improve=False, alpha=241/4096, buf_size=401889/2048.[0m
[01/10 19:45:47]  --------------------------------------------------------------------------------
[01/10 19:45:47]  Iteration: 54 (2 solution, 51 counterexamples)
[01/10 19:48:57]  Generator returned sat in 183.983063 secs.
[01/10 19:48:57]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:49:14]  Verifer returned unsat in 16.154381 secs.
[01/10 19:49:14]  sf_get_cex returned in 16.289258 secs.
[01/10 19:49:14]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:49:14]  --------------------------------------------------------------------------------
[01/10 19:49:14]  Iteration: 55 (3 solution, 51 counterexamples)
[01/10 19:50:21]  Generator returned sat in 60.952861 secs.
[01/10 19:50:21]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:50:33]  Verifer returned unsat in 11.614229 secs.
[01/10 19:50:33]  sf_get_cex returned in 11.752197 secs.
[01/10 19:50:33]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:50:33]  --------------------------------------------------------------------------------
[01/10 19:50:33]  Iteration: 56 (4 solution, 51 counterexamples)
[01/10 19:51:42]  Generator returned sat in 62.984936 secs.
[01/10 19:51:42]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:51:59]  Verifer returned unsat in 16.194369 secs.
[01/10 19:51:59]  sf_get_cex returned in 16.330541 secs.
[01/10 19:51:59]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:51:59]  --------------------------------------------------------------------------------
[01/10 19:51:59]  Iteration: 57 (5 solution, 51 counterexamples)
[01/10 19:54:04]  Generator returned sat in 118.538730 secs.
[01/10 19:54:04]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:54:24]  Improved gap from 0.08807373046875 to 48.4375
[01/10 19:54:27]  Improved number of small numbers from 101 to 108 out of a max of 166
[01/10 19:54:27]  Verifer returned sat in 22.641369 secs.
[01/10 19:54:27]  sf_get_cex returned in 22.780906 secs.
[01/10 19:54:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.907910e+06       -1.907910e+06     -1.907910e+06       0.119385       0.117188     -1.907910e+06             0.0                     0.0       49.029358           100.0                0.0                1.0                  0.0             6.999756  601728.862549                   0.0            699.975586   0.058716          -1.0        0.058716 -1.907910e+06       0.0
1       -1.907861e+06       -1.907910e+06     -1.907861e+06   49029.416626      49.029358     -1.907910e+06             0.0                     0.0       49.029358           100.0                0.0                2.0                  0.0             6.999756  601779.774414                   0.0            699.975586  49.029358           0.0       -0.000061 -1.907861e+06       1.0
2       -1.907812e+06       -1.907861e+06     -1.907812e+06   49078.387268      49.029358     -1.907861e+06             0.0                     0.0       49.029358           100.0                0.0                1.0                  0.0             6.999756  601830.745117                   0.0            699.975586  48.437500           0.0        0.000000 -1.907812e+06       0.0
3       -1.907763e+06       -1.907812e+06     -1.907763e+06   49077.795410      49.029358     -1.907812e+06             0.0                     0.0       49.029358           100.0                0.0                2.0                  0.0             6.999756  601879.940186                   0.0            699.975586  49.029358           0.0       -1.775574 -1.907762e+06       1.0
4       -1.907714e+06       -1.907762e+06     -1.907714e+06   49078.387268      49.029358     -1.907762e+06             0.0                     0.0       49.029358           100.0                0.0                1.0                  0.0             6.999756  601931.502686                   0.0            699.975586  47.253784           0.0       -1.183716 -1.907713e+06       0.0
5       -1.907665e+06       -1.907713e+06     -1.907665e+06   49076.611694      49.029358     -1.907713e+06             0.0                     0.0       49.029358           100.0                0.0                1.0                  0.0             6.999756  601983.065186                   0.0            699.975586  47.845642           0.0       -0.591858 -1.907665e+06       0.0
6       -1.907616e+06       -1.907665e+06     -1.907616e+06   49077.203552      49.029358     -1.907665e+06             0.0                     0.0       49.029358           100.0                0.0                1.0                  0.0             6.999756  602034.627686                   0.0            699.975586  48.437500           0.0        0.000000 -1.907616e+06       0.0
7       -1.907567e+06       -1.907616e+06     -1.907567e+06   49077.795410      49.029358     -1.907616e+06             0.0                     0.0       49.029358           100.0                0.0                2.0                  0.0             6.999756  602078.921387                   0.0            699.975586  49.029358           0.0       -6.676941 -1.907561e+06       1.0
8       -1.907518e+06       -1.907561e+06     -1.907518e+06   49078.387268      49.029358     -1.907561e+06             0.0                     0.0       49.029358           100.0                0.0                1.0                  0.0             6.999756  602130.483643                   0.0            699.975586  42.352190           0.0       -6.085327 -1.907512e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=15/256, buf_size=2047759/4096.[0m
[01/10 19:54:27]  --------------------------------------------------------------------------------
[01/10 19:54:27]  Iteration: 58 (5 solution, 52 counterexamples)
[01/10 19:55:43]  Generator returned sat in 70.380320 secs.
[01/10 19:55:44]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:55:54]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/10 19:55:54]  Verifer returned sat in 9.763676 secs.
[01/10 19:55:54]  sf_get_cex returned in 9.908713 secs.
[01/10 19:55:54]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.784338e+06       -1.784338e+06     -1.784338e+06       0.119385       0.117188     -1.784338e+06        0.000000                0.000000       86.723633      118.964844                0.0                2.0                  0.0             0.029297  678033.236328                   0.0              3.485298    0.087891          -1.0      -73.388916 -1.784265e+06       1.0
1       -1.784165e+06       -1.784252e+06     -1.784165e+06  173447.353516     173.447266     -1.784252e+06        0.000000                0.000000       86.723633      118.964844                0.0                1.0                  0.0             0.029297  678033.236328                   0.0              3.485298   86.811523           0.0        0.058350 -1.784165e+06       0.0
2       -1.783991e+06       -1.784165e+06     -1.783991e+06  173534.077148     173.447266     -1.784165e+06       73.447266                0.000000       86.723633      118.964844                0.0                1.0                  0.0             0.029297  678033.236328                   0.0              3.485298   99.970703           0.0        0.058350 -1.784065e+06       0.0
3       -1.783818e+06       -1.784065e+06     -1.783818e+06  173620.683594     173.447266     -1.784065e+06      146.894531               73.447266       86.723633      118.964844                0.0                2.0                  0.0             0.029297  678033.236328                   0.0              3.485298  100.000000           1.0        0.058350 -1.783965e+06       1.0
4       -1.783644e+06       -1.783965e+06     -1.783644e+06  173694.160156     173.447266     -1.783965e+06      220.341797              146.894531       86.723633      118.964844                0.0                2.0                  0.0             0.029297  678033.236328                   0.0              3.485298  100.000000           1.0        0.058350 -1.783865e+06       1.0
5       -1.783471e+06       -1.783818e+06     -1.783471e+06  173767.607422     173.447266     -1.783818e+06      293.789062              220.341797       86.723633      118.964844                0.0                1.0                  0.0             0.029297  678033.236328                   0.0              3.485298   53.193359           1.0        0.058350 -1.783765e+06       0.0
6       -1.783298e+06       -1.783765e+06     -1.783298e+06  173794.248047     173.447266     -1.783765e+06      367.236328              293.789062       86.723633      118.964844                0.0                1.0                  0.0             0.029297  678033.236328                   0.0              3.485298   99.970703           1.0        0.058350 -1.783665e+06       0.0
7       -1.783124e+06       -1.783645e+06     -1.783124e+06  173914.472656     173.447266     -1.783645e+06      440.683594              367.236328       86.723633      118.964844                0.0                1.0                  0.0             0.029297  678033.236328                   0.0              3.485298   79.980469           1.0        0.058350 -1.783565e+06       0.0
8       -1.782951e+06       -1.783565e+06     -1.782951e+06  173967.929688     173.447266     -1.783565e+06      514.130859              440.683594       86.723633      118.964844                0.0                2.0                  0.0             0.029297  678033.236328                   0.0              3.485298  100.000244           1.0        0.058350 -1.783465e+06       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=7, loss_amount=263235/512, beliefs_improve=False, alpha=119/4096, buf_size=239/4096.[0m
[01/10 19:55:54]  --------------------------------------------------------------------------------
[01/10 19:55:54]  Iteration: 59 (5 solution, 53 counterexamples)
[01/10 19:59:46]  Generator returned sat in 225.951783 secs.
[01/10 19:59:47]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:59:58]  Verifer returned unsat in 11.674252 secs.
[01/10 19:59:58]  sf_get_cex returned in 11.808578 secs.
[01/10 19:59:58]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 19:59:58]  --------------------------------------------------------------------------------
[01/10 19:59:58]  Iteration: 60 (6 solution, 53 counterexamples)
[01/10 20:00:59]  Generator returned sat in 54.175452 secs.
[01/10 20:00:59]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:01:13]  Verifer returned unsat in 13.640229 secs.
[01/10 20:01:13]  sf_get_cex returned in 13.794034 secs.
[01/10 20:01:13]  Proved solution: 
[1m[92mif (+ 3/2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:01:13]  --------------------------------------------------------------------------------
[01/10 20:01:13]  Iteration: 61 (7 solution, 53 counterexamples)
[01/10 20:02:15]  Generator returned sat in 55.372987 secs.
[01/10 20:02:15]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:02:31]  Improved gap from 4.46875 to 48.4375
[01/10 20:02:32]  Improved number of small numbers from 129 to 166 out of a max of 166
[01/10 20:02:32]  Verifer returned sat in 15.927512 secs.
[01/10 20:02:32]  sf_get_cex returned in 16.078528 secs.
[01/10 20:02:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.952692e+06       -1.952699e+06     -1.952692e+06       0.119385       0.116943     -1.952699e+06             0.0                     0.0       43.793945        115347.0                0.0                2.0                  0.0             3.058594  677785.251709                   0.0         352799.613281   7.347656          -1.0        7.289062 -1.952699e+06       1.0
1       -1.952643e+06       -1.952699e+06     -1.952643e+06   48940.941406      48.933594     -1.952699e+06             0.0                     0.0       43.793945        115347.0                0.0                2.0                  0.0             3.058594  677829.029053                   0.0         352799.613281  56.222656           0.0        0.000000 -1.952643e+06       1.0
2       -1.952594e+06       -1.952643e+06     -1.952594e+06   48989.816406      48.933594     -1.952643e+06             0.0                     0.0       43.793945        115347.0                0.0                2.0                  0.0             3.058594  677880.095459                   0.0         352799.613281  48.933594           0.0        0.000000 -1.952594e+06       1.0
3       -1.952545e+06       -1.952594e+06     -1.952545e+06   48982.527344      48.933594     -1.952594e+06             0.0                     0.0       43.793945        115347.0                0.0                2.0                  0.0             3.058594  677931.161865                   0.0         352799.613281  48.933594           0.0        0.000000 -1.952545e+06       1.0
4       -1.952496e+06       -1.952545e+06     -1.952496e+06   48982.527344      48.933594     -1.952545e+06             0.0                     0.0       43.793945        115347.0                0.0                2.0                  0.0             3.058594  677982.169922                   0.0         352799.613281  48.933594           0.0       -0.058350 -1.952496e+06       1.0
5       -1.952447e+06       -1.952496e+06     -1.952447e+06   48982.527344      48.933594     -1.952496e+06             0.0                     0.0       43.793945        115347.0                0.0                1.0                  0.0             3.058594  678033.236328                   0.0         352799.613281  48.875000           0.0       -0.058350 -1.952447e+06       0.0
6       -1.952398e+06       -1.952447e+06     -1.952398e+06   48982.468750      48.933594     -1.952447e+06             0.0                     0.0       43.793945        115347.0                0.0                1.0                  0.0             3.058594  678084.361084                   0.0         352799.613281  48.875000           0.0        0.000000 -1.952398e+06       0.0
7       -1.952349e+06       -1.952398e+06     -1.952349e+06   48982.468750      48.933594     -1.952398e+06             0.0                     0.0       43.793945        115347.0                0.0                2.0                  0.0             3.058594  678135.427490                   0.0         352799.613281  48.933594           0.0        0.000000 -1.952349e+06       1.0
8       -1.952300e+06       -1.952349e+06     -1.952300e+06   48982.527344      48.933594     -1.952349e+06             0.0                     0.0       43.793945        115347.0                0.0                1.0                  0.0             3.058594  678186.493896                   0.0         352799.613281  48.875000           0.0        0.000000 -1.952300e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=5263/1024, buf_size=933/128.[0m
[01/10 20:02:32]  --------------------------------------------------------------------------------
[01/10 20:02:32]  Iteration: 62 (7 solution, 54 counterexamples)
[01/10 20:04:51]  Generator returned sat in 132.300380 secs.
[01/10 20:04:51]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:05:03]  Improved number of small numbers from 108 to 165 out of a max of 165
[01/10 20:05:03]  Verifer returned sat in 12.122422 secs.
[01/10 20:05:03]  sf_get_cex returned in 12.255037 secs.
[01/10 20:05:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.125423e+06       -2.125573e+06     -2.125423e+06       0.119385       0.116943     -2.125573e+06             0.0                     0.0           100.0      200.058594                1.0                3.0                  1.0                  2.0  678486.268799                 100.0            400.117188  150.000000          -1.0           150.0 -2.125573e+06       2.0
1       -2.125373e+06       -2.125473e+06     -2.125373e+06   50150.000000      50.000000     -2.125473e+06             0.0                     0.0           100.0      200.058594                0.0                2.0                  1.0                  2.0  678486.268799                 100.0            400.117188  100.000000           0.0           100.0 -2.125473e+06       1.0
2       -2.125173e+06       -2.125473e+06     -2.125173e+06  200100.000000     200.000000     -2.125473e+06            50.0                     0.0           100.0      200.058594                0.0                2.0                  1.0                  2.0  678486.268799                 100.0            400.117188  250.000000           0.0           150.0 -2.125373e+06       1.0
3       -2.124973e+06       -2.125373e+06     -2.124973e+06  200300.000000     200.000000     -2.125373e+06           150.0                    50.0           100.0      200.058594                1.0                3.0                  1.0                  2.0  678486.268799                 100.0            400.117188  250.000000           1.0           150.0 -2.125273e+06       2.0
4       -2.124923e+06       -2.125273e+06     -2.124923e+06   50400.000000      50.000000     -2.125273e+06           150.0                   150.0           100.0      200.058594                1.0                3.0                  1.0                  2.0  678486.268799                 100.0            400.117188  199.941406           1.0           100.0 -2.125173e+06       2.0
5       -2.124873e+06       -2.125073e+06     -2.124873e+06   50349.941406      50.000000     -2.125073e+06           150.0                   150.0           100.0      200.058594                0.0                2.0                  1.0                  2.0  678486.268799                 100.0            400.117188   50.000000           0.0            50.0 -2.125073e+06       1.0
6       -2.124673e+06       -2.125023e+06     -2.124673e+06  200200.000000     200.000000     -2.125023e+06           150.0                   150.0           100.0      200.058594                0.0                2.0                  1.0                  2.0  678486.268799                 100.0            400.117188  200.000000           0.0           150.0 -2.124973e+06       1.0
7       -2.124473e+06       -2.124973e+06     -2.124473e+06  200350.000000     200.000000     -2.124973e+06           250.0                   150.0           100.0      200.058594                0.0                2.0                  1.0                  2.0  678486.268799                 100.0            400.117188  250.000000           0.0           150.0 -2.124873e+06       1.0
8       -2.124273e+06       -2.124873e+06     -2.124273e+06  200500.000000     200.000000     -2.124873e+06           350.0                   250.0           100.0      200.058594                1.0                3.0                  1.0                  2.0  678486.268799                 100.0            400.117188  250.000000           1.0           150.0 -2.124773e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=350, beliefs_improve=False, alpha=15/512, buf_size=150.[0m
[01/10 20:05:03]  --------------------------------------------------------------------------------
[01/10 20:05:03]  Iteration: 63 (7 solution, 55 counterexamples)
[01/10 20:10:05]  Generator returned sat in 295.582933 secs.
[01/10 20:10:06]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:10:28]  Improved gap from 0.1754150390625 to 100
[01/10 20:10:31]  Improved number of small numbers from 73 to 93 out of a max of 166
[01/10 20:10:31]  Verifer returned sat in 25.440617 secs.
[01/10 20:10:31]  sf_get_cex returned in 25.580846 secs.
[01/10 20:10:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.125649e+06       -2.125649e+06     -2.125649e+06       0.119385       0.116943     -2.125649e+06        0.000000                0.000000       95.231644       133.14917                0.0                2.0                  0.0             0.147461  678486.268555                   0.0             19.634301    0.000000          -1.0      -75.769403 -2.125573e+06       1.0
1       -2.125459e+06       -2.125473e+06     -2.125459e+06  190463.287046     190.463287     -2.125473e+06        0.000000                0.000000       95.231644       133.14917                0.0                1.0                  0.0             0.147461  678486.268555                   0.0             19.634301   14.693884           0.0       14.693884 -2.125473e+06       0.0
2       -2.125268e+06       -2.125459e+06     -2.125268e+06  190477.980930     190.463287     -2.125459e+06       90.414685                0.000000       95.231644       133.14917                0.0                1.0                  0.0             0.147461  678486.268555                   0.0             19.634301  100.000000           0.0       14.742486 -2.125373e+06       0.0
3       -2.125078e+06       -2.125359e+06     -2.125078e+06  190653.701731     190.463287     -2.125359e+06      180.877972               90.414685       95.231644       133.14917                0.0                1.0                  0.0             0.147461  678486.268555                   0.0             19.634301   99.951398           1.0       14.742486 -2.125273e+06       0.0
4       -2.124887e+06       -2.125264e+06     -2.124887e+06  190744.116416     190.463287     -2.125264e+06      271.341259              180.877972       95.231644       133.14917                0.0                2.0                  0.0             0.147461  678486.268555                   0.0             19.634301  105.000000           1.0       14.742486 -2.125173e+06       1.0
5       -2.124697e+06       -2.125173e+06     -2.124697e+06  190839.628305     190.463287     -2.125173e+06      361.804546              271.341259       95.231644       133.14917                0.0                2.0                  0.0             0.147461  678486.268555                   0.0             19.634301  114.742486           1.0       14.742486 -2.125073e+06       1.0
6       -2.124506e+06       -2.125059e+06     -2.124506e+06  190939.834078     190.463287     -2.125059e+06      452.267833              361.804546       95.231644       133.14917                0.0                2.0                  0.0             0.147461  678486.268555                   0.0             19.634301  100.000000           1.0       14.742486 -2.124973e+06       1.0
7       -2.124316e+06       -2.124888e+06     -2.124316e+06  191015.554879     190.463287     -2.124888e+06      542.731120              452.267833       95.231644       133.14917                0.0                1.0                  0.0             0.147461  678486.268555                   0.0             19.634301   29.047556           1.0       14.742486 -2.124873e+06       0.0
8       -2.124125e+06       -2.124793e+06     -2.124125e+06  191035.065722     190.463287     -2.124793e+06      633.194407              542.731120       95.231644       133.14917                0.0                1.0                  0.0             0.147461  678486.268555                   0.0             19.634301   34.010553           1.0       14.742486 -2.124773e+06       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=7, loss_amount=475529/751, beliefs_improve=False, alpha=16595/1502, buf_size=310005/21028.[0m
[01/10 20:10:32]  --------------------------------------------------------------------------------
[01/10 20:10:32]  Iteration: 64 (7 solution, 56 counterexamples)
[01/10 20:14:06]  Generator returned sat in 207.807081 secs.
[01/10 20:14:07]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:14:17]  Improved gap from 19.883056640625 to 100
[01/10 20:14:21]  Improved number of small numbers from 89 to 157 out of a max of 166
[01/10 20:14:21]  Verifer returned sat in 13.613893 secs.
[01/10 20:14:21]  sf_get_cex returned in 13.750562 secs.
[01/10 20:14:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.098960e+06       -2.098960e+06     -2.098960e+06       0.119141       0.116699     -2.098960e+06        0.000000                0.000000       86.308472      126.462891                0.0                2.0                  0.0             1.452393  378821.418945                   0.0            183.673764    0.000000          -1.0       -0.000244 -2.098960e+06       1.0
1       -2.098788e+06       -2.098860e+06     -2.098788e+06  172616.943359     172.616943     -2.098860e+06        0.000000                0.000000       86.308472      126.462891                0.0                1.0                  0.0             1.452393  378821.418945                   0.0            183.673764   72.616699           0.0       72.616699 -2.098860e+06       0.0
2       -2.098615e+06       -2.098760e+06     -2.098615e+06  172689.560059     172.616943     -2.098760e+06        0.000000                0.000000       86.308472      126.462891                0.0                1.0                  0.0             1.452393  378821.418945                   0.0            183.673764  145.233887           0.0      145.233643 -2.098760e+06       0.0
3       -2.098442e+06       -2.098701e+06     -2.098442e+06  172762.177246     172.616943     -2.098701e+06       72.616699                0.000000       86.308472      126.462891                0.0                2.0                  0.0             1.452393  378821.418945                   0.0            183.673764  186.484131           0.0      145.233887 -2.098660e+06       1.0
4       -2.098270e+06       -2.098615e+06     -2.098270e+06  172876.044189     172.616943     -2.098615e+06      145.233643               72.616699       86.308472      126.462891                0.0                2.0                  0.0             1.452393  378821.418945                   0.0            183.673764  199.941895           1.0      145.233887 -2.098560e+06       1.0
5       -2.098097e+06       -2.098515e+06     -2.098097e+06  172962.118896     172.616943     -2.098515e+06      217.850586              145.233643       86.308472      126.462891                0.0                2.0                  0.0             1.452393  378821.418945                   0.0            183.673764  199.941650           1.0      145.233887 -2.098460e+06       1.0
6       -2.097924e+06       -2.098415e+06     -2.097924e+06  173034.735596     172.616943     -2.098415e+06      290.467529              217.850586       86.308472      126.462891                0.0                2.0                  0.0             1.452393  378821.418945                   0.0            183.673764  199.941650           1.0      145.233887 -2.098360e+06       1.0
7       -2.097752e+06       -2.098270e+06     -2.097752e+06  173107.352539     172.616943     -2.098270e+06      363.084473              290.467529       86.308472      126.462891                0.0                2.0                  0.0             1.452393  378821.418945                   0.0            183.673764  155.234131           1.0      145.233887 -2.098260e+06       1.0
8       -2.097579e+06       -2.098195e+06     -2.097579e+06  173135.261963     172.616943     -2.098195e+06      435.701416              363.084473       86.308472      126.462891                0.0                2.0                  0.0             1.452393  378821.418945                   0.0            183.673764  180.399414           1.0      145.233887 -2.098160e+06       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=1784633/4096, beliefs_improve=False, alpha=239/4096, buf_size=297439/2048.[0m
[01/10 20:14:21]  --------------------------------------------------------------------------------
[01/10 20:14:21]  Iteration: 65 (7 solution, 57 counterexamples)
[01/10 20:18:54]  Generator returned sat in 265.796184 secs.
[01/10 20:18:54]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:19:10]  Improved gap from 0.058349609375 to 48.4375
[01/10 20:19:12]  Improved number of small numbers from 127 to 135 out of a max of 166
[01/10 20:19:12]  Verifer returned sat in 17.574011 secs.
[01/10 20:19:12]  sf_get_cex returned in 17.712771 secs.
[01/10 20:19:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.098799e+06       -2.098799e+06     -2.098799e+06       0.118896       0.116699     -2.098799e+06             0.0                     0.0       68.705566           100.0                0.0                1.0                  0.0              0.94165  378617.352051                   0.0             94.165039   0.000000          -1.0       -0.000209 -2.098799e+06       0.0
1       -2.098750e+06       -2.098799e+06     -2.098750e+06   48983.328683      48.983329     -2.098799e+06             0.0                     0.0       68.705566           100.0                0.0                1.0                  0.0              0.94165  378668.368896                   0.0             94.165039  48.924979           0.0       -0.000035 -2.098750e+06       0.0
2       -2.098701e+06       -2.098750e+06     -2.098701e+06   49032.253662      48.983329     -2.098750e+06             0.0                     0.0       68.705566           100.0                0.0                1.0                  0.0              0.94165  378719.385603                   0.0             94.165039  48.924979           0.0        0.000000 -2.098701e+06       0.0
3       -2.098652e+06       -2.098701e+06     -2.098652e+06   49032.253662      48.983329     -2.098701e+06             0.0                     0.0       68.705566           100.0                0.0                1.0                  0.0              0.94165  378770.343994                   0.0             94.165039  48.924979           0.0       -0.058280 -2.098652e+06       0.0
4       -2.098604e+06       -2.098652e+06     -2.098604e+06   49032.253662      48.983329     -2.098652e+06             0.0                     0.0       68.705566           100.0                0.0                1.0                  0.0              0.94165  378821.418945                   0.0             94.165039  48.924979           0.0        0.000000 -2.098604e+06       0.0
5       -2.098555e+06       -2.098604e+06     -2.098555e+06   49032.253662      48.983329     -2.098604e+06             0.0                     0.0       68.705566           100.0                0.0                2.0                  0.0              0.94165  378872.435617                   0.0             94.165039  48.983329           0.0        0.000000 -2.098555e+06       1.0
6       -2.098506e+06       -2.098555e+06     -2.098506e+06   49032.312012      48.983329     -2.098555e+06             0.0                     0.0       68.705566           100.0                0.0                2.0                  0.0              0.94165  378923.452288                   0.0             94.165039  48.983329           0.0        0.000000 -2.098506e+06       1.0
7       -2.098457e+06       -2.098506e+06     -2.098457e+06   49032.312012      48.983329     -2.098506e+06             0.0                     0.0       68.705566           100.0                0.0                2.0                  0.0              0.94165  378974.468750                   0.0             94.165039  48.983329           0.0       -0.000209 -2.098457e+06       1.0
8       -2.098408e+06       -2.098456e+06     -2.098408e+06   49032.312012      48.983329     -2.098456e+06             0.0                     0.0       68.705566           100.0                0.0                1.0                  0.0              0.94165  379025.485596                   0.0             94.165039  48.924874           0.0       -0.000035 -2.098408e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=141369/7168, buf_size=40511/2048.[0m
[01/10 20:19:12]  --------------------------------------------------------------------------------
[01/10 20:19:12]  Iteration: 66 (7 solution, 58 counterexamples)
[01/10 20:23:09]  Generator returned sat in 229.816764 secs.
[01/10 20:23:09]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:23:23]  Improved number of small numbers from 116 to 165 out of a max of 165
[01/10 20:23:23]  Verifer returned sat in 13.410371 secs.
[01/10 20:23:23]  sf_get_cex returned in 13.552204 secs.
[01/10 20:23:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.309289e+06       -2.309289e+06     -2.309289e+06       0.118896       0.116455     -2.309289e+06             0.0                     0.0           100.0           200.0                3.0                5.0                  3.0                  3.0  589006.772949                 300.0                 600.0    0.000000          -1.0          -100.0 -2.309189e+06       4.0
1       -2.309089e+06       -2.309089e+06     -2.309089e+06  200000.000000     200.000000     -2.309089e+06             0.0                     0.0           100.0           200.0                0.0                1.0                  3.0                  3.0  589006.772949                 300.0                 600.0    0.029297           0.0             0.0 -2.309089e+06       0.0
2       -2.308889e+06       -2.309089e+06     -2.308889e+06  200000.029297     200.000000     -2.309089e+06             0.0                     0.0           100.0           200.0                0.0                1.0                  3.0                  3.0  589006.772949                 300.0                 600.0  199.897949           0.0           100.0 -2.308989e+06       0.0
3       -2.308689e+06       -2.308889e+06     -2.308689e+06  200199.897949     200.000000     -2.308889e+06             0.0                     0.0           100.0           200.0                0.0                2.0                  3.0                  3.0  589006.772949                 300.0                 600.0  200.058350           0.0           200.0 -2.308889e+06       1.0
4       -2.308489e+06       -2.308789e+06     -2.308489e+06  200200.058350     200.000000     -2.308789e+06             0.0                     0.0           100.0           200.0                0.0                2.0                  3.0                  3.0  589006.772949                 300.0                 600.0  300.000000           0.0           300.0 -2.308789e+06       1.0
5       -2.308289e+06       -2.308789e+06     -2.308289e+06  200300.000000     200.000000     -2.308789e+06           100.0                     0.0           100.0           200.0                0.0                2.0                  3.0                  3.0  589006.772949                 300.0                 600.0  400.000000           0.0           300.0 -2.308689e+06       1.0
6       -2.308089e+06       -2.308589e+06     -2.308089e+06  200500.000000     200.000000     -2.308589e+06           200.0                   100.0           100.0           200.0                1.0                3.0                  3.0                  3.0  589006.772949                 300.0                 600.0  300.000000           1.0           300.0 -2.308589e+06       2.0
7       -2.307889e+06       -2.308589e+06     -2.307889e+06  200500.000000     200.000000     -2.308589e+06           300.0                   200.0           100.0           200.0                1.0                3.0                  3.0                  3.0  589006.772949                 300.0                 600.0  400.000000           1.0           300.0 -2.308489e+06       2.0
8       -2.307689e+06       -2.308389e+06     -2.307689e+06  200700.000000     200.000000     -2.308389e+06           400.0                   300.0           100.0           200.0                2.0                4.0                  3.0                  3.0  589006.772949                 300.0                 600.0  300.000000           1.0           300.0 -2.308389e+06       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=400, beliefs_improve=False, alpha=15/1024, buf_size=300.[0m
[01/10 20:23:23]  --------------------------------------------------------------------------------
[01/10 20:23:23]  Iteration: 67 (7 solution, 59 counterexamples)
[01/10 20:27:39]  Generator returned sat in 249.216452 secs.
[01/10 20:27:40]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:27:46]  Verifer returned unsat in 6.075268 secs.
[01/10 20:27:46]  sf_get_cex returned in 6.207298 secs.
[01/10 20:27:46]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:27:46]  --------------------------------------------------------------------------------
[01/10 20:27:46]  Iteration: 68 (8 solution, 59 counterexamples)
[01/10 20:29:04]  Generator returned sat in 71.245402 secs.
[01/10 20:29:05]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:29:17]  Verifer returned unsat in 12.068100 secs.
[01/10 20:29:17]  sf_get_cex returned in 12.209131 secs.
[01/10 20:29:17]  Proved solution: 
[1m[92mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:29:17]  --------------------------------------------------------------------------------
[01/10 20:29:17]  Iteration: 69 (9 solution, 59 counterexamples)
[01/10 20:30:38]  Generator returned sat in 73.577412 secs.
[01/10 20:30:38]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:30:48]  Verifer returned unsat in 9.706311 secs.
[01/10 20:30:48]  sf_get_cex returned in 9.855908 secs.
[01/10 20:30:48]  Proved solution: 
[1m[92mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:30:48]  --------------------------------------------------------------------------------
[01/10 20:30:48]  Iteration: 70 (10 solution, 59 counterexamples)
[01/10 20:32:32]  Generator returned sat in 96.253591 secs.
[01/10 20:32:32]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:32:44]  Improved gap from 0.0 to 48.4375
[01/10 20:32:46]  Improved number of small numbers from 100 to 115 out of a max of 166
[01/10 20:32:46]  Verifer returned sat in 13.895128 secs.
[01/10 20:32:46]  sf_get_cex returned in 14.029938 secs.
[01/10 20:32:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.408519e+06       -2.408522e+06     -2.408519e+06       0.118896       0.116211     -2.408522e+06             0.0                     0.0       49.529114           100.0                0.0                2.0                  0.0             3.058105  588614.216309                   0.0            305.810547   3.237976          -1.0        3.237854 -2.408522e+06       1.0
1       -2.408469e+06       -2.408522e+06     -2.408469e+06   49532.351746      49.529114     -2.408522e+06             0.0                     0.0       49.529114           100.0                0.0                2.0                  0.0             3.058105  588654.899658                   0.0            305.810547  52.708740           0.0       -6.549683 -2.408462e+06       1.0
2       -2.408420e+06       -2.408462e+06     -2.408420e+06   49581.822510      49.529114     -2.408462e+06             0.0                     0.0       49.529114           100.0                0.0                1.0                  0.0             3.058105  588706.462158                   0.0            305.810547  42.979431           0.0       -5.458069 -2.408414e+06       0.0
3       -2.408370e+06       -2.408414e+06     -2.408370e+06   49572.093201      49.529114     -2.408414e+06             0.0                     0.0       49.529114           100.0                0.0                1.0                  0.0             3.058105  588758.024658                   0.0            305.810547  44.071045           0.0       -4.366455 -2.408366e+06       0.0
4       -2.408320e+06       -2.408366e+06     -2.408320e+06   49573.184814      49.529114     -2.408366e+06             0.0                     0.0       49.529114           100.0                0.0                1.0                  0.0             3.058105  588809.587158                   0.0            305.810547  45.162659           0.0       -3.274841 -2.408317e+06       0.0
5       -2.408271e+06       -2.408317e+06     -2.408271e+06   49574.276428      49.529114     -2.408317e+06             0.0                     0.0       49.529114           100.0                0.0                1.0                  0.0             3.058105  588861.149658                   0.0            305.810547  46.254272           0.0       -2.183228 -2.408269e+06       0.0
6       -2.408221e+06       -2.408269e+06     -2.408221e+06   49575.368042      49.529114     -2.408269e+06             0.0                     0.0       49.529114           100.0                0.0                1.0                  0.0             3.058105  588912.712158                   0.0            305.810547  47.345886           0.0       -1.091614 -2.408220e+06       0.0
7       -2.408172e+06       -2.408220e+06     -2.408172e+06   49576.459656      49.529114     -2.408220e+06             0.0                     0.0       49.529114           100.0                0.0                1.0                  0.0             3.058105  588964.274658                   0.0            305.810547  48.437500           0.0        0.000000 -2.408172e+06       0.0
8       -2.408122e+06       -2.408172e+06     -2.408122e+06   49577.551270      49.529114     -2.408172e+06             0.0                     0.0       49.529114           100.0                0.0                2.0                  0.0             3.058105  588964.274658                   0.0            305.810547  49.529114           0.0      -50.470886 -2.408072e+06       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=13025/4096, buf_size=13263/4096.[0m
[01/10 20:32:46]  --------------------------------------------------------------------------------
[01/10 20:32:46]  Iteration: 71 (10 solution, 60 counterexamples)
[01/10 20:35:38]  Generator returned sat in 164.141214 secs.
[01/10 20:35:38]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:35:51]  Verifer returned unsat in 12.472396 secs.
[01/10 20:35:51]  sf_get_cex returned in 12.609607 secs.
[01/10 20:35:51]  Proved solution: 
[1m[92mif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:35:51]  --------------------------------------------------------------------------------
[01/10 20:35:51]  Iteration: 72 (11 solution, 60 counterexamples)
[01/10 20:37:42]  Generator returned sat in 103.864502 secs.
[01/10 20:37:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -3/2min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:38:01]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/10 20:38:01]  Verifer returned sat in 18.049725 secs.
[01/10 20:38:01]  sf_get_cex returned in 18.194659 secs.
[01/10 20:38:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.641850e+06       -2.642100e+06     -2.641850e+06       0.118652       0.116211     -2.642100e+06          0.0000                  0.0000           100.0      149.854736                2.0                4.0                  2.0             2.941895  639504.942383                 200.0            440.856829  250.029053          -1.0      250.029053 -2.642100e+06       3.0
1       -2.641800e+06       -2.642000e+06     -2.641800e+06   50250.029053      50.000000     -2.642000e+06          0.0000                  0.0000           100.0      149.854736                0.0                2.0                  2.0             2.941895  639504.942383                 200.0            440.856829  200.029053           0.0      200.029053 -2.642000e+06       1.0
2       -2.641600e+06       -2.642000e+06     -2.641600e+06  200200.029053     200.000000     -2.642000e+06          5.8396                  0.0000           100.0      149.854736                0.0                2.0                  2.0             2.941895  639504.942383                 200.0            440.856829  394.189453           0.0      294.189453 -2.641900e+06       1.0
3       -2.641400e+06       -2.641850e+06     -2.641400e+06  200400.029053     200.000000     -2.641850e+06        105.8396                  5.8396           100.0      149.854736                1.0                3.0                  2.0             2.941895  639504.942383                 200.0            440.856829  344.102295           1.0      294.189453 -2.641800e+06       2.0
4       -2.641200e+06       -2.641800e+06     -2.641200e+06  200449.941895     200.000000     -2.641800e+06        205.8396                105.8396           100.0      149.854736                2.0                4.0                  2.0             2.941895  639504.942383                 200.0            440.856829  394.160400           1.0      294.189453 -2.641700e+06       3.0
5       -2.641150e+06       -2.641606e+06     -2.641150e+06   50600.000000      50.000000     -2.641606e+06        205.8396                205.8396           100.0      149.854736                2.0                4.0                  2.0             2.941895  639504.942383                 200.0            440.856829  250.000000           1.0      244.189453 -2.641600e+06       3.0
6       -2.641100e+06       -2.641500e+06     -2.641100e+06   50455.839600      50.000000     -2.641500e+06        205.8396                205.8396           100.0      149.854736                1.0                3.0                  2.0             2.941895  639504.942383                 200.0            440.856829  194.479980           1.0      194.189453 -2.641500e+06       2.0
7       -2.640900e+06       -2.641401e+06     -2.640900e+06  200400.319580     200.000000     -2.641401e+06        205.8396                205.8396           100.0      149.854736                1.0                3.0                  2.0             2.941895  639504.942383                 200.0            440.856829  294.538086           1.0      294.189453 -2.641400e+06       2.0
8       -2.640700e+06       -2.641306e+06     -2.640700e+06  200500.377686     200.000000     -2.641306e+06        305.8396                205.8396           100.0      149.854736                0.0                2.0                  2.0             2.941895  639504.942383                 200.0            440.856829  299.941895           0.0      294.189453 -2.641300e+06       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1252719/4096, beliefs_improve=False, alpha=119/2048, buf_size=150625/512.[0m
[01/10 20:38:01]  --------------------------------------------------------------------------------
[01/10 20:38:01]  Iteration: 73 (11 solution, 61 counterexamples)
[01/10 20:40:28]  Generator returned sat in 139.639473 secs.
[01/10 20:40:29]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:40:56]  Improved number of small numbers from 104 to 106 out of a max of 165
[01/10 20:40:56]  Verifer returned sat in 27.338318 secs.
[01/10 20:40:56]  sf_get_cex returned in 27.476510 secs.
[01/10 20:40:56]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.496078e+06       -2.496078e+06     -2.496078e+06       0.118408       0.116211     -2.496078e+06        0.000000                0.000000           100.0      199.912598                1.0                3.0                  1.0                  1.0  493482.516342                 100.0            199.912598    0.072632          -1.0        0.072632 -2.496078e+06       2.0
1       -2.495978e+06       -2.495978e+06     -2.495978e+06   99985.546265      99.985474     -2.495978e+06        0.000000                0.000000           100.0      199.912598                0.0                1.0                  1.0                  1.0  493482.516342                 100.0            199.912598    0.058105           0.0        0.058105 -2.495978e+06       0.0
2       -2.495778e+06       -2.495978e+06     -2.495778e+06  200000.058105     200.000000     -2.495978e+06        0.058105                0.000000           100.0      199.912598                0.0                1.0                  1.0                  1.0  493482.516342                 100.0            199.912598  199.927368           0.0      100.000000 -2.495878e+06       0.0
3       -2.495578e+06       -2.495878e+06     -2.495578e+06  200199.985474     200.000000     -2.495878e+06      100.058105                0.058105           100.0      199.912598                0.0                2.0                  1.0                  1.0  493482.516342                 100.0            199.912598  199.941895           1.0      100.000000 -2.495778e+06       1.0
4       -2.495378e+06       -2.495778e+06     -2.495378e+06  200300.000000     200.000000     -2.495778e+06      200.058105              100.058105           100.0      199.912598                1.0                3.0                  1.0                  1.0  493482.516342                 100.0            199.912598  200.000000           1.0      100.000000 -2.495678e+06       2.0
5       -2.495278e+06       -2.495578e+06     -2.495278e+06  100385.531738      99.985474     -2.495578e+06      200.058105              200.058105           100.0      199.912598                0.0                2.0                  1.0                  1.0  493482.516342                 100.0            199.912598  100.014526           1.0       99.985474 -2.495578e+06       1.0
6       -2.495078e+06       -2.495478e+06     -2.495078e+06  200300.072632     200.000000     -2.495478e+06      300.043579              200.058105           100.0      199.912598                0.0                1.0                  1.0                  1.0  493482.516342                 100.0            199.912598  100.000000           0.0      100.000000 -2.495478e+06       0.0
7       -2.494878e+06       -2.495478e+06     -2.494878e+06  200400.043579     200.000000     -2.495478e+06      400.043579              300.043579           100.0      199.912598                0.0                1.0                  1.0                  1.0  493482.516342                 100.0            199.912598  200.000000           1.0      100.000000 -2.495378e+06       0.0
8       -2.494678e+06       -2.495278e+06     -2.494678e+06  200600.043579     200.000000     -2.495278e+06      500.043579              400.043579           100.0      199.912598                0.0                2.0                  1.0                  1.0  493482.516342                 100.0            199.912598  100.072770           1.0      100.000000 -2.495278e+06       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=4096357/8192, beliefs_improve=False, alpha=119/8192, buf_size=100.[0m
[01/10 20:40:56]  --------------------------------------------------------------------------------
[01/10 20:40:56]  Iteration: 74 (11 solution, 62 counterexamples)
[01/10 20:45:06]  Generator returned sat in 242.552825 secs.
[01/10 20:45:07]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 20:45:19]  Improved number of small numbers from 113 to 165 out of a max of 165
[01/10 20:45:19]  Verifer returned sat in 11.673439 secs.
[01/10 20:45:19]  sf_get_cex returned in 11.811974 secs.
[01/10 20:45:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.495978e+06       -2.496790e+06     -2.495978e+06       0.118164       0.115967     -2.496790e+06             0.0                     0.0           100.0      116.028809                7.0                9.0                  7.0             7.161133  494098.588623                 700.0            830.897708  812.363281          -1.0      716.086914 -2.496694e+06       8.0
1       -2.495878e+06       -2.496674e+06     -2.495878e+06  100812.363281     100.000000     -2.496674e+06             0.0                     0.0           100.0      116.028809                6.0                8.0                  7.0             7.161133  494098.588623                 700.0            830.897708  796.319336           1.0      716.086914 -2.496594e+06       7.0
2       -2.495778e+06       -2.496568e+06     -2.495778e+06  100796.319336     100.000000     -2.496568e+06             0.0                     0.0           100.0      116.028809                6.0                8.0                  7.0             7.161133  494098.588623                 700.0            830.897708  790.275879           1.0      716.086914 -2.496494e+06       7.0
3       -2.495678e+06       -2.496474e+06     -2.495678e+06  100790.275879     100.000000     -2.496474e+06             0.0                     0.0           100.0      116.028809                7.0                9.0                  7.0             7.161133  494098.588623                 700.0            830.897708  796.232178           1.0      716.086914 -2.496394e+06       8.0
4       -2.495578e+06       -2.496335e+06     -2.495578e+06  100796.232178     100.000000     -2.496335e+06             0.0                     0.0           100.0      116.028809                7.0                9.0                  7.0             7.161133  494098.588623                 700.0            830.897708  757.188721           1.0      716.086914 -2.496294e+06       8.0
5       -2.495478e+06       -2.496210e+06     -2.495478e+06  100757.188721     100.000000     -2.496210e+06             0.0                     0.0           100.0      116.028809                4.0                6.0                  7.0             7.161133  494098.588623                 700.0            830.897708  732.145264           1.0      716.086914 -2.496194e+06       5.0
6       -2.495378e+06       -2.496094e+06     -2.495378e+06  100732.145264     100.000000     -2.496094e+06             0.0                     0.0           100.0      116.028809                5.0                7.0                  7.0             7.161133  494098.588623                 700.0            830.897708  716.101562           1.0      716.086914 -2.496094e+06       6.0
7       -2.495278e+06       -2.496094e+06     -2.495278e+06  100716.101562     100.000000     -2.496094e+06             0.0                     0.0           100.0      116.028809                6.0                8.0                  7.0             7.161133  494098.588623                 700.0            830.897708  816.086914           1.0      716.086914 -2.495994e+06       7.0
8       -2.495178e+06       -2.495978e+06     -2.495178e+06  100816.086914     100.000000     -2.495978e+06             0.0                     0.0           100.0      116.028809                7.0                9.0                  7.0             7.161133  494098.588623                 700.0            830.897708  800.057861           1.0      716.086914 -2.495894e+06       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=15/1024, buf_size=91661/128.[0m
[01/10 20:45:19]  --------------------------------------------------------------------------------
[01/10 20:45:19]  Iteration: 75 (11 solution, 63 counterexamples)
[01/10 20:48:50]  Generator returned sat in 203.225046 secs.
[01/10 20:48:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:49:02]  Verifer returned unsat in 11.564545 secs.
[01/10 20:49:02]  sf_get_cex returned in 11.699292 secs.
[01/10 20:49:02]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:49:02]  --------------------------------------------------------------------------------
[01/10 20:49:02]  Iteration: 76 (12 solution, 63 counterexamples)
[01/10 20:50:08]  Generator returned sat in 57.823767 secs.
[01/10 20:50:08]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:50:20]  Verifer returned unsat in 11.815681 secs.
[01/10 20:50:20]  sf_get_cex returned in 11.953155 secs.
[01/10 20:50:20]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:50:20]  --------------------------------------------------------------------------------
[01/10 20:50:20]  Iteration: 77 (13 solution, 63 counterexamples)
[01/10 20:53:50]  Generator returned sat in 202.063390 secs.
[01/10 20:53:51]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:54:25]  Improved gap from 0.02899169921875 to 100
[01/10 20:54:25]  Improved number of small numbers from 129 to 166 out of a max of 166
[01/10 20:54:25]  Verifer returned sat in 34.363636 secs.
[01/10 20:54:25]  sf_get_cex returned in 34.506859 secs.
[01/10 20:54:25]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.763235e+06       -2.764035e+06     -2.763235e+06       0.118164       0.115723     -2.764035e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  800.023682          -1.0      700.023926 -2.763935e+06       8.0
1       -2.763135e+06       -2.763935e+06     -2.763135e+06  100800.023682     100.000000     -2.763935e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  800.023682           1.0      700.023926 -2.763835e+06       8.0
2       -2.763035e+06       -2.763736e+06     -2.763035e+06  100800.023682     100.000000     -2.763736e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  701.452393           1.0      700.023926 -2.763735e+06       8.0
3       -2.762935e+06       -2.763735e+06     -2.762935e+06  100701.452393     100.000000     -2.763735e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  800.023682           1.0      700.023926 -2.763635e+06       8.0
4       -2.762835e+06       -2.763635e+06     -2.762835e+06  100800.023682     100.000000     -2.763635e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  800.023682           1.0      700.023926 -2.763535e+06       8.0
5       -2.762735e+06       -2.763435e+06     -2.762735e+06  100800.023682     100.000000     -2.763435e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  700.595215           1.0      700.023926 -2.763435e+06       8.0
6       -2.762635e+06       -2.763388e+06     -2.762635e+06  100700.595215     100.000000     -2.763388e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  753.023926           1.0      700.023926 -2.763335e+06       8.0
7       -2.762535e+06       -2.763235e+06     -2.762535e+06  100753.023926     100.000000     -2.763235e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  700.071289           1.0      700.023926 -2.763235e+06       8.0
8       -2.762435e+06       -2.763235e+06     -2.762435e+06  100700.071289     100.000000     -2.763235e+06             0.0                     0.0           100.0      100.279762                7.0                9.0                  7.0             7.005952  494098.588623                 700.0            702.555237  800.023682           1.0      700.023926 -2.763135e+06       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=25/4096, buf_size=1433661/2048.[0m
[01/10 20:54:25]  --------------------------------------------------------------------------------
[01/10 20:54:25]  Iteration: 78 (13 solution, 64 counterexamples)
[01/10 20:57:34]  Generator returned sat in 179.931938 secs.
[01/10 20:57:34]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 20:57:42]  Verifer returned unsat in 8.223598 secs.
[01/10 20:57:42]  sf_get_cex returned in 8.365779 secs.
[01/10 20:57:42]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 20:57:42]  --------------------------------------------------------------------------------
[01/10 20:57:42]  Iteration: 79 (14 solution, 64 counterexamples)
[01/10 21:00:05]  Generator returned sat in 135.350650 secs.
[01/10 21:00:06]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:00:18]  Verifer returned unsat in 12.308896 secs.
[01/10 21:00:18]  sf_get_cex returned in 12.439293 secs.
[01/10 21:00:18]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:00:18]  --------------------------------------------------------------------------------
[01/10 21:00:18]  Iteration: 80 (15 solution, 64 counterexamples)
[01/10 21:02:23]  Generator returned sat in 116.417638 secs.
[01/10 21:02:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:02:37]  Verifer returned unsat in 13.730247 secs.
[01/10 21:02:37]  sf_get_cex returned in 13.875692 secs.
[01/10 21:02:37]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:02:37]  --------------------------------------------------------------------------------
[01/10 21:02:37]  Iteration: 81 (16 solution, 64 counterexamples)
[01/10 21:03:51]  Generator returned sat in 65.869371 secs.
[01/10 21:03:51]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:04:02]  Verifer returned unsat in 10.074913 secs.
[01/10 21:04:02]  sf_get_cex returned in 10.208180 secs.
[01/10 21:04:02]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:04:02]  --------------------------------------------------------------------------------
[01/10 21:04:02]  Iteration: 82 (17 solution, 64 counterexamples)
[01/10 21:06:55]  Generator returned sat in 165.564516 secs.
[01/10 21:06:56]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:07:30]  Improved gap from 2.057861328125 to 48.4375
[01/10 21:07:33]  Improved number of small numbers from 106 to 109 out of a max of 166
[01/10 21:07:33]  Verifer returned sat in 36.717437 secs.
[01/10 21:07:33]  sf_get_cex returned in 36.852255 secs.
[01/10 21:07:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.663442e+06       -2.663450e+06     -2.663442e+06       0.117920       0.115479     -2.663450e+06             0.0                     0.0        68.78275           100.0                2.0                4.0                  2.0             8.057617  494299.282959            137.565499            805.761719   8.057861          -1.0        8.057861 -2.663450e+06       3.0
1       -2.663393e+06       -2.663442e+06     -2.663393e+06   48848.668910      48.840611     -2.663442e+06             0.0                     0.0        68.78275           100.0                1.0                3.0                  2.0             8.057617  494342.384487            137.565499            805.761719  48.840611           1.0        0.000000 -2.663393e+06       2.0
2       -2.663344e+06       -2.663393e+06     -2.663344e+06   48889.451660      48.840611     -2.663393e+06             0.0                     0.0        68.78275           100.0                0.0                1.0                  2.0             8.057617  494393.140869            137.565499            805.761719  48.782750           0.0       -0.403006 -2.663344e+06       0.0
3       -2.663295e+06       -2.663344e+06     -2.663295e+06   48889.393799      48.840611     -2.663344e+06             0.0                     0.0        68.78275           100.0                0.0                1.0                  2.0             8.057617  494444.703265            137.565499            805.761719  48.437500           0.0        0.000000 -2.663295e+06       0.0
4       -2.663246e+06       -2.663295e+06     -2.663246e+06   48889.048549      48.840611     -2.663295e+06             0.0                     0.0        68.78275           100.0                0.0                2.0                  2.0             8.057617  494495.862653            137.565499            805.761719  48.840611           0.0        0.000000 -2.663246e+06       1.0
5       -2.663197e+06       -2.663246e+06     -2.663197e+06   48889.451660      48.840611     -2.663246e+06             0.0                     0.0        68.78275           100.0                0.0                2.0                  2.0             8.057617  494547.022042            137.565499            805.761719  48.840611           0.0        0.000000 -2.663197e+06       1.0
6       -2.663149e+06       -2.663197e+06     -2.663149e+06   48889.451660      48.840611     -2.663197e+06             0.0                     0.0        68.78275           100.0                0.0                2.0                  2.0             8.057617  494598.181396            137.565499            805.761719  48.840611           0.0       -0.000035 -2.663149e+06       1.0
7       -2.663100e+06       -2.663148e+06     -2.663100e+06   48889.451660      48.840611     -2.663148e+06             0.0                     0.0        68.78275           100.0                0.0                1.0                  2.0             8.057617  494649.340820            137.565499            805.761719  48.782750           0.0        0.000000 -2.663100e+06       0.0
8       -2.663051e+06       -2.663100e+06     -2.663051e+06   48889.393799      48.840611     -2.663100e+06             0.0                     0.0        68.78275           100.0                0.0                2.0                  2.0             8.057617  494700.500000            137.565499            805.761719  48.840611           0.0       -0.000209 -2.663051e+06       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81683/4096, buf_size=200.[0m
[01/10 21:07:33]  --------------------------------------------------------------------------------
[01/10 21:07:33]  Iteration: 83 (17 solution, 65 counterexamples)
[01/10 21:09:48]  Generator returned sat in 126.996079 secs.
[01/10 21:09:49]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 21:10:12]  Improved number of small numbers from 107 to 165 out of a max of 165
[01/10 21:10:12]  Verifer returned sat in 23.778526 secs.
[01/10 21:10:12]  sf_get_cex returned in 23.912914 secs.
[01/10 21:10:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.763548e+06       -2.764248e+06     -2.763548e+06       0.117920       0.115234     -2.764248e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  700.230957          -1.0      700.230957 -2.764248e+06       7.0
1       -2.763448e+06       -2.764148e+06     -2.763448e+06  100700.230957     100.000000     -2.764148e+06             0.0                     0.0           100.0           100.0                5.0                7.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  700.230957           1.0      700.230957 -2.764148e+06       6.0
2       -2.763348e+06       -2.764048e+06     -2.763348e+06  100700.230957     100.000000     -2.764048e+06             0.0                     0.0           100.0           100.0                5.0                7.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  700.230957           1.0      700.230957 -2.764048e+06       6.0
3       -2.763248e+06       -2.763949e+06     -2.763248e+06  100700.230957     100.000000     -2.763949e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  700.404297           1.0      700.230957 -2.763948e+06       7.0
4       -2.763148e+06       -2.763948e+06     -2.763148e+06  100700.404297     100.000000     -2.763948e+06             0.0                     0.0           100.0           100.0                5.0                7.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  800.230957           1.0      700.230957 -2.763848e+06       6.0
5       -2.763048e+06       -2.763848e+06     -2.763048e+06  100800.230957     100.000000     -2.763848e+06             0.0                     0.0           100.0           100.0                5.0                7.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  800.230957           1.0      700.230957 -2.763748e+06       6.0
6       -2.762948e+06       -2.763648e+06     -2.762948e+06  100800.230957     100.000000     -2.763648e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  700.230957           1.0      700.230957 -2.763648e+06       7.0
7       -2.762848e+06       -2.763648e+06     -2.762848e+06  100700.230957     100.000000     -2.763648e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  800.230957           1.0      700.230957 -2.763548e+06       7.0
8       -2.762748e+06       -2.763548e+06     -2.762748e+06  100800.230957     100.000000     -2.763548e+06             0.0                     0.0           100.0           100.0                6.0                8.0                  6.0            12.057861  595098.109375                 600.0           1205.786133  799.826904           1.0      700.230957 -2.763448e+06       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=59/1024, buf_size=1434191/2048.[0m
[01/10 21:10:13]  --------------------------------------------------------------------------------
[01/10 21:10:13]  Iteration: 84 (17 solution, 66 counterexamples)
[01/10 21:14:12]  Generator returned sat in 231.288559 secs.
[01/10 21:14:12]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:14:24]  Verifer returned unsat in 11.813816 secs.
[01/10 21:14:24]  sf_get_cex returned in 11.953179 secs.
[01/10 21:14:24]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:14:25]  --------------------------------------------------------------------------------
[01/10 21:14:25]  Iteration: 85 (18 solution, 66 counterexamples)
[01/10 21:15:48]  Generator returned sat in 74.974623 secs.
[01/10 21:15:48]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:16:23]  Verifer returned unsat in 34.552667 secs.
[01/10 21:16:23]  sf_get_cex returned in 34.690973 secs.
[01/10 21:16:23]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:16:23]  --------------------------------------------------------------------------------
[01/10 21:16:23]  Iteration: 86 (19 solution, 66 counterexamples)
[01/10 21:18:49]  Generator returned sat in 137.897085 secs.
[01/10 21:18:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:18:58]  Verifer returned unsat in 8.521485 secs.
[01/10 21:18:58]  sf_get_cex returned in 8.665750 secs.
[01/10 21:18:58]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:18:58]  --------------------------------------------------------------------------------
[01/10 21:18:58]  Iteration: 87 (20 solution, 66 counterexamples)
[01/10 21:21:11]  Generator returned sat in 124.600749 secs.
[01/10 21:21:12]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:21:26]  Verifer returned unsat in 14.271614 secs.
[01/10 21:21:26]  sf_get_cex returned in 14.406200 secs.
[01/10 21:21:26]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:21:26]  --------------------------------------------------------------------------------
[01/10 21:21:26]  Iteration: 88 (21 solution, 66 counterexamples)
[01/10 21:23:33]  Generator returned sat in 119.104361 secs.
[01/10 21:23:34]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:23:49]  Improved gap from 0.0576171875 to 48.4375
[01/10 21:23:49]  Improved number of small numbers from 129 to 166 out of a max of 166
[01/10 21:23:49]  Verifer returned sat in 15.184054 secs.
[01/10 21:23:49]  sf_get_cex returned in 15.333289 secs.
[01/10 21:23:49]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.207794e+06       -2.207794e+06     -2.207794e+06       0.117920       0.115234     -2.207794e+06             0.0                     0.0            50.0           100.0                6.0                8.0                  6.0             7.057617  594946.830566                 300.0            705.761719   0.057617          -1.0        0.057617 -2.207794e+06       7.0
1       -2.207744e+06       -2.207794e+06     -2.207744e+06   49495.174805      49.495117     -2.207794e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  6.0             7.057617  594996.220378                 300.0            705.761719  49.495117           0.0       -1.057454 -2.207743e+06       1.0
2       -2.207695e+06       -2.207743e+06     -2.207695e+06   49544.612305      49.495117     -2.207743e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  6.0             7.057617  595047.782715                 300.0            705.761719  48.437500           0.0        0.000000 -2.207695e+06       0.0
3       -2.207645e+06       -2.207695e+06     -2.207645e+06   49543.554688      49.495117     -2.207695e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  6.0             7.057617  595098.287598                 300.0            705.761719  49.495117           0.0        0.000000 -2.207645e+06       1.0
4       -2.207596e+06       -2.207645e+06     -2.207596e+06   49544.612305      49.495117     -2.207645e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  6.0             7.057617  595148.792480                 300.0            705.761719  49.437500           0.0        0.000000 -2.207596e+06       0.0
5       -2.207546e+06       -2.207596e+06     -2.207546e+06   49544.554688      49.495117     -2.207596e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  6.0             7.057617  595199.239909                 300.0            705.761719  49.495117           0.0       -0.057454 -2.207546e+06       1.0
6       -2.207497e+06       -2.207546e+06     -2.207497e+06   49544.612305      49.495117     -2.207546e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  6.0             7.057617  595249.802246                 300.0            705.761719  49.437500           0.0        0.000000 -2.207497e+06       0.0
7       -2.207447e+06       -2.207497e+06     -2.207447e+06   49544.554688      49.495117     -2.207497e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  6.0             7.057617  595300.307129                 300.0            705.761719  49.495117           0.0        0.000000 -2.207447e+06       1.0
8       -2.207398e+06       -2.207447e+06     -2.207398e+06   49544.612305      49.495117     -2.207447e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  6.0             7.057617  595300.307292                 300.0            705.761719  49.437500           0.0      -50.504720 -2.207347e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=517/1024, buf_size=2890799/4096.[0m
[01/10 21:23:49]  --------------------------------------------------------------------------------
[01/10 21:23:49]  Iteration: 89 (21 solution, 67 counterexamples)
[01/10 21:26:00]  Generator returned sat in 122.032210 secs.
[01/10 21:26:00]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:26:28]  Improved gap from 0.0 to 48.4375
[01/10 21:26:28]  Improved number of small numbers from 143 to 166 out of a max of 166
[01/10 21:26:28]  Verifer returned sat in 27.843169 secs.
[01/10 21:26:28]  sf_get_cex returned in 27.993743 secs.
[01/10 21:26:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.106021e+06       -2.106031e+06     -2.106021e+06       0.117676       0.115234     -2.106031e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  0.0             9.057617  594955.191895                   0.0            905.761719  10.476562          -1.0       10.476562 -2.106031e+06       0.0
1       -2.105972e+06       -2.106031e+06     -2.105972e+06   48505.593750      48.495117     -2.106031e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  0.0             9.057617  594996.220215                   0.0            905.761719  58.914062           0.0        0.000000 -2.105972e+06       1.0
2       -2.105924e+06       -2.105972e+06     -2.105924e+06   48554.031250      48.495117     -2.105972e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  0.0             9.057617  595047.552490                   0.0            905.761719  48.495117           0.0       -0.172607 -2.105924e+06       1.0
3       -2.105875e+06       -2.105924e+06     -2.105875e+06   48543.612305      48.495117     -2.105924e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  0.0             9.057617  595099.114746                   0.0            905.761719  48.322266           0.0       -0.115234 -2.105875e+06       0.0
4       -2.105827e+06       -2.105875e+06     -2.105827e+06   48543.439453      48.495117     -2.105875e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  0.0             9.057617  595150.677246                   0.0            905.761719  48.379883           0.0       -0.057617 -2.105827e+06       0.0
5       -2.105778e+06       -2.105827e+06     -2.105778e+06   48543.497070      48.495117     -2.105827e+06             0.0                     0.0            50.0           100.0                0.0                1.0                  0.0             9.057617  595202.239746                   0.0            905.761719  48.437500           0.0        0.000000 -2.105778e+06       0.0
6       -2.105730e+06       -2.105778e+06     -2.105730e+06   48543.554688      48.495117     -2.105778e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  0.0             9.057617  595253.744629                   0.0            905.761719  48.495117           0.0        0.000000 -2.105730e+06       1.0
7       -2.105681e+06       -2.105730e+06     -2.105681e+06   48543.612305      48.495117     -2.105730e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  0.0             9.057617  595305.249512                   0.0            905.761719  48.495117           0.0        0.000000 -2.105681e+06       1.0
8       -2.105633e+06       -2.105681e+06     -2.105633e+06   48543.612305      48.495117     -2.105681e+06             0.0                     0.0            50.0           100.0                0.0                2.0                  0.0             9.057617  595305.249756                   0.0            905.761719  48.495117           0.0      -51.504639 -2.105581e+06       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1541/1024, buf_size=102341/1024.[0m
[01/10 21:26:28]  --------------------------------------------------------------------------------
[01/10 21:26:28]  Iteration: 90 (21 solution, 68 counterexamples)
[01/10 21:29:24]  Generator returned sat in 167.635596 secs.
[01/10 21:29:25]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:31:04]  Improved gap from 48.4375 to 48.4375
[01/10 21:31:05]  Improved number of small numbers from 129 to 166 out of a max of 166
[01/10 21:31:05]  Verifer returned sat in 99.959272 secs.
[01/10 21:31:05]  sf_get_cex returned in 100.084293 secs.
[01/10 21:31:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.964986e+06       -1.964996e+06     -1.964986e+06       0.117432       0.115234     -1.964996e+06             0.0                     0.0       62.865234           100.0                7.0                9.0                  7.0              17065.0  594954.961182            440.056641             1706500.0   9.900391          -1.0        9.900391 -1.964996e+06       8.0
1       -1.964937e+06       -1.964996e+06     -1.964937e+06   48562.634766      48.552734     -1.964996e+06             0.0                     0.0       62.865234           100.0                7.0                9.0                  7.0              17065.0  594996.508057            440.056641             1706500.0  58.453125           1.0        0.000000 -1.964937e+06       8.0
2       -1.964889e+06       -1.964937e+06     -1.964889e+06   48611.187500      48.552734     -1.964937e+06             0.0                     0.0       62.865234           100.0                0.0                1.0                  7.0              17065.0  595047.840088            440.056641             1706500.0  48.322266           0.0       -0.115234 -1.964889e+06       0.0
3       -1.964840e+06       -1.964889e+06     -1.964840e+06   48601.056641      48.552734     -1.964889e+06             0.0                     0.0       62.865234           100.0                0.0                1.0                  7.0              17065.0  595099.402588            440.056641             1706500.0  48.437500           0.0        0.000000 -1.964840e+06       0.0
4       -1.964792e+06       -1.964840e+06     -1.964792e+06   48601.171875      48.552734     -1.964840e+06             0.0                     0.0       62.865234           100.0                0.0                2.0                  7.0              17065.0  595150.849854            440.056641             1706500.0  48.552734           0.0        0.000000 -1.964792e+06       1.0
5       -1.964743e+06       -1.964792e+06     -1.964743e+06   48601.287109      48.552734     -1.964792e+06             0.0                     0.0       62.865234           100.0                0.0                1.0                  7.0              17065.0  595202.297119            440.056641             1706500.0  48.437500           0.0        0.000000 -1.964743e+06       0.0
6       -1.964695e+06       -1.964743e+06     -1.964695e+06   48601.171875      48.552734     -1.964743e+06             0.0                     0.0       62.865234           100.0                0.0                1.0                  7.0              17065.0  595253.744385            440.056641             1706500.0  48.437500           0.0        0.000000 -1.964695e+06       0.0
7       -1.964646e+06       -1.964695e+06     -1.964646e+06   48601.171875      48.552734     -1.964695e+06             0.0                     0.0       62.865234           100.0                0.0                1.0                  7.0              17065.0  595305.191650            440.056641             1706500.0  48.437500           0.0        0.000000 -1.964646e+06       0.0
8       -1.964598e+06       -1.964646e+06     -1.964598e+06   48601.171875      48.552734     -1.964646e+06             0.0                     0.0       62.865234           100.0                0.0                1.0                  7.0              17065.0  595356.638916            440.056641             1706500.0  48.437500           0.0        0.000000 -1.964598e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=229/16, buf_size=700.[0m
[01/10 21:31:05]  --------------------------------------------------------------------------------
[01/10 21:31:05]  Iteration: 91 (21 solution, 69 counterexamples)
[01/10 21:33:47]  Generator returned sat in 153.245225 secs.
[01/10 21:33:48]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 3/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:34:35]  Verifer returned unsat in 47.016423 secs.
[01/10 21:34:35]  sf_get_cex returned in 47.166073 secs.
[01/10 21:34:35]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 3/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:34:35]  --------------------------------------------------------------------------------
[01/10 21:34:35]  Iteration: 92 (22 solution, 69 counterexamples)
[01/10 21:37:58]  Generator returned sat in 194.602167 secs.
[01/10 21:37:59]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 3/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:38:07]  Verifer returned unsat in 8.698332 secs.
[01/10 21:38:07]  sf_get_cex returned in 8.838479 secs.
[01/10 21:38:07]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 3/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:38:08]  --------------------------------------------------------------------------------
[01/10 21:38:08]  Iteration: 93 (23 solution, 69 counterexamples)
[01/10 21:41:02]  Generator returned sat in 165.399056 secs.
[01/10 21:41:02]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:41:13]  Verifer returned unsat in 10.702427 secs.
[01/10 21:41:13]  sf_get_cex returned in 10.847770 secs.
[01/10 21:41:13]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:41:13]  --------------------------------------------------------------------------------
[01/10 21:41:13]  Iteration: 94 (24 solution, 69 counterexamples)
[01/10 21:43:52]  Generator returned sat in 150.732592 secs.
[01/10 21:43:53]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:44:04]  Verifer returned unsat in 10.802155 secs.
[01/10 21:44:04]  sf_get_cex returned in 10.949378 secs.
[01/10 21:44:04]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:44:04]  --------------------------------------------------------------------------------
[01/10 21:44:04]  Iteration: 95 (25 solution, 69 counterexamples)
[01/10 21:47:05]  Generator returned sat in 171.675292 secs.
[01/10 21:47:05]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:47:22]  Verifer returned unsat in 16.727929 secs.
[01/10 21:47:22]  sf_get_cex returned in 16.867762 secs.
[01/10 21:47:22]  Proved solution: 
[1m[92mif (+ 1min_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:47:22]  --------------------------------------------------------------------------------
[01/10 21:47:22]  Iteration: 96 (26 solution, 69 counterexamples)
[01/10 21:49:49]  Generator returned sat in 138.524219 secs.
[01/10 21:49:50]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:50:09]  Verifer returned unsat in 19.333274 secs.
[01/10 21:50:09]  sf_get_cex returned in 19.473532 secs.
[01/10 21:50:09]  Proved solution: 
[1m[92mif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:50:10]  --------------------------------------------------------------------------------
[01/10 21:50:10]  Iteration: 97 (27 solution, 69 counterexamples)
[01/10 21:52:07]  Generator returned sat in 108.377995 secs.
[01/10 21:52:07]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:52:25]  Verifer returned unsat in 17.307982 secs.
[01/10 21:52:25]  sf_get_cex returned in 17.445314 secs.
[01/10 21:52:25]  Proved solution: 
[1m[92mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:52:25]  --------------------------------------------------------------------------------
[01/10 21:52:25]  Iteration: 98 (28 solution, 69 counterexamples)
[01/10 21:54:29]  Generator returned sat in 115.546913 secs.
[01/10 21:54:29]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:54:47]  Verifer returned unsat in 17.606182 secs.
[01/10 21:54:47]  sf_get_cex returned in 17.771715 secs.
[01/10 21:54:47]  Proved solution: 
[1m[92mif (+ 1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:54:47]  --------------------------------------------------------------------------------
[01/10 21:54:47]  Iteration: 99 (29 solution, 69 counterexamples)
[01/10 21:56:46]  Generator returned sat in 109.961087 secs.
[01/10 21:56:46]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 21:57:02]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/10 21:57:02]  Verifer returned sat in 15.134242 secs.
[01/10 21:57:02]  sf_get_cex returned in 15.339958 secs.
[01/10 21:57:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.196711e+06       -2.196811e+06     -2.196711e+06       0.117188       0.115234     -2.196811e+06        0.000000                0.000000       90.629639      181.259277                1.0                3.0                  1.0             1.028809  595226.592773             90.629639            186.481102  100.287842          -1.0       56.682861 -2.196768e+06       2.0
1       -2.196639e+06       -2.196711e+06     -2.196639e+06   71758.735107      71.658447     -2.196711e+06        0.000000                0.000000       90.629639      181.259277                1.0                3.0                  1.0             1.028809  595226.592773             90.629639            186.481102   71.658447           1.0       28.341309 -2.196668e+06       2.0
2       -2.196568e+06       -2.196568e+06     -2.196568e+06   71730.105713      71.658447     -2.196568e+06        0.000000                0.000000       90.629639      181.259277                0.0                1.0                  1.0             1.028809  595226.592773             90.629639            186.481102    0.000000           0.0       -0.000244 -2.196568e+06       0.0
3       -2.196386e+06       -2.196539e+06     -2.196386e+06  181259.277344     181.259277     -2.196539e+06        0.000000                0.000000       90.629639      181.259277                0.0                1.0                  1.0             1.028809  595226.592773             90.629639            186.481102  153.061523           0.0       81.259033 -2.196468e+06       0.0
4       -2.196205e+06       -2.196449e+06     -2.196205e+06  181412.338867     181.259277     -2.196449e+06       62.518311                0.000000       90.629639      181.259277                0.0                2.0                  1.0             1.028809  595226.592773             90.629639            186.481102  181.317139           0.0      100.000000 -2.196368e+06       1.0
5       -2.196024e+06       -2.196268e+06     -2.196024e+06  181503.112793     181.259277     -2.196268e+06      143.777588               62.518311       90.629639      181.259277                0.0                2.0                  1.0             1.028809  595226.592773             90.629639            186.481102  100.057861           1.0      100.000000 -2.196268e+06       1.0
6       -2.195843e+06       -2.196268e+06     -2.195843e+06  181503.112793     181.259277     -2.196268e+06      225.036865              143.777588       90.629639      181.259277                1.0                3.0                  1.0             1.028809  595226.592773             90.629639            186.481102  200.000000           1.0      100.000000 -2.196168e+06       2.0
7       -2.195771e+06       -2.196086e+06     -2.195771e+06   72083.484131      71.658447     -2.196086e+06      225.036865              225.036865       90.629639      181.259277                0.0                2.0                  1.0             1.028809  595226.592773             90.629639            186.481102   90.457031           1.0       71.658447 -2.196068e+06       1.0
8       -2.195590e+06       -2.195996e+06     -2.195590e+06  181574.771240     181.259277     -2.195996e+06      277.954590              225.036865       90.629639      181.259277                0.0                1.0                  1.0             1.028809  595226.592773             90.629639            186.481102  128.312988           0.0      100.000000 -2.195968e+06       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=569251/2048, beliefs_improve=False, alpha=38853/2048, buf_size=100.[0m
[01/10 21:57:02]  --------------------------------------------------------------------------------
[01/10 21:57:02]  Iteration: 100 (29 solution, 70 counterexamples)
[01/10 22:00:07]  Generator returned sat in 176.700931 secs.
[01/10 22:00:08]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:00:18]  Verifer returned unsat in 10.579234 secs.
[01/10 22:00:18]  sf_get_cex returned in 10.729005 secs.
[01/10 22:00:18]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:00:18]  --------------------------------------------------------------------------------
[01/10 22:00:18]  Iteration: 101 (30 solution, 70 counterexamples)
[01/10 22:01:43]  Generator returned sat in 75.754395 secs.
[01/10 22:01:44]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:01:53]  Verifer returned unsat in 9.724804 secs.
[01/10 22:01:54]  sf_get_cex returned in 9.877500 secs.
[01/10 22:01:54]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:01:54]  --------------------------------------------------------------------------------
[01/10 22:01:54]  Iteration: 102 (31 solution, 70 counterexamples)
[01/10 22:05:04]  Generator returned sat in 181.451465 secs.
[01/10 22:05:05]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:05:15]  Verifer returned unsat in 9.782565 secs.
[01/10 22:05:15]  sf_get_cex returned in 9.938054 secs.
[01/10 22:05:15]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:05:15]  --------------------------------------------------------------------------------
[01/10 22:05:15]  Iteration: 103 (32 solution, 70 counterexamples)
[01/10 22:06:57]  Generator returned sat in 93.480868 secs.
[01/10 22:06:58]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:07:27]  Verifer returned unsat in 29.100429 secs.
[01/10 22:07:27]  sf_get_cex returned in 29.244947 secs.
[01/10 22:07:27]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:07:27]  --------------------------------------------------------------------------------
[01/10 22:07:27]  Iteration: 104 (33 solution, 70 counterexamples)
[01/10 22:09:09]  Generator returned sat in 92.547082 secs.
[01/10 22:09:09]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:09:19]  Verifer returned unsat in 9.202127 secs.
[01/10 22:09:19]  sf_get_cex returned in 9.339558 secs.
[01/10 22:09:19]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:09:19]  --------------------------------------------------------------------------------
[01/10 22:09:19]  Iteration: 105 (34 solution, 70 counterexamples)
[01/10 22:12:45]  Generator returned sat in 196.800909 secs.
[01/10 22:12:45]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 22:13:02]  Improved gap from 98.99169921875 to 100
[01/10 22:13:02]  Improved number of small numbers from 145 to 166 out of a max of 166
[01/10 22:13:02]  Verifer returned sat in 16.984802 secs.
[01/10 22:13:02]  sf_get_cex returned in 17.138435 secs.
[01/10 22:13:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.179946e+06       -2.179960e+06     -2.179946e+06       0.116943       0.115234     -2.179960e+06         0.00000                 0.00000           100.0           200.0                2.0                4.0                  2.0                  2.0  595311.300781                 200.0                 400.0   14.000000          -1.0        14.00000 -2.179960e+06       3.0
1       -2.179862e+06       -2.179960e+06     -2.179862e+06   83812.339844      83.798340     -2.179960e+06         0.00000                 0.00000           100.0           200.0                2.0                4.0                  2.0                  2.0  595311.300781                 200.0                 400.0   97.798340           1.0        -2.20166 -2.179860e+06       3.0
2       -2.179778e+06       -2.179860e+06     -2.179778e+06   83896.138184      83.798340     -2.179860e+06         0.00000                 0.00000           100.0           200.0                0.0                1.0                  2.0                  2.0  595311.300781                 200.0                 400.0   81.596680           0.0       -18.40332 -2.179760e+06       0.0
3       -2.179578e+06       -2.179759e+06     -2.179578e+06  200081.596680     200.000000     -2.179759e+06         0.00000                 0.00000           100.0           200.0                0.0                1.0                  2.0                  2.0  595311.300781                 200.0                 400.0  181.250977           0.0        81.59668 -2.179660e+06       0.0
4       -2.179378e+06       -2.179560e+06     -2.179378e+06  200181.250977     200.000000     -2.179560e+06         0.00000                 0.00000           100.0           200.0                0.0                1.0                  2.0                  2.0  595311.300781                 200.0                 400.0  181.596680           0.0       181.59668 -2.179560e+06       0.0
5       -2.179178e+06       -2.179560e+06     -2.179178e+06  200181.596680     200.000000     -2.179560e+06        81.59668                 0.00000           100.0           200.0                0.0                1.0                  2.0                  2.0  595311.300781                 200.0                 400.0  300.000000           0.0       200.00000 -2.179460e+06       0.0
6       -2.178978e+06       -2.179378e+06     -2.178978e+06  200381.596680     200.000000     -2.179378e+06       181.59668                81.59668           100.0           200.0                0.0                2.0                  2.0                  2.0  595311.300781                 200.0                 400.0  218.345703           1.0       200.00000 -2.179360e+06       1.0
7       -2.178778e+06       -2.179260e+06     -2.178778e+06  200399.942383     200.000000     -2.179260e+06       281.59668               181.59668           100.0           200.0                1.0                3.0                  2.0                  2.0  595311.300781                 200.0                 400.0  200.403076           1.0       200.00000 -2.179260e+06       2.0
8       -2.178578e+06       -2.179160e+06     -2.178578e+06  200481.999756     200.000000     -2.179160e+06       381.59668               281.59668           100.0           200.0                1.0                3.0                  2.0                  2.0  595311.300781                 200.0                 400.0  200.000000           1.0       200.00000 -2.179160e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=390755/1024, beliefs_improve=False, alpha=33181/2048, buf_size=200.[0m
[01/10 22:13:02]  --------------------------------------------------------------------------------
[01/10 22:13:02]  Iteration: 106 (34 solution, 71 counterexamples)
[01/10 22:16:39]  Generator returned sat in 207.580604 secs.
[01/10 22:16:40]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 22:17:22]  Improved number of small numbers from 165 to 165 out of a max of 165
[01/10 22:17:22]  Verifer returned sat in 42.251518 secs.
[01/10 22:17:22]  sf_get_cex returned in 42.399674 secs.
[01/10 22:17:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.180428e+06       -2.180577e+06     -2.180428e+06       0.116943       0.115234     -2.180577e+06        0.000000                0.000000           100.0           200.0                3.0                5.0                  3.0                  3.0  595311.300781                 300.0                 600.0  149.250977          -1.0       49.769531 -2.180478e+06       4.0
1       -2.180378e+06       -2.180428e+06     -2.180378e+06   50149.250977      50.000000     -2.180428e+06        0.000000                0.000000           100.0           200.0                2.0                4.0                  3.0                  3.0  595311.300781                 300.0                 600.0   50.000000           1.0       -0.230469 -2.180378e+06       3.0
2       -2.180178e+06       -2.180378e+06     -2.180178e+06  200050.000000     200.000000     -2.180378e+06        0.000000                0.000000           100.0           200.0                0.0                1.0                  3.0                  3.0  595311.300781                 300.0                 600.0  199.366211           0.0       99.769531 -2.180278e+06       0.0
3       -2.179978e+06       -2.180178e+06     -2.179978e+06  200199.366211     200.000000     -2.180178e+06        0.000000                0.000000           100.0           200.0                0.0                1.0                  3.0                  3.0  595311.300781                 300.0                 600.0  199.942383           0.0      199.769531 -2.180178e+06       0.0
4       -2.179778e+06       -2.180078e+06     -2.179778e+06  200199.942383     200.000000     -2.180078e+06        0.000000                0.000000           100.0           200.0                0.0                2.0                  3.0                  3.0  595311.300781                 300.0                 600.0  299.769531           0.0      299.769531 -2.180078e+06       1.0
5       -2.179578e+06       -2.180078e+06     -2.179578e+06  200299.769531     200.000000     -2.180078e+06       99.769531                0.000000           100.0           200.0                0.0                2.0                  3.0                  3.0  595311.300781                 300.0                 600.0  400.000000           0.0      300.000000 -2.179978e+06       1.0
6       -2.179378e+06       -2.179978e+06     -2.179378e+06  200499.769531     200.000000     -2.179978e+06      199.769531               99.769531           100.0           200.0                1.0                3.0                  3.0                  3.0  595311.300781                 300.0                 600.0  399.827148           1.0      300.000000 -2.179878e+06       2.0
7       -2.179178e+06       -2.179778e+06     -2.179178e+06  200599.596680     200.000000     -2.179778e+06      299.769531              199.769531           100.0           200.0                1.0                3.0                  3.0                  3.0  595311.300781                 300.0                 600.0  300.172852           1.0      300.000000 -2.179778e+06       2.0
8       -2.178978e+06       -2.179678e+06     -2.178978e+06  200599.942383     200.000000     -2.179678e+06      399.769531              299.769531           100.0           200.0                2.0                4.0                  3.0                  3.0  595311.300781                 300.0                 600.0  300.000000           1.0      300.000000 -2.179678e+06       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=102341/256, beliefs_improve=False, alpha=59/1024, buf_size=300.[0m
[01/10 22:17:23]  --------------------------------------------------------------------------------
[01/10 22:17:23]  Iteration: 107 (34 solution, 72 counterexamples)
[01/10 22:19:43]  Generator returned sat in 131.217717 secs.
[01/10 22:19:44]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:20:01]  Verifer returned unsat in 17.185758 secs.
[01/10 22:20:01]  sf_get_cex returned in 17.338304 secs.
[01/10 22:20:01]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:20:01]  --------------------------------------------------------------------------------
[01/10 22:20:01]  Iteration: 108 (35 solution, 72 counterexamples)
[01/10 22:21:18]  Generator returned sat in 67.239156 secs.
[01/10 22:21:18]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:22:00]  Verifer returned unsat in 41.604646 secs.
[01/10 22:22:00]  sf_get_cex returned in 41.755723 secs.
[01/10 22:22:00]  Proved solution: 
[1m[92mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:22:00]  --------------------------------------------------------------------------------
[01/10 22:22:00]  Iteration: 109 (36 solution, 72 counterexamples)
[01/10 22:23:26]  Generator returned sat in 76.290318 secs.
[01/10 22:23:26]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:23:48]  Verifer returned unsat in 21.731221 secs.
[01/10 22:23:48]  sf_get_cex returned in 21.870464 secs.
[01/10 22:23:48]  Proved solution: 
[1m[92mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:23:48]  --------------------------------------------------------------------------------
[01/10 22:23:48]  Iteration: 110 (37 solution, 72 counterexamples)
[01/10 22:25:02]  Generator returned sat in 64.179559 secs.
[01/10 22:25:02]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:25:14]  Verifer returned unsat in 12.082798 secs.
[01/10 22:25:14]  sf_get_cex returned in 12.224214 secs.
[01/10 22:25:14]  Proved solution: 
[1m[92mif (+ 1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:25:14]  --------------------------------------------------------------------------------
[01/10 22:25:14]  Iteration: 111 (38 solution, 72 counterexamples)
[01/10 22:29:04]  Generator returned sat in 220.157667 secs.
[01/10 22:29:04]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 22:29:23]  Improved number of small numbers from 126 to 165 out of a max of 165
[01/10 22:29:23]  Verifer returned sat in 18.285706 secs.
[01/10 22:29:23]  sf_get_cex returned in 18.428752 secs.
[01/10 22:29:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -2.286090e+06       -2.286090e+06     -2.286090e+06       0.116455        0.11499     -2.286090e+06             0.0                     0.0           100.0           200.0                2.0                4.0                  2.0                  3.0  595311.300781                 200.0                 600.0    0.000000          -1.0          -100.0 -2.285990e+06       3.0
1       -2.285890e+06       -2.285990e+06     -2.285890e+06  200000.000000      200.00000     -2.285990e+06             0.0                     0.0           100.0           200.0                0.0                1.0                  2.0                  3.0  595311.300781                 200.0                 600.0   99.942383           0.0             0.0 -2.285890e+06       0.0
2       -2.285690e+06       -2.285790e+06     -2.285690e+06  200099.942383      200.00000     -2.285790e+06             0.0                     0.0           100.0           200.0                0.0                1.0                  2.0                  3.0  595311.300781                 200.0                 600.0  100.000000           0.0           100.0 -2.285790e+06       0.0
3       -2.285490e+06       -2.285790e+06     -2.285490e+06  200100.000000      200.00000     -2.285790e+06             0.0                     0.0           100.0           200.0                0.0                1.0                  2.0                  3.0  595311.300781                 200.0                 600.0  300.000000           0.0           200.0 -2.285690e+06       0.0
4       -2.285290e+06       -2.285590e+06     -2.285290e+06  200300.000000      200.00000     -2.285590e+06             0.0                     0.0           100.0           200.0                0.0                2.0                  2.0                  3.0  595311.300781                 200.0                 600.0  300.000000           0.0           300.0 -2.285590e+06       1.0
5       -2.285090e+06       -2.285590e+06     -2.285090e+06  200300.000000      200.00000     -2.285590e+06           100.0                     0.0           100.0           200.0                0.0                2.0                  2.0                  3.0  595311.300781                 200.0                 600.0  400.000000           0.0           300.0 -2.285490e+06       1.0
6       -2.284890e+06       -2.285490e+06     -2.284890e+06  200500.000000      200.00000     -2.285490e+06           200.0                   100.0           100.0           200.0                1.0                3.0                  2.0                  3.0  595311.300781                 200.0                 600.0  399.978271           1.0           300.0 -2.285390e+06       2.0
7       -2.284690e+06       -2.285390e+06     -2.284690e+06  200599.978271      200.00000     -2.285390e+06           300.0                   200.0           100.0           200.0                2.0                4.0                  2.0                  3.0  595311.300781                 200.0                 600.0  399.985596           1.0           300.0 -2.285290e+06       3.0
8       -2.284490e+06       -2.285190e+06     -2.284490e+06  200699.985596      200.00000     -2.285190e+06           400.0                   300.0           100.0           200.0                2.0                4.0                  2.0                  3.0  595311.300781                 200.0                 600.0  300.000000           1.0           300.0 -2.285190e+06       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=400, beliefs_improve=False, alpha=15/2048, buf_size=300.[0m
[01/10 22:29:23]  --------------------------------------------------------------------------------
[01/10 22:29:23]  Iteration: 112 (38 solution, 73 counterexamples)
[01/10 22:33:44]  Generator returned sat in 251.470218 secs.
[01/10 22:33:44]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:34:14]  Verifer returned unsat in 29.626961 secs.
[01/10 22:34:14]  sf_get_cex returned in 29.766037 secs.
[01/10 22:34:14]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:34:14]  --------------------------------------------------------------------------------
[01/10 22:34:14]  Iteration: 113 (39 solution, 73 counterexamples)
[01/10 22:38:24]  Generator returned sat in 241.160032 secs.
[01/10 22:38:25]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:38:41]  Improved gap from 0.0 to 48.4375
[01/10 22:38:44]  Improved number of small numbers from 89 to 106 out of a max of 166
[01/10 22:38:44]  Verifer returned sat in 18.546716 secs.
[01/10 22:38:44]  sf_get_cex returned in 18.687046 secs.
[01/10 22:38:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.583439e+06       -1.583443e+06     -1.583439e+06       0.116211       0.114990     -1.583443e+06             0.0                     0.0       69.371663           100.0                7.0                9.0                  7.0             7.057373  595114.097412            485.601644            705.737305   3.880900          -1.0        3.880819 -1.583443e+06       8.0
1       -1.583390e+06       -1.583443e+06     -1.583390e+06   49433.039429      49.429159     -1.583443e+06             0.0                     0.0       69.371663           100.0                7.0                9.0                  7.0             7.057373  595160.787435            485.601644            705.737305  53.252563           1.0        0.000000 -1.583390e+06       8.0
2       -1.583340e+06       -1.583390e+06     -1.583340e+06   49482.411092      49.429159     -1.583390e+06             0.0                     0.0       69.371663           100.0                0.0                2.0                  7.0             7.057373  595211.358154            485.601644            705.737305  49.429159           0.0       -0.000122 -1.583340e+06       1.0
3       -1.583291e+06       -1.583340e+06     -1.583291e+06   49478.587687      49.429159     -1.583340e+06             0.0                     0.0       69.371663           100.0                0.0                1.0                  7.0             7.057373  595261.928955            485.601644            705.737305  49.371663           0.0       -0.000163 -1.583291e+06       0.0
4       -1.583241e+06       -1.583291e+06     -1.583241e+06   49478.530192      49.429159     -1.583291e+06             0.0                     0.0       69.371663           100.0                0.0                1.0                  7.0             7.057373  595311.508301            485.601644            705.737305  49.371663           0.0       -0.991659 -1.583240e+06       0.0
5       -1.583192e+06       -1.583240e+06     -1.583192e+06   49478.530192      49.429159     -1.583240e+06             0.0                     0.0       69.371663           100.0                0.0                1.0                  7.0             7.057373  595363.070801            485.601644            705.737305  48.437500           0.0        0.000000 -1.583192e+06       0.0
6       -1.583142e+06       -1.583192e+06     -1.583142e+06   49477.596029      49.429159     -1.583192e+06             0.0                     0.0       69.371663           100.0                0.0                1.0                  7.0             7.057373  595413.641602            485.601644            705.737305  49.371663           0.0       -0.000041 -1.583142e+06       0.0
7       -1.583093e+06       -1.583142e+06     -1.583093e+06   49478.530192      49.429159     -1.583142e+06             0.0                     0.0       69.371663           100.0                0.0                1.0                  7.0             7.057373  595464.212402            485.601644            705.737305  49.371663           0.0       -0.000081 -1.583093e+06       0.0
8       -1.583044e+06       -1.583093e+06     -1.583044e+06   49478.530192      49.429159     -1.583093e+06             0.0                     0.0       69.371663           100.0                0.0                1.0                  7.0             7.057373  595514.783203            485.601644            705.737305  49.371874           0.0       -0.000122 -1.583044e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=163369/8192, buf_size=700.[0m
[01/10 22:38:44]  --------------------------------------------------------------------------------
[01/10 22:38:44]  Iteration: 114 (39 solution, 74 counterexamples)
[01/10 22:42:31]  Generator returned sat in 217.391439 secs.
[01/10 22:42:31]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:42:40]  Verifer returned unsat in 8.905789 secs.
[01/10 22:42:40]  sf_get_cex returned in 9.055840 secs.
[01/10 22:42:40]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:42:40]  --------------------------------------------------------------------------------
[01/10 22:42:40]  Iteration: 115 (40 solution, 74 counterexamples)
[01/10 22:46:19]  Generator returned sat in 208.986128 secs.
[01/10 22:46:19]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:46:38]  Verifer returned unsat in 18.589853 secs.
[01/10 22:46:38]  sf_get_cex returned in 18.786913 secs.
[01/10 22:46:38]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:46:38]  --------------------------------------------------------------------------------
[01/10 22:46:38]  Iteration: 116 (41 solution, 74 counterexamples)
[01/10 22:50:50]  Generator returned sat in 242.664119 secs.
[01/10 22:50:51]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:03]  Verifer returned unsat in 11.534726 secs.
[01/10 22:51:03]  sf_get_cex returned in 11.687131 secs.
[01/10 22:51:03]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:03]  --------------------------------------------------------------------------------
[01/10 22:51:03]  Iteration: 117 (42 solution, 74 counterexamples)
[01/10 22:51:36]  Generator returned unsat in 23.911122 secs.
[01/10 22:51:36]  [96mNo more solutions found[0m
[01/10 22:51:36]  Final solutions:
[01/10 22:51:36]  0: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  1: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  2: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  3: [1m[92mif (+ 2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  4: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  5: [1m[92mif (+ 1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  6: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  7: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  8: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  9: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  10: [1m[92mif (+ 2min_c + -3/2max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  11: [1m[92mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  12: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  13: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  14: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  15: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  16: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  17: [1m[92mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  18: [1m[92mif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  19: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 3/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  20: [1m[92mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  21: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  22: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  23: [1m[92mif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  24: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:51:36]  25: [1m[92mif (+ 1min_qdel + 1min_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  26: [1m[92mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  27: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  28: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1max_c + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  29: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:51:36]  30: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  31: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:51:36]  32: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 3/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:51:36]  33: [1m[92mif (+ 1min_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  34: [1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  35: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  36: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  37: [1m[92mif (+ 1min_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  38: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  39: [1m[92mif (+ 3/2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  40: [1m[92mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:36]  41: [1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:51:36]  Took 16512.354351 secs.
