[01/10 18:16:23]  Namespace(optimize=None, infinite_buffer=False, finite_buffer=False, dynamic_buffer=True, T=9)
[01/10 18:16:23]  Using cond_vars: ['min_c', 'max_c', 'min_qdel', 'min_buffer', 'max_buffer']
[01/10 18:16:24]  --------------------------------------------------------------------------------
[01/10 18:16:24]  Iteration: 1 (0 solution, 0 counterexamples)
[01/10 18:16:24]  Generator returned sat in 0.006190 secs.
[01/10 18:16:24]  Candidate solution: 
[1m[94mif (+ 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:22:31]  Improved gap from 14.753846153846155 to 48.4375
[01/10 18:22:32]  Improved number of small numbers from 166 to 166 out of a max of 166
[01/10 18:22:32]  Verifer returned sat in 367.926652 secs.
[01/10 18:22:32]  sf_get_cex returned in 368.077819 secs.
[01/10 18:22:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t  upper_S_t  qdelay_t
0            0.000000              0.0000          0.000000       0.125000       0.125000            0.0000             0.0                     0.0        86.96875           100.0                0.0                2.0                  0.0                2.125         0.0000                   0.0                 212.5   0.000000          -1.0       -0.125000     0.1250       1.0
1           43.484375              0.1250         43.484375   43484.375000      43.484375            0.1250             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125        51.5625                   0.0                 212.5  43.359375           0.0       -5.078125    48.5625       0.0
2           86.968750             57.2500         86.968750   43527.734375      43.484375           57.2500             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125        94.4375                   0.0                 212.5  29.718750           0.0      -18.718750   105.6875       0.0
3          130.453125            105.6875        130.453125   43514.093750      43.484375          105.6875             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       146.0000                   0.0                 212.5  24.765625           0.0      -23.671875   154.1250       0.0
4          173.937500            154.1250        173.937500   43509.140625      43.484375          154.1250             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       197.5625                   0.0                 212.5  19.812500           0.0      -28.625000   202.5625       0.0
5          217.421875            202.5625        217.421875   43504.187500      43.484375          202.5625             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       249.1250                   0.0                 212.5  14.859375           0.0      -33.578125   251.0000       0.0
6          260.906250            251.0000        260.906250   43499.234375      43.484375          251.0000             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       300.6875                   0.0                 212.5   9.906250           0.0      -38.531250   299.4375       0.0
7          304.390625            299.4375        304.390625   43494.281250      43.484375          299.4375             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       352.2500                   0.0                 212.5   4.953125           0.0      -43.484375   347.8750       0.0
8          347.875000            347.8750        347.875000   43489.328125      43.484375          347.8750             0.0                     0.0        86.96875           100.0                0.0                1.0                  0.0                2.125       403.8125                   0.0                 212.5   0.000000           0.0      -48.437500   396.3125       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/8, buf_size=1/4.[0m
[01/10 18:22:32]  --------------------------------------------------------------------------------
[01/10 18:22:32]  Iteration: 2 (0 solution, 1 counterexamples)
[01/10 18:22:32]  Generator returned sat in 0.388135 secs.
[01/10 18:22:32]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:22:42]  Improved number of small numbers from 102 to 165 out of a max of 165
[01/10 18:22:42]  Verifer returned sat in 9.267414 secs.
[01/10 18:22:42]  sf_get_cex returned in 9.392934 secs.
[01/10 18:22:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t  upper_S_t  qdelay_t
0           -6.050537         -199.750244         -6.050537       0.124756       0.124512       -199.750244          0.0625                  0.0000           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.637207          -1.0       93.761963    -99.875       1.0
1          193.949463            0.125000        193.949463  200193.699707     200.000000          0.125000        100.0625                  0.0625           100.0           100.0                0.0                1.0                  0.0             0.937744      99.999756                   0.0             93.774414   93.761963           1.0       93.761963      0.125       0.0
2          393.949463            0.125000        393.949463  200193.824463     200.000000          0.125000        200.0625                100.0625           100.0           100.0                0.0                1.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.761963           1.0       93.761963    100.125       0.0
3          593.949463          193.886963        593.949463  200393.824463     200.000000        193.886963        300.0625                200.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  100.000000           1.0       93.761963    200.125       1.0
4          793.949463          293.886963        793.949463  200400.062500     200.000000        293.886963        400.0625                300.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  100.000000           1.0       93.761963    300.125       1.0
5          993.949463          300.312256        993.949463  200500.062500     200.000000        300.312256        500.0625                400.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.574707           1.0       93.761963    400.125       1.0
6         1193.949463          400.125000       1193.949463  200693.637207     200.000000        400.125000        600.0625                500.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.761963           1.0       93.761963    500.125       1.0
7         1393.949463          500.125000       1393.949463  200793.824463     200.000000        500.125000        700.0625                600.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.761963           1.0       93.761963    600.125       1.0
8         1593.949463          600.499268       1593.949463  200893.824463     200.000000        600.499268        800.0625                700.0625           100.0           100.0                0.0                2.0                  0.0             0.937744      99.999756                   0.0             93.774414  193.387695           1.0       93.761963    700.125       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=700, beliefs_improve=False, alpha=255/4096, buf_size=384049/4096.[0m
[01/10 18:22:42]  --------------------------------------------------------------------------------
[01/10 18:22:42]  Iteration: 3 (0 solution, 2 counterexamples)
[01/10 18:22:43]  Generator returned sat in 0.837447 secs.
[01/10 18:22:43]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:22:50]  Improved number of small numbers from 59 to 83 out of a max of 165
[01/10 18:22:50]  Verifer returned sat in 6.880013 secs.
[01/10 18:22:50]  sf_get_cex returned in 7.008365 secs.
[01/10 18:22:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t   upper_S_t  qdelay_t
0          193.949463         -593.518799        193.949463       0.124756       0.124512       -593.518799        0.007812                0.000000       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  787.460449          -1.0      737.439659 -543.498009       8.0
1          293.957245         -506.050537        293.957245  100795.250244     100.007782       -506.050537        0.015564                0.007812       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  799.992218           1.0      737.439690 -443.498009       8.0
2          393.965027         -368.488930        393.965027  100807.789764     100.007782       -368.488930        0.023346                0.015564       87.530479      112.487549                6.0                8.0                  7.0             7.374512      149.97641            612.713356            829.540747  762.430611           1.0      737.439690 -343.498009       7.0
3          493.972809         -256.032379        493.972809  100770.235939     100.007782       -256.032379        0.031128                0.023346       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  749.974060           1.0      737.439690 -243.498009       8.0
4          593.980591         -155.928619        593.980591  100757.787170     100.007782       -155.928619        0.038910                0.031128       87.530479      112.487549                4.0                6.0                  7.0             7.374512      149.97641            612.713356            829.540747  749.870300           1.0      737.439690 -143.498009       5.0
5          693.988373         -143.498009        693.988373  100757.691193     100.007782       -143.498009        0.046692                0.038910       87.530479      112.487549                5.0                7.0                  7.0             7.374512      149.97641            612.713356            829.540747  837.439690           1.0      737.439690  -43.498009       6.0
6          793.996155           19.085648        793.996155  100845.268364     100.007782         19.085648        0.054474                0.046692       87.530479      112.487549                6.0                8.0                  7.0             7.374512      149.97641            612.713356            829.540747  774.856033           1.0      737.439690   56.501991       7.0
7          894.003937          106.662819        894.003937  100782.692490     100.007782        106.662819        0.062256                0.054474       87.530479      112.487549                7.0                9.0                  7.0             7.374512      149.97641            612.713356            829.540747  787.278862           1.0      737.439690  156.501991       8.0
8          994.011719          193.949219        994.011719  100795.123100     100.007782        193.949219        0.070038                0.062256       87.530479      112.487549                6.0                8.0                  7.0             7.374512      149.97641            612.713356            829.540747  799.992462           1.0      737.439690  256.501991       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=1785/32768, beliefs_improve=False, alpha=1635425/131072, buf_size=96657695/131072.[0m
[01/10 18:22:50]  --------------------------------------------------------------------------------
[01/10 18:22:50]  Iteration: 4 (0 solution, 3 counterexamples)
[01/10 18:22:51]  Generator returned sat in 0.272949 secs.
[01/10 18:22:51]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:00]  Improved gap from 0.0 to 100
[01/10 18:23:02]  Improved number of small numbers from 99 to 105 out of a max of 166
[01/10 18:23:02]  Verifer returned sat in 11.505841 secs.
[01/10 18:23:02]  sf_get_cex returned in 11.633108 secs.
[01/10 18:23:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        20208.332031        19464.960653      20208.332031       0.124756       0.124268      19464.960653        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  743.371379          -1.0      735.246867  19473.085164       8.0
1        20367.116292        19566.991781      20367.116292  159527.632446     158.784261      19566.991781        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  800.124512           1.0      794.031128  19573.085164       8.0
2        20525.900553        19669.022909      20525.900553  159584.385579     158.784261      19669.022909        0.000000                     0.0       79.392131           102.0                6.0                8.0                  7.0                 14.0      149.97641            555.744914                1428.0  856.877645           1.0      852.815389  19673.085164       7.0
3        20605.292684        19771.085164      20605.292684   80249.008179      79.392131      19771.085164        0.000000                     0.0       79.392131           102.0                5.0                7.0                  7.0                 14.0      149.97641            555.744914                1428.0  834.207520           1.0      832.207520  19773.085164       6.0
4        20684.684814        19782.404663      20684.684814   80226.338053      79.392131      19782.404663        0.000000                     0.0       79.392131           102.0                6.0                8.0                  7.0                 14.0      149.97641            555.744914                1428.0  902.280151           1.0      811.599650  19873.085164       7.0
5        20764.076945        19873.085164      20764.076945   80294.410685      79.392131      19873.085164        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  890.991781           1.0      790.991781  19973.085164       8.0
6        20922.861206        19975.147420      20922.861206  159675.252848     158.784261      19975.147420        0.000000                     0.0       79.392131           102.0                6.0                8.0                  7.0                 14.0      149.97641            555.744914                1428.0  947.713786           1.0      849.776042  20073.085164       7.0
7        21002.253337        20077.178711      21002.253337   80339.844320      79.392131      20077.178711        0.000000                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  925.074626           1.0      829.168172  20173.085164       8.0
8        21161.037598        20179.209717      21161.037598  159709.335693     158.784261      20179.209717       35.137044                     0.0       79.392131           102.0                7.0                9.0                  7.0                 14.0      149.97641            555.744914                1428.0  946.690837           1.0      852.815389  20273.085164       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=107941/3072, beliefs_improve=False, alpha=1/32, buf_size=20958791/24576.[0m
[01/10 18:23:02]  --------------------------------------------------------------------------------
[01/10 18:23:02]  Iteration: 5 (0 solution, 4 counterexamples)
[01/10 18:23:04]  Generator returned sat in 1.374173 secs.
[01/10 18:23:04]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:12]  Improved number of small numbers from 101 to 165 out of a max of 165
[01/10 18:23:12]  Verifer returned sat in 7.310144 secs.
[01/10 18:23:12]  sf_get_cex returned in 7.456826 secs.
[01/10 18:23:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        20325.900635        19625.838379      20325.900635       0.124512       0.124268      19625.838379             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062256          -1.0      700.062012  19625.838623       8.0
1        20425.900635        19725.838623      20425.900635  100700.062256     100.000000      19725.838623             0.0                     0.0           100.0           100.0                0.0                2.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062012           0.0      700.062012  19725.838623       1.0
2        20525.900635        19825.838379      20525.900635  100700.062012     100.000000      19825.838379             0.0                     0.0           100.0           100.0                1.0                3.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062256           1.0      700.062012  19825.838623       2.0
3        20625.900635        19925.838623      20625.900635  100700.062256     100.000000      19925.838623             0.0                     0.0           100.0           100.0                2.0                4.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062012           1.0      700.062012  19925.838623       3.0
4        20725.900635        20025.838379      20725.900635  100700.062012     100.000000      20025.838379             0.0                     0.0           100.0           100.0                3.0                5.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062256           1.0      700.062012  20025.838623       4.0
5        20825.900635        20125.838623      20825.900635  100700.062256     100.000000      20125.838623             0.0                     0.0           100.0           100.0                4.0                6.0                  7.0             7.015625     149.976318                 700.0              701.5625  700.062012           1.0      700.062012  20125.838623       5.0
6        20925.900635        20125.900635      20925.900635  100700.062012     100.000000      20125.900635             0.0                     0.0           100.0           100.0                5.0                7.0                  7.0             7.015625     149.976318                 700.0              701.5625  800.000000           1.0      700.062012  20225.838623       6.0
7        21025.900635        20225.838623      21025.900635  100800.000000     100.000000      20225.838623             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             7.015625     149.976318                 700.0              701.5625  800.062012           1.0      700.062012  20325.838623       7.0
8        21125.900635        20325.838623      21125.900635  100800.062012     100.000000      20325.838623             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             7.015625     149.976318                 700.0              701.5625  800.062012           1.0      700.062012  20425.838623       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/64, buf_size=1433727/2048.[0m
[01/10 18:23:12]  --------------------------------------------------------------------------------
[01/10 18:23:12]  Iteration: 6 (0 solution, 5 counterexamples)
[01/10 18:23:14]  Generator returned sat in 1.426207 secs.
[01/10 18:23:14]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 3/2min_c + 2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:46]  Improved gap from 0.0621337890625 to 100
[01/10 18:23:49]  Improved number of small numbers from 80 to 97 out of a max of 166
[01/10 18:23:49]  Verifer returned sat in 34.789519 secs.
[01/10 18:23:49]  sf_get_cex returned in 34.921703 secs.
[01/10 18:23:49]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -152561.748305      -153253.360786    -152561.748305       0.124268       0.124023    -153253.360786        0.062012                0.000000       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  691.550469          -1.0      614.115533 -153175.925849       8.0
1      -152388.860718      -153142.298652    -152388.860718  173579.199287     172.887587    -153142.298652        0.062012                0.062012       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  753.375922           1.0      687.003120 -153075.925849       8.0
2      -152215.973131      -153031.236518    -152215.973131  173641.024740     172.887587    -153031.236518       59.704183                0.062012       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  755.559204           1.0      700.248535 -152975.925849       8.0
3      -152043.085544      -152920.174384    -152043.085544  173702.850193     172.887587    -152920.174384      132.591770               59.704183       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  744.497070           1.0      700.248535 -152875.925849       8.0
4      -151870.197957      -152821.452488    -151870.197957  173764.675646     172.887587    -152821.452488      205.479357              132.591770       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  745.775174           1.0      700.248535 -152775.925849       8.0
5      -151697.310371      -152775.925849    -151697.310371  173838.841336     172.887587    -152775.925849      278.366943              205.479357       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  800.248535           1.0      700.248535 -152675.925849       8.0
6      -151524.422784      -152675.925849    -151524.422784  173966.202284     172.887587    -152675.925849      351.254530              278.366943       86.443793      110.999756                6.0                8.0                  7.0             8.062256     149.976318            605.106554            894.908432  800.248535           1.0      700.248535 -152575.925849       7.0
7      -151438.041124      -152561.810438    -151438.041124   87533.162679      86.381660    -152561.810438      351.254530              351.254530       86.443793      110.999756                7.0                9.0                  7.0             8.062256     149.976318            605.106554            894.908432  772.514784           1.0      686.630195 -152475.925849       8.0
8      -151265.153537      -152475.925781    -151265.153537  174011.356120     172.887587    -152475.925781      410.523777              351.254530       86.443793      110.999756                6.0                8.0                  7.0             8.062256     149.976318            605.106554            894.908432  800.248467           1.0      700.248535 -152375.925849       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=30262525/73728, beliefs_improve=False, alpha=509/8192, buf_size=1434109/2048.[0m
[01/10 18:23:49]  --------------------------------------------------------------------------------
[01/10 18:23:49]  Iteration: 7 (0 solution, 6 counterexamples)
[01/10 18:23:50]  Generator returned sat in 0.941308 secs.
[01/10 18:23:50]  Candidate solution: 
[1m[94mif (+ 1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + 2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:23:56]  Improved gap from 0.0 to 48.4375
[01/10 18:23:57]  Improved number of small numbers from 166 to 166 out of a max of 166
[01/10 18:23:57]  Verifer returned sat in 6.039022 secs.
[01/10 18:23:57]  sf_get_cex returned in 6.171700 secs.
[01/10 18:23:57]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -152313.034912      -152313.065918    -152313.034912       0.124268       0.124023    -152313.065918             0.0                     0.0       48.562012           100.0                0.0                2.0                  0.0             1.968994     -55.868652                   0.0            196.899414   0.031006          -1.0        0.031006 -152313.065918       1.0
1      -152264.503906      -152313.034912    -152264.503906   48531.036865      48.531006    -152313.034912             0.0                     0.0       48.562012           100.0                0.0                2.0                  0.0             1.968994      -4.430664                   0.0            196.899414  48.531006           0.0        0.000000 -152264.503906       1.0
2      -152215.972900      -152264.503906    -152215.972900   48579.536865      48.531006    -152264.503906             0.0                     0.0       48.562012           100.0                0.0                2.0                  0.0             1.968994      47.038330                   0.0            196.899414  48.531006           0.0        0.000000 -152215.972900       1.0
3      -152167.441895      -152215.941895    -152167.441895   48579.536865      48.531006    -152215.941895             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994      98.507324                   0.0            196.899414  48.500000           0.0        0.000000 -152167.441895       0.0
4      -152118.910889      -152167.410889    -152118.910889   48579.505859      48.531006    -152167.410889             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     149.976318                   0.0            196.899414  48.500000           0.0        0.000000 -152118.910889       0.0
5      -152070.379883      -152118.879883    -152070.379883   48579.505859      48.531006    -152118.879883             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     201.445312                   0.0            196.899414  48.500000           0.0        0.000000 -152070.379883       0.0
6      -152021.848877      -152070.317871    -152021.848877   48579.505859      48.531006    -152070.317871             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     252.883301                   0.0            196.899414  48.468994           0.0       -0.031006 -152021.817871       0.0
7      -151973.317871      -152021.817871    -151973.317871   48579.474854      48.531006    -152021.817871             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     304.383301                   0.0            196.899414  48.500000           0.0        0.000000 -151973.317871       0.0
8      -151924.786865      -151973.286865    -151924.786865   48579.505859      48.531006    -151973.286865             0.0                     0.0       48.562012           100.0                0.0                1.0                  0.0             1.968994     304.383301                   0.0            196.899414  48.500000           0.0      -51.468994 -151873.317871       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=127/4096, buf_size=127/2048.[0m
[01/10 18:23:57]  --------------------------------------------------------------------------------
[01/10 18:23:57]  Iteration: 8 (0 solution, 7 counterexamples)
[01/10 18:24:04]  Generator returned sat in 6.281066 secs.
[01/10 18:24:04]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:24:43]  Improved gap from 0.01953125 to 100
[01/10 18:24:45]  Improved number of small numbers from 86 to 98 out of a max of 166
[01/10 18:24:45]  Verifer returned sat in 41.287142 secs.
[01/10 18:24:45]  sf_get_cex returned in 41.425441 secs.
[01/10 18:24:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -151758.348877      -152364.550415    -151758.348877       0.124023       0.124023    -152364.550415        0.015625                0.000000       97.994832           100.0                7.0                9.0                  7.0                 12.0      -4.430664            685.963826                1200.0  606.185913          -1.0      606.139404 -152364.503906       8.0
1      -151660.354045      -152358.488403    -151660.354045   98601.033895      97.994832    -152358.488403        0.015625                0.015625       97.994832           100.0                4.0                6.0                  7.0                 12.0      -4.430664            685.963826                1200.0  698.118734           1.0      604.134237 -152264.503906       5.0
2      -151464.364380      -152260.493571    -151464.364380  196687.799072     195.989665    -152260.493571        0.031006                0.015625       97.994832           100.0                4.0                6.0                  7.0                 12.0      -4.430664            685.963826                1200.0  796.098185           1.0      700.108521 -152164.503906       5.0
3      -151268.374715      -152064.503906    -151268.374715  196785.793905     195.989665    -152064.503906       96.020671                0.031006       97.994832           100.0                4.0                6.0                  7.0                 12.0      -4.430664            685.963826                1200.0  700.108521           1.0      700.108521 -152064.503906       5.0
4      -151072.385050      -152064.457397    -151072.385050  196785.793905     195.989665    -152064.457397      192.010335               96.020671       97.994832           100.0                5.0                7.0                  7.0                 12.0      -4.430664            685.963826                1200.0  800.062012           1.0      700.108521 -151964.503906       6.0
5      -150974.390218      -151868.591553    -150974.390218   98986.904704      97.994832    -151868.591553      192.010335              192.010335       97.994832           100.0                6.0                8.0                  7.0                 12.0      -4.430664            685.963826                1200.0  702.190999           1.0      698.103353 -151864.503906       7.0
6      -150876.395386      -151770.519409    -150876.395386   98889.033691      97.994832    -151770.519409      192.010335              192.010335       97.994832           100.0                7.0                9.0                  7.0                 12.0      -4.430664            685.963826                1200.0  702.113688           1.0      696.098185 -151764.503906       8.0
7      -150778.400553      -151764.457397    -150778.400553   98888.956380      97.994832    -151764.457397      192.010335              192.010335       97.994832           100.0                7.0                9.0                  7.0                 12.0      -4.430664            685.963826                1200.0  794.046509           1.0      694.093018 -151664.503906       8.0
8      -150680.405721      -151660.354248    -150680.405721   98980.889201      97.994832    -151660.354248      192.010335              192.010335       97.994832           100.0                5.0                7.0                  7.0                 12.0      -4.430664            685.963826                1200.0  787.938192           1.0      692.087850 -151564.503906       6.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=2, loss_amount=2359231/12288, beliefs_improve=False, alpha=1/64, buf_size=5735289/8192.[0m
[01/10 18:24:45]  --------------------------------------------------------------------------------
[01/10 18:24:45]  Iteration: 9 (0 solution, 8 counterexamples)
[01/10 18:24:50]  Generator returned sat in 3.784850 secs.
[01/10 18:24:50]  Candidate solution: 
[1m[94mif (+ -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:24:57]  Improved gap from 0.0 to 48.4375
[01/10 18:24:57]  Improved number of small numbers from 120 to 166 out of a max of 166
[01/10 18:24:57]  Verifer returned sat in 7.052371 secs.
[01/10 18:24:57]  sf_get_cex returned in 7.184501 secs.
[01/10 18:24:57]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -50687.182617       -50687.182617     -50687.182617       0.123779       0.123779     -50687.182617             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25752.516113                   0.0         349678.277817   0.000000          -1.0        0.000000 -50687.182617       0.0
1       -50637.683105       -50686.120605     -50637.683105   49499.511719      49.499512     -50686.120605             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25803.016602                   0.0         349678.277817  48.437500           0.0        0.000000 -50637.683105       0.0
2       -50588.183594       -50637.683105     -50588.183594   49547.949219      49.499512     -50637.683105             0.0                     0.0         69.4375    86084.999756                0.0                2.0                  0.0             4.062012   25853.455078                   0.0         349678.277817  49.499512           0.0       -0.062012 -50588.121582       1.0
3       -50538.684082       -50588.121338     -50538.684082   49549.011230      49.499512     -50588.121338             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25904.017334                   0.0         349678.277817  49.437256           0.0       -0.000244 -50538.683838       0.0
4       -50489.184570       -50536.560059     -50489.184570   49548.948975      49.499512     -50536.560059             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   25953.456055                   0.0         349678.277817  47.375488           0.0       -1.062012 -50488.122559       0.0
5       -50439.685059       -50488.122559     -50439.685059   49546.887207      49.499512     -50488.122559             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   26005.018555                   0.0         349678.277817  48.437500           0.0        0.000000 -50439.685059       0.0
6       -50390.185547       -50439.685059     -50390.185547   49547.949219      49.499512     -50439.685059             0.0                     0.0         69.4375    86084.999756                0.0                2.0                  0.0             4.062012   26055.518799                   0.0         349678.277817  49.499512           0.0       -0.000244 -50390.185303       1.0
7       -50340.686035       -50390.123535     -50340.686035   49549.011230      49.499512     -50390.123535             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   26106.019531                   0.0         349678.277817  49.437500           0.0        0.000000 -50340.686035       0.0
8       -50291.186523       -50337.244629     -50291.186523   49548.949219      49.499512     -50337.244629             0.0                     0.0         69.4375    86084.999756                0.0                1.0                  0.0             4.062012   26154.140625                   0.0         349678.277817  46.058105           0.0       -2.379395 -50288.807129       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40833/2048, buf_size=20.[0m
[01/10 18:24:57]  --------------------------------------------------------------------------------
[01/10 18:24:57]  Iteration: 10 (0 solution, 9 counterexamples)
[01/10 18:25:03]  Generator returned sat in 4.371336 secs.
[01/10 18:25:03]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:25:27]  Improved gap from 39.9381103515625 to 100
[01/10 18:25:28]  Improved number of small numbers from 121 to 166 out of a max of 166
[01/10 18:25:28]  Verifer returned sat in 24.532675 secs.
[01/10 18:25:28]  sf_get_cex returned in 24.662972 secs.
[01/10 18:25:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        62792.309082        61911.956299      62792.309082       0.123779       0.123535      61911.956299        0.000000                0.000000           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  880.352783          -1.0      780.353027  62011.956055       8.0
1        62892.309082        62011.956299      62892.309082  100880.352783     100.000000      62011.956299        0.000000                0.000000           100.0      120.058838                4.0                6.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  880.352783           1.0      780.353027  62111.956055       5.0
2        63092.309082        62111.956055      63092.309082  200880.352783     200.000000      62111.956055       19.646973                0.000000           100.0      120.058838                5.0                7.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  960.706055           1.0      860.706055  62211.956055       6.0
3        63292.309082        62311.956055      63292.309082  200980.353027     200.000000      62311.956055      119.646973               19.646973           100.0      120.058838                6.0                8.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  860.706055           1.0      860.706055  62311.956055       7.0
4        63492.309082        62311.985596      63492.309082  200980.353027     200.000000      62311.985596      219.646973              119.646973           100.0      120.058838                6.0                8.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  960.676514           1.0      860.706055  62411.956055       7.0
5        63692.309082        62432.044434      63692.309082  201180.323486     200.000000      62432.044434      319.646973              219.646973           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  940.617676           1.0      860.706055  62511.956055       8.0
6        63792.309082        62580.132568      63792.309082  101260.264648     100.000000      62580.132568      319.646973              319.646973           100.0      120.058838                6.0                8.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  892.529541           1.0      860.706055  62611.956055       7.0
7        63992.309082        62711.220947      63992.309082  201212.176514     200.000000      62711.220947      419.646973              319.646973           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  861.441162           1.0      860.706055  62711.956055       8.0
8        64092.309082        62792.309082      64092.309082  101281.088135     100.000000      62792.309082      419.646973              419.646973           100.0      120.058838                7.0                9.0                  7.0                  9.0  -86946.622803                 700.0           1080.529541  880.353027           1.0      860.706055  62811.956055       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=859437/2048, beliefs_improve=False, alpha=15/512, buf_size=881363/1024.[0m
[01/10 18:25:28]  --------------------------------------------------------------------------------
[01/10 18:25:28]  Iteration: 11 (0 solution, 10 counterexamples)
[01/10 18:25:30]  Generator returned sat in 1.341017 secs.
[01/10 18:25:30]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:25:36]  Improved number of small numbers from 165 to 165 out of a max of 165
[01/10 18:25:36]  Verifer returned sat in 5.930091 secs.
[01/10 18:25:36]  sf_get_cex returned in 6.058161 secs.
[01/10 18:25:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        62892.309082        62132.062012      62892.309082       0.123779       0.123535      62132.062012             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  760.247070          -1.0       760.24707  62132.062012       8.0
1        62992.309082        62232.062012      62992.309082  100760.247070     100.000000      62232.062012             0.0                     0.0           100.0           100.0                5.0                7.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  760.247070           1.0       760.24707  62232.062012       6.0
2        63092.309082        62232.123779      63092.309082  100760.247070     100.000000      62232.123779             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  860.185303           1.0       760.24707  62332.062012       7.0
3        63192.309082        62388.185547      63192.309082  100860.185303     100.000000      62388.185547             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  804.123535           1.0       760.24707  62432.062012       8.0
4        63292.309082        62432.062012      63292.309082  100804.123535     100.000000      62432.062012             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  860.247070           1.0       760.24707  62532.062012       7.0
5        63392.309082        62532.309082      63392.309082  100860.247070     100.000000      62532.309082             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  860.000000           1.0       760.24707  62632.062012       8.0
6        63492.309082        62632.370850      63492.309082  100860.000000     100.000000      62632.370850             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  859.938232           1.0       760.24707  62732.062012       8.0
7        63592.309082        62732.432617      63592.309082  100859.938232     100.000000      62732.432617             0.0                     0.0           100.0           100.0                7.0                9.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  859.876465           1.0       760.24707  62832.062012       8.0
8        63692.309082        62892.370850      63692.309082  100859.876465     100.000000      62892.370850             0.0                     0.0           100.0           100.0                6.0                8.0                  7.0             8.061768  -86946.622803                 700.0            806.176758  799.938232           1.0       760.24707  62932.062012       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81667/4096, buf_size=3114225/4096.[0m
[01/10 18:25:36]  --------------------------------------------------------------------------------
[01/10 18:25:36]  Iteration: 12 (0 solution, 11 counterexamples)
[01/10 18:25:42]  Generator returned sat in 4.516006 secs.
[01/10 18:25:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:26:00]  Improved gap from 4.9411764705882355 to 48.4375
[01/10 18:26:01]  Improved number of small numbers from 142 to 144 out of a max of 166
[01/10 18:26:01]  Verifer returned sat in 18.161935 secs.
[01/10 18:26:01]  sf_get_cex returned in 18.296454 secs.
[01/10 18:26:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        62961.696582        62957.927832      62961.696582       0.123291       0.123047      62957.927832             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86993.398193                   0.0            326.029536   3.768750          -1.0        3.768604  62957.927979       0.0
1        63011.152832        62961.715332      63011.152832   49460.018750      49.456250      62961.715332             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86946.623047                   0.0            326.029536  49.437500           0.0        0.000000  63011.152832       0.0
2        63060.609082        63011.152832      63060.609082   49505.687500      49.456250      63011.152832             0.0                     0.0        53.01875      107.999756                0.0                2.0                  0.0             3.018799  -86896.079346                   0.0            326.029536  49.456250           0.0       -0.000049  63060.609131       1.0
3        63110.065332        63060.646582      63110.065332   49505.706250      49.456250      63060.646582             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86845.554297                   0.0            326.029536  49.418750           0.0       -0.018750  63110.084082       0.0
4        63159.521582        63110.084082      63159.521582   49505.668750      49.456250      63110.084082             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86794.991943                   0.0            326.029536  49.437500           0.0       -0.000146  63159.521729       0.0
5        63208.977832        63159.540332      63208.977832   49505.687500      49.456250      63159.540332             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86744.448047                   0.0            326.029536  49.437500           0.0        0.000000  63208.977832       0.0
6        63258.434082        63208.996582      63258.434082   49505.687500      49.456250      63208.996582             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86693.904297                   0.0            326.029536  49.437500           0.0        0.000000  63258.434082       0.0
7        63307.890332        63258.434082      63307.890332   49505.687500      49.456250      63258.434082             0.0                     0.0        53.01875      107.999756                0.0                2.0                  0.0             3.018799  -86643.379297                   0.0            326.029536  49.456250           0.0       -0.018750  63307.909082       1.0
8        63357.346582        63307.909180      63357.346582   49505.706250      49.456250      63307.909180             0.0                     0.0        53.01875      107.999756                0.0                1.0                  0.0             3.018799  -86643.379150                   0.0            326.029536  49.437402           0.0      -50.562354  63407.908936       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=57/16, buf_size=15437/4096.[0m
[01/10 18:26:01]  --------------------------------------------------------------------------------
[01/10 18:26:01]  Iteration: 13 (0 solution, 12 counterexamples)
[01/10 18:26:09]  Generator returned sat in 6.978704 secs.
[01/10 18:26:09]  Candidate solution: 
[1m[94mif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
