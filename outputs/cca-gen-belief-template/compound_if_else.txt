[02/07 17:54:27]  Namespace(infinite_buffer=False, finite_buffer=False, dynamic_buffer=True, T=9, ideal=True, app_limited=False, fix_minc=False, fix_maxc=False, optimize=False, proofs=False, solution=None, run_log_dir=None, use_belief_invariant_n=False, ideal_only=False, opt_cegis_n=False, opt_ve_n=False, opt_pdt_n=True, opt_wce_n=True, opt_feasible_n=True)
[02/07 17:54:27]  Using expr rhs_vars: ['min_c', 'r_f']
[02/07 17:54:27]  Using cond_vars: ['r_f', 'min_c', 'max_c', 'min_qdel']
[02/07 17:54:28]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=4.0, desired_large_loss_count_bound=4.0, desired_loss_amount_bound_multiplier=3.0, desired_loss_amount_bound_alpha=3.0
[02/07 17:54:28]  Ideal: desired_util_f=0.5, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=4.0, desired_large_loss_count_bound=4.0, desired_loss_amount_bound_multiplier=3.0, desired_loss_amount_bound_alpha=3.0
[02/07 17:54:28]  --------------------------------------------------------------------------------
[02/07 17:54:28]  Iteration: 1 (0 solution, 0 counterexamples)
[02/07 17:54:28]  Generator returned sat in 0.007515 secs.
[02/07 17:54:28]  Candidate solution: 
[1m[94mr_f[n][t] = 
if (0 > 0):
    if (0 > 0):
        max(alpha,  + 2r_f[n][t-1] + 1alpha)
    else:
        max(alpha,  + 2r_f[n][t-1] + 1alpha)
else:
    if (0 > 0):
        max(alpha,  + 2r_f[n][t-1] + 1alpha)
    else:
        max(alpha,  + 2r_f[n][t-1] + 1alpha)[0m
[02/07 17:54:37]  Improved number of small numbers from 115 to 115 out of a max of 149
[02/07 17:54:37]  Verifer returned sat in 8.606318 secs.
[02/07 17:54:37]  Counter example: 
[93m   ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          408.066242         1.000000         0.707843         -394.558758             0.000                       0.0             100.0             100.0                  5.0  802.625000          -1.0       6.0
1          410.356928      3093.311275         2.290686         -294.558758             0.000                       0.0             100.0             100.0                  5.0  704.915686           1.0       6.0
2          415.813300      6161.288235         5.456373         -194.558758             0.000                       0.0             100.0             100.0                  1.0  610.372059           1.0       2.0
3          427.601045     12398.117157        11.787745          -94.558758             0.000                       0.0             100.0             100.0                  2.0  522.159804           1.0       3.0
4          452.051536     24972.650000        24.450490            5.441242             0.000                       0.0             100.0             100.0                  3.0  446.610294           1.0       4.0
5          501.827516     50222.590686        49.775980          105.441242             0.000                       0.0             100.0             100.0                  4.0  396.386275           1.0       5.0
6          602.254477    100823.347059       100.426961          205.441242             0.000                       0.0             100.0             100.0                  5.0  396.813235           1.0       6.0
7          803.983398    202125.734804       201.728922          305.441242             0.000                       0.0             100.0             100.0                  6.0  498.542157           1.0       7.0
8         1208.316242    404831.385294       404.332843          405.441242             0.125                       0.0             100.0             100.0                  7.0  802.750000           1.0       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=0, loss_amount=1/8, beliefs_remain_consistent=True, beliefs_improve=False, alpha=7/8, buf_size=3211/4, start_state=[0].[0m
[02/07 17:54:37]  --------------------------------------------------------------------------------
[02/07 17:54:37]  Iteration: 2 (0 solution, 1 counterexamples)
[02/07 17:55:10]  Generator returned sat in 32.926428 secs.
[02/07 17:55:10]  Candidate solution: 
[1m[94mr_f[n][t] = 
if (+ -2r_f + 1/2min_c + 1max_c + 1alpha > 0):
    if (+ 3/2r_f + -1/2min_c + 1/2max_c + 2alpha > 0):
        max(alpha,  + 1r_f[n][t-1])
    else:
        max(alpha,  + 3/2r_f[n][t-1] + 1alpha)
else:
    if (+ 1r_f + -1/2min_c + -1/2max_c + 2alpha > 0):
        max(alpha,  + 1r_f[n][t-1] + -1alpha)
    else:
        max(alpha,  + 3/2r_f[n][t-1] + -1alpha)[0m
[02/07 17:56:03]  Improved number of small numbers from 113 to 113 out of a max of 149
[02/07 17:56:03]  Verifer returned sat in 53.729640 secs.
[02/07 17:56:03]  Counter example: 
[93m   ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0      -198949.852873         1.000000         1.333333      -198949.852873               0.0                       0.0          1.518519             100.0                  7.0      0.0          -1.0       8.0
1      -198948.519539      1333.333333         1.333333      -198948.519539               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
2      -198947.186206      1333.333333         1.333333      -198947.186206               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
3      -198945.852873      1333.333333         1.333333      -198945.852873               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
4      -198944.519539      1333.333333         1.333333      -198944.519539               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
5      -198943.186206      1333.333333         1.333333      -198943.186206               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
6      -198941.852873      1333.333333         1.333333      -198941.852873               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
7      -198940.519539      1333.333333         1.333333      -198940.519539               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
8      -198939.186206      1333.333333         1.333333      -198939.186206               0.0                       0.0          1.518519             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2/3, buf_size=800, start_state=[0].[0m
[02/07 17:56:03]  --------------------------------------------------------------------------------
[02/07 17:56:03]  Iteration: 3 (0 solution, 2 counterexamples)
[02/07 18:24:55]  Generator returned sat in 1731.137761 secs.
[02/07 18:24:55]  Candidate solution: 
[1m[94mr_f[n][t] = 
if (+ -1min_qdel + 1R > 0):
    if (+ -1min_qdel + 1R > 0):
        max(alpha,  + 1/2min_c[n][t-1] + -1alpha)
    else:
        max(alpha,  + 1min_c[n][t-1])
else:
    if (+ -1min_qdel + 2R > 0):
        max(alpha,  + 1/2r_f[n][t-1])
    else:
        max(alpha,  + 2r_f[n][t-1] + 1alpha)[0m
[02/07 18:25:04]  Improved number of small numbers from 86 to 86 out of a max of 149
[02/07 18:25:04]  Verifer returned sat in 9.073495 secs.
[02/07 18:25:04]  Counter example: 
[93m   ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0      -198952.709074         0.999756       273.733236      -199048.519539          0.000000                  0.000000         66.733317             100.0                  1.0   95.810465          -1.0       2.0
1      -198815.842456    136962.428304       136.866618      -198948.519539          0.199951                  0.000000         66.733317             100.0                  0.0  132.477132           0.0       0.0
2      -198799.062996     16912.136719        16.779460      -198848.519539          0.199951                  0.199951         66.733317             100.0                  0.0   49.256592           1.0       1.0
3      -198782.283537     16828.916178        16.779460      -198782.483488          0.199951                  0.199951         66.733317             100.0                  0.0    0.000000           0.0       0.0
4      -198765.504077     16779.659587        16.779460      -198765.704028          0.199951                  0.199951         66.733317             100.0                  0.0    0.000000           0.0       0.0
5      -198748.724617     16779.659587        16.779460      -198748.924569          0.199951                  0.199951         66.733317             100.0                  0.0    0.000000           0.0       0.0
6      -198731.945158     16779.659587        16.779460      -198732.145109          0.199951                  0.199951         66.733317             100.0                  0.0    0.000000           0.0       0.0
7      -198715.165698     16779.659587        16.779460      -198715.365649          0.199951                  0.199951         66.733317             100.0                  0.0    0.000000           0.0       0.0
8      -198698.386239     16779.659587        16.779460      -198698.586190          0.199951                  0.199951         66.733317             100.0                  0.0    0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=407647/24576, buf_size=1627879/12288, start_state=[0].[0m
[02/07 18:25:04]  --------------------------------------------------------------------------------
[02/07 18:25:04]  Iteration: 4 (0 solution, 3 counterexamples)
[02/07 19:38:43]  Generator returned sat in 4418.538965 secs.
[02/07 19:38:43]  Candidate solution: 
[1m[94mr_f[n][t] = 
if (+ 1min_qdel + 1R > 0):
    if (+ -1min_qdel + 2R > 0):
        max(alpha,  + 1min_c[n][t-1])
    else:
        max(alpha,  + 1/2min_c[n][t-1] + -1alpha)
else:
    if (+ 1r_f + -1min_c + -3/2max_c + -2alpha > 0):
        max(alpha,  + 2min_c[n][t-1] + -1alpha)
    else:
        max(alpha,  + 1/2r_f[n][t-1] + -1alpha)[0m
[02/07 19:39:14]  Improved number of small numbers from 149 to 149 out of a max of 149
[02/07 19:39:14]  Verifer returned sat in 31.779996 secs.
[02/07 19:39:14]  Counter example: 
[93m   ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          -19.666667         1.000000         1.000000          -19.666667               0.0                       0.0         19.666667             100.0                  0.0      0.0          -1.0       1.0
1            0.000000     19666.666667        19.666667            0.000000               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
2           19.666667     19666.666667        19.666667           19.666667               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
3           39.333333     19666.666667        19.666667           39.333333               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
4           59.000000     19666.666667        19.666667           59.000000               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
5           78.666667     19666.666667        19.666667           78.666667               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
6           98.333333     19666.666667        19.666667           98.333333               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
7          118.000000     19666.666667        19.666667          118.000000               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
8          137.666667     19666.666667        19.666667          137.666667               0.0                       0.0         19.666667             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=59/3, buf_size=62/3, start_state=[0].[0m
[02/07 19:39:15]  --------------------------------------------------------------------------------
[02/07 19:39:15]  Iteration: 5 (0 solution, 4 counterexamples)
[02/07 20:50:58]  Generator returned sat in 4303.569794 secs.
[02/07 20:50:58]  Candidate solution: 
[1m[94mr_f[n][t] = 
if (+ -1min_qdel + 1R > 0):
    if (+ 1min_qdel + -1R > 0):
        max(alpha,  + 1/2min_c[n][t-1] + 1alpha)
    else:
        max(alpha,  + 2r_f[n][t-1])
else:
    if (+ -1min_qdel + -1R > 0):
        max(alpha,  + 1/2r_f[n][t-1] + -1alpha)
    else:
        max(alpha,  + 1/2min_c[n][t-1] + -1alpha)[0m
[02/07 20:51:26]  Improved number of small numbers from 149 to 149 out of a max of 149
[02/07 20:51:26]  Verifer returned sat in 27.326239 secs.
[02/07 20:51:26]  Counter example: 
[93m   ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         -523.169492         1.000000        13.217514         -724.169492          1.000000                  0.000000         80.463277             100.0                  0.0  200.000000          -1.0       1.0
1         -496.734463     26636.028249        26.435028         -624.169492          1.000000                  1.000000         80.463277             100.0                  0.0  126.435028           1.0       1.0
2         -443.864407     52997.491525        52.870056         -524.169492          1.000000                  1.000000         80.463277             100.0                  1.0   79.305085           1.0       2.0
3         -423.169492     20775.220339        20.694915         -424.169492          1.000000                  1.000000         80.463277             100.0                  0.0    0.000000           0.0       0.0
4         -381.779661     41390.830508        41.389831         -382.779661          1.000000                  1.000000         80.463277             100.0                  0.0    0.000000           0.0       0.0
5         -299.000000     82780.661017        82.779661         -300.000000          1.000000                  1.000000         80.463277             100.0                  0.0    0.000000           0.0       0.0
6         -133.440678    165560.322034       165.559322         -200.000000          1.000000                  1.000000         80.463277             100.0                  0.0   65.559322           0.0       0.0
7          197.677966    331185.203390       331.118644         -100.000000         97.677966                  1.000000         80.463277             100.0                  0.0  200.000000           0.0       0.0
8          859.915254    662534.966102       662.237288            0.000000        659.915254                 97.677966         80.463277             100.0                  0.0  200.000000           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, 
, large_loss_count=2, loss_amount=38876/59, beliefs_remain_consistent=True, beliefs_improve=False, alpha=3458/177, buf_size=200, start_state=[0].[0m
[02/07 20:51:26]  --------------------------------------------------------------------------------
[02/07 20:51:26]  Iteration: 6 (0 solution, 5 counterexamples)
