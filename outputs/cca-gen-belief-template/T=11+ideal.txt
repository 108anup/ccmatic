[02/06 12:31:34]  Namespace(infinite_buffer=False, finite_buffer=False, dynamic_buffer=True, T=11, ideal=True, app_limited=False, fix_minc=False, fix_maxc=False, optimize=False, proofs=False, solution=None, opt_cegis_n=False, opt_ve_n=True, opt_pdt_n=True, opt_wce_n=True, opt_feasible_n=True)
[02/06 12:31:34]  Using cond_vars: ['min_c', 'max_c', 'min_qdel']
[02/06 12:31:35]  Adver: desired_util_f=0.4, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=5.0, desired_large_loss_count_bound=5.0, desired_loss_amount_bound_multiplier=4.0, desired_loss_amount_bound_alpha=4.0
[02/06 12:31:35]  Ideal: desired_util_f=0.4, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=5.0, desired_large_loss_count_bound=5.0, desired_loss_amount_bound_multiplier=4.0, desired_loss_amount_bound_alpha=4.0
[02/06 12:31:35]  Run log at: logs/optimizations/fname=main_cca_belief_template.py-infinite_buffer=False-finite_buffer=False-dynamic_buffer=True-opt_cegis=True-opt_ve=False-opt_pdt=False-opt_wce=False-opt_feasible=False-opt_ideal=True.csv
[02/06 12:31:35]  --------------------------------------------------------------------------------
[02/06 12:31:35]  Iteration: 1 (0 solution, 0 counterexamples)
[02/06 12:31:35]  Generator returned sat in 0.006344 secs.
[02/06 12:31:35]  Candidate solution: 
[1m[94mif (+ 2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 12:32:44]  Improved number of small numbers from 117 to 117 out of a max of 161
[02/06 12:32:44]  Verifer returned sat in 68.546159 secs.
[02/06 12:32:44]  Counter example: 
[93m    ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          -793.250349         1.000000         1.000000         -941.916174          0.120370                  0.000000         91.909091        112.285714                  2.0  148.545455          -1.0       3.0
1          -609.432167    183966.847643       183.818182         -841.916174          0.120370                  0.120370         91.909091        112.285714                  2.0  232.363636           1.0       3.0
2          -425.613985    184050.665825       183.818182         -741.916174          0.120370                  0.120370         91.909091        112.285714                  0.0  316.181818           0.0       1.0
3          -241.795803    184134.484007       183.818182         -641.916174          1.120370                  0.120370         91.909091        112.285714                  1.0  399.000000           1.0       2.0
4           -57.977622    184218.302189       183.818182         -541.916174         84.938552                  1.120370         91.909091        112.285714                  1.0  399.000000           1.0       2.0
5           125.840560    184302.120370       183.818182         -441.916174        168.756734                 84.938552         91.909091        112.285714                  2.0  399.000000           1.0       3.0
6           309.658742    184385.938552       183.818182         -341.916174        252.574916                168.756734         91.909091        112.285714                  2.0  399.000000           1.0       3.0
7           493.476924    184469.756734       183.818182         -241.916174        336.393098                252.574916         91.909091        112.285714                  2.0  399.000000           1.0       3.0
8           677.295106    184553.574916       183.818182         -141.916174        420.211279                336.393098         91.909091        112.285714                  2.0  399.000000           1.0       3.0
9           861.113288    184637.393098       183.818182          -41.916174        504.029461                420.211279         91.909091        112.285714                  2.0  399.000000           1.0       3.0
10         1044.931469    184721.211279       183.818182           58.083826        587.847643                504.029461         91.909091        112.285714                  2.0  399.000000           1.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=7, loss_amount=6465/11, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=399, start_state=[0].[0m
[02/06 12:32:44]  --------------------------------------------------------------------------------
[02/06 12:32:44]  Iteration: 2 (0 solution, 1 counterexamples)
[02/06 12:33:06]  Generator returned sat in 22.089165 secs.
[02/06 12:33:06]  Candidate solution: 
[1m[94mif (+ 1/2min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 12:33:43]  Improved number of small numbers from 75 to 161 out of a max of 161
[02/06 12:33:43]  Verifer returned sat in 36.933404 secs.
[02/06 12:33:43]  Counter example: 
[93m    ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0       -151301.380859         0.999756         0.999756      -151301.595215          0.214355                  0.000000          3.999023             100.0                  0.0      0.0          -1.0       1.0
1       -151299.381348      1999.726074         1.999512      -151299.595703          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           1.0       0.0
2       -151297.381836      1999.726074         1.999512      -151297.596191          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
3       -151295.382324      1999.726074         1.999512      -151295.596680          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
4       -151293.382812      1999.726074         1.999512      -151293.597168          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
5       -151291.383301      1999.726074         1.999512      -151291.597656          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
6       -151289.383789      1999.726074         1.999512      -151289.598145          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
7       -151287.384277      1999.726074         1.999512      -151287.598633          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
8       -151285.384766      1999.726074         1.999512      -151285.599121          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
9       -151283.385254      1999.726074         1.999512      -151283.599609          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
10      -151281.385742      1999.726074         1.999512      -151281.600098          0.214355                  0.214355          3.999023             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4095/4096, buf_size=99, start_state=[0].[0m
[02/06 12:33:43]  --------------------------------------------------------------------------------
[02/06 12:33:43]  Iteration: 3 (0 solution, 2 counterexamples)
[02/06 12:39:19]  Generator returned sat in 335.888410 secs.
[02/06 12:39:19]  Candidate solution: 
[1m[94mif (+ -2min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 12:39:20]  Improved number of small numbers from 149 to 161 out of a max of 161
[02/06 12:39:20]  Verifer returned sat in 1.018834 secs.
[02/06 12:39:20]  Counter example: 
[93m    ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0       -151301.381104         0.999512         0.999756      -151301.595459          0.214355                  0.000000          1.954102        121.994629                  0.0      0.0          -1.0       1.0
1       -151299.381592      1999.726074         1.999512      -151299.595947          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           1.0       0.0
2       -151297.382080      1999.726074         1.999512      -151297.596436          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
3       -151295.382568      1999.726074         1.999512      -151295.596924          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
4       -151293.383057      1999.726074         1.999512      -151293.597412          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
5       -151291.383545      1999.726074         1.999512      -151291.597900          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
6       -151289.384033      1999.726074         1.999512      -151289.598389          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
7       -151287.384521      1999.726074         1.999512      -151287.598877          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
8       -151285.385010      1999.726074         1.999512      -151285.599365          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
9       -151283.385498      1999.726074         1.999512      -151283.599854          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
10      -151281.385986      1999.726074         1.999512      -151281.600342          0.214355                  0.214355          1.954102        121.994629                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=93/2048, buf_size=405503/4096, start_state=[0].[0m
[02/06 12:39:20]  --------------------------------------------------------------------------------
[02/06 12:39:20]  Iteration: 4 (0 solution, 3 counterexamples)
[02/06 12:59:18]  Generator returned sat in 1197.363423 secs.
[02/06 12:59:18]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/06 13:00:29]  Improved number of small numbers from 58 to 59 out of a max of 161
[02/06 13:00:29]  Verifer returned sat in 71.034220 secs.
[02/06 13:00:29]  Counter example: 
[93m    ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0       -151471.494339         0.999512         0.999756      -151471.494339          0.000000                  0.000000         99.999991             100.0                  0.0   0.000000          -1.0       1.0
1       -151271.494358    199999.981001       199.999981      -151371.494339          0.000000                  0.000000         99.999991             100.0                  0.0  99.999981           0.0       0.0
2       -151071.494377    200099.980982       199.999981      -151271.494339         99.999972                  0.000000         99.999991             100.0                  0.0  99.999991           0.0       0.0
3       -150871.494396    200199.980963       199.999981      -151171.494339        199.999953                 99.999972         99.999991             100.0                  0.0  99.999991           1.0       0.0
4       -150671.494415    200299.980944       199.999981      -151071.494339        299.999934                199.999953         99.999991             100.0                  0.0  99.999991           1.0       0.0
5       -150471.494434    200399.980925       199.999981      -150971.494339        399.999915                299.999934         99.999991             100.0                  0.0  99.999991           1.0       0.0
6       -150271.494453    200499.980906       199.999981      -150871.494339        499.999896                399.999915         99.999991             100.0                  0.0  99.999991           1.0       0.0
7       -150071.494472    200599.980887       199.999981      -150771.494339        599.999877                499.999896         99.999991             100.0                  0.0  99.999991           1.0       0.0
8       -149871.494491    200699.980868       199.999981      -150671.494339        699.999858                599.999877         99.999991             100.0                  0.0  99.999991           1.0       0.0
9       -149671.494510    200799.980849       199.999981      -150571.494339        799.999839                699.999858         99.999991             100.0                  0.0  99.999991           1.0       0.0
10      -149471.494529    200899.980830       199.999981      -150471.494339        899.999820                799.999839         99.999991             100.0                  0.0  99.999991           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=9, 
, large_loss_count=9, loss_amount=77768676935107/86409658368, beliefs_remain_consistent=True, beliefs_improve=False, alpha=81919/4096, buf_size=8640965015953/86409658368, start_state=[0].[0m
[02/06 13:00:29]  --------------------------------------------------------------------------------
[02/06 13:00:29]  Iteration: 5 (0 solution, 4 counterexamples)
[02/06 13:12:58]  Generator returned sat in 747.903315 secs.
[02/06 13:12:58]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
elif (+ 1/2min_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 13:14:42]  Improved number of small numbers from 56 to 161 out of a max of 161
[02/06 13:14:42]  Verifer returned sat in 104.476379 secs.
[02/06 13:14:42]  Counter example: 
[93m    ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0       -170830.877197         0.999512         0.999512      -170911.334229         70.366699                  0.000000         91.908447        110.111572                  0.0  10.090332          -1.0       0.0
1       -170729.877686    101079.968750       100.999512      -170811.334229         71.366211                 70.366699         91.908447        110.111572                  0.0  10.090332           1.0       0.0
2       -170628.878174    101080.968262       100.999512      -170711.334229         72.365723                 71.366211         91.908447        110.111572                  0.0  10.090332           1.0       0.0
3       -170527.878662    101081.967773       100.999512      -170611.334229         73.365234                 72.365723         91.908447        110.111572                  0.0  10.090332           1.0       0.0
4       -170426.879150    101082.967285       100.999512      -170511.334229         74.364746                 73.365234         91.908447        110.111572                  0.0  10.090332           1.0       0.0
5       -170325.879639    101083.966797       100.999512      -170411.334229         75.364258                 74.364746         91.908447        110.111572                  0.0  10.090332           1.0       0.0
6       -170224.880127    101084.966309       100.999512      -170311.334229         76.363770                 75.364258         91.908447        110.111572                  0.0  10.090332           1.0       0.0
7       -170123.880615    101085.965820       100.999512      -170211.334229         77.363281                 76.363770         91.908447        110.111572                  0.0  10.090332           1.0       0.0
8       -170022.881104    101086.965332       100.999512      -170111.334229         78.362793                 77.363281         91.908447        110.111572                  0.0  10.090332           1.0       0.0
9       -169921.881592    101087.964844       100.999512      -170011.334229         79.362305                 78.362793         91.908447        110.111572                  0.0  10.090332           1.0       0.0
10      -169820.882080    101088.964355       100.999512      -169911.334229         80.361816                 79.362305         91.908447        110.111572                  0.0  10.090332           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=10, 
, large_loss_count=0, loss_amount=18423/2048, beliefs_remain_consistent=True, beliefs_improve=False, alpha=37237/4096, buf_size=20665/2048, start_state=[0].[0m
[02/06 13:14:42]  --------------------------------------------------------------------------------
[02/06 13:14:42]  Iteration: 6 (0 solution, 5 counterexamples)
[02/06 13:23:03]  Generator returned sat in 500.488876 secs.
[02/06 13:23:03]  Candidate solution: 
[1m[94mif (+ 2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 13:25:20]  Improved number of small numbers from 95 to 95 out of a max of 161
[02/06 13:25:20]  Verifer returned sat in 136.466959 secs.
[02/06 13:25:20]  Counter example: 
[93m    ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0       -110742.448089         0.999512         0.999512      -110806.117305               0.0                       0.0          45.66824             100.0                  0.0  63.669217          -1.0       0.0
1       -110714.780825     27730.932671        27.667263      -110714.780825               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
2       -110687.113562     27667.263455        27.667263      -110687.113562               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
3       -110659.446298     27667.263455        27.667263      -110659.446298               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
4       -110631.779035     27667.263455        27.667263      -110631.779035               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
5       -110604.111771     27667.263455        27.667263      -110604.111771               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
6       -110576.444508     27667.263455        27.667263      -110576.444508               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
7       -110548.777244     27667.263455        27.667263      -110548.777244               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
8       -110521.109981     27667.263455        27.667263      -110521.109981               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
9       -110493.442717     27667.263455        27.667263      -110493.442717               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
10      -110465.775454     27667.263455        27.667263      -110465.775454               0.0                       0.0          45.66824             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=18433/1024, buf_size=202753/2048, start_state=[0].[0m
[02/06 13:25:20]  --------------------------------------------------------------------------------
[02/06 13:25:20]  Iteration: 7 (0 solution, 6 counterexamples)
[02/06 14:47:35]  Solver threw error after 4934.733801 secs on attempt 1.
[02/06 14:47:35]  b'max. memory exceeded'
[02/06 14:47:35]  Recreating and restarting solver
[02/06 16:40:21]  Solver returned in 11700.067764 secs.
[02/06 16:40:21]  Generator returned sat in 11700.068141 secs.
[02/06 16:40:21]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:42:00]  Improved number of small numbers from 95 to 96 out of a max of 161
[02/06 16:42:00]  Verifer returned sat in 98.906215 secs.
[02/06 16:42:00]  Counter example: 
[93m    ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0        -1.253259e+06         0.999512         0.999268       -1.253259e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0          -1.0       0.0
1        -1.253233e+06     25166.585286        25.166585       -1.253233e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
2        -1.253208e+06     25166.585286        25.166585       -1.253208e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
3        -1.253183e+06     25166.585286        25.166585       -1.253183e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
4        -1.253158e+06     25166.585286        25.166585       -1.253158e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
5        -1.253133e+06     25166.585286        25.166585       -1.253133e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
6        -1.253108e+06     25166.585286        25.166585       -1.253108e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
7        -1.253082e+06     25166.585286        25.166585       -1.253082e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
8        -1.253057e+06     25166.585286        25.166585       -1.253057e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
9        -1.253032e+06     25166.585286        25.166585       -1.253032e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
10       -1.253007e+06     25166.585286        25.166585       -1.253007e+06               0.0                       0.0         50.333171             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=327/1024, buf_size=202753/2048, start_state=[0].[0m
[02/06 16:42:00]  --------------------------------------------------------------------------------
[02/06 16:42:00]  Iteration: 8 (0 solution, 7 counterexamples)
[02/06 19:57:37]  Solver threw error after 11736.430841 secs on attempt 1.
[02/06 19:57:37]  b'max. memory exceeded'
[02/06 19:57:37]  Recreating and restarting solver
[02/06 22:12:53]  Solver returned in 19852.263784 secs.
[02/06 22:12:53]  Generator returned unknown in 19852.264233 secs.
[02/06 22:12:53]  [96mNo more solutions found[0m
[02/06 22:12:53]  Final solutions:
[02/06 22:12:53]  Took 34877.496917 secs.
