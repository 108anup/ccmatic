[02/06 12:31:37]  Namespace(infinite_buffer=False, finite_buffer=False, dynamic_buffer=True, T=11, ideal=False, app_limited=False, fix_minc=False, fix_maxc=False, optimize=False, proofs=False, solution=None, opt_cegis_n=False, opt_ve_n=True, opt_pdt_n=True, opt_wce_n=True, opt_feasible_n=True)
[02/06 12:31:37]  Using cond_vars: ['min_c', 'max_c', 'min_qdel']
[02/06 12:31:38]  Adver: desired_util_f=0.4, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=5.0, desired_large_loss_count_bound=5.0, desired_loss_amount_bound_multiplier=4.0, desired_loss_amount_bound_alpha=4.0
[02/06 12:31:38]  Run log at: logs/optimizations/fname=main_cca_belief_template.py-infinite_buffer=False-finite_buffer=False-dynamic_buffer=True-opt_cegis=True-opt_ve=False-opt_pdt=False-opt_wce=False-opt_feasible=False-opt_ideal=False.csv
[02/06 12:31:38]  --------------------------------------------------------------------------------
[02/06 12:31:38]  Iteration: 1 (0 solution, 0 counterexamples)
[02/06 12:31:38]  Generator returned sat in 0.005051 secs.
[02/06 12:31:38]  Candidate solution: 
[1m[94mif (+ 2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 12:32:38]  Verifer returned sat in 60.287508 secs.
[02/06 12:32:38]  sf_get_cex returned in 60.419453 secs.
[02/06 12:32:38]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       72074.000042       1.000000            1.0      71574.000042    5.276754e-09            0.000000e+00           100.0           100.0                7.0            0.0    500.0          -1.0           400.0          100.0  71674.000042       8.0
1       72274.000042  200499.999997          200.0      71674.000042    5.276754e-09            5.276754e-09           100.0           100.0                7.0            0.0    600.0           1.0           500.0          100.0  71774.000042       8.0
2       72474.000042  200599.999997          200.0      71774.000042    5.276754e-09            5.276754e-09           100.0           100.0                8.0            0.0    700.0           1.0           600.0          100.0  71874.000042       9.0
3       72674.000042  200699.999997          200.0      71874.000042    5.276754e-09            5.276754e-09           100.0           100.0                8.0            0.0    800.0           1.0           700.0          100.0  71974.000042       9.0
4       72874.000042  200799.999997          200.0      71974.000042    6.595942e-09            5.276754e-09           100.0           100.0                6.0            0.0    900.0           1.0           800.0          100.0  72074.000042       7.0
5       73074.000042  200899.999997          200.0      72074.000042    1.000000e+02            6.595942e-09           100.0           100.0                5.0            0.0    900.0           1.0           800.0          100.0  72174.000042       6.0
6       73274.000042  200999.999997          200.0      72274.000042    2.000000e+02            1.000000e+02           100.0           100.0                4.0            0.0    800.0           1.0           800.0            0.0  72274.000042       5.0
7       73474.000042  200999.999997          200.0      72274.000042    3.000000e+02            2.000000e+02           100.0           100.0                4.0            0.0    900.0           1.0           800.0          100.0  72374.000042       5.0
8       73674.000042  201199.999997          200.0      72374.000042    4.000000e+02            3.000000e+02           100.0           100.0                5.0            0.0    900.0           1.0           800.0          100.0  72474.000042       6.0
9       73874.000042  201299.999997          200.0      72474.000042    5.000000e+02            4.000000e+02           100.0           100.0                6.0            0.0    900.0           1.0           800.0          100.0  72574.000042       7.0
10      74074.000042  201399.999997          200.0      72574.000042    6.000000e+02            5.000000e+02           100.0           100.0                6.0            0.0    900.0           1.0           800.0          100.0  72674.000042       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=6, loss_amount=2274125414345/3790209024, beliefs_remain_consistent=True, beliefs_improve=False, alpha=5/3790209024, buf_size=800, start_state=[0].[0m
[02/06 12:32:38]  --------------------------------------------------------------------------------
[02/06 12:32:38]  Iteration: 2 (0 solution, 1 counterexamples)
[02/06 12:32:38]  Generator returned sat in 0.009996 secs.
[02/06 12:32:38]  Candidate solution: 
[1m[94mif (+ -2min_c + -2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -1min_c + -2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 12:34:08]  Verifer returned sat in 89.236058 secs.
[02/06 12:34:08]  sf_get_cex returned in 89.355587 secs.
[02/06 12:34:08]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       71561.730747       1.000000        1.00000      71531.610112             0.0                     0.0       35.087302           100.0                1.0       0.000000  30.120635          -1.0       30.120635       0.000000  71531.610112       2.0
1       71597.113287   35412.660317       35.38254      71561.730747             0.0                     0.0       35.087302           100.0                1.0       0.000000  35.382540           1.0      -34.496825      69.879365  71631.610112       2.0
2       71632.495826   35417.922222       35.38254      71631.610112             0.0                     0.0       35.087302           100.0                0.0      99.114286   0.885714           0.0        0.000000       0.885714  71632.495826       0.0
3       71667.878366   35383.425397       35.38254      71632.569636             0.0                     0.0       35.087302           100.0                0.0     129.825397  35.308730           0.0      -33.906349      69.215079  71701.784715       0.0
4       71703.260906   35417.848413       35.38254      71701.784715             0.0                     0.0       35.087302           100.0                0.0     227.758730   1.476190           0.0       -0.590476       2.066667  71703.851382       0.0
5       71738.643445   35384.015873       35.38254      71703.851382             0.0                     0.0       35.087302           100.0                0.0     292.966667  34.792063           0.0        0.000000      34.792063  71738.643445       0.0
6       71774.025985   35417.331746       35.38254      71771.811699             0.0                     0.0       35.087302           100.0                0.0     357.584127   2.214286           0.0        0.000000       2.214286  71774.025985       0.0
7       71809.408525   35384.753968       35.38254      71806.825191             0.0                     0.0       35.087302           100.0                0.0     422.201587   2.583333           0.0        0.000000       2.583333  71809.408525       0.0
8       71844.791064   35385.123016       35.38254      71809.999001             0.0                     0.0       35.087302           100.0                0.0     486.819048  34.792063           0.0        0.000000      34.792063  71844.791064       0.0
9       71880.173604   35417.331746       35.38254      71845.381541             0.0                     0.0       35.087302           100.0                0.0     551.436508  34.792063           0.0        0.000000      34.792063  71880.173604       0.0
10      71915.556144   35417.331746       35.38254      71880.321223             0.0                     0.0       35.087302           100.0                0.0     581.557143  35.234921           0.0      -34.496825      69.731746  71950.052969       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=31/105, buf_size=100, start_state=[0].[0m
[02/06 12:34:08]  --------------------------------------------------------------------------------
[02/06 12:34:08]  Iteration: 3 (0 solution, 2 counterexamples)
[02/06 12:34:08]  Generator returned sat in 0.006451 secs.
[02/06 12:34:08]  Candidate solution: 
[1m[94mif (+ -2min_c + -2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 3/2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/06 12:35:19]  Verifer returned sat in 71.136817 secs.
[02/06 12:35:19]  sf_get_cex returned in 71.265256 secs.
[02/06 12:35:19]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      182754.031368       1.000000       1.000000     182754.031368             0.0                     0.0       66.777778           100.0                0.0       0.000000   0.000000          -1.0        0.000000       0.000000  182754.031368       1.0
1      182787.420257   33388.888889      33.388889     182787.420257             0.0                     0.0       66.777778           100.0                0.0      66.611111   0.000000           0.0        0.000000       0.000000  182787.420257       0.0
2      182820.809146   33388.888889      33.388889     182788.420257             0.0                     0.0       66.777778           100.0                0.0     133.222222  32.388889           0.0        0.000000      32.388889  182820.809146       0.0
3      182854.198035   33421.277778      33.388889     182821.809146             0.0                     0.0       66.777778           100.0                0.0     199.833333  32.388889           0.0        0.000000      32.388889  182854.198035       0.0
4      182887.586923   33421.277778      33.388889     182855.198035             0.0                     0.0       66.777778           100.0                0.0     266.444444  32.388889           0.0        0.000000      32.388889  182887.586923       0.0
5      182920.975812   33421.277778      33.388889     182888.586923             0.0                     0.0       66.777778           100.0                0.0     299.666667  32.388889           0.0      -33.388889      65.777778  182954.364701       0.0
6      182954.364701   33421.277778      33.388889     182954.364701             0.0                     0.0       66.777778           100.0                0.0     366.277778   0.000000           0.0      -33.388889      33.388889  182987.753590       0.0
7      182987.753590   33388.888889      33.388889     182987.753590             0.0                     0.0       66.777778           100.0                0.0     466.277778   0.000000           0.0        0.000000       0.000000  182987.753590       0.0
8      183021.142479   33388.888889      33.388889     183021.142479             0.0                     0.0       66.777778           100.0                0.0     531.888889   0.000000           0.0       -1.000000       1.000000  183022.142479       0.0
9      183054.531368   33388.888889      33.388889     183022.142479             0.0                     0.0       66.777778           100.0                0.0     566.111111  32.388889           0.0      -33.388889      65.777778  183087.920257       0.0
10     183087.920257   33421.277778      33.388889     183087.920257             0.0                     0.0       66.777778           100.0                0.0     566.111111   0.000000           0.0     -100.000000     100.000000  183187.920257       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/18, buf_size=99, start_state=[0].[0m
[02/06 12:35:19]  --------------------------------------------------------------------------------
[02/06 12:35:19]  Iteration: 4 (0 solution, 3 counterexamples)
[02/06 12:35:20]  Generator returned sat in 0.011745 secs.
[02/06 12:35:20]  Candidate solution: 
[1m[94mif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 12:36:33]  Verifer returned sat in 73.024172 secs.
[02/06 12:36:33]  sf_get_cex returned in 73.142182 secs.
[02/06 12:36:33]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t   queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      183485.236588       1.000000        1.00000     183485.236588             0.0                     0.0         0.05535           100.0                1.0       0.000000  0.000000          -1.0       -0.035582       0.035582  183485.272170       2.0
1      183485.291938      55.350317        0.05535     183485.272170             0.0                     0.0         0.05535           100.0                0.0      99.980232  0.019768           0.0        0.000000       0.019768  183485.291938       0.0
2      183485.347289      55.370085        0.05535     183485.347289             0.0                     0.0         0.05535           100.0                0.0     199.869531  0.000000           0.0       -0.055350       0.055350  183485.402639       0.0
3      183485.402639      55.350317        0.05535     183485.402639             0.0                     0.0         0.05535           100.0                0.0     299.818135  0.000000           0.0       -0.051397       0.051397  183485.454036       0.0
4      183485.457989      55.350317        0.05535     183485.454036             0.0                     0.0         0.05535           100.0                0.0     399.798367  0.003954           0.0       -0.015814       0.019768  183485.473804       0.0
5      183485.513340      55.354270        0.05535     183485.473804             0.0                     0.0         0.05535           100.0                0.0     499.758831  0.039536           0.0        0.000000       0.039536  183485.513340       0.0
6      183485.568690      55.389853        0.05535     183485.513340             0.0                     0.0         0.05535           100.0                0.0     599.703480  0.055350           0.0        0.000000       0.055350  183485.568690       1.0
7      183485.624040      55.405667        0.05535     183485.568690             0.0                     0.0         0.05535           100.0                0.0     699.592780  0.055350           0.0       -0.055350       0.110701  183485.679391       1.0
8      183485.679391      55.405667        0.05535     183485.679391             0.0                     0.0         0.05535           100.0                0.0     799.592780  0.000000           0.0        0.000000       0.000000  183485.679391       0.0
9      183485.734741      55.350317        0.05535     183485.679391             0.0                     0.0         0.05535           100.0                0.0     899.501847  0.055350           0.0       -0.035582       0.090933  183485.770323       0.0
10     183485.790091      55.405667        0.05535     183485.770323             0.0                     0.0         0.05535           100.0                0.0     899.501847  0.019768           0.0      -99.980232     100.000000  183585.770323       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=188811/3411200, buf_size=100, start_state=[0].[0m
[02/06 12:36:33]  --------------------------------------------------------------------------------
[02/06 12:36:33]  Iteration: 5 (0 solution, 4 counterexamples)
[02/06 12:36:33]  Generator returned sat in 0.017293 secs.
[02/06 12:36:33]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 12:40:30]  Verifer returned sat in 236.373317 secs.
[02/06 12:40:30]  sf_get_cex returned in 236.485966 secs.
[02/06 12:40:30]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       81247.721609       1.000000       1.000000      81247.721494        0.000033                0.000000       99.999996      100.000025                0.0            0.0   0.000082          -1.0        0.000012       0.000070  81247.721564       0.0
1       81347.721613  100000.004226     100.000004      81347.721518        0.000037                0.000033       99.999996      100.000025                0.0            0.0   0.000058           1.0        0.000012       0.000045  81347.721564       0.0
2       81447.721617  100000.004205     100.000004      81447.721543        0.000041                0.000037       99.999996      100.000025                0.0            0.0   0.000033           1.0        0.000012       0.000021  81447.721564       0.0
3       81547.721621  100000.004185     100.000004      81547.721564        0.000045                0.000041       99.999996      100.000025                0.0            0.0   0.000012           1.0        0.000012       0.000000  81547.721564       0.0
4       81647.721625  100000.004168     100.000004      81547.721580        0.000049                0.000045       99.999996      100.000025                0.0            0.0  99.999996           1.0        0.000012      99.999984  81647.721564       0.0
5       81747.721629  100100.004156     100.000004      81647.721592        0.000053                0.000049       99.999996      100.000025                0.0            0.0  99.999984           1.0        0.000012      99.999971  81747.721564       0.0
6       81847.721633  100100.004148     100.000004      81847.721555        0.000058                0.000053       99.999996      100.000025                0.0            0.0   0.000021           1.0        0.000012       0.000008  81847.721564       0.0
7       81947.721638  100000.004189     100.000004      81947.721564        0.000062                0.000058       99.999996      100.000025                0.0            0.0   0.000012           1.0        0.000012       0.000000  81947.721564       0.0
8       82047.721642  100000.004185     100.000004      81947.721781        0.000066                0.000062       99.999996      100.000025                0.0            0.0  99.999794           1.0        0.000012      99.999782  82047.721564       0.0
9       82147.721646  100100.003971     100.000004      82047.721823        0.000070                0.000066       99.999996      100.000025                0.0            0.0  99.999753           1.0        0.000012      99.999741  82147.721564       0.0
10      82247.721650  100100.003934     100.000004      82147.721864        0.000074                0.000070       99.999996      100.000025                0.0            0.0  99.999712           1.0        0.000012      99.999700  82247.721564       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=10, 
, large_loss_count=0, loss_amount=1615383/43663360000, beliefs_remain_consistent=True, beliefs_improve=False, alpha=179487/21831680000, buf_size=538461/43663360000, start_state=[0].[0m
[02/06 12:40:30]  --------------------------------------------------------------------------------
[02/06 12:40:30]  Iteration: 6 (0 solution, 5 counterexamples)
[02/06 12:40:30]  Generator returned sat in 0.013304 secs.
[02/06 12:40:30]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 12:45:31]  Verifer returned sat in 300.301431 secs.
[02/06 12:45:31]  sf_get_cex returned in 300.436697 secs.
[02/06 12:45:31]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      475321.852964       1.000000       1.000000     475232.352964        1.000000                0.000000            88.5           100.0                0.0            0.0     88.5          -1.0            50.0           38.5  475270.852964       1.0
1      475423.897408  102133.944444     102.044444     475320.852964        3.044444                1.000000            88.5           100.0                0.0            0.0    100.0           1.0            50.0           50.0  475370.852964       1.0
2      475525.941853  102147.488889     102.044444     475470.852964        5.088889                3.044444            88.5           100.0                0.0            0.0     50.0           1.0            50.0            0.0  475470.852964       0.0
3      475627.986297  102099.533333     102.044444     475497.852964        7.133333                5.088889            88.5           100.0                0.0            0.0    123.0           1.0            50.0           73.0  475570.852964       1.0
4      475730.030742  102174.577778     102.044444     475670.852964        9.177778                7.133333            88.5           100.0                0.0            0.0     50.0           1.0            50.0            0.0  475670.852964       0.0
5      475832.075186  102103.622222     102.044444     475763.352964       11.222222                9.177778            88.5           100.0                0.0            0.0     57.5           1.0            50.0            7.5  475770.852964       0.0
6      475934.119630  102113.166667     102.044444     475820.852964       13.266667               11.222222            88.5           100.0                0.0            0.0    100.0           1.0            50.0           50.0  475870.852964       1.0
7      476036.164075  102157.711111     102.044444     475870.852964       15.311111               13.266667            88.5           100.0                0.0            0.0    150.0           1.0            50.0          100.0  475970.852964       1.0
8      476138.208519  102209.755556     102.044444     476021.652964       17.355556               15.311111            88.5           100.0                0.0            0.0     99.2           1.0            50.0           49.2  476070.852964       0.0
9      476240.252964  102161.000000     102.044444     476070.852964       19.400000               17.355556            88.5           100.0                0.0            0.0    150.0           1.0            50.0          100.0  476170.852964       1.0
10     476342.297408  102213.844444     102.044444     476205.852964       21.444444               19.400000            88.5           100.0                0.0            0.0    115.0           1.0            50.0           65.0  476270.852964       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=10, 
, large_loss_count=0, loss_amount=92/5, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1219/90, buf_size=50, start_state=[0].[0m
[02/06 12:45:31]  --------------------------------------------------------------------------------
[02/06 12:45:31]  Iteration: 7 (0 solution, 6 counterexamples)
[02/06 12:45:31]  Generator returned sat in 0.007185 secs.
[02/06 12:45:31]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 12:45:32]  Verifer returned sat in 0.536898 secs.
[02/06 12:45:32]  sf_get_cex returned in 0.649164 secs.
[02/06 12:45:32]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      475733.794659       1.000000       1.000000     475645.174504        0.900000                0.000000       87.720156        106.0109                0.0            0.0   87.720156          -1.0       44.331142      43.389014  475688.563517       1.0
1      475838.078915  104372.876211     104.284256     475732.894659        5.184256                0.900000       87.720156        106.0109                0.0            0.0  100.000000           1.0       44.331142      55.668858  475788.563517       1.0
2      475942.363171  104389.440311     104.284256     475864.519919        9.468512                5.184256       87.720156        106.0109                0.0            0.0   68.374740           1.0       44.331142      24.043599  475888.563517       0.0
3      476046.647427  104362.099308     104.284256     475908.334971       13.752768                9.468512       87.720156        106.0109                0.0            0.0  124.559689           1.0       44.331142      80.228547  475988.563517       1.0
4      476150.931683  104422.568512     104.284256     476076.541718       18.037024               13.752768       87.720156        106.0109                0.0            0.0   56.352941           1.0       44.331142      12.021799  476088.563517       0.0
5      476255.215940  104358.646021     104.284256     476171.495438       22.321280               18.037024       87.720156        106.0109                0.0            0.0   61.399221           1.0       44.331142      17.068080  476188.563517       0.0
6      476359.500196  104367.976557     104.284256     476232.894659       26.605536               22.321280       87.720156        106.0109                0.0            0.0  100.000000           1.0       44.331142      55.668858  476288.563517       1.0
7      476463.784452  104410.861592     104.284256     476288.563517       30.889792               26.605536       87.720156        106.0109                0.0            0.0  144.331142           1.0       44.331142     100.000000  476388.563517       1.0
8      476568.068708  104459.476990     104.284256     476433.394659       35.174048               30.889792       87.720156        106.0109                0.0            0.0   99.500000           1.0       44.331142      55.168858  476488.563517       0.0
9      476672.352964  104418.930104     104.284256     476500.585317       39.458304               35.174048       87.720156        106.0109                0.0            0.0  132.309343           1.0       44.331142      87.978201  476588.563517       1.0
10     476776.637220  104456.023702     104.284256     476610.096216       43.742561               39.458304       87.720156        106.0109                0.0            0.0  122.798443           1.0       44.331142      78.467301  476688.563517       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=10, 
, large_loss_count=0, loss_amount=222867/5780, beliefs_remain_consistent=True, beliefs_improve=False, alpha=191481/11560, buf_size=128117/2890, start_state=[0].[0m
[02/06 12:45:32]  --------------------------------------------------------------------------------
[02/06 12:45:32]  Iteration: 8 (0 solution, 7 counterexamples)
[02/06 12:45:33]  Generator returned sat in 0.011627 secs.
[02/06 12:45:33]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 12:48:04]  Verifer returned sat in 151.698625 secs.
[02/06 12:48:04]  sf_get_cex returned in 151.832061 secs.
[02/06 12:48:05]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0      -37574.363722   1.000000e+00       1.000000     -1.109286e+06     1071697.064             1071697.064       14.286786           100.0                7.0       0.000000  14.245536          -1.0        0.000000      14.245536 -1.109271e+06       8.0
1      -37560.076937   1.085998e+06      14.286786     -1.109271e+06     1071697.064             1071697.064       14.286786           100.0                7.0      85.713214  14.286786           1.0        0.000000      14.286786 -1.109257e+06       8.0
2      -37545.790151   1.085998e+06      14.286786     -1.109243e+06     1071697.064             1071697.064       14.286786           100.0                0.0     171.426429   0.007500           0.0        0.000000       0.007500 -1.109243e+06       0.0
3      -37531.503365   1.085984e+06      14.286786     -1.109243e+06     1071697.064             1071697.064       14.286786           100.0                0.0     257.139643  14.256786           0.0        0.000000      14.256786 -1.109229e+06       0.0
4      -37517.216580   1.085998e+06      14.286786     -1.109229e+06     1071697.064             1071697.064       14.286786           100.0                0.0     342.852857  14.260536           0.0        0.000000      14.260536 -1.109214e+06       0.0
5      -37502.929794   1.085998e+06      14.286786     -1.109214e+06     1071697.064             1071697.064       14.286786           100.0                0.0     428.566071  14.264286           0.0        0.000000      14.264286 -1.109200e+06       0.0
6      -37488.643008   1.085998e+06      14.286786     -1.109200e+06     1071697.064             1071697.064       14.286786           100.0                0.0     514.279286  14.268036           0.0        0.000000      14.268036 -1.109186e+06       0.0
7      -37474.356222   1.085998e+06      14.286786     -1.109186e+06     1071697.064             1071697.064       14.286786           100.0                0.0     599.992500  14.271786           0.0        0.000000      14.271786 -1.109171e+06       0.0
8      -37460.069437   1.085998e+06      14.286786     -1.109157e+06     1071697.064             1071697.064       14.286786           100.0                0.0     685.705714   0.000000           0.0        0.000000       0.000000 -1.109157e+06       0.0
9      -37445.782651   1.085984e+06      14.286786     -1.109157e+06     1071697.064             1071697.064       14.286786           100.0                0.0     771.418929  14.286786           0.0        0.000000      14.286786 -1.109143e+06       0.0
10     -37431.495865   1.085998e+06      14.286786     -1.109129e+06     1071697.064             1071697.064       14.286786           100.0                0.0     771.418929   0.000000           0.0      -85.713214      85.713214 -1.109043e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=40003/2800, buf_size=1000, start_state=[0].[0m
[02/06 12:48:05]  --------------------------------------------------------------------------------
[02/06 12:48:05]  Iteration: 9 (0 solution, 8 counterexamples)
[02/06 12:48:05]  Generator returned sat in 0.008662 secs.
[02/06 12:48:05]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 12:48:55]  Verifer returned sat in 49.565872 secs.
[02/06 12:48:55]  sf_get_cex returned in 49.682667 secs.
[02/06 12:48:55]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      948075.420813       1.000000       1.000000     948074.420813             1.0                     0.0       50.814815           100.0                0.0   -1294.397857   0.000000          -1.0       -0.333333       0.333333  948074.754146       1.0
1      948114.180072   38760.259259      38.759259     948074.754146             1.0                     1.0       50.814815           100.0                0.0   -1232.823783  38.425926           1.0        0.000000      38.425926  948113.180072       0.0
2      948152.939332   38798.685185      38.759259     948113.180072             1.0                     1.0       50.814815           100.0                0.0   -1171.583042  38.759259           0.0        0.000000      38.759259  948151.939332       1.0
3      948191.698591   38799.018519      38.759259     948152.939332             1.0                     1.0       50.814815           100.0                0.0   -1110.342302  37.759259           0.0        0.000000      37.759259  948190.698591       0.0
4      948230.457850   38798.018519      38.759259     948191.698591             1.0                     1.0       50.814815           100.0                0.0   -1049.101561  37.759259           0.0        0.000000      37.759259  948229.457850       0.0
5      948269.217109   38798.018519      38.759259     948230.457850             1.0                     1.0       50.814815           100.0                0.0    -987.860820  37.759259           0.0        0.000000      37.759259  948268.217109       0.0
6      948307.976369   38798.018519      38.759259     948269.217109             1.0                     1.0       50.814815           100.0                0.0    -964.379339  37.759259           0.0      -37.759259      75.518519  948344.735628       0.0
7      948346.735628   38798.018519      38.759259     948344.735628             1.0                     1.0       50.814815           100.0                0.0    -865.379339   1.000000           0.0        0.000000       1.000000  948345.735628       0.0
8      948385.494887   38761.259259      38.759259     948345.735628             1.0                     1.0       50.814815           100.0                0.0    -804.138598  38.759259           0.0        0.000000      38.759259  948384.494887       1.0
9      948424.254146   38799.018519      38.759259     948384.494887             1.0                     1.0       50.814815           100.0                0.0    -742.897857  38.759259           0.0        0.000000      38.759259  948423.254146       1.0
10     948463.013406   38799.018519      38.759259     948434.087480             1.0                     1.0       50.814815           100.0                0.0    -742.897857  27.925926           0.0      -61.240741      89.166667  948523.254146       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=217/18, buf_size=223/18, start_state=[0].[0m
[02/06 12:48:55]  --------------------------------------------------------------------------------
[02/06 12:48:55]  Iteration: 10 (0 solution, 9 counterexamples)
[02/06 12:48:56]  Generator returned sat in 0.008604 secs.
[02/06 12:48:56]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 12:48:56]  Verifer returned sat in 0.286706 secs.
[02/06 12:48:56]  sf_get_cex returned in 0.381891 secs.
[02/06 12:48:56]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      912942.935363       1.000000       1.000000     912942.935363             0.0                     0.0       55.030423           100.0                0.0   -1362.502354   0.000000          -1.0      -35.015212      35.015212  912977.950575       1.0
1      912977.980998   35045.634921      35.045635     912977.950575             0.0                     0.0       55.030423           100.0                0.0   -1262.532778   0.030423           0.0        0.000000       0.030423  912977.980998       0.0
2      913013.026633   35045.665344      35.045635     912977.980998             0.0                     0.0       55.030423           100.0                0.0   -1197.578413  35.045635           0.0        0.000000      35.045635  913013.026633       1.0
3      913048.072268   35080.680556      35.045635     913048.072268             0.0                     0.0       55.030423           100.0                0.0   -1132.624048   0.000000           0.0        0.000000       0.000000  913048.072268       0.0
4      913083.117903   35045.634921      35.045635     913048.102691             0.0                     0.0       55.030423           100.0                0.0   -1067.669683  35.015212           0.0        0.000000      35.015212  913083.117903       0.0
5      913118.163538   35080.650132      35.045635     913083.148326             0.0                     0.0       55.030423           100.0                0.0   -1002.715317  35.015212           0.0        0.000000      35.015212  913118.163538       0.0
6      913153.209173   35080.650132      35.045635     913153.209173             0.0                     0.0       55.030423           100.0                0.0    -937.760952   0.000000           0.0        0.000000       0.000000  913153.209173       0.0
7      913188.254808   35045.634921      35.045635     913153.239596             0.0                     0.0       55.030423           100.0                0.0    -872.806587  35.015212           0.0        0.000000      35.015212  913188.254808       0.0
8      913223.300443   35080.650132      35.045635     913188.254808             0.0                     0.0       55.030423           100.0                0.0    -807.852222  35.045635           0.0        0.000000      35.045635  913223.300443       1.0
9      913258.346078   35080.680556      35.045635     913223.300443             0.0                     0.0       55.030423           100.0                0.0    -742.897857  35.045635           0.0        0.000000      35.045635  913258.346078       1.0
10     913293.391713   35080.680556      35.045635     913293.391713             0.0                     0.0       55.030423           100.0                0.0    -742.897857   0.000000           0.0      -64.954365      64.954365  913358.346078       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=30217/1512, buf_size=10103/504, start_state=[0].[0m
[02/06 12:48:56]  --------------------------------------------------------------------------------
[02/06 12:48:56]  Iteration: 11 (0 solution, 10 counterexamples)
[02/06 12:48:57]  Generator returned sat in 0.016504 secs.
[02/06 12:48:57]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 13:15:18]  Verifer returned sat in 1580.106288 secs.
[02/06 13:15:18]  sf_get_cex returned in 1580.240309 secs.
[02/06 13:15:18]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      640725.634445            1.0            1.0     640644.634445             1.0                     0.0            40.0           100.0                0.0   -1382.897857     80.0          -1.0    8.000000e+01   0.000000e+00  640644.634445       0.0
1      640745.634445        20081.0           20.0     640724.634445             1.0                     1.0            40.0           100.0                0.0   -1382.897857     20.0           1.0    0.000000e+00   2.000000e+01  640744.634445       0.0
2      640765.634445        20021.0           20.0     640744.634445             1.0                     1.0            40.0           100.0                0.0   -1302.897857     20.0           0.0    0.000000e+00   2.000000e+01  640764.634445       1.0
3      640785.634445        20021.0           20.0     640784.634445             1.0                     1.0            40.0           100.0                0.0   -1222.897857      0.0           0.0    0.000000e+00   0.000000e+00  640784.634445       0.0
4      640805.634445        20001.0           20.0     640804.634445             1.0                     1.0            40.0           100.0                0.0   -1142.897857      0.0           0.0   -2.642819e-11   2.642819e-11  640804.634445       0.0
5      640825.634445        20001.0           20.0     640804.634445             1.0                     1.0            40.0           100.0                0.0   -1062.897857     20.0           0.0   -2.642819e-11   2.000000e+01  640824.634445       0.0
6      640845.634445        20021.0           20.0     640824.634445             1.0                     1.0            40.0           100.0                0.0    -982.897857     20.0           0.0    0.000000e+00   2.000000e+01  640844.634445       0.0
7      640865.634445        20021.0           20.0     640844.634445             1.0                     1.0            40.0           100.0                0.0    -902.897857     20.0           0.0    0.000000e+00   2.000000e+01  640864.634445       1.0
8      640885.634445        20021.0           20.0     640864.634445             1.0                     1.0            40.0           100.0                0.0    -822.897857     20.0           0.0    0.000000e+00   2.000000e+01  640884.634445       0.0
9      640905.634445        20021.0           20.0     640884.634445             1.0                     1.0            40.0           100.0                0.0    -742.897857     20.0           0.0    0.000000e+00   2.000000e+01  640904.634445       0.0
10     640925.634445        20021.0           20.0     640924.634445             1.0                     1.0            40.0           100.0                0.0    -662.897857      0.0           0.0    0.000000e+00   0.000000e+00  640924.634445       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/37838389248, buf_size=5045118566399/63063982080, start_state=[0].[0m
[02/06 13:15:18]  --------------------------------------------------------------------------------
[02/06 13:15:18]  Iteration: 12 (0 solution, 11 counterexamples)
[02/06 13:15:19]  Generator returned sat in 0.021601 secs.
[02/06 13:15:19]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 13:45:01]  Verifer returned sat in 1782.214159 secs.
[02/06 13:45:01]  sf_get_cex returned in 1782.365029 secs.
[02/06 13:45:01]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      384053.006197       1.000000       1.000000     383997.339530             1.0                     0.0       35.333333           100.0                0.0   -1283.397857  54.666667          -1.0       54.666667       0.000000  383997.339530       1.0
1      384088.839530   35889.000000      35.833333     384030.672863             1.0                     1.0       35.333333           100.0                1.0   -1283.397857  57.166667           1.0       -9.500000      66.666667  384097.339530       2.0
2      384106.506197   17724.833333      17.666667     384100.339530             1.0                     1.0       35.333333           100.0                0.0   -1191.564524   5.166667           0.0        0.000000       5.166667  384105.506197       0.0
3      384142.339530   35839.500000      35.833333     384136.672863             1.0                     1.0       35.333333           100.0                0.0   -1127.397857   4.666667           0.0        0.000000       4.666667  384141.339530       0.0
4      384178.172863   35839.000000      35.833333     384170.006197             1.0                     1.0       35.333333           100.0                0.0   -1063.231190   7.166667           0.0        0.000000       7.166667  384177.172863       0.0
5      384214.006197   35841.500000      35.833333     384177.172863             1.0                     1.0       35.333333           100.0                0.0   -1025.731190  35.833333           0.0      -26.666667      62.500000  384239.672863       1.0
6      384249.839530   35870.166667      35.833333     384239.672863             1.0                     1.0       35.333333           100.0                0.0    -960.564524   9.166667           0.0      -25.666667      34.833333  384274.506197       0.0
7      384285.672863   35843.500000      35.833333     384274.506197             1.0                     1.0       35.333333           100.0                0.0    -895.397857  10.166667           0.0      -24.666667      34.833333  384309.339530       0.0
8      384321.506197   35844.500000      35.833333     384309.339530             1.0                     1.0       35.333333           100.0                0.0    -830.231190  11.166667           0.0      -23.666667      34.833333  384344.172863       0.0
9      384357.339530   35845.500000      35.833333     384344.172863             1.0                     1.0       35.333333           100.0                0.0    -742.897857  12.166667           0.0       -0.500000      12.666667  384356.839530       0.0
10     384393.172863   35846.500000      35.833333     384356.839530             1.0                     1.0       35.333333           100.0                0.0    -687.731190  35.333333           0.0       -9.500000      44.833333  384401.672863       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/2, buf_size=100, start_state=[0].[0m
[02/06 13:45:01]  --------------------------------------------------------------------------------
[02/06 13:45:01]  Iteration: 13 (0 solution, 12 counterexamples)
[02/06 13:45:02]  Generator returned sat in 0.012987 secs.
[02/06 13:45:02]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 13:46:35]  Verifer returned sat in 93.116738 secs.
[02/06 13:46:36]  sf_get_cex returned in 93.248390 secs.
[02/06 13:46:36]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t   queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      418464.783974       1.000000       1.000000     418464.783974             0.0                     0.0        1.555556           100.0                0.0   -1628.897857  0.000000          -1.0        0.000000       0.000000  418464.783974       1.0
1      418466.339530    1555.555556       1.555556     418464.783974             0.0                     0.0        1.555556           100.0                0.0   -1530.453413  1.555556           0.0        0.000000       1.555556  418466.339530       1.0
2      418467.895085    1557.111111       1.555556     418467.672863             0.0                     0.0        1.555556           100.0                0.0   -1432.008968  0.222222           0.0        0.000000       0.222222  418467.895085       0.0
3      418469.450641    1555.777778       1.555556     418467.895085             0.0                     0.0        1.555556           100.0                0.0   -1333.675635  1.555556           0.0       -0.111111       1.666667  418469.561752       1.0
4      418471.006197    1557.111111       1.555556     418469.561752             0.0                     0.0        1.555556           100.0                0.0   -1236.120079  1.444444           0.0       -1.000000       2.444444  418472.006197       0.0
5      418472.561752    1557.000000       1.555556     418472.006197             0.0                     0.0        1.555556           100.0                0.0   -1137.564524  0.555556           0.0       -0.888889       1.444444  418473.450641       0.0
6      418474.117308    1556.111111       1.555556     418473.450641             0.0                     0.0        1.555556           100.0                0.0   -1039.008968  0.666667           0.0       -0.777778       1.444444  418474.895085       0.0
7      418475.672863    1556.222222       1.555556     418474.895085             0.0                     0.0        1.555556           100.0                0.0    -940.453413  0.777778           0.0       -0.666667       1.444444  418476.339530       0.0
8      418477.228419    1556.333333       1.555556     418476.339530             0.0                     0.0        1.555556           100.0                0.0    -841.342302  0.888889           0.0        0.000000       0.888889  418477.228419       0.0
9      418478.783974    1556.444444       1.555556     418477.783974             0.0                     0.0        1.555556           100.0                0.0    -742.897857  1.000000           0.0        0.000000       1.000000  418478.783974       0.0
10     418480.339530    1556.555556       1.555556     418479.228419             0.0                     0.0        1.555556           100.0                0.0    -742.897857  1.111111           0.0      -98.444444      99.555556  418578.783974       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=13/9, buf_size=14/9, start_state=[0].[0m
[02/06 13:46:36]  --------------------------------------------------------------------------------
[02/06 13:46:36]  Iteration: 14 (0 solution, 13 counterexamples)
[02/06 13:46:37]  Generator returned sat in 0.011555 secs.
[02/06 13:46:37]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 13:48:06]  Verifer returned sat in 89.548892 secs.
[02/06 13:48:06]  sf_get_cex returned in 89.673224 secs.
[02/06 13:48:06]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      418167.100641           1.00           1.00     418087.150641            0.00                    0.00          83.725           100.0                1.0   -1236.120079   79.950          -1.0           65.10         14.850  418102.000641       2.0
1      418334.550641      167529.95         167.45     418167.300641            0.00                    0.00          83.725           100.0                0.0   -1236.120079  167.250           0.0          132.55         34.700  418202.000641       0.0
2      418502.000641      167617.25         167.45     418253.600641            0.00                    0.00          83.725           100.0                0.0   -1236.120079  248.400           0.0          200.00         48.400  418302.000641       1.0
3      418669.450641      167698.40         167.45     418334.750641           66.95                    0.00          83.725           100.0                0.0   -1236.120079  267.750           0.0          200.50         67.250  418402.000641       1.0
4      418836.900641      167784.70         167.45     418502.000641          134.40                   66.95          83.725           100.0                1.0   -1236.120079  200.500           1.0          200.50          0.000  418502.000641       2.0
5      419004.350641      167784.90         167.45     418502.000641          201.85                  134.40          83.725           100.0                1.0   -1236.120079  300.500           1.0          200.50        100.000  418602.000641       2.0
6      419171.800641      167952.35         167.45     418602.700641          269.30                  201.85          83.725           100.0                1.0   -1236.120079  299.800           1.0          200.50         99.300  418702.000641       2.0
7      419339.250641      168019.10         167.45     418702.700641          336.75                  269.30          83.725           100.0                1.0   -1236.120079  299.800           1.0          200.50         99.300  418802.000641       2.0
8      419506.700641      168086.55         167.45     418803.000641          404.20                  336.75          83.725           100.0                1.0   -1236.120079  299.500           1.0          200.50         99.000  418902.000641       2.0
9      419674.150641      168153.70         167.45     418903.000641          471.65                  404.20          83.725           100.0                1.0   -1236.120079  299.500           1.0          200.50         99.000  419002.000641       2.0
10     419841.600641      168221.15         167.45     419002.625641          539.10                  471.65          83.725           100.0                1.0   -1236.120079  299.875           1.0          200.50         99.375  419102.000641       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=5391/10, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/5, buf_size=401/2, start_state=[0].[0m
[02/06 13:48:07]  --------------------------------------------------------------------------------
[02/06 13:48:07]  Iteration: 15 (0 solution, 14 counterexamples)
[02/06 13:48:08]  Generator returned sat in 0.009145 secs.
[02/06 13:48:08]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 13:49:14]  Verifer returned sat in 66.045743 secs.
[02/06 13:49:14]  sf_get_cex returned in 66.170841 secs.
[02/06 13:49:14]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       1.316946e+06            1.0            1.0      1.316861e+06             1.0                     0.0           100.0           100.0                1.0   -1236.120079     84.0          -1.0           -10.0           94.0  1.316955e+06       2.0
1       1.317048e+06       102085.0          102.0      1.316960e+06             1.0                     1.0           100.0           100.0                0.0   -1236.120079     87.0           1.0            -8.0           95.0  1.317055e+06       0.0
2       1.317248e+06       200088.0          200.0      1.317059e+06             1.0                     1.0           100.0           100.0                0.0   -1236.120079    188.0           0.0            92.0           96.0  1.317155e+06       0.0
3       1.317448e+06       200189.0          200.0      1.317247e+06             1.0                     1.0           100.0           100.0                0.0   -1236.120079    200.0           0.0           192.0            8.0  1.317255e+06       1.0
4       1.317648e+06       200201.0          200.0      1.317255e+06           100.0                     1.0           100.0           100.0                0.0   -1236.120079    293.0           0.0           193.0          100.0  1.317355e+06       1.0
5       1.317848e+06       200393.0          200.0      1.317455e+06           200.0                   100.0           100.0           100.0                0.0   -1236.120079    193.0           1.0           193.0            0.0  1.317455e+06       1.0
6       1.318048e+06       200393.0          200.0      1.317456e+06           300.0                   200.0           100.0           100.0                1.0   -1236.120079    292.0           1.0           193.0           99.0  1.317555e+06       2.0
7       1.318150e+06       102592.0          102.0      1.317651e+06           302.0                   300.0           100.0           100.0                0.0   -1236.120079    197.0           1.0           193.0            4.0  1.317655e+06       1.0
8       1.318350e+06       200499.0          200.0      1.317750e+06           402.0                   302.0           100.0           100.0                0.0   -1236.120079    198.0           1.0           193.0            5.0  1.317755e+06       1.0
9       1.318550e+06       200600.0          200.0      1.317849e+06           502.0                   402.0           100.0           100.0                0.0   -1236.120079    199.0           1.0           193.0            6.0  1.317855e+06       1.0
10      1.318750e+06       200701.0          200.0      1.317859e+06           602.0                   502.0           100.0           100.0                1.0   -1236.120079    289.0           1.0           193.0           96.0  1.317955e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=6, loss_amount=601, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2, buf_size=193, start_state=[0].[0m
[02/06 13:49:14]  --------------------------------------------------------------------------------
[02/06 13:49:14]  Iteration: 16 (0 solution, 15 counterexamples)
[02/06 13:49:15]  Generator returned sat in 0.010159 secs.
[02/06 13:49:15]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 13:53:41]  Verifer returned sat in 265.301033 secs.
[02/06 13:53:41]  sf_get_cex returned in 265.477597 secs.
[02/06 13:53:41]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       1.226643e+06       1.000000        1.00000      1.226621e+06        0.529101                0.000000       94.512195       101.95122                0.0   -1236.120079   22.078978          -1.0        0.487805      21.591173  1.226642e+06       0.0
1       1.226832e+06  189046.998322      189.02439      1.226727e+06       89.553491                0.529101       94.512195       101.95122                0.0   -1236.120079   15.365854           1.0        0.487805      14.878049  1.226742e+06       0.0
2       1.227021e+06  189129.309588      189.02439      1.226748e+06      178.577881               89.553491       94.512195       101.95122                0.0   -1236.120079   94.268293           1.0        0.487805      93.780488  1.226842e+06       0.0
3       1.227210e+06  189297.236418      189.02439      1.226843e+06      267.602271              178.577881       94.512195       101.95122                0.0   -1236.120079   99.756098           1.0        0.487805      99.268293  1.226942e+06       0.0
4       1.227399e+06  189391.748613      189.02439      1.227032e+06      356.626662              267.602271       94.512195       101.95122                0.0   -1236.120079   10.731707           1.0        0.487805      10.243902  1.227042e+06       0.0
5       1.227588e+06  189391.748613      189.02439      1.227124e+06      445.651052              356.626662       94.512195       101.95122                0.0   -1236.120079   18.335914           1.0        0.487805      17.848109  1.227142e+06       0.0
6       1.227777e+06  189488.377210      189.02439      1.227221e+06      534.675442              445.651052       94.512195       101.95122                0.0   -1236.120079   21.707317           1.0        0.487805      21.219512  1.227242e+06       0.0
7       1.227966e+06  189580.773003      189.02439      1.227243e+06      623.699832              534.675442       94.512195       101.95122                0.0   -1236.120079   99.470899           1.0        0.487805      98.983095  1.227342e+06       0.0
8       1.228155e+06  189747.560976      189.02439      1.227343e+06      712.724222              623.699832       94.512195       101.95122                0.0   -1236.120079   99.470899           1.0        0.487805      98.983095  1.227442e+06       0.0
9       1.228344e+06  189836.585366      189.02439      1.227443e+06      801.748613              712.724222       94.512195       101.95122                0.0   -1236.120079  100.000000           1.0        0.487805      99.512195  1.227542e+06       1.0
10      1.228533e+06  189926.138857      189.02439      1.227543e+06      890.773003              801.748613       94.512195       101.95122                0.0   -1236.120079   99.756098           1.0        0.487805      99.268293  1.227642e+06       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=10, 
, large_loss_count=10, loss_amount=32850/41, beliefs_remain_consistent=True, beliefs_improve=False, alpha=10/41, buf_size=20/41, start_state=[0].[0m
[02/06 13:53:41]  --------------------------------------------------------------------------------
[02/06 13:53:41]  Iteration: 17 (0 solution, 16 counterexamples)
[02/06 13:53:43]  Generator returned sat in 0.065521 secs.
[02/06 13:53:43]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 13:54:59]  Verifer returned sat in 76.067544 secs.
[02/06 13:54:59]  sf_get_cex returned in 76.208379 secs.
[02/06 13:54:59]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       1.225980e+06           1.00            1.0      1.225935e+06             0.0                     0.0            35.0           100.0                0.0   -1451.620079    44.50          -1.0           44.50           0.00  1.225935e+06       1.0
1       1.226015e+06       35044.50           35.0      1.225980e+06             0.0                     0.0            35.0           100.0                0.0   -1451.620079    34.75           0.0          -20.50          55.25  1.226035e+06       0.0
2       1.226050e+06       35034.75           35.0      1.226040e+06             0.0                     0.0            35.0           100.0                0.0   -1366.120079    10.25           0.0            0.00          10.25  1.226050e+06       0.0
3       1.226085e+06       35010.25           35.0      1.226074e+06             0.0                     0.0            35.0           100.0                0.0   -1301.120079    10.50           0.0            0.00          10.50  1.226085e+06       0.0
4       1.226120e+06       35010.50           35.0      1.226085e+06             0.0                     0.0            35.0           100.0                0.0   -1236.120079    34.75           0.0            0.00          34.75  1.226120e+06       0.0
5       1.226155e+06       35034.75           35.0      1.226120e+06             0.0                     0.0            35.0           100.0                0.0   -1171.120079    35.00           0.0            0.00          35.00  1.226155e+06       1.0
6       1.226190e+06       35035.00           35.0      1.226155e+06             0.0                     0.0            35.0           100.0                0.0   -1129.620079    35.00           0.0          -23.50          58.50  1.226213e+06       1.0
7       1.226225e+06       35035.00           35.0      1.226213e+06             0.0                     0.0            35.0           100.0                0.0   -1041.120079    11.50           0.0            0.00          11.50  1.226225e+06       0.0
8       1.226260e+06       35011.50           35.0      1.226225e+06             0.0                     0.0            35.0           100.0                0.0    -976.120079    35.00           0.0            0.00          35.00  1.226260e+06       1.0
9       1.226295e+06       35035.00           35.0      1.226260e+06             0.0                     0.0            35.0           100.0                0.0    -911.370079    35.00           0.0           -0.25          35.25  1.226295e+06       1.0
10      1.226330e+06       35035.00           35.0      1.226295e+06             0.0                     0.0            35.0           100.0                0.0    -911.370079    34.75           0.0          -65.25         100.00  1.226395e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=9/8, buf_size=89/2, start_state=[0].[0m
[02/06 13:54:59]  --------------------------------------------------------------------------------
[02/06 13:54:59]  Iteration: 18 (0 solution, 17 counterexamples)
[02/06 13:55:01]  Generator returned sat in 0.018057 secs.
[02/06 13:55:01]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 13:57:36]  Verifer returned sat in 154.908172 secs.
[02/06 13:57:36]  sf_get_cex returned in 155.036398 secs.
[02/06 13:57:36]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t      queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      380435.717364       1.000000        1.00000     379960.337156        0.333333                0.000000       94.990625           100.0               10.0   -1236.120079   475.046875          -1.0       420.13125      54.915625  380015.252781      11.0
1      380625.698614  190456.630208      189.98125     380114.815281        0.333333                0.333333       94.990625           100.0               10.0   -1236.120079   510.550000           1.0       510.11250       0.437500  380115.252781      11.0
2      380815.679864  190492.133333      189.98125     380215.159031        0.333333                0.333333       94.990625           100.0                1.0   -1236.120079   600.187500           1.0       600.09375       0.093750  380215.252781       2.0
3      381005.661114  190581.770833      189.98125     380245.809031        0.333333                0.333333       94.990625           100.0                2.0   -1236.120079   759.518750           1.0       690.07500      69.443750  380315.252781       3.0
4      381195.642364  190741.102083      189.98125     380415.190281        0.333333                0.333333       94.990625           100.0                3.0   -1236.120079   780.118750           1.0       780.05625       0.062500  380415.252781       4.0
5      381385.623614  190761.702083      189.98125     380435.384031        0.333333                0.333333       94.990625           100.0                4.0   -1236.120079   949.906250           1.0       870.03750      79.868750  380515.252781       5.0
6      381575.604864  190931.489583      189.98125     380615.252781        0.333333                0.333333       94.990625           100.0                4.0   -1236.120079   960.018750           1.0       960.01875       0.000000  380615.252781       5.0
7      381765.586114  190941.602083      189.98125     380625.380906        0.395833                0.333333       94.990625           100.0                4.0   -1236.120079  1139.809375           1.0      1049.93750      89.871875  380715.252781       5.0
8      381955.567364  191121.455208      189.98125     380815.252781       90.377083                0.395833       94.990625           100.0                5.0   -1236.120079  1049.937500           1.0      1049.93750       0.000000  380815.252781       6.0
9      382145.548614  191121.564583      189.98125     380815.252781      180.358333               90.377083       94.990625           100.0                5.0   -1236.120079  1149.937500           1.0      1049.93750     100.000000  380915.252781       6.0
10     382335.529864  191311.545833      189.98125     381005.234031      270.339583              180.358333       94.990625           100.0                6.0   -1236.120079  1059.956250           1.0      1049.93750      10.018750  381015.252781       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=43201/160, beliefs_remain_consistent=True, beliefs_improve=False, alpha=12799/640, buf_size=16799/16, start_state=[0].[0m
[02/06 13:57:36]  --------------------------------------------------------------------------------
[02/06 13:57:36]  Iteration: 19 (0 solution, 18 counterexamples)
[02/06 13:57:37]  Generator returned sat in 0.031385 secs.
[02/06 13:57:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 13:58:46]  Verifer returned sat in 68.226957 secs.
[02/06 13:58:46]  sf_get_cex returned in 68.356960 secs.
[02/06 13:58:46]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0     -493478.470199       1.000000            1.0    -494473.386865        0.416667                0.000000           100.0           100.0                6.0   -1236.120079    994.5          -1.0           900.0           94.5 -494378.886865       7.0
1     -493378.470199  100994.916667          100.0    -494278.886865        0.416667                0.416667           100.0           100.0                7.0   -1236.120079    900.0           1.0           900.0            0.0 -494278.886865       8.0
2     -493278.470199  100900.416667          100.0    -494274.386865        0.416667                0.416667           100.0           100.0                8.0   -1236.120079    995.5           1.0           900.0           95.5 -494178.886865       9.0
3     -493178.470199  100995.916667          100.0    -494174.886865        0.416667                0.416667           100.0           100.0                8.0   -1236.120079    996.0           1.0           900.0           96.0 -494078.886865       9.0
4     -493078.470199  100996.416667          100.0    -494075.386865        0.416667                0.416667           100.0           100.0                9.0   -1236.120079    996.5           1.0           900.0           96.5 -493978.886865      10.0
5     -492978.470199  100996.916667          100.0    -493975.886865        0.416667                0.416667           100.0           100.0                7.0   -1236.120079    997.0           1.0           900.0           97.0 -493878.886865       8.0
6     -492878.470199  100997.416667          100.0    -493876.386865        0.416667                0.416667           100.0           100.0                6.0   -1236.120079    997.5           1.0           900.0           97.5 -493778.886865       7.0
7     -492778.470199  100997.916667          100.0    -493678.886865        0.416667                0.416667           100.0           100.0                7.0   -1236.120079    900.0           1.0           900.0            0.0 -493678.886865       8.0
8     -492678.470199  100900.416667          100.0    -493675.886865        0.416667                0.416667           100.0           100.0                8.0   -1236.120079    997.0           1.0           900.0           97.0 -493578.886865       9.0
9     -492578.470199  100997.416667          100.0    -493575.386865        0.416667                0.416667           100.0           100.0                9.0   -1236.120079    996.5           1.0           900.0           96.5 -493478.886865      10.0
10    -492478.470199  100996.916667          100.0    -493378.886865        0.416667                0.416667           100.0           100.0                8.0   -1236.120079    900.0           1.0           900.0            0.0 -493378.886865       9.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/2, buf_size=900, start_state=[0].[0m
[02/06 13:58:46]  --------------------------------------------------------------------------------
[02/06 13:58:46]  Iteration: 20 (0 solution, 19 counterexamples)
[02/06 13:58:48]  Generator returned sat in 0.024188 secs.
[02/06 13:58:48]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:07:50]  Verifer returned sat in 542.629987 secs.
[02/06 14:07:51]  sf_get_cex returned in 542.797496 secs.
[02/06 14:07:51]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      716627.292075       1.000000       1.000000     716627.292075             0.0                     0.0       33.335737      100.014423                0.0   -1569.434182   0.000000          -1.0        0.000000       0.000000  716627.292075       1.0
1      716643.963550   16671.474359      16.671474     716627.299287             0.0                     0.0       33.335737      100.014423                0.0   -1486.105656  16.664263           0.0        0.000000      16.664263  716643.963550       0.0
2      716660.635024   16688.138622      16.671474     716660.635024             0.0                     0.0       33.335737      100.014423                0.0   -1419.448605   0.000000           0.0      -16.671474      16.671474  716677.306498       0.0
3      716677.306498   16671.474359      16.671474     716677.306498             0.0                     0.0       33.335737      100.014423                0.0   -1336.120079   0.000000           0.0      -16.671474      16.671474  716693.977973       0.0
4      716693.977973   16671.474359      16.671474     716693.977973             0.0                     0.0       33.335737      100.014423                0.0   -1236.120079   0.000000           0.0        0.000000       0.000000  716693.977973       0.0
5      716710.649447   16671.474359      16.671474     716693.985184             0.0                     0.0       33.335737      100.014423                0.0   -1152.791554  16.664263           0.0        0.000000      16.664263  716710.649447       0.0
6      716727.320921   16688.138622      16.671474     716710.656659             0.0                     0.0       33.335737      100.014423                0.0   -1069.463028  16.664263           0.0        0.000000      16.664263  716727.320921       0.0
7      716743.992396   16688.138622      16.671474     716727.324527             0.0                     0.0       33.335737      100.014423                0.0    -986.134502  16.667869           0.0        0.000000      16.667869  716743.992396       0.0
8      716760.663870   16688.142228      16.671474     716743.992396             0.0                     0.0       33.335737      100.014423                0.0    -902.805977  16.671474           0.0        0.000000      16.671474  716760.663870       1.0
9      716777.335344   16688.145833      16.671474     716760.663870             0.0                     0.0       33.335737      100.014423                0.0    -819.484663  16.671474           0.0       -0.007212      16.678686  716777.342556       1.0
10     716794.006819   16688.145833      16.671474     716777.342556             0.0                     0.0       33.335737      100.014423                0.0    -819.484663  16.664263           0.0      -83.335737     100.000000  716877.342556       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=10403/624, buf_size=20815/1248, start_state=[0].[0m
[02/06 14:07:51]  --------------------------------------------------------------------------------
[02/06 14:07:51]  Iteration: 21 (0 solution, 20 counterexamples)
[02/06 14:07:53]  Generator returned sat in 0.017186 secs.
[02/06 14:07:53]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:14:19]  Verifer returned sat in 386.606600 secs.
[02/06 14:14:19]  sf_get_cex returned in 386.762281 secs.
[02/06 14:14:19]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      746663.559445       1.000000            1.0     746663.505956        0.001244                0.000000           100.0      133.339104                0.0   -1236.120079    0.052245          -1.0      -99.947755     100.000000  746763.505956       1.0
1      746863.559445  200000.053489          200.0     746863.505956        0.001244                0.001244           100.0      133.339104                0.0   -1236.120079    0.052245           1.0        0.052245       0.000000  746863.505956       0.0
2      747063.559445  200000.053489          200.0     746863.558201        0.001244                0.001244           100.0      133.339104                0.0   -1236.120079  200.000000           0.0      100.052245      99.947755  746963.505956       1.0
3      747263.559445  200200.001244          200.0     747063.505956        0.001244                0.001244           100.0      133.339104                0.0   -1236.120079  200.052245           0.0      200.052245       0.000000  747063.505956       1.0
4      747463.559445  200200.053489          200.0     747063.505956        0.001244                0.001244           100.0      133.339104                0.0   -1236.120079  400.052245           0.0      300.052245     100.000000  747163.505956       1.0
5      747663.559445  200400.053489          200.0     747163.532078        0.001244                0.001244           100.0      133.339104                1.0   -1236.120079  500.026122           1.0      400.052245      99.973878  747263.505956       2.0
6      747863.559445  200500.027366          200.0     747263.523371        0.001244                0.001244           100.0      133.339104                2.0   -1236.120079  600.034830           1.0      500.052245      99.982585  747363.505956       3.0
7      748063.559445  200600.036074          200.0     747463.505956        0.001244                0.001244           100.0      133.339104                2.0   -1236.120079  600.052245           1.0      600.052245       0.000000  747463.505956       3.0
8      748263.559445  200600.053489          200.0     747463.566908        0.001244                0.001244           100.0      133.339104                2.0   -1236.120079  799.991293           1.0      700.052245      99.939048  747563.505956       3.0
9      748463.559445  200799.992536          200.0     747596.897203        0.001244                0.001244           100.0      133.339104                3.0   -1236.120079  866.660998           1.0      800.052245      66.608753  747663.505956       4.0
10     748663.559445  200866.662242          200.0     747763.410174       99.992536                0.001244           100.0      133.339104                3.0   -1236.120079  800.156735           1.0      800.060952       0.095782  747763.505956       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=367468/3675, beliefs_remain_consistent=True, beliefs_improve=False, alpha=509/117600, buf_size=420032/525, start_state=[0].[0m
[02/06 14:14:19]  --------------------------------------------------------------------------------
[02/06 14:14:19]  Iteration: 22 (0 solution, 21 counterexamples)
[02/06 14:14:21]  Generator returned sat in 0.018077 secs.
[02/06 14:14:21]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:16:29]  Verifer returned sat in 126.924781 secs.
[02/06 14:16:29]  sf_get_cex returned in 127.058243 secs.
[02/06 14:16:29]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      847266.148327       1.000000       1.000000     847266.148326    5.874060e-07            0.000000e+00       55.085714           100.0                0.0   -1498.470079   0.000000          -1.0       -0.021429       0.021429  847266.169755       0.0
1      847293.691184   27542.857143      27.542857     847266.169755    5.874060e-07            5.874060e-07       55.085714           100.0                0.0   -1425.991508  27.521429           1.0        0.000000      27.521429  847293.691183       0.0
2      847321.234041   27570.378572      27.542857     847293.691183    5.874060e-07            5.874060e-07       55.085714           100.0                0.0   -1381.077222  27.542857           0.0      -27.542857      55.085714  847348.776898       1.0
3      847348.776898   27570.400001      27.542857     847348.776898    5.874060e-07            5.874060e-07       55.085714           100.0                0.0   -1281.077222   0.000000           0.0        0.000000       0.000000  847348.776898       0.0
4      847376.319755   27542.857143      27.542857     847348.776898    5.874060e-07            5.874060e-07       55.085714           100.0                0.0   -1236.120079  27.542857           0.0      -27.500000      55.042857  847403.819755       0.0
5      847403.862613   27570.400001      27.542857     847403.819755    5.874060e-07            5.874060e-07       55.085714           100.0                0.0   -1136.162937   0.042857           0.0        0.000000       0.042857  847403.862612       0.0
6      847431.405470   27542.900001      27.542857     847403.862612    5.874060e-07            5.874060e-07       55.085714           100.0                0.0   -1091.227222  27.542857           0.0      -27.521429      55.064286  847458.926898       1.0
7      847458.948327   27570.400001      27.542857     847458.926898    5.874060e-07            5.874060e-07       55.085714           100.0                0.0    -991.248651   0.021429           0.0        0.000000       0.021429  847458.948326       0.0
8      847486.491184   27542.878572      27.542857     847458.948326    5.874060e-07            5.874060e-07       55.085714           100.0                0.0    -918.791508  27.542857           0.0        0.000000      27.542857  847486.491183       1.0
9      847514.034041   27570.400001      27.542857     847486.491183    5.874060e-07            5.874060e-07       55.085714           100.0                0.0    -873.877222  27.542857           0.0      -27.542857      55.085714  847541.576898       1.0
10     847541.576898   27570.400001      27.542857     847541.576898    5.874060e-07            5.874060e-07       55.085714           100.0                0.0    -873.877222   0.000000           0.0     -100.000000     100.000000  847641.576898       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2791/140, buf_size=2797/140, start_state=[0].[0m
[02/06 14:16:29]  --------------------------------------------------------------------------------
[02/06 14:16:29]  Iteration: 23 (0 solution, 22 counterexamples)
[02/06 14:16:31]  Generator returned sat in 0.014765 secs.
[02/06 14:16:31]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:16:31]  Verifer returned sat in 0.074532 secs.
[02/06 14:16:31]  sf_get_cex returned in 0.199253 secs.
[02/06 14:16:31]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      847231.428327       1.000000       1.000000     847231.428326    5.874060e-07            0.000000e+00       65.005714           100.0                0.0   -1473.670079   0.000000          -1.0       -0.021429       0.021429  847231.449755       0.0
1      847263.931184   32502.857143      32.502857     847231.449755    5.874060e-07            5.874060e-07       65.005714           100.0                0.0   -1406.151508  32.481429           1.0        0.000000      32.481429  847263.931183       0.0
2      847296.434041   32535.338572      32.502857     847263.931183    5.874060e-07            5.874060e-07       65.005714           100.0                0.0   -1371.157222  32.502857           0.0      -32.502857      65.005714  847328.936898       1.0
3      847328.936898   32535.360001      32.502857     847328.936898    5.874060e-07            5.874060e-07       65.005714           100.0                0.0   -1271.157222   0.000000           0.0        0.000000       0.000000  847328.936898       0.0
4      847361.439755   32502.857143      32.502857     847328.936898    5.874060e-07            5.874060e-07       65.005714           100.0                0.0   -1236.120079  32.502857           0.0      -32.460000      64.962857  847393.899755       0.0
5      847393.942613   32535.360001      32.502857     847393.899755    5.874060e-07            5.874060e-07       65.005714           100.0                0.0   -1136.162937   0.042857           0.0        0.000000       0.042857  847393.942612       0.0
6      847426.445470   32502.900001      32.502857     847393.942612    5.874060e-07            5.874060e-07       65.005714           100.0                0.0   -1101.147222  32.502857           0.0      -32.481429      64.984286  847458.926898       1.0
7      847458.948327   32535.360001      32.502857     847458.926898    5.874060e-07            5.874060e-07       65.005714           100.0                0.0   -1001.168651   0.021429           0.0        0.000000       0.021429  847458.948326       0.0
8      847491.451184   32502.878572      32.502857     847458.948326    5.874060e-07            5.874060e-07       65.005714           100.0                0.0    -933.671508  32.502857           0.0        0.000000      32.502857  847491.451183       1.0
9      847523.954041   32535.360001      32.502857     847491.451183    5.874060e-07            5.874060e-07       65.005714           100.0                0.0    -898.677222  32.502857           0.0      -32.502857      65.005714  847556.456898       1.0
10     847556.456898   32535.360001      32.502857     847556.456898    5.874060e-07            5.874060e-07       65.005714           100.0                0.0    -898.677222   0.000000           0.0     -100.000000     100.000000  847656.456898       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2799/140, buf_size=561/28, start_state=[0].[0m
[02/06 14:16:31]  --------------------------------------------------------------------------------
[02/06 14:16:31]  Iteration: 24 (0 solution, 23 counterexamples)
[02/06 14:16:33]  Generator returned sat in 0.011475 secs.
[02/06 14:16:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:16:33]  Verifer returned sat in 0.063471 secs.
[02/06 14:16:33]  sf_get_cex returned in 0.176862 secs.
[02/06 14:16:34]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t       queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      847196.433331       1.000000       1.000000     847196.433331             0.0                     0.0       75.004285           100.0                0.0   -1453.672939  0.000000e+00          -1.0       -0.021429   2.142857e-02  847196.454760       0.0
1      847233.935473   37502.142270      37.502142     847196.454760             0.0                     0.0       75.004285           100.0                0.0   -1391.153653  3.748071e+01           0.0        0.000000   3.748071e+01  847233.935473       0.0
2      847271.437616   37539.622983      37.502142     847233.935473             0.0                     0.0       75.004285           100.0                0.0   -1366.157937  3.750214e+01           0.0      -37.502142   7.500428e+01  847308.939758       1.0
3      847308.939758   37539.644412      37.502142     847308.939758             0.0                     0.0       75.004285           100.0                0.0   -1266.157937  0.000000e+00           0.0        0.000000   0.000000e+00  847308.939758       0.0
4      847346.441900   37502.142270      37.502142     847308.939758             0.0                     0.0       75.004285           100.0                0.0   -1236.120079  3.750214e+01           0.0      -32.460000   6.996214e+01  847378.901900       0.0
5      847383.944042   37539.644412      37.502142     847378.901900             0.0                     0.0       75.004285           100.0                0.0   -1141.162222  5.042142e+00           0.0        0.000000   5.042142e+00  847383.944042       0.0
6      847421.446185   37507.184412      37.502142     847383.944042             0.0                     0.0       75.004285           100.0                0.0   -1116.166506  3.750214e+01           0.0      -37.502142   7.500428e+01  847458.948326       1.0
7      847458.948327   37539.644412      37.502142     847458.948326             0.0                     0.0       75.004285           100.0                0.0   -1016.166506  5.874060e-07           0.0        0.000000   5.874060e-07  847458.948327       0.0
8      847496.450469   37502.142270      37.502142     847458.948327             0.0                     0.0       75.004285           100.0                0.0    -953.668648  3.750214e+01           0.0        0.000000   3.750214e+01  847496.450469       1.0
9      847533.952611   37539.644412      37.502142     847496.450469             0.0                     0.0       75.004285           100.0                0.0    -913.651510  3.750214e+01           0.0      -22.480719   5.998286e+01  847556.433330       1.0
10     847571.454754   37539.644412      37.502142     847556.433330             0.0                     0.0       75.004285           100.0                0.0    -913.651510  1.502142e+01           0.0      -84.978577   1.000000e+02  847656.433330       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=3/700, buf_size=33/700, start_state=[0].[0m
[02/06 14:16:34]  --------------------------------------------------------------------------------
[02/06 14:16:34]  Iteration: 25 (0 solution, 24 counterexamples)
[02/06 14:16:36]  Generator returned sat in 0.012230 secs.
[02/06 14:16:36]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:16:36]  Verifer returned sat in 0.056891 secs.
[02/06 14:16:36]  sf_get_cex returned in 0.167871 secs.
[02/06 14:16:36]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t       queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      847196.433333       1.000000       1.000000     847196.433333             0.0                     0.0       75.004284           100.0                0.0   -1453.672940  0.000000e+00          -1.0       -0.021429   2.142857e-02  847196.454762       0.0
1      847233.935475   37502.141976      37.502142     847196.454762             0.0                     0.0       75.004284           100.0                0.0   -1391.153653  3.748071e+01           0.0        0.000000   3.748071e+01  847233.935475       0.0
2      847271.437617   37539.622689      37.502142     847233.935475             0.0                     0.0       75.004284           100.0                0.0   -1366.157937  3.750214e+01           0.0      -37.502142   7.500428e+01  847308.939759       1.0
3      847308.939759   37539.644118      37.502142     847308.939759             0.0                     0.0       75.004284           100.0                0.0   -1266.157937  0.000000e+00           0.0        0.000000   0.000000e+00  847308.939759       0.0
4      847346.441901   37502.141976      37.502142     847308.939759             0.0                     0.0       75.004284           100.0                0.0   -1236.120079  3.750214e+01           0.0      -32.460000   6.996214e+01  847378.901901       0.0
5      847383.944043   37539.644118      37.502142     847378.901901             0.0                     0.0       75.004284           100.0                0.0   -1141.162221  5.042142e+00           0.0        0.000000   5.042142e+00  847383.944043       0.0
6      847421.446185   37507.184118      37.502142     847383.944043             0.0                     0.0       75.004284           100.0                0.0   -1116.166505  3.750214e+01           0.0      -37.502141   7.500428e+01  847458.948326       1.0
7      847458.948327   37539.644118      37.502142     847458.948326             0.0                     0.0       75.004284           100.0                0.0   -1016.166505  5.874060e-07           0.0        0.000000   5.874060e-07  847458.948327       0.0
8      847496.450469   37502.141977      37.502142     847458.948327             0.0                     0.0       75.004284           100.0                0.0    -953.668647  3.750214e+01           0.0        0.000000   3.750214e+01  847496.450469       1.0
9      847533.952611   37539.644118      37.502142     847496.450469             0.0                     0.0       75.004284           100.0                0.0    -913.651509  3.750214e+01           0.0      -22.480720   5.998286e+01  847556.433331       1.0
10     847571.454753   37539.644118      37.502142     847556.433331             0.0                     0.0       75.004284           100.0                0.0    -913.651509  1.502142e+01           0.0      -84.978578   1.000000e+02  847656.433331       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2917/680960, buf_size=32101/680960, start_state=[0].[0m
[02/06 14:16:36]  --------------------------------------------------------------------------------
[02/06 14:16:36]  Iteration: 26 (0 solution, 25 counterexamples)
[02/06 14:16:39]  Generator returned sat in 0.029069 secs.
[02/06 14:16:39]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:23:01]  Verifer returned sat in 382.673045 secs.
[02/06 14:23:01]  sf_get_cex returned in 382.854877 secs.
[02/06 14:23:01]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       2.270960e+06       1.000000       1.000000      2.270960e+06        0.013021                0.000000       99.430556      132.577778                0.0   -1236.120079    0.000000          -1.0      -97.030556      97.030556  2.271057e+06       0.0
1       2.271158e+06  198861.124132     198.861111      2.271157e+06        0.013021                0.013021       99.430556      132.577778                0.0   -1236.120079    1.830556           1.0        1.830556       0.000000  2.271157e+06       0.0
2       2.271357e+06  198862.954687     198.861111      2.271167e+06        0.013021                0.013021       99.430556      132.577778                0.0   -1236.120079  189.983333           0.0      100.691667      89.291667  2.271257e+06       0.0
3       2.271556e+06  199051.107465     198.861111      2.271353e+06        0.013021                0.013021       99.430556      132.577778                0.0   -1236.120079  202.861111           0.0      199.552778       3.308333  2.271357e+06       1.0
4       2.271755e+06  199063.985243     198.861111      2.271390e+06       98.438021                0.013021       99.430556      132.577778                0.0   -1236.120079  266.294444           0.0      199.988889      66.305556  2.271457e+06       1.0
5       2.271954e+06  199225.843576     198.861111      2.271457e+06      197.299132               98.438021       99.430556      132.577778                1.0   -1236.120079  299.988889           1.0      199.988889     100.000000  2.271557e+06       2.0
6       2.272153e+06  199358.399132     198.861111      2.271655e+06      296.160243              197.299132       99.430556      132.577778                1.0   -1236.120079  201.138889           1.0      199.988889       1.150000  2.271657e+06       2.0
7       2.272352e+06  199358.410243     198.861111      2.271659e+06      395.021354              296.160243       99.430556      132.577778                1.0   -1236.120079  297.127778           1.0      199.988889      97.138889  2.271757e+06       2.0
8       2.272550e+06  199553.260243     198.861111      2.271791e+06      493.882465              395.021354       99.430556      132.577778                1.0   -1236.120079  265.561111           1.0      199.988889      65.572222  2.271857e+06       2.0
9       2.272749e+06  199620.554688     198.861111      2.271921e+06      592.743576              493.882465       99.430556      132.577778                1.0   -1236.120079  235.938889           1.0      199.988889      35.950000  2.271957e+06       2.0
10      2.272948e+06  199689.793576     198.861111      2.272053e+06      691.604687              592.743576       99.430556      132.577778                1.0   -1236.120079  203.405556           1.0      199.988889       3.416667  2.272057e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=7, loss_amount=82991/120, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/360, buf_size=17999/90, start_state=[0].[0m
[02/06 14:23:02]  --------------------------------------------------------------------------------
[02/06 14:23:02]  Iteration: 27 (0 solution, 26 counterexamples)
[02/06 14:23:04]  Generator returned sat in 0.020100 secs.
[02/06 14:23:04]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:25:12]  Verifer returned sat in 127.141581 secs.
[02/06 14:25:12]  sf_get_cex returned in 127.351605 secs.
[02/06 14:25:12]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       2.370216e+06       1.000000       1.000000      2.369890e+06        0.166667                0.000000       90.960307      142.483995                2.0   -1236.120079  325.249680          -1.0      296.952625      28.297055  2.369919e+06       3.0
1       2.370398e+06  182246.030943     181.920615      2.370019e+06       79.039906                0.166667       90.960307      142.483995                3.0   -1236.120079  300.000000           1.0      300.000000       0.000000  2.370019e+06       4.0
2       2.370443e+06   45859.193555      45.480154      2.370119e+06       79.039906               79.039906       90.960307      142.483995                3.0   -1236.120079  245.480154           1.0      245.480154       0.000000  2.370119e+06       4.0
3       2.370489e+06   45804.673709      45.480154      2.370215e+06       79.039906               79.039906       90.960307      142.483995                3.0   -1236.120079  194.007682           1.0      190.960307       3.047375  2.370219e+06       4.0
4       2.370534e+06   45753.201238      45.480154      2.370319e+06       79.039906               79.039906       90.960307      142.483995                2.0   -1236.120079  136.440461           1.0      136.440461       0.000000  2.370319e+06       3.0
5       2.370716e+06  182136.094964     181.920615      2.370419e+06       79.039906               79.039906       90.960307      142.483995                0.0   -1236.120079  218.361076           0.0      218.361076       0.000000  2.370419e+06       1.0
6       2.370898e+06  182218.015578     181.920615      2.370459e+06       79.321596               79.039906       90.960307      142.483995                0.0   -1236.120079  359.129321           0.0      300.000000      59.129321  2.370519e+06       1.0
7       2.371080e+06  182359.065514     181.920615      2.370602e+06      161.242211               79.321596       90.960307      142.483995                1.0   -1236.120079  316.551430           1.0      300.000000      16.551430  2.370619e+06       2.0
8       2.371262e+06  182398.408237     181.920615      2.370638e+06      243.162825              161.242211       90.960307      142.483995                1.0   -1236.120079  380.638924           1.0      300.000000      80.638924  2.370719e+06       2.0
9       2.371444e+06  182544.416347     181.920615      2.370745e+06      325.083440              243.162825       90.960307      142.483995                2.0   -1236.120079  373.597951           1.0      300.000000      73.597951  2.370819e+06       3.0
10      2.371626e+06  182619.295988     181.920615      2.370888e+06      407.004055              325.083440       90.960307      142.483995                2.0   -1236.120079  330.832266           1.0      300.000000      30.832266  2.370919e+06       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=4, loss_amount=256140/781, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1400/71, buf_size=300, start_state=[0].[0m
[02/06 14:25:12]  --------------------------------------------------------------------------------
[02/06 14:25:12]  Iteration: 28 (0 solution, 27 counterexamples)
[02/06 14:25:14]  Generator returned sat in 0.017998 secs.
[02/06 14:25:14]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:29:14]  Verifer returned sat in 239.259382 secs.
[02/06 14:29:14]  sf_get_cex returned in 239.444217 secs.
[02/06 14:29:14]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       2.518340e+06       1.000000       1.000000      2.518062e+06        0.000000                0.000000       89.333333      139.333333                1.0    -986.370079  278.000000          -1.0      200.000000           78.0  2.518140e+06       2.0
1       2.518519e+06  178944.666667     178.666667      2.518151e+06       78.666667                0.000000       89.333333      139.333333                0.0    -986.370079  289.000000           0.0      200.000000           89.0  2.518240e+06       1.0
2       2.518698e+06  179034.333333     178.666667      2.518240e+06      157.333333               78.666667       89.333333      139.333333                1.0    -986.370079  300.000000           1.0      200.000000          100.0  2.518340e+06       2.0
3       2.518876e+06  179124.000000     178.666667      2.518340e+06      236.000000              157.333333       89.333333      139.333333                2.0    -986.370079  300.000000           1.0      200.000000          100.0  2.518440e+06       3.0
4       2.518921e+06   45202.666667      44.666667      2.518440e+06      236.000000              236.000000       89.333333      139.333333                2.0    -986.370079  244.666667           1.0      144.666667          100.0  2.518540e+06       3.0
5       2.518966e+06   45147.333333      44.666667      2.518596e+06      236.000000              236.000000       89.333333      139.333333                1.0    -986.370079  133.333333           1.0       89.333333           44.0  2.518640e+06       2.0
6       2.519144e+06  179036.000000     178.666667      2.518685e+06      236.000000              236.000000       89.333333      139.333333                0.0    -986.370079  223.000000           0.0      168.000000           55.0  2.518740e+06       1.0
7       2.519323e+06  179125.666667     178.666667      2.518740e+06      282.666667              236.000000       89.333333      139.333333                0.0    -986.370079  300.000000           0.0      200.000000          100.0  2.518840e+06       1.0
8       2.519502e+06  179249.333333     178.666667      2.518863e+06      361.333333              282.666667       89.333333      139.333333                1.0    -986.370079  277.000000           1.0      200.000000           77.0  2.518940e+06       2.0
9       2.519680e+06  179305.000000     178.666667      2.518952e+06      440.000000              361.333333       89.333333      139.333333                1.0    -986.370079  288.000000           1.0      200.000000           88.0  2.519040e+06       2.0
10      2.519859e+06  179394.666667     178.666667      2.519041e+06      518.666667              440.000000       89.333333      139.333333                1.0    -986.370079  299.000000           1.0      200.000000           99.0  2.519140e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=440, beliefs_remain_consistent=True, beliefs_improve=False, alpha=59/3, buf_size=200, start_state=[0].[0m
[02/06 14:29:14]  --------------------------------------------------------------------------------
[02/06 14:29:14]  Iteration: 29 (0 solution, 28 counterexamples)
[02/06 14:29:17]  Generator returned sat in 0.026709 secs.
[02/06 14:29:17]  Candidate solution: 
[1m[94mif (+ -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:30:44]  Verifer returned unsat in 87.772113 secs.
[02/06 14:30:45]  sf_get_cex returned in 87.909179 secs.
[02/06 14:30:45]  Proved solution: 
[1m[92mif (+ -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:30:45]  --------------------------------------------------------------------------------
[02/06 14:30:45]  Iteration: 30 (1 solution, 28 counterexamples)
[02/06 14:30:47]  Generator returned sat in 0.011087 secs.
[02/06 14:30:47]  Candidate solution: 
[1m[94mif (+ -2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:32:27]  Verifer returned unsat in 99.288758 secs.
[02/06 14:32:27]  sf_get_cex returned in 99.506769 secs.
[02/06 14:32:27]  Proved solution: 
[1m[92mif (+ -2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:32:27]  --------------------------------------------------------------------------------
[02/06 14:32:27]  Iteration: 31 (2 solution, 28 counterexamples)
[02/06 14:32:29]  Generator returned sat in 0.007212 secs.
[02/06 14:32:29]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:46:13]  Verifer returned unsat in 823.911419 secs.
[02/06 14:46:14]  sf_get_cex returned in 824.081028 secs.
[02/06 14:46:14]  Proved solution: 
[1m[92mif (+ -1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:46:14]  --------------------------------------------------------------------------------
[02/06 14:46:14]  Iteration: 32 (3 solution, 28 counterexamples)
[02/06 14:46:16]  Generator returned sat in 0.006827 secs.
[02/06 14:46:16]  Candidate solution: 
[1m[94mif (+ -1/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:54:54]  Verifer returned unsat in 517.902598 secs.
[02/06 14:54:54]  sf_get_cex returned in 518.107211 secs.
[02/06 14:54:54]  Proved solution: 
[1m[92mif (+ -1/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:54:54]  --------------------------------------------------------------------------------
[02/06 14:54:54]  Iteration: 33 (4 solution, 28 counterexamples)
[02/06 14:54:58]  Generator returned sat in 0.006546 secs.
[02/06 14:54:58]  Candidate solution: 
[1m[94mif (+ -1/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:58:02]  Verifer returned unsat in 184.275901 secs.
[02/06 14:58:02]  sf_get_cex returned in 184.449842 secs.
[02/06 14:58:02]  Proved solution: 
[1m[92mif (+ -1/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 14:58:02]  --------------------------------------------------------------------------------
[02/06 14:58:02]  Iteration: 34 (5 solution, 28 counterexamples)
[02/06 14:58:05]  Generator returned sat in 0.007154 secs.
[02/06 14:58:05]  Candidate solution: 
[1m[94mif (+ -1/2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:03:27]  Verifer returned unsat in 321.761257 secs.
[02/06 15:03:27]  sf_get_cex returned in 321.966114 secs.
[02/06 15:03:27]  Proved solution: 
[1m[92mif (+ -1/2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:03:27]  --------------------------------------------------------------------------------
[02/06 15:03:27]  Iteration: 35 (6 solution, 28 counterexamples)
[02/06 15:03:30]  Generator returned sat in 0.006835 secs.
[02/06 15:03:30]  Candidate solution: 
[1m[94mif (+ -2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:04:45]  Verifer returned unsat in 74.660896 secs.
[02/06 15:04:45]  sf_get_cex returned in 74.834307 secs.
[02/06 15:04:45]  Proved solution: 
[1m[92mif (+ -2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:04:45]  --------------------------------------------------------------------------------
[02/06 15:04:45]  Iteration: 36 (7 solution, 28 counterexamples)
[02/06 15:04:48]  Generator returned sat in 0.006772 secs.
[02/06 15:04:48]  Candidate solution: 
[1m[94mif (+ -3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:07:47]  Verifer returned unsat in 178.929633 secs.
[02/06 15:07:47]  sf_get_cex returned in 179.156649 secs.
[02/06 15:07:47]  Proved solution: 
[1m[92mif (+ -3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:07:47]  --------------------------------------------------------------------------------
[02/06 15:07:47]  Iteration: 37 (8 solution, 28 counterexamples)
[02/06 15:07:50]  Generator returned sat in 0.006826 secs.
[02/06 15:07:50]  Candidate solution: 
[1m[94mif (+ -1min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:10:58]  Verifer returned unsat in 187.821634 secs.
[02/06 15:10:58]  sf_get_cex returned in 188.043162 secs.
[02/06 15:10:58]  Proved solution: 
[1m[92mif (+ -1min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:10:58]  --------------------------------------------------------------------------------
[02/06 15:10:58]  Iteration: 38 (9 solution, 28 counterexamples)
[02/06 15:11:01]  Generator returned sat in 0.006746 secs.
[02/06 15:11:01]  Candidate solution: 
[1m[94mif (+ -2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:16:33]  Verifer returned unsat in 332.436359 secs.
[02/06 15:16:33]  sf_get_cex returned in 332.623529 secs.
[02/06 15:16:33]  Proved solution: 
[1m[92mif (+ -2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:16:33]  --------------------------------------------------------------------------------
[02/06 15:16:33]  Iteration: 39 (10 solution, 28 counterexamples)
[02/06 15:16:36]  Generator returned sat in 0.006205 secs.
[02/06 15:16:36]  Candidate solution: 
[1m[94mif (+ -2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:18:02]  Verifer returned unsat in 85.372419 secs.
[02/06 15:18:02]  sf_get_cex returned in 85.543320 secs.
[02/06 15:18:02]  Proved solution: 
[1m[92mif (+ -2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:18:02]  --------------------------------------------------------------------------------
[02/06 15:18:02]  Iteration: 40 (11 solution, 28 counterexamples)
[02/06 15:18:05]  Generator returned sat in 0.006329 secs.
[02/06 15:18:05]  Candidate solution: 
[1m[94mif (+ -2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:29:31]  Verifer returned unsat in 686.506906 secs.
[02/06 15:29:31]  sf_get_cex returned in 686.707284 secs.
[02/06 15:29:31]  Proved solution: 
[1m[92mif (+ -2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:29:31]  --------------------------------------------------------------------------------
[02/06 15:29:31]  Iteration: 41 (12 solution, 28 counterexamples)
[02/06 15:29:34]  Generator returned sat in 0.008260 secs.
[02/06 15:29:34]  Candidate solution: 
[1m[94mif (+ -3/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:52:07]  Verifer returned unsat in 1352.274417 secs.
[02/06 15:52:07]  sf_get_cex returned in 1352.519317 secs.
[02/06 15:52:07]  Proved solution: 
[1m[92mif (+ -3/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:52:07]  --------------------------------------------------------------------------------
[02/06 15:52:07]  Iteration: 42 (13 solution, 28 counterexamples)
[02/06 15:52:10]  Generator returned sat in 0.007545 secs.
[02/06 15:52:10]  Candidate solution: 
[1m[94mif (+ -1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:53:07]  Verifer returned unsat in 56.860711 secs.
[02/06 15:53:07]  sf_get_cex returned in 57.048298 secs.
[02/06 15:53:07]  Proved solution: 
[1m[92mif (+ -1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 15:53:07]  --------------------------------------------------------------------------------
[02/06 15:53:07]  Iteration: 43 (14 solution, 28 counterexamples)
[02/06 15:53:10]  Generator returned sat in 0.007786 secs.
[02/06 15:53:10]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:04:26]  Verifer returned unsat in 676.403208 secs.
[02/06 16:04:27]  sf_get_cex returned in 676.675149 secs.
[02/06 16:04:27]  Proved solution: 
[1m[92mif (+ 1/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:04:27]  --------------------------------------------------------------------------------
[02/06 16:04:27]  Iteration: 44 (15 solution, 28 counterexamples)
[02/06 16:04:30]  Generator returned sat in 0.006677 secs.
[02/06 16:04:30]  Candidate solution: 
[1m[94mif (+ -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:07:26]  Verifer returned unsat in 176.280147 secs.
[02/06 16:07:26]  sf_get_cex returned in 176.477443 secs.
[02/06 16:07:26]  Proved solution: 
[1m[92mif (+ -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:07:26]  --------------------------------------------------------------------------------
[02/06 16:07:26]  Iteration: 45 (16 solution, 28 counterexamples)
[02/06 16:07:29]  Generator returned sat in 0.006775 secs.
[02/06 16:07:29]  Candidate solution: 
[1m[94mif (+ -1/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:13:27]  Verifer returned unsat in 357.688792 secs.
[02/06 16:13:27]  sf_get_cex returned in 357.962509 secs.
[02/06 16:13:27]  Proved solution: 
[1m[92mif (+ -1/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:13:27]  --------------------------------------------------------------------------------
[02/06 16:13:27]  Iteration: 46 (17 solution, 28 counterexamples)
[02/06 16:13:31]  Generator returned sat in 0.009657 secs.
[02/06 16:13:31]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:15:05]  Verifer returned unsat in 94.267357 secs.
[02/06 16:15:05]  sf_get_cex returned in 94.490897 secs.
[02/06 16:15:05]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:15:05]  --------------------------------------------------------------------------------
[02/06 16:15:05]  Iteration: 47 (18 solution, 28 counterexamples)
[02/06 16:15:09]  Generator returned sat in 0.009347 secs.
[02/06 16:15:09]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:16:38]  Verifer returned unsat in 89.385350 secs.
[02/06 16:16:38]  sf_get_cex returned in 89.578822 secs.
[02/06 16:16:38]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:16:38]  --------------------------------------------------------------------------------
[02/06 16:16:38]  Iteration: 48 (19 solution, 28 counterexamples)
[02/06 16:16:42]  Generator returned sat in 0.013088 secs.
[02/06 16:16:42]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:18:19]  Verifer returned sat in 97.019002 secs.
[02/06 16:18:19]  sf_get_cex returned in 97.295669 secs.
[02/06 16:18:19]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t      queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       2.321947e+06       1.000000       1.000000      2.321014e+06        0.000000                0.000000       89.703704           101.0               10.0  383679.662155   933.092593          -1.0      921.092593      12.000000  2.321026e+06      11.0
1       2.322126e+06  180340.500000     179.407407      2.321115e+06        0.500000                0.000000       89.703704           101.0               10.0  383679.662155  1010.500000           1.0     1000.000000      10.500000  2.321126e+06      11.0
2       2.322306e+06  180418.407407     179.407407      2.321217e+06       79.907407                0.500000       89.703704           101.0               10.0  383679.662155  1009.000000           1.0     1000.000000       9.000000  2.321226e+06      11.0
3       2.322485e+06  180496.314815     179.407407      2.321226e+06      159.314815               79.907407       89.703704           101.0               10.0  383679.662155  1100.000000           1.0     1000.000000     100.000000  2.321326e+06      11.0
4       2.322664e+06  180666.722222     179.407407      2.321326e+06      238.722222              159.314815       89.703704           101.0               10.0  383679.662155  1100.000000           1.0     1000.000000     100.000000  2.321426e+06      11.0
5       2.322844e+06  180746.129630     179.407407      2.321493e+06      318.129630              238.722222       89.703704           101.0               10.0  383679.662155  1032.388889           1.0     1000.000000      32.388889  2.321526e+06      11.0
6       2.323023e+06  180757.925926     179.407407      2.321582e+06      397.537037              318.129630       89.703704           101.0               10.0  383679.662155  1043.185185           1.0     1000.000000      43.185185  2.321626e+06      11.0
7       2.323203e+06  180848.129630     179.407407      2.321672e+06      476.944444              397.537037       89.703704           101.0               10.0  383679.662155  1053.981481           1.0     1000.000000      53.981481  2.321726e+06      11.0
8       2.323382e+06  180938.333333     179.407407      2.321761e+06      556.351852              476.944444       89.703704           101.0               10.0  383679.662155  1064.777778           1.0     1000.000000      64.777778  2.321826e+06      11.0
9       2.323561e+06  181028.537037     179.407407      2.321826e+06      635.759259              556.351852       89.703704           101.0               10.0  383679.662155  1100.000000           1.0     1000.000000     100.000000  2.321926e+06      11.0
10      2.323741e+06  181143.166667     179.407407      2.321927e+06      715.166667              635.759259       89.703704           101.0               10.0  383679.662155  1098.500000           1.0     1000.000000      98.500000  2.322026e+06      11.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=10, 
, large_loss_count=0, loss_amount=2144/3, beliefs_remain_consistent=True, beliefs_improve=False, alpha=536/27, buf_size=1000, start_state=[0].[0m
[02/06 16:18:19]  --------------------------------------------------------------------------------
[02/06 16:18:19]  Iteration: 49 (19 solution, 29 counterexamples)
[02/06 16:18:22]  Generator returned sat in 0.018724 secs.
[02/06 16:18:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:24:01]  Verifer returned unsat in 338.064310 secs.
[02/06 16:24:01]  sf_get_cex returned in 338.272620 secs.
[02/06 16:24:01]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:24:01]  --------------------------------------------------------------------------------
[02/06 16:24:01]  Iteration: 50 (20 solution, 29 counterexamples)
[02/06 16:24:04]  Generator returned sat in 0.012179 secs.
[02/06 16:24:04]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:26:39]  Verifer returned unsat in 154.557500 secs.
[02/06 16:26:39]  sf_get_cex returned in 154.788714 secs.
[02/06 16:26:39]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:26:39]  --------------------------------------------------------------------------------
[02/06 16:26:39]  Iteration: 51 (21 solution, 29 counterexamples)
[02/06 16:26:42]  Generator returned sat in 0.008019 secs.
[02/06 16:26:43]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:32:31]  Verifer returned sat in 348.783479 secs.
[02/06 16:32:32]  sf_get_cex returned in 349.026173 secs.
[02/06 16:32:32]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      564235.472348       1.000000            1.0     564235.472348    5.787412e-19            0.000000e+00           100.0      137.333333                6.0  383679.662155    0.000000          -1.0          -100.0     100.000000  564335.472348       7.0
1      564435.472348  200000.000000          200.0     564342.472348    5.787412e-19            5.787412e-19           100.0      137.333333                0.0  383679.662155   93.000000           1.0             0.0      93.000000  564435.472348       0.0
2      564635.472348  200093.000000          200.0     564441.472348    5.787412e-19            5.787412e-19           100.0      137.333333                0.0  383679.662155  194.000000           0.0           100.0      94.000000  564535.472348       0.0
3      564835.472348  200194.000000          200.0     564631.472348    5.787412e-19            5.787412e-19           100.0      137.333333                0.0  383679.662155  204.000000           0.0           200.0       4.000000  564635.472348       1.0
4      565035.472348  200204.000000          200.0     564735.472348    5.787412e-19            5.787412e-19           100.0      137.333333                0.0  383679.662155  300.000000           0.0           300.0       0.000000  564735.472348       1.0
5      565235.472348  200300.000000          200.0     564735.472348    5.787412e-19            5.787412e-19           100.0      137.333333                0.0  383679.662155  500.000000           0.0           400.0     100.000000  564835.472348       1.0
6      565435.472348  200500.000000          200.0     564897.139014    5.787412e-19            5.787412e-19           100.0      137.333333                1.0  383679.662155  538.333333           1.0           500.0      38.333333  564935.472348       2.0
7      565635.472348  200538.333333          200.0     565035.472348    5.787412e-19            5.787412e-19           100.0      137.333333                2.0  383679.662155  600.000000           1.0           600.0       0.000000  565035.472348       3.0
8      565835.472348  200600.000000          200.0     565035.472348    5.787412e-19            5.787412e-19           100.0      137.333333                2.0  383679.662155  800.000000           1.0           700.0     100.000000  565135.472348       3.0
9      566035.472348  200800.000000          200.0     565173.805681    5.787412e-19            5.787412e-19           100.0      137.333333                3.0  383679.662155  861.666667           1.0           800.0      61.666667  565235.472348       4.0
10     566235.472348  200861.666667          200.0     565312.139014    5.787412e-19            5.787412e-19           100.0      137.333333                3.0  383679.662155  923.333333           1.0           900.0      23.333333  565335.472348       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=8/3, buf_size=901, start_state=[0].[0m
[02/06 16:32:32]  --------------------------------------------------------------------------------
[02/06 16:32:32]  Iteration: 52 (21 solution, 30 counterexamples)
[02/06 16:32:35]  Generator returned sat in 0.028666 secs.
[02/06 16:32:35]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:34:41]  Verifer returned unsat in 125.468259 secs.
[02/06 16:34:41]  sf_get_cex returned in 125.691576 secs.
[02/06 16:34:41]  Proved solution: 
[1m[92mif (+ 3/2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:34:41]  --------------------------------------------------------------------------------
[02/06 16:34:41]  Iteration: 53 (22 solution, 30 counterexamples)
[02/06 16:34:44]  Generator returned sat in 0.009243 secs.
[02/06 16:34:44]  Candidate solution: 
[1m[94mif (+ 1min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:36:29]  Verifer returned unsat in 104.913554 secs.
[02/06 16:36:30]  sf_get_cex returned in 105.140596 secs.
[02/06 16:36:30]  Proved solution: 
[1m[92mif (+ 1min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:36:30]  --------------------------------------------------------------------------------
[02/06 16:36:30]  Iteration: 54 (23 solution, 30 counterexamples)
[02/06 16:36:33]  Generator returned sat in 0.007482 secs.
[02/06 16:36:33]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:41:04]  Verifer returned unsat in 270.728583 secs.
[02/06 16:41:04]  sf_get_cex returned in 271.001251 secs.
[02/06 16:41:04]  Proved solution: 
[1m[92mif (+ 1/2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:41:04]  --------------------------------------------------------------------------------
[02/06 16:41:04]  Iteration: 55 (24 solution, 30 counterexamples)
[02/06 16:41:08]  Generator returned sat in 0.007224 secs.
[02/06 16:41:08]  Candidate solution: 
[1m[94mif (+ -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:55:03]  Verifer returned unsat in 835.518647 secs.
[02/06 16:55:04]  sf_get_cex returned in 835.794798 secs.
[02/06 16:55:04]  Proved solution: 
[1m[92mif (+ -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:55:04]  --------------------------------------------------------------------------------
[02/06 16:55:04]  Iteration: 56 (25 solution, 30 counterexamples)
[02/06 16:55:07]  Generator returned sat in 0.007706 secs.
[02/06 16:55:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:56:53]  Verifer returned unsat in 106.425718 secs.
[02/06 16:56:53]  sf_get_cex returned in 106.637153 secs.
[02/06 16:56:53]  Proved solution: 
[1m[92mif (+ 1min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:56:53]  --------------------------------------------------------------------------------
[02/06 16:56:53]  Iteration: 57 (26 solution, 30 counterexamples)
[02/06 16:56:57]  Generator returned sat in 0.007633 secs.
[02/06 16:56:57]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:58:58]  Verifer returned unsat in 120.619002 secs.
[02/06 16:58:58]  sf_get_cex returned in 120.849842 secs.
[02/06 16:58:58]  Proved solution: 
[1m[92mif (+ 1/2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 16:58:58]  --------------------------------------------------------------------------------
[02/06 16:58:58]  Iteration: 58 (27 solution, 30 counterexamples)
[02/06 16:59:01]  Generator returned sat in 0.007336 secs.
[02/06 16:59:01]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 17:07:36]  Verifer returned unsat in 515.058335 secs.
[02/06 17:07:36]  sf_get_cex returned in 515.375322 secs.
[02/06 17:07:36]  Proved solution: 
[1m[92mif (+ 3/2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 17:07:36]  --------------------------------------------------------------------------------
[02/06 17:07:36]  Iteration: 59 (28 solution, 30 counterexamples)
[02/06 17:07:40]  Generator returned sat in 0.007336 secs.
[02/06 17:07:40]  Candidate solution: 
[1m[94mif (+ 2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 17:22:51]  Verifer returned unsat in 910.699124 secs.
[02/06 17:22:51]  sf_get_cex returned in 911.025375 secs.
[02/06 17:22:51]  Proved solution: 
[1m[92mif (+ 2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 17:22:51]  --------------------------------------------------------------------------------
[02/06 17:22:51]  Iteration: 60 (29 solution, 30 counterexamples)
[02/06 17:22:54]  Generator returned sat in 0.007282 secs.
[02/06 17:22:54]  Candidate solution: 
[1m[94mif (+ -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 17:30:08]  Verifer returned unsat in 433.381739 secs.
[02/06 17:30:08]  sf_get_cex returned in 433.655804 secs.
[02/06 17:30:08]  Proved solution: 
[1m[92mif (+ -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 17:30:08]  --------------------------------------------------------------------------------
[02/06 17:30:08]  Iteration: 61 (30 solution, 30 counterexamples)
[02/06 17:30:11]  Generator returned sat in 0.007818 secs.
[02/06 17:30:11]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:00:00]  Verifer returned unsat in 1789.157054 secs.
[02/06 18:00:01]  sf_get_cex returned in 1789.487177 secs.
[02/06 18:00:01]  Proved solution: 
[1m[92mif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:00:01]  --------------------------------------------------------------------------------
[02/06 18:00:01]  Iteration: 62 (31 solution, 30 counterexamples)
[02/06 18:00:04]  Generator returned sat in 0.008679 secs.
[02/06 18:00:04]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:01:19]  Verifer returned unsat in 74.987074 secs.
[02/06 18:01:19]  sf_get_cex returned in 75.221129 secs.
[02/06 18:01:19]  Proved solution: 
[1m[92mif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:01:19]  --------------------------------------------------------------------------------
[02/06 18:01:19]  Iteration: 63 (32 solution, 30 counterexamples)
[02/06 18:01:22]  Generator returned sat in 0.007315 secs.
[02/06 18:01:22]  Candidate solution: 
[1m[94mif (+ -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:03:09]  Verifer returned unsat in 105.945646 secs.
[02/06 18:03:09]  sf_get_cex returned in 106.184311 secs.
[02/06 18:03:09]  Proved solution: 
[1m[92mif (+ -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:03:09]  --------------------------------------------------------------------------------
[02/06 18:03:09]  Iteration: 64 (33 solution, 30 counterexamples)
[02/06 18:03:12]  Generator returned sat in 0.008120 secs.
[02/06 18:03:12]  Candidate solution: 
[1m[94mif (+ -1min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:17:10]  Verifer returned unsat in 838.410884 secs.
[02/06 18:17:11]  sf_get_cex returned in 838.752792 secs.
[02/06 18:17:11]  Proved solution: 
[1m[92mif (+ -1min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:17:11]  --------------------------------------------------------------------------------
[02/06 18:17:11]  Iteration: 65 (34 solution, 30 counterexamples)
[02/06 18:17:14]  Generator returned sat in 0.006992 secs.
[02/06 18:17:14]  Candidate solution: 
[1m[94mif (+ -1min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:19:32]  Verifer returned unsat in 137.299361 secs.
[02/06 18:19:32]  sf_get_cex returned in 137.600369 secs.
[02/06 18:19:32]  Proved solution: 
[1m[92mif (+ -1min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:19:32]  --------------------------------------------------------------------------------
[02/06 18:19:32]  Iteration: 66 (35 solution, 30 counterexamples)
[02/06 18:19:35]  Generator returned sat in 0.007271 secs.
[02/06 18:19:35]  Candidate solution: 
[1m[94mif (+ -1min_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:21:27]  Verifer returned unsat in 111.480056 secs.
[02/06 18:21:27]  sf_get_cex returned in 111.742491 secs.
[02/06 18:21:27]  Proved solution: 
[1m[92mif (+ -1min_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:21:27]  --------------------------------------------------------------------------------
[02/06 18:21:27]  Iteration: 67 (36 solution, 30 counterexamples)
[02/06 18:21:30]  Generator returned sat in 0.008011 secs.
[02/06 18:21:30]  Candidate solution: 
[1m[94mif (+ -3/2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:49:24]  Verifer returned unsat in 1674.169758 secs.
[02/06 18:49:25]  sf_get_cex returned in 1674.548898 secs.
[02/06 18:49:25]  Proved solution: 
[1m[92mif (+ -3/2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:49:25]  --------------------------------------------------------------------------------
[02/06 18:49:25]  Iteration: 68 (37 solution, 30 counterexamples)
[02/06 18:49:28]  Generator returned sat in 0.008136 secs.
[02/06 18:49:28]  Candidate solution: 
[1m[94mif (+ -3/2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:53:35]  Verifer returned unsat in 247.089097 secs.
[02/06 18:53:36]  sf_get_cex returned in 247.389840 secs.
[02/06 18:53:36]  Proved solution: 
[1m[92mif (+ -3/2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:53:36]  --------------------------------------------------------------------------------
[02/06 18:53:36]  Iteration: 69 (38 solution, 30 counterexamples)
[02/06 18:53:39]  Generator returned sat in 0.006966 secs.
[02/06 18:53:39]  Candidate solution: 
[1m[94mif (+ -3/2min_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:58:14]  Verifer returned unsat in 275.393747 secs.
[02/06 18:58:14]  sf_get_cex returned in 275.671238 secs.
[02/06 18:58:14]  Proved solution: 
[1m[92mif (+ -3/2min_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:58:14]  --------------------------------------------------------------------------------
[02/06 18:58:14]  Iteration: 70 (39 solution, 30 counterexamples)
[02/06 18:58:18]  Generator returned sat in 0.008157 secs.
[02/06 18:58:18]  Candidate solution: 
[1m[94mif (+ -1/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:59:59]  Verifer returned unsat in 101.398113 secs.
[02/06 18:59:59]  sf_get_cex returned in 101.668496 secs.
[02/06 18:59:59]  Proved solution: 
[1m[92mif (+ -1/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 18:59:59]  --------------------------------------------------------------------------------
[02/06 18:59:59]  Iteration: 71 (40 solution, 30 counterexamples)
[02/06 19:00:03]  Generator returned sat in 0.009194 secs.
[02/06 19:00:03]  Candidate solution: 
[1m[94mif (+ -2min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 19:06:39]  Verifer returned unsat in 396.587480 secs.
[02/06 19:06:40]  sf_get_cex returned in 397.032311 secs.
[02/06 19:06:40]  Proved solution: 
[1m[92mif (+ -2min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 19:06:40]  --------------------------------------------------------------------------------
[02/06 19:06:40]  Iteration: 72 (41 solution, 30 counterexamples)
[02/06 19:06:43]  Generator returned sat in 0.008049 secs.
[02/06 19:06:43]  Candidate solution: 
[1m[94mif (+ -2min_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 19:09:15]  Verifer returned unsat in 151.437589 secs.
[02/06 19:09:15]  sf_get_cex returned in 151.753745 secs.
[02/06 19:09:15]  Proved solution: 
[1m[92mif (+ -2min_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 19:09:15]  --------------------------------------------------------------------------------
[02/06 19:09:15]  Iteration: 73 (42 solution, 30 counterexamples)
[02/06 19:09:18]  Generator returned sat in 0.010702 secs.
[02/06 19:09:19]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 19:20:59]  Verifer returned unsat in 700.820529 secs.
[02/06 19:21:00]  sf_get_cex returned in 701.091188 secs.
[02/06 19:21:00]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 19:21:00]  --------------------------------------------------------------------------------
[02/06 19:21:00]  Iteration: 74 (43 solution, 30 counterexamples)
[02/06 19:21:03]  Generator returned sat in 0.008439 secs.
[02/06 19:21:03]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 19:24:26]  Verifer returned sat in 202.927945 secs.
[02/06 19:24:26]  sf_get_cex returned in 203.214392 secs.
[02/06 19:24:26]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0      -2.378020e+06       1.000000       1.000000     -2.378021e+06        0.000000                0.000000       91.170099       117.14296                0.0   383746.74798    0.530172          -1.0      -99.469828     100.000000 -2.377921e+06       0.0
1      -2.377838e+06  182340.728129     182.340198     -2.377838e+06        0.000000                0.000000       91.170099       117.14296                0.0   383763.87761    0.530172           0.0        0.000000       0.530172 -2.377838e+06       0.0
2      -2.377656e+06  182340.728129     182.340198     -2.377838e+06       62.340198                0.000000       91.170099       117.14296                0.0   383763.87761  120.000000           0.0       20.000000     100.000000 -2.377738e+06       1.0
3      -2.377473e+06  182522.538155     182.340198     -2.377738e+06      144.680396               62.340198       91.170099       117.14296                0.0   383763.87761  120.000000           1.0       20.000000     100.000000 -2.377638e+06       1.0
4      -2.377291e+06  182604.878352     182.340198     -2.377618e+06      227.020594              144.680396       91.170099       117.14296                0.0   383763.87761   99.954023           1.0       20.000000      79.954023 -2.377538e+06       0.0
5      -2.377109e+06  182667.172573     182.340198     -2.377518e+06      309.360792              227.020594       91.170099       117.14296                0.0   383763.87761   99.954023           1.0       20.000000      79.954023 -2.377438e+06       0.0
6      -2.376926e+06  182749.512771     182.340198     -2.377418e+06      391.700990              309.360792       91.170099       117.14296                0.0   383763.87761   99.954023           1.0       20.000000      79.954023 -2.377338e+06       0.0
7      -2.376744e+06  182831.852969     182.340198     -2.377318e+06      474.041188              391.700990       91.170099       117.14296                0.0   383763.87761   99.954023           1.0       20.000000      79.954023 -2.377238e+06       0.0
8      -2.376561e+06  182914.193167     182.340198     -2.377218e+06      556.381386              474.041188       91.170099       117.14296                0.0   383763.87761   99.954023           1.0       20.000000      79.954023 -2.377138e+06       0.0
9      -2.376379e+06  182996.533365     182.340198     -2.377118e+06      638.721584              556.381386       91.170099       117.14296                0.0   383763.87761   99.954023           1.0       20.000000      79.954023 -2.377038e+06       0.0
10     -2.376197e+06  183078.873563     182.340198     -2.377018e+06      721.061782              638.721584       91.170099       117.14296                0.0   383763.87761   99.999282           1.0       20.000000      79.999282 -2.376938e+06       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=9, 
, large_loss_count=8, loss_amount=501859/696, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1736/87, buf_size=20, start_state=[0].[0m
[02/06 19:24:26]  --------------------------------------------------------------------------------
[02/06 19:24:26]  Iteration: 75 (43 solution, 31 counterexamples)
[02/06 19:24:30]  Generator returned sat in 0.019766 secs.
[02/06 19:24:30]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 19:26:10]  Verifer returned unsat in 99.763059 secs.
[02/06 19:26:10]  sf_get_cex returned in 100.022779 secs.
[02/06 19:26:10]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 19:26:10]  --------------------------------------------------------------------------------
[02/06 19:26:10]  Iteration: 76 (44 solution, 31 counterexamples)
[02/06 19:26:13]  Generator returned sat in 0.011733 secs.
[02/06 19:26:13]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 19:38:12]  Verifer returned unsat in 718.572080 secs.
[02/06 19:38:12]  sf_get_cex returned in 718.945046 secs.
[02/06 19:38:12]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 19:38:12]  --------------------------------------------------------------------------------
[02/06 19:38:12]  Iteration: 77 (45 solution, 31 counterexamples)
[02/06 19:38:15]  Generator returned sat in 0.007338 secs.
[02/06 19:38:15]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 19:43:40]  Verifer returned unsat in 324.724326 secs.
[02/06 19:43:40]  sf_get_cex returned in 325.063616 secs.
[02/06 19:43:40]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 19:43:40]  --------------------------------------------------------------------------------
[02/06 19:43:40]  Iteration: 78 (46 solution, 31 counterexamples)
[02/06 19:43:44]  Generator returned sat in 0.010844 secs.
[02/06 19:43:44]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 20:07:09]  Verifer returned unsat in 1404.841884 secs.
[02/06 20:07:09]  sf_get_cex returned in 1405.271580 secs.
[02/06 20:07:09]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/06 20:07:09]  --------------------------------------------------------------------------------
[02/06 20:07:09]  Iteration: 79 (47 solution, 31 counterexamples)
[02/06 20:07:13]  Generator returned sat in 0.007105 secs.
[02/06 20:07:13]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 20:17:24]  Verifer returned unsat in 610.739437 secs.
[02/06 20:17:24]  sf_get_cex returned in 611.102962 secs.
[02/06 20:17:24]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 20:17:24]  --------------------------------------------------------------------------------
[02/06 20:17:24]  Iteration: 80 (48 solution, 31 counterexamples)
[02/06 20:17:27]  Generator returned sat in 0.010345 secs.
[02/06 20:17:27]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:19:29]  Verifer returned unsat in 121.104194 secs.
[02/06 20:19:29]  sf_get_cex returned in 121.358227 secs.
[02/06 20:19:29]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:19:29]  --------------------------------------------------------------------------------
[02/06 20:19:29]  Iteration: 81 (49 solution, 31 counterexamples)
[02/06 20:19:32]  Generator returned sat in 0.012641 secs.
[02/06 20:19:32]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:21:12]  Verifer returned unsat in 99.461158 secs.
[02/06 20:21:12]  sf_get_cex returned in 99.736771 secs.
[02/06 20:21:12]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:21:12]  --------------------------------------------------------------------------------
[02/06 20:21:12]  Iteration: 82 (50 solution, 31 counterexamples)
[02/06 20:21:15]  Generator returned sat in 0.007607 secs.
[02/06 20:21:15]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:36:15]  Verifer returned unsat in 899.816015 secs.
[02/06 20:36:16]  sf_get_cex returned in 900.251806 secs.
[02/06 20:36:16]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:36:16]  --------------------------------------------------------------------------------
[02/06 20:36:16]  Iteration: 83 (51 solution, 31 counterexamples)
[02/06 20:36:19]  Generator returned sat in 0.008672 secs.
[02/06 20:36:19]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:44:50]  Verifer returned unsat in 511.178755 secs.
[02/06 20:44:51]  sf_get_cex returned in 511.588683 secs.
[02/06 20:44:51]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:44:51]  --------------------------------------------------------------------------------
[02/06 20:44:51]  Iteration: 84 (52 solution, 31 counterexamples)
[02/06 20:44:54]  Generator returned sat in 0.007408 secs.
[02/06 20:44:54]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:49:32]  Verifer returned unsat in 278.295642 secs.
[02/06 20:49:33]  sf_get_cex returned in 278.624441 secs.
[02/06 20:49:33]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:49:33]  --------------------------------------------------------------------------------
[02/06 20:49:33]  Iteration: 85 (53 solution, 31 counterexamples)
[02/06 20:49:36]  Generator returned sat in 0.007416 secs.
[02/06 20:49:36]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:53:09]  Verifer returned unsat in 212.690492 secs.
[02/06 20:53:09]  sf_get_cex returned in 213.096882 secs.
[02/06 20:53:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:53:09]  --------------------------------------------------------------------------------
[02/06 20:53:09]  Iteration: 86 (54 solution, 31 counterexamples)
[02/06 20:53:13]  Generator returned sat in 0.007346 secs.
[02/06 20:53:13]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:54:48]  Verifer returned unsat in 95.558338 secs.
[02/06 20:54:48]  sf_get_cex returned in 95.863705 secs.
[02/06 20:54:48]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:54:48]  --------------------------------------------------------------------------------
[02/06 20:54:48]  Iteration: 87 (55 solution, 31 counterexamples)
[02/06 20:54:52]  Generator returned sat in 0.007420 secs.
[02/06 20:54:52]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:57:06]  Verifer returned unsat in 134.282753 secs.
[02/06 20:57:06]  sf_get_cex returned in 134.599173 secs.
[02/06 20:57:06]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 20:57:06]  --------------------------------------------------------------------------------
[02/06 20:57:06]  Iteration: 88 (56 solution, 31 counterexamples)
[02/06 20:57:10]  Generator returned sat in 0.011235 secs.
[02/06 20:57:10]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:11:50]  Verifer returned unsat in 880.367185 secs.
[02/06 21:11:51]  sf_get_cex returned in 880.804156 secs.
[02/06 21:11:51]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:11:51]  --------------------------------------------------------------------------------
[02/06 21:11:51]  Iteration: 89 (57 solution, 31 counterexamples)
[02/06 21:11:54]  Generator returned sat in 0.009570 secs.
[02/06 21:11:54]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:13:34]  Verifer returned unsat in 99.578134 secs.
[02/06 21:13:34]  sf_get_cex returned in 99.908020 secs.
[02/06 21:13:34]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:13:34]  --------------------------------------------------------------------------------
[02/06 21:13:34]  Iteration: 90 (58 solution, 31 counterexamples)
[02/06 21:13:37]  Generator returned sat in 0.007070 secs.
[02/06 21:13:37]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:14:58]  Verifer returned unsat in 80.625592 secs.
[02/06 21:14:58]  sf_get_cex returned in 80.874313 secs.
[02/06 21:14:58]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:14:58]  --------------------------------------------------------------------------------
[02/06 21:14:58]  Iteration: 91 (59 solution, 31 counterexamples)
[02/06 21:15:02]  Generator returned sat in 0.008146 secs.
[02/06 21:15:02]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:17:26]  Verifer returned unsat in 143.907994 secs.
[02/06 21:17:26]  sf_get_cex returned in 144.176011 secs.
[02/06 21:17:26]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:17:26]  --------------------------------------------------------------------------------
[02/06 21:17:26]  Iteration: 92 (60 solution, 31 counterexamples)
[02/06 21:17:29]  Generator returned sat in 0.007222 secs.
[02/06 21:17:29]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:19:05]  Verifer returned unsat in 95.966391 secs.
[02/06 21:19:06]  sf_get_cex returned in 96.250588 secs.
[02/06 21:19:06]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:19:06]  --------------------------------------------------------------------------------
[02/06 21:19:06]  Iteration: 93 (61 solution, 31 counterexamples)
[02/06 21:19:09]  Generator returned sat in 0.008043 secs.
[02/06 21:19:09]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:22:21]  Verifer returned unsat in 192.099469 secs.
[02/06 21:22:21]  sf_get_cex returned in 192.433648 secs.
[02/06 21:22:21]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:22:21]  --------------------------------------------------------------------------------
[02/06 21:22:21]  Iteration: 94 (62 solution, 31 counterexamples)
[02/06 21:22:25]  Generator returned sat in 0.007371 secs.
[02/06 21:22:25]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:24:21]  Verifer returned unsat in 115.646886 secs.
[02/06 21:24:21]  sf_get_cex returned in 115.952065 secs.
[02/06 21:24:21]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:24:21]  --------------------------------------------------------------------------------
[02/06 21:24:21]  Iteration: 95 (63 solution, 31 counterexamples)
[02/06 21:24:24]  Generator returned sat in 0.007302 secs.
[02/06 21:24:24]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:40:12]  Verifer returned unsat in 947.141944 secs.
[02/06 21:40:12]  sf_get_cex returned in 947.587049 secs.
[02/06 21:40:12]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:40:12]  --------------------------------------------------------------------------------
[02/06 21:40:12]  Iteration: 96 (64 solution, 31 counterexamples)
[02/06 21:40:15]  Generator returned sat in 0.007318 secs.
[02/06 21:40:16]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:41:47]  Verifer returned unsat in 91.430973 secs.
[02/06 21:41:47]  sf_get_cex returned in 91.773368 secs.
[02/06 21:41:47]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:41:47]  --------------------------------------------------------------------------------
[02/06 21:41:47]  Iteration: 97 (65 solution, 31 counterexamples)
[02/06 21:41:51]  Generator returned sat in 0.008231 secs.
[02/06 21:41:51]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:52:59]  Verifer returned unsat in 667.499897 secs.
[02/06 21:52:59]  sf_get_cex returned in 667.970188 secs.
[02/06 21:52:59]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/06 21:52:59]  --------------------------------------------------------------------------------
[02/06 21:52:59]  Iteration: 98 (66 solution, 31 counterexamples)
[02/06 21:53:02]  Generator returned sat in 0.009912 secs.
[02/06 21:53:02]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 21:56:36]  Verifer returned unsat in 213.293941 secs.
[02/06 21:56:36]  sf_get_cex returned in 213.579619 secs.
[02/06 21:56:36]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 21:56:36]  --------------------------------------------------------------------------------
[02/06 21:56:36]  Iteration: 99 (67 solution, 31 counterexamples)
[02/06 21:56:39]  Generator returned sat in 0.008072 secs.
[02/06 21:56:39]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:02:04]  Verifer returned unsat in 324.411077 secs.
[02/06 22:02:04]  sf_get_cex returned in 324.690794 secs.
[02/06 22:02:04]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:02:04]  --------------------------------------------------------------------------------
[02/06 22:02:04]  Iteration: 100 (68 solution, 31 counterexamples)
[02/06 22:02:08]  Generator returned sat in 0.007544 secs.
[02/06 22:02:08]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:03:22]  Solver threw error after 73.879259 secs on attempt 1.
[02/06 22:03:22]  b'max. memory exceeded'
[02/06 22:03:22]  Recreating and restarting solver
[02/06 22:06:05]  Solver returned in 237.116199 secs.
[02/06 22:06:05]  Verifer returned unsat in 237.116621 secs.
[02/06 22:06:05]  sf_get_cex returned in 237.243072 secs.
[02/06 22:06:05]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:06:05]  --------------------------------------------------------------------------------
[02/06 22:06:05]  Iteration: 101 (69 solution, 31 counterexamples)
[02/06 22:06:08]  Generator returned sat in 0.009154 secs.
[02/06 22:06:08]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:17:17]  Verifer returned unsat in 667.951129 secs.
[02/06 22:17:17]  sf_get_cex returned in 668.084962 secs.
[02/06 22:17:17]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:17:17]  --------------------------------------------------------------------------------
[02/06 22:17:17]  Iteration: 102 (70 solution, 31 counterexamples)
[02/06 22:17:20]  Generator returned sat in 0.008704 secs.
[02/06 22:17:20]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:34:04]  Verifer returned unsat in 1003.711903 secs.
[02/06 22:34:04]  sf_get_cex returned in 1003.864928 secs.
[02/06 22:34:04]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 22:34:04]  --------------------------------------------------------------------------------
[02/06 22:34:04]  Iteration: 103 (71 solution, 31 counterexamples)
[02/06 22:34:08]  Generator returned sat in 0.009808 secs.
[02/06 22:34:08]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 22:52:10]  Verifer returned unsat in 1082.668634 secs.
[02/06 22:52:11]  sf_get_cex returned in 1082.824337 secs.
[02/06 22:52:11]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 22:52:11]  --------------------------------------------------------------------------------
[02/06 22:52:11]  Iteration: 104 (72 solution, 31 counterexamples)
[02/06 22:52:14]  Generator returned sat in 0.010291 secs.
[02/06 22:52:14]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 22:59:53]  Verifer returned unsat in 458.417234 secs.
[02/06 22:59:53]  sf_get_cex returned in 458.596143 secs.
[02/06 22:59:53]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 22:59:53]  --------------------------------------------------------------------------------
[02/06 22:59:53]  Iteration: 105 (73 solution, 31 counterexamples)
[02/06 22:59:56]  Generator returned sat in 0.010185 secs.
[02/06 22:59:56]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:06:14]  Verifer returned unsat in 377.135920 secs.
[02/06 23:06:14]  sf_get_cex returned in 377.286402 secs.
[02/06 23:06:14]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:06:14]  --------------------------------------------------------------------------------
[02/06 23:06:14]  Iteration: 106 (74 solution, 31 counterexamples)
[02/06 23:06:17]  Generator returned sat in 0.008749 secs.
[02/06 23:06:17]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:09:22]  Verifer returned unsat in 184.645539 secs.
[02/06 23:09:22]  sf_get_cex returned in 184.794503 secs.
[02/06 23:09:22]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:09:22]  --------------------------------------------------------------------------------
[02/06 23:09:22]  Iteration: 107 (75 solution, 31 counterexamples)
[02/06 23:09:26]  Generator returned sat in 0.009154 secs.
[02/06 23:09:26]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:11:10]  Verifer returned unsat in 104.041768 secs.
[02/06 23:11:10]  sf_get_cex returned in 104.180006 secs.
[02/06 23:11:10]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:11:10]  --------------------------------------------------------------------------------
[02/06 23:11:10]  Iteration: 108 (76 solution, 31 counterexamples)
[02/06 23:11:13]  Generator returned sat in 0.009681 secs.
[02/06 23:11:13]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:13:57]  Verifer returned unsat in 163.042055 secs.
[02/06 23:13:57]  sf_get_cex returned in 163.182832 secs.
[02/06 23:13:57]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:13:57]  --------------------------------------------------------------------------------
[02/06 23:13:57]  Iteration: 109 (77 solution, 31 counterexamples)
[02/06 23:14:00]  Generator returned sat in 0.008778 secs.
[02/06 23:14:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:15:44]  Verifer returned unsat in 103.368178 secs.
[02/06 23:15:44]  sf_get_cex returned in 103.520584 secs.
[02/06 23:15:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:15:44]  --------------------------------------------------------------------------------
[02/06 23:15:44]  Iteration: 110 (78 solution, 31 counterexamples)
[02/06 23:15:47]  Generator returned sat in 0.008691 secs.
[02/06 23:15:47]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:17:04]  Verifer returned unsat in 76.593376 secs.
[02/06 23:17:04]  sf_get_cex returned in 76.729754 secs.
[02/06 23:17:04]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:17:04]  --------------------------------------------------------------------------------
[02/06 23:17:04]  Iteration: 111 (79 solution, 31 counterexamples)
[02/06 23:17:08]  Generator returned sat in 0.009115 secs.
[02/06 23:17:08]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:18:41]  Verifer returned unsat in 93.491992 secs.
[02/06 23:18:41]  sf_get_cex returned in 93.631948 secs.
[02/06 23:18:41]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/06 23:18:41]  --------------------------------------------------------------------------------
[02/06 23:18:41]  Iteration: 112 (80 solution, 31 counterexamples)
[02/06 23:18:45]  Generator returned sat in 0.009172 secs.
[02/06 23:18:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 23:46:17]  Verifer returned unsat in 1652.629120 secs.
[02/06 23:46:18]  sf_get_cex returned in 1652.819919 secs.
[02/06 23:46:18]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 23:46:18]  --------------------------------------------------------------------------------
[02/06 23:46:18]  Iteration: 113 (81 solution, 31 counterexamples)
[02/06 23:46:21]  Generator returned sat in 0.010772 secs.
[02/06 23:46:21]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 23:59:09]  Verifer returned unsat in 767.459206 secs.
[02/06 23:59:09]  sf_get_cex returned in 767.741541 secs.
[02/06 23:59:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/06 23:59:09]  --------------------------------------------------------------------------------
[02/06 23:59:09]  Iteration: 114 (82 solution, 31 counterexamples)
[02/06 23:59:12]  Generator returned sat in 0.009303 secs.
[02/06 23:59:12]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 00:04:54]  Verifer returned unsat in 341.832484 secs.
[02/07 00:04:54]  sf_get_cex returned in 342.014042 secs.
[02/07 00:04:54]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 00:04:54]  --------------------------------------------------------------------------------
[02/07 00:04:54]  Iteration: 115 (83 solution, 31 counterexamples)
[02/07 00:04:58]  Generator returned sat in 0.009071 secs.
[02/07 00:04:58]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 00:07:40]  Verifer returned unsat in 161.607290 secs.
[02/07 00:07:40]  sf_get_cex returned in 161.774769 secs.
[02/07 00:07:40]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 00:07:40]  --------------------------------------------------------------------------------
[02/07 00:07:40]  Iteration: 116 (84 solution, 31 counterexamples)
[02/07 00:07:43]  Generator returned sat in 0.009010 secs.
[02/07 00:07:43]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 00:21:15]  Verifer returned unsat in 811.347202 secs.
[02/07 00:21:15]  sf_get_cex returned in 811.544160 secs.
[02/07 00:21:15]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 00:21:15]  --------------------------------------------------------------------------------
[02/07 00:21:15]  Iteration: 117 (85 solution, 31 counterexamples)
[02/07 00:21:18]  Generator returned sat in 0.011238 secs.
[02/07 00:21:18]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:08:56]  Verifer returned unsat in 2857.558347 secs.
[02/07 01:08:56]  sf_get_cex returned in 2857.774938 secs.
[02/07 01:08:56]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:08:56]  --------------------------------------------------------------------------------
[02/07 01:08:56]  Iteration: 118 (86 solution, 31 counterexamples)
[02/07 01:08:59]  Generator returned sat in 0.008559 secs.
[02/07 01:08:59]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:11:56]  Verifer returned unsat in 176.960282 secs.
[02/07 01:11:57]  sf_get_cex returned in 177.107991 secs.
[02/07 01:11:57]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:11:57]  --------------------------------------------------------------------------------
[02/07 01:11:57]  Iteration: 119 (87 solution, 31 counterexamples)
[02/07 01:12:00]  Generator returned sat in 0.008497 secs.
[02/07 01:12:00]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:13:57]  Verifer returned unsat in 117.257692 secs.
[02/07 01:13:57]  sf_get_cex returned in 117.386456 secs.
[02/07 01:13:57]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:13:57]  --------------------------------------------------------------------------------
[02/07 01:13:57]  Iteration: 120 (88 solution, 31 counterexamples)
[02/07 01:14:00]  Generator returned sat in 0.008564 secs.
[02/07 01:14:00]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:28:51]  Verifer returned unsat in 890.315146 secs.
[02/07 01:28:51]  sf_get_cex returned in 890.505147 secs.
[02/07 01:28:51]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 01:28:51]  --------------------------------------------------------------------------------
[02/07 01:28:51]  Iteration: 121 (89 solution, 31 counterexamples)
[02/07 01:28:54]  Generator returned sat in 0.009262 secs.
[02/07 01:28:54]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:34:50]  Verifer returned unsat in 356.381312 secs.
[02/07 01:34:50]  sf_get_cex returned in 356.564537 secs.
[02/07 01:34:50]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:34:50]  --------------------------------------------------------------------------------
[02/07 01:34:50]  Iteration: 122 (90 solution, 31 counterexamples)
[02/07 01:34:54]  Generator returned sat in 0.008860 secs.
[02/07 01:34:54]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:36:52]  Verifer returned unsat in 118.087080 secs.
[02/07 01:36:52]  sf_get_cex returned in 118.246242 secs.
[02/07 01:36:52]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:36:52]  --------------------------------------------------------------------------------
[02/07 01:36:52]  Iteration: 123 (91 solution, 31 counterexamples)
[02/07 01:36:55]  Generator returned sat in 0.008955 secs.
[02/07 01:36:55]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:38:27]  Verifer returned unsat in 91.466391 secs.
[02/07 01:38:27]  sf_get_cex returned in 91.655437 secs.
[02/07 01:38:27]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:38:27]  --------------------------------------------------------------------------------
[02/07 01:38:27]  Iteration: 124 (92 solution, 31 counterexamples)
[02/07 01:38:30]  Generator returned sat in 0.008901 secs.
[02/07 01:38:30]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:40:04]  Verifer returned unsat in 93.372455 secs.
[02/07 01:40:04]  sf_get_cex returned in 93.527601 secs.
[02/07 01:40:04]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 01:40:04]  --------------------------------------------------------------------------------
[02/07 01:40:04]  Iteration: 125 (93 solution, 31 counterexamples)
[02/07 01:40:07]  Generator returned sat in 0.010904 secs.
[02/07 01:40:07]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 01:41:42]  Verifer returned unsat in 94.842204 secs.
[02/07 01:41:42]  sf_get_cex returned in 94.987703 secs.
[02/07 01:41:42]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 01:41:42]  --------------------------------------------------------------------------------
[02/07 01:41:42]  Iteration: 126 (94 solution, 31 counterexamples)
[02/07 01:41:45]  Generator returned sat in 0.015065 secs.
[02/07 01:41:45]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 01:53:53]  Verifer returned unsat in 728.159385 secs.
[02/07 01:53:54]  sf_get_cex returned in 728.379349 secs.
[02/07 01:53:54]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 01:53:54]  --------------------------------------------------------------------------------
[02/07 01:53:54]  Iteration: 127 (95 solution, 31 counterexamples)
[02/07 01:53:57]  Generator returned sat in 0.009831 secs.
[02/07 01:53:57]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:04:39]  Verifer returned unsat in 642.315476 secs.
[02/07 02:04:39]  sf_get_cex returned in 642.539961 secs.
[02/07 02:04:39]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:04:39]  --------------------------------------------------------------------------------
[02/07 02:04:39]  Iteration: 128 (96 solution, 31 counterexamples)
[02/07 02:04:43]  Generator returned sat in 0.009120 secs.
[02/07 02:04:43]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:05:36]  Verifer returned sat in 53.532581 secs.
[02/07 02:05:36]  sf_get_cex returned in 53.685347 secs.
[02/07 02:05:36]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t      queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      820920.065021       1.000000            1.0     819920.165021        0.066667                0.000000           100.0      112.466667                9.0 -771047.046575   999.833333          -1.0           900.0      99.833333  820019.998354      10.0
1      821020.065021  100999.900000          100.0     820069.998354        0.066667                0.066667           100.0      112.466667                8.0 -771047.046575   950.000000           1.0           900.0      50.000000  820119.998354       9.0
2      821120.065021  100950.066667          100.0     820182.498354        0.066667                0.066667           100.0      112.466667                9.0 -771047.046575   937.500000           1.0           900.0      37.500000  820219.998354      10.0
3      821220.065021  100937.566667          100.0     820294.998354        0.066667                0.066667           100.0      112.466667                8.0 -771047.046575   925.000000           1.0           900.0      25.000000  820319.998354       9.0
4      821320.065021  100925.066667          100.0     820320.031688        0.066667                0.066667           100.0      112.466667                5.0 -771047.046575   999.966667           1.0           900.0      99.966667  820419.998354       6.0
5      821420.065021  101000.033333          100.0     820519.965021        0.066667                0.066667           100.0      112.466667                5.0 -771047.046575   900.033333           1.0           900.0       0.033333  820519.998354       6.0
6      821520.065021  100900.100000          100.0     820519.998354        0.066667                0.066667           100.0      112.466667                5.0 -771047.046575  1000.000000           1.0           900.0     100.000000  820619.998354       6.0
7      821620.065021  101000.066667          100.0     820632.498354        0.066667                0.066667           100.0      112.466667                6.0 -771047.046575   987.500000           1.0           900.0      87.500000  820719.998354       7.0
8      821720.065021  100987.566667          100.0     820819.865021        0.066667                0.066667           100.0      112.466667                7.0 -771047.046575   900.133333           1.0           900.0       0.133333  820819.998354       8.0
9      821820.065021  100900.200000          100.0     820919.831688        0.066667                0.066667           100.0      112.466667                8.0 -771047.046575   900.166667           1.0           900.0       0.166667  820919.998354       9.0
10     821920.065021  100900.233333          100.0     820969.998354        0.066667                0.066667           100.0      112.466667                8.0 -771047.046575   950.000000           1.0           900.0      50.000000  821019.998354       9.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=31/15, buf_size=900, start_state=[0].[0m
[02/07 02:05:37]  --------------------------------------------------------------------------------
[02/07 02:05:37]  Iteration: 129 (96 solution, 32 counterexamples)
[02/07 02:05:40]  Generator returned sat in 0.028508 secs.
[02/07 02:05:40]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:08:54]  Verifer returned unsat in 193.620863 secs.
[02/07 02:08:54]  sf_get_cex returned in 193.812004 secs.
[02/07 02:08:54]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:08:54]  --------------------------------------------------------------------------------
[02/07 02:08:54]  Iteration: 130 (97 solution, 32 counterexamples)
[02/07 02:08:57]  Generator returned sat in 0.011008 secs.
[02/07 02:08:57]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:42:00]  Verifer returned unsat in 1982.798738 secs.
[02/07 02:42:00]  sf_get_cex returned in 1983.020247 secs.
[02/07 02:42:00]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:42:00]  --------------------------------------------------------------------------------
[02/07 02:42:00]  Iteration: 131 (98 solution, 32 counterexamples)
[02/07 02:42:04]  Generator returned sat in 0.009889 secs.
[02/07 02:42:04]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:51:47]  Verifer returned unsat in 583.470019 secs.
[02/07 02:51:48]  sf_get_cex returned in 583.741289 secs.
[02/07 02:51:48]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 02:51:48]  --------------------------------------------------------------------------------
[02/07 02:51:48]  Iteration: 132 (99 solution, 32 counterexamples)
[02/07 02:51:51]  Generator returned sat in 0.009488 secs.
[02/07 02:51:51]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:01:30]  Verifer returned unsat in 579.128386 secs.
[02/07 03:01:30]  sf_get_cex returned in 579.334392 secs.
[02/07 03:01:30]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:01:30]  --------------------------------------------------------------------------------
[02/07 03:01:30]  Iteration: 133 (100 solution, 32 counterexamples)
[02/07 03:01:34]  Generator returned sat in 0.009574 secs.
[02/07 03:01:34]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:02:24]  Verifer returned unsat in 50.565821 secs.
[02/07 03:02:24]  sf_get_cex returned in 50.753860 secs.
[02/07 03:02:24]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:02:24]  --------------------------------------------------------------------------------
[02/07 03:02:24]  Iteration: 134 (101 solution, 32 counterexamples)
[02/07 03:02:28]  Generator returned sat in 0.009562 secs.
[02/07 03:02:28]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:05:26]  Verifer returned unsat in 178.471938 secs.
[02/07 03:05:26]  sf_get_cex returned in 178.640071 secs.
[02/07 03:05:26]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:05:26]  --------------------------------------------------------------------------------
[02/07 03:05:26]  Iteration: 135 (102 solution, 32 counterexamples)
[02/07 03:05:30]  Generator returned sat in 0.009427 secs.
[02/07 03:05:30]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:10:17]  Verifer returned unsat in 287.719416 secs.
[02/07 03:10:18]  sf_get_cex returned in 287.897944 secs.
[02/07 03:10:18]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:10:18]  --------------------------------------------------------------------------------
[02/07 03:10:18]  Iteration: 136 (103 solution, 32 counterexamples)
[02/07 03:10:21]  Generator returned sat in 0.029070 secs.
[02/07 03:10:21]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:12:57]  Verifer returned sat in 155.756837 secs.
[02/07 03:12:57]  sf_get_cex returned in 155.966377 secs.
[02/07 03:12:57]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t  queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0       89689.007646            1.0            1.0      89689.007646             0.0                     0.0           100.0           150.0                1.0 -770947.046575      0.0          -1.0          -100.0          100.0  89789.007646       2.0
1       89889.007646       200000.0          200.0      89799.007646             0.0                     0.0           100.0           150.0                0.0 -770947.046575     90.0           0.0             0.0           90.0  89889.007646       0.0
2       90089.007646       200090.0          200.0      89986.007646             0.0                     0.0           100.0           150.0                0.0 -770947.046575    103.0           0.0           100.0            3.0  89989.007646       0.0
3       90289.007646       200103.0          200.0      90085.007646             0.0                     0.0           100.0           150.0                0.0 -770947.046575    204.0           0.0           200.0            4.0  90089.007646       1.0
4       90489.007646       200204.0          200.0      90189.007646             0.0                     0.0           100.0           150.0                0.0 -770947.046575    300.0           0.0           300.0            0.0  90189.007646       1.0
5       90689.007646       200300.0          200.0      90189.007646           100.0                     0.0           100.0           150.0                0.0 -770947.046575    400.0           0.0           300.0          100.0  90289.007646       1.0
6       90889.007646       200500.0          200.0      90294.007646           200.0                   100.0           100.0           150.0                1.0 -770947.046575    395.0           1.0           300.0           95.0  90389.007646       2.0
7       91089.007646       200595.0          200.0      90393.007646           300.0                   200.0           100.0           150.0                2.0 -770947.046575    396.0           1.0           300.0           96.0  90489.007646       3.0
8       91289.007646       200696.0          200.0      90492.007646           400.0                   300.0           100.0           150.0                2.0 -770947.046575    397.0           1.0           300.0           97.0  90589.007646       3.0
9       91489.007646       200797.0          200.0      90642.007646           500.0                   400.0           100.0           150.0                2.0 -770947.046575    347.0           1.0           300.0           47.0  90689.007646       3.0
10      91689.007646       200847.0          200.0      90789.007646           600.0                   500.0           100.0           150.0                2.0 -770947.046575    300.0           1.0           300.0            0.0  90789.007646       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=600, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=300, start_state=[0].[0m
[02/07 03:12:57]  --------------------------------------------------------------------------------
[02/07 03:12:57]  Iteration: 137 (103 solution, 33 counterexamples)
[02/07 03:13:00]  Generator returned sat in 0.023998 secs.
[02/07 03:13:00]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:26:38]  Verifer returned unsat in 817.046955 secs.
[02/07 03:26:38]  sf_get_cex returned in 817.322680 secs.
[02/07 03:26:38]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:26:38]  --------------------------------------------------------------------------------
[02/07 03:26:38]  Iteration: 138 (104 solution, 33 counterexamples)
[02/07 03:26:41]  Generator returned sat in 0.009700 secs.
[02/07 03:26:41]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:40:48]  Verifer returned unsat in 846.647837 secs.
[02/07 03:40:48]  sf_get_cex returned in 846.923417 secs.
[02/07 03:40:48]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:40:48]  --------------------------------------------------------------------------------
[02/07 03:40:48]  Iteration: 139 (105 solution, 33 counterexamples)
[02/07 03:40:51]  Generator returned sat in 0.010267 secs.
[02/07 03:40:51]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:45:19]  Verifer returned unsat in 267.805359 secs.
[02/07 03:45:19]  sf_get_cex returned in 267.992999 secs.
[02/07 03:45:19]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:45:19]  --------------------------------------------------------------------------------
[02/07 03:45:19]  Iteration: 140 (106 solution, 33 counterexamples)
[02/07 03:45:23]  Generator returned sat in 0.010153 secs.
[02/07 03:45:23]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:55:15]  Verifer returned unsat in 592.310208 secs.
[02/07 03:55:15]  sf_get_cex returned in 592.588712 secs.
[02/07 03:55:15]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 03:55:15]  --------------------------------------------------------------------------------
[02/07 03:55:15]  Iteration: 141 (107 solution, 33 counterexamples)
[02/07 03:55:19]  Generator returned sat in 0.010268 secs.
[02/07 03:55:19]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:12:50]  Verifer returned unsat in 1050.767743 secs.
[02/07 04:12:50]  sf_get_cex returned in 1051.057009 secs.
[02/07 04:12:50]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:12:50]  --------------------------------------------------------------------------------
[02/07 04:12:50]  Iteration: 142 (108 solution, 33 counterexamples)
[02/07 04:12:53]  Generator returned sat in 0.009766 secs.
[02/07 04:12:53]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:17:41]  Verifer returned unsat in 287.480258 secs.
[02/07 04:17:41]  sf_get_cex returned in 287.706346 secs.
[02/07 04:17:41]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:17:41]  --------------------------------------------------------------------------------
[02/07 04:17:41]  Iteration: 143 (109 solution, 33 counterexamples)
[02/07 04:17:44]  Generator returned sat in 0.012211 secs.
[02/07 04:17:45]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:21:40]  Verifer returned unsat in 234.968119 secs.
[02/07 04:21:40]  sf_get_cex returned in 235.226333 secs.
[02/07 04:21:40]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:21:40]  --------------------------------------------------------------------------------
[02/07 04:21:40]  Iteration: 144 (110 solution, 33 counterexamples)
[02/07 04:21:43]  Generator returned sat in 0.009799 secs.
[02/07 04:21:43]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:27:34]  Verifer returned unsat in 350.834272 secs.
[02/07 04:27:34]  sf_get_cex returned in 351.056307 secs.
[02/07 04:27:34]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:27:34]  --------------------------------------------------------------------------------
[02/07 04:27:34]  Iteration: 145 (111 solution, 33 counterexamples)
[02/07 04:27:38]  Generator returned sat in 0.010194 secs.
[02/07 04:27:38]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:33:45]  Verifer returned unsat in 367.683523 secs.
[02/07 04:33:46]  sf_get_cex returned in 367.915820 secs.
[02/07 04:33:46]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:33:46]  --------------------------------------------------------------------------------
[02/07 04:33:46]  Iteration: 146 (112 solution, 33 counterexamples)
[02/07 04:33:49]  Generator returned sat in 0.009733 secs.
[02/07 04:33:49]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:36:28]  Verifer returned unsat in 159.390714 secs.
[02/07 04:36:29]  sf_get_cex returned in 159.599567 secs.
[02/07 04:36:29]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:36:29]  --------------------------------------------------------------------------------
[02/07 04:36:29]  Iteration: 147 (113 solution, 33 counterexamples)
[02/07 04:36:32]  Generator returned sat in 0.009709 secs.
[02/07 04:36:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:39:26]  Verifer returned unsat in 173.816583 secs.
[02/07 04:39:27]  sf_get_cex returned in 174.058180 secs.
[02/07 04:39:27]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:39:27]  --------------------------------------------------------------------------------
[02/07 04:39:27]  Iteration: 148 (114 solution, 33 counterexamples)
[02/07 04:39:30]  Generator returned sat in 0.011627 secs.
[02/07 04:39:30]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:43:58]  Verifer returned unsat in 267.620734 secs.
[02/07 04:43:58]  sf_get_cex returned in 267.876045 secs.
[02/07 04:43:58]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:43:58]  --------------------------------------------------------------------------------
[02/07 04:43:58]  Iteration: 149 (115 solution, 33 counterexamples)
[02/07 04:44:01]  Generator returned sat in 0.017539 secs.
[02/07 04:44:01]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:45:25]  Verifer returned unsat in 83.462529 secs.
[02/07 04:45:25]  sf_get_cex returned in 83.679898 secs.
[02/07 04:45:25]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:45:25]  --------------------------------------------------------------------------------
[02/07 04:45:25]  Iteration: 150 (116 solution, 33 counterexamples)
[02/07 04:45:28]  Generator returned sat in 0.011540 secs.
[02/07 04:45:29]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:46:48]  Verifer returned unsat in 79.110536 secs.
[02/07 04:46:48]  sf_get_cex returned in 79.320692 secs.
[02/07 04:46:48]  Proved solution: 
[1m[92mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:46:48]  --------------------------------------------------------------------------------
[02/07 04:46:48]  Iteration: 151 (117 solution, 33 counterexamples)
[02/07 04:46:51]  Generator returned sat in 0.014536 secs.
[02/07 04:46:51]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:49:43]  Verifer returned unsat in 171.428819 secs.
[02/07 04:49:43]  sf_get_cex returned in 171.647884 secs.
[02/07 04:49:43]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 04:49:43]  --------------------------------------------------------------------------------
[02/07 04:49:43]  Iteration: 152 (118 solution, 33 counterexamples)
[02/07 04:49:46]  Generator returned sat in 0.011062 secs.
[02/07 04:49:46]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 05:05:31]  Verifer returned unsat in 944.743789 secs.
[02/07 05:05:32]  sf_get_cex returned in 945.067399 secs.
[02/07 05:05:32]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 05:05:32]  --------------------------------------------------------------------------------
[02/07 05:05:32]  Iteration: 153 (119 solution, 33 counterexamples)
[02/07 05:05:35]  Generator returned sat in 0.009940 secs.
[02/07 05:05:35]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 05:06:52]  Verifer returned sat in 77.322206 secs.
[02/07 05:06:53]  sf_get_cex returned in 77.530109 secs.
[02/07 05:06:53]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t     upper_S_t  qdelay_t
0        9793.202377       1.000000       1.000000       9792.202377             1.0                     0.0       38.888889      116.777778                0.0 -770718.555147   0.000000          -1.0        0.000000       0.000000   9792.202377       1.0
1        9832.091266   38889.888889      38.888889       9792.202377             1.0                     1.0       38.888889      116.777778                0.0 -770657.444036  38.888889           1.0        0.000000      38.888889   9831.091266       1.0
2        9870.980155   38928.777778      38.888889       9831.091266             1.0                     1.0       38.888889      116.777778                0.0 -770596.332925  38.888889           0.0        0.000000      38.888889   9869.980155       1.0
3        9909.869044   38928.777778      38.888889       9905.869044             1.0                     1.0       38.888889      116.777778                0.0 -770535.221814   3.000000           0.0        0.000000       3.000000   9908.869044       0.0
4        9948.757933   38892.888889      38.888889       9909.869044             1.0                     1.0       38.888889      116.777778                0.0 -770474.110703  37.888889           0.0        0.000000      37.888889   9947.757933       0.0
5        9987.646821   38927.777778      38.888889       9981.646821             1.0                     1.0       38.888889      116.777778                0.0 -770445.888481   5.000000           0.0      -32.888889      37.888889  10019.535710       0.0
6       10026.535710   38894.888889      38.888889      10019.535710             1.0                     1.0       38.888889      116.777778                0.0 -770351.888481   6.000000           0.0        0.000000       6.000000  10025.535710       0.0
7       10065.424599   38895.888889      38.888889      10026.535710             1.0                     1.0       38.888889      116.777778                0.0 -770321.666259  37.888889           0.0      -30.888889      68.777778  10095.313488       0.0
8       10104.313488   38927.777778      38.888889      10095.313488             1.0                     1.0       38.888889      116.777778                0.0 -770229.666259   8.000000           0.0        0.000000       8.000000  10103.313488       0.0
9       10143.202377   38897.888889      38.888889      10103.313488             1.0                     1.0       38.888889      116.777778                0.0 -770168.555147  38.888889           0.0        0.000000      38.888889  10142.202377       1.0
10      10182.091266   38928.777778      38.888889      10142.202377             1.0                     1.0       38.888889      116.777778                0.0 -770107.444036  38.888889           0.0        0.000000      38.888889  10181.091266       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=39/2, buf_size=99, start_state=[0].[0m
[02/07 05:06:53]  --------------------------------------------------------------------------------
[02/07 05:06:53]  Iteration: 154 (119 solution, 34 counterexamples)
[02/07 05:06:56]  Generator returned sat in 0.021391 secs.
[02/07 05:06:56]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 05:09:57]  Verifer returned unsat in 181.095016 secs.
[02/07 05:09:58]  sf_get_cex returned in 181.350380 secs.
[02/07 05:09:58]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/07 05:09:58]  --------------------------------------------------------------------------------
[02/07 05:09:58]  Iteration: 155 (120 solution, 34 counterexamples)
[02/07 05:10:01]  Generator returned sat in 0.015240 secs.
[02/07 05:10:01]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 05:13:10]  Verifer returned unsat in 188.748722 secs.
[02/07 05:13:10]  sf_get_cex returned in 188.979245 secs.
[02/07 05:13:10]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 05:13:10]  --------------------------------------------------------------------------------
[02/07 05:13:10]  Iteration: 156 (121 solution, 34 counterexamples)
[02/07 05:13:14]  Generator returned sat in 0.010475 secs.
[02/07 05:13:14]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 05:18:16]  Verifer returned unsat in 302.105931 secs.
[02/07 05:18:16]  sf_get_cex returned in 302.422772 secs.
[02/07 05:18:16]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 05:18:16]  --------------------------------------------------------------------------------
[02/07 05:18:16]  Iteration: 157 (122 solution, 34 counterexamples)
[02/07 05:18:20]  Generator returned sat in 0.013173 secs.
[02/07 05:18:20]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:01:20]  Verifer returned unsat in 2579.794611 secs.
[02/07 06:01:20]  sf_get_cex returned in 2580.170114 secs.
[02/07 06:01:20]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:01:20]  --------------------------------------------------------------------------------
[02/07 06:01:20]  Iteration: 158 (123 solution, 34 counterexamples)
[02/07 06:01:23]  Generator returned sat in 0.010154 secs.
[02/07 06:01:24]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:04:21]  Verifer returned unsat in 177.428804 secs.
[02/07 06:04:21]  sf_get_cex returned in 177.710241 secs.
[02/07 06:04:21]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:04:21]  --------------------------------------------------------------------------------
[02/07 06:04:21]  Iteration: 159 (124 solution, 34 counterexamples)
[02/07 06:04:25]  Generator returned sat in 0.010191 secs.
[02/07 06:04:25]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:21:29]  Verifer returned unsat in 1023.917488 secs.
[02/07 06:21:29]  sf_get_cex returned in 1024.290266 secs.
[02/07 06:21:29]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:21:29]  --------------------------------------------------------------------------------
[02/07 06:21:29]  Iteration: 160 (125 solution, 34 counterexamples)
[02/07 06:21:33]  Generator returned sat in 0.013640 secs.
[02/07 06:21:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 06:22:57]  Verifer returned unsat in 84.388135 secs.
[02/07 06:22:57]  sf_get_cex returned in 84.629515 secs.
[02/07 06:22:57]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 06:22:57]  --------------------------------------------------------------------------------
[02/07 06:22:57]  Iteration: 161 (126 solution, 34 counterexamples)
[02/07 06:23:01]  Generator returned sat in 0.010891 secs.
[02/07 06:23:01]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:27:26]  Verifer returned unsat in 264.878456 secs.
[02/07 06:27:26]  sf_get_cex returned in 265.193465 secs.
[02/07 06:27:26]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:27:26]  --------------------------------------------------------------------------------
[02/07 06:27:26]  Iteration: 162 (127 solution, 34 counterexamples)
[02/07 06:27:30]  Generator returned sat in 0.013233 secs.
[02/07 06:27:30]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:30:04]  Verifer returned unsat in 153.936873 secs.
[02/07 06:30:04]  sf_get_cex returned in 154.203230 secs.
[02/07 06:30:04]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:30:04]  --------------------------------------------------------------------------------
[02/07 06:30:04]  Iteration: 163 (128 solution, 34 counterexamples)
[02/07 06:30:08]  Generator returned sat in 0.009719 secs.
[02/07 06:30:08]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:57:44]  Verifer returned unsat in 1656.021320 secs.
[02/07 06:57:44]  sf_get_cex returned in 1656.445737 secs.
[02/07 06:57:44]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 06:57:44]  --------------------------------------------------------------------------------
[02/07 06:57:44]  Iteration: 164 (129 solution, 34 counterexamples)
[02/07 06:57:48]  Generator returned sat in 0.009897 secs.
[02/07 06:57:48]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:01:31]  Verifer returned unsat in 222.826335 secs.
[02/07 07:01:31]  sf_get_cex returned in 223.153032 secs.
[02/07 07:01:31]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:01:31]  --------------------------------------------------------------------------------
[02/07 07:01:31]  Iteration: 165 (130 solution, 34 counterexamples)
[02/07 07:01:34]  Generator returned sat in 0.010000 secs.
[02/07 07:01:34]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:03:29]  Verifer returned unsat in 114.733066 secs.
[02/07 07:03:29]  sf_get_cex returned in 114.974327 secs.
[02/07 07:03:29]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:03:29]  --------------------------------------------------------------------------------
[02/07 07:03:29]  Iteration: 166 (131 solution, 34 counterexamples)
[02/07 07:03:33]  Generator returned sat in 0.010197 secs.
[02/07 07:03:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:19:18]  Verifer returned unsat in 944.453706 secs.
[02/07 07:19:18]  sf_get_cex returned in 944.732824 secs.
[02/07 07:19:18]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:19:18]  --------------------------------------------------------------------------------
[02/07 07:19:18]  Iteration: 167 (132 solution, 34 counterexamples)
[02/07 07:19:21]  Generator returned sat in 0.020440 secs.
[02/07 07:19:21]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 07:32:05]  Verifer returned sat in 763.576831 secs.
[02/07 07:32:05]  sf_get_cex returned in 764.056259 secs.
[02/07 07:32:05]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      547215.367562       1.000000       1.000000     547090.419646             0.0                     0.0       50.034722           100.0                0.0 -770604.607070  124.947917          -1.0      124.947917       0.000000  547090.419646       0.0
1      547240.384924   25142.309028      25.017361     547140.384924             0.0                     0.0       50.034722           100.0                0.0 -770604.607070  100.000000           0.0       49.965278      50.034722  547190.419646       1.0
2      547265.402285   25117.361111      25.017361     547240.454368             0.0                     0.0       50.034722           100.0                0.0 -770604.607070   24.947917           0.0      -25.017361      49.965278  547290.419646       0.0
3      547290.419646   25042.309028      25.017361     547290.419646             0.0                     0.0       50.034722           100.0                0.0 -770504.607070    0.000000           0.0        0.000000       0.000000  547290.419646       0.0
4      547315.437007   25017.361111      25.017361     547290.919646             0.0                     0.0       50.034722           100.0                0.0 -770454.641792   24.517361           0.0      -25.017361      49.534722  547340.454368       0.0
5      547340.454368   25041.878472      25.017361     547340.454368             0.0                     0.0       50.034722           100.0                0.0 -770354.641792    0.000000           0.0        0.000000       0.000000  547340.454368       0.0
6      547365.471729   25017.361111      25.017361     547340.954368             0.0                     0.0       50.034722           100.0                0.0 -770279.659153   24.517361           0.0        0.000000      24.517361  547365.471729       0.0
7      547390.489090   25041.878472      25.017361     547390.489090             0.0                     0.0       50.034722           100.0                0.0 -770204.676514    0.000000           0.0        0.000000       0.000000  547390.489090       0.0
8      547415.506451   25017.361111      25.017361     547415.506451             0.0                     0.0       50.034722           100.0                0.0 -770129.693875    0.000000           0.0        0.000000       0.000000  547415.506451       0.0
9      547440.523812   25017.361111      25.017361     547440.523812             0.0                     0.0       50.034722           100.0                0.0 -770064.107070    0.000000           0.0       -9.395833       9.395833  547449.919646       0.0
10     547465.541174   25017.361111      25.017361     547449.919646             0.0                     0.0       50.034722           100.0                0.0 -769979.728597   15.621528           0.0        0.000000      15.621528  547465.541174       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=5/144, buf_size=11995/96, start_state=[0].[0m
[02/07 07:32:06]  --------------------------------------------------------------------------------
[02/07 07:32:06]  Iteration: 168 (132 solution, 35 counterexamples)
[02/07 07:32:09]  Generator returned sat in 0.042492 secs.
[02/07 07:32:09]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/07 07:34:21]  Verifer returned sat in 131.661432 secs.
[02/07 07:34:21]  sf_get_cex returned in 131.896346 secs.
[02/07 07:34:21]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0      577143.656312       1.000000       1.000000     577143.656312             0.0                     0.0       66.666667           100.0                0.0 -770671.343181   0.000000          -1.0        0.000000       0.000000  577143.656312       0.0
1      577176.989646   33333.333333      33.333333     577144.156312             0.0                     0.0       66.666667           100.0                0.0 -770604.676514  32.833333           0.0        0.000000      32.833333  577176.989646       0.0
2      577210.322979   33366.166667      33.333333     577177.489646             0.0                     0.0       66.666667           100.0                0.0 -770538.009847  32.833333           0.0        0.000000      32.833333  577210.322979       0.0
3      577243.656312   33366.166667      33.333333     577210.322979             0.0                     0.0       66.666667           100.0                0.0 -770471.343181  33.333333           0.0        0.000000      33.333333  577243.656312       1.0
4      577276.989646   33366.666667      33.333333     577244.156312             0.0                     0.0       66.666667           100.0                0.0 -770438.009847  32.833333           0.0      -33.333333      66.166667  577310.322979       0.0
5      577310.322979   33366.166667      33.333333     577310.322979             0.0                     0.0       66.666667           100.0                0.0 -770371.343181   0.000000           0.0      -33.333333      33.333333  577343.656312       0.0
6      577343.656312   33333.333333      33.333333     577343.656312             0.0                     0.0       66.666667           100.0                0.0 -770271.843181   0.000000           0.0       -0.500000       0.500000  577344.156312       0.0
7      577376.989646   33333.333333      33.333333     577344.156312             0.0                     0.0       66.666667           100.0                0.0 -770204.676514  32.833333           0.0        0.000000      32.833333  577376.989646       0.0
8      577410.322979   33366.166667      33.333333     577376.989646             0.0                     0.0       66.666667           100.0                0.0 -770138.009847  33.333333           0.0        0.000000      33.333333  577410.322979       1.0
9      577443.656312   33366.666667      33.333333     577410.822979             0.0                     0.0       66.666667           100.0                0.0 -770071.343181  32.833333           0.0        0.000000      32.833333  577443.656312       0.0
10     577476.989646   33366.166667      33.333333     577444.156312             0.0                     0.0       66.666667           100.0                0.0 -770004.676514  32.833333           0.0        0.000000      32.833333  577476.989646       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/2, buf_size=199/2, start_state=[0].[0m
[02/07 07:34:21]  --------------------------------------------------------------------------------
[02/07 07:34:21]  Iteration: 169 (132 solution, 36 counterexamples)
[02/07 07:34:25]  Generator returned sat in 0.034235 secs.
[02/07 07:34:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:41:13]  Verifer returned unsat in 407.455946 secs.
[02/07 07:41:13]  sf_get_cex returned in 407.799567 secs.
[02/07 07:41:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:41:13]  --------------------------------------------------------------------------------
[02/07 07:41:13]  Iteration: 170 (133 solution, 36 counterexamples)
[02/07 07:41:17]  Generator returned sat in 0.015225 secs.
[02/07 07:41:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:47:40]  Verifer returned sat in 382.756427 secs.
[02/07 07:47:40]  sf_get_cex returned in 383.158335 secs.
[02/07 07:47:40]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t      upper_S_t  qdelay_t
0     -209328.542293       1.000000       1.000000    -209543.444254             0.0                     0.0       97.647059      156.078431                6.0 -770204.676514  214.901961          -1.0      129.019608      85.882353 -209457.561901       7.0
1     -209250.503077   78254.117647      78.039216    -209435.797195             0.0                     0.0       97.647059      156.078431                6.0 -770204.676514  185.294118           1.0      107.058824      78.235294 -209357.561901       7.0
2     -209172.463862   78224.509804      78.039216    -209257.561901             0.0                     0.0       97.647059      156.078431                0.0 -770204.676514   85.098039           0.0       85.098039       0.000000 -209257.561901       1.0
3     -208977.169744  195379.215686     195.294118    -209250.503077             0.0                     0.0       97.647059      156.078431                1.0 -770204.676514  273.333333           1.0      180.392157      92.941176 -209157.561901       2.0
4     -208781.875626  195567.450980     195.294118    -209145.856018             0.0                     0.0       97.647059      156.078431                0.0 -770204.676514  363.980392           0.0      275.686275      88.294118 -209057.561901       1.0
5     -208586.581509  195658.098039     195.294118    -208957.561901             0.0                     0.0       97.647059      156.078431                0.0 -770204.676514  370.980392           0.0      370.980392       0.000000 -208957.561901       1.0
6     -208391.287391  195665.098039     195.294118    -208957.561901             0.0                     0.0       97.647059      156.078431                0.0 -770204.676514  566.274510           0.0      466.274510     100.000000 -208857.561901       1.0
7     -208195.993273  195860.392157     195.294118    -208781.483469             0.0                     0.0       97.647059      156.078431                1.0 -770204.676514  585.490196           1.0      561.568627      23.921569 -208757.561901       2.0
8     -208000.699156  195879.607843     195.294118    -208673.620724             0.0                     0.0       97.647059      156.078431                2.0 -770204.676514  672.921569           1.0      656.862745      16.058824 -208657.561901       3.0
9     -207805.405038  195967.039216     195.294118    -208566.973665             0.0                     0.0       97.647059      156.078431                2.0 -770204.676514  761.568627           1.0      752.156863       9.411765 -208557.561901       3.0
10    -207610.110920  196055.686275     195.294118    -208469.326607             0.0                     0.0       97.647059      156.078431                3.0 -770204.676514  859.215686           1.0      847.450980      11.764706 -208457.561901       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1000/51, buf_size=899, start_state=[0].[0m
[02/07 07:47:40]  --------------------------------------------------------------------------------
[02/07 07:47:40]  Iteration: 171 (133 solution, 37 counterexamples)
[02/07 07:47:44]  Generator returned sat in 0.075056 secs.
[02/07 07:47:44]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:56:56]  Verifer returned unsat in 551.461969 secs.
[02/07 07:56:56]  sf_get_cex returned in 551.791841 secs.
[02/07 07:56:56]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/07 07:56:56]  --------------------------------------------------------------------------------
[02/07 07:56:56]  Iteration: 172 (134 solution, 37 counterexamples)
[02/07 07:57:00]  Generator returned sat in 0.043121 secs.
[02/07 07:57:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 07:58:11]  Solver threw error after 70.803193 secs on attempt 1.
[02/07 07:58:11]  b'max. memory exceeded'
[02/07 07:58:11]  Recreating and restarting solver
[02/07 08:21:13]  Solver returned in 1452.688395 secs.
[02/07 08:21:13]  Verifer returned sat in 1452.704637 secs.
[02/07 08:21:13]  sf_get_cex returned in 1452.867551 secs.
[02/07 08:21:13]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t    upper_S_t  qdelay_t
0         726.666798       1.000000       1.000000        424.223616        0.000000                0.000000       90.511364      102.045455                3.0    -439.223616  302.443182          -1.0      287.443182      15.000000   439.223616       4.0
1         836.496344  110131.988636     109.829545        526.950889        0.000000                0.000000       90.511364      102.045455                3.0    -439.223616  309.545455           1.0      297.272727      12.272727   539.223616       4.0
2         946.325889  110139.090909     109.829545        629.678162        3.693182                0.000000       90.511364      102.045455                2.0    -439.223616  312.954545           1.0      303.409091       9.545455   639.223616       3.0
3        1056.155435  110146.193182     109.829545        667.689526       13.522727                3.693182       90.511364      102.045455                3.0    -439.223616  374.943182           1.0      303.409091      71.534091   739.223616       4.0
4        1165.984980  110218.011364     109.829545        837.178162       23.352273               13.522727       90.511364      102.045455                1.0    -439.223616  305.454545           1.0      303.409091       2.045455   839.223616       2.0
5        1237.178162   71521.988636      71.193182        939.223616       23.352273               23.352273       90.511364      102.045455                2.0    -439.223616  274.602273           1.0      274.602273       0.000000   939.223616       3.0
6        1347.007707  110127.500000     109.829545        939.223616       23.352273               23.352273       90.511364      102.045455                2.0    -439.223616  384.431818           1.0      284.431818     100.000000  1039.223616       3.0
7        1456.837253  110237.329545     109.829545       1042.632707       23.352273               23.352273       90.511364      102.045455                3.0    -439.223616  390.852273           1.0      294.261364      96.590909  1139.223616       4.0
8        1566.666798  110243.750000     109.829545       1143.314526       24.034091               23.352273       90.511364      102.045455                2.0    -439.223616  399.318182           1.0      303.409091      95.909091  1239.223616       3.0
9        1676.496344  110252.897727     109.829545       1301.269071       33.863636               24.034091       90.511364      102.045455                2.0    -439.223616  341.363636           1.0      303.409091      37.954545  1339.223616       3.0
10       1786.325889  110204.772727     109.829545       1350.814526       43.693182               33.863636       90.511364      102.045455                2.0    -439.223616  391.818182           1.0      303.409091      88.409091  1439.223616       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=0, loss_amount=3845/88, beliefs_remain_consistent=True, beliefs_improve=False, alpha=425/22, buf_size=6675/22, start_state=[0].[0m
[02/07 08:21:13]  --------------------------------------------------------------------------------
[02/07 08:21:13]  Iteration: 173 (134 solution, 38 counterexamples)
[02/07 08:21:17]  Generator returned sat in 0.036768 secs.
[02/07 08:21:17]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 08:34:55]  Verifer returned sat in 818.284101 secs.
[02/07 08:34:55]  sf_get_cex returned in 818.429110 secs.
[02/07 08:34:55]  Counter example: 
[93m    adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t  token_queue_t    upper_S_t  qdelay_t
0        1684.840132       1.000000       1.000000        783.840132        1.000000                0.000000           100.0           100.0                8.0    -540.451623  900.000000          -1.0       899.91358       0.086420   783.926552       9.0
1        1784.852478  100913.345679     100.012346        883.852478        1.012346                1.000000           100.0           100.0                8.0    -540.451623  899.987654           1.0       899.91358       0.074074   883.926552       9.0
2        1884.864824  100913.345679     100.012346        884.000626        1.024691                1.012346           100.0           100.0                7.0    -540.451623  999.839506           1.0       899.91358      99.925926   983.926552       8.0
3        1984.877169  101013.209877     100.012346        983.988281        1.037037                1.024691           100.0           100.0                7.0    -540.451623  999.851852           1.0       899.91358      99.938272  1083.926552       8.0
4        2084.889515  101013.234568     100.012346       1083.975935        1.049383                1.037037           100.0           100.0                8.0    -540.451623  999.864198           1.0       899.91358      99.950617  1183.926552       9.0
5        2184.901861  101013.259259     100.012346       1283.901861        1.061728                1.049383           100.0           100.0                8.0    -540.451623  899.938272           1.0       899.91358       0.024691  1283.926552       9.0
6        2284.914206  100913.345679     100.012346       1283.951243        1.074074                1.061728           100.0           100.0                8.0    -540.451623  999.888889           1.0       899.91358      99.975309  1383.926552       9.0
7        2384.926552  101013.308642     100.012346       1483.926552        1.086420                1.074074           100.0           100.0                8.0    -540.451623  899.913580           1.0       899.91358       0.000000  1483.926552       9.0
8        2484.938898  100913.345679     100.012346       1483.926552        1.098765                1.086420           100.0           100.0                8.0    -540.451623  999.913580           1.0       899.91358     100.000000  1583.926552       9.0
9        2584.951243  101013.358025     100.012346       1683.901861        1.111111                1.098765           100.0           100.0                7.0    -540.451623  899.938272           1.0       899.91358       0.024691  1683.926552       8.0
10       2684.963589  100913.395062     100.012346       1783.852478        1.123457                1.111111           100.0           100.0                7.0    -540.451623  899.987654           1.0       899.91358       0.074074  1783.926552       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=10, 
, large_loss_count=0, loss_amount=1/9, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/81, buf_size=72893/81, start_state=[0].[0m
[02/07 08:34:56]  --------------------------------------------------------------------------------
[02/07 08:34:56]  Iteration: 174 (134 solution, 39 counterexamples)
[02/07 08:35:00]  Generator returned sat in 0.034130 secs.
[02/07 08:35:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 08:37:46]  Verifer returned unsat in 165.853771 secs.
[02/07 08:37:46]  sf_get_cex returned in 165.986707 secs.
[02/07 08:37:46]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 08:37:46]  --------------------------------------------------------------------------------
[02/07 08:37:46]  Iteration: 175 (135 solution, 39 counterexamples)
[02/07 08:37:50]  Generator returned sat in 0.014089 secs.
[02/07 08:37:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:35:08]  Verifer returned unsat in 3437.297304 secs.
[02/07 09:35:08]  sf_get_cex returned in 3437.438645 secs.
[02/07 09:35:08]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:35:08]  --------------------------------------------------------------------------------
[02/07 09:35:08]  Iteration: 176 (136 solution, 39 counterexamples)
[02/07 09:35:12]  Generator returned sat in 0.018672 secs.
[02/07 09:35:12]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:36:48]  Verifer returned unsat in 95.590029 secs.
[02/07 09:36:48]  sf_get_cex returned in 95.749717 secs.
[02/07 09:36:48]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:36:48]  --------------------------------------------------------------------------------
[02/07 09:36:48]  Iteration: 177 (137 solution, 39 counterexamples)
[02/07 09:36:52]  Generator returned sat in 0.012707 secs.
[02/07 09:36:52]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:40:23]  Verifer returned unsat in 210.659613 secs.
[02/07 09:40:23]  sf_get_cex returned in 210.789602 secs.
[02/07 09:40:23]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:40:23]  --------------------------------------------------------------------------------
[02/07 09:40:23]  Iteration: 178 (138 solution, 39 counterexamples)
[02/07 09:40:27]  Generator returned sat in 0.018147 secs.
[02/07 09:40:27]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:42:32]  Verifer returned unsat in 124.738381 secs.
[02/07 09:42:32]  sf_get_cex returned in 124.895623 secs.
[02/07 09:42:32]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:42:32]  --------------------------------------------------------------------------------
[02/07 09:42:32]  Iteration: 179 (139 solution, 39 counterexamples)
[02/07 09:42:36]  Generator returned sat in 0.012341 secs.
[02/07 09:42:36]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:45:33]  Verifer returned unsat in 176.905542 secs.
[02/07 09:45:33]  sf_get_cex returned in 177.051667 secs.
[02/07 09:45:33]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 09:45:33]  --------------------------------------------------------------------------------
[02/07 09:45:33]  Iteration: 180 (140 solution, 39 counterexamples)
[02/07 09:45:37]  Generator returned sat in 0.011899 secs.
[02/07 09:45:37]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 10:19:51]  Verifer returned unsat in 2053.542917 secs.
[02/07 10:19:51]  sf_get_cex returned in 2053.700001 secs.
[02/07 10:19:51]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 1/2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 10:19:51]  --------------------------------------------------------------------------------
[02/07 10:19:51]  Iteration: 181 (141 solution, 39 counterexamples)
[02/07 10:19:55]  Generator returned sat in 0.012891 secs.
[02/07 10:19:55]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 10:21:17]  Verifer returned unsat in 82.102795 secs.
[02/07 10:21:17]  sf_get_cex returned in 82.243655 secs.
[02/07 10:21:17]  Proved solution: 
[1m[92mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/07 10:21:17]  --------------------------------------------------------------------------------
[02/07 10:21:17]  Iteration: 182 (142 solution, 39 counterexamples)
[02/07 10:21:21]  Generator returned sat in 0.011852 secs.
[02/07 10:21:22]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
