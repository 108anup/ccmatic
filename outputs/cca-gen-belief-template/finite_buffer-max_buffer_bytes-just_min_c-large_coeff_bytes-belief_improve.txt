[01/10 11:55:54]  Namespace(infinite_buffer=False, finite_buffer=True, dynamic_buffer=False)
[01/10 11:55:54]  --------------------------------------------------------------------------------
[01/10 11:55:54]  Iteration: 1 (0 solution, 0 counterexamples)
[01/10 11:55:54]  Generator returned sat in 0.007582 secs.
[01/10 11:55:54]  Candidate solution: 
[1m[94mif (+ 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 11:55:58]  Improved gap from 0.0 to 48.4375
[01/10 11:55:58]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 11:55:58]  Verifer returned sat in 3.746277 secs.
[01/10 11:55:58]  sf_get_cex returned in 3.867905 secs.
[01/10 11:55:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0         -18609.1875         -18612.4375       -18609.1875         0.5000         0.5000       -18612.4375             0.0                     0.0          97.875           100.0                1.0                3.0                  1.0                  2.0     18612.4375                97.875                 200.0   3.2500          3.2500       2.0
1         -18560.2500         -18611.9375       -18560.2500     48940.7500        48.9375       -18611.9375             0.0                     0.0          97.875           100.0                2.0                4.0                  2.0                  2.0     18660.2500               195.750                 200.0  51.6875          0.0000       3.0
2         -18511.3125         -18559.7500       -18511.3125     48989.1875        48.9375       -18559.7500             0.0                     0.0          97.875           100.0                0.0                1.0                  2.0                  2.0     18711.3125               195.750                 200.0  48.4375          0.0000       0.0
3         -18462.3750         -18510.8125       -18462.3750     48985.9375        48.9375       -18510.8125             0.0                     0.0          97.875           100.0                0.0                1.0                  2.0                  2.0     18762.3750               195.750                 200.0  48.4375          0.0000       0.0
4         -18413.4375         -18461.8750       -18413.4375     48985.9375        48.9375       -18461.8750             0.0                     0.0          97.875           100.0                0.0                1.0                  2.0                  2.0     18813.4375               195.750                 200.0  48.4375          0.0000       0.0
5         -18364.5000         -18412.9375       -18364.5000     48985.9375        48.9375       -18412.9375             0.0                     0.0          97.875           100.0                0.0                1.0                  2.0                  2.0     18813.4375               195.750                 200.0  48.4375        -51.0625       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 11:55:58]  --------------------------------------------------------------------------------
[01/10 11:55:58]  Iteration: 2 (0 solution, 1 counterexamples)
[01/10 11:55:58]  Generator returned sat in 0.182642 secs.
[01/10 11:55:58]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2min_buffer_bytes + -1max_buffer_bytes + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 11:55:59]  Improved number of small numbers from 133 to 133 out of a max of 133
[01/10 11:55:59]  Verifer returned sat in 0.671675 secs.
[01/10 11:55:59]  sf_get_cex returned in 0.781018 secs.
[01/10 11:55:59]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0          -18534.375          -18788.125        -18534.375          0.500           0.50        -18788.125            0.00                    0.00          75.625           100.0                2.0                4.0                  2.0                  2.5      18734.375                151.25                 250.0  253.750           200.0       3.0
1          -18383.125          -18635.875        -18383.125     151503.750         151.25        -18635.875           51.25                    0.00          76.125           100.0                0.0                2.0                  2.0                  2.5      18734.375                152.25                 250.0  201.500           200.0       1.0
2          -18230.875          -18559.750        -18230.875     152502.750         152.25        -18559.750          103.50                   51.25          76.125           100.0                1.0                3.0                  2.0                  2.5      18734.375                152.25                 250.0  225.375           200.0       2.0
3          -18078.625          -18534.375        -18078.625     152578.875         152.25        -18534.375          155.75                  103.50          76.125           100.0                2.0                4.0                  2.0                  2.5      18734.375                152.25                 250.0  300.000           200.0       3.0
4          -17926.375          -18434.375        -17926.375     152705.750         152.25        -18434.375          208.00                  155.75          76.125           100.0                2.0                4.0                  2.0                  2.5      18734.375                152.25                 250.0  300.000           200.0       3.0
5          -17774.125          -18334.375        -17774.125     152758.000         152.25        -18334.375          260.25                  208.00          76.125           100.0                2.0                4.0                  2.0                  2.5      18734.375                152.25                 250.0  300.000           200.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=209, beliefs_improve=False, alpha=203/12, buf_size=200.[0m
[01/10 11:55:59]  --------------------------------------------------------------------------------
[01/10 11:55:59]  Iteration: 3 (0 solution, 2 counterexamples)
[01/10 11:56:01]  Generator returned sat in 1.321220 secs.
[01/10 11:56:01]  Candidate solution: 
[1m[94mif (+ 2min_c + 2max_c + -2min_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -3/2min_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1max_c + -1min_buffer_bytes + -1/2max_buffer_bytes + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 11:56:04]  Improved number of small numbers from 101 to 101 out of a max of 133
[01/10 11:56:04]  Verifer returned sat in 3.437486 secs.
[01/10 11:56:04]  sf_get_cex returned in 3.552973 secs.
[01/10 11:56:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0       -18533.875488       -18834.375244     -18533.875488       0.499756       0.499756     -18834.375244        0.499756                0.000000       99.566667      100.066667                2.0                4.0                  2.0             2.499756      18734.375            199.133333            250.142236    300.0           200.0       3.0
1       -18414.808577       -18634.975244     -18414.808577  119367.410563     119.066911     -18634.975244       19.566667                0.499756       99.700000      100.066667                0.0                2.0                  2.0             2.000000      18734.375            199.400000            200.133333    200.6           200.0       1.0
2       -18295.608333       -18535.675244     -18295.608333  119420.410807     119.200244     -18535.675244       38.766911               19.566667       99.700000      100.066667                1.0                3.0                  2.0             2.000000      18734.375            199.400000            200.133333    201.3           200.0       2.0
3       -18176.408089       -18534.375244     -18176.408089  119440.311051     119.200244     -18534.375244       57.967155               38.766911       99.700000      100.066667                2.0                4.0                  2.0             2.000000      18734.375            199.400000            200.133333    300.0           200.0       3.0
4       -18057.207845       -18434.375244     -18057.207845  119558.211296     119.200244     -18434.375244       77.167399               57.967155       99.700000      100.066667                2.0                4.0                  2.0             2.000000      18734.375            199.400000            200.133333    300.0           200.0       3.0
5       -17938.007601       -18334.375244     -17938.007601  119577.411540     119.200244     -18334.375244       96.367643               77.167399       99.700000      100.066667                2.0                4.0                  2.0             2.000000      18734.375            199.400000            200.133333    300.0           200.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=393221/5120, beliefs_improve=False, alpha=79873/4096, buf_size=200.[0m
[01/10 11:56:04]  --------------------------------------------------------------------------------
[01/10 11:56:04]  Iteration: 4 (0 solution, 3 counterexamples)
[01/10 11:56:05]  Generator returned sat in 0.743597 secs.
[01/10 11:56:05]  Candidate solution: 
[1m[94mif (+ 1/2min_c + 1max_c + 2min_buffer_bytes + 1/2max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_buffer_bytes + 1max_buffer_bytes + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 11:56:08]  Improved gap from 0.0 to 48.4375
[01/10 11:56:09]  Improved number of small numbers from 87 to 106 out of a max of 134
[01/10 11:56:09]  Verifer returned sat in 3.851312 secs.
[01/10 11:56:09]  sf_get_cex returned in 3.964346 secs.
[01/10 11:56:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       153379.846238       153363.932083     153379.846238       0.499512       0.499512     153363.932083        0.011475                0.000000       38.761673           100.0                0.0                2.0                  0.0             2.499512   18534.363281                   0.0            249.951172  15.902680       15.902634       1.0
1       153418.607910       153370.170410     153418.607910   38777.586658      38.761673     153370.170410        0.011475                0.011475       38.761673           100.0                0.0                2.0                  0.0             2.000000   18579.687500                   0.0            200.000000  48.426025       -0.011475       1.0
2       153457.369583       153418.607910     153457.369583   38810.110003      38.761673     153418.607910        0.011475                0.011475       38.761673           100.0                0.0                1.0                  0.0             2.000000   18631.250000                   0.0            200.000000  38.750198       -9.687302       0.0
3       153496.131255       153467.045410     153496.131255   38800.434175      38.761673     153467.045410        0.011475                0.011475       38.761673           100.0                0.0                1.0                  0.0             2.000000   18682.812500                   0.0            200.000000  29.074370      -19.363130       0.0
4       153534.892928       153515.482910     153534.892928   38790.758348      38.761673     153515.482910        0.011475                0.011475       38.761673           100.0                0.0                1.0                  0.0             2.000000   18734.375000                   0.0            200.000000  19.398543      -29.038957       0.0
5       153573.654600       153563.920410     153573.654600   38781.082520      38.761673     153563.920410        0.011475                0.011475       38.761673           100.0                0.0                1.0                  0.0             2.000000   18734.375000                   0.0            200.000000   9.722715      -90.277285       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=3/256, buf_size=200.[0m
[01/10 11:56:09]  --------------------------------------------------------------------------------
[01/10 11:56:09]  Iteration: 5 (0 solution, 4 counterexamples)
[01/10 11:56:17]  Generator returned sat in 7.841787 secs.
[01/10 11:56:17]  Candidate solution: 
[1m[94mif (+ -3/2min_c + -2max_c + 3/2min_buffer_bytes + 1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -2max_c + -1/2min_buffer_bytes + 2max_buffer_bytes + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1max_c + -3/2min_buffer_bytes + 1max_buffer_bytes + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 11:56:22]  Improved gap from 4.9951171875 to 48.4375
[01/10 11:56:22]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 11:56:22]  Verifer returned sat in 4.581258 secs.
[01/10 11:56:22]  sf_get_cex returned in 4.700029 secs.
[01/10 11:56:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       153408.931885       153405.678955     153408.931885       0.499512       0.499268     153405.678955             0.0                     0.0       48.937012           100.0                2.0                4.0                  2.0             2.499268   18492.616211             97.874023            249.926758   3.252930         3.25293       3.0
1       153457.868896       153409.431396     153457.868896   48940.264648      48.937012     153409.431396             0.0                     0.0       48.937012           100.0                0.0                1.0                  2.0             2.499268   18540.426270             97.874023            249.926758  48.437500         0.00000       0.0
2       153506.805908       153458.368408     153506.805908   48985.449219      48.937012     153458.368408             0.0                     0.0       48.937012           100.0                0.0                1.0                  2.0             2.499268   18591.489258             97.874023            249.926758  48.437500         0.00000       0.0
3       153555.742920       153506.805908     153555.742920   48985.449219      48.937012     153506.805908             0.0                     0.0       48.937012           100.0                0.0                2.0                  2.0             2.499268   18642.552246             97.874023            249.926758  48.937012         0.00000       1.0
4       153604.679932       153555.742920     153604.679932   48985.948730      48.937012     153555.742920             0.0                     0.0       48.937012           100.0                0.0                2.0                  2.0             2.499268   18693.615234             97.874023            249.926758  48.937012         0.00000       1.0
5       153653.616943       153605.179443     153653.616943   48985.948730      48.937012     153605.179443             0.0                     0.0       48.937012           100.0                0.0                1.0                  2.0             2.499268   18744.678223             97.874023            249.926758  48.437500         0.00000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=79873/4096, buf_size=200.[0m
[01/10 11:56:22]  --------------------------------------------------------------------------------
[01/10 11:56:22]  Iteration: 6 (0 solution, 5 counterexamples)
[01/10 11:56:27]  Generator returned sat in 4.348546 secs.
[01/10 11:56:27]  Candidate solution: 
[1m[94mif (+ -1max_qdel + -1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 11:56:31]  Improved number of small numbers from 89 to 91 out of a max of 133
[01/10 11:56:31]  Verifer returned sat in 3.552024 secs.
[01/10 11:56:31]  sf_get_cex returned in 3.668192 secs.
[01/10 11:56:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0       153173.877991       153022.629822     153173.877991       0.499512       0.499268     153022.629822        0.499023                0.000000       75.873718           100.0                1.0                3.0                  1.0             2.499023   18642.552246             75.873718            249.902344  150.749146      149.251343       2.0
1       153325.625427       153123.129089     153325.625427  151898.684692     151.747437     153123.129089        1.497803                0.499023       75.873718           100.0                2.0                4.0                  2.0             2.499023   18642.552246            151.747437            249.902344  200.998535      200.000000       3.0
2       153400.999878       153173.378723     153400.999878   75576.947021      75.374451     153173.378723        1.497803                1.497803       75.873718           100.0                1.0                3.0                  2.0             2.499023   18642.552246            151.747437            249.902344  226.123352      175.374451       2.0
3       153552.747314       153324.127625     153552.747314  151975.057678     151.747437     153324.127625       28.619690                1.497803       75.873718           100.0                1.0                3.0                  2.0             2.499023   18642.552246            151.747437            249.902344  200.000000      200.000000       2.0
4       153704.494751       153324.127625     153704.494751  151976.056213     151.747437     153324.127625       80.367126               28.619690       75.873718           100.0                1.0                3.0                  2.0             2.499023   18642.552246            151.747437            249.902344  300.000000      200.000000       2.0
5       153856.242188       153424.626953     153856.242188  152127.803650     151.747437     153424.626953      132.114563               80.367126       75.873718           100.0                1.0                3.0                  2.0             2.499023   18642.552246            151.747437            249.902344  299.500671      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=2140025/16384, beliefs_improve=False, alpha=2045/4096, buf_size=200.[0m
[01/10 11:56:31]  --------------------------------------------------------------------------------
[01/10 11:56:31]  Iteration: 7 (0 solution, 6 counterexamples)
[01/10 11:56:35]  Generator returned sat in 4.058470 secs.
[01/10 11:56:36]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 11:56:37]  Improved number of small numbers from 108 to 133 out of a max of 133
[01/10 11:56:37]  Verifer returned sat in 1.188719 secs.
[01/10 11:56:37]  sf_get_cex returned in 1.300657 secs.
[01/10 11:56:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0       185401.829834       185101.330811     185401.829834       0.499512       0.499023     185101.330811        0.499023                0.000000       80.998535           100.0                0.0                2.0                  0.0             2.499268   18642.552002                   0.0            249.926758  300.000000           200.0       1.0
1       185502.329102       185301.330811     185502.329102  100799.766602     100.499268     185301.330811        0.998291                0.499023      100.000000           100.0                1.0                3.0                  1.0             2.499268   18642.552002                 100.0            249.926758  200.000000           200.0       2.0
2       185621.829834       185399.833008     185621.829834  119701.730713     119.500732     185399.833008       20.499023                0.998291      100.000000           100.0                1.0                3.0                  1.0             2.499268   18642.552002                 100.0            249.926758  201.497803           200.0       2.0
3       185741.330566       185499.333496     185741.330566  119722.729248     119.500732     185499.333496       39.999756               20.499023      100.000000           100.0                1.0                3.0                  1.0             2.499268   18642.552002                 100.0            249.926758  201.997314           200.0       2.0
4       185860.831299       185598.834473     185860.831299  119742.729492     119.500732     185598.834473       59.500488               39.999756      100.000000           100.0                1.0                3.0                  1.0             2.499268   18642.552002                 100.0            249.926758  202.496338           200.0       2.0
5       185980.332031       185602.828613     185980.332031  119762.729248     119.500732     185602.828613       79.001221               59.500488      100.000000           100.0                1.0                3.0                  1.0             2.499268   18642.552002                 100.0            249.926758  298.502197           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=79875/1024, beliefs_improve=False, alpha=79875/4096, buf_size=200.[0m
[01/10 11:56:37]  --------------------------------------------------------------------------------
[01/10 11:56:37]  Iteration: 8 (0 solution, 7 counterexamples)
[01/10 11:56:40]  Generator returned sat in 2.596535 secs.
[01/10 11:56:40]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + -1/2min_buffer_bytes + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1/2min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 11:56:44]  Improved gap from 0.0 to 48.4375
[01/10 11:56:44]  Improved number of small numbers from 102 to 108 out of a max of 134
[01/10 11:56:44]  Verifer returned sat in 3.814777 secs.
[01/10 11:56:44]  sf_get_cex returned in 3.929366 secs.
[01/10 11:56:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       204395.276974       204377.419189     204395.276974       0.499268       0.498779     204377.419189             0.0                     0.0       72.657277      143.316162                1.0                3.0                  1.0             3.498779   18545.177734             72.657277            501.431621  17.857785       17.857785       2.0
1       204431.605612       204383.170166     204431.605612   36346.496183      36.328638     204383.170166             0.0                     0.0       72.657277      143.316162                2.0                4.0                  2.0             3.498779   18590.989258            145.314554            501.431621  48.435446       -0.002054       3.0
2       204467.934251       204431.607666     204467.934251   36377.073845      36.328638     204431.607666             0.0                     0.0       72.657277      143.316162                0.0                1.0                  2.0             3.498779   18642.551758            145.314554            501.431621  36.326585      -12.110915       0.0
3       204504.262889       204480.045166     204504.262889   36364.964983      36.328638     204480.045166             0.0                     0.0       72.657277      143.316162                0.0                1.0                  2.0             3.498779   18694.114258            145.314554            501.431621  24.217723      -24.219777       0.0
4       204540.591528       204528.482666     204540.591528   36352.856122      36.328638     204528.482666             0.0                     0.0       72.657277      143.316162                0.0                1.0                  2.0             3.498779   18745.676758            145.314554            501.431621  12.108862      -36.328638       0.0
5       204576.920166       204576.920166     204576.920166   36340.747260      36.328638     204576.920166             0.0                     0.0       72.657277      143.316162                0.0                1.0                  2.0             3.498779   18745.677002            145.314554            501.431621   0.000000      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=2043/4096, buf_size=200.[0m
[01/10 11:56:44]  --------------------------------------------------------------------------------
[01/10 11:56:44]  Iteration: 9 (0 solution, 8 counterexamples)
[01/10 11:56:55]  Generator returned sat in 9.508341 secs.
[01/10 11:56:55]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1max_c + -1min_buffer_bytes + 1max_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 11:56:58]  Improved gap from 1.496337890625 to 48.4375
[01/10 11:56:58]  Improved number of small numbers from 128 to 134 out of a max of 134
[01/10 11:56:58]  Verifer returned sat in 3.421495 secs.
[01/10 11:56:58]  sf_get_cex returned in 3.537337 secs.
[01/10 11:56:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       204332.238525       204328.482422     204332.238525       0.499023       0.498779     204328.482422        0.498535                0.000000       97.872559      100.036133                0.0                2.0                  0.0                  2.0   18593.615479                   0.0            200.072266   3.257568        2.758789       1.0
1       204381.174805       204328.981201     204381.174805   48940.035400      48.936279     204328.981201        0.498535                0.498535       97.872559      100.036133                0.0                2.0                  0.0                  2.0   18641.920410                   0.0            200.072266  51.695068        0.000000       1.0
2       204430.111084       204380.676270     204430.111084   48988.472900      48.936279     204380.676270        0.498535                0.498535       97.872559      100.036133                0.0                2.0                  0.0                  2.0   18692.984131                   0.0            200.072266  48.936279        0.000000       1.0
3       204479.047363       204430.111328     204479.047363   48985.714111      48.936279     204430.111328        0.498535                0.498535       97.872559      100.036133                0.0                1.0                  0.0                  2.0   18744.047852                   0.0            200.072266  48.437500        0.000000       0.0
4       204527.983643       204478.548828     204527.983643   48985.215332      48.936279     204478.548828        0.498535                0.498535       97.872559      100.036133                0.0                2.0                  0.0                  2.0   18795.111572                   0.0            200.072266  48.936279        0.000000       1.0
5       204576.919922       204527.983643     204576.919922   48985.714111      48.936279     204527.983643        0.498535                0.498535       97.872559      100.036133                0.0                1.0                  0.0                  2.0   18846.175293                   0.0            200.072266  48.437744        0.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=79877/4096, buf_size=200.[0m
[01/10 11:56:58]  --------------------------------------------------------------------------------
[01/10 11:56:58]  Iteration: 10 (0 solution, 9 counterexamples)
[01/10 11:57:29]  Generator returned sat in 29.461127 secs.
[01/10 11:57:29]  Candidate solution: 
[1m[94mif (+ -1/2min_c + 1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 11:57:32]  Improved gap from 0.0 to 100
[01/10 11:57:33]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 11:57:33]  Verifer returned sat in 4.106425 secs.
[01/10 11:57:33]  sf_get_cex returned in 4.226656 secs.
[01/10 11:57:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0       153350.312744       153065.794434     153350.312744       0.499023       0.498779     153065.794434        0.498779                0.000000       97.002441           100.0                2.0                4.0                  2.0                  2.0   18650.165527            194.004883                 200.0  284.019531      197.506104       3.0
1       153451.809082       153250.811523     153451.809082  101780.856201     101.496338     153250.811523        0.498779                0.498779       97.002441           100.0                2.0                4.0                  2.0                  2.0   18650.165527            194.004883                 200.0  200.498779      199.002441       3.0
2       153553.305420       153261.295654     153553.305420  101697.335449     101.496338     153261.295654        0.997559                0.498779       97.002441           100.0                1.0                3.0                  2.0                  2.0   18650.165527            194.004883                 200.0  291.012207      200.000000       2.0
3       153654.801758       153451.809082     153654.801758  101788.347656     101.496338     153451.809082        2.493896                0.997559       97.002441           100.0                0.0                2.0                  2.0                  2.0   18650.165527            194.004883                 200.0  200.498779      200.000000       1.0
4       153756.298096       153550.806641     153756.298096  101699.330566     101.496338     153550.806641        3.990234                2.493896       97.002441           100.0                1.0                3.0                  2.0                  2.0   18650.165527            194.004883                 200.0  201.501221      200.000000       2.0
5       153857.794434       153552.307861     153857.794434  101701.829346     101.496338     153552.307861        5.486572                3.990234       97.002441           100.0                2.0                4.0                  2.0                  2.0   18650.165527            194.004883                 200.0  300.000000      200.000000       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=10215/2048, beliefs_improve=False, alpha=18407/4096, buf_size=200.[0m
[01/10 11:57:33]  --------------------------------------------------------------------------------
[01/10 11:57:33]  Iteration: 11 (0 solution, 10 counterexamples)
[01/10 11:57:49]  Generator returned sat in 15.380042 secs.
[01/10 11:57:49]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 3/2min_c + 2max_c + 3/2min_buffer_bytes + -1max_buffer_bytes + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 11:57:53]  Improved gap from 0.0 to 48.4375
[01/10 11:57:53]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 11:57:53]  Verifer returned sat in 3.871650 secs.
[01/10 11:57:53]  sf_get_cex returned in 3.989197 secs.
[01/10 11:57:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       249295.411865       249294.414307     249295.411865       0.499023       0.498779     249294.414307        0.498779                0.000000       67.938721           100.0                0.0                2.0                  0.0             3.498779  -77491.940918              0.000000             349.87793   0.498779        0.498779       1.0
1       249343.849365       249294.913086     249343.849365   48438.497559      48.437500     249294.913086        0.498779                0.498779       67.938721           100.0                1.0                3.0                  1.0             3.498779  -77440.877197             67.938721             349.87793  48.437500        0.000000       2.0
2       249392.286865       249343.350586     249392.286865   48486.436279      48.437500     249343.350586        0.498779                0.498779       67.938721           100.0                0.0                2.0                  1.0             3.498779  -77389.314697             67.938721             349.87793  48.437500        0.000000       1.0
3       249440.724365       249391.788086     249440.724365   48486.436279      48.437500     249391.788086        0.498779                0.498779       67.938721           100.0                0.0                2.0                  1.0             3.498779  -77337.752197             67.938721             349.87793  48.437500        0.000000       1.0
4       249489.161865       249440.225586     249489.161865   48486.436279      48.437500     249440.225586        0.498779                0.498779       67.938721           100.0                0.0                2.0                  1.0             3.498779  -77286.189697             67.938721             349.87793  48.437500        0.000000       1.0
5       249537.599365       249489.161865     249537.599365   48486.436279      48.437500     249489.161865        0.498779                0.498779       67.938721           100.0                0.0                1.0                  1.0             3.498779  -77286.189453             67.938721             349.87793  47.938721      -51.562256       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=79877/4096, buf_size=200.[0m
[01/10 11:57:53]  --------------------------------------------------------------------------------
[01/10 11:57:53]  Iteration: 12 (0 solution, 11 counterexamples)
[01/10 11:58:20]  Generator returned sat in 25.122967 secs.
[01/10 11:58:20]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + 1max_c + -1/2min_buffer_bytes + -3/2max_buffer_bytes + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 11:58:31]  Improved gap from 48.4375 to 48.4375
[01/10 11:58:32]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 11:58:32]  Verifer returned sat in 12.229192 secs.
[01/10 11:58:32]  sf_get_cex returned in 12.340749 secs.
[01/10 11:58:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        1.490598e+06        1.490592e+06      1.490598e+06       0.498779       0.498535      1.490592e+06             0.0                     0.0       63.251221           100.0                1.0                3.0                  1.0             4.999756  -77486.688477             63.251221            499.975586   5.751221        5.751221       2.0
1        1.490646e+06        1.490598e+06      1.490646e+06   48443.251221      48.437500      1.490598e+06             0.0                     0.0       63.251221           100.0                2.0                4.0                  2.0             4.999756  -77440.877197            126.502441            499.975586  48.437500        0.000000       3.0
2        1.490694e+06        1.490646e+06      1.490694e+06   48485.937500      48.437500      1.490646e+06             0.0                     0.0       63.251221           100.0                0.0                2.0                  2.0             4.999756  -77389.314697            126.502441            499.975586  48.437500        0.000000       1.0
3        1.490743e+06        1.490694e+06      1.490743e+06   48485.937500      48.437500      1.490694e+06             0.0                     0.0       63.251221           100.0                0.0                2.0                  2.0             4.999756  -77337.752197            126.502441            499.975586  48.437500        0.000000       1.0
4        1.490791e+06        1.490743e+06      1.490791e+06   48485.937500      48.437500      1.490743e+06             0.0                     0.0       63.251221           100.0                0.0                2.0                  2.0             4.999756  -77286.189697            126.502441            499.975586  48.437500        0.000000       1.0
5        1.490840e+06        1.490791e+06      1.490840e+06   48485.937500      48.437500      1.490791e+06             0.0                     0.0       63.251221           100.0                0.0                2.0                  2.0             4.999756  -77286.189697            126.502441            499.975586  48.437500      -51.562500       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=60677/4096, buf_size=200.[0m
[01/10 11:58:32]  --------------------------------------------------------------------------------
[01/10 11:58:32]  Iteration: 13 (0 solution, 12 counterexamples)
[01/10 11:59:22]  Generator returned sat in 48.887244 secs.
[01/10 11:59:22]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + -3/2max_c + 1/2min_buffer_bytes + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 11:59:38]  Improved gap from 13.51904296875 to 48.4375
[01/10 11:59:38]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 11:59:38]  Verifer returned sat in 15.846413 secs.
[01/10 11:59:38]  sf_get_cex returned in 15.973459 secs.
[01/10 11:59:38]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        1.490637e+06        1.490637e+06      1.490637e+06       0.498779       0.498535      1.490637e+06        0.498535                0.000000        49.43457           100.0                0.0                1.0                  0.0                  2.0  -77531.635986                   0.0                 200.0   0.000000             0.0       0.0
1        1.490686e+06        1.490637e+06      1.490686e+06   48936.533691      48.936035      1.490637e+06        0.498535                0.498535        49.43457           100.0                0.0                1.0                  0.0                  1.0  -77480.572021                   0.0                 100.0  48.437500             0.0       0.0
2        1.490735e+06        1.490686e+06      1.490735e+06   48984.971191      48.936035      1.490686e+06        0.498535                0.498535        49.43457           100.0                0.0                2.0                  0.0                  1.0  -77429.508057                   0.0                 100.0  48.936035             0.0       1.0
3        1.490784e+06        1.490735e+06      1.490784e+06   48985.469727      48.936035      1.490735e+06        0.498535                0.498535        49.43457           100.0                0.0                2.0                  0.0                  1.0  -77378.444092                   0.0                 100.0  48.936035             0.0       1.0
4        1.490833e+06        1.490784e+06      1.490833e+06   48985.469727      48.936035      1.490784e+06        0.498535                0.498535        49.43457           100.0                0.0                1.0                  0.0                  1.0  -77327.380127                   0.0                 100.0  48.437500             0.0       0.0
5        1.490882e+06        1.490833e+06      1.490882e+06   48984.971191      48.936035      1.490833e+06        0.498535                0.498535        49.43457           100.0                0.0                1.0                  0.0                  1.0  -77276.316162                   0.0                 100.0  48.437500             0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1021/2048, buf_size=200.[0m
[01/10 11:59:38]  --------------------------------------------------------------------------------
[01/10 11:59:38]  Iteration: 14 (0 solution, 13 counterexamples)
[01/10 12:00:32]  Generator returned sat in 52.797130 secs.
[01/10 12:00:32]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + 2max_c + 2min_buffer_bytes + -1max_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 12:00:42]  Improved gap from 48.4375 to 100
[01/10 12:00:43]  Improved number of small numbers from 129 to 129 out of a max of 134
[01/10 12:00:43]  Verifer returned sat in 10.662021 secs.
[01/10 12:00:43]  sf_get_cex returned in 10.784608 secs.
[01/10 12:00:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        1.490735e+06        1.490481e+06      1.490735e+06       0.498779       0.498535      1.490481e+06        0.498535                0.000000       50.249268           100.0                2.0                4.0                  2.0                  4.0  -77429.508057            100.498535                 400.0  253.739014           200.0       3.0
1        1.490836e+06        1.490633e+06      1.490836e+06  100752.772705     100.498535      1.490633e+06        0.997070                0.498535       76.121704           100.0                2.0                4.0                  2.0                  4.0  -77429.508057            152.243408                 400.0  201.495605           200.0       3.0
2        1.490988e+06        1.490635e+06      1.490988e+06  152445.900879     152.243408      1.490635e+06       53.240479                0.997070       76.121704           100.0                2.0                4.0                  2.0                  4.0  -77429.508057            152.243408                 400.0  300.000000           200.0       3.0
3        1.491140e+06        1.490735e+06      1.491140e+06  152596.648682     152.243408      1.490735e+06      105.483887               53.240479       76.121704           100.0                2.0                4.0                  2.0                  4.0  -77429.508057            152.243408                 400.0  300.000000           200.0       3.0
4        1.491292e+06        1.490835e+06      1.491292e+06  152648.892090     152.243408      1.490835e+06      157.727295              105.483887       76.121704           100.0                2.0                4.0                  2.0                  4.0  -77429.508057            152.243408                 400.0  300.000000           200.0       3.0
5        1.491445e+06        1.490935e+06      1.491445e+06  152701.135498     152.243408      1.490935e+06      209.970703              157.727295       76.121704           100.0                2.0                4.0                  2.0                  4.0  -77429.508057            152.243408                 400.0  300.000000           200.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=213989/1024, beliefs_improve=False, alpha=39939/2048, buf_size=200.[0m
[01/10 12:00:43]  --------------------------------------------------------------------------------
[01/10 12:00:43]  Iteration: 15 (0 solution, 14 counterexamples)
[01/10 12:01:36]  Generator returned sat in 51.628379 secs.
[01/10 12:01:36]  Candidate solution: 
[1m[94mif (+ -2min_c + 1/2max_c + -2min_buffer_bytes + 1/2max_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + -2max_c + -1min_buffer_bytes + 1max_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2max_c + 2min_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 12:17:40]  Improved gap from 19.866666666666667 to 100
[01/10 12:17:42]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 12:17:42]  Verifer returned sat in 965.262544 secs.
[01/10 12:17:42]  sf_get_cex returned in 965.393291 secs.
[01/10 12:17:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0                99.0              -183.0              99.0            1.0            1.0            -183.0             0.5                     0.5            19.0           179.0                1.0                3.0                  1.0             2.997207        101.125                  19.0                 536.5    281.5           199.5       2.0
1               118.0                -1.0             118.0        19282.0           19.0              -1.0             0.5                     0.5            91.0           179.0                0.0                2.0                  1.0             2.997207        101.125                  91.0                 536.5    118.5           118.5       1.0
2               300.0                -1.0             300.0       182119.0          182.0              -1.0             1.0                     0.5            91.0           179.0                0.0                2.0                  1.0             2.997207        101.125                  91.0                 536.5    300.0           200.0       1.0
3               482.0               100.0             482.0       182301.0          182.0             100.0            83.0                     1.0            91.0           179.0                1.0                3.0                  1.0             2.997207        101.125                  91.0                 536.5    299.0           200.0       2.0
4               664.0               272.0             664.0       182382.0          182.0             272.0           165.0                    83.0            91.0           179.0                1.0                3.0                  1.0             2.997207        101.125                  91.0                 536.5    227.0           200.0       2.0
5               846.0               358.0             846.0       182392.0          182.0             358.0           247.0                   165.0            91.0           179.0                1.0                3.0                  1.0             2.997207        101.125                  91.0                 536.5    241.0           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=493/2, beliefs_improve=False, alpha=19, buf_size=200.[0m
[01/10 12:17:42]  --------------------------------------------------------------------------------
[01/10 12:17:42]  Iteration: 16 (0 solution, 15 counterexamples)
[01/10 12:18:40]  Generator returned sat in 56.058487 secs.
[01/10 12:18:40]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1/2min_c + -2max_c + -3/2min_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1max_qdel + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 12:18:46]  Improved gap from 2.5 to 48.4375
[01/10 12:18:47]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 12:18:47]  Verifer returned sat in 6.791212 secs.
[01/10 12:18:47]  sf_get_cex returned in 6.922768 secs.
[01/10 12:18:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0          336.687256          330.437256        336.687256         1.0000       0.999756        330.437256             0.5                     0.0          96.875           100.0                2.0                4.0                  2.0                  4.5       -99.3750                193.75                 450.0   5.7500          5.7500       3.0
1          385.124756          330.937256        385.124756     48443.7500      48.437500        330.937256             0.5                     0.5          96.875           100.0                1.0                3.0                  2.0                  4.5       -53.5625                193.75                 450.0  53.6875          0.0000       2.0
2          433.562256          384.624756        433.562256     48491.6875      48.437500        384.624756             0.5                     0.5          96.875           100.0                0.0                2.0                  2.0                  4.5        -2.0000                193.75                 450.0  48.4375          0.0000       1.0
3          481.999756          433.062256        481.999756     48486.4375      48.437500        433.062256             0.5                     0.5          96.875           100.0                0.0                2.0                  2.0                  4.5        49.5625                193.75                 450.0  48.4375          0.0000       1.0
4          530.437256          481.499756        530.437256     48486.4375      48.437500        481.499756             0.5                     0.5          96.875           100.0                0.0                2.0                  2.0                  4.5       101.1250                193.75                 450.0  48.4375          0.0000       1.0
5          578.874756          529.937256        578.874756     48486.4375      48.437500        529.937256             0.5                     0.5          96.875           100.0                0.0                2.0                  2.0                  4.5       101.1250                193.75                 450.0  48.4375        -51.5625       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 12:18:47]  --------------------------------------------------------------------------------
[01/10 12:18:47]  Iteration: 17 (0 solution, 16 counterexamples)
[01/10 12:19:25]  Generator returned sat in 36.685434 secs.
[01/10 12:19:25]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -3/2max_c + -3/2min_buffer_bytes + 2max_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + -2max_c + 1/2min_buffer_bytes + 2max_buffer_bytes + 6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 12:19:44]  Improved gap from 48.4375 to 48.4375
[01/10 12:19:44]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 12:19:44]  Verifer returned sat in 19.200227 secs.
[01/10 12:19:44]  sf_get_cex returned in 19.313947 secs.
[01/10 12:19:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        1.082691e+06        1.082690e+06      1.082691e+06       0.999512       0.999756      1.082690e+06             0.0                     0.0         48.4375           100.0                1.0                3.0                  1.0                  4.5    -104.625488               48.4375                 450.0   0.499756        0.499756       2.0
1        1.082739e+06        1.082691e+06      1.082739e+06   48437.999756      48.437500      1.082691e+06             0.0                     0.0         48.4375           100.0                2.0                4.0                  2.0                  4.5     -53.562744               96.8750                 450.0  48.437500        0.000000       3.0
2        1.082787e+06        1.082739e+06      1.082787e+06   48485.937500      48.437500      1.082739e+06             0.0                     0.0         48.4375           100.0                0.0                2.0                  2.0                  4.5      -2.000244               96.8750                 450.0  48.437500        0.000000       1.0
3        1.082836e+06        1.082787e+06      1.082836e+06   48485.937500      48.437500      1.082787e+06             0.0                     0.0         48.4375           100.0                0.0                2.0                  2.0                  4.5      44.312256               96.8750                 450.0  48.437500       -5.250000       1.0
4        1.082884e+06        1.082841e+06      1.082884e+06   48485.937500      48.437500      1.082841e+06             0.0                     0.0         48.4375           100.0                0.0                1.0                  2.0                  4.5      95.874756               96.8750                 450.0  43.187500       -5.250000       0.0
5        1.082933e+06        1.082890e+06      1.082933e+06   48480.687500      48.437500      1.082890e+06             0.0                     0.0         48.4375           100.0                0.0                1.0                  2.0                  4.5      95.874756               96.8750                 450.0  43.187256      -56.812500       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 12:19:44]  --------------------------------------------------------------------------------
[01/10 12:19:44]  Iteration: 18 (0 solution, 17 counterexamples)
[01/10 12:22:10]  Generator returned sat in 143.790802 secs.
[01/10 12:22:10]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 12:22:18]  Improved gap from 16.666666666666668 to 48.4375
[01/10 12:22:18]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 12:22:18]  Verifer returned sat in 7.688473 secs.
[01/10 12:22:18]  sf_get_cex returned in 7.814476 secs.
[01/10 12:22:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        1.081885e+06        1.081881e+06      1.081885e+06       0.999512       0.999512      1.081881e+06             0.0                     0.0       39.649902           100.0                0.0                2.0                  0.0             2.499756     704.676025                   0.0            249.975586   3.7500          3.7500       1.0
1        1.081933e+06        1.081885e+06      1.081933e+06   48941.250000      48.937500      1.081885e+06             0.0                     0.0       39.649902           100.0                0.0                2.0                  0.0             2.499756     751.988525                   0.0            249.975586  48.9375          0.0000       1.0
2        1.081982e+06        1.081934e+06      1.081982e+06   48986.437500      48.937500      1.081934e+06             0.0                     0.0       39.649902           100.0                0.0                1.0                  0.0             2.499756     803.051025                   0.0            249.975586  48.4375          0.0000       0.0
3        1.082031e+06        1.081983e+06      1.082031e+06   48985.937500      48.937500      1.081983e+06             0.0                     0.0       39.649902           100.0                0.0                1.0                  0.0             2.499756     853.613525                   0.0            249.975586  47.9375         -0.5000       0.0
4        1.082080e+06        1.082032e+06      1.082080e+06   48985.437500      48.937500      1.082032e+06             0.0                     0.0       39.649902           100.0                0.0                1.0                  0.0             2.499756     905.176025                   0.0            249.975586  48.4375          0.0000       0.0
5        1.082129e+06        1.082080e+06      1.082129e+06   48985.937500      48.937500      1.082080e+06             0.0                     0.0       39.649902           100.0                0.0                2.0                  0.0             2.499756     905.176025                   0.0            249.975586  48.9375        -51.0625       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=19021/2048, buf_size=200.[0m
[01/10 12:22:18]  --------------------------------------------------------------------------------
[01/10 12:22:18]  Iteration: 19 (0 solution, 18 counterexamples)
[01/10 12:24:02]  Generator returned sat in 101.653896 secs.
[01/10 12:24:02]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c + 1/2min_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 3/2min_c + -3/2max_c + 1/2max_buffer_bytes + -9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 12:24:05]  Improved gap from 48.4375 to 100
[01/10 12:24:06]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 12:24:06]  Verifer returned sat in 3.978107 secs.
[01/10 12:24:06]  sf_get_cex returned in 4.091003 secs.
[01/10 12:24:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        1.100539e+06        1.100336e+06      1.100539e+06       0.999512       0.999512      1.100336e+06             0.0                     0.0            81.5           101.5                1.0                3.0                  1.0                  2.5     803.051025                  81.5                253.75    203.0           198.5       2.0
1        1.100640e+06        1.100436e+06      1.100640e+06  101203.000000     101.000000      1.100436e+06             0.0                     0.0            81.5           101.5                1.0                3.0                  1.0                  2.5     803.051025                  81.5                253.75    204.0           199.5       2.0
2        1.100741e+06        1.100539e+06      1.100741e+06  101204.000000     101.000000      1.100539e+06             0.5                     0.0            81.5           101.5                1.0                3.0                  1.0                  2.5     803.051025                  81.5                253.75    201.5           200.0       2.0
3        1.100842e+06        1.100540e+06      1.100842e+06  101202.000000     101.000000      1.100540e+06             1.5                     0.5            81.5           101.5                1.0                3.0                  1.0                  2.5     803.051025                  81.5                253.75    300.0           200.0       2.0
4        1.100943e+06        1.100640e+06      1.100943e+06  101301.500000     101.000000      1.100640e+06             2.5                     1.5            81.5           101.5                1.0                3.0                  1.0                  2.5     803.051025                  81.5                253.75    300.0           200.0       2.0
5        1.101044e+06        1.100742e+06      1.101044e+06  101302.500000     101.000000      1.100742e+06             3.5                     2.5            81.5           101.5                1.0                3.0                  1.0                  2.5     803.051025                  81.5                253.75    298.5           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=7/2, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 12:24:06]  --------------------------------------------------------------------------------
[01/10 12:24:06]  Iteration: 20 (0 solution, 19 counterexamples)
[01/10 12:28:13]  Generator returned sat in 245.008796 secs.
[01/10 12:28:13]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1/2min_c + -2max_c + -3/2min_buffer_bytes + 1max_buffer_bytes + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 12:28:18]  Improved gap from 0.0 to 48.4375
[01/10 12:28:18]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 12:28:18]  Verifer returned sat in 5.114593 secs.
[01/10 12:28:18]  sf_get_cex returned in 5.238183 secs.
[01/10 12:28:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        1.100923e+06        1.100919e+06      1.100923e+06       0.999268       0.999268      1.100919e+06        0.499756                0.000000         68.4375           100.0                1.0                3.0                  1.0                  3.5     704.175781               68.4375                 350.0   3.2500        3.250000       2.0
1        1.100972e+06        1.100923e+06      1.100972e+06   48941.249756      48.937500      1.100923e+06        0.499756                0.499756         68.4375           100.0                0.0                1.0                  1.0                  1.0     751.988281               68.4375                 100.0  48.4375        0.000000       0.0
2        1.101021e+06        1.100971e+06      1.101021e+06   48986.437256      48.937500      1.100971e+06        0.499756                0.499756         68.4375           100.0                0.0                2.0                  1.0                  1.0     803.050781               68.4375                 100.0  48.9375        0.000000       1.0
3        1.101069e+06        1.101020e+06      1.101069e+06   48986.937256      48.937500      1.101020e+06        0.499756                0.499756         68.4375           100.0                0.0                2.0                  1.0                  1.0     854.113281               68.4375                 100.0  48.9375        0.000000       1.0
4        1.101118e+06        1.101069e+06      1.101118e+06   48986.937256      48.937500      1.101069e+06        0.499756                0.499756         68.4375           100.0                0.0                2.0                  1.0                  1.0     905.175537               68.4375                 100.0  48.9375       -0.000244       1.0
5        1.101167e+06        1.101118e+06      1.101167e+06   48986.937256      48.937500      1.101118e+06        0.499756                0.499756         68.4375           100.0                0.0                1.0                  1.0                  1.0     956.238037               68.4375                 100.0  48.4375       -0.000244       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 12:28:18]  --------------------------------------------------------------------------------
[01/10 12:28:18]  Iteration: 21 (0 solution, 20 counterexamples)
[01/10 12:31:15]  Generator returned sat in 174.259736 secs.
[01/10 12:31:15]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 12:31:18]  Improved gap from 10.991943359375 to 100
[01/10 12:31:19]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 12:31:19]  Verifer returned sat in 3.984535 secs.
[01/10 12:31:19]  sf_get_cex returned in 4.111808 secs.
[01/10 12:31:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        1.100839e+06        1.100639e+06      1.100839e+06       0.999268       0.999268      1.100639e+06             0.5                     0.0            99.5           100.0                1.0                3.0                  1.0                  3.0     883.623535                  99.5                 300.0  199.500000            99.5       2.0
1        1.101038e+06        1.100839e+06      1.101038e+06  199200.000000     199.000000      1.100839e+06             0.5                     0.5           100.0           100.0                0.0                1.0                  1.0                  1.0     883.623535                 100.0                 100.0  198.500000           198.5       0.0
2        1.101238e+06        1.100840e+06      1.101238e+06  200199.000000     200.000000      1.100840e+06            99.0                     0.5           100.0           100.0                0.0                2.0                  1.0                  1.0     883.623535                 100.0                 100.0  298.999756           200.0       1.0
3        1.101438e+06        1.101039e+06      1.101438e+06  200397.999756     200.000000      1.101039e+06           199.0                    99.0           100.0           100.0                0.0                2.0                  1.0                  1.0     883.623535                 100.0                 100.0  200.000000           200.0       1.0
4        1.101638e+06        1.101039e+06      1.101638e+06  200399.000000     200.000000      1.101039e+06           299.0                   199.0           100.0           100.0                0.0                2.0                  1.0                  1.0     883.623535                 100.0                 100.0  300.000000           200.0       1.0
5        1.101838e+06        1.101140e+06      1.101838e+06  200599.000000     200.000000      1.101140e+06           399.0                   299.0           100.0           100.0                1.0                3.0                  1.0                  1.0     883.623535                 100.0                 100.0  299.500000           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=797/2, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 12:31:19]  --------------------------------------------------------------------------------
[01/10 12:31:19]  Iteration: 22 (0 solution, 21 counterexamples)
[01/10 12:36:08]  Generator returned sat in 287.226832 secs.
[01/10 12:36:08]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + 1min_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1/2min_c + 3/2max_c + 1min_buffer_bytes + 1/2max_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -1max_c + -1/2min_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 12:36:18]  Improved number of small numbers from 108 to 110 out of a max of 133
[01/10 12:36:18]  Verifer returned sat in 9.087950 secs.
[01/10 12:36:18]  sf_get_cex returned in 9.217559 secs.
[01/10 12:36:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        1.101152e+06        1.100970e+06      1.101152e+06       0.999268       0.999268      1.100970e+06             0.0                     0.0            80.8      100.999756                0.0                2.0                  0.0                  2.0     883.623535                   0.0            201.999512  182.80000           140.4       1.0
1        1.101314e+06        1.101052e+06      1.101314e+06  161782.800000     161.600000      1.101052e+06             2.0                     0.0            80.8      100.999756                1.0                3.0                  1.0                  2.0     883.623535                  80.8            201.999512  259.60000           200.0       2.0
2        1.101354e+06        1.101212e+06      1.101354e+06   40661.600000      40.400000      1.101212e+06             2.0                     2.0            80.8      100.999756                0.0                2.0                  1.0                  2.0     883.623535                  80.8            201.999512  140.40000           140.4       1.0
3        1.101516e+06        1.101212e+06      1.101516e+06  161742.400000     161.600000      1.101212e+06             4.0                     2.0            80.8      100.999756                0.0                2.0                  1.0                  2.0     883.623535                  80.8            201.999512  300.00000           200.0       1.0
4        1.101678e+06        1.101374e+06      1.101678e+06  161904.000000     161.600000      1.101374e+06            65.6                     4.0            80.8      100.999756                0.0                2.0                  1.0                  2.0     883.623535                  80.8            201.999512  238.40000           200.0       1.0
5        1.101839e+06        1.101412e+06      1.101839e+06  161904.000000     161.600000      1.101412e+06           127.2                    65.6            80.8      100.999756                1.0                3.0                  1.0                  2.0     883.623535                  80.8            201.999512  299.99976           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=626/5, beliefs_improve=False, alpha=2047/4096, buf_size=200.[0m
[01/10 12:36:18]  --------------------------------------------------------------------------------
[01/10 12:36:18]  Iteration: 23 (0 solution, 22 counterexamples)
[01/10 12:40:57]  Generator returned sat in 276.606437 secs.
[01/10 12:40:57]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 12:41:03]  Improved gap from 0.5 to 48.4375
[01/10 12:41:04]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 12:41:04]  Verifer returned sat in 6.755536 secs.
[01/10 12:41:04]  sf_get_cex returned in 6.882612 secs.
[01/10 12:41:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        1.101324e+06        1.101318e+06      1.101324e+06       0.999023       0.999268      1.101318e+06             0.0                     0.0       67.937256           100.0                2.0                4.0                  2.0                  2.5     883.623535            135.874512                 250.0   5.250000        5.249756       3.0
1        1.101372e+06        1.101324e+06      1.101372e+06   48442.750000      48.437500      1.101324e+06             0.0                     0.0       67.937256           100.0                2.0                4.0                  2.0                  2.5     929.436035            135.874512                 250.0  48.437500       -0.500244       3.0
2        1.101421e+06        1.101373e+06      1.101421e+06   48485.937500      48.437500      1.101373e+06             0.0                     0.0       67.937256           100.0                0.0                1.0                  2.0                  2.5     980.998535            135.874512                 250.0  47.937256       -0.500244       0.0
3        1.101469e+06        1.101421e+06      1.101469e+06   48485.437256      48.437500      1.101421e+06             0.0                     0.0       67.937256           100.0                0.0                1.0                  2.0                  2.5    1032.561035            135.874512                 250.0  47.937256       -0.500244       0.0
4        1.101517e+06        1.101470e+06      1.101517e+06   48485.437256      48.437500      1.101470e+06             0.0                     0.0       67.937256           100.0                0.0                1.0                  2.0                  2.5    1084.123535            135.874512                 250.0  47.937256       -0.500244       0.0
5        1.101566e+06        1.101518e+06      1.101566e+06   48485.437256      48.437500      1.101518e+06             0.0                     0.0       67.937256           100.0                0.0                1.0                  2.0                  2.5    1084.123535            135.874512                 250.0  47.937256      -52.062744       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=79871/4096, buf_size=200.[0m
[01/10 12:41:04]  --------------------------------------------------------------------------------
[01/10 12:41:04]  Iteration: 24 (0 solution, 23 counterexamples)
[01/10 12:42:48]  Generator returned sat in 101.559666 secs.
[01/10 12:42:48]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 12:42:51]  Improved gap from 1.5 to 100
[01/10 12:42:51]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 12:42:51]  Verifer returned sat in 3.337895 secs.
[01/10 12:42:51]  sf_get_cex returned in 3.465919 secs.
[01/10 12:42:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0       913181.489746       912882.989746     913181.489746       0.999023       0.999268     912882.989746             0.5                     0.0             2.0           100.0                1.0                3.0                  1.0                  3.5    1032.561035                   2.0                 350.0    298.0           198.0       2.0
1       913185.489746       913082.989746     913185.489746    4298.500000       4.000000     913082.989746             0.5                     0.5           100.0           100.0                0.0                2.0                  1.0                  2.0    1032.561035                 100.0                 200.0    102.0           102.0       1.0
2       913385.489746       913181.489746     913385.489746  200102.500000     200.000000     913181.489746             2.5                     0.5           100.0           100.0                0.0                2.0                  1.0                  2.0    1032.561035                 100.0                 200.0    201.5           200.0       1.0
3       913585.489746       913282.989746     913585.489746  200204.000000     200.000000     913282.989746           102.5                     2.5           100.0           100.0                0.0                2.0                  1.0                  2.0    1032.561035                 100.0                 200.0    200.0           200.0       1.0
4       913785.489746       913282.989746     913785.489746  200302.500000     200.000000     913282.989746           202.5                   102.5           100.0           100.0                0.0                2.0                  1.0                  2.0    1032.561035                 100.0                 200.0    300.0           200.0       1.0
5       913985.489746       913383.489746     913985.489746  200502.500000     200.000000     913383.489746           302.5                   202.5           100.0           100.0                1.0                3.0                  1.0                  2.0    1032.561035                 100.0                 200.0    299.5           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=302, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 12:42:51]  --------------------------------------------------------------------------------
[01/10 12:42:51]  Iteration: 25 (0 solution, 24 counterexamples)
[01/10 12:44:28]  Generator returned sat in 93.976984 secs.
[01/10 12:44:28]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1min_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 12:44:32]  Improved gap from 19.0 to 48.4375
[01/10 12:44:32]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 12:44:32]  Verifer returned sat in 4.465264 secs.
[01/10 12:44:32]  sf_get_cex returned in 4.591369 secs.
[01/10 12:44:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t   queue_t  bottle_queue_t  qdelay_t
0       912983.489746       912982.989746     912983.489746       0.998779       0.999023     912982.989746             0.5                     0.0         51.3125           100.0                0.0                1.0                  0.0                  2.0    1032.561035                   0.0                 200.0   0.00000         0.00000       0.0
1       913034.802246       912983.489746     913034.802246   51313.000000      51.312500     912983.489746             0.5                     0.5         51.3125           100.0                0.0                1.0                  0.0                  1.0    1081.248535                   0.0                 100.0  50.81250         0.00000       0.0
2       913086.114746       913034.302246     913086.114746   51363.812500      51.312500     913034.302246             0.5                     0.5         51.3125           100.0                0.0                2.0                  0.0                  1.0    1129.936035                   0.0                 100.0  51.31250         0.00000       1.0
3       913111.770996       913085.614746     913111.770996   25708.062500      25.656250     913085.614746             0.5                     0.5         51.3125           100.0                0.0                2.0                  0.0                  1.0    1181.498535                   0.0                 100.0  25.65625       -22.78125       1.0
4       913137.427246       913134.052246     913137.427246   25682.406250      25.656250     913134.052246             0.5                     0.5         51.3125           100.0                0.0                1.0                  0.0                  1.0    1233.061035                   0.0                 100.0   2.87500       -45.56250       0.0
5       913188.739746       913182.489746     913188.739746   51315.875000      51.312500     913182.489746             0.5                     0.5         51.3125           100.0                0.0                1.0                  0.0                  1.0    1233.061035                   0.0                 100.0   5.75000       -94.25000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 12:44:33]  --------------------------------------------------------------------------------
[01/10 12:44:33]  Iteration: 26 (0 solution, 25 counterexamples)
[01/10 12:45:39]  Generator returned sat in 64.327993 secs.
[01/10 12:45:40]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 12:45:45]  Improved number of small numbers from 133 to 133 out of a max of 133
[01/10 12:45:45]  Verifer returned sat in 4.821376 secs.
[01/10 12:45:45]  sf_get_cex returned in 4.953824 secs.
[01/10 12:45:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0       913185.489746       912982.989746     913185.489746       0.998535       0.999023     912982.989746             0.5                     0.0           100.0           100.0                2.0                4.0                  2.0                  2.5    1180.248535                 200.0                 250.0    202.0           200.0       3.0
1       913285.989746       913083.489746     913285.989746  100702.500000     100.500000     913083.489746             1.0                     0.5           100.0           100.0                1.0                3.0                  2.0                  2.5    1180.248535                 200.0                 250.0    201.5           200.0       2.0
2       913386.489746       913183.989746     913386.489746  100702.500000     100.500000     913183.989746             1.5                     1.0           100.0           100.0                2.0                4.0                  2.0                  2.5    1180.248535                 200.0                 250.0    201.0           200.0       3.0
3       913486.989746       913184.989746     913486.989746  100702.500000     100.500000     913184.989746             2.0                     1.5           100.0           100.0                2.0                4.0                  2.0                  2.5    1180.248535                 200.0                 250.0    300.0           200.0       3.0
4       913587.489746       913284.989746     913587.489746  100802.000000     100.500000     913284.989746             2.5                     2.0           100.0           100.0                2.0                4.0                  2.0                  2.5    1180.248535                 200.0                 250.0    300.0           200.0       3.0
5       913687.989746       913384.989746     913687.989746  100802.500000     100.500000     913384.989746             3.0                     2.5           100.0           100.0                2.0                4.0                  2.0                  2.5    1180.248535                 200.0                 250.0    300.0           200.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=2, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 12:45:45]  --------------------------------------------------------------------------------
[01/10 12:45:45]  Iteration: 27 (0 solution, 26 counterexamples)
[01/10 12:46:12]  Generator returned sat in 25.091047 secs.
[01/10 12:46:13]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + 1max_c + 1min_buffer_bytes + 1max_buffer_bytes + -9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 12:46:17]  Improved gap from 1.0 to 100
[01/10 12:46:19]  Improved number of small numbers from 85 to 92 out of a max of 134
[01/10 12:46:19]  Verifer returned sat in 6.143953 secs.
[01/10 12:46:19]  sf_get_cex returned in 6.272709 secs.
[01/10 12:46:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0       913184.869674       912884.869674     913184.869674       0.998047       0.999023     912884.869674        0.060059                0.000000        50.15009           100.0                2.0                4.0                  2.0             7.060059    1180.248291             100.30018            706.005859  299.939941      199.939941       3.0
1       913285.169854       913084.869674     913285.169854  100600.180108     100.300180     913084.869674        0.300180                0.060059       100.00000           100.0                0.0                2.0                  2.0             2.000000    1180.248291             200.00000            200.000000  200.000000      200.000000       1.0
2       913485.169854       913184.869674     913485.169854  200200.300180     200.000000     913184.869674      100.300180                0.300180       100.00000           100.0                0.0                2.0                  2.0             2.000000    1180.248291             200.00000            200.000000  200.000000      200.000000       1.0
3       913685.169854       913184.869674     913685.169854  200300.300180     200.000000     913184.869674      200.300180              100.300180       100.00000           100.0                0.0                2.0                  2.0             2.000000    1180.248291             200.00000            200.000000  300.000000      200.000000       1.0
4       913885.169854       913284.989746     913885.169854  200500.300180     200.000000     913284.989746      300.300180              200.300180       100.00000           100.0                1.0                3.0                  2.0             2.000000    1180.248291             200.00000            200.000000  299.879928      200.000000       2.0
5       913985.169854       913385.049805     913985.169854  100600.180108     100.000000     913385.049805      300.300180              300.300180       100.00000           100.0                1.0                3.0                  2.0             2.000000    1180.248291             200.00000            200.000000  299.819869      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=300, beliefs_improve=False, alpha=123/2048, buf_size=200.[0m
[01/10 12:46:19]  --------------------------------------------------------------------------------
[01/10 12:46:19]  Iteration: 28 (0 solution, 27 counterexamples)
[01/10 12:49:42]  Generator returned sat in 200.265586 secs.
[01/10 12:49:42]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1/2max_c + 1/2min_buffer_bytes + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 3/2min_buffer_bytes + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2max_c + -3/2min_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 12:49:51]  Improved gap from 0.5 to 48.4375
[01/10 12:49:51]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 12:49:51]  Verifer returned sat in 8.547388 secs.
[01/10 12:49:51]  sf_get_cex returned in 8.683967 secs.
[01/10 12:49:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       913647.074707       913646.074951     913647.074707       0.997803       0.998779     913646.074951        0.499756                0.000000          97.875          214.75                1.0                3.0                  1.0                  2.0    1129.685791                97.875                 429.5   0.500000        0.000244       2.0
1       913696.012207       913646.574707     913696.012207   48938.499756      48.937500     913646.574707        0.499756                0.499756          97.875          214.75                2.0                4.0                  2.0                  2.0    1180.248291               195.750                 429.5  48.937744       -0.499756       3.0
2       913744.949707       913696.012207     913744.949707   48986.937500      48.937500     913696.012207        0.499756                0.499756          97.875          214.75                0.0                1.0                  2.0                  2.0    1231.810547               195.750                 429.5  48.437744        0.000000       0.0
3       913793.887207       913745.449707     913793.887207   48986.437500      48.937500     913745.449707        0.499756                0.499756          97.875          214.75                0.0                1.0                  2.0                  2.0    1282.373291               195.750                 429.5  47.937744       -0.499756       0.0
4       913842.824707       913793.887207     913842.824707   48985.937500      48.937500     913793.887207        0.499756                0.499756          97.875          214.75                0.0                1.0                  2.0                  2.0    1333.935547               195.750                 429.5  48.437744        0.000000       0.0
5       913891.762207       913842.824951     913891.762207   48986.437500      48.937500     913842.824951        0.499756                0.499756          97.875          214.75                0.0                1.0                  2.0                  2.0    1333.935791               195.750                 429.5  48.437500      -51.062256       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 12:49:51]  --------------------------------------------------------------------------------
[01/10 12:49:51]  Iteration: 29 (0 solution, 28 counterexamples)
[01/10 12:56:43]  Generator returned sat in 408.892892 secs.
[01/10 12:56:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -2max_c + 2min_buffer_bytes + 3/2max_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + -3/2max_c + -2min_buffer_bytes + -1max_buffer_bytes > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 12:56:48]  Improved gap from 48.4375 to 100
[01/10 12:56:50]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 12:56:50]  Verifer returned sat in 6.732397 secs.
[01/10 12:56:50]  sf_get_cex returned in 6.847287 secs.
[01/10 12:56:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0       903257.074707       902956.574707     903257.074707       0.997803       0.998779     902956.574707             0.5                     0.0            81.0           100.0                2.0                4.0                  2.0                  2.0   11719.685791                 162.0                 200.0    300.0           200.0       3.0
1       903338.074707       903156.574707     903338.074707   81300.500000      81.000000     903156.574707             0.5                     0.5           100.0           100.0                1.0                3.0                  2.0                  2.0   11719.685791                 200.0                 200.0    181.0           181.0       2.0
2       903457.574707       903255.074707     903457.574707  119681.500000     119.500000     903255.074707             1.0                     0.5           100.0           100.0                1.0                3.0                  2.0                  2.0   11719.685791                 200.0                 200.0    201.5           200.0       2.0
3       903577.074707       903356.574707     903577.074707  119702.500000     119.500000     903356.574707            20.5                     1.0           100.0           100.0                0.0                2.0                  2.0                  2.0   11719.685791                 200.0                 200.0    200.0           200.0       1.0
4       903696.574707       903356.574707     903696.574707  119720.500000     119.500000     903356.574707            40.0                    20.5           100.0           100.0                0.0                2.0                  2.0                  2.0   11719.685791                 200.0                 200.0    300.0           200.0       1.0
5       903816.074707       903458.074707     903816.074707  119840.000000     119.500000     903458.074707            59.5                    40.0           100.0           100.0                1.0                3.0                  2.0                  2.0   11719.685791                 200.0                 200.0    298.5           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=59, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 12:56:50]  --------------------------------------------------------------------------------
[01/10 12:56:50]  Iteration: 30 (0 solution, 29 counterexamples)
[01/10 12:58:23]  Generator returned sat in 89.863196 secs.
[01/10 12:58:23]  Candidate solution: 
[1m[94mif (+ 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + 1/2max_c + -1min_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_qdel + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 12:58:29]  Improved gap from 0.0 to 100
[01/10 12:58:29]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 12:58:29]  Verifer returned sat in 5.956454 secs.
[01/10 12:58:29]  sf_get_cex returned in 6.090503 secs.
[01/10 12:58:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0       903136.574463       902960.574463     903136.574463       0.997559       0.998535     902960.574463             0.5                     0.0            75.5           100.0                1.0                3.0                  1.0                  2.5   11815.685791                  75.5                 250.0    175.5           175.5       2.0
1       903212.074463       903035.574463     903212.074463   75676.000000      75.500000     903035.574463             0.5                     0.5            75.5           100.0                0.0                2.0                  1.0                  2.0   11815.685791                  75.5                 200.0    176.0           151.0       1.0
2       903363.074463       903160.074463     903363.074463  151176.500000     151.000000     903160.074463             2.5                     0.5            75.5           100.0                0.0                2.0                  1.0                  2.0   11815.685791                  75.5                 200.0    200.5           200.0       1.0
3       903514.074463       903260.574463     903514.074463  151203.000000     151.000000     903260.574463            53.5                     2.5            75.5           100.0                0.0                2.0                  1.0                  2.0   11815.685791                  75.5                 200.0    200.0           200.0       1.0
4       903665.074463       903260.574463     903665.074463  151253.500000     151.000000     903260.574463           104.5                    53.5            75.5           100.0                0.0                2.0                  1.0                  2.0   11815.685791                  75.5                 200.0    300.0           200.0       1.0
5       903816.074463       903361.074463     903816.074463  151404.500000     151.000000     903361.074463           155.5                   104.5            75.5           100.0                1.0                3.0                  1.0                  2.0   11815.685791                  75.5                 200.0    299.5           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=155, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 12:58:29]  --------------------------------------------------------------------------------
[01/10 12:58:29]  Iteration: 31 (0 solution, 30 counterexamples)
[01/10 13:06:21]  Generator returned sat in 469.230084 secs.
[01/10 13:06:22]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + 2max_c + 2min_buffer_bytes + 1max_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 13:06:27]  Improved gap from 1.5 to 100
[01/10 13:06:27]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 13:06:27]  Verifer returned sat in 5.077726 secs.
[01/10 13:06:27]  sf_get_cex returned in 5.216140 secs.
[01/10 13:06:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0       903161.574219       902960.574219     903161.574219       0.997314       0.998291     902960.574219             0.5                     0.0           100.0           100.0                1.0                3.0                  1.0                  2.0   11815.685791                 100.0                 200.0    200.5           102.5       2.0
1       903261.074219       903158.574219     903261.074219   99701.000000      99.500000     903158.574219             0.5                     0.5           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    102.0           102.0       1.0
2       903461.074219       903161.574219     903461.074219  200102.500000     200.000000     903161.574219             2.5                     0.5           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    297.0           200.0       1.0
3       903661.074219       903358.574219     903661.074219  200299.500000     200.000000     903358.574219           102.5                     2.5           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    200.0           200.0       1.0
4       903861.074219       903358.574219     903861.074219  200302.500000     200.000000     903358.574219           202.5                   102.5           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    300.0           200.0       1.0
5       904061.074219       903459.074219     904061.074219  200502.500000     200.000000     903459.074219           302.5                   202.5           100.0           100.0                1.0                3.0                  1.0                  2.0   11815.685791                 100.0                 200.0    299.5           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=302, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 13:06:27]  --------------------------------------------------------------------------------
[01/10 13:06:27]  Iteration: 32 (0 solution, 31 counterexamples)
[01/10 13:07:50]  Generator returned sat in 80.110954 secs.
[01/10 13:07:50]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1max_qdel + 1min_buffer + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 13:07:53]  Improved gap from 2.5 to 100
[01/10 13:07:53]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 13:07:53]  Verifer returned sat in 2.948956 secs.
[01/10 13:07:54]  sf_get_cex returned in 3.077812 secs.
[01/10 13:07:54]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0       903182.074219       903020.074219     903182.074219        0.99707       0.998291     903020.074219             0.5                     0.0           100.0           100.0                1.0                3.0                  1.0                  4.0   11815.685791                 100.0                 400.0    161.5           161.5       2.0
1       903301.574219       903120.074219     903301.574219   119662.00000     119.500000     903120.074219             0.5                     0.5           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    181.0           181.0       1.0
2       903421.074219       903120.074219     903421.074219   119681.50000     119.500000     903120.074219             1.0                     0.5           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    300.0           200.0       1.0
3       903540.574219       903320.074219     903540.574219   119801.00000     119.500000     903320.074219            20.5                     1.0           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    200.0           200.0       1.0
4       903660.074219       903320.074219     903660.074219   119720.50000     119.500000     903320.074219            40.0                    20.5           100.0           100.0                0.0                2.0                  1.0                  2.0   11815.685791                 100.0                 200.0    300.0           200.0       1.0
5       903779.574219       903420.574219     903779.574219   119840.00000     119.500000     903420.574219            59.5                    40.0           100.0           100.0                1.0                3.0                  1.0                  2.0   11815.685791                 100.0                 200.0    299.5           200.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=59, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 13:07:54]  --------------------------------------------------------------------------------
[01/10 13:07:54]  Iteration: 33 (0 solution, 32 counterexamples)
[01/10 13:12:55]  Generator returned sat in 298.004320 secs.
[01/10 13:12:55]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 13:13:03]  Improved gap from 0.0 to 48.4375
[01/10 13:13:04]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 13:13:04]  Verifer returned sat in 8.499754 secs.
[01/10 13:13:04]  sf_get_cex returned in 8.628965 secs.
[01/10 13:13:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t   queue_t  bottle_queue_t  qdelay_t
0       853782.073975       853781.573975     853782.073975        0.99707       0.998291     853781.573975             0.5                     0.0         48.4375           100.0                0.0                1.0                  0.0                  2.0   11713.560791                   0.0                 200.0   0.00000         0.00000       0.0
1       853831.011475       853782.073975     853831.011475    48938.00000      48.937500     853782.073975             0.5                     0.5         48.4375           100.0                0.0                1.0                  0.0                  1.0   11764.623291                   0.0                 100.0  48.43750         0.00000       0.0
2       853879.948975       853830.511475     853879.948975    48986.43750      48.937500     853830.511475             0.5                     0.5         48.4375           100.0                0.0                2.0                  0.0                  1.0   11815.685791                   0.0                 100.0  48.93750         0.00000       1.0
3       853904.167725       853884.198975     853904.167725    24268.18750      24.218750     853884.198975             0.5                     0.5         48.4375           100.0                0.0                1.0                  0.0                  1.0   11862.498291                   0.0                 100.0  19.46875       -28.96875       0.0
4       853953.105225       853932.636475     853953.105225    48957.46875      48.937500     853932.636475             0.5                     0.5         48.4375           100.0                0.0                1.0                  0.0                  1.0   11914.060791                   0.0                 100.0  19.96875       -28.46875       0.0
5       854002.042725       853981.073975     854002.042725    48957.96875      48.937500     853981.073975             0.5                     0.5         48.4375           100.0                0.0                1.0                  0.0                  1.0   11914.060791                   0.0                 100.0  20.46875       -79.53125       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 13:13:04]  --------------------------------------------------------------------------------
[01/10 13:13:04]  Iteration: 34 (0 solution, 33 counterexamples)
[01/10 13:19:34]  Generator returned sat in 386.604801 secs.
[01/10 13:19:34]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1max_qdel + 1min_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -3/2max_c + -1min_buffer_bytes + -1/2max_buffer_bytes + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 13:19:45]  Improved gap from 0.0 to 48.4375
[01/10 13:19:45]  Improved number of small numbers from 126 to 134 out of a max of 134
[01/10 13:19:45]  Verifer returned sat in 11.150430 secs.
[01/10 13:19:45]  sf_get_cex returned in 11.289919 secs.
[01/10 13:19:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       854490.184326       854490.017578     854490.184326       0.997070       0.998291     854490.017578             0.0                     0.0         48.4375           100.0                2.0                4.0                  2.0             4.166748   11713.894043                96.875            416.674805   0.166748        0.166504       3.0
1       854538.621826       854490.184326     854538.621826   48437.666748      48.437500     854490.184326             0.0                     0.0         48.4375           100.0                0.0                2.0                  2.0             4.166748   11765.290039                96.875            416.674805  48.437500        0.000000       1.0
2       854587.059326       854538.621826     854587.059326   48485.937500      48.437500     854538.621826             0.0                     0.0         48.4375           100.0                0.0                2.0                  2.0             4.166748   11816.852539                96.875            416.674805  48.437500        0.000000       1.0
3       854635.496826       854587.059326     854635.496826   48485.937500      48.437500     854587.059326             0.0                     0.0         48.4375           100.0                0.0                2.0                  2.0             4.166748   11868.415039                96.875            416.674805  48.437500        0.000000       1.0
4       854683.934326       854635.496826     854683.934326   48485.937500      48.437500     854635.496826             0.0                     0.0         48.4375           100.0                0.0                2.0                  2.0             4.166748   11914.060791                96.875            416.674805  48.437500       -5.916748       1.0
5       854732.371826       854689.851074     854732.371826   48485.937500      48.437500     854689.851074             0.0                     0.0         48.4375           100.0                0.0                1.0                  2.0             4.166748   11914.060791                96.875            416.674805  42.520752      -57.479248       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40619/2048, buf_size=200.[0m
[01/10 13:19:45]  --------------------------------------------------------------------------------
[01/10 13:19:45]  Iteration: 35 (0 solution, 34 counterexamples)
[01/10 13:24:48]  Generator returned sat in 298.930169 secs.
[01/10 13:24:48]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -3/2max_c + 1/2max_buffer_bytes + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_c + 3/2max_c + 2max_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 13:25:05]  Improved gap from 48.4375 to 48.4375
[01/10 13:25:06]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 13:25:06]  Verifer returned sat in 17.822546 secs.
[01/10 13:25:06]  sf_get_cex returned in 17.937465 secs.
[01/10 13:25:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        796684.78833       796684.288330      796684.78833       0.996826       0.998291     796684.288330             0.0                     0.0         48.9375           100.0                1.0                3.0                  1.0                2.375   11715.227539               48.9375                 237.5   0.500000        0.500000       2.0
1        796733.72583       796684.788330      796733.72583   48938.000000      48.937500     796684.788330             0.0                     0.0         48.9375           100.0                2.0                4.0                  2.0                2.375   11765.290039               97.8750                 237.5  48.937500       -0.500000       3.0
2        796782.66333       796734.225830      796782.66333   48986.437500      48.937500     796734.225830             0.0                     0.0         48.9375           100.0                0.0                1.0                  2.0                2.375   11816.852539               97.8750                 237.5  48.437500        0.000000       0.0
3        796807.13208       796782.663330      796807.13208   24517.187500      24.468750     796782.663330             0.0                     0.0         48.9375           100.0                0.0                2.0                  2.0                2.375   11868.415039               97.8750                 237.5  24.468750      -23.968750       1.0
4        796856.06958       796831.101074      796856.06958   48961.968750      48.937500     796831.101074             0.0                     0.0         48.9375           100.0                0.0                1.0                  2.0                2.375   11919.977295               97.8750                 237.5  24.968506      -23.468994       0.0
5        796880.53833       796879.538574      796880.53833   24493.718506      24.468750     796879.538574             0.0                     0.0         48.9375           100.0                0.0                1.0                  2.0                2.375   11919.977539               97.8750                 237.5   0.999756      -99.000000       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 13:25:06]  --------------------------------------------------------------------------------
[01/10 13:25:06]  Iteration: 36 (0 solution, 35 counterexamples)
[01/10 13:25:36]  Generator returned sat in 26.572171 secs.
[01/10 13:25:36]  Candidate solution: 
[1m[94mif (+ 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1min_buffer_bytes + -8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 13:25:40]  Improved gap from 24.75 to 48.4375
[01/10 13:25:40]  Improved number of small numbers from 111 to 115 out of a max of 134
[01/10 13:25:40]  Verifer returned sat in 3.743858 secs.
[01/10 13:25:40]  sf_get_cex returned in 3.877496 secs.
[01/10 13:25:40]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       796718.438574       796717.938574     796718.438574       0.996582       0.998291     796717.938574        0.499756                0.000000            79.8           100.0                0.0                2.0                  0.0                  2.5   11713.727539                   0.0                 250.0   0.000244       -0.499756       1.0
1       796758.338574       796718.438574     796758.338574   39900.500000      39.900000     796718.438574        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0   11765.290039                   0.0                 100.0  39.400244       -9.037256       0.0
2       796798.238574       796766.876074     796798.238574   39939.900000      39.900000     796766.876074        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0   11816.852539                   0.0                 100.0  30.862744      -17.574756       0.0
3       796838.138574       796815.313574     796838.138574   39931.362500      39.900000     796815.313574        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0   11868.414795                   0.0                 100.0  22.325244      -26.112500       0.0
4       796878.038574       796869.000977     796878.038574   39922.825000      39.900000     796869.000977        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0   11914.727539                   0.0                 100.0   8.537842      -39.899756       0.0
5       796917.938574       796917.438721     796917.938574   39909.037598      39.900000     796917.438721        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0   11914.727539                   0.0                 100.0   0.000098      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=2047/4096, buf_size=200.[0m
[01/10 13:25:40]  --------------------------------------------------------------------------------
[01/10 13:25:40]  Iteration: 37 (0 solution, 36 counterexamples)
[01/10 13:36:49]  Generator returned sat in 664.863429 secs.
[01/10 13:36:49]  Candidate solution: 
[1m[94mif (+ -1max_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + -1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 13:36:52]  Improved gap from 18.916666666666668 to 48.4375
[01/10 13:36:52]  Improved number of small numbers from 133 to 134 out of a max of 134
[01/10 13:36:52]  Verifer returned sat in 3.097921 secs.
[01/10 13:36:52]  sf_get_cex returned in 3.231085 secs.
[01/10 13:36:52]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        796700.36377        796696.11377      796700.36377       0.996582       0.998047      796696.11377             0.5                     0.0          97.875           100.0                0.0                1.0                  0.0                  2.0    11736.05249                   0.0                 200.0   3.7500          3.7500       0.0
1        796749.30127        796696.11377      796749.30127   48941.750000      48.937500      796696.11377             0.5                     0.5          97.875           100.0                0.0                1.0                  0.0                  1.0    11783.36499                   0.0                 100.0  52.6875          0.0000       0.0
2        796798.23877        796748.80127      796798.23877   48990.687500      48.937500      796748.80127             0.5                     0.5          97.875           100.0                0.0                2.0                  0.0                  1.0    11833.92749                   0.0                 100.0  48.9375         -0.5000       1.0
3        796847.17627        796798.23877      796847.17627   48986.937500      48.937500      796798.23877             0.5                     0.5          97.875           100.0                0.0                1.0                  0.0                  1.0    11885.48999                   0.0                 100.0  48.4375          0.0000       0.0
4        796896.11377        796846.67627      796896.11377   48986.437500      48.937500      796846.67627             0.5                     0.5          97.875           100.0                0.0                2.0                  0.0                  1.0    11936.55249                   0.0                 100.0  48.9375          0.0000       1.0
5        796945.05127        796895.61377      796945.05127   48986.937500      48.937500      796895.61377             0.5                     0.5          97.875           100.0                0.0                2.0                  0.0                  1.0    11936.55249                   0.0                 100.0  48.9375        -51.0625       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 13:36:52]  --------------------------------------------------------------------------------
[01/10 13:36:52]  Iteration: 38 (0 solution, 37 counterexamples)
[01/10 13:44:05]  Generator returned sat in 428.309360 secs.
[01/10 13:44:05]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 3/2max_c + -2min_buffer_bytes + -3/2max_buffer_bytes + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 13:46:19]  Improved gap from 20.0 to 48.4375
[01/10 13:46:19]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 13:46:19]  Verifer returned sat in 134.606163 secs.
[01/10 13:46:20]  sf_get_cex returned in 134.777302 secs.
[01/10 13:46:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        747903.80127        747903.30127      747903.80127       0.996582       0.998047      747903.30127             0.5                     0.0         48.9375           100.0                2.0                4.0                  2.0                  2.0    11732.30249                97.875                 200.0   0.0000          0.0000       3.0
1        747952.73877        747904.30127      747952.73877   48938.000000      48.937500      747904.30127             0.5                     0.5         48.9375           100.0                0.0                1.0                  2.0                  1.0    11782.86499                97.875                 100.0  47.9375         -0.5000       0.0
2        748001.67627        747952.73877      748001.67627   48985.937500      48.937500      747952.73877             0.5                     0.5         48.9375           100.0                0.0                1.0                  2.0                  1.0    11833.92749                97.875                 100.0  48.4375         -0.5000       0.0
3        748050.61377        748001.67627      748050.61377   48986.437500      48.937500      748001.67627             0.5                     0.5         48.9375           100.0                0.0                1.0                  2.0                  1.0    11885.48999                97.875                 100.0  48.4375          0.0000       0.0
4        748099.55127        748050.11377      748099.55127   48986.437500      48.937500      748050.11377             0.5                     0.5         48.9375           100.0                0.0                2.0                  2.0                  1.0    11936.55249                97.875                 100.0  48.9375          0.0000       1.0
5        748148.48877        748102.80127      748148.48877   48986.937500      48.937500      748102.80127             0.5                     0.5         48.9375           100.0                0.0                1.0                  2.0                  1.0    11936.55249                97.875                 100.0  45.1875        -51.0625       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=39/2, buf_size=200.[0m
[01/10 13:46:20]  --------------------------------------------------------------------------------
[01/10 13:46:20]  Iteration: 39 (0 solution, 38 counterexamples)
[01/10 15:15:30]  Generator returned sat in 5346.399963 secs.
[01/10 15:15:30]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1/2min_c + -1/2min_buffer_bytes + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 15:15:35]  Improved gap from 0.0 to 48.4375
[01/10 15:15:36]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 15:15:36]  Verifer returned sat in 5.182698 secs.
[01/10 15:15:36]  sf_get_cex returned in 5.325271 secs.
[01/10 15:15:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        748057.17627        748053.42627      748057.17627       0.996338       0.997803      748053.42627             0.5                     0.0          97.875           100.0                0.0                2.0                  0.0                  2.0   11735.052246                   0.0                 200.0   3.2500            3.25       1.0
1        748106.11377        748057.17627      748106.11377   48941.250000      48.937500      748057.17627             0.5                     0.5          97.875           100.0                0.0                1.0                  0.0                  1.0   11782.864746                   0.0                 100.0  48.4375            0.00       0.0
2        748155.05127        748106.11377      748155.05127   48986.437500      48.937500      748106.11377             0.5                     0.5          97.875           100.0                0.0                1.0                  0.0                  1.0   11833.927246                   0.0                 100.0  48.4375            0.00       0.0
3        748203.98877        748154.55127      748203.98877   48986.437500      48.937500      748154.55127             0.5                     0.5          97.875           100.0                0.0                2.0                  0.0                  1.0   11884.989746                   0.0                 100.0  48.9375            0.00       1.0
4        748252.92627        748204.48877      748252.92627   48986.937500      48.937500      748204.48877             0.5                     0.5          97.875           100.0                0.0                1.0                  0.0                  1.0   11935.552246                   0.0                 100.0  47.9375           -0.50       0.0
5        748301.86377        748252.92627      748301.86377   48985.937500      48.937500      748252.92627             0.5                     0.5          97.875           100.0                0.0                1.0                  0.0                  1.0   11987.114746                   0.0                 100.0  48.4375            0.00       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 15:15:36]  --------------------------------------------------------------------------------
[01/10 15:15:36]  Iteration: 40 (0 solution, 39 counterexamples)
[01/10 15:36:08]  Generator returned sat in 1227.831366 secs.
[01/10 15:36:08]  Candidate solution: 
[1m[94mif (+ -1max_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + 2min_buffer_bytes + 1/2max_buffer_bytes + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -3/2min_c + -1max_c + -2min_buffer_bytes + -1max_buffer_bytes + -9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 15:36:29]  Improved gap from 48.4375 to 48.4375
[01/10 15:36:30]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 15:36:30]  Verifer returned sat in 21.770288 secs.
[01/10 15:36:30]  sf_get_cex returned in 21.889750 secs.
[01/10 15:36:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       504262.485840       504244.418213     504262.485840       0.996338       0.997559     504244.418213        0.499756                0.000000          45.375           100.0                1.0                3.0                  1.0                  2.0  255544.059814                45.375                 200.0  17.567871       17.567627       2.0
1       504298.938965       504250.501465     504298.938965   36471.192627      36.453125     504250.501465        0.499756                0.499756          45.375           100.0                2.0                4.0                  2.0                  2.0  255589.539307                90.750                 200.0  47.937744       -0.499756       3.0
2       504335.392090       504298.938965     504335.392090   36501.562500      36.453125     504298.938965        0.499756                0.499756          45.375           100.0                0.0                1.0                  2.0                  2.0  255641.101807                90.750                 200.0  35.953369      -12.484131       0.0
3       504371.845215       504347.376465     504371.845215   36489.578125      36.453125     504347.376465        0.499756                0.499756          45.375           100.0                0.0                1.0                  2.0                  2.0  255692.664307                90.750                 200.0  23.968994      -24.468506       0.0
4       504408.298340       504395.813965     504408.298340   36477.593750      36.453125     504395.813965        0.499756                0.499756          45.375           100.0                0.0                1.0                  2.0                  2.0  255744.226807                90.750                 200.0  11.984619      -36.452881       0.0
5       504444.751465       504444.251465     504444.751465   36465.609375      36.453125     504444.251465        0.499756                0.499756          45.375           100.0                0.0                1.0                  2.0                  2.0  255744.226807                90.750                 200.0   0.000244      -99.999756       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=571/64, buf_size=200.[0m
[01/10 15:36:30]  --------------------------------------------------------------------------------
[01/10 15:36:30]  Iteration: 41 (0 solution, 40 counterexamples)
[01/10 16:11:07]  Generator returned sat in 2072.715890 secs.
[01/10 16:11:07]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + -1max_qdel + -1min_buffer + 1max_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 16:11:10]  Improved gap from 1.0 to 48.4375
[01/10 16:11:11]  Improved number of small numbers from 104 to 110 out of a max of 134
[01/10 16:11:11]  Verifer returned sat in 4.461777 secs.
[01/10 16:11:12]  sf_get_cex returned in 4.595422 secs.
[01/10 16:11:12]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0       265236.552716       265236.052716     265236.552716       0.996094       0.997559     265236.052716        0.499756                0.000000            79.8           100.0                0.0                1.0                  0.0                  2.0  494552.425537                   0.0                 200.0   0.000244        0.000226       0.0
1       265276.452716       265236.552716     265276.452716   39900.500000      39.900000     265236.552716        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0  494603.488037                   0.0                 100.0  39.400244       -9.037274       0.0
2       265316.352716       265290.240216     265316.352716   39939.900000      39.900000     265290.240216        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0  494649.800556                   0.0                 100.0  25.612744      -22.824756       0.0
3       265356.252716       265338.677716     265356.252716   39926.112500      39.900000     265338.677716        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0  494701.363056                   0.0                 100.0  17.075244      -31.362256       0.0
4       265396.152716       265387.115216     265396.152716   39917.575000      39.900000     265387.115216        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0  494752.925537                   0.0                 100.0   8.537744      -39.899774       0.0
5       265436.052716       265435.552734     265436.052716   39909.037500      39.900000     265435.552734        0.499756                0.499756            79.8           100.0                0.0                1.0                  0.0                  1.0  494804.488037                   0.0                 100.0   0.000226      -48.437274       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=79871/4096, buf_size=200.[0m
[01/10 16:11:12]  --------------------------------------------------------------------------------
[01/10 16:11:12]  Iteration: 42 (0 solution, 41 counterexamples)
[01/10 16:20:21]  Generator returned sat in 545.123597 secs.
[01/10 16:20:21]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + -1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 16:20:30]  Improved gap from 3.5 to 48.4375
[01/10 16:20:31]  Improved number of small numbers from 104 to 134 out of a max of 134
[01/10 16:20:31]  Verifer returned sat in 9.164672 secs.
[01/10 16:20:31]  sf_get_cex returned in 9.300321 secs.
[01/10 16:20:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        2.944952e+06        2.944947e+06      2.944952e+06       0.996094       0.997559      2.944947e+06        0.499756                0.000000         48.9375           100.0                0.0                2.0                  0.0             2.499756  -2.185159e+06                   0.0            249.975586   4.250000        4.250000       1.0
1        2.945001e+06        2.944952e+06      2.945001e+06   48942.249756      48.937500      2.944952e+06        0.499756                0.499756         48.9375           100.0                0.0                2.0                  0.0             2.000000  -2.185112e+06                   0.0            200.000000  48.937500        0.000000       1.0
2        2.945050e+06        2.945001e+06      2.945050e+06   48986.937256      48.937500      2.945001e+06        0.499756                0.499756         48.9375           100.0                0.0                2.0                  0.0             2.000000  -2.185062e+06                   0.0            200.000000  48.937500       -0.499756       1.0
3        2.945099e+06        2.945050e+06      2.945099e+06   48986.937256      48.937500      2.945050e+06        0.499756                0.499756         48.9375           100.0                0.0                1.0                  0.0             2.000000  -2.185010e+06                   0.0            200.000000  48.437744        0.000000       0.0
4        2.945123e+06        2.945098e+06      2.945123e+06   24517.687500      24.468750      2.945098e+06        0.499756                0.499756         48.9375           100.0                0.0                2.0                  0.0             2.000000  -2.184958e+06                   0.0            200.000000  24.468750      -23.968750       1.0
5        2.945172e+06        2.945147e+06      2.945172e+06   48962.468506      48.937500      2.945147e+06        0.499756                0.499756         48.9375           100.0                0.0                1.0                  0.0             2.000000  -2.184958e+06                   0.0            200.000000  24.968750      -75.031006       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=1/2, buf_size=200.[0m
[01/10 16:20:31]  --------------------------------------------------------------------------------
[01/10 16:20:31]  Iteration: 43 (0 solution, 42 counterexamples)
[01/10 16:41:59]  Generator returned sat in 1284.195828 secs.
[01/10 16:41:59]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_buffer_bytes + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + -1/2max_c + 2min_buffer_bytes + 1/2max_buffer_bytes + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 16:42:08]  Improved gap from 2.0 to 48.4375
[01/10 16:42:09]  Improved number of small numbers from 104 to 110 out of a max of 134
[01/10 16:42:09]  Verifer returned sat in 9.375366 secs.
[01/10 16:42:09]  sf_get_cex returned in 9.521151 secs.
[01/10 16:42:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.193514e+06        3.193509e+06      3.193514e+06       0.995850       0.997559      3.193509e+06             0.0                     0.0       48.854167           100.0                1.0                3.0                  1.0                  5.0  -2.185160e+06             48.854167                 500.0   4.416667        3.916748       2.0
1        3.193562e+06        3.193510e+06      3.193562e+06   48650.250000      48.645833      3.193510e+06             0.0                     0.0       48.854167           100.0                2.0                4.0                  2.0                  5.0  -2.185113e+06             97.708333                 500.0  52.562500       -0.000163       3.0
2        3.193611e+06        3.193563e+06      3.193611e+06   48698.395833      48.645833      3.193563e+06             0.0                     0.0       48.854167           100.0                0.0                1.0                  2.0                  5.0  -2.185061e+06             97.708333                 500.0  48.437500        0.000000       0.0
3        3.193660e+06        3.193611e+06      3.193660e+06   48694.270833      48.645833      3.193611e+06             0.0                     0.0       48.854167           100.0                0.0                2.0                  2.0                  5.0  -2.185010e+06             97.708333                 500.0  48.645833        0.000000       1.0
4        3.193708e+06        3.193660e+06      3.193708e+06   48694.479167      48.645833      3.193660e+06             0.0                     0.0       48.854167           100.0                0.0                2.0                  2.0                  5.0  -2.184959e+06             97.708333                 500.0  48.645833       -0.000163       1.0
5        3.193757e+06        3.193709e+06      3.193757e+06   48694.479167      48.645833      3.193709e+06             0.0                     0.0       48.854167           100.0                0.0                1.0                  2.0                  5.0  -2.184959e+06             97.708333                 500.0  48.145911      -51.354085       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=5/24, buf_size=200.[0m
[01/10 16:42:09]  --------------------------------------------------------------------------------
[01/10 16:42:09]  Iteration: 44 (0 solution, 43 counterexamples)
[01/10 17:05:56]  Generator returned sat in 1422.526224 secs.
[01/10 17:05:56]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1max_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 1max_qdel + 1min_buffer + 1max_buffer + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 17:06:02]  Improved gap from 6.0 to 48.4375
[01/10 17:06:03]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 17:06:03]  Verifer returned sat in 6.040120 secs.
[01/10 17:06:03]  sf_get_cex returned in 6.191306 secs.
[01/10 17:06:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  bottle_queue_t  qdelay_t
0        3.193312e+06        3.193312e+06      3.193312e+06       0.995605       0.997559      3.193312e+06             0.0                     0.0       40.300049           100.0                2.0                4.0                  2.0                  5.5  -2.184962e+06             80.600098                 550.0   0.499756        0.499756       3.0
1        3.193362e+06        3.193312e+06      3.193362e+06   49750.499756      49.750000      3.193312e+06             0.0                     0.0       40.300049           100.0                2.0                4.0                  2.0                  5.5  -2.184914e+06             80.600098                 550.0  49.750000       -1.312500       3.0
2        3.193412e+06        3.193364e+06      3.193412e+06   49799.750000      49.750000      3.193364e+06             0.0                     0.0       40.300049           100.0                0.0                1.0                  2.0                  5.5  -2.184862e+06             80.600098                 550.0  48.437500        0.000000       0.0
3        3.193462e+06        3.193412e+06      3.193462e+06   49798.437500      49.750000      3.193412e+06             0.0                     0.0       40.300049           100.0                0.0                2.0                  2.0                  5.5  -2.184812e+06             80.600098                 550.0  49.750000        0.000000       1.0
4        3.193511e+06        3.193462e+06      3.193511e+06   49799.750000      49.750000      3.193462e+06             0.0                     0.0       40.300049           100.0                0.0                1.0                  2.0                  5.5  -2.184762e+06             80.600098                 550.0  49.249756        0.000000       0.0
5        3.193561e+06        3.193511e+06      3.193561e+06   49799.249756      49.750000      3.193511e+06             0.0                     0.0       40.300049           100.0                0.0                2.0                  2.0                  5.5  -2.184713e+06             80.600098                 550.0  49.750000       -1.312744       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=38707/4096, buf_size=200.[0m
[01/10 17:06:03]  --------------------------------------------------------------------------------
[01/10 17:06:03]  Iteration: 45 (0 solution, 44 counterexamples)
[01/10 17:18:56]  Generator returned sat in 768.564696 secs.
[01/10 17:18:56]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1max_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1max_qdel + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 17:19:01]  Improved gap from 33.26162502068509 to 100
[01/10 17:19:02]  Improved number of small numbers from 109 to 134 out of a max of 134
[01/10 17:19:02]  Verifer returned sat in 5.600157 secs.
[01/10 17:19:02]  sf_get_cex returned in 5.754276 secs.
[01/10 17:19:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  bottle_queue_t  qdelay_t
0        3.193285e+06        3.193001e+06      3.193285e+06       0.995361       0.997559      3.193001e+06        0.995605                0.000000       99.004395      116.017578                2.0                4.0                  2.0             2.995605  -2.184762e+06            198.008789            347.542892  282.986816      182.986816       3.0
1        3.193384e+06        3.193201e+06      3.193384e+06   99288.376953      99.004395      3.193201e+06        0.995605                0.995605      100.000000      116.017578                0.0                2.0                  2.0             2.000000  -2.184762e+06            200.000000            232.035156  181.991211      181.991211       1.0
2        3.193503e+06        3.193285e+06      3.193503e+06  119187.381348     119.004395      3.193285e+06        1.991211                0.995605      100.000000      116.017578                0.0                2.0                  2.0             2.000000  -2.184762e+06            200.000000            232.035156  216.017578      200.000000       1.0
3        3.193622e+06        3.193401e+06      3.193622e+06  119222.403320     119.004395      3.193401e+06       20.995605                1.991211      100.000000      116.017578                0.0                2.0                  2.0             2.000000  -2.184762e+06            200.000000            232.035156  200.000000      200.000000       1.0
4        3.193741e+06        3.193401e+06      3.193741e+06  119225.390137     119.004395      3.193401e+06       40.000000               20.995605      100.000000      116.017578                0.0                2.0                  2.0             2.000000  -2.184762e+06            200.000000            232.035156  300.000000      200.000000       1.0
5        3.193860e+06        3.193517e+06      3.193860e+06  119344.394531     119.004395      3.193517e+06       59.004395               40.000000      100.000000      116.017578                1.0                3.0                  2.0             2.000000  -2.184762e+06            200.000000            232.035156  283.982422      200.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=59401/1024, beliefs_improve=False, alpha=38921/2048, buf_size=200.[0m
[01/10 17:19:02]  --------------------------------------------------------------------------------
[01/10 17:19:02]  Iteration: 46 (0 solution, 45 counterexamples)
[01/10 17:37:26]  Generator returned sat in 1099.001499 secs.
[01/10 17:37:26]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_qdel + -1min_buffer + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1max_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 17:37:35]  Improved gap from 2.5 to 48.4375
[01/10 17:37:35]  Improved number of small numbers from 134 to 134 out of a max of 134
[01/10 17:37:35]  Verifer returned sat in 8.713037 secs.
[01/10 17:37:35]  sf_get_cex returned in 8.864776 secs.
[01/10 17:37:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t  queue_t  bottle_queue_t  qdelay_t
0        3.193307e+06        3.193307e+06      3.193307e+06       0.995361       0.997559      3.193307e+06             0.5                     0.0           39.65           100.0                0.0                2.0                  0.0                  2.5  -2.185017e+06                   0.0                 250.0   0.0000             0.0       1.0
1        3.193356e+06        3.193307e+06      3.193356e+06   48938.000000      48.937500      3.193307e+06             0.5                     0.5           39.65           100.0                0.0                1.0                  0.0                  1.0  -2.184966e+06                   0.0                 100.0  48.4375            -0.5       0.0
2        3.193405e+06        3.193356e+06      3.193405e+06   48986.437500      48.937500      3.193356e+06             0.5                     0.5           39.65           100.0                0.0                1.0                  0.0                  1.0  -2.184914e+06                   0.0                 100.0  48.4375             0.0       0.0
3        3.193454e+06        3.193405e+06      3.193454e+06   48986.437500      48.937500      3.193405e+06             0.5                     0.5           39.65           100.0                0.0                2.0                  0.0                  1.0  -2.184863e+06                   0.0                 100.0  48.9375             0.0       1.0
4        3.193503e+06        3.193454e+06      3.193503e+06   48986.937500      48.937500      3.193454e+06             0.5                     0.5           39.65           100.0                0.0                1.0                  0.0                  1.0  -2.184812e+06                   0.0                 100.0  48.4375             0.0       0.0
5        3.193552e+06        3.193503e+06      3.193552e+06   48986.437500      48.937500      3.193503e+06             0.5                     0.5           39.65           100.0                0.0                1.0                  0.0                  1.0  -2.184762e+06                   0.0                 100.0  48.4375            -0.5       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=743/80, buf_size=200.[0m
[01/10 17:37:35]  --------------------------------------------------------------------------------
[01/10 17:37:35]  Iteration: 47 (0 solution, 46 counterexamples)
