[01/31 10:32:32]  Namespace(infinite_buffer=False, finite_buffer=False, dynamic_buffer=True, T=9, ideal=True, app_limited=False, fix_minc=False, fix_maxc=False, optimize=False, proofs=False, solution=None)
[01/31 10:32:32]  Using cond_vars: ['min_c', 'max_c', 'min_qdel']
[01/31 10:32:32]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=4, desired_large_loss_count_bound=4, desired_loss_amount_bound_multiplier=3, desired_loss_amount_bound_alpha=3
[01/31 10:32:32]  Ideal: desired_util_f=0.5, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=4, desired_large_loss_count_bound=4, desired_loss_amount_bound_multiplier=3, desired_loss_amount_bound_alpha=3
[01/31 10:32:32]  --------------------------------------------------------------------------------
[01/31 10:32:32]  Iteration: 1 (0 solution, 0 counterexamples)
[01/31 10:32:32]  Generator returned sat in 0.005664 secs.
[01/31 10:32:32]  Candidate solution: 
[1m[94mif (0 > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
elif (+ -2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 10:32:38]  Improved number of small numbers from 138 to 138 out of a max of 138
[01/31 10:32:38]  Verifer returned sat in 5.185577 secs.
[01/31 10:32:38]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t      queue_t  utilized_0,t  qdelay_t
0           -741.944444          -1341.944444         -741.944444         1.000000         1.000000        -1341.944444          0.000000                  0.000000         89.888889             100.0                  2.0   600.000000          -1.0       3.0
1           -497.000000          -1241.944444         -497.000000    245544.444444       244.944444        -1241.944444          0.000000                  0.000000         89.888889             100.0                  3.0   744.944444           1.0       4.0
2           -252.055556          -1141.944444         -252.055556    245689.388889       244.944444        -1141.944444          0.000000                  0.000000         89.888889             100.0                  4.0   889.888889           1.0       5.0
3             -7.111111          -1041.944444           -7.111111    245834.333333       244.944444        -1041.944444          0.000000                  0.000000         89.888889             100.0                  5.0  1034.833333           1.0       6.0
4            237.833333           -941.944444          237.833333    245979.277778       244.944444         -941.944444          0.000000                  0.000000         89.888889             100.0                  5.0  1179.777778           1.0       6.0
5            482.777778           -841.944444          482.777778    246124.222222       244.944444         -841.944444          0.000000                  0.000000         89.888889             100.0                  6.0  1324.722222           1.0       7.0
6            727.722222           -741.944444          727.722222    246269.166667       244.944444         -741.944444          0.000000                  0.000000         89.888889             100.0                  7.0  1469.666667           1.0       8.0
7            972.666667           -641.944444          972.666667    246414.111111       244.944444         -641.944444        143.944444                  0.000000         89.888889             100.0                  5.0  1470.666667           1.0       6.0
8           1217.611111           -541.944444         1217.611111    246559.055556       244.944444         -541.944444        288.888889                143.944444         89.888889             100.0                  6.0  1470.666667           1.0       7.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, 
, large_loss_count=2, loss_amount=2600/9, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1, buf_size=4412/3, start_state=[0].[0m
[01/31 10:32:38]  --------------------------------------------------------------------------------
[01/31 10:32:38]  Iteration: 2 (0 solution, 1 counterexamples)
[01/31 10:32:39]  Generator returned sat in 1.520231 secs.
[01/31 10:32:39]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 10:32:49]  Improved number of small numbers from 94 to 94 out of a max of 138
[01/31 10:32:49]  Verifer returned sat in 9.999597 secs.
[01/31 10:32:49]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0           -752.165365           -752.165365         -752.165365         1.000000         0.999756         -752.165365          0.000000                  0.000000         89.888645        102.555474                  0.0      0.0          -1.0       0.0
1           -367.277127           -652.165365         -367.277127    384888.237847       384.888238         -652.165365        264.888238                  0.000000         89.888645        102.555474                  0.0     20.0           0.0       0.0
2             17.611111           -552.165365           17.611111    385173.126085       384.888238         -552.165365        549.776476                264.888238         89.888645        102.555474                  0.0     20.0           1.0       0.0
3            402.499349           -452.165365          402.499349    385458.014323       384.888238         -452.165365        834.664714                549.776476         89.888645        102.555474                  0.0     20.0           1.0       0.0
4            787.387587           -352.165365          787.387587    385742.902561       384.888238         -352.165365       1119.552951                834.664714         89.888645        102.555474                  0.0     20.0           1.0       0.0
5           1172.275825           -252.165365         1172.275825    386027.790799       384.888238         -252.165365       1404.441189               1119.552951         89.888645        102.555474                  0.0     20.0           1.0       0.0
6           1557.164062           -152.165365         1557.164062    386312.679036       384.888238         -152.165365       1689.329427               1404.441189         89.888645        102.555474                  0.0     20.0           1.0       0.0
7           1942.052300            -52.165365         1942.052300    386597.567274       384.888238          -52.165365       1974.217665               1689.329427         89.888645        102.555474                  0.0     20.0           1.0       0.0
8           2326.940538             47.834635         2326.940538    386882.455512       384.888238           47.834635       2259.105903               1974.217665         89.888645        102.555474                  0.0     20.0           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=9189355/4608, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77825/4096, buf_size=20, start_state=[0].[0m
[01/31 10:32:49]  --------------------------------------------------------------------------------
[01/31 10:32:49]  Iteration: 3 (0 solution, 2 counterexamples)
[01/31 10:32:57]  Generator returned sat in 7.782150 secs.
[01/31 10:32:57]  Candidate solution: 
[1m[94mif (+ 2min_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
elif (+ -2min_c + -2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 10:33:04]  Improved number of small numbers from 104 to 138 out of a max of 138
[01/31 10:33:04]  Verifer returned sat in 6.772770 secs.
[01/31 10:33:04]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0           -492.265137           -591.265381         -492.265137         0.999512         0.999268         -591.265381          0.000000                  0.000000             100.0        109.995117                  0.0   99.000244          -1.0       0.0
1           -387.267578           -491.265381         -387.267578    105096.558838       104.997559         -491.265381          0.000000                  0.000000             100.0        109.995117                  0.0  103.997803           0.0       0.0
2           -282.270020           -391.265381         -282.270020    105101.556396       104.997559         -391.265381          0.000000                  0.000000             100.0        109.995117                  0.0  108.995361           0.0       1.0
3           -177.272461           -291.265381         -177.272461    105106.553955       104.997559         -291.265381          0.000000                  0.000000             100.0        109.995117                  0.0  113.992920           0.0       1.0
4            -72.274902           -191.265381          -72.274902    105111.551514       104.997559         -191.265381          3.998047                  0.000000             100.0        109.995117                  0.0  114.992432           0.0       1.0
5             32.722656            -91.265381           32.722656    105116.549072       104.997559          -91.265381          8.995605                  3.998047             100.0        109.995117                  0.0  114.992432           1.0       1.0
6            137.720215              8.734619          137.720215    105121.546631       104.997559            8.734619         13.993164                  8.995605             100.0        109.995117                  0.0  114.992432           1.0       1.0
7            242.717773            108.734619          242.717773    105126.544189       104.997559          108.734619         18.990723                 13.993164             100.0        109.995117                  0.0  114.992432           1.0       1.0
8            347.715332            208.734619          347.715332    105131.541748       104.997559          208.734619         23.988281                 18.990723             100.0        109.995117                  0.0  114.992432           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=6141/256, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2047/2048, buf_size=471009/4096, start_state=[0].[0m
[01/31 10:33:04]  --------------------------------------------------------------------------------
[01/31 10:33:04]  Iteration: 4 (0 solution, 3 counterexamples)
[01/31 10:33:11]  Generator returned sat in 6.827898 secs.
[01/31 10:33:12]  Candidate solution: 
[1m[94mif (+ 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 10:33:16]  Improved number of small numbers from 102 to 138 out of a max of 138
[01/31 10:33:16]  Verifer returned sat in 4.540369 secs.
[01/31 10:33:16]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0           5666.513428           5665.513428         5666.513428         0.999268         0.999023         5665.513428               0.0                       0.0          1.499756             100.0                  1.0      1.0          -1.0       2.0
1           5667.513428           5667.513428         5667.513428      1001.000000         1.000000         5667.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
2           5668.513428           5668.513428         5668.513428      1000.000000         1.000000         5668.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
3           5669.513428           5669.513428         5669.513428      1000.000000         1.000000         5669.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
4           5670.513428           5670.513428         5670.513428      1000.000000         1.000000         5670.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
5           5671.513428           5671.513428         5671.513428      1000.000000         1.000000         5671.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
6           5672.513428           5672.513428         5672.513428      1000.000000         1.000000         5672.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
7           5673.513428           5673.513428         5673.513428      1000.000000         1.000000         5673.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
8           5674.513428           5674.513428         5674.513428      1000.000000         1.000000         5674.513428               0.0                       0.0          1.499756             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2047/4096, buf_size=817151/4096, start_state=[0].[0m
[01/31 10:33:16]  --------------------------------------------------------------------------------
[01/31 10:33:16]  Iteration: 5 (0 solution, 4 counterexamples)
[01/31 10:33:49]  Generator returned sat in 32.439146 secs.
[01/31 10:33:49]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
elif (+ 2min_c + -2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 10:33:58]  Improved number of small numbers from 94 to 138 out of a max of 138
[01/31 10:33:58]  Verifer returned sat in 8.812973 secs.
[01/31 10:33:58]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0         -12543.527588         -12564.654053       -12543.527588         0.999268         0.999023       -12564.654053          0.793457                  0.000000         20.666016             100.0                  0.0  20.333008          -1.0       0.0
1         -12524.526611         -12525.320068       -12524.526611     19022.103027        19.000977       -12525.320068          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           1.0       0.0
2         -12505.525635         -12506.319092       -12505.525635     19001.770020        19.000977       -12506.319092          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           0.0       0.0
3         -12486.524658         -12487.318115       -12486.524658     19001.770020        19.000977       -12487.318115          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           0.0       0.0
4         -12467.523682         -12468.317139       -12467.523682     19001.770020        19.000977       -12468.317139          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           0.0       0.0
5         -12448.522705         -12449.316162       -12448.522705     19001.770020        19.000977       -12449.316162          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           0.0       0.0
6         -12429.521729         -12430.315186       -12429.521729     19001.770020        19.000977       -12430.315186          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           0.0       0.0
7         -12410.520752         -12411.314209       -12410.520752     19001.770020        19.000977       -12411.314209          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           0.0       0.0
8         -12391.519775         -12392.313232       -12391.519775     19001.770020        19.000977       -12392.313232          0.793457                  0.793457         20.666016             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19457/1024, buf_size=20821/1024, start_state=[0].[0m
[01/31 10:33:58]  --------------------------------------------------------------------------------
[01/31 10:33:58]  Iteration: 6 (0 solution, 5 counterexamples)
[01/31 10:35:36]  Generator returned sat in 97.361372 secs.
[01/31 10:35:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 10:35:46]  Improved number of small numbers from 138 to 138 out of a max of 138
[01/31 10:35:46]  Verifer returned sat in 9.616781 secs.
[01/31 10:35:46]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0          68621.242432          68563.240479        68621.242432         0.999268         0.999023        68563.240479               0.0                       0.0              40.0             100.0                  0.0  58.001953          -1.0       1.0
1          68641.242432          68641.242432        68641.242432     20058.001953        20.000000        68641.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
2          68661.242432          68661.242432        68661.242432     20000.000000        20.000000        68661.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
3          68681.242432          68681.242432        68681.242432     20000.000000        20.000000        68681.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
4          68701.242432          68701.242432        68701.242432     20000.000000        20.000000        68701.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
5          68721.242432          68721.242432        68721.242432     20000.000000        20.000000        68721.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
6          68741.242432          68741.242432        68741.242432     20000.000000        20.000000        68741.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
7          68761.242432          68761.242432        68761.242432     20000.000000        20.000000        68761.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
8          68781.242432          68781.242432        68781.242432     20000.000000        20.000000        68781.242432               0.0                       0.0              40.0             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19457/1024, buf_size=29697/512, start_state=[0].[0m
[01/31 10:35:46]  --------------------------------------------------------------------------------
[01/31 10:35:46]  Iteration: 7 (0 solution, 6 counterexamples)
[01/31 10:37:25]  Generator returned sat in 98.663730 secs.
[01/31 10:37:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ -2min_c + 2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 10:37:26]  Improved number of small numbers from 138 to 138 out of a max of 138
[01/31 10:37:26]  Verifer returned sat in 0.432064 secs.
[01/31 10:37:26]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          68540.750977          68540.750977        68540.750977         0.999023         0.999023        68540.750977               0.0                       0.0         62.997559             100.0                  0.0      0.0          -1.0       1.0
1          68572.249756          68572.249756        68572.249756     31498.779297        31.498779        68572.249756               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
2          68603.748535          68603.748535        68603.748535     31498.779297        31.498779        68603.748535               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
3          68635.247314          68635.247314        68635.247314     31498.779297        31.498779        68635.247314               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
4          68666.746094          68666.746094        68666.746094     31498.779297        31.498779        68666.746094               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
5          68698.244873          68698.244873        68698.244873     31498.779297        31.498779        68698.244873               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
6          68729.743652          68729.743652        68729.743652     31498.779297        31.498779        68729.743652               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
7          68761.242432          68761.242432        68761.242432     31498.779297        31.498779        68761.242432               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
8          68792.741211          68792.741211        68792.741211     31498.779297        31.498779        68792.741211               0.0                       0.0         62.997559             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77827/4096, buf_size=81919/4096, start_state=[0].[0m
[01/31 10:37:26]  --------------------------------------------------------------------------------
[01/31 10:37:26]  Iteration: 8 (0 solution, 7 counterexamples)
[01/31 10:39:49]  Generator returned sat in 142.405169 secs.
[01/31 10:39:49]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
elif (+ 2min_c + 3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 10:40:27]  Improved number of small numbers from 83 to 85 out of a max of 138
[01/31 10:40:27]  Verifer returned sat in 37.957374 secs.
[01/31 10:40:27]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          68343.656781          68343.656781        68343.656781         0.999023         0.998535        68343.656781               0.0                       0.0          75.49939             100.0                  0.0      0.0          -1.0       1.0
1          68381.406476          68381.406476        68381.406476     37749.694824        37.749695        68381.406476               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
2          68419.156170          68419.156170        68419.156170     37749.694824        37.749695        68419.156170               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
3          68456.905865          68456.905865        68456.905865     37749.694824        37.749695        68456.905865               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
4          68494.655560          68494.655560        68494.655560     37749.694824        37.749695        68494.655560               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
5          68532.405255          68532.405255        68532.405255     37749.694824        37.749695        68532.405255               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
6          68570.154950          68570.154950        68570.154950     37749.694824        37.749695        68570.154950               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
7          68607.904645          68607.904645        68607.904645     37749.694824        37.749695        68607.904645               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
8          68645.654339          68645.654339        68645.654339     37749.694824        37.749695        68645.654339               0.0                       0.0          75.49939             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2045/4096, buf_size=6137/4096, start_state=[0].[0m
[01/31 10:40:27]  --------------------------------------------------------------------------------
[01/31 10:40:27]  Iteration: 9 (0 solution, 8 counterexamples)
[01/31 10:42:44]  Generator returned sat in 135.963995 secs.
[01/31 10:42:44]  Candidate solution: 
[1m[94mif (+ 2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ 1/2min_c + -2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 10:43:17]  Improved number of small numbers from 102 to 138 out of a max of 138
[01/31 10:43:17]  Verifer returned sat in 32.968759 secs.
[01/31 10:43:17]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t   queue_t  utilized_0,t  qdelay_t
0          68403.910156          68402.911621        68403.910156         0.999023         0.998535        68402.911621          0.998291                  0.000000         25.499268             100.0                  0.0  0.000244          -1.0       0.0
1          68429.409424          68428.411133        68429.409424     25500.266113        25.499268        68428.411133          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           1.0       0.0
2          68454.908691          68453.910400        68454.908691     25500.265869        25.499268        68453.910400          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           0.0       0.0
3          68480.407959          68479.409668        68480.407959     25500.265869        25.499268        68479.409668          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           0.0       0.0
4          68505.907227          68504.908936        68505.907227     25500.265869        25.499268        68504.908936          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           0.0       0.0
5          68531.406494          68530.408203        68531.406494     25500.265869        25.499268        68530.408203          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           0.0       0.0
6          68556.905762          68555.907471        68556.905762     25500.265869        25.499268        68555.907471          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           0.0       0.0
7          68582.405029          68581.406738        68582.405029     25500.265869        25.499268        68581.406738          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           0.0       0.0
8          68607.904297          68606.906006        68607.904297     25500.265869        25.499268        68606.906006          0.998291                  0.998291         25.499268             100.0                  0.0  0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=38915/2048, buf_size=81919/4096, start_state=[0].[0m
[01/31 10:43:17]  --------------------------------------------------------------------------------
[01/31 10:43:17]  Iteration: 10 (0 solution, 9 counterexamples)
[01/31 10:44:36]  Generator returned sat in 78.630773 secs.
[01/31 10:44:36]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ 3/2min_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 10:44:37]  Improved number of small numbers from 138 to 138 out of a max of 138
[01/31 10:44:37]  Verifer returned sat in 0.687818 secs.
[01/31 10:44:37]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          68403.910156          68402.911621        68403.910156         0.999023         0.998535        68402.911621          0.998535                  0.000000         42.510986             100.0                  0.0      0.0          -1.0       1.0
1          68446.421143          68445.422607        68446.421143     42511.984863        42.510986        68445.422607          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           1.0       0.0
2          68488.932129          68487.933594        68488.932129     42511.984863        42.510986        68487.933594          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           0.0       0.0
3          68531.443115          68530.444580        68531.443115     42511.984863        42.510986        68530.444580          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           0.0       0.0
4          68573.954102          68572.955566        68573.954102     42511.984863        42.510986        68572.955566          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           0.0       0.0
5          68616.465088          68615.466553        68616.465088     42511.984863        42.510986        68615.466553          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           0.0       0.0
6          68658.976074          68657.977539        68658.976074     42511.984863        42.510986        68657.977539          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           0.0       0.0
7          68701.487061          68700.488525        68701.487061     42511.984863        42.510986        68700.488525          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           0.0       0.0
8          68743.998047          68742.999512        68743.998047     42511.984863        42.510986        68742.999512          0.998535                  0.998535         42.510986             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2045/256, buf_size=202755/2048, start_state=[0].[0m
[01/31 10:44:37]  --------------------------------------------------------------------------------
[01/31 10:44:37]  Iteration: 11 (0 solution, 10 counterexamples)
[01/31 10:49:14]  Generator returned sat in 276.441095 secs.
[01/31 10:49:15]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 10:49:32]  Improved number of small numbers from 49 to 49 out of a max of 138
[01/31 10:49:32]  Verifer returned sat in 16.978547 secs.
[01/31 10:49:32]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0          67951.194091            67950.1958        67951.194091         0.998779         0.998291          67950.1958          0.998291                  0.000000          89.88718        107.181767                  0.0   0.000000          -1.0       0.0
1          68156.910332            68050.1958        68156.910332    205717.239068       205.716241          68050.1958          7.712823                  0.998291          89.88718        107.181767                  0.0  99.001709           1.0       0.0
2          68362.626573            68150.1958        68362.626573    205822.955309       205.716241          68150.1958        113.429064                  7.712823          89.88718        107.181767                  0.0  99.001709           1.0       0.0
3          68568.342814            68250.1958        68568.342814    205928.671549       205.716241          68250.1958        219.145304                113.429064          89.88718        107.181767                  0.0  99.001709           1.0       0.0
4          68774.059055            68350.1958        68774.059055    206034.387790       205.716241          68350.1958        324.861545                219.145304          89.88718        107.181767                  0.0  99.001709           1.0       0.0
5          68979.775295            68450.1958        68979.775295    206140.104031       205.716241          68450.1958        430.577786                324.861545          89.88718        107.181767                  0.0  99.001709           1.0       0.0
6          69185.491536            68550.1958        69185.491536    206245.820272       205.716241          68550.1958        536.294027                430.577786          89.88718        107.181767                  0.0  99.001709           1.0       0.0
7          69391.207777            68650.1958        69391.207777    206351.536513       205.716241          68650.1958        642.010267                536.294027          89.88718        107.181767                  0.0  99.001709           1.0       0.0
8          69596.924018            68750.1958        69596.924018    206457.252753       205.716241          68750.1958        747.726508                642.010267          89.88718        107.181767                  0.0  99.001709           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=7, loss_amount=54559729/73728, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77831/4096, buf_size=405511/4096, start_state=[0].[0m
[01/31 10:49:32]  --------------------------------------------------------------------------------
[01/31 10:49:32]  Iteration: 12 (0 solution, 11 counterexamples)
[01/31 10:51:48]  Generator returned sat in 134.137208 secs.
[01/31 10:51:48]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 10:52:34]  Verifer returned unsat in 46.453025 secs.
[01/31 11:07:05]  Verifer returned unsat in 870.167740 secs.
[01/31 11:07:05]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:07:05]  --------------------------------------------------------------------------------
[01/31 11:07:05]  Iteration: 13 (1 solution, 11 counterexamples)
[01/31 11:07:07]  Generator returned sat in 1.520843 secs.
[01/31 11:07:08]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:07:15]  Verifer returned unsat in 7.539502 secs.
[01/31 11:07:36]  Verifer returned unsat in 20.217283 secs.
[01/31 11:07:36]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:07:36]  --------------------------------------------------------------------------------
[01/31 11:07:36]  Iteration: 14 (2 solution, 11 counterexamples)
[01/31 11:07:38]  Generator returned sat in 1.454200 secs.
[01/31 11:07:38]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:07:45]  Verifer returned unsat in 7.192088 secs.
[01/31 11:21:45]  Verifer returned unsat in 839.649980 secs.
[01/31 11:21:45]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:21:45]  --------------------------------------------------------------------------------
[01/31 11:21:45]  Iteration: 15 (3 solution, 11 counterexamples)
[01/31 11:21:49]  Generator returned sat in 2.191180 secs.
[01/31 11:21:49]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:22:29]  Verifer returned unsat in 39.283882 secs.
[01/31 11:23:49]  Verifer returned unsat in 80.297108 secs.
[01/31 11:23:49]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:23:49]  --------------------------------------------------------------------------------
[01/31 11:23:49]  Iteration: 16 (4 solution, 11 counterexamples)
[01/31 11:23:53]  Generator returned sat in 2.171565 secs.
[01/31 11:23:53]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:24:24]  Verifer returned unsat in 30.502794 secs.
[01/31 11:25:29]  Verifer returned unsat in 64.975736 secs.
[01/31 11:25:29]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:25:29]  --------------------------------------------------------------------------------
[01/31 11:25:29]  Iteration: 17 (5 solution, 11 counterexamples)
[01/31 11:25:33]  Generator returned sat in 2.169134 secs.
[01/31 11:25:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:26:12]  Verifer returned unsat in 39.190919 secs.
[01/31 11:26:54]  Verifer returned unsat in 41.281465 secs.
[01/31 11:26:54]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:26:54]  --------------------------------------------------------------------------------
[01/31 11:26:54]  Iteration: 18 (6 solution, 11 counterexamples)
[01/31 11:26:58]  Generator returned sat in 2.533023 secs.
[01/31 11:26:58]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:27:28]  Verifer returned unsat in 29.764554 secs.
[01/31 11:28:34]  Verifer returned unsat in 65.768133 secs.
[01/31 11:28:34]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:28:34]  --------------------------------------------------------------------------------
[01/31 11:28:34]  Iteration: 19 (7 solution, 11 counterexamples)
[01/31 11:28:38]  Generator returned sat in 2.203122 secs.
[01/31 11:28:38]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:29:40]  Verifer returned unsat in 61.156692 secs.
[01/31 11:31:04]  Verifer returned unsat in 84.354610 secs.
[01/31 11:31:04]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:31:04]  --------------------------------------------------------------------------------
[01/31 11:31:04]  Iteration: 20 (8 solution, 11 counterexamples)
[01/31 11:31:08]  Generator returned sat in 2.206185 secs.
[01/31 11:31:08]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:31:22]  Verifer returned unsat in 13.787331 secs.
[01/31 11:32:06]  Verifer returned unsat in 43.457517 secs.
[01/31 11:32:06]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:32:06]  --------------------------------------------------------------------------------
[01/31 11:32:06]  Iteration: 21 (9 solution, 11 counterexamples)
[01/31 11:32:10]  Generator returned sat in 2.204950 secs.
[01/31 11:32:10]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:32:23]  Verifer returned unsat in 12.877375 secs.
[01/31 11:45:33]  Verifer returned unsat in 789.594369 secs.
[01/31 11:45:33]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:45:33]  --------------------------------------------------------------------------------
[01/31 11:45:33]  Iteration: 22 (10 solution, 11 counterexamples)
[01/31 11:45:37]  Generator returned sat in 2.192606 secs.
[01/31 11:45:37]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:46:04]  Verifer returned unsat in 27.197289 secs.
[01/31 11:46:48]  Verifer returned unsat in 43.775176 secs.
[01/31 11:46:48]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:46:48]  --------------------------------------------------------------------------------
[01/31 11:46:48]  Iteration: 23 (11 solution, 11 counterexamples)
[01/31 11:46:52]  Generator returned sat in 2.225617 secs.
[01/31 11:46:52]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:47:27]  Verifer returned unsat in 34.261023 secs.
[01/31 11:54:18]  Verifer returned unsat in 411.170101 secs.
[01/31 11:54:18]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:54:18]  --------------------------------------------------------------------------------
[01/31 11:54:18]  Iteration: 24 (12 solution, 11 counterexamples)
[01/31 11:54:21]  Generator returned sat in 1.432862 secs.
[01/31 11:54:21]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:54:28]  Verifer returned unsat in 7.336273 secs.
[01/31 11:55:03]  Verifer returned unsat in 34.973653 secs.
[01/31 11:55:03]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:55:03]  --------------------------------------------------------------------------------
[01/31 11:55:03]  Iteration: 25 (13 solution, 11 counterexamples)
[01/31 11:55:08]  Generator returned sat in 3.595504 secs.
[01/31 11:55:08]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 11:55:19]  Improved number of small numbers from 102 to 138 out of a max of 138
[01/31 11:55:19]  Verifer returned sat in 10.812157 secs.
[01/31 11:55:19]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0         261077.688477         261019.684570       261077.688477         0.998291         0.998047       261019.684570               0.0                       0.0         40.997803             100.0                  0.0  58.003906          -1.0       1.0
1         261099.684570         261099.684570       261099.684570     22054.097656        21.996094       261099.684570               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
2         261121.680664         261121.680664       261121.680664     21996.093750        21.996094       261121.680664               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
3         261143.676758         261143.676758       261143.676758     21996.093750        21.996094       261143.676758               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
4         261165.672852         261165.672852       261165.672852     21996.093750        21.996094       261165.672852               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
5         261187.668945         261187.668945       261187.668945     21996.093750        21.996094       261187.668945               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
6         261209.665039         261209.665039       261209.665039     21996.093750        21.996094       261209.665039               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
7         261231.661133         261231.661133       261231.661133     21996.093750        21.996094       261231.661133               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
8         261253.657227         261253.657227       261253.657227     21996.093750        21.996094       261253.657227               0.0                       0.0         40.997803             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77831/4096, buf_size=14849/256, start_state=[0].[0m
[01/31 11:55:19]  --------------------------------------------------------------------------------
[01/31 11:55:19]  Iteration: 26 (13 solution, 12 counterexamples)
[01/31 11:59:55]  Generator returned sat in 274.993659 secs.
[01/31 11:59:55]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
elif (+ -1/2min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 12:00:08]  Improved number of small numbers from 138 to 138 out of a max of 138
[01/31 12:00:08]  Verifer returned sat in 12.622080 secs.
[01/31 12:00:08]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         415746.825195         414944.825195       415746.825195         0.998291         0.998047       414944.825195               0.0                       0.0             100.0        116.666667                  0.0    802.0          -1.0       0.0
1         415846.825195         415044.825195       415846.825195    100802.000000       100.000000       415044.825195               0.0                       0.0             100.0        116.666667                  0.0    802.0           0.0       1.0
2         415946.825195         415144.825195       415946.825195    100802.000000       100.000000       415144.825195               0.0                       0.0             100.0        116.666667                  1.0    802.0           1.0       2.0
3         416046.825195         415244.825195       416046.825195    100802.000000       100.000000       415244.825195               0.0                       0.0             100.0        116.666667                  2.0    802.0           1.0       3.0
4         416146.825195         415344.825195       416146.825195    100802.000000       100.000000       415344.825195               0.0                       0.0             100.0        116.666667                  3.0    802.0           1.0       4.0
5         416246.825195         415444.825195       416246.825195    100802.000000       100.000000       415444.825195               0.0                       0.0             100.0        116.666667                  4.0    802.0           1.0       5.0
6         416346.825195         415544.825195       416346.825195    100802.000000       100.000000       415544.825195               0.0                       0.0             100.0        116.666667                  5.0    802.0           1.0       6.0
7         416446.825195         415644.825195       416446.825195    100802.000000       100.000000       415644.825195               0.0                       0.0             100.0        116.666667                  6.0    802.0           1.0       7.0
8         416546.825195         415744.825195       416546.825195    100802.000000       100.000000       415744.825195               0.0                       0.0             100.0        116.666667                  7.0    802.0           1.0       8.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/2, buf_size=802, start_state=[0].[0m
[01/31 12:00:08]  --------------------------------------------------------------------------------
[01/31 12:00:08]  Iteration: 27 (13 solution, 13 counterexamples)
[01/31 12:01:54]  Generator returned sat in 104.981095 secs.
[01/31 12:01:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 12:02:11]  Improved number of small numbers from 96 to 97 out of a max of 138
[01/31 12:02:11]  Verifer returned sat in 16.363197 secs.
[01/31 12:02:11]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         415057.574402         415057.574402       415057.574402         0.998047         0.997803       415057.574402               0.0                       0.0         50.997803             100.0                  0.0      0.0          -1.0       1.0
1         415101.199677         415101.199677       415101.199677     43625.274658        43.625275       415101.199677               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
2         415144.824951         415144.824951       415144.824951     43625.274658        43.625275       415144.824951               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
3         415188.450226         415188.450226       415188.450226     43625.274658        43.625275       415188.450226               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
4         415232.075500         415232.075500       415232.075500     43625.274658        43.625275       415232.075500               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
5         415275.700775         415275.700775       415275.700775     43625.274658        43.625275       415275.700775               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
6         415319.326050         415319.326050       415319.326050     43625.274658        43.625275       415319.326050               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
7         415362.951324         415362.951324       415362.951324     43625.274658        43.625275       415362.951324               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
8         415406.576599         415406.576599       415406.576599     43625.274658        43.625275       415406.576599               0.0                       0.0         50.997803             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=241583/32768, buf_size=34285/4096, start_state=[0].[0m
[01/31 12:02:11]  --------------------------------------------------------------------------------
[01/31 12:02:11]  Iteration: 28 (13 solution, 14 counterexamples)
[01/31 12:05:26]  Generator returned sat in 193.703479 secs.
[01/31 12:05:26]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 12:05:47]  Verifer returned unsat in 20.658926 secs.
[01/31 12:07:48]  Improved number of small numbers from 102 to 102 out of a max of 148
[01/31 12:07:48]  Verifer returned sat in 120.778643 secs.
[01/31 12:07:48]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0      -689929.149960      -689929.149960    -689929.149960       0.500000       0.500000    -689929.149960        0.000000                0.000000       78.095238      116.825397                3.0  -14327.637225    0.000000          -1.0        0.000000 -689929.14996       4.0
1      -689714.546785      -689851.372182    -689714.546785  214603.174603     214.603175    -689851.372182        0.000000                0.000000       78.095238      116.825397                0.0  -14327.637225  136.825397           0.0      114.603175 -689829.14996       0.0
2      -689441.530912      -689775.816626    -689441.530912  273152.698413     273.015873    -689775.816626        0.000000                0.000000       78.095238      116.825397                0.0  -14327.637225  334.285714           0.0      287.619048 -689729.14996       1.0
3      -689168.515039      -689697.721388    -689168.515039  273350.158730     273.015873    -689697.721388        0.000000                0.000000       78.095238      116.825397                0.0  -14327.637225  529.206349           0.0      460.634921 -689629.14996       1.0
4      -688895.499166      -689618.038848    -688895.499166  273545.079365     273.015873    -689618.038848        0.000000                0.000000       78.095238      116.825397                1.0  -14327.637225  722.539683           1.0      633.650794 -689529.14996       2.0
5      -688622.483293      -689464.705515    -688622.483293  273738.412698     273.015873    -689464.705515       47.301587                0.000000       78.095238      116.825397                2.0  -14327.637225  794.920635           1.0      759.365079 -689429.14996       3.0
6      -688407.880118      -689386.927737    -688407.880118  215445.396825     214.603175    -689386.927737      161.904762               47.301587       78.095238      116.825397                2.0  -14327.637225  817.142857           1.0      759.365079 -689329.14996       3.0
7      -688193.276944      -689329.149960    -688193.276944  215582.222222     214.603175    -689329.149960      276.507937              161.904762       78.095238      116.825397                3.0  -14327.637225  859.365079           1.0      759.365079 -689229.14996       4.0
8      -687978.673769      -689229.149960    -687978.673769  215739.047619     214.603175    -689229.149960      391.111111              276.507937       78.095238      116.825397                4.0  -14327.637225  859.365079           1.0      759.365079 -689129.14996       5.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=3520/9, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1240/63, buf_size=47840/63, start_state=[0].[0m
[01/31 12:07:48]  --------------------------------------------------------------------------------
[01/31 12:07:48]  Iteration: 29 (13 solution, 15 counterexamples)
[01/31 12:09:29]  Generator returned sat in 99.957529 secs.
[01/31 12:09:29]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 12:09:36]  Improved number of small numbers from 102 to 138 out of a max of 138
[01/31 12:09:36]  Verifer returned sat in 7.204552 secs.
[01/31 12:09:36]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         807480.439941         807480.439941       807480.439941         0.998047         0.997559       807480.439941               0.0                       0.0         59.999756             100.0                  0.0      0.0          -1.0       0.0
1         807521.437744         807521.437744       807521.437744     40997.802734        40.997803       807521.437744               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
2         807562.435547         807562.435547       807562.435547     40997.802734        40.997803       807562.435547               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
3         807603.433350         807603.433350       807603.433350     40997.802734        40.997803       807603.433350               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
4         807644.431152         807644.431152       807644.431152     40997.802734        40.997803       807644.431152               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
5         807685.428955         807685.428955       807685.428955     40997.802734        40.997803       807685.428955               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
6         807726.426758         807726.426758       807726.426758     40997.802734        40.997803       807726.426758               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
7         807767.424561         807767.424561       807767.424561     40997.802734        40.997803       807767.424561               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
8         807808.422363         807808.422363       807808.422363     40997.802734        40.997803       807808.422363               0.0                       0.0         59.999756             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=9729/512, buf_size=50689/512, start_state=[0].[0m
[01/31 12:09:37]  --------------------------------------------------------------------------------
[01/31 12:09:37]  Iteration: 30 (13 solution, 16 counterexamples)
[01/31 12:14:01]  Generator returned sat in 262.549796 secs.
[01/31 12:14:01]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 12:14:12]  Improved number of small numbers from 104 to 104 out of a max of 138
[01/31 12:14:12]  Verifer returned sat in 10.876207 secs.
[01/31 12:14:12]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0         806717.136495         806517.218799       806717.136495         0.998047         0.997559       806517.218799          0.000000                  0.000000         88.971193        119.506173                  1.0  199.917695          -1.0       2.0
1         806867.177647         806617.218799       806867.177647    150241.069959       150.041152       806617.218799          0.000000                  0.000000         88.971193        119.506173                  0.0  249.958848           0.0       1.0
2         807017.218799         806717.218799       807017.218799    150291.111111       150.041152       806717.218799          0.000000                  0.000000         88.971193        119.506173                  0.0  300.000000           0.0       1.0
3         807167.259951         806817.218799       807167.259951    150341.152263       150.041152       806817.218799          0.000000                  0.000000         88.971193        119.506173                  1.0  350.041152           1.0       2.0
4         807317.301104         806917.218799       807317.301104    150391.193416       150.041152       806917.218799         49.547325                  0.000000         88.971193        119.506173                  1.0  350.534979           1.0       2.0
5         807467.342256         807017.218799       807467.342256    150441.234568       150.041152       807017.218799         99.588477                 49.547325         88.971193        119.506173                  2.0  350.534979           1.0       3.0
6         807617.383408         807117.218799       807617.383408    150491.275720       150.041152       807117.218799        149.629630                 99.588477         88.971193        119.506173                  2.0  350.534979           1.0       3.0
7         807767.424561         807217.218799       807767.424561    150541.316872       150.041152       807217.218799        199.670782                149.629630         88.971193        119.506173                  2.0  350.534979           1.0       3.0
8         807917.465713         807317.218799       807917.465713    150591.358025       150.041152       807317.218799        249.711934                199.670782         88.971193        119.506173                  2.0  350.534979           1.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=60680/243, beliefs_remain_consistent=True, beliefs_improve=False, alpha=320/243, buf_size=85180/243, start_state=[0].[0m
[01/31 12:14:12]  --------------------------------------------------------------------------------
[01/31 12:14:12]  Iteration: 31 (13 solution, 17 counterexamples)
[01/31 12:18:23]  Generator returned sat in 249.994235 secs.
[01/31 12:18:23]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 12:19:07]  Verifer returned unsat in 43.824884 secs.
[01/31 12:19:33]  Verifer returned unsat in 25.527804 secs.
[01/31 12:19:33]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 12:19:33]  --------------------------------------------------------------------------------
[01/31 12:19:33]  Iteration: 32 (14 solution, 17 counterexamples)
[01/31 12:19:41]  Generator returned sat in 6.316641 secs.
[01/31 12:19:41]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 12:19:51]  Verifer returned unsat in 10.101830 secs.
[01/31 12:47:29]  Verifer returned unsat in 1657.615146 secs.
[01/31 12:47:29]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 12:47:29]  --------------------------------------------------------------------------------
[01/31 12:47:29]  Iteration: 33 (15 solution, 17 counterexamples)
[01/31 12:47:39]  Generator returned sat in 7.736444 secs.
[01/31 12:47:39]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 12:47:55]  Verifer returned unsat in 15.827819 secs.
[01/31 12:48:45]  Improved number of small numbers from 68 to 70 out of a max of 148
[01/31 12:48:45]  Verifer returned sat in 50.160561 secs.
[01/31 12:48:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -690144.683924      -690144.683924    -690144.683924       0.499512       0.499512    -690144.683924        0.000000                0.000000       91.124451      143.248413                0.0  -14164.597082    0.000000          -1.0      -52.493896 -690092.190028       1.0
1      -689962.435023      -689992.190028    -689962.435023  182248.901367     182.248901    -689992.190028        0.000000                0.000000       91.124451      143.248413                0.0  -14164.597082   29.755005           0.0       29.755005 -689992.190028       0.0
2      -689780.186121      -689892.190028    -689780.186121  182278.656372     182.248901    -689892.190028        0.000000                0.000000       91.124451      143.248413                0.0  -14164.597082  112.003906           0.0      112.003906 -689892.190028       0.0
3      -689597.937220      -689892.190028    -689597.937220  182360.905273     182.248901    -689892.190028        0.000000                0.000000       91.124451      143.248413                0.0  -14164.597082  294.252808           0.0      194.252808 -689792.190028       0.0
4      -689415.688319      -689779.686366    -689415.688319  182543.154175     182.248901    -689779.686366       76.501709                0.000000       91.124451      143.248413                0.0  -14164.597082  287.496338           0.0      200.000000 -689692.190028       1.0
5      -689233.439417      -689635.938197    -689233.439417  182612.899414     182.248901    -689635.938197      158.750610               76.501709       91.124451      143.248413                1.0  -14164.597082  243.748169           1.0      200.000000 -689592.190028       2.0
6      -689051.190516      -689592.190028    -689051.190516  182651.400146     182.248901    -689592.190028      240.999512              158.750610       91.124451      143.248413                1.0  -14164.597082  300.000000           1.0      200.000000 -689492.190028       2.0
7      -688868.941615      -689492.190028    -688868.941615  182789.900879     182.248901    -689492.190028      323.248413              240.999512       91.124451      143.248413                2.0  -14164.597082  300.000000           1.0      200.000000 -689392.190028       3.0
8      -688686.692713      -689348.441650    -688686.692713  182872.149780     182.248901    -689348.441650      405.497314              323.248413       91.124451      143.248413                1.0  -14164.597082  256.251623           1.0      200.000000 -689292.190028       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=1660917/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=79873/4096, buf_size=200, start_state=[0].[0m
[01/31 12:48:45]  --------------------------------------------------------------------------------
[01/31 12:48:45]  Iteration: 34 (15 solution, 18 counterexamples)
[01/31 12:52:39]  Generator returned sat in 232.394102 secs.
[01/31 12:52:39]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 12:52:48]  Verifer returned unsat in 8.595162 secs.
[01/31 12:58:30]  Verifer returned unsat in 341.772563 secs.
[01/31 12:58:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 12:58:30]  --------------------------------------------------------------------------------
[01/31 12:58:30]  Iteration: 35 (16 solution, 18 counterexamples)
[01/31 12:58:44]  Generator returned sat in 12.521696 secs.
[01/31 12:58:44]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 12:58:56]  Improved number of small numbers from 102 to 138 out of a max of 138
[01/31 12:58:56]  Verifer returned sat in 12.022854 secs.
[01/31 12:58:56]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0         659554.013184         659530.513184       659554.013184         0.997803         0.997314       659530.513184               0.0                       0.0              88.0             132.0                  1.0     23.5          -1.0       2.0
1         659622.513184         659622.513184       659622.513184     68523.500000        68.500000       659622.513184               0.0                       0.0              88.0             132.0                  0.0      0.0           0.0       0.0
2         659798.513184         659722.513184       659798.513184    176000.000000       176.000000       659722.513184               0.0                       0.0              88.0             132.0                  0.0     76.0           0.0       0.0
3         659974.513184         659822.513184       659974.513184    176076.000000       176.000000       659822.513184               0.0                       0.0              88.0             132.0                  0.0    152.0           0.0       0.0
4         660150.513184         659922.513184       660150.513184    176152.000000       176.000000       659922.513184              75.5                       0.0              88.0             132.0                  0.0    152.5           0.0       1.0
5         660326.513184         660022.513184       660326.513184    176228.000000       176.000000       660022.513184             151.5                      75.5              88.0             132.0                  0.0    152.5           1.0       1.0
6         660502.513184         660122.513184       660502.513184    176304.000000       176.000000       660122.513184             227.5                     151.5              88.0             132.0                  0.0    152.5           1.0       1.0
7         660678.513184         660222.513184       660678.513184    176380.000000       176.000000       660222.513184             303.5                     227.5              88.0             132.0                  0.0    152.5           1.0       1.0
8         660854.513184         660322.513184       660854.513184    176456.000000       176.000000       660322.513184             379.5                     303.5              88.0             132.0                  0.0    152.5           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=759/2, beliefs_remain_consistent=True, beliefs_improve=False, alpha=39/2, buf_size=305/2, start_state=[0].[0m
[01/31 12:58:57]  --------------------------------------------------------------------------------
[01/31 12:58:57]  Iteration: 36 (16 solution, 19 counterexamples)
[01/31 13:04:11]  Generator returned sat in 312.370753 secs.
[01/31 13:04:11]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 13:04:26]  Improved number of small numbers from 85 to 85 out of a max of 138
[01/31 13:04:26]  Verifer returned sat in 15.276829 secs.
[01/31 13:04:26]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0          1.044756e+06          1.044678e+06        1.044756e+06         0.997803         0.997314        1.044678e+06          0.000000                  0.000000         92.003581        119.002686                  0.0  77.987467          -1.0       1.0
1          1.044867e+06          1.044778e+06        1.044867e+06    111084.253743       111.006266        1.044778e+06          0.000000                  0.000000         92.003581        119.002686                  0.0  88.993734           0.0       0.0
2          1.044978e+06          1.044878e+06        1.044978e+06    111095.260010       111.006266        1.044878e+06          0.997314                  0.000000         92.003581        119.002686                  0.0  99.002686           0.0       0.0
3          1.045089e+06          1.044978e+06        1.045089e+06    111106.266276       111.006266        1.044978e+06         12.003581                  0.997314         92.003581        119.002686                  0.0  99.002686           1.0       0.0
4          1.045200e+06          1.045078e+06        1.045200e+06    111117.272542       111.006266        1.045078e+06         23.009847                 12.003581         92.003581        119.002686                  0.0  99.002686           1.0       0.0
5          1.045311e+06          1.045178e+06        1.045311e+06    111128.278809       111.006266        1.045178e+06         34.016113                 23.009847         92.003581        119.002686                  0.0  99.002686           1.0       0.0
6          1.045422e+06          1.045278e+06        1.045422e+06    111139.285075       111.006266        1.045278e+06         45.022380                 34.016113         92.003581        119.002686                  0.0  99.002686           1.0       0.0
7          1.045533e+06          1.045378e+06        1.045533e+06    111150.291341       111.006266        1.045378e+06         56.028646                 45.022380         92.003581        119.002686                  0.0  99.002686           1.0       0.0
8          1.045644e+06          1.045478e+06        1.045644e+06    111161.297607       111.006266        1.045478e+06         67.034912                 56.028646         92.003581        119.002686                  0.0  99.002686           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=274575/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77835/4096, buf_size=405515/4096, start_state=[0].[0m
[01/31 13:04:27]  --------------------------------------------------------------------------------
[01/31 13:04:27]  Iteration: 37 (16 solution, 20 counterexamples)
[01/31 13:12:00]  Generator returned sat in 449.977721 secs.
[01/31 13:12:00]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 13:12:11]  Verifer returned unsat in 11.482395 secs.
[01/31 13:13:38]  Improved number of small numbers from 81 to 84 out of a max of 148
[01/31 13:13:38]  Verifer returned sat in 86.232293 secs.
[01/31 13:13:38]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.000914e+06       -1.000915e+06     -1.000914e+06       0.499512       0.499268     -1.000915e+06        0.499512                0.000000       86.425703      133.172691                0.0  -14164.597168    0.000000          -1.0      -76.385628 -1.000838e+06       0.0
1       -1.000738e+06       -1.000742e+06     -1.000738e+06  176386.041680     176.385542     -1.000742e+06        0.499512                0.499512       86.425703      133.172691                0.0  -14164.597082    3.855422           1.0        0.000000 -1.000738e+06       0.0
2       -1.000562e+06       -1.000656e+06     -1.000562e+06  176389.897102     176.385542     -1.000656e+06        0.499512                0.499512       86.425703      133.172691                0.0  -14164.597082   93.975904           0.0       76.385542 -1.000638e+06       0.0
3       -1.000385e+06       -1.000570e+06     -1.000385e+06  176480.017584     176.385542     -1.000570e+06        0.499512                0.499512       86.425703      133.172691                0.0  -14164.597082  184.096386           0.0      152.771084 -1.000538e+06       1.0
4       -1.000209e+06       -1.000538e+06     -1.000209e+06  176570.138066     176.385542     -1.000538e+06       76.724411                0.499512       86.425703      133.172691                0.0  -14164.597082  252.931727           0.0      152.931727 -1.000438e+06       1.0
5       -1.000032e+06       -1.000405e+06     -1.000032e+06  176715.198307     176.385542     -1.000405e+06      153.109953               76.724411       86.425703      133.172691                1.0  -14164.597082  219.598394           1.0      152.931727 -1.000338e+06       2.0
6       -9.998560e+05       -1.000311e+06     -9.998560e+05  176758.250516     176.385542     -1.000311e+06      229.495496              153.109953       86.425703      133.172691                1.0  -14164.597082  225.461847           1.0      152.931727 -1.000238e+06       2.0
7       -9.996797e+05       -1.000225e+06     -9.996797e+05  176840.499512     176.385542     -1.000225e+06      305.881038              229.495496       86.425703      133.172691                1.0  -14164.597082  239.196787           1.0      152.931727 -1.000138e+06       2.0
8       -9.995033e+05       -1.000138e+06     -9.995033e+05  176930.619994     176.385542     -1.000138e+06      382.266580              305.881038       86.425703      133.172691                1.0  -14164.597082  252.931681           1.0      152.931727 -1.000038e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=95060/249, beliefs_remain_consistent=True, beliefs_improve=False, alpha=81263/4096, buf_size=38080/249, start_state=[0].[0m
[01/31 13:13:38]  --------------------------------------------------------------------------------
[01/31 13:13:38]  Iteration: 38 (16 solution, 21 counterexamples)
[01/31 13:16:13]  Generator returned sat in 152.675040 secs.
[01/31 13:16:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 13:17:11]  Verifer returned unsat in 58.053066 secs.
[01/31 13:18:36]  Improved number of small numbers from 111 to 148 out of a max of 148
[01/31 13:18:36]  Verifer returned sat in 85.116694 secs.
[01/31 13:18:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.531430e+06       -1.531430e+06     -1.531430e+06       0.499268       0.499268     -1.531430e+06        0.000000                0.000000       77.888889           116.0                0.0  -14164.596924    0.000000          -1.0       -0.000244 -1.531430e+06       0.0
1       -1.531256e+06       -1.531352e+06     -1.531256e+06  174000.000000     174.000000     -1.531352e+06        0.000000                0.000000       77.888889           116.0                0.0  -14164.596924   96.222168           0.0       73.999756 -1.531330e+06       0.0
2       -1.531082e+06       -1.531230e+06     -1.531082e+06  174096.222168     174.000000     -1.531230e+06        0.000000                0.000000       77.888889           116.0                0.0  -14164.596924  148.000000           0.0      147.999756 -1.531230e+06       0.0
3       -1.530908e+06       -1.531130e+06     -1.530908e+06  174148.000000     174.000000     -1.531130e+06        0.000000                0.000000       77.888889           116.0                0.0  -14164.596924  221.999756           0.0      221.999756 -1.531130e+06       1.0
4       -1.530734e+06       -1.531078e+06     -1.530734e+06  174221.999756     174.000000     -1.531078e+06       73.888672                0.000000       77.888889           116.0                0.0  -14164.596924  270.444580           0.0      222.111084 -1.531030e+06       1.0
5       -1.530560e+06       -1.530963e+06     -1.530560e+06  174344.333252     174.000000     -1.530963e+06      147.888672               73.888672       77.888889           116.0                1.0  -14164.596924  255.444580           1.0      222.111084 -1.530930e+06       2.0
6       -1.530386e+06       -1.530886e+06     -1.530386e+06  174403.333252     174.000000     -1.530886e+06      221.888672              147.888672       77.888889           116.0                1.0  -14164.596924  277.666748           1.0      222.111084 -1.530830e+06       2.0
7       -1.530212e+06       -1.530808e+06     -1.530212e+06  174499.555420     174.000000     -1.530808e+06      295.888672              221.888672       77.888889           116.0                1.0  -14164.596924  299.888916           1.0      222.111084 -1.530730e+06       2.0
8       -1.530038e+06       -1.530730e+06     -1.530038e+06  174595.777588     174.000000     -1.530730e+06      369.888672              295.888672       77.888889           116.0                2.0  -14164.596924  322.111084           1.0      222.111084 -1.530630e+06       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=189383/512, beliefs_remain_consistent=True, beliefs_improve=False, alpha=179/9, buf_size=909767/4096, start_state=[0].[0m
[01/31 13:18:37]  --------------------------------------------------------------------------------
[01/31 13:18:37]  Iteration: 39 (16 solution, 22 counterexamples)
[01/31 13:19:25]  Generator returned sat in 45.222526 secs.
[01/31 13:19:26]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 13:19:45]  Improved number of small numbers from 102 to 102 out of a max of 138
[01/31 13:19:45]  Verifer returned sat in 19.245689 secs.
[01/31 13:19:45]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          1.103396e+06          1.103396e+06        1.103396e+06         0.997803         0.997314        1.103396e+06          0.000000                  0.000000         89.382716        119.506173                  1.0    0.000000          -1.0       2.0
1          1.103694e+06          1.103496e+06        1.103694e+06    298271.604938       298.271605        1.103496e+06          0.000000                  0.000000         89.382716        119.506173                  0.0  198.271605           0.0       0.0
2          1.103992e+06          1.103596e+06        1.103992e+06    298469.876543       298.271605        1.103596e+06        197.777778                  0.000000         89.382716        119.506173                  0.0  198.765432           0.0       1.0
3          1.104290e+06          1.103696e+06        1.104290e+06    298668.148148       298.271605        1.103696e+06        396.049383                197.777778         89.382716        119.506173                  0.0  198.765432           1.0       1.0
4          1.104589e+06          1.103796e+06        1.104589e+06    298866.419753       298.271605        1.103796e+06        594.320988                396.049383         89.382716        119.506173                  0.0  198.765432           1.0       1.0
5          1.104887e+06          1.103896e+06        1.104887e+06    299064.691358       298.271605        1.103896e+06        792.592593                594.320988         89.382716        119.506173                  0.0  198.765432           1.0       1.0
6          1.105185e+06          1.103996e+06        1.105185e+06    299262.962963       298.271605        1.103996e+06        990.864198                792.592593         89.382716        119.506173                  0.0  198.765432           1.0       1.0
7          1.105484e+06          1.104096e+06        1.105484e+06    299461.234568       298.271605        1.104096e+06       1189.135802                990.864198         89.382716        119.506173                  0.0  198.765432           1.0       1.0
8          1.105782e+06          1.104196e+06        1.105782e+06    299659.506173       298.271605        1.104196e+06       1387.407407               1189.135802         89.382716        119.506173                  0.0  198.765432           1.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=7, loss_amount=37460/27, beliefs_remain_consistent=True, beliefs_improve=False, alpha=40/81, buf_size=16100/81, start_state=[0].[0m
[01/31 13:19:45]  --------------------------------------------------------------------------------
[01/31 13:19:45]  Iteration: 40 (16 solution, 23 counterexamples)
[01/31 13:27:31]  Generator returned sat in 462.845946 secs.
[01/31 13:27:32]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
elif (+ -1/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 13:27:39]  Improved number of small numbers from 102 to 138 out of a max of 138
[01/31 13:27:39]  Verifer returned sat in 7.573448 secs.
[01/31 13:27:40]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          1.103780e+06          1.103779e+06        1.103780e+06         0.997559          0.99707        1.103779e+06          0.997314                  0.000000         16.954346             100.0                  0.0      0.0          -1.0       0.0
1          1.103798e+06          1.103797e+06        1.103798e+06     17952.657471         17.95166        1.103797e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           1.0       0.0
2          1.103816e+06          1.103815e+06        1.103816e+06     17952.657471         17.95166        1.103815e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           0.0       0.0
3          1.103834e+06          1.103833e+06        1.103834e+06     17952.657471         17.95166        1.103833e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           0.0       0.0
4          1.103852e+06          1.103851e+06        1.103852e+06     17952.657471         17.95166        1.103851e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           0.0       0.0
5          1.103870e+06          1.103869e+06        1.103870e+06     17952.657471         17.95166        1.103869e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           0.0       0.0
6          1.103888e+06          1.103887e+06        1.103888e+06     17952.657471         17.95166        1.103887e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           0.0       0.0
7          1.103906e+06          1.103905e+06        1.103906e+06     17952.657471         17.95166        1.103905e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           0.0       0.0
8          1.103924e+06          1.103923e+06        1.103924e+06     17952.657471         17.95166        1.103923e+06          0.997314                  0.997314         16.954346             100.0                  0.0      0.0           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4085/4096, buf_size=8169/4096, start_state=[0].[0m
[01/31 13:27:40]  --------------------------------------------------------------------------------
[01/31 13:27:40]  Iteration: 41 (16 solution, 24 counterexamples)
[01/31 13:43:13]  Generator returned sat in 929.616350 secs.
[01/31 13:43:13]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 13:43:37]  Improved number of small numbers from 122 to 122 out of a max of 138
[01/31 13:43:37]  Verifer returned sat in 23.791235 secs.
[01/31 13:43:37]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t      queue_t  utilized_0,t  qdelay_t
0          1.103428e+06          1.103287e+06        1.103428e+06         0.997559         0.997070        1.103287e+06          0.000000                  0.000000         89.388889             120.0                  8.0   141.222222          -1.0       9.0
1          1.103787e+06          1.103387e+06        1.103787e+06    358919.000000       358.777778        1.103387e+06          0.000000                  0.000000         89.388889             120.0                  5.0   400.000000           1.0       6.0
2          1.104146e+06          1.103487e+06        1.104146e+06    359177.777778       358.777778        1.103487e+06          0.000000                  0.000000         89.388889             120.0                  0.0   658.777778           0.0       1.0
3          1.104504e+06          1.103587e+06        1.104504e+06    359436.555556       358.777778        1.103587e+06          0.000000                  0.000000         89.388889             120.0                  1.0   917.555556           1.0       2.0
4          1.104863e+06          1.103687e+06        1.104863e+06    359695.333333       358.777778        1.103687e+06          0.000000                  0.000000         89.388889             120.0                  2.0  1176.333333           1.0       3.0
5          1.105222e+06          1.103787e+06        1.105222e+06    359954.111111       358.777778        1.103787e+06        258.777778                  0.000000         89.388889             120.0                  3.0  1176.333333           1.0       4.0
6          1.105581e+06          1.103887e+06        1.105581e+06    360212.888889       358.777778        1.103887e+06        517.555556                258.777778         89.388889             120.0                  3.0  1176.333333           1.0       4.0
7          1.105940e+06          1.103987e+06        1.105940e+06    360471.666667       358.777778        1.103987e+06        776.333333                517.555556         89.388889             120.0                  4.0  1176.333333           1.0       5.0
8          1.106298e+06          1.104087e+06        1.106298e+06    360730.444444       358.777778        1.104087e+06       1035.111111                776.333333         89.388889             120.0                  5.0  1176.333333           1.0       6.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=9316/9, beliefs_remain_consistent=True, beliefs_improve=False, alpha=11/9, buf_size=3529/3, start_state=[0].[0m
[01/31 13:43:37]  --------------------------------------------------------------------------------
[01/31 13:43:37]  Iteration: 42 (16 solution, 25 counterexamples)
[01/31 13:53:39]  Generator returned sat in 598.004584 secs.
[01/31 13:53:39]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 13:55:00]  Verifer returned unsat in 80.668467 secs.
[01/31 14:22:12]  Improved gap from 0.0 to 48.4375
[01/31 14:22:19]  Improved number of small numbers from 80 to 87 out of a max of 149
[01/31 14:22:19]  Verifer returned sat in 1638.481198 secs.
[01/31 14:22:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.456502e+06       -1.456511e+06     -1.456502e+06       0.499268       0.499023     -1.456511e+06        0.499268                0.000000       66.833089           100.0                6.0   34207.269531   8.690796          -1.0        8.690632 -1.456511e+06       7.0
1       -1.456453e+06       -1.456502e+06     -1.456453e+06   48696.323853      48.687134     -1.456502e+06        0.499268                0.499268       66.833089           100.0                0.0   34249.891602  48.437500           1.0       -0.000164 -1.456454e+06       0.0
2       -1.456405e+06       -1.456453e+06     -1.456405e+06   48736.070557      48.687134     -1.456453e+06        0.499268                0.499268       66.833089           100.0                0.0   34300.954998  48.187866           0.0       -0.249634 -1.456405e+06       0.0
3       -1.456356e+06       -1.456405e+06     -1.456356e+06   48735.820923      48.687134     -1.456405e+06        0.499268                0.499268       66.833089           100.0                0.0   34352.517498  48.437500           0.0        0.000000 -1.456356e+06       0.0
4       -1.456307e+06       -1.456356e+06     -1.456307e+06   48736.070557      48.687134     -1.456356e+06        0.499268                0.499268       66.833089           100.0                0.0   34403.830322  48.687134           0.0       -0.000042 -1.456308e+06       1.0
5       -1.456258e+06       -1.456307e+06     -1.456258e+06   48736.320190      48.687134     -1.456307e+06        0.499268                0.499268       66.833089           100.0                0.0   34455.143231  48.437500           0.0        0.000000 -1.456259e+06       0.0
6       -1.456210e+06       -1.456259e+06     -1.456210e+06   48736.070557      48.687134     -1.456259e+06        0.499268                0.499268       66.833089           100.0                0.0   34506.456097  48.687134           0.0        0.000000 -1.456210e+06       1.0
7       -1.456161e+06       -1.456210e+06     -1.456161e+06   48736.320190      48.687134     -1.456210e+06        0.499268                0.499268       66.833089           100.0                0.0   34557.768799  48.687134           0.0       -0.000164 -1.456162e+06       1.0
8       -1.456112e+06       -1.456161e+06     -1.456112e+06   48736.320190      48.687134     -1.456161e+06        0.499268                0.499268       66.833089           100.0                0.0   34557.768799  48.437325           0.0      -51.313030 -1.456062e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=445955/24576, buf_size=800, start_state=[0].[0m
[01/31 14:22:19]  --------------------------------------------------------------------------------
[01/31 14:22:19]  Iteration: 43 (16 solution, 26 counterexamples)
[01/31 14:24:58]  Generator returned sat in 156.341200 secs.
[01/31 14:24:58]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 14:25:22]  Verifer returned unsat in 24.491108 secs.
[01/31 14:36:31]  Improved number of small numbers from 87 to 90 out of a max of 148
[01/31 14:36:31]  Verifer returned sat in 668.738683 secs.
[01/31 14:36:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -1.597923e+06       -1.597926e+06     -1.597923e+06       0.499268       0.499023     -1.597926e+06        0.000000                0.000000           100.0      164.504232                0.0  175522.402101    3.243652          -1.0      -96.756348 -1.597826e+06       0.0
1       -1.597791e+06       -1.597813e+06     -1.597791e+06  132255.359538     132.252116     -1.597813e+06        0.000000                0.000000           100.0      164.504232                0.0  175522.402101   22.738118           0.0      -64.504232 -1.597726e+06       0.0
2       -1.597658e+06       -1.597726e+06     -1.597658e+06  132274.854004     132.252116     -1.597726e+06        0.000000                0.000000           100.0      164.504232                0.0  175522.402101   67.747884           0.0      -32.252116 -1.597626e+06       0.0
3       -1.597526e+06       -1.597526e+06     -1.597526e+06  132319.863770     132.252116     -1.597526e+06        0.000000                0.000000           100.0      164.504232                0.0  175522.402101    0.000000           0.0        0.000000 -1.597526e+06       0.0
4       -1.597394e+06       -1.597526e+06     -1.597394e+06  132252.115885     132.252116     -1.597526e+06       14.005208                0.000000           100.0      164.504232                0.0  175522.402101  117.747884           0.0       18.246908 -1.597426e+06       0.0
5       -1.597262e+06       -1.597362e+06     -1.597262e+06  132383.868978     132.252116     -1.597362e+06       46.257324               14.005208           100.0      164.504232                0.0  175522.402101   53.742676           1.0       18.246908 -1.597326e+06       0.0
6       -1.597129e+06       -1.597307e+06     -1.597129e+06  132352.115885     132.252116     -1.597307e+06       78.509440               46.257324           100.0      164.504232                0.0  175522.402101   99.500977           1.0       18.246908 -1.597226e+06       0.0
7       -1.596997e+06       -1.597197e+06     -1.596997e+06  132430.126302     132.252116     -1.597197e+06      110.761556               78.509440           100.0      164.504232                0.0  175522.402101   88.739421           1.0       18.246908 -1.597126e+06       0.0
8       -1.596865e+06       -1.597031e+06     -1.596865e+06  132451.616862     132.252116     -1.597031e+06      143.013672              110.761556           100.0      164.504232                0.0  175522.402101   22.738228           1.0       18.246908 -1.597026e+06       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=73223/512, beliefs_remain_consistent=True, beliefs_improve=False, alpha=9087/512, buf_size=112109/6144, start_state=[0].[0m
[01/31 14:36:31]  --------------------------------------------------------------------------------
[01/31 14:36:31]  Iteration: 44 (16 solution, 27 counterexamples)
[01/31 14:40:15]  Generator returned sat in 221.325379 secs.
[01/31 14:40:16]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 14:41:02]  Improved number of small numbers from 102 to 102 out of a max of 138
[01/31 14:41:02]  Verifer returned sat in 45.905798 secs.
[01/31 14:41:02]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0         954715.813914         954715.541805       954715.813914         0.997314         0.996826       954715.541805          0.272109                  0.000000         89.160998        114.013605                  0.0   0.000000          -1.0       1.0
1         955008.149515         954815.541805       955008.149515    292335.873016       292.335601       954815.541805         92.879819                  0.272109         89.160998        114.013605                  0.0  99.727891           1.0       0.0
2         955300.485116         954915.541805       955300.485116    292528.208617       292.335601       954915.541805        285.215420                 92.879819         89.160998        114.013605                  0.0  99.727891           1.0       0.0
3         955592.820717         955015.541805       955592.820717    292720.544218       292.335601       955015.541805        477.551020                285.215420         89.160998        114.013605                  0.0  99.727891           1.0       0.0
4         955885.156318         955115.541805       955885.156318    292912.879819       292.335601       955115.541805        669.886621                477.551020         89.160998        114.013605                  0.0  99.727891           1.0       0.0
5         956177.491919         955215.541805       956177.491919    293105.215420       292.335601       955215.541805        862.222222                669.886621         89.160998        114.013605                  0.0  99.727891           1.0       0.0
6         956469.827520         955315.541805       956469.827520    293297.551020       292.335601       955315.541805       1054.557823                862.222222         89.160998        114.013605                  0.0  99.727891           1.0       0.0
7         956762.163121         955415.541805       956762.163121    293489.886621       292.335601       955415.541805       1246.893424               1054.557823         89.160998        114.013605                  0.0  99.727891           1.0       0.0
8         957054.498721         955515.541805       957054.498721    293682.222222       292.335601       955515.541805       1439.229025               1246.893424         89.160998        114.013605                  0.0  99.727891           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=84820/63, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2900/147, buf_size=14660/147, start_state=[0].[0m
[01/31 14:41:02]  --------------------------------------------------------------------------------
[01/31 14:41:02]  Iteration: 45 (16 solution, 28 counterexamples)
[01/31 14:57:23]  Generator returned sat in 978.817531 secs.
[01/31 14:57:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 14:57:37]  Verifer returned unsat in 13.227540 secs.
[01/31 14:58:09]  Verifer returned unsat in 31.689279 secs.
[01/31 14:58:09]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 14:58:09]  --------------------------------------------------------------------------------
[01/31 14:58:09]  Iteration: 46 (17 solution, 28 counterexamples)
[01/31 14:58:28]  Generator returned sat in 16.890701 secs.
[01/31 14:58:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 14:58:40]  Verifer returned unsat in 11.851850 secs.
[01/31 15:02:54]  Verifer returned unsat in 253.802716 secs.
[01/31 15:02:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 15:02:55]  --------------------------------------------------------------------------------
[01/31 15:02:55]  Iteration: 47 (18 solution, 28 counterexamples)
[01/31 15:04:17]  Generator returned sat in 79.568919 secs.
[01/31 15:04:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 15:04:25]  Verifer returned unsat in 8.185523 secs.
[01/31 15:07:23]  Verifer returned unsat in 177.753160 secs.
[01/31 15:07:23]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 15:07:23]  --------------------------------------------------------------------------------
[01/31 15:07:23]  Iteration: 48 (19 solution, 28 counterexamples)
[01/31 15:07:43]  Generator returned sat in 17.208187 secs.
[01/31 15:07:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 15:07:56]  Verifer returned unsat in 12.713400 secs.
[01/31 15:09:40]  Verifer returned unsat in 103.607736 secs.
[01/31 15:09:40]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 15:09:40]  --------------------------------------------------------------------------------
[01/31 15:09:40]  Iteration: 49 (20 solution, 28 counterexamples)
[01/31 15:10:00]  Generator returned sat in 16.873620 secs.
[01/31 15:10:00]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 15:10:18]  Verifer returned unsat in 17.819510 secs.
[01/31 15:13:34]  Verifer returned unsat in 196.050911 secs.
[01/31 15:13:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 15:13:34]  --------------------------------------------------------------------------------
[01/31 15:13:34]  Iteration: 50 (21 solution, 28 counterexamples)
[01/31 15:13:54]  Generator returned sat in 16.841830 secs.
[01/31 15:13:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 15:14:07]  Verifer returned unsat in 13.285487 secs.
[01/31 15:16:11]  Verifer returned unsat in 123.387158 secs.
[01/31 15:16:11]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 15:16:11]  --------------------------------------------------------------------------------
[01/31 15:16:11]  Iteration: 51 (22 solution, 28 counterexamples)
[01/31 15:16:31]  Generator returned sat in 16.866910 secs.
[01/31 15:16:31]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 15:16:45]  Verifer returned unsat in 14.059593 secs.
[01/31 15:21:13]  Verifer returned unsat in 268.242781 secs.
[01/31 15:21:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 15:21:13]  --------------------------------------------------------------------------------
[01/31 15:21:13]  Iteration: 52 (23 solution, 28 counterexamples)
[01/31 15:21:33]  Generator returned sat in 16.940308 secs.
[01/31 15:21:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 15:21:51]  Verifer returned unsat in 17.691771 secs.
[01/31 15:22:17]  Verifer returned unsat in 25.732250 secs.
[01/31 15:22:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 15:22:17]  --------------------------------------------------------------------------------
[01/31 15:22:17]  Iteration: 53 (24 solution, 28 counterexamples)
[01/31 15:22:37]  Generator returned sat in 16.807976 secs.
[01/31 15:22:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 15:22:52]  Verifer returned unsat in 14.941930 secs.
[01/31 15:24:23]  Verifer returned unsat in 91.211911 secs.
[01/31 15:24:23]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 15:24:23]  --------------------------------------------------------------------------------
[01/31 15:24:23]  Iteration: 54 (25 solution, 28 counterexamples)
[01/31 15:24:43]  Generator returned sat in 16.571980 secs.
[01/31 15:24:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 15:24:50]  Verifer returned unsat in 7.298081 secs.
[01/31 15:25:17]  Verifer returned unsat in 26.099756 secs.
[01/31 15:25:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 15:25:17]  --------------------------------------------------------------------------------
[01/31 15:25:17]  Iteration: 55 (26 solution, 28 counterexamples)
[01/31 15:25:36]  Generator returned sat in 16.559390 secs.
[01/31 15:25:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 15:26:04]  Verifer returned unsat in 27.918022 secs.
[01/31 15:31:28]  Verifer returned unsat in 323.373750 secs.
[01/31 15:31:28]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 15:31:28]  --------------------------------------------------------------------------------
[01/31 15:31:28]  Iteration: 56 (27 solution, 28 counterexamples)
[01/31 15:31:47]  Generator returned sat in 16.577579 secs.
[01/31 15:31:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 15:31:55]  Verifer returned unsat in 7.414071 secs.
[01/31 15:34:10]  Verifer returned unsat in 134.972723 secs.
[01/31 15:34:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 15:34:10]  --------------------------------------------------------------------------------
[01/31 15:34:10]  Iteration: 57 (28 solution, 28 counterexamples)
[01/31 15:34:30]  Generator returned sat in 17.542638 secs.
[01/31 15:34:31]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 15:34:43]  Verifer returned unsat in 12.216510 secs.
[01/31 15:34:56]  Verifer returned unsat in 12.363302 secs.
[01/31 15:34:56]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 15:34:56]  --------------------------------------------------------------------------------
[01/31 15:34:56]  Iteration: 58 (29 solution, 28 counterexamples)
[01/31 15:35:15]  Generator returned sat in 16.657650 secs.
[01/31 15:35:15]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 15:35:24]  Verifer returned unsat in 8.713699 secs.
[01/31 15:35:49]  Verifer returned unsat in 24.812874 secs.
[01/31 15:35:49]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 15:35:49]  --------------------------------------------------------------------------------
[01/31 15:35:49]  Iteration: 59 (30 solution, 28 counterexamples)
[01/31 15:36:08]  Generator returned sat in 16.680324 secs.
[01/31 15:36:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 15:36:22]  Verifer returned unsat in 13.064080 secs.
[01/31 15:44:49]  Verifer returned unsat in 506.729903 secs.
[01/31 15:44:49]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 15:44:49]  --------------------------------------------------------------------------------
[01/31 15:44:49]  Iteration: 60 (31 solution, 28 counterexamples)
[01/31 15:45:08]  Generator returned sat in 16.658807 secs.
[01/31 15:45:08]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 15:45:16]  Verifer returned unsat in 7.866017 secs.
[01/31 15:45:54]  Verifer returned unsat in 37.014889 secs.
[01/31 15:45:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 15:45:54]  --------------------------------------------------------------------------------
[01/31 15:45:54]  Iteration: 61 (32 solution, 28 counterexamples)
[01/31 15:46:13]  Generator returned sat in 16.743269 secs.
[01/31 15:46:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 15:46:23]  Verifer returned unsat in 9.494793 secs.
[01/31 15:48:34]  Verifer returned unsat in 130.929420 secs.
[01/31 15:48:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 15:48:34]  --------------------------------------------------------------------------------
[01/31 15:48:34]  Iteration: 62 (33 solution, 28 counterexamples)
[01/31 15:48:53]  Generator returned sat in 16.574983 secs.
[01/31 15:48:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 15:49:00]  Verifer returned unsat in 6.384112 secs.
[01/31 15:49:43]  Verifer returned unsat in 43.046099 secs.
[01/31 15:49:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 15:49:43]  --------------------------------------------------------------------------------
[01/31 15:49:43]  Iteration: 63 (34 solution, 28 counterexamples)
[01/31 15:50:03]  Generator returned sat in 16.643209 secs.
[01/31 15:50:03]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 15:50:10]  Verifer returned unsat in 6.993042 secs.
[01/31 15:50:46]  Verifer returned unsat in 35.954929 secs.
[01/31 15:50:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 15:50:46]  --------------------------------------------------------------------------------
[01/31 15:50:46]  Iteration: 64 (35 solution, 28 counterexamples)
[01/31 15:51:06]  Generator returned sat in 16.709904 secs.
[01/31 15:51:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 15:51:14]  Verifer returned unsat in 8.003527 secs.
[01/31 15:54:34]  Verifer returned unsat in 199.536945 secs.
[01/31 15:54:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 15:54:34]  --------------------------------------------------------------------------------
[01/31 15:54:34]  Iteration: 65 (36 solution, 28 counterexamples)
[01/31 15:54:53]  Generator returned sat in 16.587029 secs.
[01/31 15:54:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 15:55:04]  Verifer returned unsat in 10.830872 secs.
[01/31 15:55:54]  Verifer returned unsat in 49.580412 secs.
[01/31 15:55:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 15:55:54]  --------------------------------------------------------------------------------
[01/31 15:55:54]  Iteration: 66 (37 solution, 28 counterexamples)
[01/31 15:56:14]  Generator returned sat in 16.656461 secs.
[01/31 15:56:14]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 15:56:58]  Verifer returned unsat in 44.112256 secs.
[01/31 16:02:15]  Verifer returned unsat in 316.537306 secs.
[01/31 16:02:15]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 16:02:15]  --------------------------------------------------------------------------------
[01/31 16:02:15]  Iteration: 67 (38 solution, 28 counterexamples)
[01/31 16:02:34]  Generator returned sat in 16.532023 secs.
[01/31 16:02:34]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 16:02:40]  Verifer returned unsat in 5.168182 secs.
[01/31 16:03:09]  Verifer returned unsat in 29.148855 secs.
[01/31 16:03:09]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 16:03:09]  --------------------------------------------------------------------------------
[01/31 16:03:09]  Iteration: 68 (39 solution, 28 counterexamples)
[01/31 16:03:28]  Generator returned sat in 16.552268 secs.
[01/31 16:03:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 16:03:38]  Verifer returned unsat in 9.070688 secs.
[01/31 16:04:00]  Verifer returned unsat in 21.899447 secs.
[01/31 16:04:00]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 16:04:00]  --------------------------------------------------------------------------------
[01/31 16:04:00]  Iteration: 69 (40 solution, 28 counterexamples)
[01/31 16:04:19]  Generator returned sat in 16.440931 secs.
[01/31 16:04:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 16:04:27]  Verifer returned unsat in 8.247900 secs.
[01/31 16:07:11]  Verifer returned unsat in 163.319206 secs.
[01/31 16:07:11]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 16:07:11]  --------------------------------------------------------------------------------
[01/31 16:07:11]  Iteration: 70 (41 solution, 28 counterexamples)
[01/31 16:07:31]  Generator returned sat in 16.675375 secs.
[01/31 16:07:31]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 16:07:59]  Verifer returned unsat in 27.827252 secs.
[01/31 16:08:53]  Verifer returned unsat in 54.167836 secs.
[01/31 16:08:53]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 16:08:53]  --------------------------------------------------------------------------------
[01/31 16:08:53]  Iteration: 71 (42 solution, 28 counterexamples)
[01/31 16:09:12]  Generator returned sat in 16.460464 secs.
[01/31 16:09:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 16:09:39]  Verifer returned unsat in 26.825955 secs.
[01/31 16:12:00]  Verifer returned unsat in 140.550724 secs.
[01/31 16:12:00]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 16:12:00]  --------------------------------------------------------------------------------
[01/31 16:12:00]  Iteration: 72 (43 solution, 28 counterexamples)
[01/31 16:12:20]  Generator returned sat in 17.248887 secs.
[01/31 16:12:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 16:12:32]  Verifer returned unsat in 11.542987 secs.
[01/31 16:13:10]  Verifer returned unsat in 37.162977 secs.
[01/31 16:13:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 16:13:10]  --------------------------------------------------------------------------------
[01/31 16:13:10]  Iteration: 73 (44 solution, 28 counterexamples)
[01/31 16:13:29]  Generator returned sat in 16.520712 secs.
[01/31 16:13:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 16:13:43]  Verifer returned unsat in 13.563251 secs.
[01/31 16:13:57]  Verifer returned unsat in 14.048373 secs.
[01/31 16:13:57]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 16:13:57]  --------------------------------------------------------------------------------
[01/31 16:13:57]  Iteration: 74 (45 solution, 28 counterexamples)
[01/31 16:14:16]  Generator returned sat in 16.562661 secs.
[01/31 16:14:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 16:14:28]  Verifer returned unsat in 11.640795 secs.
[01/31 16:16:31]  Verifer returned unsat in 122.812479 secs.
[01/31 16:16:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 16:16:31]  --------------------------------------------------------------------------------
[01/31 16:16:31]  Iteration: 75 (46 solution, 28 counterexamples)
[01/31 16:16:51]  Generator returned sat in 16.566236 secs.
[01/31 16:16:51]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 16:17:23]  Verifer returned unsat in 31.990435 secs.
[01/31 16:17:47]  Verifer returned unsat in 23.847128 secs.
[01/31 16:17:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 16:17:47]  --------------------------------------------------------------------------------
[01/31 16:17:47]  Iteration: 76 (47 solution, 28 counterexamples)
[01/31 16:18:06]  Generator returned sat in 16.579875 secs.
[01/31 16:18:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 16:18:21]  Verifer returned unsat in 14.628264 secs.
[01/31 16:18:49]  Verifer returned unsat in 27.250972 secs.
[01/31 16:18:49]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 16:18:49]  --------------------------------------------------------------------------------
[01/31 16:18:49]  Iteration: 77 (48 solution, 28 counterexamples)
[01/31 16:19:08]  Generator returned sat in 16.478898 secs.
[01/31 16:19:08]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 16:19:15]  Verifer returned unsat in 6.961325 secs.
[01/31 16:19:34]  Verifer returned unsat in 18.643110 secs.
[01/31 16:19:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 16:19:34]  --------------------------------------------------------------------------------
[01/31 16:19:34]  Iteration: 78 (49 solution, 28 counterexamples)
[01/31 16:20:03]  Generator returned sat in 24.184826 secs.
[01/31 16:20:03]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 16:20:33]  Verifer returned unsat in 29.925317 secs.
[01/31 16:22:53]  Verifer returned unsat in 139.011810 secs.
[01/31 16:22:53]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 16:22:53]  --------------------------------------------------------------------------------
[01/31 16:22:53]  Iteration: 79 (50 solution, 28 counterexamples)
[01/31 16:23:21]  Generator returned sat in 24.065379 secs.
[01/31 16:23:22]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 16:23:48]  Verifer returned unsat in 26.285020 secs.
[01/31 16:24:43]  Verifer returned unsat in 54.515046 secs.
[01/31 16:24:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 16:24:43]  --------------------------------------------------------------------------------
[01/31 16:24:43]  Iteration: 80 (51 solution, 28 counterexamples)
[01/31 16:25:11]  Generator returned sat in 24.073895 secs.
[01/31 16:25:12]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 16:25:55]  Verifer returned unsat in 42.739561 secs.
[01/31 16:27:09]  Verifer returned unsat in 73.845440 secs.
[01/31 16:27:09]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 16:27:09]  --------------------------------------------------------------------------------
[01/31 16:27:09]  Iteration: 81 (52 solution, 28 counterexamples)
[01/31 16:27:37]  Generator returned sat in 24.041246 secs.
[01/31 16:27:38]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 16:27:57]  Verifer returned unsat in 18.906026 secs.
[01/31 16:34:37]  Verifer returned unsat in 400.126841 secs.
[01/31 16:34:37]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 16:34:37]  --------------------------------------------------------------------------------
[01/31 16:34:37]  Iteration: 82 (53 solution, 28 counterexamples)
[01/31 16:35:06]  Generator returned sat in 24.041682 secs.
[01/31 16:35:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 16:35:36]  Verifer returned unsat in 30.230330 secs.
[01/31 16:36:54]  Verifer returned unsat in 77.753888 secs.
[01/31 16:36:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 16:36:54]  --------------------------------------------------------------------------------
[01/31 16:36:54]  Iteration: 83 (54 solution, 28 counterexamples)
[01/31 16:37:23]  Generator returned sat in 24.058806 secs.
[01/31 16:37:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 16:37:45]  Verifer returned unsat in 21.848708 secs.
[01/31 16:39:06]  Verifer returned unsat in 80.443102 secs.
[01/31 16:39:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 16:39:06]  --------------------------------------------------------------------------------
[01/31 16:39:06]  Iteration: 84 (55 solution, 28 counterexamples)
[01/31 16:39:34]  Generator returned sat in 23.895005 secs.
[01/31 16:39:35]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 16:40:36]  Verifer returned unsat in 61.260136 secs.
[01/31 16:41:22]  Verifer returned unsat in 45.984582 secs.
[01/31 16:41:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 16:41:22]  --------------------------------------------------------------------------------
[01/31 16:41:22]  Iteration: 85 (56 solution, 28 counterexamples)
[01/31 16:41:51]  Generator returned sat in 24.114347 secs.
[01/31 16:41:51]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 16:43:18]  Verifer returned unsat in 86.761333 secs.
[01/31 16:44:27]  Verifer returned unsat in 68.094292 secs.
[01/31 16:44:27]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 16:44:27]  --------------------------------------------------------------------------------
[01/31 16:44:27]  Iteration: 86 (57 solution, 28 counterexamples)
[01/31 16:44:55]  Generator returned sat in 24.123065 secs.
[01/31 16:44:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 16:45:08]  Verifer returned unsat in 12.352992 secs.
[01/31 16:45:55]  Verifer returned unsat in 46.619632 secs.
[01/31 16:45:55]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 16:45:55]  --------------------------------------------------------------------------------
[01/31 16:45:55]  Iteration: 87 (58 solution, 28 counterexamples)
[01/31 16:46:24]  Generator returned sat in 24.046654 secs.
[01/31 16:46:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 16:46:53]  Verifer returned unsat in 28.708042 secs.
[01/31 16:50:32]  Verifer returned unsat in 219.415346 secs.
[01/31 16:50:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 16:50:33]  --------------------------------------------------------------------------------
[01/31 16:50:33]  Iteration: 88 (59 solution, 28 counterexamples)
[01/31 16:50:51]  Generator returned sat in 15.950308 secs.
[01/31 16:50:51]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 16:51:10]  Verifer returned unsat in 18.362522 secs.
[01/31 16:51:54]  Verifer returned unsat in 43.484515 secs.
[01/31 16:51:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 16:51:54]  --------------------------------------------------------------------------------
[01/31 16:51:54]  Iteration: 89 (60 solution, 28 counterexamples)
[01/31 16:52:13]  Generator returned sat in 16.216339 secs.
[01/31 16:52:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 16:52:32]  Verifer returned unsat in 18.569156 secs.
[01/31 17:06:17]  Verifer returned unsat in 825.320395 secs.
[01/31 17:06:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 17:06:17]  --------------------------------------------------------------------------------
[01/31 17:06:17]  Iteration: 90 (61 solution, 28 counterexamples)
[01/31 17:06:36]  Generator returned sat in 16.060622 secs.
[01/31 17:06:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 17:06:49]  Verifer returned unsat in 12.426137 secs.
[01/31 17:07:10]  Verifer returned unsat in 21.083207 secs.
[01/31 17:07:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 17:07:10]  --------------------------------------------------------------------------------
[01/31 17:07:10]  Iteration: 91 (62 solution, 28 counterexamples)
[01/31 17:07:29]  Generator returned sat in 16.041323 secs.
[01/31 17:07:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 17:07:42]  Verifer returned unsat in 12.857688 secs.
[01/31 17:08:13]  Verifer returned unsat in 30.626437 secs.
[01/31 17:08:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 17:08:13]  --------------------------------------------------------------------------------
[01/31 17:08:13]  Iteration: 92 (63 solution, 28 counterexamples)
[01/31 17:08:32]  Generator returned sat in 16.017393 secs.
[01/31 17:08:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 17:08:56]  Verifer returned unsat in 24.328557 secs.
[01/31 17:10:03]  Verifer returned unsat in 66.557172 secs.
[01/31 17:10:03]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 17:10:03]  --------------------------------------------------------------------------------
[01/31 17:10:03]  Iteration: 93 (64 solution, 28 counterexamples)
[01/31 17:10:22]  Generator returned sat in 16.169859 secs.
[01/31 17:10:22]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 17:10:36]  Verifer returned unsat in 13.687106 secs.
[01/31 17:18:54]  Verifer returned unsat in 497.322933 secs.
[01/31 17:18:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 17:18:54]  --------------------------------------------------------------------------------
[01/31 17:18:54]  Iteration: 94 (65 solution, 28 counterexamples)
[01/31 17:19:13]  Generator returned sat in 16.126313 secs.
[01/31 17:19:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 17:19:23]  Verifer returned unsat in 10.268613 secs.
[01/31 17:19:39]  Verifer returned unsat in 15.611626 secs.
[01/31 17:19:39]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 17:19:39]  --------------------------------------------------------------------------------
[01/31 17:19:39]  Iteration: 95 (66 solution, 28 counterexamples)
[01/31 17:19:58]  Generator returned sat in 15.987881 secs.
[01/31 17:19:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 17:20:21]  Verifer returned unsat in 22.553527 secs.
[01/31 17:20:38]  Verifer returned unsat in 16.735901 secs.
[01/31 17:20:38]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 17:20:38]  --------------------------------------------------------------------------------
[01/31 17:20:38]  Iteration: 96 (67 solution, 28 counterexamples)
[01/31 17:20:57]  Generator returned sat in 16.120764 secs.
[01/31 17:20:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 17:21:19]  Verifer returned unsat in 21.860735 secs.
[01/31 17:21:58]  Verifer returned unsat in 38.617175 secs.
[01/31 17:21:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 17:21:58]  --------------------------------------------------------------------------------
[01/31 17:21:58]  Iteration: 97 (68 solution, 28 counterexamples)
[01/31 17:22:17]  Generator returned sat in 16.039441 secs.
[01/31 17:22:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 17:22:31]  Verifer returned unsat in 14.146339 secs.
[01/31 17:23:13]  Verifer returned unsat in 41.330406 secs.
[01/31 17:23:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 17:23:13]  --------------------------------------------------------------------------------
[01/31 17:23:13]  Iteration: 98 (69 solution, 28 counterexamples)
[01/31 17:23:32]  Generator returned sat in 16.130410 secs.
[01/31 17:23:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 17:23:58]  Verifer returned unsat in 25.876685 secs.
[01/31 17:24:22]  Verifer returned unsat in 24.365305 secs.
[01/31 17:24:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 17:24:23]  --------------------------------------------------------------------------------
[01/31 17:24:23]  Iteration: 99 (70 solution, 28 counterexamples)
[01/31 17:24:46]  Generator returned sat in 21.184104 secs.
[01/31 17:24:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 17:25:31]  Verifer returned unsat in 43.604537 secs.
[01/31 17:31:08]  Verifer returned unsat in 337.049170 secs.
[01/31 17:31:08]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[01/31 17:31:08]  --------------------------------------------------------------------------------
[01/31 17:31:08]  Iteration: 100 (71 solution, 28 counterexamples)
[01/31 17:31:37]  Generator returned sat in 24.592517 secs.
[01/31 17:31:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 17:32:00]  Verifer returned unsat in 22.532943 secs.
[01/31 17:33:13]  Verifer returned unsat in 72.404592 secs.
[01/31 17:33:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 17:33:13]  --------------------------------------------------------------------------------
[01/31 17:33:13]  Iteration: 101 (72 solution, 28 counterexamples)
[01/31 17:33:43]  Generator returned sat in 25.440566 secs.
[01/31 17:33:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 17:34:28]  Verifer returned unsat in 44.181865 secs.
[01/31 17:40:07]  Verifer returned unsat in 339.178262 secs.
[01/31 17:40:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)[0m
[01/31 17:40:07]  --------------------------------------------------------------------------------
[01/31 17:40:07]  Iteration: 102 (73 solution, 28 counterexamples)
[01/31 17:40:37]  Generator returned sat in 24.849586 secs.
[01/31 17:40:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 17:40:51]  Verifer returned unsat in 13.563771 secs.
[01/31 17:41:50]  Verifer returned unsat in 59.004318 secs.
[01/31 17:41:50]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 17:41:50]  --------------------------------------------------------------------------------
[01/31 17:41:50]  Iteration: 103 (74 solution, 28 counterexamples)
[01/31 17:42:19]  Generator returned sat in 24.508212 secs.
[01/31 17:42:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 17:42:36]  Verifer returned unsat in 16.563841 secs.
[01/31 17:47:46]  Verifer returned unsat in 309.504329 secs.
[01/31 17:47:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)[0m
[01/31 17:47:46]  --------------------------------------------------------------------------------
[01/31 17:47:46]  Iteration: 104 (75 solution, 28 counterexamples)
[01/31 17:48:05]  Generator returned sat in 16.728762 secs.
[01/31 17:48:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 17:48:30]  Verifer returned unsat in 23.999675 secs.
[01/31 17:48:47]  Verifer returned unsat in 16.902281 secs.
[01/31 17:48:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 17:48:47]  --------------------------------------------------------------------------------
[01/31 17:48:47]  Iteration: 105 (76 solution, 28 counterexamples)
[01/31 17:49:06]  Generator returned sat in 16.523684 secs.
[01/31 17:49:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 17:49:23]  Verifer returned unsat in 16.093467 secs.
[01/31 17:56:22]  Verifer returned unsat in 419.417278 secs.
[01/31 17:56:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[01/31 17:56:22]  --------------------------------------------------------------------------------
[01/31 17:56:22]  Iteration: 106 (77 solution, 28 counterexamples)
[01/31 17:56:41]  Generator returned sat in 16.197810 secs.
[01/31 17:56:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 17:56:48]  Verifer returned unsat in 6.179002 secs.
[01/31 17:57:28]  Verifer returned unsat in 39.950068 secs.
[01/31 17:57:28]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 17:57:28]  --------------------------------------------------------------------------------
[01/31 17:57:28]  Iteration: 107 (78 solution, 28 counterexamples)
[01/31 17:57:47]  Generator returned sat in 16.696844 secs.
[01/31 17:57:48]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 17:57:57]  Verifer returned unsat in 9.302672 secs.
[01/31 17:58:21]  Verifer returned unsat in 23.689513 secs.
[01/31 17:58:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[01/31 17:58:21]  --------------------------------------------------------------------------------
[01/31 17:58:21]  Iteration: 108 (79 solution, 28 counterexamples)
[01/31 17:58:40]  Generator returned sat in 16.183655 secs.
[01/31 17:58:40]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 17:58:58]  Verifer returned unsat in 17.275975 secs.
[01/31 17:59:26]  Verifer returned unsat in 27.939185 secs.
[01/31 17:59:26]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 17:59:26]  --------------------------------------------------------------------------------
[01/31 17:59:26]  Iteration: 109 (80 solution, 28 counterexamples)
[01/31 17:59:45]  Generator returned sat in 16.155628 secs.
[01/31 17:59:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 17:59:56]  Verifer returned unsat in 10.794530 secs.
[01/31 18:44:48]  Verifer returned unsat in 2691.759045 secs.
[01/31 18:44:48]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 18:44:48]  --------------------------------------------------------------------------------
[01/31 18:44:48]  Iteration: 110 (81 solution, 28 counterexamples)
[01/31 18:45:07]  Generator returned sat in 16.175200 secs.
[01/31 18:45:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 18:45:27]  Verifer returned unsat in 19.499618 secs.
[01/31 18:46:05]  Verifer returned unsat in 37.740198 secs.
[01/31 18:46:05]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 18:46:05]  --------------------------------------------------------------------------------
[01/31 18:46:05]  Iteration: 111 (82 solution, 28 counterexamples)
[01/31 18:46:24]  Generator returned sat in 16.154502 secs.
[01/31 18:46:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 18:46:42]  Verifer returned unsat in 17.605633 secs.
[01/31 18:55:39]  Verifer returned unsat in 536.679097 secs.
[01/31 18:55:39]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 18:55:39]  --------------------------------------------------------------------------------
[01/31 18:55:39]  Iteration: 112 (83 solution, 28 counterexamples)
[01/31 18:55:58]  Generator returned sat in 16.166042 secs.
[01/31 18:55:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 18:56:05]  Verifer returned unsat in 6.546704 secs.
[01/31 19:01:43]  Verifer returned unsat in 337.399040 secs.
[01/31 19:01:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[01/31 19:01:43]  --------------------------------------------------------------------------------
[01/31 19:01:43]  Iteration: 113 (84 solution, 28 counterexamples)
[01/31 19:02:01]  Generator returned sat in 16.059117 secs.
[01/31 19:02:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 19:02:07]  Verifer returned unsat in 5.611778 secs.
[01/31 19:02:49]  Verifer returned unsat in 40.961184 secs.
[01/31 19:02:49]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[01/31 19:02:49]  --------------------------------------------------------------------------------
[01/31 19:02:49]  Iteration: 114 (85 solution, 28 counterexamples)
[01/31 19:03:08]  Generator returned sat in 16.108913 secs.
[01/31 19:03:08]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 19:03:27]  Verifer returned unsat in 18.966817 secs.
[01/31 19:03:46]  Verifer returned unsat in 18.356057 secs.
[01/31 19:03:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[01/31 19:03:46]  --------------------------------------------------------------------------------
[01/31 19:03:46]  Iteration: 115 (86 solution, 28 counterexamples)
[01/31 19:04:05]  Generator returned sat in 16.020239 secs.
[01/31 19:04:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 19:04:30]  Verifer returned unsat in 24.549022 secs.
[01/31 19:09:02]  Verifer returned unsat in 271.852057 secs.
[01/31 19:09:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[01/31 19:09:02]  --------------------------------------------------------------------------------
[01/31 19:09:02]  Iteration: 116 (87 solution, 28 counterexamples)
[01/31 19:09:21]  Generator returned sat in 16.088847 secs.
[01/31 19:09:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 19:09:29]  Verifer returned unsat in 7.746270 secs.
[01/31 19:13:01]  Verifer returned unsat in 212.235403 secs.
[01/31 19:13:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)[0m
[01/31 19:13:02]  --------------------------------------------------------------------------------
[01/31 19:13:02]  Iteration: 117 (88 solution, 28 counterexamples)
[01/31 19:13:21]  Generator returned sat in 15.971241 secs.
[01/31 19:13:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 19:13:44]  Verifer returned unsat in 23.397857 secs.
[01/31 19:15:33]  Verifer returned unsat in 108.424303 secs.
[01/31 19:15:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[01/31 19:15:33]  --------------------------------------------------------------------------------
[01/31 19:15:33]  Iteration: 118 (89 solution, 28 counterexamples)
[01/31 19:15:52]  Generator returned sat in 16.034074 secs.
[01/31 19:15:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 19:16:18]  Verifer returned unsat in 26.050496 secs.
[01/31 19:16:44]  Verifer returned unsat in 25.217390 secs.
[01/31 19:16:44]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)[0m
[01/31 19:16:44]  --------------------------------------------------------------------------------
[01/31 19:16:44]  Iteration: 119 (90 solution, 28 counterexamples)
[01/31 19:17:03]  Generator returned sat in 15.979926 secs.
[01/31 19:17:03]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 19:17:10]  Verifer returned unsat in 6.808077 secs.
[01/31 19:17:47]  Verifer returned unsat in 36.635948 secs.
[01/31 19:17:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[01/31 19:17:47]  --------------------------------------------------------------------------------
[01/31 19:17:47]  Iteration: 120 (91 solution, 28 counterexamples)
[01/31 19:18:06]  Generator returned sat in 16.020967 secs.
[01/31 19:18:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 19:18:17]  Verifer returned unsat in 10.457576 secs.
[01/31 19:38:21]  Verifer returned unsat in 1203.564616 secs.
[01/31 19:38:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[01/31 19:38:21]  --------------------------------------------------------------------------------
[01/31 19:38:21]  Iteration: 121 (92 solution, 28 counterexamples)
[01/31 19:38:40]  Generator returned sat in 15.984233 secs.
[01/31 19:38:40]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 19:38:49]  Verifer returned unsat in 8.658006 secs.
[01/31 19:43:04]  Verifer returned unsat in 254.597842 secs.
[01/31 19:43:04]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[01/31 19:43:04]  --------------------------------------------------------------------------------
[01/31 19:43:04]  Iteration: 122 (93 solution, 28 counterexamples)
[01/31 19:43:23]  Generator returned sat in 16.158563 secs.
[01/31 19:43:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 19:43:33]  Verifer returned unsat in 10.010128 secs.
[01/31 19:44:29]  Verifer returned unsat in 55.072566 secs.
[01/31 19:44:29]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 19:44:29]  --------------------------------------------------------------------------------
[01/31 19:44:29]  Iteration: 123 (94 solution, 28 counterexamples)
[01/31 19:44:47]  Generator returned sat in 15.854824 secs.
[01/31 19:44:48]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 19:45:05]  Verifer returned unsat in 17.386997 secs.
[01/31 19:48:35]  Verifer returned unsat in 209.879253 secs.
[01/31 19:48:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 19:48:35]  --------------------------------------------------------------------------------
[01/31 19:48:35]  Iteration: 124 (95 solution, 28 counterexamples)
[01/31 19:48:54]  Generator returned sat in 16.098839 secs.
[01/31 19:48:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 19:49:08]  Verifer returned unsat in 13.458013 secs.
[01/31 19:49:36]  Verifer returned unsat in 28.111052 secs.
[01/31 19:49:36]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 19:49:36]  --------------------------------------------------------------------------------
[01/31 19:49:36]  Iteration: 125 (96 solution, 28 counterexamples)
[01/31 19:49:55]  Generator returned sat in 16.048215 secs.
[01/31 19:49:55]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 19:50:13]  Verifer returned unsat in 17.412699 secs.
[01/31 19:53:02]  Verifer returned unsat in 168.986943 secs.
[01/31 19:53:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 19:53:02]  --------------------------------------------------------------------------------
[01/31 19:53:02]  Iteration: 126 (97 solution, 28 counterexamples)
[01/31 19:53:31]  Generator returned sat in 24.036291 secs.
[01/31 19:53:31]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 19:54:25]  Verifer returned unsat in 53.210573 secs.
[01/31 19:55:51]  Verifer returned unsat in 86.268172 secs.
[01/31 19:55:51]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 19:55:51]  --------------------------------------------------------------------------------
[01/31 19:55:51]  Iteration: 127 (98 solution, 28 counterexamples)
[01/31 19:56:20]  Generator returned sat in 23.974385 secs.
[01/31 19:56:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 19:57:02]  Verifer returned unsat in 41.551315 secs.
[01/31 19:57:48]  Verifer returned unsat in 46.361689 secs.
[01/31 19:57:48]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 19:57:48]  --------------------------------------------------------------------------------
[01/31 19:57:48]  Iteration: 128 (99 solution, 28 counterexamples)
[01/31 19:58:17]  Generator returned sat in 23.947710 secs.
[01/31 19:58:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 19:59:03]  Verifer returned unsat in 45.298207 secs.
[01/31 19:59:35]  Verifer returned unsat in 32.345203 secs.
[01/31 19:59:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 19:59:35]  --------------------------------------------------------------------------------
[01/31 19:59:35]  Iteration: 129 (100 solution, 28 counterexamples)
[01/31 20:00:04]  Generator returned sat in 23.756197 secs.
[01/31 20:00:04]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 20:01:18]  Verifer returned unsat in 73.544658 secs.
[01/31 20:02:08]  Verifer returned unsat in 49.542231 secs.
[01/31 20:02:08]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 20:02:08]  --------------------------------------------------------------------------------
[01/31 20:02:08]  Iteration: 130 (101 solution, 28 counterexamples)
[01/31 20:02:36]  Generator returned sat in 24.224691 secs.
[01/31 20:02:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 20:03:10]  Verifer returned unsat in 33.307787 secs.
[01/31 20:03:47]  Verifer returned unsat in 36.174074 secs.
[01/31 20:03:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 20:03:47]  --------------------------------------------------------------------------------
[01/31 20:03:47]  Iteration: 131 (102 solution, 28 counterexamples)
[01/31 20:04:15]  Generator returned sat in 24.015550 secs.
[01/31 20:04:16]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 20:04:30]  Verifer returned unsat in 13.556666 secs.
[01/31 20:25:57]  Verifer returned unsat in 1286.996036 secs.
[01/31 20:25:57]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 20:25:57]  --------------------------------------------------------------------------------
[01/31 20:25:57]  Iteration: 132 (103 solution, 28 counterexamples)
[01/31 20:26:26]  Generator returned sat in 24.272865 secs.
[01/31 20:26:26]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 20:26:47]  Verifer returned unsat in 20.822965 secs.
[01/31 20:27:41]  Verifer returned unsat in 53.133134 secs.
[01/31 20:27:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 20:27:41]  --------------------------------------------------------------------------------
[01/31 20:27:41]  Iteration: 133 (104 solution, 28 counterexamples)
[01/31 20:28:09]  Generator returned sat in 23.836061 secs.
[01/31 20:28:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 20:28:38]  Verifer returned unsat in 28.392840 secs.
[01/31 20:35:23]  Verifer returned unsat in 405.054138 secs.
[01/31 20:35:23]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 20:35:23]  --------------------------------------------------------------------------------
[01/31 20:35:23]  Iteration: 134 (105 solution, 28 counterexamples)
[01/31 20:35:51]  Generator returned sat in 23.770432 secs.
[01/31 20:35:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 20:36:19]  Verifer returned unsat in 27.438154 secs.
[01/31 20:37:44]  Verifer returned unsat in 84.769061 secs.
[01/31 20:37:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 20:37:45]  --------------------------------------------------------------------------------
[01/31 20:37:45]  Iteration: 135 (106 solution, 28 counterexamples)
[01/31 20:38:13]  Generator returned sat in 24.061282 secs.
[01/31 20:38:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 20:38:30]  Verifer returned unsat in 16.504029 secs.
[01/31 20:41:36]  Verifer returned unsat in 185.766301 secs.
[01/31 20:41:36]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 20:41:36]  --------------------------------------------------------------------------------
[01/31 20:41:36]  Iteration: 136 (107 solution, 28 counterexamples)
[01/31 20:42:04]  Generator returned sat in 23.796958 secs.
[01/31 20:42:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 20:42:18]  Verifer returned unsat in 12.602759 secs.
[01/31 20:42:58]  Verifer returned unsat in 39.832304 secs.
[01/31 20:42:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 20:42:58]  --------------------------------------------------------------------------------
[01/31 20:42:58]  Iteration: 137 (108 solution, 28 counterexamples)
[01/31 20:43:26]  Generator returned sat in 23.913354 secs.
[01/31 20:43:26]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 20:44:20]  Verifer returned unsat in 52.880050 secs.
[01/31 20:46:21]  Verifer returned unsat in 121.014570 secs.
[01/31 20:46:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 20:46:21]  --------------------------------------------------------------------------------
[01/31 20:46:21]  Iteration: 138 (109 solution, 28 counterexamples)
[01/31 20:46:49]  Generator returned sat in 23.910842 secs.
[01/31 20:46:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 20:47:10]  Verifer returned unsat in 20.627798 secs.
[01/31 20:47:41]  Verifer returned unsat in 30.023110 secs.
[01/31 20:47:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 20:47:41]  --------------------------------------------------------------------------------
[01/31 20:47:41]  Iteration: 139 (110 solution, 28 counterexamples)
[01/31 20:48:10]  Generator returned sat in 24.235839 secs.
[01/31 20:48:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 20:48:24]  Verifer returned unsat in 14.020436 secs.
[01/31 20:55:12]  Verifer returned unsat in 407.528250 secs.
[01/31 20:55:12]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 20:55:12]  --------------------------------------------------------------------------------
[01/31 20:55:12]  Iteration: 140 (111 solution, 28 counterexamples)
[01/31 20:55:40]  Generator returned sat in 23.703686 secs.
[01/31 20:55:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 20:55:52]  Verifer returned unsat in 11.683629 secs.
[01/31 20:56:16]  Verifer returned unsat in 23.403421 secs.
[01/31 20:56:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 20:56:16]  --------------------------------------------------------------------------------
[01/31 20:56:16]  Iteration: 141 (112 solution, 28 counterexamples)
[01/31 20:56:45]  Generator returned sat in 24.119755 secs.
[01/31 20:56:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 20:57:05]  Verifer returned unsat in 19.817119 secs.
[01/31 21:04:01]  Verifer returned unsat in 415.263063 secs.
[01/31 21:04:01]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 21:04:01]  --------------------------------------------------------------------------------
[01/31 21:04:01]  Iteration: 142 (113 solution, 28 counterexamples)
[01/31 21:04:29]  Generator returned sat in 23.869493 secs.
[01/31 21:04:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 21:04:42]  Verifer returned unsat in 12.367166 secs.
[01/31 21:05:09]  Verifer returned unsat in 26.387216 secs.
[01/31 21:05:09]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 21:05:09]  --------------------------------------------------------------------------------
[01/31 21:05:09]  Iteration: 143 (114 solution, 28 counterexamples)
[01/31 21:05:37]  Generator returned sat in 23.841517 secs.
[01/31 21:05:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 21:06:07]  Verifer returned unsat in 28.974876 secs.
[01/31 21:21:03]  Verifer returned unsat in 896.201143 secs.
[01/31 21:21:03]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 21:21:03]  --------------------------------------------------------------------------------
[01/31 21:21:03]  Iteration: 144 (115 solution, 28 counterexamples)
[01/31 21:21:31]  Generator returned sat in 23.822997 secs.
[01/31 21:21:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 21:22:12]  Verifer returned unsat in 40.016404 secs.
[01/31 21:27:09]  Verifer returned unsat in 296.577045 secs.
[01/31 21:27:09]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 21:27:09]  --------------------------------------------------------------------------------
[01/31 21:27:09]  Iteration: 145 (116 solution, 28 counterexamples)
[01/31 21:27:37]  Generator returned sat in 23.782593 secs.
[01/31 21:27:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 21:28:02]  Verifer returned unsat in 24.271224 secs.
[01/31 21:28:38]  Verifer returned unsat in 35.422102 secs.
[01/31 21:28:38]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 21:28:38]  --------------------------------------------------------------------------------
[01/31 21:28:38]  Iteration: 146 (117 solution, 28 counterexamples)
[01/31 21:29:06]  Generator returned sat in 23.968557 secs.
[01/31 21:29:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 21:29:16]  Verifer returned unsat in 9.742131 secs.
[01/31 21:29:59]  Verifer returned unsat in 42.177313 secs.
[01/31 21:29:59]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 21:29:59]  --------------------------------------------------------------------------------
[01/31 21:29:59]  Iteration: 147 (118 solution, 28 counterexamples)
[01/31 21:30:27]  Generator returned sat in 23.863568 secs.
[01/31 21:30:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 21:30:57]  Verifer returned unsat in 29.415158 secs.
[01/31 21:32:07]  Verifer returned unsat in 69.664800 secs.
[01/31 21:32:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 21:32:07]  --------------------------------------------------------------------------------
[01/31 21:32:07]  Iteration: 148 (119 solution, 28 counterexamples)
[01/31 21:32:35]  Generator returned sat in 23.813835 secs.
[01/31 21:32:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 21:32:54]  Verifer returned unsat in 18.444834 secs.
[01/31 21:33:35]  Verifer returned unsat in 40.032268 secs.
[01/31 21:33:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 21:33:35]  --------------------------------------------------------------------------------
[01/31 21:33:35]  Iteration: 149 (120 solution, 28 counterexamples)
[01/31 21:34:03]  Generator returned sat in 23.963629 secs.
[01/31 21:34:04]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 21:34:24]  Verifer returned unsat in 20.515791 secs.
[01/31 21:37:39]  Verifer returned unsat in 194.884423 secs.
[01/31 21:37:40]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 21:37:40]  --------------------------------------------------------------------------------
[01/31 21:37:40]  Iteration: 150 (121 solution, 28 counterexamples)
[01/31 21:38:07]  Generator returned sat in 23.196908 secs.
[01/31 21:38:08]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 21:38:24]  Verifer returned unsat in 15.971306 secs.
[01/31 21:40:33]  Verifer returned unsat in 129.417027 secs.
[01/31 21:40:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 21:40:34]  --------------------------------------------------------------------------------
[01/31 21:40:34]  Iteration: 151 (122 solution, 28 counterexamples)
[01/31 21:41:02]  Generator returned sat in 23.830674 secs.
[01/31 21:41:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 21:41:27]  Verifer returned unsat in 24.694914 secs.
[01/31 21:42:18]  Verifer returned unsat in 50.462142 secs.
[01/31 21:42:18]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 21:42:18]  --------------------------------------------------------------------------------
[01/31 21:42:18]  Iteration: 152 (123 solution, 28 counterexamples)
[01/31 21:42:46]  Generator returned sat in 23.859702 secs.
[01/31 21:42:46]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 21:42:58]  Verifer returned unsat in 11.098847 secs.
[01/31 21:53:29]  Verifer returned unsat in 630.863714 secs.
[01/31 21:53:29]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 21:53:29]  --------------------------------------------------------------------------------
[01/31 21:53:29]  Iteration: 153 (124 solution, 28 counterexamples)
[01/31 21:53:57]  Generator returned sat in 23.837626 secs.
[01/31 21:53:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 21:54:13]  Verifer returned unsat in 15.074661 secs.
[01/31 21:55:07]  Verifer returned unsat in 53.711729 secs.
[01/31 21:55:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[01/31 21:55:07]  --------------------------------------------------------------------------------
[01/31 21:55:07]  Iteration: 154 (125 solution, 28 counterexamples)
[01/31 21:55:36]  Generator returned sat in 24.144310 secs.
[01/31 21:55:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 21:56:09]  Verifer returned unsat in 33.296134 secs.
[01/31 22:05:33]  Verifer returned unsat in 562.851169 secs.
[01/31 22:05:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 22:05:33]  --------------------------------------------------------------------------------
[01/31 22:05:33]  Iteration: 155 (126 solution, 28 counterexamples)
[01/31 22:06:01]  Generator returned sat in 23.887677 secs.
[01/31 22:06:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 22:06:27]  Verifer returned unsat in 25.756621 secs.
[01/31 22:07:18]  Verifer returned unsat in 50.583599 secs.
[01/31 22:07:18]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[01/31 22:07:18]  --------------------------------------------------------------------------------
[01/31 22:07:18]  Iteration: 156 (127 solution, 28 counterexamples)
[01/31 22:07:47]  Generator returned sat in 24.079558 secs.
[01/31 22:07:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 22:08:02]  Verifer returned unsat in 14.942035 secs.
[01/31 22:11:44]  Verifer returned unsat in 221.490663 secs.
[01/31 22:11:44]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 22:11:44]  --------------------------------------------------------------------------------
[01/31 22:11:44]  Iteration: 157 (128 solution, 28 counterexamples)
[01/31 22:12:12]  Generator returned sat in 23.759471 secs.
[01/31 22:12:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 22:12:55]  Verifer returned unsat in 41.990640 secs.
[01/31 22:14:18]  Verifer returned unsat in 83.128432 secs.
[01/31 22:14:19]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[01/31 22:14:19]  --------------------------------------------------------------------------------
[01/31 22:14:19]  Iteration: 158 (129 solution, 28 counterexamples)
[01/31 22:14:47]  Generator returned sat in 23.948966 secs.
[01/31 22:14:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 22:15:28]  Verifer returned unsat in 40.416221 secs.
[01/31 22:26:56]  Verifer returned unsat in 687.821297 secs.
[01/31 22:26:56]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 22:26:56]  --------------------------------------------------------------------------------
[01/31 22:26:56]  Iteration: 159 (130 solution, 28 counterexamples)
[01/31 22:27:25]  Generator returned sat in 23.863017 secs.
[01/31 22:27:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 22:27:39]  Verifer returned unsat in 14.142297 secs.
[01/31 22:28:58]  Verifer returned unsat in 78.064860 secs.
[01/31 22:28:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[01/31 22:28:58]  --------------------------------------------------------------------------------
[01/31 22:28:58]  Iteration: 160 (131 solution, 28 counterexamples)
[01/31 22:29:26]  Generator returned sat in 24.017916 secs.
[01/31 22:29:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 22:29:41]  Verifer returned unsat in 14.112444 secs.
[01/31 23:06:58]  Verifer returned unsat in 2236.387468 secs.
[01/31 23:06:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 23:06:58]  --------------------------------------------------------------------------------
[01/31 23:06:58]  Iteration: 161 (132 solution, 28 counterexamples)
[01/31 23:07:26]  Generator returned sat in 23.818441 secs.
[01/31 23:07:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 23:07:39]  Verifer returned unsat in 12.549974 secs.
[01/31 23:08:33]  Verifer returned unsat in 53.198808 secs.
[01/31 23:08:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[01/31 23:08:33]  --------------------------------------------------------------------------------
[01/31 23:08:33]  Iteration: 162 (133 solution, 28 counterexamples)
[01/31 23:09:01]  Generator returned sat in 23.973794 secs.
[01/31 23:09:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 23:09:22]  Verifer returned unsat in 19.891263 secs.
[01/31 23:10:44]  Verifer returned unsat in 81.746568 secs.
[01/31 23:10:44]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 23:10:44]  --------------------------------------------------------------------------------
[01/31 23:10:44]  Iteration: 163 (134 solution, 28 counterexamples)
[01/31 23:11:13]  Generator returned sat in 24.230589 secs.
[01/31 23:11:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 23:11:26]  Verifer returned unsat in 12.321784 secs.
[01/31 23:15:36]  Verifer returned unsat in 250.282891 secs.
[01/31 23:15:36]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[01/31 23:15:36]  --------------------------------------------------------------------------------
[01/31 23:15:36]  Iteration: 164 (135 solution, 28 counterexamples)
[01/31 23:16:05]  Generator returned sat in 24.455357 secs.
[01/31 23:16:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 23:16:24]  Verifer returned unsat in 17.665835 secs.
[01/31 23:17:13]  Verifer returned unsat in 48.638200 secs.
[01/31 23:17:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 23:17:13]  --------------------------------------------------------------------------------
[01/31 23:17:13]  Iteration: 165 (136 solution, 28 counterexamples)
[01/31 23:17:42]  Generator returned sat in 24.589698 secs.
[01/31 23:17:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 23:17:56]  Verifer returned unsat in 13.529071 secs.
[01/31 23:38:07]  Verifer returned unsat in 1210.657725 secs.
[01/31 23:38:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 23:38:07]  --------------------------------------------------------------------------------
[01/31 23:38:07]  Iteration: 166 (137 solution, 28 counterexamples)
[01/31 23:38:35]  Generator returned sat in 23.677742 secs.
[01/31 23:38:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 23:38:57]  Verifer returned unsat in 21.401802 secs.
[01/31 23:39:26]  Verifer returned unsat in 28.128592 secs.
[01/31 23:39:26]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 23:39:26]  --------------------------------------------------------------------------------
[01/31 23:39:26]  Iteration: 167 (138 solution, 28 counterexamples)
[01/31 23:39:45]  Generator returned sat in 16.142216 secs.
[01/31 23:39:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 23:40:11]  Verifer returned unsat in 25.666892 secs.
[01/31 23:50:43]  Verifer returned unsat in 631.927038 secs.
[01/31 23:50:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[01/31 23:50:43]  --------------------------------------------------------------------------------
[01/31 23:50:43]  Iteration: 168 (139 solution, 28 counterexamples)
[01/31 23:51:02]  Generator returned sat in 16.092961 secs.
[01/31 23:51:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 23:51:23]  Verifer returned unsat in 20.465855 secs.
[01/31 23:56:22]  Verifer returned unsat in 299.210308 secs.
[01/31 23:56:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[01/31 23:56:22]  --------------------------------------------------------------------------------
[01/31 23:56:22]  Iteration: 169 (140 solution, 28 counterexamples)
[01/31 23:56:41]  Generator returned sat in 15.928855 secs.
[01/31 23:56:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 23:57:03]  Verifer returned unsat in 21.870320 secs.
[01/31 23:58:21]  Verifer returned unsat in 78.108561 secs.
[01/31 23:58:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[01/31 23:58:22]  --------------------------------------------------------------------------------
[01/31 23:58:22]  Iteration: 170 (141 solution, 28 counterexamples)
[01/31 23:58:40]  Generator returned sat in 15.973351 secs.
[01/31 23:58:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[01/31 23:59:05]  Verifer returned unsat in 24.148998 secs.
[02/01 00:00:12]  Verifer returned unsat in 67.360464 secs.
[02/01 00:00:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 00:00:13]  --------------------------------------------------------------------------------
[02/01 00:00:13]  Iteration: 171 (142 solution, 28 counterexamples)
[02/01 00:00:31]  Generator returned sat in 16.060695 secs.
[02/01 00:00:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 00:00:50]  Verifer returned unsat in 18.198599 secs.
[02/01 00:01:08]  Verifer returned unsat in 17.301649 secs.
[02/01 00:01:08]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 00:01:08]  --------------------------------------------------------------------------------
[02/01 00:01:08]  Iteration: 172 (143 solution, 28 counterexamples)
[02/01 00:01:27]  Generator returned sat in 16.039035 secs.
[02/01 00:01:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:01:51]  Verifer returned unsat in 23.663451 secs.
[02/01 00:07:11]  Verifer returned unsat in 320.450051 secs.
[02/01 00:07:11]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:07:11]  --------------------------------------------------------------------------------
[02/01 00:07:11]  Iteration: 173 (144 solution, 28 counterexamples)
[02/01 00:07:31]  Generator returned sat in 16.516961 secs.
[02/01 00:07:31]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:07:55]  Verifer returned unsat in 23.875120 secs.
[02/01 00:08:17]  Verifer returned unsat in 21.258027 secs.
[02/01 00:08:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:08:17]  --------------------------------------------------------------------------------
[02/01 00:08:17]  Iteration: 174 (145 solution, 28 counterexamples)
[02/01 00:08:36]  Generator returned sat in 16.369540 secs.
[02/01 00:08:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:08:46]  Verifer returned unsat in 9.556676 secs.
[02/01 00:09:46]  Verifer returned unsat in 59.831468 secs.
[02/01 00:09:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:09:46]  --------------------------------------------------------------------------------
[02/01 00:09:46]  Iteration: 175 (146 solution, 28 counterexamples)
[02/01 00:10:15]  Generator returned sat in 24.454800 secs.
[02/01 00:10:15]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:10:31]  Verifer returned unsat in 15.753406 secs.
[02/01 00:11:29]  Verifer returned unsat in 57.827602 secs.
[02/01 00:11:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:11:30]  --------------------------------------------------------------------------------
[02/01 00:11:30]  Iteration: 176 (147 solution, 28 counterexamples)
[02/01 00:11:58]  Generator returned sat in 23.867051 secs.
[02/01 00:11:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:12:37]  Verifer returned unsat in 38.247969 secs.
[02/01 00:15:51]  Verifer returned unsat in 194.390843 secs.
[02/01 00:15:52]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:15:52]  --------------------------------------------------------------------------------
[02/01 00:15:52]  Iteration: 177 (148 solution, 28 counterexamples)
[02/01 00:16:22]  Generator returned sat in 26.150075 secs.
[02/01 00:16:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:16:49]  Improved number of small numbers from 102 to 138 out of a max of 138
[02/01 00:16:49]  Verifer returned sat in 26.292552 secs.
[02/01 00:16:49]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0          4.941650e+06          4.941574e+06        4.941650e+06         0.997070         0.996582        4.941574e+06               0.0                       0.0         50.996582             100.0                  0.0  75.498047          -1.0       0.0
1          4.941675e+06          4.941674e+06        4.941675e+06     25573.789062        25.498291        4.941674e+06               0.0                       0.0         50.996582             100.0                  0.0   0.996338           0.0       0.0
2          4.941701e+06          4.941701e+06        4.941701e+06     25499.287354        25.498291        4.941701e+06               0.0                       0.0         50.996582             100.0                  0.0   0.000000           0.0       0.0
3          4.941726e+06          4.941726e+06        4.941726e+06     25498.291016        25.498291        4.941726e+06               0.0                       0.0         50.996582             100.0                  0.0   0.000000           0.0       0.0
4          4.941752e+06          4.941752e+06        4.941752e+06     25498.291016        25.498291        4.941752e+06               0.0                       0.0         50.996582             100.0                  0.0   0.000000           0.0       0.0
5          4.941777e+06          4.941777e+06        4.941777e+06     25498.291016        25.498291        4.941777e+06               0.0                       0.0         50.996582             100.0                  0.0   0.000000           0.0       0.0
6          4.941803e+06          4.941803e+06        4.941803e+06     25498.291016        25.498291        4.941803e+06               0.0                       0.0         50.996582             100.0                  0.0   0.000000           0.0       0.0
7          4.941828e+06          4.941828e+06        4.941828e+06     25498.291016        25.498291        4.941828e+06               0.0                       0.0         50.996582             100.0                  0.0   0.000000           0.0       0.0
8          4.941854e+06          4.941854e+06        4.941854e+06     25498.291016        25.498291        4.941854e+06               0.0                       0.0         50.996582             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2041/2048, buf_size=38655/512, start_state=[0].[0m
[02/01 00:16:50]  --------------------------------------------------------------------------------
[02/01 00:16:50]  Iteration: 178 (148 solution, 29 counterexamples)
[02/01 00:29:14]  Generator returned sat in 739.883440 secs.
[02/01 00:29:14]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c)[0m
[02/01 00:29:58]  Verifer returned unsat in 43.651320 secs.
[02/01 00:40:09]  Improved number of small numbers from 102 to 112 out of a max of 148
[02/01 00:40:09]  Verifer returned sat in 610.240491 secs.
[02/01 00:40:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -9.685764e+08       -9.685764e+08     -9.685764e+08       0.499023       0.499023     -9.685764e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009959e+08  31.028320          -1.0   -5.943604e+00 -9.685764e+08       1.0
1       -9.685763e+08       -9.685764e+08     -9.685763e+08   44728.944987      44.697917     -9.685764e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009959e+08  38.754232           0.0   -8.181677e-05 -9.685763e+08       0.0
2       -9.685763e+08       -9.685763e+08     -9.685763e+08   44736.670898      44.697917     -9.685763e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009958e+08  44.198893           0.0   -1.631970e-04 -9.685763e+08       0.0
3       -9.685763e+08       -9.685763e+08     -9.685763e+08   44742.115560      44.697917     -9.685763e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009957e+08  42.250326           0.0   -4.365663e-07 -9.685763e+08       0.0
4       -9.685762e+08       -9.685762e+08     -9.685762e+08   44740.166992      44.697917     -9.685762e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009957e+08  15.834961           0.0   -8.181677e-05 -9.685762e+08       0.0
5       -9.685762e+08       -9.685762e+08     -9.685762e+08   44713.751628      44.697917     -9.685762e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009956e+08  21.992513           0.0   -1.631970e-04 -9.685762e+08       0.0
6       -9.685761e+08       -9.685761e+08     -9.685761e+08   44719.909180      44.697917     -9.685761e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009956e+08  27.936198           0.0    0.000000e+00 -9.685761e+08       0.0
7       -9.685761e+08       -9.685761e+08     -9.685761e+08   44725.852865      44.697917     -9.685761e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009955e+08  44.697917           0.0   -8.181677e-05 -9.685761e+08       1.0
8       -9.685760e+08       -9.685761e+08     -9.685760e+08   44742.614583      44.697917     -9.685761e+08             0.0                     0.0       39.253255           100.0                0.0  -1.009955e+08  38.754161           0.0   -1.631970e-04 -9.685760e+08       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=8363/1536, buf_size=18259/3072, start_state=[0].[0m
[02/01 00:40:09]  --------------------------------------------------------------------------------
[02/01 00:40:09]  Iteration: 179 (148 solution, 30 counterexamples)
[02/01 00:41:59]  Generator returned sat in 107.455509 secs.
[02/01 00:41:59]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 00:42:07]  Improved number of small numbers from 106 to 106 out of a max of 138
[02/01 00:42:07]  Verifer returned sat in 7.033984 secs.
[02/01 00:42:07]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          4.731569e+06          4.731448e+06        4.731569e+06         0.997070         0.996582        4.731448e+06          0.000000                  0.000000         89.388889             124.5                  5.0  120.402778          -1.0       6.0
1          4.731654e+06          4.731548e+06        4.731654e+06     85523.180556        85.402778        4.731548e+06          0.000000                  0.000000         89.388889             124.5                  1.0  105.805556           1.0       2.0
2          4.731948e+06          4.731648e+06        4.731948e+06    293800.250000       293.694444        4.731648e+06          0.000000                  0.000000         89.388889             124.5                  0.0  299.500000           0.0       1.0
3          4.732242e+06          4.731748e+06        4.732242e+06    293993.944444       293.694444        4.731748e+06          0.000000                  0.000000         89.388889             124.5                  0.0  493.194444           0.0       1.0
4          4.732535e+06          4.731848e+06        4.732535e+06    294187.638889       293.694444        4.731848e+06          0.000000                  0.000000         89.388889             124.5                  1.0  686.888889           1.0       2.0
5          4.732829e+06          4.731948e+06        4.732829e+06    294381.333333       293.694444        4.731948e+06          0.000000                  0.000000         89.388889             124.5                  1.0  880.583333           1.0       2.0
6          4.733123e+06          4.732048e+06        4.733123e+06    294575.027778       293.694444        4.732048e+06        193.194444                  0.000000         89.388889             124.5                  2.0  881.083333           1.0       3.0
7          4.733208e+06          4.732148e+06        4.733208e+06     86477.055556        85.402778        4.732148e+06        193.194444                193.194444         89.388889             124.5                  3.0  866.486111           1.0       4.0
8          4.733294e+06          4.732248e+06        4.733294e+06     86462.458333        85.402778        4.732248e+06        193.194444                193.194444         89.388889             124.5                  3.0  851.888889           1.0       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=6955/36, beliefs_remain_consistent=True, beliefs_improve=False, alpha=287/72, buf_size=10573/12, start_state=[0].[0m
[02/01 00:42:07]  --------------------------------------------------------------------------------
[02/01 00:42:07]  Iteration: 180 (148 solution, 31 counterexamples)
[02/01 00:53:14]  Generator returned sat in 663.752063 secs.
[02/01 00:53:14]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 00:53:42]  Improved number of small numbers from 102 to 102 out of a max of 138
[02/01 00:53:42]  Verifer returned sat in 27.366984 secs.
[02/01 00:53:42]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          4.732545e+06          4.732345e+06        4.732545e+06         0.997070         0.996338        4.732345e+06          0.000000                  0.000000         89.388889        139.777778                  0.0  200.000000          -1.0       0.0
1          4.732894e+06          4.732445e+06        4.732894e+06    349644.444444       349.444444        4.732445e+06        238.833333                  0.000000         89.388889        139.777778                  0.0  210.611111           0.0       1.0
2          4.733244e+06          4.732545e+06        4.733244e+06    349893.888889       349.444444        4.732545e+06        488.277778                238.833333         89.388889        139.777778                  1.0  210.611111           1.0       2.0
3          4.733288e+06          4.732645e+06        4.733288e+06     45393.333333        44.694444        4.732645e+06        488.277778                488.277778         89.388889        139.777778                  1.0  155.305556           1.0       2.0
4          4.733333e+06          4.732745e+06        4.733333e+06     45338.027778        44.694444        4.732745e+06        488.277778                488.277778         89.388889        139.777778                  1.0  100.000000           1.0       2.0
5          4.733378e+06          4.732845e+06        4.733378e+06     45282.722222        44.694444        4.732845e+06        488.277778                488.277778         89.388889        139.777778                  0.0   44.694444           0.0       1.0
6          4.733727e+06          4.732945e+06        4.733727e+06    349977.416667       349.444444        4.732945e+06        571.805556                488.277778         89.388889        139.777778                  0.0  210.611111           0.0       0.0
7          4.734076e+06          4.733045e+06        4.734076e+06    350226.861111       349.444444        4.733045e+06        821.250000                571.805556         89.388889        139.777778                  0.0  210.611111           1.0       1.0
8          4.734426e+06          4.733145e+06        4.734426e+06    350476.305556       349.444444        4.733145e+06       1070.694444                821.250000         89.388889        139.777778                  1.0  210.611111           1.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=29947/36, beliefs_remain_consistent=True, beliefs_improve=False, alpha=39/2, buf_size=3791/18, start_state=[0].[0m
[02/01 00:53:42]  --------------------------------------------------------------------------------
[02/01 00:53:42]  Iteration: 181 (148 solution, 32 counterexamples)
[02/01 00:58:32]  Generator returned sat in 287.553046 secs.
[02/01 00:58:33]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 00:58:51]  Improved number of small numbers from 102 to 138 out of a max of 138
[02/01 00:58:51]  Verifer returned sat in 18.573432 secs.
[02/01 00:58:52]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          4.731609e+06          4.731609e+06        4.731609e+06          0.99707          0.99585        4.731609e+06               0.0                       0.0         89.388889        120.722222                  4.0      0.0          -1.0       5.0
1          4.731908e+06          4.731709e+06        4.731908e+06     299500.00000        299.50000        4.731709e+06               0.0                       0.0         89.388889        120.722222                  0.0    199.5           0.0       0.0
2          4.732208e+06          4.731809e+06        4.732208e+06     299699.50000        299.50000        4.731809e+06               0.0                       0.0         89.388889        120.722222                  0.0    399.0           0.0       1.0
3          4.732507e+06          4.731909e+06        4.732507e+06     299899.00000        299.50000        4.731909e+06               0.0                       0.0         89.388889        120.722222                  0.0    598.5           0.0       1.0
4          4.732807e+06          4.732009e+06        4.732807e+06     300098.50000        299.50000        4.732009e+06               0.0                       0.0         89.388889        120.722222                  1.0    798.0           1.0       2.0
5          4.733106e+06          4.732109e+06        4.733106e+06     300298.00000        299.50000        4.732109e+06               0.0                       0.0         89.388889        120.722222                  2.0    997.5           1.0       3.0
6          4.733406e+06          4.732209e+06        4.733406e+06     300497.50000        299.50000        4.732209e+06               0.0                       0.0         89.388889        120.722222                  2.0   1197.0           1.0       3.0
7          4.733705e+06          4.732309e+06        4.733705e+06     300697.00000        299.50000        4.732309e+06               0.0                       0.0         89.388889        120.722222                  3.0   1396.5           1.0       4.0
8          4.734005e+06          4.732409e+06        4.734005e+06     300896.50000        299.50000        4.732409e+06               0.0                       0.0         89.388889        120.722222                  4.0   1596.0           1.0       5.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=65/36, buf_size=3193/2, start_state=[0].[0m
[02/01 00:58:52]  --------------------------------------------------------------------------------
[02/01 00:58:52]  Iteration: 182 (148 solution, 33 counterexamples)
[02/01 01:05:36]  Generator returned sat in 401.212176 secs.
[02/01 01:05:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -3/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 01:05:51]  Verifer returned unsat in 14.427975 secs.
[02/01 01:07:31]  Improved number of small numbers from 88 to 91 out of a max of 148
[02/01 01:07:31]  Verifer returned sat in 99.739517 secs.
[02/01 01:07:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t      queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -9.691654e+08       -9.691655e+08     -9.691654e+08       0.499023       0.498779     -9.691655e+08        0.000000                0.000000           100.0      144.853237                0.0  -1.009956e+08   102.808175          -1.0        7.299386 -9.691654e+08       0.0
1       -9.691651e+08       -9.691653e+08     -9.691651e+08  344956.044782     344.853237     -9.691653e+08        0.000000                0.000000           100.0      144.853237                0.0  -1.009956e+08   252.152623           0.0      252.152623 -9.691653e+08       0.0
2       -9.691647e+08       -9.691652e+08     -9.691647e+08  345105.389230     344.853237     -9.691652e+08        0.000000                0.000000           100.0      144.853237                0.0  -1.009956e+08   497.005859           0.0      497.005859 -9.691652e+08       1.0
3       -9.691644e+08       -9.691652e+08     -9.691644e+08  345350.242467     344.853237     -9.691652e+08        0.000000                0.000000           100.0      144.853237                0.0  -1.009956e+08   841.859096           0.0      741.859096 -9.691651e+08       1.0
4       -9.691641e+08       -9.691651e+08     -9.691641e+08  345695.095703     344.853237     -9.691651e+08        0.000000                0.000000           100.0      144.853237                1.0  -1.009956e+08  1034.060686           1.0      986.712333 -9.691650e+08       2.0
5       -9.691637e+08       -9.691649e+08     -9.691637e+08  345887.297294     344.853237     -9.691649e+08        0.000000                0.000000           100.0      144.853237                2.0  -1.009956e+08  1233.062640           1.0     1231.565569 -9.691649e+08       3.0
6       -9.691634e+08       -9.691648e+08     -9.691634e+08  346086.299247     344.853237     -9.691648e+08      244.354213                0.000000           100.0      144.853237                3.0  -1.009956e+08  1234.060686           1.0     1232.064593 -9.691648e+08       4.0
7       -9.691630e+08       -9.691648e+08     -9.691630e+08  346331.651507     344.853237     -9.691648e+08      489.207450              244.354213           100.0      144.853237                4.0  -1.009956e+08  1288.708426           1.0     1232.064593 -9.691647e+08       5.0
8       -9.691627e+08       -9.691646e+08     -9.691627e+08  346631.152483     344.853237     -9.691646e+08      734.060686              489.207450           100.0      144.853237                4.0  -1.009956e+08  1232.064792           1.0     1232.064593 -9.691646e+08       5.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=3, loss_amount=5261747/7168, beliefs_remain_consistent=True, beliefs_improve=False, alpha=56471/4096, buf_size=8831439/7168, start_state=[0].[0m
[02/01 01:07:31]  --------------------------------------------------------------------------------
[02/01 01:07:31]  Iteration: 183 (148 solution, 34 counterexamples)
[02/01 01:10:57]  Generator returned sat in 202.264488 secs.
[02/01 01:10:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 01:11:06]  Verifer returned unsat in 8.948813 secs.
[02/01 01:14:27]  Verifer returned unsat in 200.827754 secs.
[02/01 01:14:27]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 01:14:27]  --------------------------------------------------------------------------------
[02/01 01:14:27]  Iteration: 184 (149 solution, 34 counterexamples)
[02/01 01:14:55]  Generator returned sat in 24.641214 secs.
[02/01 01:14:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:15:05]  Verifer returned unsat in 9.017071 secs.
[02/01 01:15:47]  Verifer returned unsat in 42.277086 secs.
[02/01 01:15:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:15:48]  --------------------------------------------------------------------------------
[02/01 01:15:48]  Iteration: 185 (150 solution, 34 counterexamples)
[02/01 01:16:16]  Generator returned sat in 25.013746 secs.
[02/01 01:16:16]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:16:48]  Verifer returned unsat in 32.050755 secs.
[02/01 01:17:29]  Verifer returned unsat in 40.321005 secs.
[02/01 01:17:29]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:17:29]  --------------------------------------------------------------------------------
[02/01 01:17:29]  Iteration: 186 (151 solution, 34 counterexamples)
[02/01 01:17:57]  Generator returned sat in 24.462381 secs.
[02/01 01:17:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 01:18:16]  Verifer returned unsat in 18.255928 secs.
[02/01 01:19:25]  Verifer returned unsat in 68.839696 secs.
[02/01 01:19:25]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 01:19:25]  --------------------------------------------------------------------------------
[02/01 01:19:25]  Iteration: 187 (152 solution, 34 counterexamples)
[02/01 01:19:53]  Generator returned sat in 24.834802 secs.
[02/01 01:19:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 01:20:09]  Verifer returned unsat in 15.538508 secs.
[02/01 01:30:25]  Verifer returned unsat in 616.177036 secs.
[02/01 01:30:26]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 01:30:26]  --------------------------------------------------------------------------------
[02/01 01:30:26]  Iteration: 188 (153 solution, 34 counterexamples)
[02/01 01:31:34]  Generator returned sat in 65.082993 secs.
[02/01 01:31:34]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 01:31:46]  Verifer returned unsat in 11.022225 secs.
[02/01 01:33:19]  Improved number of small numbers from 62 to 65 out of a max of 148
[02/01 01:33:19]  Verifer returned sat in 93.117212 secs.
[02/01 01:33:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -9.679709e+08       -9.679709e+08     -9.679709e+08       0.498779       0.498779     -9.679709e+08        0.000000                0.000000       80.917754      132.867806                3.0  -1.009956e+08    0.000000          -1.0      -23.671016 -9.679709e+08       4.0
1       -9.679707e+08       -9.679709e+08     -9.679707e+08  228269.410807     228.269411     -9.679709e+08        0.000000                0.000000       80.917754      132.867806                0.0  -1.009956e+08  147.351657           0.0      104.598395 -9.679708e+08       0.0
2       -9.679705e+08       -9.679708e+08     -9.679705e+08  228416.762464     228.269411     -9.679708e+08        0.000000                0.000000       80.917754      132.867806                0.0  -1.009956e+08  294.703314           0.0      232.867806 -9.679707e+08       1.0
3       -9.679703e+08       -9.679706e+08     -9.679703e+08  228564.114121     228.269411     -9.679706e+08        0.000000                0.000000       80.917754      132.867806                0.0  -1.009956e+08  361.137217           0.0      361.137217 -9.679706e+08       1.0
4       -9.679700e+08       -9.679706e+08     -9.679700e+08  228630.548024     228.269411     -9.679706e+08        0.000000                0.000000       80.917754      132.867806                0.0  -1.009956e+08  589.406628           0.0      489.406628 -9.679705e+08       1.0
5       -9.679698e+08       -9.679705e+08     -9.679698e+08  228858.817435     228.269411     -9.679705e+08        0.000000                0.000000       80.917754      132.867806                1.0  -1.009956e+08  684.309453           1.0      617.676038 -9.679704e+08       2.0
6       -9.679696e+08       -9.679704e+08     -9.679696e+08  228953.720260     228.269411     -9.679704e+08        0.498779                0.000000       80.917754      132.867806                2.0  -1.009956e+08  845.446670           1.0      745.446670 -9.679703e+08       3.0
7       -9.679693e+08       -9.679703e+08     -9.679693e+08  229115.356257     228.269411     -9.679703e+08      128.768190                0.498779       80.917754      132.867806                3.0  -1.009956e+08  845.446670           1.0      745.446670 -9.679702e+08       4.0
8       -9.679691e+08       -9.679702e+08     -9.679691e+08  229243.625667     228.269411     -9.679702e+08      257.037601              128.768190       80.917754      132.867806                3.0  -1.009956e+08  845.347105           1.0      745.446670 -9.679701e+08       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=2, loss_amount=78961951/307200, beliefs_remain_consistent=True, beliefs_improve=False, alpha=61369/4096, buf_size=76333739/102400, start_state=[0].[0m
[02/01 01:33:19]  --------------------------------------------------------------------------------
[02/01 01:33:19]  Iteration: 189 (153 solution, 35 counterexamples)
[02/01 01:36:32]  Generator returned sat in 189.844790 secs.
[02/01 01:36:33]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c)[0m
[02/01 01:36:42]  Improved number of small numbers from 102 to 138 out of a max of 138
[02/01 01:36:42]  Verifer returned sat in 8.903791 secs.
[02/01 01:36:42]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t  queue_t  utilized_0,t  qdelay_t
0          6.340358e+06          6.340358e+06        6.340358e+06          0.99707         0.995605        6.340358e+06               0.0                       0.0              88.0             118.0                  2.0      0.0          -1.0       3.0
1          6.340446e+06          6.340446e+06        6.340446e+06      87750.00000        87.750000        6.340446e+06               0.0                       0.0              88.0             118.0                  0.0      0.0           0.0       0.0
2          6.340681e+06          6.340546e+06        6.340681e+06     235000.00000       235.000000        6.340546e+06               0.0                       0.0              88.0             118.0                  0.0    135.0           0.0       0.0
3          6.340916e+06          6.340646e+06        6.340916e+06     235135.00000       235.000000        6.340646e+06              70.0                       0.0              88.0             118.0                  0.0    200.0           0.0       1.0
4          6.341151e+06          6.340746e+06        6.341151e+06     235270.00000       235.000000        6.340746e+06             205.0                      70.0              88.0             118.0                  0.0    200.0           1.0       1.0
5          6.341386e+06          6.340846e+06        6.341386e+06     235405.00000       235.000000        6.340846e+06             340.0                     205.0              88.0             118.0                  1.0    200.0           1.0       2.0
6          6.341621e+06          6.340946e+06        6.341621e+06     235540.00000       235.000000        6.340946e+06             475.0                     340.0              88.0             118.0                  1.0    200.0           1.0       2.0
7          6.341856e+06          6.341046e+06        6.341856e+06     235675.00000       235.000000        6.341046e+06             610.0                     475.0              88.0             118.0                  1.0    200.0           1.0       2.0
8          6.342091e+06          6.341146e+06        6.342091e+06     235810.00000       235.000000        6.341146e+06             745.0                     610.0              88.0             118.0                  1.0    200.0           1.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=745, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1/4, buf_size=200, start_state=[0].[0m
[02/01 01:36:42]  --------------------------------------------------------------------------------
[02/01 01:36:42]  Iteration: 190 (153 solution, 36 counterexamples)
[02/01 01:45:52]  Generator returned sat in 546.460898 secs.
[02/01 01:45:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 01:46:27]  Verifer returned unsat in 34.592741 secs.
[02/01 01:47:13]  Improved number of small numbers from 102 to 148 out of a max of 148
[02/01 01:47:13]  Verifer returned sat in 45.879516 secs.
[02/01 01:47:13]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -9.681694e+08       -9.681695e+08     -9.681694e+08       0.498535       0.498535     -9.681695e+08        0.000000                0.000000       80.997559      122.992676                1.0  -1.007971e+08   56.009766          -1.0       56.009766 -9.681695e+08       2.0
1       -9.681693e+08       -9.681694e+08     -9.681693e+08  100554.789062     100.498779     -9.681694e+08        0.000000                0.000000       80.997559      122.992676                0.0  -1.007971e+08  100.498779           0.0       56.508545 -9.681694e+08       1.0
2       -9.681692e+08       -9.681693e+08     -9.681692e+08  163591.953857     163.491455     -9.681693e+08        0.000000                0.000000       80.997559      122.992676                0.0  -1.007971e+08  120.000000           0.0      120.000000 -9.681693e+08       0.0
3       -9.681690e+08       -9.681693e+08     -9.681690e+08  163611.455078     163.491455     -9.681693e+08        0.000000                0.000000       80.997559      122.992676                0.0  -1.007971e+08  266.484131           0.0      183.491455 -9.681692e+08       1.0
4       -9.681689e+08       -9.681692e+08     -9.681689e+08  163757.939209     163.491455     -9.681692e+08       58.503662                0.000000       80.997559      122.992676                0.0  -1.007971e+08  258.953369           0.0      188.479248 -9.681691e+08       1.0
5       -9.681687e+08       -9.681690e+08     -9.681687e+08  163808.912109     163.491455     -9.681690e+08      121.995117               58.503662       80.997559      122.992676                1.0  -1.007971e+08  235.461914           1.0      188.479248 -9.681690e+08       2.0
6       -9.681686e+08       -9.681690e+08     -9.681686e+08  100856.236328     100.498779     -9.681690e+08      122.493896              121.995117       80.997559      122.992676                1.0  -1.007971e+08  249.476807           1.0      188.479248 -9.681689e+08       2.0
7       -9.681685e+08       -9.681689e+08     -9.681685e+08  100870.750000     100.498779     -9.681689e+08      122.992676              122.493896       80.997559      122.992676                1.0  -1.007971e+08  268.977783           1.0      188.479248 -9.681688e+08       2.0
8       -9.681684e+08       -9.681688e+08     -9.681684e+08  100890.749756     100.498779     -9.681688e+08      123.491455              122.992676       80.997559      122.992676                1.0  -1.007971e+08  288.479004           1.0      188.479248 -9.681687e+08       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=1, loss_amount=505821/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=79877/4096, buf_size=772011/4096, start_state=[0].[0m
[02/01 01:47:13]  --------------------------------------------------------------------------------
[02/01 01:47:13]  Iteration: 191 (153 solution, 37 counterexamples)
[02/01 01:49:34]  Generator returned sat in 136.859779 secs.
[02/01 01:49:34]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:49:48]  Verifer returned unsat in 13.181858 secs.
[02/01 01:50:17]  Verifer returned unsat in 28.752402 secs.
[02/01 01:50:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:50:17]  --------------------------------------------------------------------------------
[02/01 01:50:17]  Iteration: 192 (154 solution, 37 counterexamples)
[02/01 01:50:49]  Generator returned sat in 28.393598 secs.
[02/01 01:50:49]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:50:58]  Verifer returned unsat in 9.195922 secs.
[02/01 01:57:46]  Verifer returned unsat in 407.482676 secs.
[02/01 01:57:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:57:46]  --------------------------------------------------------------------------------
[02/01 01:57:46]  Iteration: 193 (155 solution, 37 counterexamples)
[02/01 01:58:19]  Generator returned sat in 28.457064 secs.
[02/01 01:58:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:58:29]  Verifer returned unsat in 9.386118 secs.
[02/01 01:58:58]  Verifer returned unsat in 28.760383 secs.
[02/01 01:58:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:58:58]  --------------------------------------------------------------------------------
[02/01 01:58:58]  Iteration: 194 (156 solution, 37 counterexamples)
[02/01 01:59:30]  Generator returned sat in 28.144698 secs.
[02/01 01:59:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 01:59:45]  Verifer returned unsat in 14.377317 secs.
[02/01 02:00:17]  Verifer returned unsat in 32.524191 secs.
[02/01 02:00:18]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:00:18]  --------------------------------------------------------------------------------
[02/01 02:00:18]  Iteration: 195 (157 solution, 37 counterexamples)
[02/01 02:00:50]  Generator returned sat in 28.262543 secs.
[02/01 02:00:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:01:07]  Verifer returned unsat in 17.122742 secs.
[02/01 02:05:51]  Verifer returned unsat in 283.080625 secs.
[02/01 02:05:51]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:05:51]  --------------------------------------------------------------------------------
[02/01 02:05:51]  Iteration: 196 (158 solution, 37 counterexamples)
[02/01 02:06:23]  Generator returned sat in 28.253960 secs.
[02/01 02:06:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:06:37]  Verifer returned unsat in 14.023592 secs.
[02/01 02:09:56]  Verifer returned unsat in 198.760822 secs.
[02/01 02:09:57]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:09:57]  --------------------------------------------------------------------------------
[02/01 02:09:57]  Iteration: 197 (159 solution, 37 counterexamples)
[02/01 02:10:29]  Generator returned sat in 28.335217 secs.
[02/01 02:10:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:10:41]  Verifer returned unsat in 11.631063 secs.
[02/01 02:11:17]  Verifer returned unsat in 35.197925 secs.
[02/01 02:11:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:11:17]  --------------------------------------------------------------------------------
[02/01 02:11:17]  Iteration: 198 (160 solution, 37 counterexamples)
[02/01 02:11:49]  Generator returned sat in 28.130863 secs.
[02/01 02:11:49]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:12:14]  Verifer returned unsat in 25.427213 secs.
[02/01 02:12:35]  Verifer returned unsat in 20.247111 secs.
[02/01 02:12:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:12:35]  --------------------------------------------------------------------------------
[02/01 02:12:35]  Iteration: 199 (161 solution, 37 counterexamples)
[02/01 02:13:07]  Generator returned sat in 28.079801 secs.
[02/01 02:13:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:13:16]  Verifer returned unsat in 8.329137 secs.
[02/01 02:13:56]  Verifer returned unsat in 39.995669 secs.
[02/01 02:13:56]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:13:56]  --------------------------------------------------------------------------------
[02/01 02:13:56]  Iteration: 200 (162 solution, 37 counterexamples)
[02/01 02:14:28]  Generator returned sat in 28.167383 secs.
[02/01 02:14:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:14:43]  Verifer returned unsat in 14.421978 secs.
[02/01 02:15:03]  Verifer returned unsat in 19.851651 secs.
[02/01 02:15:03]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:15:03]  --------------------------------------------------------------------------------
[02/01 02:15:03]  Iteration: 201 (163 solution, 37 counterexamples)
[02/01 02:15:36]  Generator returned sat in 29.093888 secs.
[02/01 02:15:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:16:03]  Verifer returned unsat in 26.472188 secs.
[02/01 02:16:43]  Verifer returned unsat in 40.343414 secs.
[02/01 02:16:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:16:43]  --------------------------------------------------------------------------------
[02/01 02:16:43]  Iteration: 202 (164 solution, 37 counterexamples)
[02/01 02:17:15]  Generator returned sat in 28.092622 secs.
[02/01 02:17:16]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:17:24]  Verifer returned unsat in 8.149747 secs.
[02/01 02:18:21]  Verifer returned unsat in 56.716158 secs.
[02/01 02:18:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:18:21]  --------------------------------------------------------------------------------
[02/01 02:18:21]  Iteration: 203 (165 solution, 37 counterexamples)
[02/01 02:18:53]  Generator returned sat in 28.131577 secs.
[02/01 02:18:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:19:00]  Verifer returned unsat in 7.283155 secs.
[02/01 02:21:53]  Verifer returned unsat in 172.716594 secs.
[02/01 02:21:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:21:54]  --------------------------------------------------------------------------------
[02/01 02:21:54]  Iteration: 204 (166 solution, 37 counterexamples)
[02/01 02:22:28]  Generator returned sat in 30.542652 secs.
[02/01 02:22:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:22:45]  Verifer returned unsat in 16.329066 secs.
[02/01 02:23:09]  Verifer returned unsat in 23.967004 secs.
[02/01 02:23:09]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:23:09]  --------------------------------------------------------------------------------
[02/01 02:23:09]  Iteration: 205 (167 solution, 37 counterexamples)
[02/01 02:23:41]  Generator returned sat in 28.488117 secs.
[02/01 02:23:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:23:52]  Verifer returned unsat in 10.853417 secs.
[02/01 02:24:16]  Verifer returned unsat in 23.224871 secs.
[02/01 02:24:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:24:16]  --------------------------------------------------------------------------------
[02/01 02:24:16]  Iteration: 206 (168 solution, 37 counterexamples)
[02/01 02:24:48]  Generator returned sat in 28.540579 secs.
[02/01 02:24:49]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:25:07]  Verifer returned unsat in 18.632400 secs.
[02/01 02:26:34]  Verifer returned unsat in 85.882827 secs.
[02/01 02:26:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:26:34]  --------------------------------------------------------------------------------
[02/01 02:26:34]  Iteration: 207 (169 solution, 37 counterexamples)
[02/01 02:27:06]  Generator returned sat in 28.529411 secs.
[02/01 02:27:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:27:16]  Verifer returned unsat in 9.970500 secs.
[02/01 02:27:53]  Verifer returned unsat in 36.308657 secs.
[02/01 02:27:53]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:27:53]  --------------------------------------------------------------------------------
[02/01 02:27:53]  Iteration: 208 (170 solution, 37 counterexamples)
[02/01 02:28:26]  Generator returned sat in 29.053462 secs.
[02/01 02:28:26]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:28:41]  Verifer returned unsat in 14.674661 secs.
[02/01 02:30:07]  Verifer returned unsat in 85.433254 secs.
[02/01 02:30:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:30:07]  --------------------------------------------------------------------------------
[02/01 02:30:07]  Iteration: 209 (171 solution, 37 counterexamples)
[02/01 02:30:39]  Generator returned sat in 28.605669 secs.
[02/01 02:30:40]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:31:03]  Verifer returned unsat in 23.721099 secs.
[02/01 02:32:29]  Verifer returned unsat in 85.046249 secs.
[02/01 02:32:29]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:32:29]  --------------------------------------------------------------------------------
[02/01 02:32:29]  Iteration: 210 (172 solution, 37 counterexamples)
[02/01 02:33:01]  Generator returned sat in 28.629460 secs.
[02/01 02:33:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:33:16]  Verifer returned unsat in 14.062624 secs.
[02/01 02:36:30]  Verifer returned unsat in 194.294900 secs.
[02/01 02:36:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:36:30]  --------------------------------------------------------------------------------
[02/01 02:36:30]  Iteration: 211 (173 solution, 37 counterexamples)
[02/01 02:37:03]  Generator returned sat in 28.644652 secs.
[02/01 02:37:03]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:37:18]  Verifer returned unsat in 14.918618 secs.
[02/01 02:41:22]  Verifer returned unsat in 243.794189 secs.
[02/01 02:41:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:41:22]  --------------------------------------------------------------------------------
[02/01 02:41:22]  Iteration: 212 (174 solution, 37 counterexamples)
[02/01 02:41:55]  Generator returned sat in 29.025254 secs.
[02/01 02:41:55]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:42:36]  Verifer returned unsat in 40.577811 secs.
[02/01 02:43:08]  Verifer returned unsat in 31.760306 secs.
[02/01 02:43:08]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:43:08]  --------------------------------------------------------------------------------
[02/01 02:43:08]  Iteration: 213 (175 solution, 37 counterexamples)
[02/01 02:43:41]  Generator returned sat in 28.798744 secs.
[02/01 02:43:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:43:55]  Verifer returned unsat in 13.454044 secs.
[02/01 02:44:41]  Verifer returned unsat in 46.158583 secs.
[02/01 02:44:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:44:41]  --------------------------------------------------------------------------------
[02/01 02:44:41]  Iteration: 214 (176 solution, 37 counterexamples)
[02/01 02:45:14]  Generator returned sat in 28.696104 secs.
[02/01 02:45:14]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:45:34]  Verifer returned unsat in 19.714296 secs.
[02/01 02:45:47]  Verifer returned unsat in 12.762273 secs.
[02/01 02:45:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 02:45:47]  --------------------------------------------------------------------------------
[02/01 02:45:47]  Iteration: 215 (177 solution, 37 counterexamples)
[02/01 02:46:19]  Generator returned sat in 28.750568 secs.
[02/01 02:46:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 02:46:37]  Verifer returned unsat in 17.159133 secs.
[02/01 02:47:45]  Verifer returned unsat in 67.536114 secs.
[02/01 02:47:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 02:47:45]  --------------------------------------------------------------------------------
[02/01 02:47:45]  Iteration: 216 (178 solution, 37 counterexamples)
[02/01 02:48:17]  Generator returned sat in 28.171630 secs.
[02/01 02:48:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 02:48:26]  Verifer returned unsat in 8.763662 secs.
[02/01 02:49:45]  Verifer returned unsat in 78.639454 secs.
[02/01 02:49:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 02:49:45]  --------------------------------------------------------------------------------
[02/01 02:49:45]  Iteration: 217 (179 solution, 37 counterexamples)
[02/01 02:50:17]  Generator returned sat in 28.132317 secs.
[02/01 02:50:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 02:51:05]  Verifer returned unsat in 47.626558 secs.
[02/01 02:58:51]  Verifer returned unsat in 465.588111 secs.
[02/01 02:58:51]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 02:58:51]  --------------------------------------------------------------------------------
[02/01 02:58:51]  Iteration: 218 (180 solution, 37 counterexamples)
[02/01 02:59:23]  Generator returned sat in 28.261626 secs.
[02/01 02:59:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 02:59:37]  Verifer returned unsat in 12.871694 secs.
[02/01 03:00:30]  Verifer returned unsat in 52.492239 secs.
[02/01 03:00:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:00:30]  --------------------------------------------------------------------------------
[02/01 03:00:30]  Iteration: 219 (181 solution, 37 counterexamples)
[02/01 03:01:02]  Generator returned sat in 28.291263 secs.
[02/01 03:01:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:01:46]  Verifer returned unsat in 43.653373 secs.
[02/01 03:11:06]  Verifer returned unsat in 560.052940 secs.
[02/01 03:11:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:11:07]  --------------------------------------------------------------------------------
[02/01 03:11:07]  Iteration: 220 (182 solution, 37 counterexamples)
[02/01 03:11:53]  Generator returned sat in 40.781236 secs.
[02/01 03:11:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:12:12]  Verifer returned unsat in 18.244604 secs.
[02/01 03:14:15]  Verifer returned unsat in 122.728678 secs.
[02/01 03:14:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:14:16]  --------------------------------------------------------------------------------
[02/01 03:14:16]  Iteration: 221 (183 solution, 37 counterexamples)
[02/01 03:14:52]  Generator returned sat in 30.423394 secs.
[02/01 03:14:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:15:15]  Verifer returned unsat in 22.857975 secs.
[02/01 03:15:46]  Verifer returned unsat in 29.802985 secs.
[02/01 03:15:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:15:46]  --------------------------------------------------------------------------------
[02/01 03:15:46]  Iteration: 222 (184 solution, 37 counterexamples)
[02/01 03:16:18]  Generator returned sat in 28.996243 secs.
[02/01 03:16:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:16:50]  Verifer returned unsat in 30.879602 secs.
[02/01 03:23:20]  Verifer returned unsat in 390.145414 secs.
[02/01 03:23:20]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:23:20]  --------------------------------------------------------------------------------
[02/01 03:23:20]  Iteration: 223 (185 solution, 37 counterexamples)
[02/01 03:23:52]  Generator returned sat in 28.292886 secs.
[02/01 03:23:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 03:24:05]  Verifer returned unsat in 11.631128 secs.
[02/01 03:24:30]  Verifer returned unsat in 24.704151 secs.
[02/01 03:24:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 03:24:30]  --------------------------------------------------------------------------------
[02/01 03:24:30]  Iteration: 224 (186 solution, 37 counterexamples)
[02/01 03:25:02]  Generator returned sat in 28.317187 secs.
[02/01 03:25:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 03:25:27]  Verifer returned unsat in 24.869364 secs.
[02/01 03:26:11]  Verifer returned unsat in 43.793820 secs.
[02/01 03:26:12]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 03:26:12]  --------------------------------------------------------------------------------
[02/01 03:26:12]  Iteration: 225 (187 solution, 37 counterexamples)
[02/01 03:26:58]  Generator returned sat in 40.928684 secs.
[02/01 03:26:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:27:28]  Verifer returned unsat in 28.503670 secs.
[02/01 03:28:33]  Verifer returned unsat in 65.039512 secs.
[02/01 03:28:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:28:34]  --------------------------------------------------------------------------------
[02/01 03:28:34]  Iteration: 226 (188 solution, 37 counterexamples)
[02/01 03:29:20]  Generator returned sat in 41.049367 secs.
[02/01 03:29:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:29:54]  Verifer returned unsat in 32.657724 secs.
[02/01 03:30:45]  Verifer returned unsat in 50.957667 secs.
[02/01 03:30:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:30:45]  --------------------------------------------------------------------------------
[02/01 03:30:45]  Iteration: 227 (189 solution, 37 counterexamples)
[02/01 03:31:33]  Generator returned sat in 41.185494 secs.
[02/01 03:31:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:32:07]  Verifer returned unsat in 33.967253 secs.
[02/01 03:33:07]  Verifer returned unsat in 58.893173 secs.
[02/01 03:33:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:33:07]  --------------------------------------------------------------------------------
[02/01 03:33:07]  Iteration: 228 (190 solution, 37 counterexamples)
[02/01 03:33:56]  Generator returned sat in 42.622209 secs.
[02/01 03:33:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:34:10]  Verifer returned unsat in 14.065168 secs.
[02/01 03:46:56]  Verifer returned unsat in 765.034837 secs.
[02/01 03:46:56]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 03:46:56]  --------------------------------------------------------------------------------
[02/01 03:46:56]  Iteration: 229 (191 solution, 37 counterexamples)
[02/01 03:47:43]  Generator returned sat in 41.155086 secs.
[02/01 03:47:44]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:48:18]  Verifer returned unsat in 34.193599 secs.
[02/01 03:48:50]  Verifer returned unsat in 31.957916 secs.
[02/01 03:48:51]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 03:48:51]  --------------------------------------------------------------------------------
[02/01 03:48:51]  Iteration: 230 (192 solution, 37 counterexamples)
[02/01 03:49:37]  Generator returned sat in 40.850078 secs.
[02/01 03:49:38]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 03:50:00]  Verifer returned unsat in 21.574585 secs.
[02/01 03:51:13]  Verifer returned unsat in 73.163330 secs.
[02/01 03:51:14]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 03:51:14]  --------------------------------------------------------------------------------
[02/01 03:51:14]  Iteration: 231 (193 solution, 37 counterexamples)
[02/01 03:52:00]  Generator returned sat in 40.597850 secs.
[02/01 03:52:01]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 03:52:19]  Verifer returned unsat in 18.173589 secs.
[02/01 04:06:45]  Verifer returned unsat in 866.032912 secs.
[02/01 04:06:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:06:46]  --------------------------------------------------------------------------------
[02/01 04:06:46]  Iteration: 232 (194 solution, 37 counterexamples)
[02/01 04:07:33]  Generator returned sat in 41.238892 secs.
[02/01 04:07:34]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 04:08:04]  Verifer returned unsat in 30.674620 secs.
[02/01 04:09:21]  Verifer returned unsat in 76.448117 secs.
[02/01 04:09:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 04:09:22]  --------------------------------------------------------------------------------
[02/01 04:09:22]  Iteration: 233 (195 solution, 37 counterexamples)
[02/01 04:10:08]  Generator returned sat in 40.709395 secs.
[02/01 04:10:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 04:10:26]  Verifer returned unsat in 17.069024 secs.
[02/01 04:11:40]  Verifer returned unsat in 74.072670 secs.
[02/01 04:11:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 04:11:41]  --------------------------------------------------------------------------------
[02/01 04:11:41]  Iteration: 234 (196 solution, 37 counterexamples)
[02/01 04:12:28]  Generator returned sat in 41.252884 secs.
[02/01 04:12:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:12:53]  Verifer returned unsat in 24.246846 secs.
[02/01 04:15:02]  Verifer returned unsat in 128.454686 secs.
[02/01 04:15:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:15:02]  --------------------------------------------------------------------------------
[02/01 04:15:02]  Iteration: 235 (197 solution, 37 counterexamples)
[02/01 04:15:49]  Generator returned sat in 40.978387 secs.
[02/01 04:15:49]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:16:02]  Verifer returned unsat in 12.514142 secs.
[02/01 04:16:34]  Verifer returned unsat in 31.236250 secs.
[02/01 04:16:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:16:34]  --------------------------------------------------------------------------------
[02/01 04:16:34]  Iteration: 236 (198 solution, 37 counterexamples)
[02/01 04:17:21]  Generator returned sat in 40.863559 secs.
[02/01 04:17:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:18:11]  Verifer returned unsat in 49.675615 secs.
[02/01 04:19:11]  Verifer returned unsat in 59.125005 secs.
[02/01 04:19:11]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:19:11]  --------------------------------------------------------------------------------
[02/01 04:19:11]  Iteration: 237 (199 solution, 37 counterexamples)
[02/01 04:19:58]  Generator returned sat in 40.996905 secs.
[02/01 04:19:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:20:33]  Verifer returned unsat in 34.676562 secs.
[02/01 04:25:34]  Verifer returned unsat in 300.411278 secs.
[02/01 04:25:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:25:35]  --------------------------------------------------------------------------------
[02/01 04:25:35]  Iteration: 238 (200 solution, 37 counterexamples)
[02/01 04:26:06]  Generator returned sat in 27.884950 secs.
[02/01 04:26:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:26:31]  Verifer returned unsat in 24.349387 secs.
[02/01 04:27:13]  Verifer returned unsat in 41.857200 secs.
[02/01 04:27:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:27:13]  --------------------------------------------------------------------------------
[02/01 04:27:13]  Iteration: 239 (201 solution, 37 counterexamples)
[02/01 04:27:45]  Generator returned sat in 27.808524 secs.
[02/01 04:27:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:27:56]  Verifer returned unsat in 11.161628 secs.
[02/01 04:28:44]  Verifer returned unsat in 47.802082 secs.
[02/01 04:28:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:28:45]  --------------------------------------------------------------------------------
[02/01 04:28:45]  Iteration: 240 (202 solution, 37 counterexamples)
[02/01 04:29:16]  Generator returned sat in 27.505539 secs.
[02/01 04:29:16]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:29:26]  Verifer returned unsat in 9.832236 secs.
[02/01 04:29:52]  Verifer returned unsat in 25.412765 secs.
[02/01 04:29:52]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:29:52]  --------------------------------------------------------------------------------
[02/01 04:29:52]  Iteration: 241 (203 solution, 37 counterexamples)
[02/01 04:30:23]  Generator returned sat in 27.511463 secs.
[02/01 04:30:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:30:39]  Verifer returned unsat in 14.895325 secs.
[02/01 04:31:07]  Verifer returned unsat in 28.660135 secs.
[02/01 04:31:08]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:31:08]  --------------------------------------------------------------------------------
[02/01 04:31:08]  Iteration: 242 (204 solution, 37 counterexamples)
[02/01 04:31:39]  Generator returned sat in 27.593585 secs.
[02/01 04:31:39]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:31:50]  Verifer returned unsat in 10.443132 secs.
[02/01 04:39:25]  Verifer returned unsat in 454.879778 secs.
[02/01 04:39:25]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)[0m
[02/01 04:39:25]  --------------------------------------------------------------------------------
[02/01 04:39:25]  Iteration: 243 (205 solution, 37 counterexamples)
[02/01 04:39:57]  Generator returned sat in 27.645075 secs.
[02/01 04:39:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:40:17]  Verifer returned unsat in 20.271091 secs.
[02/01 04:40:45]  Verifer returned unsat in 27.406657 secs.
[02/01 04:40:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:40:45]  --------------------------------------------------------------------------------
[02/01 04:40:45]  Iteration: 244 (206 solution, 37 counterexamples)
[02/01 04:41:16]  Generator returned sat in 27.548817 secs.
[02/01 04:41:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:41:48]  Verifer returned unsat in 31.284586 secs.
[02/01 04:47:16]  Verifer returned unsat in 327.275000 secs.
[02/01 04:47:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:47:16]  --------------------------------------------------------------------------------
[02/01 04:47:16]  Iteration: 245 (207 solution, 37 counterexamples)
[02/01 04:47:47]  Generator returned sat in 27.643809 secs.
[02/01 04:47:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:47:57]  Verifer returned unsat in 9.187812 secs.
[02/01 04:48:33]  Verifer returned unsat in 36.138014 secs.
[02/01 04:48:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:48:33]  --------------------------------------------------------------------------------
[02/01 04:48:33]  Iteration: 246 (208 solution, 37 counterexamples)
[02/01 04:49:05]  Generator returned sat in 27.568121 secs.
[02/01 04:49:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 04:49:18]  Verifer returned unsat in 12.799823 secs.
[02/01 04:49:59]  Verifer returned unsat in 41.158783 secs.
[02/01 04:49:59]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 04:50:00]  --------------------------------------------------------------------------------
[02/01 04:50:00]  Iteration: 247 (209 solution, 37 counterexamples)
[02/01 04:50:31]  Generator returned sat in 27.605340 secs.
[02/01 04:50:31]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:50:43]  Verifer returned unsat in 11.525590 secs.
[02/01 04:51:12]  Verifer returned unsat in 29.274956 secs.
[02/01 04:51:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:51:13]  --------------------------------------------------------------------------------
[02/01 04:51:13]  Iteration: 248 (210 solution, 37 counterexamples)
[02/01 04:51:44]  Generator returned sat in 27.498182 secs.
[02/01 04:51:44]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:51:55]  Verifer returned unsat in 10.925924 secs.
[02/01 04:52:29]  Verifer returned unsat in 33.210700 secs.
[02/01 04:52:29]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:52:29]  --------------------------------------------------------------------------------
[02/01 04:52:29]  Iteration: 249 (211 solution, 37 counterexamples)
[02/01 04:53:00]  Generator returned sat in 27.657195 secs.
[02/01 04:53:01]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:53:10]  Verifer returned unsat in 9.556621 secs.
[02/01 04:53:28]  Verifer returned unsat in 17.254863 secs.
[02/01 04:53:28]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:53:28]  --------------------------------------------------------------------------------
[02/01 04:53:28]  Iteration: 250 (212 solution, 37 counterexamples)
[02/01 04:53:59]  Generator returned sat in 27.558015 secs.
[02/01 04:54:00]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:54:10]  Verifer returned unsat in 10.609167 secs.
[02/01 04:56:12]  Verifer returned unsat in 121.276573 secs.
[02/01 04:56:12]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 04:56:12]  --------------------------------------------------------------------------------
[02/01 04:56:12]  Iteration: 251 (213 solution, 37 counterexamples)
[02/01 04:56:44]  Generator returned sat in 27.709274 secs.
[02/01 04:56:44]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)[0m
[02/01 04:57:12]  Verifer returned unsat in 28.211500 secs.
[02/01 05:07:28]  Improved number of small numbers from 102 to 104 out of a max of 148
[02/01 05:07:28]  Verifer returned sat in 615.815800 secs.
[02/01 05:07:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -9.694553e+08       -9.694553e+08     -9.694553e+08       0.498535       0.498535     -9.694553e+08        0.000000                0.000000            78.0      116.285714                2.0  -1.005107e+08    0.000000          -1.0        0.000000 -9.694553e+08       3.0
1       -9.694551e+08       -9.694553e+08     -9.694551e+08  232571.428571     232.571429     -9.694553e+08        0.000000                0.000000            78.0      116.285714                0.0  -1.005107e+08  155.428571           0.0      132.571429 -9.694552e+08       0.0
2       -9.694549e+08       -9.694552e+08     -9.694549e+08  232726.857143     232.571429     -9.694552e+08        0.000000                0.000000            78.0      116.285714                0.0  -1.005107e+08  310.000000           0.0      265.142857 -9.694551e+08       1.0
3       -9.694546e+08       -9.694551e+08     -9.694546e+08  232881.428571     232.571429     -9.694551e+08      132.428571                0.000000            78.0      116.285714                0.0  -1.005107e+08  331.714286           0.0      265.285714 -9.694550e+08       1.0
4       -9.694544e+08       -9.694550e+08     -9.694544e+08  233035.571429     232.571429     -9.694550e+08      265.000000              132.428571            78.0      116.285714                1.0  -1.005107e+08  354.142857           1.0      265.285714 -9.694549e+08       2.0
5       -9.694542e+08       -9.694549e+08     -9.694542e+08  233190.571429     232.571429     -9.694549e+08      397.571429              265.000000            78.0      116.285714                1.0  -1.005107e+08  298.142857           1.0      265.285714 -9.694548e+08       2.0
6       -9.694539e+08       -9.694548e+08     -9.694539e+08  233267.142857     232.571429     -9.694548e+08      530.142857              397.571429            78.0      116.285714                2.0  -1.005107e+08  321.000000           1.0      265.285714 -9.694547e+08       3.0
7       -9.694537e+08       -9.694547e+08     -9.694537e+08  233422.571429     232.571429     -9.694547e+08      662.714286              530.142857            78.0      116.285714                2.0  -1.005107e+08  365.285714           1.0      265.285714 -9.694546e+08       3.0
8       -9.694535e+08       -9.694546e+08     -9.694535e+08  233599.428571     232.571429     -9.694546e+08      795.285714              662.714286            78.0      116.285714                2.0  -1.005107e+08  365.285496           1.0      265.285714 -9.694545e+08       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, 
, large_loss_count=6, loss_amount=5567/7, beliefs_remain_consistent=True, beliefs_improve=False, alpha=139/7, buf_size=1857/7, start_state=[0].[0m
[02/01 05:07:29]  --------------------------------------------------------------------------------
[02/01 05:07:29]  Iteration: 252 (213 solution, 38 counterexamples)
[02/01 05:21:41]  Generator returned sat in 845.963690 secs.
[02/01 05:21:42]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 05:22:37]  Improved number of small numbers from 102 to 102 out of a max of 138
[02/01 05:22:37]  Verifer returned sat in 55.628247 secs.
[02/01 05:22:38]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          1.076396e+08          1.076394e+08        1.076396e+08         0.997070         0.995605        1.076394e+08          0.000000                  0.000000         89.388889             149.5                  1.0  200.000000          -1.0       2.0
1          1.076398e+08          1.076395e+08        1.076398e+08    149116.666667       148.916667        1.076395e+08         48.916667                  0.000000         89.388889             149.5                  2.0  200.000000           1.0       3.0
2          1.076398e+08          1.076396e+08        1.076398e+08     74415.583333        74.166667        1.076396e+08         48.916667                 48.916667         89.388889             149.5                  2.0  174.166667           1.0       3.0
3          1.076399e+08          1.076397e+08        1.076399e+08     74389.750000        74.166667        1.076397e+08         48.916667                 48.916667         89.388889             149.5                  1.0  148.333333           1.0       2.0
4          1.076401e+08          1.076398e+08        1.076401e+08    149113.916667       148.916667        1.076398e+08         48.916667                 48.916667         89.388889             149.5                  0.0  197.250000           0.0       1.0
5          1.076402e+08          1.076399e+08        1.076402e+08    149162.833333       148.916667        1.076399e+08         95.083333                 48.916667         89.388889             149.5                  0.0  200.000000           0.0       1.0
6          1.076404e+08          1.076400e+08        1.076404e+08    149211.750000       148.916667        1.076400e+08        144.000000                 95.083333         89.388889             149.5                  0.0  200.000000           1.0       1.0
7          1.076405e+08          1.076401e+08        1.076405e+08    149260.666667       148.916667        1.076401e+08        192.916667                144.000000         89.388889             149.5                  1.0  200.000000           1.0       2.0
8          1.076407e+08          1.076402e+08        1.076407e+08    149309.583333       148.916667        1.076402e+08        241.833333                192.916667         89.388889             149.5                  1.0  200.000000           1.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=2315/12, beliefs_remain_consistent=True, beliefs_improve=False, alpha=137/9, buf_size=200, start_state=[0].[0m
[02/01 05:22:38]  --------------------------------------------------------------------------------
[02/01 05:22:38]  Iteration: 253 (213 solution, 39 counterexamples)
[02/01 05:44:13]  Generator returned sat in 1288.461076 secs.
[02/01 05:44:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:44:30]  Verifer returned unsat in 16.607254 secs.
[02/01 05:47:55]  Verifer returned unsat in 204.610488 secs.
[02/01 05:47:55]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:47:55]  --------------------------------------------------------------------------------
[02/01 05:47:55]  Iteration: 254 (214 solution, 39 counterexamples)
[02/01 05:48:45]  Generator returned sat in 46.040697 secs.
[02/01 05:48:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:49:30]  Verifer returned unsat in 45.167567 secs.
[02/01 05:53:29]  Verifer returned unsat in 238.071360 secs.
[02/01 05:53:29]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:53:29]  --------------------------------------------------------------------------------
[02/01 05:53:29]  Iteration: 255 (215 solution, 39 counterexamples)
[02/01 05:54:05]  Generator returned sat in 31.828139 secs.
[02/01 05:54:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:54:15]  Verifer returned unsat in 8.998001 secs.
[02/01 05:54:41]  Verifer returned unsat in 26.246252 secs.
[02/01 05:54:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:54:41]  --------------------------------------------------------------------------------
[02/01 05:54:41]  Iteration: 256 (216 solution, 39 counterexamples)
[02/01 05:55:17]  Generator returned sat in 31.723110 secs.
[02/01 05:55:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:55:25]  Verifer returned unsat in 8.109918 secs.
[02/01 05:55:56]  Verifer returned unsat in 30.115046 secs.
[02/01 05:55:56]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:55:56]  --------------------------------------------------------------------------------
[02/01 05:55:56]  Iteration: 257 (217 solution, 39 counterexamples)
[02/01 05:56:32]  Generator returned sat in 31.699301 secs.
[02/01 05:56:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:56:48]  Verifer returned unsat in 15.495404 secs.
[02/01 05:57:05]  Verifer returned unsat in 17.559821 secs.
[02/01 05:57:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + 3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:57:06]  --------------------------------------------------------------------------------
[02/01 05:57:06]  Iteration: 258 (218 solution, 39 counterexamples)
[02/01 05:57:41]  Generator returned sat in 31.815077 secs.
[02/01 05:57:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 05:57:59]  Verifer returned unsat in 17.394114 secs.
[02/01 06:00:46]  Verifer returned unsat in 166.174589 secs.
[02/01 06:00:46]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 06:00:46]  --------------------------------------------------------------------------------
[02/01 06:00:46]  Iteration: 259 (219 solution, 39 counterexamples)
[02/01 06:15:49]  Generator returned sat in 899.220239 secs.
[02/01 06:15:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)[0m
[02/01 06:16:14]  Verifer returned unsat in 24.527633 secs.
[02/01 06:16:38]  Improved number of small numbers from 102 to 104 out of a max of 148
[02/01 06:16:38]  Verifer returned sat in 23.133814 secs.
[02/01 06:16:38]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -9.702726e+08       -9.702728e+08     -9.702726e+08       0.498535       0.498535     -9.702728e+08        0.000000                0.000000       77.916667      116.111111                5.0  -1.005107e+08  156.527778          -1.0      156.527778 -9.702728e+08       6.0
1       -9.702725e+08       -9.702727e+08     -9.702725e+08   97170.416667      97.013889     -9.702727e+08        0.000000                0.000000       77.916667      116.111111                5.0  -1.005107e+08  175.625000           1.0      153.541667 -9.702727e+08       6.0
2       -9.702724e+08       -9.702726e+08     -9.702724e+08   97189.513889      97.013889     -9.702726e+08        0.000000                0.000000       77.916667      116.111111                5.0  -1.005107e+08  194.027778           1.0      150.555556 -9.702726e+08       6.0
3       -9.702723e+08       -9.702725e+08     -9.702723e+08   97207.916667      97.013889     -9.702725e+08        0.000000                0.000000       77.916667      116.111111                0.0  -1.005107e+08  193.888889           0.0      147.569444 -9.702725e+08       1.0
4       -9.702719e+08       -9.702724e+08     -9.702719e+08  388249.444444     388.055556     -9.702724e+08        0.000000                0.000000       77.916667      116.111111                0.0  -1.005107e+08  484.930556           0.0      435.625000 -9.702724e+08       1.0
5       -9.702716e+08       -9.702723e+08     -9.702716e+08  388540.486111     388.055556     -9.702723e+08      123.819444                0.000000       77.916667      116.111111                0.0  -1.005107e+08  632.361111           0.0      599.861111 -9.702723e+08       1.0
6       -9.702712e+08       -9.702722e+08     -9.702712e+08  388811.736111     388.055556     -9.702722e+08      411.875000              123.819444       77.916667      116.111111                1.0  -1.005107e+08  654.444444           1.0      599.861111 -9.702722e+08       2.0
7       -9.702708e+08       -9.702722e+08     -9.702708e+08  389121.875000     388.055556     -9.702722e+08      699.930556              411.875000       77.916667      116.111111                2.0  -1.005107e+08  677.638889           1.0      599.861111 -9.702721e+08       3.0
8       -9.702707e+08       -9.702721e+08     -9.702707e+08   98391.458333      97.013889     -9.702721e+08      699.930556              699.930556       77.916667      116.111111                3.0  -1.005107e+08  696.874827           1.0      596.875000 -9.702720e+08       4.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=3, loss_amount=50395/72, beliefs_remain_consistent=True, beliefs_improve=False, alpha=10169/512, buf_size=21595/36, start_state=[0].[0m
[02/01 06:16:38]  --------------------------------------------------------------------------------
[02/01 06:16:38]  Iteration: 260 (219 solution, 40 counterexamples)
[02/01 06:24:45]  Generator returned sat in 483.545723 secs.
[02/01 06:24:46]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
elif (+ -3/2min_c + 1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 06:25:00]  Improved number of small numbers from 79 to 79 out of a max of 138
[02/01 06:25:00]  Verifer returned sat in 13.958956 secs.
[02/01 06:25:00]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0          1.073224e+08          1.073223e+08        1.073224e+08         0.997070         0.995605        1.073223e+08          0.995605                  0.000000         89.100529        114.074074                  0.0  99.004395          -1.0       0.0
1          1.073228e+08          1.073224e+08        1.073228e+08    406449.206349       406.349206        1.073224e+08        307.344812                  0.995605         89.100529        114.074074                  0.0  99.004395           1.0       0.0
2          1.073232e+08          1.073225e+08        1.073232e+08    406755.555556       406.349206        1.073225e+08        613.694018                307.344812         89.100529        114.074074                  0.0  99.004395           1.0       0.0
3          1.073236e+08          1.073226e+08        1.073236e+08    407061.904762       406.349206        1.073226e+08        920.043225                613.694018         89.100529        114.074074                  0.0  99.004395           1.0       0.0
4          1.073241e+08          1.073227e+08        1.073241e+08    407368.253968       406.349206        1.073227e+08       1226.392431                920.043225         89.100529        114.074074                  0.0  99.004395           1.0       0.0
5          1.073245e+08          1.073228e+08        1.073245e+08    407674.603175       406.349206        1.073228e+08       1532.741637               1226.392431         89.100529        114.074074                  0.0  99.004395           1.0       0.0
6          1.073249e+08          1.073229e+08        1.073249e+08    407980.952381       406.349206        1.073229e+08       1839.090844               1532.741637         89.100529        114.074074                  0.0  99.004395           1.0       0.0
7          1.073253e+08          1.073230e+08        1.073253e+08    408287.301587       406.349206        1.073230e+08       2145.440050               1839.090844         89.100529        114.074074                  0.0  99.004395           1.0       0.0
8          1.073257e+08          1.073231e+08        1.073257e+08    408593.650794       406.349206        1.073231e+08       2451.789256               2145.440050         89.100529        114.074074                  0.0  99.004395           1.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=8, loss_amount=19300/9, beliefs_remain_consistent=True, beliefs_improve=False, alpha=3740/189, buf_size=202761/2048, start_state=[0].[0m
[02/01 06:25:00]  --------------------------------------------------------------------------------
[02/01 06:25:00]  Iteration: 261 (219 solution, 41 counterexamples)
[02/01 07:01:44]  Generator returned sat in 2199.900697 secs.
[02/01 07:01:45]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 07:02:31]  Improved number of small numbers from 104 to 104 out of a max of 138
[02/01 07:02:31]  Verifer returned sat in 46.008221 secs.
[02/01 07:02:31]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          1.073224e+08          1.073223e+08        1.073224e+08         0.997070         0.995361        1.073223e+08              0.00                       0.0         88.666667        144.833333                  8.0  104.833333          -1.0       9.0
1          1.073225e+08          1.073224e+08        1.073225e+08     44438.166667        44.333333        1.073224e+08              0.00                       0.0         88.666667        144.833333                  3.0   49.166667           1.0       4.0
2          1.073225e+08          1.073225e+08        1.073225e+08     44382.500000        44.333333        1.073225e+08              0.00                       0.0         88.666667        144.833333                  0.0    0.000000           0.0       0.0
3          1.073228e+08          1.073226e+08        1.073228e+08    249750.000000       249.750000        1.073226e+08              0.00                       0.0         88.666667        144.833333                  0.0  149.750000           0.0       0.0
4          1.073230e+08          1.073227e+08        1.073230e+08    249899.750000       249.750000        1.073227e+08              0.00                       0.0         88.666667        144.833333                  0.0  299.500000           0.0       1.0
5          1.073233e+08          1.073228e+08        1.073233e+08    250049.500000       249.750000        1.073228e+08              0.00                       0.0         88.666667        144.833333                  0.0  449.250000           0.0       1.0
6          1.073235e+08          1.073229e+08        1.073235e+08    250199.250000       249.750000        1.073229e+08              0.00                       0.0         88.666667        144.833333                  1.0  599.000000           1.0       2.0
7          1.073238e+08          1.073230e+08        1.073238e+08    250349.000000       249.750000        1.073230e+08              0.00                       0.0         88.666667        144.833333                  1.0  748.750000           1.0       2.0
8          1.073240e+08          1.073231e+08        1.073240e+08    250498.750000       249.750000        1.073231e+08             49.25                       0.0         88.666667        144.833333                  2.0  849.250000           1.0       3.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=197/4, beliefs_remain_consistent=True, beliefs_improve=False, alpha=65/4, buf_size=3397/4, start_state=[0].[0m
[02/01 07:02:31]  --------------------------------------------------------------------------------
[02/01 07:02:31]  Iteration: 262 (219 solution, 42 counterexamples)
[02/01 07:18:58]  Generator returned sat in 982.383586 secs.
[02/01 07:18:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 07:19:10]  Verifer returned unsat in 11.515636 secs.
[02/01 07:19:35]  Verifer returned unsat in 25.012000 secs.
[02/01 07:19:36]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 07:19:36]  --------------------------------------------------------------------------------
[02/01 07:19:36]  Iteration: 263 (220 solution, 42 counterexamples)
[02/01 07:20:17]  Generator returned sat in 37.594539 secs.
[02/01 07:20:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 07:20:39]  Verifer returned unsat in 21.302633 secs.
[02/01 07:21:11]  Verifer returned unsat in 31.951461 secs.
[02/01 07:21:12]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 07:21:12]  --------------------------------------------------------------------------------
[02/01 07:21:12]  Iteration: 264 (221 solution, 42 counterexamples)
[02/01 07:21:52]  Generator returned sat in 36.113897 secs.
[02/01 07:21:52]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 07:22:00]  Verifer returned unsat in 7.274322 secs.
[02/01 07:22:29]  Verifer returned unsat in 28.662958 secs.
[02/01 07:22:29]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 07:22:29]  --------------------------------------------------------------------------------
[02/01 07:22:29]  Iteration: 265 (222 solution, 42 counterexamples)
[02/01 07:23:26]  Generator returned sat in 53.185737 secs.
[02/01 07:23:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 07:24:04]  Verifer returned unsat in 37.617602 secs.
[02/01 07:24:33]  Verifer returned unsat in 27.880091 secs.
[02/01 07:24:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 07:24:33]  --------------------------------------------------------------------------------
[02/01 07:24:33]  Iteration: 266 (223 solution, 42 counterexamples)
[02/01 07:25:12]  Generator returned sat in 35.215529 secs.
[02/01 07:25:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[02/01 07:25:23]  Verifer returned unsat in 9.949838 secs.
[02/01 07:27:43]  Verifer returned unsat in 139.846848 secs.
[02/01 07:27:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)[0m
[02/01 07:27:43]  --------------------------------------------------------------------------------
[02/01 07:27:43]  Iteration: 267 (224 solution, 42 counterexamples)
[02/01 07:28:23]  Generator returned sat in 35.394288 secs.
[02/01 07:28:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 07:28:44]  Verifer returned unsat in 21.077194 secs.
[02/01 07:30:00]  Verifer returned unsat in 75.414325 secs.
[02/01 07:30:00]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 07:30:00]  --------------------------------------------------------------------------------
[02/01 07:30:00]  Iteration: 268 (225 solution, 42 counterexamples)
[02/01 07:30:39]  Generator returned sat in 34.291925 secs.
[02/01 07:30:39]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 07:30:49]  Verifer returned unsat in 9.356838 secs.
[02/01 07:31:44]  Verifer returned unsat in 55.451724 secs.
[02/01 07:31:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)[0m
[02/01 07:31:45]  --------------------------------------------------------------------------------
[02/01 07:31:45]  Iteration: 269 (226 solution, 42 counterexamples)
[02/01 07:32:23]  Generator returned sat in 34.662659 secs.
[02/01 07:32:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 07:32:32]  Verifer returned unsat in 7.699848 secs.
[02/01 07:37:14]  Verifer returned unsat in 282.127807 secs.
[02/01 07:37:14]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 07:37:14]  --------------------------------------------------------------------------------
[02/01 07:37:14]  Iteration: 270 (227 solution, 42 counterexamples)
[02/01 07:37:53]  Generator returned sat in 34.477843 secs.
[02/01 07:37:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 07:38:05]  Verifer returned unsat in 11.892228 secs.
[02/01 07:38:53]  Verifer returned unsat in 47.749366 secs.
[02/01 07:38:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 07:38:54]  --------------------------------------------------------------------------------
[02/01 07:38:54]  Iteration: 271 (228 solution, 42 counterexamples)
[02/01 07:39:32]  Generator returned sat in 34.631630 secs.
[02/01 07:39:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[02/01 07:39:47]  Verifer returned unsat in 13.908153 secs.
[02/01 07:40:11]  Verifer returned unsat in 24.351345 secs.
[02/01 07:40:12]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)[0m
[02/01 07:40:12]  --------------------------------------------------------------------------------
[02/01 07:40:12]  Iteration: 272 (229 solution, 42 counterexamples)
[02/01 07:40:51]  Generator returned sat in 35.725221 secs.
[02/01 07:40:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[02/01 07:40:59]  Verifer returned unsat in 6.656328 secs.
[02/01 08:20:55]  Verifer returned unsat in 2395.627265 secs.
[02/01 08:20:55]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)[0m
[02/01 08:20:55]  --------------------------------------------------------------------------------
[02/01 08:20:55]  Iteration: 273 (230 solution, 42 counterexamples)
[02/01 08:30:56]  Generator returned sat in 594.270047 secs.
[02/01 08:30:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:31:12]  Verifer returned unsat in 14.606497 secs.
[02/01 08:34:16]  Verifer returned unsat in 183.855977 secs.
[02/01 08:34:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:34:16]  --------------------------------------------------------------------------------
[02/01 08:34:16]  Iteration: 274 (231 solution, 42 counterexamples)
[02/01 08:35:17]  Generator returned sat in 54.220694 secs.
[02/01 08:35:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:35:52]  Verifer returned unsat in 33.763328 secs.
[02/01 08:38:39]  Verifer returned unsat in 166.622468 secs.
[02/01 08:38:39]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:38:39]  --------------------------------------------------------------------------------
[02/01 08:38:39]  Iteration: 275 (232 solution, 42 counterexamples)
[02/01 08:39:40]  Generator returned sat in 54.273180 secs.
[02/01 08:39:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:39:54]  Verifer returned unsat in 13.303252 secs.
[02/01 08:40:45]  Verifer returned unsat in 50.061820 secs.
[02/01 08:40:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:40:45]  --------------------------------------------------------------------------------
[02/01 08:40:45]  Iteration: 276 (233 solution, 42 counterexamples)
[02/01 08:41:46]  Generator returned sat in 54.355648 secs.
[02/01 08:41:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:42:11]  Verifer returned unsat in 23.943144 secs.
[02/01 08:42:57]  Verifer returned unsat in 46.346499 secs.
[02/01 08:42:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:42:58]  --------------------------------------------------------------------------------
[02/01 08:42:58]  Iteration: 277 (234 solution, 42 counterexamples)
[02/01 08:43:59]  Generator returned sat in 54.151349 secs.
[02/01 08:43:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:44:11]  Verifer returned unsat in 11.702853 secs.
[02/01 08:44:59]  Verifer returned unsat in 47.536213 secs.
[02/01 08:44:59]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:45:00]  --------------------------------------------------------------------------------
[02/01 08:45:00]  Iteration: 278 (235 solution, 42 counterexamples)
[02/01 08:46:00]  Generator returned sat in 54.228724 secs.
[02/01 08:46:01]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 08:46:38]  Verifer returned unsat in 36.748402 secs.
[02/01 09:13:33]  Verifer returned unsat in 1614.586905 secs.
[02/01 09:13:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:13:33]  --------------------------------------------------------------------------------
[02/01 09:13:33]  Iteration: 279 (236 solution, 42 counterexamples)
[02/01 09:14:34]  Generator returned sat in 53.757516 secs.
[02/01 09:14:35]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:14:56]  Verifer returned unsat in 21.173028 secs.
[02/01 09:16:25]  Verifer returned unsat in 88.446650 secs.
[02/01 09:16:25]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:16:25]  --------------------------------------------------------------------------------
[02/01 09:16:25]  Iteration: 280 (237 solution, 42 counterexamples)
[02/01 09:17:26]  Generator returned sat in 54.242821 secs.
[02/01 09:17:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:17:40]  Verifer returned unsat in 13.513733 secs.
[02/01 09:18:31]  Verifer returned unsat in 50.303985 secs.
[02/01 09:18:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:18:31]  --------------------------------------------------------------------------------
[02/01 09:18:31]  Iteration: 281 (238 solution, 42 counterexamples)
[02/01 09:19:32]  Generator returned sat in 53.734272 secs.
[02/01 09:19:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:19:48]  Verifer returned unsat in 15.909436 secs.
[02/01 09:20:31]  Verifer returned unsat in 42.272996 secs.
[02/01 09:20:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:20:31]  --------------------------------------------------------------------------------
[02/01 09:20:31]  Iteration: 282 (239 solution, 42 counterexamples)
[02/01 09:21:32]  Generator returned sat in 53.962216 secs.
[02/01 09:21:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:21:53]  Verifer returned unsat in 19.933815 secs.
[02/01 09:33:06]  Verifer returned unsat in 672.647291 secs.
[02/01 09:33:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:33:06]  --------------------------------------------------------------------------------
[02/01 09:33:06]  Iteration: 283 (240 solution, 42 counterexamples)
[02/01 09:34:07]  Generator returned sat in 54.077890 secs.
[02/01 09:34:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:34:50]  Verifer returned unsat in 42.766244 secs.
[02/01 09:39:22]  Verifer returned unsat in 270.800546 secs.
[02/01 09:39:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:39:22]  --------------------------------------------------------------------------------
[02/01 09:39:22]  Iteration: 284 (241 solution, 42 counterexamples)
[02/01 09:40:03]  Generator returned sat in 37.445488 secs.
[02/01 09:40:04]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:40:55]  Verifer returned unsat in 50.536701 secs.
[02/01 09:41:18]  Verifer returned unsat in 23.017456 secs.
[02/01 09:41:18]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:41:18]  --------------------------------------------------------------------------------
[02/01 09:41:18]  Iteration: 285 (242 solution, 42 counterexamples)
[02/01 09:42:00]  Generator returned sat in 37.402078 secs.
[02/01 09:42:00]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:42:15]  Verifer returned unsat in 14.497608 secs.
[02/01 09:46:18]  Verifer returned unsat in 243.008800 secs.
[02/01 09:46:18]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:46:18]  --------------------------------------------------------------------------------
[02/01 09:46:18]  Iteration: 286 (243 solution, 42 counterexamples)
[02/01 09:47:00]  Generator returned sat in 37.629029 secs.
[02/01 09:47:00]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:47:07]  Verifer returned unsat in 6.110502 secs.
[02/01 09:47:37]  Verifer returned unsat in 29.599100 secs.
[02/01 09:47:37]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:47:37]  --------------------------------------------------------------------------------
[02/01 09:47:37]  Iteration: 287 (244 solution, 42 counterexamples)
[02/01 09:48:18]  Generator returned sat in 37.448339 secs.
[02/01 09:48:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:48:50]  Verifer returned unsat in 30.590854 secs.
[02/01 09:50:42]  Verifer returned unsat in 112.627696 secs.
[02/01 09:50:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:50:43]  --------------------------------------------------------------------------------
[02/01 09:50:43]  Iteration: 288 (245 solution, 42 counterexamples)
[02/01 09:51:24]  Generator returned sat in 37.535024 secs.
[02/01 09:51:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:51:37]  Verifer returned unsat in 11.789115 secs.
[02/01 09:54:48]  Verifer returned unsat in 190.754291 secs.
[02/01 09:54:48]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:54:48]  --------------------------------------------------------------------------------
[02/01 09:54:48]  Iteration: 289 (246 solution, 42 counterexamples)
[02/01 09:55:30]  Generator returned sat in 37.324769 secs.
[02/01 09:55:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:55:57]  Verifer returned unsat in 27.175588 secs.
[02/01 09:56:40]  Verifer returned unsat in 42.064605 secs.
[02/01 09:56:40]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:56:40]  --------------------------------------------------------------------------------
[02/01 09:56:40]  Iteration: 290 (247 solution, 42 counterexamples)
[02/01 09:57:21]  Generator returned sat in 37.345540 secs.
[02/01 09:57:22]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:57:33]  Verifer returned unsat in 11.223431 secs.
[02/01 09:58:14]  Verifer returned unsat in 40.960263 secs.
[02/01 09:58:15]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:58:15]  --------------------------------------------------------------------------------
[02/01 09:58:15]  Iteration: 291 (248 solution, 42 counterexamples)
[02/01 09:58:56]  Generator returned sat in 37.333831 secs.
[02/01 09:58:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:59:17]  Verifer returned unsat in 20.390196 secs.
[02/01 09:59:55]  Verifer returned unsat in 37.957232 secs.
[02/01 09:59:56]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 09:59:56]  --------------------------------------------------------------------------------
[02/01 09:59:56]  Iteration: 292 (249 solution, 42 counterexamples)
[02/01 10:00:37]  Generator returned sat in 37.602586 secs.
[02/01 10:00:38]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:01:01]  Verifer returned unsat in 22.486545 secs.
[02/01 10:03:26]  Verifer returned unsat in 145.612892 secs.
[02/01 10:03:27]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:03:27]  --------------------------------------------------------------------------------
[02/01 10:03:27]  Iteration: 293 (250 solution, 42 counterexamples)
[02/01 10:04:08]  Generator returned sat in 37.428261 secs.
[02/01 10:04:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:04:22]  Verifer returned unsat in 13.389543 secs.
[02/01 10:06:21]  Verifer returned unsat in 118.003808 secs.
[02/01 10:06:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:06:21]  --------------------------------------------------------------------------------
[02/01 10:06:21]  Iteration: 294 (251 solution, 42 counterexamples)
[02/01 10:07:02]  Generator returned sat in 37.351314 secs.
[02/01 10:07:03]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:07:14]  Verifer returned unsat in 11.362760 secs.
[02/01 10:07:35]  Verifer returned unsat in 20.495892 secs.
[02/01 10:07:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1/2min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:07:35]  --------------------------------------------------------------------------------
[02/01 10:07:35]  Iteration: 295 (252 solution, 42 counterexamples)
[02/01 10:08:17]  Generator returned sat in 37.731462 secs.
[02/01 10:08:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:08:29]  Verifer returned unsat in 10.842915 secs.
[02/01 10:09:43]  Verifer returned unsat in 74.490762 secs.
[02/01 10:09:44]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:09:44]  --------------------------------------------------------------------------------
[02/01 10:09:44]  Iteration: 296 (253 solution, 42 counterexamples)
[02/01 10:10:24]  Generator returned sat in 36.682149 secs.
[02/01 10:10:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:10:36]  Verifer returned unsat in 11.406127 secs.
[02/01 10:11:06]  Verifer returned unsat in 29.082114 secs.
[02/01 10:11:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:11:06]  --------------------------------------------------------------------------------
[02/01 10:11:06]  Iteration: 297 (254 solution, 42 counterexamples)
[02/01 10:11:47]  Generator returned sat in 36.603287 secs.
[02/01 10:11:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:11:55]  Verifer returned unsat in 7.862280 secs.
[02/01 10:12:40]  Verifer returned unsat in 44.768459 secs.
[02/01 10:12:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:12:41]  --------------------------------------------------------------------------------
[02/01 10:12:41]  Iteration: 298 (255 solution, 42 counterexamples)
[02/01 10:13:38]  Generator returned sat in 52.839110 secs.
[02/01 10:13:39]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:13:53]  Verifer returned unsat in 14.649954 secs.
[02/01 10:14:30]  Verifer returned unsat in 36.333032 secs.
[02/01 10:14:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:14:31]  --------------------------------------------------------------------------------
[02/01 10:14:31]  Iteration: 299 (256 solution, 42 counterexamples)
[02/01 10:15:32]  Generator returned sat in 54.694424 secs.
[02/01 10:15:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:16:01]  Verifer returned unsat in 28.329695 secs.
[02/01 10:41:19]  Verifer returned unsat in 1517.218618 secs.
[02/01 10:41:19]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:41:19]  --------------------------------------------------------------------------------
[02/01 10:41:19]  Iteration: 300 (257 solution, 42 counterexamples)
[02/01 10:42:02]  Generator returned sat in 38.294618 secs.
[02/01 10:42:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:42:14]  Verifer returned unsat in 11.324126 secs.
[02/01 10:43:36]  Verifer returned unsat in 82.172093 secs.
[02/01 10:43:36]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:43:36]  --------------------------------------------------------------------------------
[02/01 10:43:36]  Iteration: 301 (258 solution, 42 counterexamples)
[02/01 10:44:19]  Generator returned sat in 37.812363 secs.
[02/01 10:44:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:44:36]  Verifer returned unsat in 16.561515 secs.
[02/01 10:48:30]  Verifer returned unsat in 234.394441 secs.
[02/01 10:48:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:48:31]  --------------------------------------------------------------------------------
[02/01 10:48:31]  Iteration: 302 (259 solution, 42 counterexamples)
[02/01 10:49:12]  Generator returned sat in 37.347375 secs.
[02/01 10:49:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:49:39]  Verifer returned unsat in 26.151948 secs.
[02/01 10:52:58]  Verifer returned unsat in 198.080842 secs.
[02/01 10:52:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:52:58]  --------------------------------------------------------------------------------
[02/01 10:52:58]  Iteration: 303 (260 solution, 42 counterexamples)
[02/01 10:53:39]  Generator returned sat in 37.385331 secs.
[02/01 10:53:40]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:53:50]  Verifer returned unsat in 10.373723 secs.
[02/01 10:54:27]  Verifer returned unsat in 36.307494 secs.
[02/01 10:54:27]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:54:27]  --------------------------------------------------------------------------------
[02/01 10:54:27]  Iteration: 304 (261 solution, 42 counterexamples)
[02/01 10:55:09]  Generator returned sat in 37.349981 secs.
[02/01 10:55:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:55:18]  Verifer returned unsat in 8.975322 secs.
[02/01 10:55:41]  Verifer returned unsat in 22.054349 secs.
[02/01 10:55:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:55:41]  --------------------------------------------------------------------------------
[02/01 10:55:41]  Iteration: 305 (262 solution, 42 counterexamples)
[02/01 10:56:22]  Generator returned sat in 37.322121 secs.
[02/01 10:56:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:56:30]  Verifer returned unsat in 7.421948 secs.
[02/01 10:57:51]  Verifer returned unsat in 80.386318 secs.
[02/01 10:57:51]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1/2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:57:51]  --------------------------------------------------------------------------------
[02/01 10:57:51]  Iteration: 306 (263 solution, 42 counterexamples)
[02/01 10:58:33]  Generator returned sat in 37.478684 secs.
[02/01 10:58:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 10:58:46]  Verifer returned unsat in 12.844996 secs.
[02/01 11:01:52]  Verifer returned unsat in 185.062507 secs.
[02/01 11:01:52]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + -3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:01:52]  --------------------------------------------------------------------------------
[02/01 11:01:52]  Iteration: 307 (264 solution, 42 counterexamples)
[02/01 11:02:33]  Generator returned sat in 37.389560 secs.
[02/01 11:02:34]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:03:00]  Verifer returned unsat in 26.019923 secs.
[02/01 11:04:04]  Verifer returned unsat in 63.628672 secs.
[02/01 11:04:04]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + -3/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:04:04]  --------------------------------------------------------------------------------
[02/01 11:04:04]  Iteration: 308 (265 solution, 42 counterexamples)
[02/01 11:04:49]  Generator returned sat in 40.381821 secs.
[02/01 11:04:49]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:05:15]  Verifer returned unsat in 25.848156 secs.
[02/01 11:44:41]  Verifer returned unsat in 2366.023592 secs.
[02/01 11:44:42]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1/2max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:44:42]  --------------------------------------------------------------------------------
[02/01 11:44:42]  Iteration: 309 (266 solution, 42 counterexamples)
[02/01 11:45:26]  Generator returned sat in 40.402126 secs.
[02/01 11:45:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:45:50]  Verifer returned unsat in 23.350017 secs.
[02/01 11:47:45]  Verifer returned unsat in 114.085553 secs.
[02/01 11:47:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:47:45]  --------------------------------------------------------------------------------
[02/01 11:47:45]  Iteration: 310 (267 solution, 42 counterexamples)
[02/01 11:48:29]  Generator returned sat in 39.447696 secs.
[02/01 11:48:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 11:48:41]  Verifer returned unsat in 11.813417 secs.
[02/01 11:49:00]  Verifer returned unsat in 18.736575 secs.
[02/01 11:49:00]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 11:49:00]  --------------------------------------------------------------------------------
[02/01 11:49:00]  Iteration: 311 (268 solution, 42 counterexamples)
[02/01 11:49:45]  Generator returned sat in 40.413855 secs.
[02/01 11:49:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 11:50:00]  Verifer returned unsat in 14.660250 secs.
[02/01 11:50:23]  Verifer returned unsat in 22.655746 secs.
[02/01 11:50:23]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 11:50:23]  --------------------------------------------------------------------------------
[02/01 11:50:23]  Iteration: 312 (269 solution, 42 counterexamples)
[02/01 11:51:06]  Generator returned sat in 38.205266 secs.
[02/01 11:51:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 11:51:25]  Verifer returned unsat in 18.270684 secs.
[02/01 11:53:15]  Verifer returned unsat in 110.510945 secs.
[02/01 11:53:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 11:53:16]  --------------------------------------------------------------------------------
[02/01 11:53:16]  Iteration: 313 (270 solution, 42 counterexamples)
[02/01 11:54:00]  Generator returned sat in 40.393006 secs.
[02/01 11:54:01]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 11:54:17]  Verifer returned unsat in 16.476618 secs.
[02/01 11:55:24]  Verifer returned unsat in 66.366864 secs.
[02/01 11:55:24]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 11:55:24]  --------------------------------------------------------------------------------
[02/01 11:55:24]  Iteration: 314 (271 solution, 42 counterexamples)
[02/01 11:57:37]  Generator returned sat in 128.040400 secs.
[02/01 11:57:37]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + -2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)[0m
[02/01 11:57:49]  Improved number of small numbers from 102 to 138 out of a max of 138
[02/01 11:57:49]  Verifer returned sat in 12.140173 secs.
[02/01 11:57:50]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          1.056890e+08          1.056888e+08        1.056890e+08          0.99707         0.995117        1.056888e+08          0.499756                  0.000000              94.5             150.0                  3.0  224.500244          -1.0       4.0
1          1.056891e+08          1.056889e+08        1.056891e+08      75225.00000        75.000000        1.056889e+08          0.499756                  0.499756              94.5             150.0                  3.0  199.500244           1.0       4.0
2          1.056892e+08          1.056890e+08        1.056892e+08      75200.00000        75.000000        1.056890e+08          0.499756                  0.499756              94.5             150.0                  4.0  174.500244           1.0       5.0
3          1.056892e+08          1.056891e+08        1.056892e+08      75175.00000        75.000000        1.056891e+08          0.499756                  0.499756              94.5             150.0                  0.0  149.500244           0.0       1.0
4          1.056896e+08          1.056892e+08        1.056896e+08     339150.00000       339.000000        1.056892e+08          0.499756                  0.499756              94.5             150.0                  0.0  388.500244           0.0       1.0
5          1.056899e+08          1.056893e+08        1.056899e+08     339389.00000       339.000000        1.056893e+08          1.000000                  0.499756              94.5             150.0                  0.0  627.000000           0.0       1.0
6          1.056902e+08          1.056894e+08        1.056902e+08     339628.00000       339.000000        1.056894e+08        240.000000                  1.000000              94.5             150.0                  1.0  627.000000           1.0       2.0
7          1.056906e+08          1.056895e+08        1.056906e+08     339867.00000       339.000000        1.056895e+08        479.000000                240.000000              94.5             150.0                  2.0  627.000000           1.0       3.0
8          1.056909e+08          1.056896e+08        1.056909e+08     340106.00000       339.000000        1.056896e+08        718.000000                479.000000              94.5             150.0                  2.0  627.000000           1.0       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=2938881/4096, beliefs_remain_consistent=True, beliefs_improve=False, alpha=39/2, buf_size=627, start_state=[0].[0m
[02/01 11:57:50]  --------------------------------------------------------------------------------
[02/01 11:57:50]  Iteration: 315 (271 solution, 43 counterexamples)
[02/01 12:10:38]  Generator returned sat in 763.894992 secs.
[02/01 12:10:38]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1R > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
elif (+ 2min_c + -1max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)[0m
[02/01 12:11:03]  Improved number of small numbers from 138 to 138 out of a max of 138
[02/01 12:11:03]  Verifer returned sat in 24.240387 secs.
[02/01 12:11:03]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t    queue_t  utilized_0,t  qdelay_t
0          1.059874e+08          1.059874e+08        1.059874e+08         0.997070         0.995117        1.059874e+08               0.0                       0.0         40.995117             100.0                  0.0  21.043945          -1.0       1.0
1          1.059874e+08          1.059874e+08        1.059874e+08     41016.161133        40.995117        1.059874e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
2          1.059875e+08          1.059875e+08        1.059875e+08     40995.117188        40.995117        1.059875e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
3          1.059875e+08          1.059875e+08        1.059875e+08     40995.117188        40.995117        1.059875e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
4          1.059876e+08          1.059876e+08        1.059876e+08     40995.117188        40.995117        1.059876e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
5          1.059876e+08          1.059876e+08        1.059876e+08     40995.117188        40.995117        1.059876e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
6          1.059877e+08          1.059877e+08        1.059877e+08     40995.117188        40.995117        1.059877e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
7          1.059877e+08          1.059877e+08        1.059877e+08     40995.117188        40.995117        1.059877e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
8          1.059877e+08          1.059877e+08        1.059877e+08     40995.117188        40.995117        1.059877e+08               0.0                       0.0         40.995117             100.0                  0.0   0.000000           0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19461/1024, buf_size=21549/1024, start_state=[0].[0m
[02/01 12:11:03]  --------------------------------------------------------------------------------
[02/01 12:11:03]  Iteration: 316 (271 solution, 44 counterexamples)
[02/01 13:06:41]  Generator returned sat in 3333.575410 secs.
[02/01 13:06:42]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
elif (+ -1min_qdel + 2R > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c)[0m
[02/01 13:06:55]  Verifer returned unsat in 13.340915 secs.
[02/01 13:08:34]  Improved number of small numbers from 102 to 148 out of a max of 148
[02/01 13:08:34]  Verifer returned sat in 99.160711 secs.
[02/01 13:08:35]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__wasted_t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -9.725446e+08       -9.725446e+08     -9.725446e+08       0.498535       0.498535     -9.725446e+08        0.000000                0.000000       80.498535           125.0                0.0  -1.005120e+08    0.000000          -1.0       -6.994141 -9.725446e+08       0.0
1       -9.725444e+08       -9.725445e+08     -9.725444e+08  227749.267578     227.749268     -9.725445e+08        0.000000                0.000000       80.498535           125.0                0.0  -1.005120e+08  120.755127           0.0      120.755127 -9.725445e+08       0.0
2       -9.725441e+08       -9.725444e+08     -9.725441e+08  227870.022705     227.749268     -9.725444e+08        0.000000                0.000000       80.498535           125.0                0.0  -1.005120e+08  248.504395           0.0      248.504395 -9.725444e+08       1.0
3       -9.725439e+08       -9.725443e+08     -9.725439e+08  227997.771973     227.749268     -9.725443e+08        0.000000                0.000000       80.498535           125.0                0.0  -1.005120e+08  376.253662           0.0      376.253662 -9.725443e+08       1.0
4       -9.725437e+08       -9.725443e+08     -9.725437e+08  228125.521240     227.749268     -9.725443e+08        0.000000                0.000000       80.498535           125.0                0.0  -1.005120e+08  604.002930           0.0      504.002930 -9.725442e+08       1.0
5       -9.725435e+08       -9.725441e+08     -9.725435e+08  228353.270508     227.749268     -9.725441e+08        0.000000                0.000000       80.498535           125.0                1.0  -1.005120e+08  682.749268           1.0      631.752197 -9.725441e+08       2.0
6       -9.725432e+08       -9.725441e+08     -9.725432e+08  228432.016846     227.749268     -9.725441e+08        0.498535                0.000000       80.498535           125.0                2.0  -1.005120e+08  859.002930           1.0      759.002930 -9.725440e+08       3.0
7       -9.725430e+08       -9.725440e+08     -9.725430e+08  228608.769043     227.749268     -9.725440e+08      128.247803                0.498535       80.498535           125.0                3.0  -1.005120e+08  859.002930           1.0      759.002930 -9.725439e+08       4.0
8       -9.725428e+08       -9.725439e+08     -9.725428e+08  228736.518311     227.749268     -9.725439e+08      255.997070              128.247803       80.498535           125.0                3.0  -1.005120e+08  859.002930           1.0      759.002930 -9.725438e+08       4.0
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=2, loss_amount=262141/1024, beliefs_remain_consistent=True, beliefs_improve=False, alpha=39939/2048, buf_size=777219/1024, start_state=[0].[0m
[02/01 13:08:35]  --------------------------------------------------------------------------------
[02/01 13:08:35]  Iteration: 317 (271 solution, 45 counterexamples)
[02/01 13:13:51]  Generator returned sat in 311.803380 secs.
[02/01 13:13:52]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:14:10]  Verifer returned unsat in 18.344963 secs.
[02/01 13:16:58]  Verifer returned unsat in 168.044440 secs.
[02/01 13:16:59]  Proved solution: 
[1m[92mif (+ 1/2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:16:59]  --------------------------------------------------------------------------------
[02/01 13:16:59]  Iteration: 318 (272 solution, 45 counterexamples)
[02/01 13:18:01]  Generator returned sat in 57.277325 secs.
[02/01 13:18:01]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:18:17]  Verifer returned unsat in 15.840903 secs.
[02/01 13:18:50]  Verifer returned unsat in 32.269714 secs.
[02/01 13:18:50]  Proved solution: 
[1m[92mif (+ 1/2min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:18:50]  --------------------------------------------------------------------------------
[02/01 13:18:50]  Iteration: 319 (273 solution, 45 counterexamples)
[02/01 13:19:55]  Generator returned sat in 60.740712 secs.
[02/01 13:19:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:20:09]  Verifer returned unsat in 13.004565 secs.
[02/01 13:21:34]  Verifer returned unsat in 84.585639 secs.
[02/01 13:21:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:21:34]  --------------------------------------------------------------------------------
[02/01 13:21:34]  Iteration: 320 (274 solution, 45 counterexamples)
[02/01 13:22:36]  Generator returned sat in 56.508874 secs.
[02/01 13:22:36]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:22:46]  Verifer returned unsat in 9.714294 secs.
[02/01 13:23:11]  Verifer returned unsat in 24.848806 secs.
[02/01 13:23:12]  Proved solution: 
[1m[92mif (+ 3/2min_c + -1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)[0m
[02/01 13:23:12]  --------------------------------------------------------------------------------
[02/01 13:23:12]  Iteration: 321 (275 solution, 45 counterexamples)
[02/01 13:31:21]  Generator returned sat in 485.413979 secs.
[02/01 13:31:22]  Candidate solution: 
[1m[94mif (+ -1/2min_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
elif (+ 2min_c + -3/2max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)[0m
[02/01 13:31:53]  Improved number of small numbers from 102 to 102 out of a max of 138
[02/01 13:31:53]  Verifer returned sat in 30.863043 secs.
[02/01 13:31:53]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  ideal__loss_detected_0,t  ideal__min_c_0,t  ideal__max_c_0,t  ideal__min_qdel_0,t     queue_t  utilized_0,t  qdelay_t
0          1.062468e+08          1.062467e+08        1.062468e+08         0.997070         0.994873        1.062467e+08          0.493827                  0.000000         89.135802        119.506173                  1.0   85.432099          -1.0       2.0
1          1.062472e+08          1.062468e+08        1.062472e+08    357616.790123       357.530864        1.062468e+08          0.493827                  0.493827         89.135802        119.506173                  0.0  342.962963           1.0       0.0
2          1.062475e+08          1.062469e+08        1.062475e+08    357874.320988       357.530864        1.062469e+08          0.987654                  0.493827         89.135802        119.506173                  0.0  600.000000           0.0       1.0
3          1.062479e+08          1.062470e+08        1.062479e+08    358131.851852       357.530864        1.062470e+08        258.518519                  0.987654         89.135802        119.506173                  1.0  600.000000           1.0       2.0
4          1.062483e+08          1.062471e+08        1.062483e+08    358389.382716       357.530864        1.062471e+08        516.049383                258.518519         89.135802        119.506173                  2.0  600.000000           1.0       3.0
5          1.062486e+08          1.062472e+08        1.062486e+08    358646.913580       357.530864        1.062472e+08        773.580247                516.049383         89.135802        119.506173                  2.0  600.000000           1.0       3.0
6          1.062490e+08          1.062473e+08        1.062490e+08    358904.444444       357.530864        1.062473e+08       1031.111111                773.580247         89.135802        119.506173                  3.0  600.000000           1.0       4.0
7          1.062493e+08          1.062474e+08        1.062493e+08    359161.975309       357.530864        1.062474e+08       1288.641975               1031.111111         89.135802        119.506173                  4.0  600.000000           1.0       5.0
8          1.062497e+08          1.062475e+08        1.062497e+08    359419.506173       357.530864        1.062475e+08       1546.172840               1288.641975         89.135802        119.506173                  5.0  600.000000           1.0       6.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=6, loss_amount=125200/81, beliefs_remain_consistent=True, beliefs_improve=False, alpha=40/81, buf_size=600, start_state=[0].[0m
[02/01 13:31:53]  --------------------------------------------------------------------------------
[02/01 13:31:53]  Iteration: 322 (275 solution, 46 counterexamples)
[02/01 13:53:20]  Generator returned sat in 1281.772306 secs.
[02/01 13:53:21]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 13:53:37]  Verifer returned unsat in 16.475720 secs.
[02/01 13:55:00]  Verifer returned unsat in 82.800999 secs.
[02/01 13:55:01]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 13:55:01]  --------------------------------------------------------------------------------
[02/01 13:55:01]  Iteration: 323 (276 solution, 46 counterexamples)
[02/01 13:55:50]  Generator returned sat in 44.931602 secs.
[02/01 13:55:51]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 13:56:07]  Verifer returned unsat in 15.985011 secs.
[02/01 13:56:42]  Verifer returned unsat in 34.920447 secs.
[02/01 13:56:43]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 13:56:43]  --------------------------------------------------------------------------------
[02/01 13:56:43]  Iteration: 324 (277 solution, 46 counterexamples)
[02/01 13:57:32]  Generator returned sat in 45.038689 secs.
[02/01 13:57:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 13:57:57]  Verifer returned unsat in 24.055331 secs.
[02/01 14:01:43]  Verifer returned unsat in 225.649578 secs.
[02/01 14:01:44]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 14:01:44]  --------------------------------------------------------------------------------
[02/01 14:01:44]  Iteration: 325 (278 solution, 46 counterexamples)
[02/01 14:02:33]  Generator returned sat in 44.745015 secs.
[02/01 14:02:33]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[02/01 14:02:54]  Verifer returned unsat in 20.486917 secs.
[02/01 14:08:14]  Verifer returned unsat in 320.136783 secs.
[02/01 14:08:15]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[02/01 14:08:15]  --------------------------------------------------------------------------------
[02/01 14:08:15]  Iteration: 326 (279 solution, 46 counterexamples)
[02/01 14:09:04]  Generator returned sat in 44.745383 secs.
[02/01 14:09:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 14:09:27]  Verifer returned unsat in 22.154624 secs.
[02/01 14:10:05]  Verifer returned unsat in 38.164568 secs.
[02/01 14:10:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 14:10:06]  --------------------------------------------------------------------------------
[02/01 14:10:06]  Iteration: 327 (280 solution, 46 counterexamples)
[02/01 14:10:55]  Generator returned sat in 44.340554 secs.
[02/01 14:10:55]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[02/01 14:11:11]  Verifer returned unsat in 15.332516 secs.
[02/01 14:11:53]  Verifer returned unsat in 41.674854 secs.
[02/01 14:11:53]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[02/01 14:11:53]  --------------------------------------------------------------------------------
[02/01 14:11:53]  Iteration: 328 (281 solution, 46 counterexamples)
[02/01 14:12:43]  Generator returned sat in 45.559514 secs.
[02/01 14:12:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 14:13:02]  Verifer returned unsat in 18.331161 secs.
[02/01 14:13:28]  Verifer returned unsat in 25.679603 secs.
[02/01 14:13:28]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 14:13:28]  --------------------------------------------------------------------------------
[02/01 14:13:28]  Iteration: 329 (282 solution, 46 counterexamples)
[02/01 14:14:17]  Generator returned sat in 44.293746 secs.
[02/01 14:14:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[02/01 14:14:38]  Verifer returned unsat in 20.488810 secs.
[02/01 14:15:10]  Verifer returned unsat in 31.705645 secs.
[02/01 14:15:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)[0m
[02/01 14:15:10]  --------------------------------------------------------------------------------
[02/01 14:15:10]  Iteration: 330 (283 solution, 46 counterexamples)
[02/01 14:15:59]  Generator returned sat in 44.305571 secs.
[02/01 14:16:00]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 14:16:18]  Verifer returned unsat in 18.628320 secs.
[02/01 14:21:30]  Verifer returned unsat in 311.409564 secs.
[02/01 14:21:30]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -2alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_qdel + 1R > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)[0m
[02/01 14:21:30]  --------------------------------------------------------------------------------
[02/01 14:21:30]  Iteration: 331 (284 solution, 46 counterexamples)
[02/01 14:29:04]  Generator returned sat in 449.169080 secs.
[02/01 14:29:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:29:17]  Verifer returned unsat in 12.049586 secs.
[02/01 14:30:11]  Verifer returned unsat in 53.668048 secs.
[02/01 14:30:11]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:30:11]  --------------------------------------------------------------------------------
[02/01 14:30:11]  Iteration: 332 (285 solution, 46 counterexamples)
[02/01 14:30:59]  Generator returned sat in 43.826658 secs.
[02/01 14:31:00]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:31:19]  Verifer returned unsat in 19.340973 secs.
[02/01 14:31:42]  Verifer returned unsat in 21.791071 secs.
[02/01 14:31:42]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:31:42]  --------------------------------------------------------------------------------
[02/01 14:31:42]  Iteration: 333 (286 solution, 46 counterexamples)
[02/01 14:32:30]  Generator returned sat in 43.689888 secs.
[02/01 14:32:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:32:57]  Verifer returned unsat in 26.406006 secs.
[02/01 14:33:21]  Verifer returned unsat in 24.230894 secs.
[02/01 14:33:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:33:22]  --------------------------------------------------------------------------------
[02/01 14:33:22]  Iteration: 334 (287 solution, 46 counterexamples)
[02/01 14:34:10]  Generator returned sat in 43.888712 secs.
[02/01 14:34:11]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:34:30]  Verifer returned unsat in 19.314721 secs.
[02/01 14:35:04]  Verifer returned unsat in 33.209695 secs.
[02/01 14:35:04]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:35:04]  --------------------------------------------------------------------------------
[02/01 14:35:04]  Iteration: 335 (288 solution, 46 counterexamples)
[02/01 14:35:52]  Generator returned sat in 43.758942 secs.
[02/01 14:35:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:36:10]  Verifer returned unsat in 16.853598 secs.
[02/01 14:44:17]  Verifer returned unsat in 487.474700 secs.
[02/01 14:44:18]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + -1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:44:18]  --------------------------------------------------------------------------------
[02/01 14:44:18]  Iteration: 336 (289 solution, 46 counterexamples)
[02/01 14:45:07]  Generator returned sat in 44.258837 secs.
[02/01 14:45:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:45:15]  Verifer returned unsat in 7.409873 secs.
[02/01 14:45:43]  Verifer returned unsat in 27.996508 secs.
[02/01 14:45:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:45:43]  --------------------------------------------------------------------------------
[02/01 14:45:43]  Iteration: 337 (290 solution, 46 counterexamples)
[02/01 14:46:32]  Generator returned sat in 44.413552 secs.
[02/01 14:46:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:46:41]  Verifer returned unsat in 7.888880 secs.
[02/01 14:54:44]  Verifer returned unsat in 483.256055 secs.
[02/01 14:54:44]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:54:45]  --------------------------------------------------------------------------------
[02/01 14:54:45]  Iteration: 338 (291 solution, 46 counterexamples)
[02/01 14:55:32]  Generator returned sat in 43.425968 secs.
[02/01 14:55:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:55:53]  Verifer returned unsat in 19.802566 secs.
[02/01 14:56:22]  Verifer returned unsat in 28.517803 secs.
[02/01 14:56:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:56:22]  --------------------------------------------------------------------------------
[02/01 14:56:22]  Iteration: 339 (292 solution, 46 counterexamples)
[02/01 14:57:10]  Generator returned sat in 43.473493 secs.
[02/01 14:57:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:57:30]  Verifer returned unsat in 19.244064 secs.
[02/01 14:57:50]  Verifer returned unsat in 19.724951 secs.
[02/01 14:57:50]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:57:50]  --------------------------------------------------------------------------------
[02/01 14:57:50]  Iteration: 340 (293 solution, 46 counterexamples)
[02/01 14:58:38]  Generator returned sat in 43.416237 secs.
[02/01 14:58:39]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 14:58:50]  Verifer returned unsat in 11.856229 secs.
[02/01 15:11:54]  Verifer returned unsat in 782.906218 secs.
[02/01 15:11:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:11:54]  --------------------------------------------------------------------------------
[02/01 15:11:54]  Iteration: 341 (294 solution, 46 counterexamples)
[02/01 15:12:42]  Generator returned sat in 43.536100 secs.
[02/01 15:12:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:13:07]  Verifer returned unsat in 23.675715 secs.
[02/01 15:16:58]  Verifer returned unsat in 230.670686 secs.
[02/01 15:16:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:16:58]  --------------------------------------------------------------------------------
[02/01 15:16:58]  Iteration: 342 (295 solution, 46 counterexamples)
[02/01 15:17:46]  Generator returned sat in 43.702296 secs.
[02/01 15:17:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:18:12]  Verifer returned unsat in 24.696694 secs.
[02/01 15:18:31]  Verifer returned unsat in 18.746307 secs.
[02/01 15:18:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:18:31]  --------------------------------------------------------------------------------
[02/01 15:18:31]  Iteration: 343 (296 solution, 46 counterexamples)
[02/01 15:19:19]  Generator returned sat in 43.775073 secs.
[02/01 15:19:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:19:31]  Verifer returned unsat in 10.794953 secs.
[02/01 15:21:21]  Verifer returned unsat in 110.136525 secs.
[02/01 15:21:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:21:22]  --------------------------------------------------------------------------------
[02/01 15:21:22]  Iteration: 344 (297 solution, 46 counterexamples)
[02/01 15:22:09]  Generator returned sat in 43.155887 secs.
[02/01 15:22:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:22:25]  Verifer returned unsat in 15.321371 secs.
[02/01 15:23:40]  Verifer returned unsat in 74.420316 secs.
[02/01 15:23:40]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:23:40]  --------------------------------------------------------------------------------
[02/01 15:23:40]  Iteration: 345 (298 solution, 46 counterexamples)
[02/01 15:24:28]  Generator returned sat in 43.139198 secs.
[02/01 15:24:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:24:40]  Verifer returned unsat in 11.344145 secs.
[02/01 15:25:05]  Verifer returned unsat in 25.144373 secs.
[02/01 15:25:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:25:06]  --------------------------------------------------------------------------------
[02/01 15:25:06]  Iteration: 346 (299 solution, 46 counterexamples)
[02/01 15:25:54]  Generator returned sat in 43.294151 secs.
[02/01 15:25:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:26:14]  Verifer returned unsat in 19.661258 secs.
[02/01 15:30:07]  Verifer returned unsat in 232.883278 secs.
[02/01 15:30:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c + 1alpha)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:30:07]  --------------------------------------------------------------------------------
[02/01 15:30:07]  Iteration: 347 (300 solution, 46 counterexamples)
[02/01 15:30:55]  Generator returned sat in 43.332923 secs.
[02/01 15:30:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:31:08]  Verifer returned unsat in 12.363898 secs.
[02/01 15:31:32]  Verifer returned unsat in 23.698742 secs.
[02/01 15:31:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:31:33]  --------------------------------------------------------------------------------
[02/01 15:31:33]  Iteration: 348 (301 solution, 46 counterexamples)
[02/01 15:32:20]  Generator returned sat in 42.956625 secs.
[02/01 15:32:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:32:35]  Verifer returned unsat in 14.334361 secs.
[02/01 15:32:48]  Verifer returned unsat in 12.336076 secs.
[02/01 15:32:48]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:32:48]  --------------------------------------------------------------------------------
[02/01 15:32:48]  Iteration: 349 (302 solution, 46 counterexamples)
[02/01 15:33:36]  Generator returned sat in 42.854700 secs.
[02/01 15:33:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:33:47]  Verifer returned unsat in 10.366082 secs.
[02/01 15:34:32]  Verifer returned unsat in 44.781445 secs.
[02/01 15:34:32]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:34:32]  --------------------------------------------------------------------------------
[02/01 15:34:32]  Iteration: 350 (303 solution, 46 counterexamples)
[02/01 15:35:19]  Generator returned sat in 42.815766 secs.
[02/01 15:35:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:35:31]  Verifer returned unsat in 11.357937 secs.
[02/01 15:36:15]  Verifer returned unsat in 43.870788 secs.
[02/01 15:36:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:36:16]  --------------------------------------------------------------------------------
[02/01 15:36:16]  Iteration: 351 (304 solution, 46 counterexamples)
[02/01 15:37:03]  Generator returned sat in 42.970273 secs.
[02/01 15:37:04]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:37:12]  Verifer returned unsat in 8.481919 secs.
[02/01 15:37:31]  Verifer returned unsat in 17.877724 secs.
[02/01 15:37:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:37:31]  --------------------------------------------------------------------------------
[02/01 15:37:31]  Iteration: 352 (305 solution, 46 counterexamples)
[02/01 15:38:18]  Generator returned sat in 42.871544 secs.
[02/01 15:38:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:38:35]  Verifer returned unsat in 16.288406 secs.
[02/01 15:39:03]  Verifer returned unsat in 27.387528 secs.
[02/01 15:39:03]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:39:03]  --------------------------------------------------------------------------------
[02/01 15:39:03]  Iteration: 353 (306 solution, 46 counterexamples)
[02/01 15:39:50]  Generator returned sat in 42.842803 secs.
[02/01 15:39:51]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 15:40:32]  Verifer returned unsat in 40.594595 secs.
[02/01 16:11:31]  Verifer returned unsat in 1859.318691 secs.
[02/01 16:11:32]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 16:11:32]  --------------------------------------------------------------------------------
[02/01 16:11:32]  Iteration: 354 (307 solution, 46 counterexamples)
[02/01 16:12:27]  Generator returned sat in 51.010566 secs.
[02/01 16:12:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 16:12:49]  Verifer returned unsat in 20.200358 secs.
[02/01 16:14:44]  Verifer returned unsat in 115.185642 secs.
[02/01 16:14:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 16:14:45]  --------------------------------------------------------------------------------
[02/01 16:14:45]  Iteration: 355 (308 solution, 46 counterexamples)
[02/01 16:15:55]  Generator returned sat in 62.889554 secs.
[02/01 16:15:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 16:16:57]  Verifer returned unsat in 61.501247 secs.
[02/01 16:36:58]  Verifer returned unsat in 1199.913623 secs.
[02/01 16:36:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 16:36:58]  --------------------------------------------------------------------------------
[02/01 16:36:58]  Iteration: 356 (309 solution, 46 counterexamples)
[02/01 16:37:57]  Generator returned sat in 53.941838 secs.
[02/01 16:37:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:38:41]  Verifer returned unsat in 43.056680 secs.
[02/01 16:39:45]  Verifer returned unsat in 63.635716 secs.
[02/01 16:39:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:39:45]  --------------------------------------------------------------------------------
[02/01 16:39:45]  Iteration: 357 (310 solution, 46 counterexamples)
[02/01 16:40:57]  Generator returned sat in 64.035037 secs.
[02/01 16:40:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:41:25]  Verifer returned unsat in 27.247211 secs.
[02/01 16:42:08]  Verifer returned unsat in 42.193305 secs.
[02/01 16:42:08]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 3/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:42:08]  --------------------------------------------------------------------------------
[02/01 16:42:08]  Iteration: 358 (311 solution, 46 counterexamples)
[02/01 16:43:19]  Generator returned sat in 64.077670 secs.
[02/01 16:43:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:43:45]  Verifer returned unsat in 24.917268 secs.
[02/01 16:44:23]  Verifer returned unsat in 36.898623 secs.
[02/01 16:44:23]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:44:23]  --------------------------------------------------------------------------------
[02/01 16:44:23]  Iteration: 359 (312 solution, 46 counterexamples)
[02/01 16:45:33]  Generator returned sat in 63.172576 secs.
[02/01 16:45:34]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:46:18]  Verifer returned unsat in 43.981774 secs.
[02/01 16:46:47]  Verifer returned unsat in 27.873838 secs.
[02/01 16:46:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:46:47]  --------------------------------------------------------------------------------
[02/01 16:46:47]  Iteration: 360 (313 solution, 46 counterexamples)
[02/01 16:47:59]  Generator returned sat in 64.111485 secs.
[02/01 16:47:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:48:13]  Verifer returned unsat in 13.438036 secs.
[02/01 16:48:55]  Verifer returned unsat in 41.534101 secs.
[02/01 16:48:55]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 16:48:55]  --------------------------------------------------------------------------------
[02/01 16:48:55]  Iteration: 361 (314 solution, 46 counterexamples)
[02/01 16:49:44]  Generator returned sat in 43.706620 secs.
[02/01 16:49:44]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 16:49:55]  Verifer returned unsat in 11.228770 secs.
[02/01 16:50:23]  Verifer returned unsat in 27.557013 secs.
[02/01 16:50:23]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 16:50:24]  --------------------------------------------------------------------------------
[02/01 16:50:24]  Iteration: 362 (315 solution, 46 counterexamples)
[02/01 16:51:11]  Generator returned sat in 43.159982 secs.
[02/01 16:51:12]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 16:51:41]  Verifer returned unsat in 29.724605 secs.
[02/01 17:04:45]  Verifer returned unsat in 782.495224 secs.
[02/01 17:04:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:04:45]  --------------------------------------------------------------------------------
[02/01 17:04:45]  Iteration: 363 (316 solution, 46 counterexamples)
[02/01 17:05:57]  Generator returned sat in 64.216347 secs.
[02/01 17:05:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:06:13]  Verifer returned unsat in 14.977864 secs.
[02/01 17:07:03]  Verifer returned unsat in 49.946705 secs.
[02/01 17:07:04]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:07:04]  --------------------------------------------------------------------------------
[02/01 17:07:04]  Iteration: 364 (317 solution, 46 counterexamples)
[02/01 17:08:14]  Generator returned sat in 63.426624 secs.
[02/01 17:08:15]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:09:22]  Verifer returned unsat in 66.096184 secs.
[02/01 17:09:57]  Verifer returned unsat in 35.211821 secs.
[02/01 17:09:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 1/2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:09:58]  --------------------------------------------------------------------------------
[02/01 17:09:58]  Iteration: 365 (318 solution, 46 counterexamples)
[02/01 17:11:08]  Generator returned sat in 63.111562 secs.
[02/01 17:11:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:11:23]  Verifer returned unsat in 13.576012 secs.
[02/01 17:18:44]  Verifer returned unsat in 441.113436 secs.
[02/01 17:18:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:18:45]  --------------------------------------------------------------------------------
[02/01 17:18:45]  Iteration: 366 (319 solution, 46 counterexamples)
[02/01 17:19:33]  Generator returned sat in 43.981345 secs.
[02/01 17:19:34]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:20:03]  Verifer returned unsat in 29.138656 secs.
[02/01 17:23:38]  Verifer returned unsat in 214.520355 secs.
[02/01 17:23:39]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 17:23:39]  --------------------------------------------------------------------------------
[02/01 17:23:39]  Iteration: 367 (320 solution, 46 counterexamples)
[02/01 17:24:28]  Generator returned sat in 44.715583 secs.
[02/01 17:24:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 17:24:38]  Verifer returned unsat in 9.483792 secs.
[02/01 17:26:02]  Verifer returned unsat in 83.717624 secs.
[02/01 17:26:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 17:26:03]  --------------------------------------------------------------------------------
[02/01 17:26:03]  Iteration: 368 (321 solution, 46 counterexamples)
[02/01 17:26:50]  Generator returned sat in 42.660440 secs.
[02/01 17:26:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 17:27:00]  Verifer returned unsat in 9.902846 secs.
[02/01 17:28:17]  Verifer returned unsat in 76.037474 secs.
[02/01 17:28:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 17:28:17]  --------------------------------------------------------------------------------
[02/01 17:28:17]  Iteration: 369 (322 solution, 46 counterexamples)
[02/01 17:29:06]  Generator returned sat in 44.580267 secs.
[02/01 17:29:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 17:29:25]  Verifer returned unsat in 17.809075 secs.
[02/01 17:30:25]  Verifer returned unsat in 60.153041 secs.
[02/01 17:30:25]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c)[0m
[02/01 17:30:26]  --------------------------------------------------------------------------------
[02/01 17:30:26]  Iteration: 370 (323 solution, 46 counterexamples)
[02/01 17:31:17]  Generator returned sat in 46.931366 secs.
[02/01 17:31:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 17:31:36]  Verifer returned unsat in 17.966151 secs.
[02/01 17:37:27]  Verifer returned unsat in 350.878803 secs.
[02/01 17:37:27]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 17:37:27]  --------------------------------------------------------------------------------
[02/01 17:37:27]  Iteration: 371 (324 solution, 46 counterexamples)
[02/01 17:38:19]  Generator returned sat in 46.888305 secs.
[02/01 17:38:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:38:40]  Verifer returned unsat in 20.027734 secs.
[02/01 17:39:02]  Verifer returned unsat in 21.949452 secs.
[02/01 17:39:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:39:02]  --------------------------------------------------------------------------------
[02/01 17:39:02]  Iteration: 372 (325 solution, 46 counterexamples)
[02/01 17:39:54]  Generator returned sat in 46.947956 secs.
[02/01 17:39:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:40:07]  Verifer returned unsat in 12.749847 secs.
[02/01 17:41:01]  Verifer returned unsat in 53.846889 secs.
[02/01 17:41:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1max_c + 2alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:41:02]  --------------------------------------------------------------------------------
[02/01 17:41:02]  Iteration: 373 (326 solution, 46 counterexamples)
[02/01 17:41:54]  Generator returned sat in 47.719542 secs.
[02/01 17:41:55]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:42:15]  Verifer returned unsat in 20.434910 secs.
[02/01 17:42:42]  Verifer returned unsat in 26.401074 secs.
[02/01 17:42:42]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:42:42]  --------------------------------------------------------------------------------
[02/01 17:42:42]  Iteration: 374 (327 solution, 46 counterexamples)
[02/01 17:43:34]  Generator returned sat in 47.403070 secs.
[02/01 17:43:35]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 17:43:48]  Verifer returned unsat in 13.081163 secs.
[02/01 17:46:18]  Verifer returned unsat in 149.298061 secs.
[02/01 17:46:18]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 17:46:18]  --------------------------------------------------------------------------------
[02/01 17:46:18]  Iteration: 375 (328 solution, 46 counterexamples)
[02/01 17:47:09]  Generator returned sat in 46.497655 secs.
[02/01 17:47:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:47:21]  Verifer returned unsat in 11.443035 secs.
[02/01 17:52:00]  Verifer returned unsat in 277.921688 secs.
[02/01 17:52:00]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:52:00]  --------------------------------------------------------------------------------
[02/01 17:52:00]  Iteration: 376 (329 solution, 46 counterexamples)
[02/01 17:52:51]  Generator returned sat in 46.646450 secs.
[02/01 17:52:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:53:17]  Verifer returned unsat in 24.810402 secs.
[02/01 17:53:39]  Verifer returned unsat in 22.391961 secs.
[02/01 17:53:40]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)[0m
[02/01 17:53:40]  --------------------------------------------------------------------------------
[02/01 17:53:40]  Iteration: 377 (330 solution, 46 counterexamples)
[02/01 17:54:29]  Generator returned sat in 44.994309 secs.
[02/01 17:54:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 17:54:48]  Verifer returned unsat in 17.678761 secs.
[02/01 17:55:37]  Verifer returned unsat in 49.113407 secs.
[02/01 17:55:37]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 2min_c + 2max_c)[0m
[02/01 17:55:37]  --------------------------------------------------------------------------------
[02/01 17:55:37]  Iteration: 378 (331 solution, 46 counterexamples)
[02/01 17:56:27]  Generator returned sat in 45.082440 secs.
[02/01 17:56:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 17:56:36]  Verifer returned unsat in 8.430867 secs.
[02/01 18:08:42]  Verifer returned unsat in 725.313367 secs.
[02/01 18:08:42]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 18:08:42]  --------------------------------------------------------------------------------
[02/01 18:08:42]  Iteration: 379 (332 solution, 46 counterexamples)
[02/01 18:09:31]  Generator returned sat in 44.140832 secs.
[02/01 18:09:31]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:09:59]  Verifer returned unsat in 27.623746 secs.
[02/01 18:10:30]  Verifer returned unsat in 30.688817 secs.
[02/01 18:10:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:10:30]  --------------------------------------------------------------------------------
[02/01 18:10:30]  Iteration: 380 (333 solution, 46 counterexamples)
[02/01 18:11:19]  Generator returned sat in 44.408110 secs.
[02/01 18:11:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:11:28]  Verifer returned unsat in 7.777825 secs.
[02/01 18:12:43]  Verifer returned unsat in 75.432402 secs.
[02/01 18:12:44]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:12:44]  --------------------------------------------------------------------------------
[02/01 18:12:44]  Iteration: 381 (334 solution, 46 counterexamples)
[02/01 18:13:32]  Generator returned sat in 44.111529 secs.
[02/01 18:13:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:13:57]  Verifer returned unsat in 23.605649 secs.
[02/01 18:15:54]  Verifer returned unsat in 117.177180 secs.
[02/01 18:15:55]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:15:55]  --------------------------------------------------------------------------------
[02/01 18:15:55]  Iteration: 382 (335 solution, 46 counterexamples)
[02/01 18:16:43]  Generator returned sat in 44.215385 secs.
[02/01 18:16:44]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:17:03]  Verifer returned unsat in 18.690076 secs.
[02/01 18:17:42]  Verifer returned unsat in 39.217088 secs.
[02/01 18:17:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 3/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:17:43]  --------------------------------------------------------------------------------
[02/01 18:17:43]  Iteration: 383 (336 solution, 46 counterexamples)
[02/01 18:18:31]  Generator returned sat in 44.058048 secs.
[02/01 18:18:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:18:54]  Verifer returned unsat in 21.744514 secs.
[02/01 18:19:21]  Verifer returned unsat in 27.183833 secs.
[02/01 18:19:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + 2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + 1alpha)[0m
[02/01 18:19:21]  --------------------------------------------------------------------------------
[02/01 18:19:21]  Iteration: 384 (337 solution, 46 counterexamples)
[02/01 18:20:14]  Generator returned sat in 48.083927 secs.
[02/01 18:20:15]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 18:20:23]  Verifer returned unsat in 8.026984 secs.
[02/01 19:01:28]  Verifer returned unsat in 2464.612079 secs.
[02/01 19:01:28]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1min_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 19:01:28]  --------------------------------------------------------------------------------
[02/01 19:01:28]  Iteration: 385 (338 solution, 46 counterexamples)
[02/01 19:02:45]  Generator returned sat in 69.125193 secs.
[02/01 19:02:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1alpha > 0):
    r_f[n][t] = max(alpha,  + 1min_c + -1alpha)
elif (+ 1alpha > 0):
    r_f[n][t] = max(alpha,  + 1/2min_c + 2max_c)
else:
    r_f[n][t] = max(alpha,  + 1min_c + 2max_c + -1alpha)[0m
[02/01 19:03:14]  Verifer returned unsat in 28.867935 secs.
