[01/10 17:53:41]  Namespace(optimize=None, infinite_buffer=False, finite_buffer=True, dynamic_buffer=False, T=9)
[01/10 17:53:41]  Using cond_vars: ['min_c', 'max_c', 'min_qdel', 'min_buffer', 'max_buffer']
[01/10 17:53:42]  --------------------------------------------------------------------------------
[01/10 17:53:42]  Iteration: 1 (0 solution, 0 counterexamples)
[01/10 17:53:42]  Generator returned sat in 0.005929 secs.
[01/10 17:53:42]  Candidate solution: 
[1m[94mif (+ 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 17:54:14]  Improved gap from 0.125 to 48.4375
[01/10 17:54:14]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/10 17:54:14]  Verifer returned sat in 32.059666 secs.
[01/10 17:54:14]  sf_get_cex returned in 32.192308 secs.
[01/10 17:54:14]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t    upper_S_t  qdelay_t
0         1589.745850         1589.745850       1589.745850       0.109375       0.109375       1589.745850             0.0                     0.0        99.09375           100.0                1.0                3.0                  1.0             2.109131       0.000000              99.09375            210.913086   0.000000          -1.0       -0.109375  1589.855225       2.0
1         1639.292725         1589.855225       1639.292725   49546.875000      49.546875       1589.855225             0.0                     0.0        99.09375           100.0                0.0                1.0                  1.0             2.109131      50.562256              99.09375            210.913086  49.437500           0.0       -0.000244  1639.292969       0.0
2         1688.839600         1639.402100       1688.839600   49596.312500      49.546875       1639.402100             0.0                     0.0        99.09375           100.0                0.0                1.0                  1.0             2.109131     101.015625              99.09375            210.913086  49.437500           0.0        0.000000  1688.839600       0.0
3         1738.386475         1688.948975       1738.386475   49596.312500      49.546875       1688.948975             0.0                     0.0        99.09375           100.0                0.0                1.0                  1.0             2.109131     151.468506              99.09375            210.913086  49.437500           0.0       -0.000244  1738.386719       0.0
4         1787.933350         1738.495850       1787.933350   49596.312500      49.546875       1738.495850             0.0                     0.0        99.09375           100.0                0.0                1.0                  1.0             2.109131     201.921875              99.09375            210.913086  49.437500           0.0        0.000000  1787.933350       0.0
5         1837.480225         1787.933350       1837.480225   49596.312500      49.546875       1787.933350             0.0                     0.0        99.09375           100.0                0.0                2.0                  1.0             2.109131     252.375000              99.09375            210.913086  49.546875           0.0        0.000000  1837.480225       1.0
6         1887.027100         1837.480225       1887.027100   49596.421875      49.546875       1837.480225             0.0                     0.0        99.09375           100.0                0.0                2.0                  1.0             2.109131     299.656250              99.09375            210.913086  49.546875           0.0       -3.171875  1890.198975       1.0
7         1936.573975         1890.198975       1936.573975   49596.421875      49.546875       1890.198975             0.0                     0.0        99.09375           100.0                0.0                1.0                  1.0             2.109131     350.218750              99.09375            210.913086  46.375000           0.0       -3.062500  1939.636475       0.0
8         1986.120850         1939.636475       1986.120850   49593.250000      49.546875       1939.636475             0.0                     0.0        99.09375           100.0                0.0                1.0                  1.0             2.109131     350.218750              99.09375            210.913086  46.484375           0.0      -53.515625  2039.636475       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=7/64, buf_size=200.[0m
[01/10 17:54:14]  --------------------------------------------------------------------------------
[01/10 17:54:14]  Iteration: 2 (0 solution, 1 counterexamples)
[01/10 17:54:15]  Generator returned sat in 0.554273 secs.
[01/10 17:54:15]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 17:54:44]  Improved number of small numbers from 164 to 164 out of a max of 164
[01/10 17:54:44]  Verifer returned sat in 29.099175 secs.
[01/10 17:54:44]  sf_get_cex returned in 29.225600 secs.
[01/10 17:54:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -90701.582275       -90891.511963     -90701.582275       0.109375       0.109375     -90891.511963        0.000000                0.000000       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  189.929688          -1.0      109.906250 -90811.488525       2.0
1       -90511.543213       -90796.929932     -90511.543213  190228.992188     190.039062     -90796.929932        0.000000                0.000000       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  285.386719           1.0      199.945312 -90711.488525       2.0
2       -90321.504150       -90701.582275     -90321.504150  190324.449219     190.039062     -90701.582275       89.984375                0.000000       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  290.093750           1.0      200.000000 -90611.488525       2.0
3       -90131.465088       -90606.890869     -90131.465088  190419.140625     190.039062     -90606.890869      180.023438               89.984375       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  295.402344           1.0      200.000000 -90511.488525       2.0
4       -89941.426025       -90511.488525     -89941.426025  190514.488281     190.039062     -90511.488525      270.062500              180.023438       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  300.000000           1.0      200.000000 -90411.488525       2.0
5       -89751.386963       -90411.433838     -89751.386963  190609.125000     190.039062     -90411.433838      360.101562              270.062500       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  299.945312           1.0      200.000000 -90311.488525       2.0
6       -89561.347900       -90226.812744     -89561.347900  190699.109375     190.039062     -90226.812744      450.140625              360.101562       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  215.324219           1.0      200.000000 -90211.488525       2.0
7       -89371.308838       -90131.793213     -89371.308838  190704.527344     190.039062     -90131.793213      540.179688              450.140625       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  220.304688           1.0      200.000000 -90111.488525       2.0
8       -89181.269775       -90096.875244     -89181.269775  190799.546875     190.039062     -90096.875244      630.218750              540.179688       95.019531      113.464844                1.0                3.0                  1.0             2.945312    92401.34375             95.019531            334.189423  285.386719           1.0      200.000000 -90011.488525       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=7, 
, large_loss_count=7, loss_amount=20167/32, beliefs_improve=False, alpha=1287/128, buf_size=200.[0m
[01/10 17:54:44]  --------------------------------------------------------------------------------
[01/10 17:54:44]  Iteration: 3 (0 solution, 2 counterexamples)
[01/10 17:54:45]  Generator returned sat in 0.533512 secs.
[01/10 17:54:45]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 17:54:53]  Improved gap from 0.0 to 48.4375
[01/10 17:54:54]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/10 17:54:54]  Verifer returned sat in 8.826811 secs.
[01/10 17:54:54]  sf_get_cex returned in 8.949306 secs.
[01/10 17:54:54]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -70631.220703       -70634.666016     -70631.220703       0.109375       0.109131     -70634.666016             0.0                     0.0         69.4375           100.0                0.0                1.0                  0.0             2.054688   92202.757324                   0.0             205.46875   3.445312          -1.0        3.445068 -70634.665771       0.0
1       -70581.728516       -70634.611328     -70581.728516   49495.632812      49.492188     -70634.611328             0.0                     0.0         69.4375           100.0                0.0                2.0                  0.0             2.054688   92249.820068                   0.0             205.46875  52.882812           0.0        0.000000 -70581.728516       1.0
2       -70532.236328       -70581.673828     -70532.236328   49545.070312      49.492188     -70581.673828             0.0                     0.0         69.4375           100.0                0.0                1.0                  0.0             2.054688   92300.327637                   0.0             205.46875  49.437500           0.0       -0.000244 -70532.236084       0.0
3       -70482.744141       -70532.181641     -70482.744141   49541.625000      49.492188     -70532.181641             0.0                     0.0         69.4375           100.0                0.0                1.0                  0.0             2.054688   92350.781006                   0.0             205.46875  49.437500           0.0       -0.054688 -70482.689453       0.0
4       -70433.251953       -70482.689453     -70433.251953   49541.625000      49.492188     -70482.689453             0.0                     0.0         69.4375           100.0                0.0                1.0                  0.0             2.054688   92401.343506                   0.0             205.46875  49.437500           0.0        0.000000 -70433.251953       0.0
5       -70383.759766       -70433.251953     -70383.759766   49541.625000      49.492188     -70433.251953             0.0                     0.0         69.4375           100.0                0.0                2.0                  0.0             2.054688   92451.851074                   0.0             205.46875  49.492188           0.0       -0.000244 -70383.759521       1.0
6       -70334.267578       -70383.705078     -70334.267578   49541.679688      49.492188     -70383.705078             0.0                     0.0         69.4375           100.0                0.0                1.0                  0.0             2.054688   92502.359131                   0.0             205.46875  49.437500           0.0        0.000000 -70334.267578       0.0
7       -70284.775391       -70334.267578     -70284.775391   49541.625000      49.492188     -70334.267578             0.0                     0.0         69.4375           100.0                0.0                2.0                  0.0             2.054688   92552.866699                   0.0             205.46875  49.492188           0.0       -0.000244 -70284.775146       1.0
8       -70235.283203       -70284.720703     -70235.283203   49541.679688      49.492188     -70284.720703             0.0                     0.0         69.4375           100.0                0.0                1.0                  0.0             2.054688   92552.866699                   0.0             205.46875  49.437500           0.0      -50.508057 -70184.775146       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=2553/128, buf_size=200.[0m
[01/10 17:54:54]  --------------------------------------------------------------------------------
[01/10 17:54:54]  Iteration: 4 (0 solution, 3 counterexamples)
[01/10 17:54:56]  Generator returned sat in 2.056422 secs.
[01/10 17:54:56]  Candidate solution: 
[1m[94mif (+ 2min_c + -1/2max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 17:56:02]  Improved gap from 49.4375 to 48.4375
[01/10 17:56:05]  Improved number of small numbers from 90 to 103 out of a max of 165
[01/10 17:56:05]  Verifer returned sat in 68.980368 secs.
[01/10 17:56:05]  sf_get_cex returned in 69.088946 secs.
[01/10 17:56:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -49383.854794       -49392.988706     -49383.854794       0.109375       0.108887     -49392.988706             0.0                     0.0       48.492065      129.999756                0.0                1.0                  0.0             2.945312   92230.375610                   0.0            382.889906   9.133911          -1.0        9.133911 -49392.988706       0.0
1       -49335.362729       -49392.988706     -49335.362729   48501.199341      48.492065     -49392.988706             0.0                     0.0       48.492065      129.999756                0.0                1.0                  0.0             2.945312   92272.640625                   0.0            382.889906  57.625977           0.0       -0.109009 -49335.253720       0.0
2       -49286.870664       -49335.253598     -49286.870664   48549.691406      48.492065     -49335.253598             0.0                     0.0       48.492065      129.999756                0.0                1.0                  0.0             2.945312   92324.203003                   0.0            382.889906  48.382935           0.0       -0.054565 -49286.816098       0.0
3       -49238.378598       -49286.816098     -49238.378598   48540.448364      48.492065     -49286.816098             0.0                     0.0       48.492065      129.999756                0.0                1.0                  0.0             2.945312   92375.765503                   0.0            382.889906  48.437500           0.0        0.000000 -49238.378598       0.0
4       -49189.886533       -49238.378598     -49189.886533   48540.502930      48.492065     -49238.378598             0.0                     0.0       48.492065      129.999756                0.0                2.0                  0.0             2.945312   92427.273438                   0.0            382.889906  48.492065           0.0        0.000000 -49189.886533       1.0
5       -49141.394467       -49189.886533     -49141.394467   48540.557495      48.492065     -49189.886533             0.0                     0.0       48.492065      129.999756                0.0                2.0                  0.0             2.945312   92478.781372                   0.0            382.889906  48.492065           0.0        0.000000 -49141.394467       1.0
6       -49092.902402       -49141.394467     -49092.902402   48540.557495      48.492065     -49141.394467             0.0                     0.0       48.492065      129.999756                0.0                2.0                  0.0             2.945312   92530.289307                   0.0            382.889906  48.492065           0.0        0.000000 -49092.902402       1.0
7       -49044.410336       -49092.902402     -49044.410336   48540.557495      48.492065     -49092.902402             0.0                     0.0       48.492065      129.999756                0.0                2.0                  0.0             2.945312   92580.430176                   0.0            382.889906  48.492065           0.0       -1.367065 -49043.043271       1.0
8       -48995.918271       -49043.043213     -48995.918271   48540.557495      48.492065     -49043.043213             0.0                     0.0       48.492065      129.999756                0.0                1.0                  0.0             2.945312   92580.430176                   0.0            382.889906  47.124942           0.0      -52.875000 -48943.043271       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=223/4096, buf_size=200.[0m
[01/10 17:56:05]  --------------------------------------------------------------------------------
[01/10 17:56:05]  Iteration: 5 (0 solution, 4 counterexamples)
[01/10 17:56:07]  Generator returned sat in 1.521219 secs.
[01/10 17:56:07]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 17:56:23]  Improved gap from 48.4375 to 100
[01/10 17:56:24]  Improved number of small numbers from 118 to 165 out of a max of 165
[01/10 17:56:24]  Verifer returned sat in 16.379873 secs.
[01/10 17:56:24]  sf_get_cex returned in 16.491873 secs.
[01/10 17:56:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -49436.253662       -49736.253662     -49436.253662       0.109375       0.108887     -49736.253662        0.000000                0.000000       99.108887       113.09668                2.0                4.0                  2.0             2.891113   92230.375488            198.217773            326.975313  300.000000          -1.0           200.0 -49636.253662       3.0
1       -49335.362549       -49602.726074     -49335.362549  101191.113281     100.891113     -49602.726074        0.891113                0.000000       99.108887       113.09668                1.0                3.0                  2.0             2.891113   92230.375488            198.217773            326.975313  266.472412           1.0           200.0 -49536.253662       2.0
2       -49234.471436       -49489.629150     -49234.471436  101158.476807     100.891113     -49489.629150        1.782227                0.891113       99.108887       113.09668                2.0                4.0                  2.0             2.891113   92230.375488            198.217773            326.975313  253.375488           1.0           200.0 -49436.253662       3.0
3       -49133.580322       -49436.253662     -49133.580322  101146.270996     100.891113     -49436.253662        2.673340                1.782227       99.108887       113.09668                2.0                4.0                  2.0             2.891113   92230.375488            198.217773            326.975313  300.000000           1.0           200.0 -49336.253662       3.0
4       -49032.689209       -49336.253662     -49032.689209  101193.786621     100.891113     -49336.253662        3.564453                2.673340       99.108887       113.09668                2.0                4.0                  2.0             2.891113   92230.375488            198.217773            326.975313  300.000000           1.0           200.0 -49236.253662       3.0
5       -48931.798096       -49236.253662     -48931.798096  101194.677734     100.891113     -49236.253662        4.455566                3.564453       99.108887       113.09668                2.0                4.0                  2.0             2.891113   92230.375488            198.217773            326.975313  300.000000           1.0           200.0 -49136.253662       3.0
6       -48830.906982       -49136.253662     -48830.906982  101195.568848     100.891113     -49136.253662        5.346680                4.455566       99.108887       113.09668                2.0                4.0                  2.0             2.891113   92230.375488            198.217773            326.975313  300.000000           1.0           200.0 -49036.253662       3.0
7       -48730.015869       -49036.253662     -48730.015869  101196.459961     100.891113     -49036.253662        6.237793                5.346680       99.108887       113.09668                2.0                4.0                  2.0             2.891113   92230.375488            198.217773            326.975313  300.000000           1.0           200.0 -48936.253662       3.0
8       -48629.124756       -48924.145020     -48629.124756  101197.351074     100.891113     -48924.145020        7.128906                6.237793       99.108887       113.09668                1.0                3.0                  2.0             2.891113   92230.375488            198.217773            326.975313  287.891357           1.0           200.0 -48836.253662       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=12775/2048, beliefs_improve=False, alpha=1825/1024, buf_size=200.[0m
[01/10 17:56:24]  --------------------------------------------------------------------------------
[01/10 17:56:24]  Iteration: 6 (0 solution, 5 counterexamples)
[01/10 17:56:27]  Generator returned sat in 2.695076 secs.
[01/10 17:56:27]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + -10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 17:56:36]  Improved gap from 0.01361083984375 to 48.4375
[01/10 17:56:36]  Improved number of small numbers from 165 to 165 out of a max of 165
[01/10 17:56:36]  Verifer returned sat in 9.179443 secs.
[01/10 17:56:36]  sf_get_cex returned in 9.297816 secs.
[01/10 17:56:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -49384.854492       -49384.908936     -49384.854492       0.109375       0.108887     -49384.908936             0.0                     0.0         69.4375           100.0                2.0                4.0                  2.0             3.054443   91829.758545               138.875            305.444336   0.054443          -1.0        0.054443 -49384.908936       3.0
1       -49335.362549       -49384.854492     -49335.362549   49491.997803      49.491943     -49384.854492             0.0                     0.0         69.4375           100.0                1.0                3.0                  2.0             3.054443   91880.212158               138.875            305.444336  49.491943           1.0        0.000000 -49335.362549       2.0
2       -49285.870605       -49335.362549     -49285.870605   49541.435303      49.491943     -49335.362549             0.0                     0.0         69.4375           100.0                0.0                2.0                  2.0             3.054443   91930.720215               138.875            305.444336  49.491943           0.0        0.000000 -49285.870605       1.0
3       -49236.378662       -49285.870605     -49236.378662   49541.435303      49.491943     -49285.870605             0.0                     0.0         69.4375           100.0                0.0                2.0                  2.0             3.054443   91981.119385               138.875            305.444336  49.491943           0.0       -0.108887 -49236.269775       1.0
4       -49186.886719       -49236.269775     -49186.886719   49541.435303      49.491943     -49236.269775             0.0                     0.0         69.4375           100.0                0.0                1.0                  2.0             3.054443   92031.681885               138.875            305.444336  49.383057           0.0       -0.054443 -49186.832275       0.0
5       -49137.394775       -49186.832275     -49137.394775   49541.326416      49.491943     -49186.832275             0.0                     0.0         69.4375           100.0                0.0                1.0                  2.0             3.054443   92082.244385               138.875            305.444336  49.437500           0.0        0.000000 -49137.394775       0.0
6       -49087.902832       -49137.394775     -49087.902832   49541.380859      49.491943     -49137.394775             0.0                     0.0         69.4375           100.0                0.0                2.0                  2.0             3.054443   92129.250488               138.875            305.444336  49.491943           0.0       -3.501953 -49084.400879       1.0
7       -49038.410889       -49084.400879     -49038.410889   49541.435303      49.491943     -49084.400879             0.0                     0.0         69.4375           100.0                0.0                1.0                  2.0             3.054443   92179.812988               138.875            305.444336  45.989990           0.0       -3.447510 -49034.963379       0.0
8       -48988.918945       -49034.963379     -48988.918945   49537.933350      49.491943     -49034.963379             0.0                     0.0         69.4375           100.0                0.0                1.0                  2.0             3.054443   92230.375488               138.875            305.444336  46.044434           0.0       -3.393066 -48985.525879       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81697/4096, buf_size=200.[0m
[01/10 17:56:36]  --------------------------------------------------------------------------------
[01/10 17:56:36]  Iteration: 7 (0 solution, 6 counterexamples)
[01/10 17:56:41]  Generator returned sat in 4.034410 secs.
[01/10 17:56:41]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 17:56:51]  Improved number of small numbers from 74 to 95 out of a max of 164
[01/10 17:56:51]  Verifer returned sat in 9.483960 secs.
[01/10 17:56:51]  sf_get_cex returned in 9.614815 secs.
[01/10 17:56:51]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -49586.157593       -49858.146484     -49586.157593       0.109375       0.108643     -49858.146484        0.000000                0.000000       90.554321      129.262207                2.0                4.0                  2.0             2.054199   92230.375244            181.108643            265.530325  271.988892          -1.0      200.000000 -49786.157593       3.0
1       -49540.880432       -49728.829971     -49540.880432   45549.149536      45.277161     -49728.829971        0.000000                0.000000       90.554321      129.262207                1.0                3.0                  2.0             2.054199   92230.375244            181.108643            265.530325  187.949539           1.0      145.277161 -49686.157593       2.0
2       -49359.771790       -49599.513458     -49359.771790  181296.592117     181.108643     -49599.513458       26.385803                0.000000       90.554321      129.262207                2.0                4.0                  2.0             2.054199   92230.375244            181.108643            265.530325  213.355865           1.0      200.000000 -49586.157593       3.0
3       -49314.494629       -49586.157593     -49314.494629   45516.902313      45.277161     -49586.157593       26.385803               26.385803       90.554321      129.262207                2.0                4.0                  2.0             2.054199   92230.375244            181.108643            265.530325  245.277161           1.0      145.277161 -49486.157593       3.0
4       -49269.217468       -49470.196945     -49269.217468   45548.823608      45.277161     -49470.196945       26.385803               26.385803       90.554321      129.262207                1.0                3.0                  2.0             2.054199   92230.375244            181.108643            265.530325  174.593674           1.0       90.554321 -49386.157593       2.0
5       -49088.108826       -49340.880432     -49088.108826  181309.622055     181.108643     -49340.880432       26.385803               26.385803       90.554321      129.262207                1.0                3.0                  2.0             2.054199   92230.375244            181.108643            265.530325  226.385803           1.0      171.662964 -49286.157593       2.0
6       -48907.000183       -49224.646484     -48907.000183  181361.414185     181.108643     -49224.646484       79.157410               26.385803       90.554321      129.262207                0.0                2.0                  2.0             2.054199   92230.375244            181.108643            265.530325  238.488892           0.0      200.000000 -49186.157593       1.0
7       -48725.891541       -49186.157593     -48725.891541  181426.288879     181.108643     -49186.157593      160.266052               79.157410       90.554321      129.262207                1.0                3.0                  2.0             2.054199   92230.375244            181.108643            265.530325  300.000000           1.0      200.000000 -49086.157593       2.0
8       -48544.782898       -49043.157715     -48544.782898  181568.908630     181.108643     -49043.157715      241.374695              160.266052       90.554321      129.262207                1.0                3.0                  2.0             2.054199   92230.375244            181.108643            265.530325  257.000122           1.0      200.000000 -48986.157593       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=3954683/16384, beliefs_improve=False, alpha=223/4096, buf_size=200.[0m
[01/10 17:56:51]  --------------------------------------------------------------------------------
[01/10 17:56:51]  Iteration: 8 (0 solution, 7 counterexamples)
[01/10 17:56:54]  Generator returned sat in 2.576999 secs.
[01/10 17:56:54]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 9 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 17:56:58]  Improved gap from 0.0 to 100
[01/10 17:57:00]  Improved number of small numbers from 98 to 100 out of a max of 165
[01/10 17:57:00]  Verifer returned sat in 5.479842 secs.
[01/10 17:57:00]  sf_get_cex returned in 5.596394 secs.
[01/10 17:57:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -49848.797867       -50048.743546     -49848.797867       0.109131       0.108643     -50048.743546        0.000000                0.000000            98.0           129.0                1.0                3.0                  1.0                  2.0   92492.961197                  98.0                 258.0  199.945679          -1.0      199.945679 -50048.743546       2.0
1       -49799.797867       -49948.743546     -49799.797867   49199.945679      49.000000     -49948.743546        0.000000                0.000000            98.0           129.0                0.0                2.0                  1.0                  2.0   92492.961197                  98.0                 258.0  148.945679           0.0      148.945679 -49948.743546       1.0
2       -49681.852188       -49848.743546     -49681.852188  118094.624390     117.945679     -49848.743546        0.000000                0.000000            98.0           129.0                0.0                2.0                  1.0                  2.0   92492.961197                  98.0                 258.0  166.891357           0.0      166.891357 -49848.743546       1.0
3       -49563.906509       -49748.743546     -49563.906509  118112.570068     117.945679     -49748.743546        0.000000                0.000000            98.0           129.0                0.0                2.0                  1.0                  2.0   92492.961197                  98.0                 258.0  184.837036           0.0      184.837036 -49748.743546       1.0
4       -49445.960831       -49681.797867     -49445.960831  118130.515747     117.945679     -49681.797867        2.782715                0.000000            98.0           129.0                0.0                2.0                  1.0                  2.0   92492.961197                  98.0                 258.0  233.054321           0.0      200.000000 -49648.743546       1.0
5       -49328.015152       -49548.743546     -49328.015152  118181.515747     117.945679     -49548.743546       20.728394                2.782715            98.0           129.0                0.0                2.0                  1.0                  2.0   92492.961197                  98.0                 258.0  200.000000           1.0      200.000000 -49548.743546       1.0
6       -49210.069473       -49548.743546     -49210.069473  118166.407104     117.945679     -49548.743546       38.674072               20.728394            98.0           129.0                0.0                2.0                  1.0                  2.0   92492.961197                  98.0                 258.0  300.000000           1.0      200.000000 -49448.743546       1.0
7       -49092.123795       -49352.852188     -49092.123795  118284.352783     117.945679     -49352.852188       56.619751               38.674072            98.0           129.0                1.0                3.0                  1.0                  2.0   92492.961197                  98.0                 258.0  204.108643           1.0      200.000000 -49348.743546       2.0
8       -49043.123795       -49290.635010     -49043.123795   49260.728394      49.000000     -49290.635010       56.619751               56.619751            98.0           129.0                1.0                3.0                  1.0                  2.0   92492.961197                  98.0                 258.0  190.891464           1.0      149.000000 -49248.743546       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=463829/8192, beliefs_improve=False, alpha=163395/8192, buf_size=200.[0m
[01/10 17:57:00]  --------------------------------------------------------------------------------
[01/10 17:57:00]  Iteration: 9 (0 solution, 8 counterexamples)
[01/10 17:57:09]  Generator returned sat in 8.312445 secs.
[01/10 17:57:09]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + -1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 17:58:42]  Improved gap from 0.0 to 48.4375
[01/10 17:58:43]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/10 17:58:43]  Verifer returned sat in 93.569248 secs.
[01/10 17:58:43]  sf_get_cex returned in 93.711803 secs.
[01/10 17:58:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -39073.374512       -39076.334229     -39073.374512       0.109131       0.108398     -39076.334229             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81517.483643                   0.0            589.135742   2.959717          -1.0       -0.108643 -39073.265869       0.0
1       -39023.828369       -39073.265869     -39023.828369   49549.102295      49.546143     -39073.265869             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81568.046143                   0.0            589.135742  49.437500           0.0        0.000000 -39023.828369       0.0
2       -38974.282227       -39023.828369     -38974.282227   49595.580078      49.546143     -39023.828369             0.0                     0.0       99.092285           100.0                0.0                2.0                  0.0             5.891357   81618.499756                   0.0            589.135742  49.546143           0.0       -0.000244 -38974.281982       1.0
3       -38924.736084       -38973.173584     -38924.736084   49595.688721      49.546143     -38973.173584             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81668.953613                   0.0            589.135742  48.437500           0.0       -0.000244 -38924.735840       0.0
4       -38875.189941       -38924.627441     -38875.189941   49594.580078      49.546143     -38924.627441             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81719.407715                   0.0            589.135742  49.437500           0.0        0.000000 -38875.189941       0.0
5       -38825.643799       -38875.081055     -38825.643799   49595.580078      49.546143     -38875.081055             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81769.861328                   0.0            589.135742  49.437256           0.0       -0.000244 -38825.643555       0.0
6       -38776.097656       -38825.534912     -38776.097656   49595.579834      49.546143     -38825.534912             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81820.315430                   0.0            589.135742  49.437256           0.0        0.000000 -38776.097656       0.0
7       -38726.551514       -38775.988770     -38726.551514   49595.579834      49.546143     -38775.988770             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81870.769043                   0.0            589.135742  49.437256           0.0       -0.000244 -38726.551270       0.0
8       -38677.005371       -38726.442627     -38677.005371   49595.579834      49.546143     -38726.442627             0.0                     0.0       99.092285           100.0                0.0                1.0                  0.0             5.891357   81870.769287                   0.0            589.135742  49.437256           0.0      -50.453857 -38626.551514       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81475/4096, buf_size=200.[0m
[01/10 17:58:43]  --------------------------------------------------------------------------------
[01/10 17:58:43]  Iteration: 10 (0 solution, 9 counterexamples)
[01/10 17:58:58]  Generator returned sat in 14.356589 secs.
[01/10 17:58:58]  Candidate solution: 
[1m[94mif (+ -2min_c + 2max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 17:59:03]  Improved number of small numbers from 164 to 164 out of a max of 164
[01/10 17:59:03]  Verifer returned sat in 4.869734 secs.
[01/10 17:59:03]  sf_get_cex returned in 5.021734 secs.
[01/10 17:59:03]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       -39512.736084       -39616.790283     -39512.736084       0.109131       0.108398     -39616.790283        0.000000                0.000000            98.0           100.0                2.0                4.0                  2.0             2.054199   81870.769043                 196.0            205.419922  104.054199          -1.0      104.054199 -39616.790283       3.0
1       -39316.736084       -39516.844482     -39316.736084  196104.054199     196.000000     -39516.844482        0.054199                0.000000            98.0           100.0                2.0                4.0                  2.0             2.054199   81870.769043                 196.0            205.419922  200.054199           1.0      200.000000 -39516.790283       3.0
2       -39120.736084       -39516.790283     -39120.736084  196200.108398     196.000000     -39516.790283       96.054199                0.054199            98.0           100.0                2.0                4.0                  2.0             2.054199   81870.769043                 196.0            205.419922  300.000000           1.0      200.000000 -39416.790283       3.0
3       -38924.736084       -39416.790283     -38924.736084  196396.054199     196.000000     -39416.790283      192.054199               96.054199            98.0           100.0                1.0                3.0                  2.0             2.054199   81870.769043                 196.0            205.419922  300.000000           1.0      200.000000 -39316.790283       2.0
4       -38728.736084       -39222.952881     -38728.736084  196492.054199     196.000000     -39222.952881      288.054199              192.054199            98.0           100.0                1.0                3.0                  2.0             2.054199   81870.769043                 196.0            205.419922  206.162598           1.0      200.000000 -39216.790283       2.0
5       -38532.736084       -39125.007080     -38532.736084  196494.216797     196.000000     -39125.007080      384.054199              288.054199            98.0           100.0                1.0                3.0                  2.0             2.054199   81870.769043                 196.0            205.419922  208.216797           1.0      200.000000 -39116.790283       2.0
6       -38336.736084       -39116.519287     -38336.736084  196592.270996     196.000000     -39116.519287      480.054199              384.054199            98.0           100.0                1.0                3.0                  2.0             2.054199   81870.769043                 196.0            205.419922  299.729004           1.0      200.000000 -39016.790283       2.0
7       -38140.736084       -39016.465088     -38140.736084  196779.783203     196.000000     -39016.465088      576.054199              480.054199            98.0           100.0                1.0                3.0                  2.0             2.054199   81870.769043                 196.0            205.419922  299.674805           1.0      200.000000 -38916.790283       2.0
8       -37944.736084       -38916.410889     -37944.736084  196875.729004     196.000000     -38916.410889      672.054199              576.054199            98.0           100.0                1.0                3.0                  2.0             2.054199   81870.769043                 196.0            205.419922  299.620605           1.0      200.000000 -38816.790283       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=7, loss_amount=672, beliefs_improve=False, alpha=40849/2048, buf_size=200.[0m
[01/10 17:59:03]  --------------------------------------------------------------------------------
[01/10 17:59:03]  Iteration: 11 (0 solution, 10 counterexamples)
[01/10 17:59:07]  Generator returned sat in 2.659261 secs.
[01/10 17:59:07]  Candidate solution: 
[1m[94mif (+ 2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 17:59:19]  Improved gap from 10.135498046875 to 100
[01/10 17:59:19]  Improved number of small numbers from 155 to 165 out of a max of 165
[01/10 17:59:19]  Verifer returned sat in 11.830496 secs.
[01/10 17:59:19]  sf_get_cex returned in 11.951874 secs.
[01/10 17:59:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -115502.204834      -115502.204834    -115502.204834       0.108887       0.108154    -115502.204834             0.0                     0.0           100.0      100.493164                2.0                4.0                  2.0                  2.0   81870.768799                 200.0            200.986328    0.000000          -1.0          -100.0 -115402.204834       3.0
1      -115302.204834      -115402.204834    -115302.204834  200000.000000     200.000000    -115402.204834             0.0                     0.0           100.0      100.493164                0.0                1.0                  2.0                  2.0   81870.768799                 200.0            200.986328  100.000000           0.0             0.0 -115302.204834       0.0
2      -115102.204834      -115302.204834    -115102.204834  200100.000000     200.000000    -115302.204834             0.0                     0.0           100.0      100.493164                0.0                2.0                  2.0                  2.0   81870.768799                 200.0            200.986328  200.000000           0.0           100.0 -115202.204834       1.0
3      -114902.204834      -115102.258789    -114902.204834  200200.000000     200.000000    -115102.258789             0.0                     0.0           100.0      100.493164                0.0                2.0                  2.0                  2.0   81870.768799                 200.0            200.986328  200.053955           0.0           200.0 -115102.204834       1.0
4      -114702.204834      -115102.204834    -114702.204834  200200.053955     200.000000    -115102.204834           100.0                     0.0           100.0      100.493164                1.0                3.0                  2.0                  2.0   81870.768799                 200.0            200.986328  300.000000           1.0           200.0 -115002.204834       2.0
5      -114502.204834      -114902.204834    -114502.204834  200400.000000     200.000000    -114902.204834           200.0                   100.0           100.0      100.493164                1.0                3.0                  2.0                  2.0   81870.768799                 200.0            200.986328  200.000000           1.0           200.0 -114902.204834       2.0
6      -114302.204834      -114802.204834    -114302.204834  200400.000000     200.000000    -114802.204834           300.0                   200.0           100.0      100.493164                1.0                3.0                  2.0                  2.0   81870.768799                 200.0            200.986328  200.000000           1.0           200.0 -114802.204834       2.0
7      -114102.204834      -114702.204834    -114102.204834  200500.000000     200.000000    -114702.204834           400.0                   300.0           100.0      100.493164                1.0                3.0                  2.0                  2.0   81870.768799                 200.0            200.986328  200.000000           1.0           200.0 -114702.204834       2.0
8      -113902.204834      -114602.204834    -113902.204834  200600.000000     200.000000    -114602.204834           500.0                   400.0           100.0      100.493164                1.0                3.0                  2.0                  2.0   81870.768799                 200.0            200.986328  200.000000           1.0           200.0 -114602.204834       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=500, beliefs_improve=False, alpha=10233/512, buf_size=200.[0m
[01/10 17:59:19]  --------------------------------------------------------------------------------
[01/10 17:59:19]  Iteration: 12 (0 solution, 11 counterexamples)
[01/10 17:59:24]  Generator returned sat in 4.093297 secs.
[01/10 17:59:24]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_c + -1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 17:59:30]  Improved number of small numbers from 121 to 164 out of a max of 164
[01/10 17:59:30]  Verifer returned sat in 5.839318 secs.
[01/10 17:59:30]  sf_get_cex returned in 5.957298 secs.
[01/10 17:59:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -115402.583252      -115402.583252    -115402.583252       0.108643       0.108154    -115402.583252             0.0                     0.0           100.0      123.999756                2.0                4.0                  2.0             2.053955   81870.768555                 200.0            254.689928    0.000000          -1.0          -100.0 -115302.583252       3.0
1      -115202.583252      -115302.583252    -115202.583252  200000.000000     200.000000    -115302.583252             0.0                     0.0           100.0      123.999756                0.0                1.0                  2.0             2.053955   81870.768555                 200.0            254.689928  100.000000           0.0             0.0 -115202.583252       0.0
2      -115002.583252      -115202.583252    -115002.583252  200100.000000     200.000000    -115202.583252             0.0                     0.0           100.0      123.999756                0.0                2.0                  2.0             2.053955   81870.768555                 200.0            254.689928  200.000000           0.0           100.0 -115102.583252       1.0
3      -114802.583252      -115074.745605    -114802.583252  200200.000000     200.000000    -115074.745605             0.0                     0.0           100.0      123.999756                0.0                2.0                  2.0             2.053955   81870.768555                 200.0            254.689928  272.162354           0.0           200.0 -115002.583252       1.0
4      -114602.583252      -115002.583252    -114602.583252  200272.162354     200.000000    -115002.583252           100.0                     0.0           100.0      123.999756                1.0                3.0                  2.0             2.053955   81870.768555                 200.0            254.689928  300.000000           1.0           200.0 -114902.583252       2.0
5      -114402.583252      -114826.583252    -114402.583252  200400.000000     200.000000    -114826.583252           200.0                   100.0           100.0      123.999756                1.0                3.0                  2.0             2.053955   81870.768555                 200.0            254.689928  224.000000           1.0           200.0 -114802.583252       2.0
6      -114202.583252      -114802.529297    -114202.583252  200424.000000     200.000000    -114802.529297           300.0                   200.0           100.0      123.999756                1.0                3.0                  2.0             2.053955   81870.768555                 200.0            254.689928  299.946045           1.0           200.0 -114702.583252       2.0
7      -114002.583252      -114702.583252    -114002.583252  200599.946045     200.000000    -114702.583252           400.0                   300.0           100.0      123.999756                2.0                4.0                  2.0             2.053955   81870.768555                 200.0            254.689928  300.000000           1.0           200.0 -114602.583252       3.0
8      -113802.583252      -114503.070312    -113802.583252  200700.000000     200.000000    -114503.070312           500.0                   400.0           100.0      123.999756                1.0                3.0                  2.0             2.053955   81870.768555                 200.0            254.689928  200.487061           1.0           200.0 -114502.583252       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=500, beliefs_improve=False, alpha=111/2048, buf_size=200.[0m
[01/10 17:59:30]  --------------------------------------------------------------------------------
[01/10 17:59:30]  Iteration: 13 (0 solution, 12 counterexamples)
[01/10 17:59:39]  Generator returned sat in 7.143633 secs.
[01/10 17:59:39]  Candidate solution: 
[1m[94mif (+ -1min_c + -3/2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 17:59:47]  Improved number of small numbers from 83 to 97 out of a max of 164
[01/10 17:59:47]  Verifer returned sat in 8.314132 secs.
[01/10 17:59:47]  sf_get_cex returned in 8.431625 secs.
[01/10 17:59:47]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -115951.468372      -116150.779315    -115951.468372       0.108398       0.108154    -116150.779315        0.027100                0.000000           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  199.283844          -1.0      199.054016 -116150.549487       2.0
1      -115850.495410      -116110.738757    -115850.495410  101172.272369     100.972961    -116110.738757        0.054077                0.027100           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  260.189270           1.0      200.000000 -116050.549487       2.0
2      -115749.522449      -115950.563007    -115749.522449  101233.204773     100.972961    -115950.563007        1.027039                0.054077           100.0      100.013428                0.0                2.0                  1.0                  2.0   81870.768555                 100.0            200.026855  200.013519           1.0      200.000000 -115950.549487       1.0
3      -115648.549487      -115850.549487    -115648.549487  101174.001984     100.972961    -115850.549487        2.000000                1.027039           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  200.000000           1.0      200.000000 -115850.549487       2.0
4      -115547.576526      -115750.617084    -115547.576526  101174.961426     100.972961    -115750.617084        2.972961                2.000000           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  200.067596           1.0      200.000000 -115750.549487       2.0
5      -115446.603564      -115750.481891    -115446.603564  101176.001984     100.972961    -115750.481891        3.945923                2.972961           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  299.932404           1.0      200.000000 -115650.549487       2.0
6      -115345.630603      -115650.522449    -115345.630603  101276.839752     100.972961    -115650.522449        4.918884                3.945923           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  299.972961           1.0      200.000000 -115550.549487       2.0
7      -115244.657642      -115550.508929    -115244.657642  101277.853271     100.972961    -115550.508929        5.891846                4.918884           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  299.959442           1.0      200.000000 -115450.549487       2.0
8      -115143.684680      -115450.495361    -115143.684680  101278.812714     100.972961    -115450.495361        6.864807                5.891846           100.0      100.013428                1.0                3.0                  1.0                  2.0   81870.768555                 100.0            200.026855  299.945874           1.0      200.000000 -115350.549487       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=111587/16384, beliefs_improve=False, alpha=15941/16384, buf_size=200.[0m
[01/10 17:59:47]  --------------------------------------------------------------------------------
[01/10 17:59:47]  Iteration: 14 (0 solution, 13 counterexamples)
[01/10 18:00:06]  Generator returned sat in 17.764960 secs.
[01/10 18:00:06]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:00:20]  Improved gap from 0.0 to 48.4375
[01/10 18:00:22]  Improved number of small numbers from 103 to 113 out of a max of 165
[01/10 18:00:22]  Verifer returned sat in 14.934719 secs.
[01/10 18:00:22]  sf_get_cex returned in 15.052978 secs.
[01/10 18:00:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -115899.522400      -115899.522400    -115899.522400       0.108154       0.107910    -115899.522400             0.0                     0.0       49.027039           101.0                2.0                4.0                  2.0                  2.0   81619.741455             98.054077                 202.0   0.000000          -1.0       -0.000012 -115899.522388       3.0
1      -115850.495361      -115899.468506    -115850.495361   49027.038574      49.027039    -115899.468506             0.0                     0.0       49.027039           101.0                0.0                1.0                  2.0                  2.0   81670.714429             98.054077                 202.0  48.973145           0.0        0.000000 -115850.495361       0.0
2      -115801.468323      -115850.495361    -115801.468323   49076.011719      49.027039    -115850.495361             0.0                     0.0       49.027039           101.0                0.0                2.0                  2.0                  2.0   81721.687390             98.054077                 202.0  49.027039           0.0        0.000000 -115801.468323       1.0
3      -115752.441284      -115801.468323    -115752.441284   49076.065613      49.027039    -115801.468323             0.0                     0.0       49.027039           101.0                0.0                2.0                  2.0                  2.0   81772.660156             98.054077                 202.0  49.027039           0.0       -0.000195 -115752.441089       1.0
4      -115703.414246      -115752.387207    -115703.414246   49076.065613      49.027039    -115752.387207             0.0                     0.0       49.027039           101.0                0.0                1.0                  2.0                  2.0   81815.108154             98.054077                 202.0  48.972961           0.0       -8.525159 -115694.889087       0.0
5      -115654.387207      -115694.888977    -115654.387207   49076.011536      49.027039    -115694.888977             0.0                     0.0       49.027039           101.0                0.0                1.0                  2.0                  2.0   81866.670544             98.054077                 202.0  40.501770           0.0       -7.935730 -115646.451477       0.0
6      -115605.360168      -115646.451477    -115605.360168   49067.540344      49.027039    -115646.451477             0.0                     0.0       49.027039           101.0                0.0                1.0                  2.0                  2.0   81918.233044             98.054077                 202.0  41.091309           0.0       -7.346191 -115598.013977       0.0
7      -115556.333130      -115598.013977    -115556.333130   49068.129883      49.027039    -115598.013977             0.0                     0.0       49.027039           101.0                0.0                1.0                  2.0                  2.0   81969.795544             98.054077                 202.0  41.680847           0.0       -6.756653 -115549.576477       0.0
8      -115507.306091      -115549.576416    -115507.306091   49068.719421      49.027039    -115549.576416             0.0                     0.0       49.027039           101.0                0.0                1.0                  2.0                  2.0   81969.795654             98.054077                 202.0  42.270325           0.0      -57.729504 -115449.576587       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=111/2048, buf_size=200.[0m
[01/10 18:00:22]  --------------------------------------------------------------------------------
[01/10 18:00:22]  Iteration: 15 (0 solution, 14 counterexamples)
[01/10 18:00:44]  Generator returned sat in 21.227262 secs.
[01/10 18:00:44]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 3/2min_c + -2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:00:54]  Improved gap from 0.0 to 48.4375
[01/10 18:00:54]  Improved number of small numbers from 155 to 165 out of a max of 165
[01/10 18:00:54]  Verifer returned sat in 9.870059 secs.
[01/10 18:00:54]  sf_get_cex returned in 9.991723 secs.
[01/10 18:00:54]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -115898.630127      -115898.684082    -115898.630127       0.108154       0.107910    -115898.684082             0.0                     0.0        97.60791         25949.0                0.0                2.0                  0.0             2.946045   81618.903076                   0.0          76446.919678   0.053955          -1.0        0.053711 -115898.683838       1.0
1      -115849.826172      -115898.630127    -115849.826172   48804.009033      48.803955    -115898.630127             0.0                     0.0        97.60791         25949.0                0.0                2.0                  0.0             2.946045   81670.045410                   0.0          76446.919678  48.803955           0.0        0.000000 -115849.826172       1.0
2      -115801.022217      -115849.826172    -115801.022217   48852.759033      48.803955    -115849.826172             0.0                     0.0        97.60791         25949.0                0.0                2.0                  0.0             2.946045   81721.241211                   0.0          76446.919678  48.803955           0.0       -0.000244 -115801.021973       1.0
3      -115752.218262      -115800.968262    -115752.218262   48852.759033      48.803955    -115800.968262             0.0                     0.0        97.60791         25949.0                0.0                1.0                  0.0             2.946045   81772.437256                   0.0          76446.919678  48.750000           0.0       -0.000244 -115752.218018       0.0
4      -115703.414307      -115752.110352    -115703.414307   48852.705078      48.803955    -115752.110352             0.0                     0.0        97.60791         25949.0                0.0                1.0                  0.0             2.946045   81823.579590                   0.0          76446.919678  48.696045           0.0       -0.053955 -115703.360352       0.0
5      -115654.610352      -115703.360352    -115654.610352   48852.651123      48.803955    -115703.360352             0.0                     0.0        97.60791         25949.0                0.0                1.0                  0.0             2.946045   81874.829590                   0.0          76446.919678  48.750000           0.0        0.000000 -115654.610352       0.0
6      -115605.806396      -115654.556396    -115605.806396   48852.705078      48.803955    -115654.556396             0.0                     0.0        97.60791         25949.0                0.0                1.0                  0.0             2.946045   81926.025635                   0.0          76446.919678  48.750000           0.0        0.000000 -115605.806396       0.0
7      -115557.002441      -115605.806396    -115557.002441   48852.705078      48.803955    -115605.806396             0.0                     0.0        97.60791         25949.0                0.0                2.0                  0.0             2.946045   81977.221680                   0.0          76446.919678  48.803955           0.0        0.000000 -115557.002441       1.0
8      -115508.198486      -115557.002441    -115508.198486   48852.759033      48.803955    -115557.002441             0.0                     0.0        97.60791         25949.0                0.0                2.0                  0.0             2.946045   82028.417480                   0.0          76446.919678  48.803955           0.0       -0.000244 -115508.198242       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81699/4096, buf_size=200.[0m
[01/10 18:00:55]  --------------------------------------------------------------------------------
[01/10 18:00:55]  Iteration: 16 (0 solution, 15 counterexamples)
[01/10 18:01:05]  Generator returned sat in 8.889514 secs.
[01/10 18:01:05]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:01:24]  Improved gap from 0.1888427734375 to 100
[01/10 18:01:26]  Improved number of small numbers from 104 to 115 out of a max of 165
[01/10 18:01:26]  Verifer returned sat in 20.557549 secs.
[01/10 18:01:26]  sf_get_cex returned in 20.671083 secs.
[01/10 18:01:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0      -116024.961060      -116224.961060    -116024.961060       0.108154       0.107910    -116224.961060        0.000000                0.000000       99.973022           100.0                2.0                4.0                  2.0               2.0271    81670.04541            199.946045            202.709961  200.000000          -1.0      200.000000 -116224.96106       3.0
1      -115907.015015      -116125.095947    -115907.015015  118146.044922     117.946045    -116125.095947       17.946045                0.000000       99.973022           100.0                2.0                4.0                  2.0               2.0271    81670.04541            199.946045            202.709961  200.134888           1.0      200.000000 -116124.96106       3.0
2      -115789.068970      -116124.961060    -115789.068970  118164.125854     117.946045    -116124.961060       35.892090               17.946045       99.973022           100.0                2.0                4.0                  2.0               2.0271    81670.04541            199.946045            202.709961  300.000000           1.0      200.000000 -116024.96106       3.0
3      -115671.122925      -116024.961060    -115671.122925  118281.937012     117.946045    -116024.961060       53.838135               35.892090       99.973022           100.0                2.0                4.0                  2.0               2.0271    81670.04541            199.946045            202.709961  300.000000           1.0      200.000000 -115924.96106       3.0
4      -115553.176880      -115825.122925    -115553.176880  118299.883057     117.946045    -115825.122925       71.784180               53.838135       99.973022           100.0                1.0                3.0                  2.0               2.0271    81670.04541            199.946045            202.709961  200.161865           1.0      200.000000 -115824.96106       2.0
5      -115503.190369      -115824.961060    -115503.190369   50258.457275      49.986511    -115824.961060       71.784180               71.784180       99.973022           100.0                2.0                4.0                  2.0               2.0271    81670.04541            199.946045            202.709961  249.986511           1.0      149.986511 -115724.96106       3.0
6      -115385.244324      -115724.961060    -115385.244324  118267.815613     117.946045    -115724.961060       71.784180               71.784180       99.973022           100.0                2.0                4.0                  2.0               2.0271    81670.04541            199.946045            202.709961  267.932556           1.0      167.932556 -115624.96106       3.0
7      -115267.298279      -115624.961060    -115267.298279  118285.761658     117.946045    -115624.961060       71.784180               71.784180       99.973022           100.0                2.0                4.0                  2.0               2.0271    81670.04541            199.946045            202.709961  285.878601           1.0      185.878601 -115524.96106       3.0
8      -115149.352234      -115457.001465    -115149.352234  118303.707703     117.946045    -115457.001465       75.608826               71.784180       99.973022           100.0                0.0                2.0                  2.0               2.0271    81670.04541            199.946045            202.709961  232.040405           0.0      200.000000 -115424.96106       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=944747/16384, beliefs_improve=False, alpha=147235/8192, buf_size=200.[0m
[01/10 18:01:26]  --------------------------------------------------------------------------------
[01/10 18:01:26]  Iteration: 17 (0 solution, 16 counterexamples)
[01/10 18:01:42]  Generator returned sat in 14.811848 secs.
[01/10 18:01:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1/2min_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:02:00]  Improved gap from 79.053955078125 to 100
[01/10 18:02:00]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/10 18:02:00]  Verifer returned sat in 17.615283 secs.
[01/10 18:02:00]  sf_get_cex returned in 17.736915 secs.
[01/10 18:02:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -291221.021240      -291247.237061    -291221.021240       0.107910       0.107666    -291247.237061        0.000000                0.000000            99.0      100.053955                2.0                4.0                  2.0                  2.0   81670.045166                 198.0             200.10791   26.215820          -1.0       26.215576 -291247.236816       3.0
1      -291141.967285      -291221.021240    -291141.967285   79080.170898      79.053955    -291221.021240        0.000000                0.000000            99.0      100.053955                1.0                3.0                  2.0                  2.0   81670.045166                 198.0             200.10791   79.053955           1.0        5.269531 -291147.236816       2.0
2      -291062.913330      -291141.967285    -291062.913330   79133.009033      79.053955    -291141.967285        0.000000                0.000000            99.0      100.053955                0.0                2.0                  2.0                  2.0   81670.045166                 198.0             200.10791   79.053955           0.0      -15.676514 -291047.236816       1.0
3      -290864.913330      -290947.237061    -290864.913330  198079.053955     198.000000    -290947.237061        0.000000                0.000000            99.0      100.053955                0.0                1.0                  2.0                  2.0   81670.045166                 198.0             200.10791   82.323730           0.0       82.323486 -290947.236816       0.0
4      -290666.913330      -290847.237061    -290666.913330  198082.323730     198.000000    -290847.237061        0.000000                0.000000            99.0      100.053955                0.0                1.0                  2.0                  2.0   81670.045166                 198.0             200.10791  180.323730           0.0      180.323486 -290847.236816       0.0
5      -290468.913330      -290845.128906    -290468.913330  198180.323730     198.000000    -290845.128906       78.323486                0.000000            99.0      100.053955                0.0                2.0                  2.0                  2.0   81670.045166                 198.0             200.10791  297.892090           0.0      200.000000 -290747.236816       1.0
6      -290270.913330      -290647.236816    -290270.913330  198376.215576     198.000000    -290647.236816      176.323486               78.323486            99.0      100.053955                0.0                2.0                  2.0                  2.0   81670.045166                 198.0             200.10791  200.000000           1.0      200.000000 -290647.236816       1.0
7      -290072.913330      -290647.236816    -290072.913330  198376.323486     198.000000    -290647.236816      274.323486              176.323486            99.0      100.053955                0.0                2.0                  2.0                  2.0   81670.045166                 198.0             200.10791  300.000000           1.0      200.000000 -290547.236816       1.0
8      -289874.913330      -290547.182861    -289874.913330  198574.323486     198.000000    -290547.182861      372.323486              274.323486            99.0      100.053955                1.0                3.0                  2.0                  2.0   81670.045166                 198.0             200.10791  299.946045           1.0      200.000000 -290447.236816       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1525037/4096, beliefs_improve=False, alpha=81699/4096, buf_size=200.[0m
[01/10 18:02:00]  --------------------------------------------------------------------------------
[01/10 18:02:00]  Iteration: 18 (0 solution, 17 counterexamples)
[01/10 18:02:16]  Generator returned sat in 13.665933 secs.
[01/10 18:02:16]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:02:21]  Improved gap from 99.8385009765625 to 100
[01/10 18:02:21]  Improved number of small numbers from 127 to 165 out of a max of 165
[01/10 18:02:21]  Verifer returned sat in 4.735818 secs.
[01/10 18:02:21]  sf_get_cex returned in 4.857719 secs.
[01/10 18:02:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -413064.266357      -413117.266357    -413064.266357       0.107910       0.107666    -413117.266357        0.000000                0.000000            94.0      187.892334                2.0                4.0                  2.0                  2.0   81670.044922                 188.0            375.784668   53.000000          -1.0       52.999756 -413117.266113       3.0
1      -413017.266357      -413080.943359    -413017.266357   47053.000000      47.000000    -413080.943359        0.000000                0.000000            94.0      187.892334                2.0                4.0                  2.0                  2.0   81670.044922                 188.0            375.784668   63.677002           1.0       -0.000244 -413017.266113       3.0
2      -412970.266357      -412970.266357    -412970.266357   47063.677002      47.000000    -412970.266357        0.000000                0.000000            94.0      187.892334                0.0                1.0                  2.0                  2.0   81670.044922                 188.0            375.784668    0.000000           0.0      -53.000244 -412917.266113       0.0
3      -412782.266357      -412817.266113    -412782.266357  188000.000000     188.000000    -412817.266113        0.000000                0.000000            94.0      187.892334                0.0                1.0                  2.0                  2.0   81670.044922                 188.0            375.784668   34.999756           0.0       34.999756 -412817.266113       0.0
4      -412594.266357      -412782.266357    -412594.266357  188034.999756     188.000000    -412782.266357        0.000000                0.000000            94.0      187.892334                0.0                2.0                  2.0                  2.0   81670.044922                 188.0            375.784668  188.000000           0.0      122.999756 -412717.266113       1.0
5      -412406.266357      -412705.158447    -412406.266357  188188.000000     188.000000    -412705.158447       10.999756                0.000000            94.0      187.892334                0.0                2.0                  2.0                  2.0   81670.044922                 188.0            375.784668  287.892334           0.0      200.000000 -412617.266113       1.0
6      -412218.266357      -412517.266113    -412218.266357  188298.892090     188.000000    -412517.266113       98.999756               10.999756            94.0      187.892334                0.0                2.0                  2.0                  2.0   81670.044922                 188.0            375.784668  200.000000           1.0      200.000000 -412517.266113       1.0
7      -412030.266357      -412517.266113    -412030.266357  188298.999756     188.000000    -412517.266113      186.999756               98.999756            94.0      187.892334                0.0                2.0                  2.0                  2.0   81670.044922                 188.0            375.784668  300.000000           1.0      200.000000 -412417.266113       1.0
8      -411842.266357      -412329.373779    -411842.266357  188486.999756     188.000000    -412329.373779      274.999756              186.999756            94.0      187.892334                1.0                3.0                  2.0                  2.0   81670.044922                 188.0            375.784668  212.107666           1.0      200.000000 -412317.266113       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1126399/4096, beliefs_improve=False, alpha=55/1024, buf_size=200.[0m
[01/10 18:02:21]  --------------------------------------------------------------------------------
[01/10 18:02:21]  Iteration: 19 (0 solution, 18 counterexamples)
[01/10 18:03:13]  Generator returned sat in 50.183545 secs.
[01/10 18:03:13]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:03:21]  Improved gap from 37.693583170572914 to 100
[01/10 18:03:23]  Improved number of small numbers from 90 to 93 out of a max of 165
[01/10 18:03:23]  Verifer returned sat in 9.540229 secs.
[01/10 18:03:23]  sf_get_cex returned in 9.663632 secs.
[01/10 18:03:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -412979.096710      -413133.312042    -412979.096710       0.107910       0.107422    -413133.312042        0.000000                0.000000       81.946167           100.0                2.0                4.0                  2.0                  2.0   81670.044922            163.892334                 200.0  154.215332          -1.0      154.215332 -413133.312042       3.0
1      -412897.150543      -413078.989044    -412897.150543   82100.382324      81.946167    -413078.989044        0.000000                0.000000       81.946167           100.0                0.0                2.0                  2.0                  2.0   81670.044922            163.892334                 200.0  181.838501           0.0      136.161499 -413033.312042       1.0
2      -412733.258209      -412979.042877    -412733.258209  164074.172485     163.892334    -412979.042877        0.053833                0.000000       81.946167           100.0                0.0                2.0                  2.0                  2.0   81670.044922            163.892334                 200.0  245.730835           0.0      200.000000 -412933.312042       1.0
3      -412569.365875      -412833.312042    -412569.365875  164138.118652     163.892334    -412833.312042       63.946167                0.053833       81.946167           100.0                0.0                2.0                  2.0                  2.0   81670.044922            163.892334                 200.0  200.000000           1.0      200.000000 -412833.312042       1.0
4      -412405.473541      -412833.312042    -412405.473541  164156.280151     163.892334    -412833.312042      127.838501               63.946167       81.946167           100.0                0.0                2.0                  2.0                  2.0   81670.044922            163.892334                 200.0  300.000000           1.0      200.000000 -412733.312042       1.0
5      -412241.581207      -412733.258209    -412241.581207  164320.172485     163.892334    -412733.258209      191.730835              127.838501       81.946167           100.0                1.0                3.0                  2.0                  2.0   81670.044922            163.892334                 200.0  299.946167           1.0      200.000000 -412633.312042       2.0
6      -412159.635040      -412633.312042    -412159.635040   82437.843994      81.946167    -412633.312042      191.730835              191.730835       81.946167           100.0                2.0                4.0                  2.0                  2.0   81670.044922            163.892334                 200.0  281.946167           1.0      181.946167 -412533.312042       3.0
7      -412077.688873      -412533.312042    -412077.688873   82419.843994      81.946167    -412533.312042      191.730835              191.730835       81.946167           100.0                2.0                4.0                  2.0                  2.0   81670.044922            163.892334                 200.0  263.892334           1.0      163.892334 -412433.312042       3.0
8      -411995.742706      -412433.096924    -411995.742706   82401.790161      81.946167    -412433.096924      191.730835              191.730835       81.946167           100.0                1.0                3.0                  2.0                  2.0   81670.044922            163.892334                 200.0  245.623383           1.0      145.838501 -412333.312042       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=3, loss_amount=1570659/8192, beliefs_improve=False, alpha=81699/4096, buf_size=200.[0m
[01/10 18:03:23]  --------------------------------------------------------------------------------
[01/10 18:03:23]  Iteration: 20 (0 solution, 19 counterexamples)
[01/10 18:03:57]  Generator returned sat in 32.332214 secs.
[01/10 18:03:58]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:04:06]  Improved gap from 18.322265625 to 100
[01/10 18:04:06]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/10 18:04:06]  Verifer returned sat in 8.609388 secs.
[01/10 18:04:06]  sf_get_cex returned in 8.729808 secs.
[01/10 18:04:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -412982.763184      -413132.763184    -412982.763184       0.107666       0.107422    -413132.763184        0.013428                0.000000           100.0      100.080566                1.0                3.0                  1.0                  2.0   81670.044922                 100.0            200.161133  149.986572          -1.0      149.986572 -413132.763184       2.0
1      -412932.763184      -413032.763184    -412932.763184   50150.000000      50.000000    -413032.763184        0.013428                0.013428           100.0      100.080566                0.0                2.0                  1.0                  2.0   81670.044922                 100.0            200.161133   99.986572           1.0       99.986572 -413032.763184       1.0
2      -412732.763184      -413032.682373    -412732.763184  200100.000000     200.000000    -413032.682373        0.013428                0.013428           100.0      100.080566                1.0                3.0                  1.0                  2.0   81670.044922                 100.0            200.161133  299.905762           1.0      199.986572 -412932.763184       2.0
3      -412682.763184      -412832.763184    -412682.763184   50299.919189      50.000000    -412832.763184        0.013428                0.013428           100.0      100.080566                0.0                2.0                  1.0                  2.0   81670.044922                 100.0            200.161133  149.986572           0.0      149.986572 -412832.763184       1.0
4      -412482.763184      -412832.709229    -412482.763184  200150.000000     200.000000    -412832.709229       50.000000                0.013428           100.0      100.080566                1.0                3.0                  1.0                  2.0   81670.044922                 100.0            200.161133  299.946045           1.0      200.000000 -412732.763184       2.0
5      -412432.763184      -412632.763184    -412432.763184   50349.946045      50.000000    -412632.763184       50.000000               50.000000           100.0      100.080566                0.0                2.0                  1.0                  2.0   81670.044922                 100.0            200.161133  150.000000           1.0      150.000000 -412632.763184       1.0
6      -412232.763184      -412632.763184    -412232.763184  200200.000000     200.000000    -412632.763184      100.000000               50.000000           100.0      100.080566                0.0                2.0                  1.0                  2.0   81670.044922                 100.0            200.161133  300.000000           0.0      200.000000 -412532.763184       1.0
7      -412032.763184      -412432.763184    -412032.763184  200400.000000     200.000000    -412432.763184      200.000000              100.000000           100.0      100.080566                0.0                2.0                  1.0                  2.0   81670.044922                 100.0            200.161133  200.000000           1.0      200.000000 -412432.763184       1.0
8      -411832.763184      -412432.763184    -411832.763184  200400.000000     200.000000    -412432.763184      300.000000              200.000000           100.0      100.080566                0.0                2.0                  1.0                  2.0   81670.044922                 100.0            200.161133  300.000000           1.0      200.000000 -412332.763184       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1228745/4096, beliefs_improve=False, alpha=27/2048, buf_size=200.[0m
[01/10 18:04:06]  --------------------------------------------------------------------------------
[01/10 18:04:06]  Iteration: 21 (0 solution, 20 counterexamples)
[01/10 18:04:44]  Generator returned sat in 35.684336 secs.
[01/10 18:04:44]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:04:54]  Improved gap from 17.166666666666668 to 100
[01/10 18:04:55]  Improved number of small numbers from 165 to 165 out of a max of 165
[01/10 18:04:55]  Verifer returned sat in 10.259121 secs.
[01/10 18:04:55]  sf_get_cex returned in 10.384758 secs.
[01/10 18:04:55]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -412832.118408      -413032.145264    -412832.118408       0.107666       0.107422    -413032.145264        0.026855                0.000000       99.973145      100.026855                1.0                3.0                  1.0                  2.0   81670.044922             99.973145            200.053711  200.000000          -1.0      200.000000 -413032.145264       2.0
1      -412732.145264      -412932.145264    -412732.145264  100173.171387      99.973145    -412932.145264        0.026855                0.026855       99.973145      100.026855                0.0                2.0                  1.0                  2.0   81670.044922             99.973145            200.053711  199.973145           1.0      199.973145 -412932.145264       1.0
2      -412622.198975      -412832.145264    -412622.198975  110146.289062     109.946289    -412832.145264        9.946289                0.026855       99.973145      100.026855                1.0                3.0                  1.0                  2.0   81670.044922             99.973145            200.053711  200.000000           1.0      200.000000 -412832.145264       2.0
3      -412522.225830      -412732.172119    -412522.225830  100183.090820      99.973145    -412732.172119        9.946289                9.946289       99.973145      100.026855                1.0                3.0                  1.0                  2.0   81670.044922             99.973145            200.053711  200.000000           1.0      199.973145 -412732.145264       2.0
4      -412422.252686      -412731.930420    -412422.252686  100183.090820      99.973145    -412731.930420        9.946289                9.946289       99.973145      100.026855                1.0                3.0                  1.0                  2.0   81670.044922             99.973145            200.053711  299.731445           1.0      199.946289 -412632.145264       2.0
5      -412322.279541      -412532.145264    -412322.279541  100282.822266      99.973145    -412532.145264        9.946289                9.946289       99.973145      100.026855                0.0                2.0                  1.0                  2.0   81670.044922             99.973145            200.053711  199.919434           0.0      199.919434 -412532.145264       1.0
6      -412212.333252      -412432.172119    -412212.333252  110156.154785     109.946289    -412432.172119       19.812012                9.946289       99.973145      100.026855                0.0                2.0                  1.0                  2.0   81670.044922             99.973145            200.053711  200.026855           0.0      200.000000 -412432.145264       1.0
7      -412102.386963      -412332.145264    -412102.386963  110166.127930     109.946289    -412332.145264       29.758301               19.812012       99.973145      100.026855                0.0                2.0                  1.0                  2.0   81670.044922             99.973145            200.053711  200.000000           1.0      200.000000 -412332.145264       1.0
8      -411992.440674      -412332.145264    -411992.440674  110176.047363     109.946289    -412332.145264       39.704590               29.758301       99.973145      100.026855                0.0                2.0                  1.0                  2.0   81670.044922             99.973145            200.053711  300.000000           1.0      200.000000 -412232.145264       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=20315/512, beliefs_improve=False, alpha=20425/2048, buf_size=200.[0m
[01/10 18:04:55]  --------------------------------------------------------------------------------
[01/10 18:04:55]  Iteration: 22 (0 solution, 21 counterexamples)
[01/10 18:05:11]  Generator returned sat in 13.448610 secs.
[01/10 18:05:11]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:05:22]  Improved gap from 85.64815848214286 to 100
[01/10 18:05:24]  Improved number of small numbers from 106 to 121 out of a max of 165
[01/10 18:05:24]  Verifer returned sat in 13.336072 secs.
[01/10 18:05:24]  sf_get_cex returned in 13.456744 secs.
[01/10 18:05:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -412975.320068      -412986.320068    -412975.320068       0.107422       0.107422    -412986.320068        0.000000                0.000000       88.280212      117.058105                1.0                3.0                  1.0             2.026611   81670.044922             88.280212            237.231283   11.000000          -1.0      -76.560425 -412898.759644       2.0
1      -412798.759644      -412898.759644    -412798.759644  176571.424805     176.560425    -412898.759644        0.000000                0.000000       88.280212      117.058105                0.0                1.0                  1.0             2.026611   81670.044922             88.280212            237.231283  100.000000           0.0        0.000000 -412798.759644       0.0
2      -412622.199219      -412722.252930    -412622.199219  176660.424805     176.560425    -412722.252930        0.000000                0.000000       88.280212      117.058105                0.0                1.0                  1.0             2.026611   81670.044922             88.280212            237.231283  100.053711           0.0       76.560425 -412698.759644       0.0
3      -412445.638794      -412633.999573    -412445.638794  176660.478516     176.560425    -412633.999573        0.000000                0.000000       88.280212      117.058105                0.0                2.0                  1.0             2.026611   81670.044922             88.280212            237.231283  188.360779           0.0      153.120850 -412598.759644       1.0
4      -412269.078369      -412598.759521    -412269.078369  176748.785583     176.560425    -412598.759521       29.681274                0.000000       88.280212      117.058105                0.0                2.0                  1.0             2.026611   81670.044922             88.280212            237.231283  299.999878           0.0      200.000000 -412498.759644       1.0
5      -412092.517944      -412457.492859    -412092.517944  176890.105957     176.560425    -412457.492859      106.241699               29.681274       88.280212      117.058105                1.0                3.0                  1.0             2.026611   81670.044922             88.280212            237.231283  258.733215           1.0      200.000000 -412398.759644       2.0
6      -411915.957520      -412369.239502    -411915.957520  176925.399719     176.560425    -412369.239502      182.802124              106.241699       88.280212      117.058105                1.0                3.0                  1.0             2.026611   81670.044922             88.280212            237.231283  270.479858           1.0      200.000000 -412298.759644       2.0
7      -411739.397095      -412298.732788    -411739.397095  177013.706787     176.560425    -412298.732788      259.362549              182.802124       88.280212      117.058105                1.0                3.0                  1.0             2.026611   81670.044922             88.280212            237.231283  299.973145           1.0      200.000000 -412198.759644       2.0
8      -411562.836670      -412192.732666    -411562.836670  177119.760498     176.560425    -412192.732666      335.922974              259.362549       88.280212      117.058105                1.0                3.0                  1.0             2.026611   81670.044922             88.280212            237.231283  293.973022           1.0      200.000000 -412098.759644       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=2751881/8192, beliefs_improve=False, alpha=5061/512, buf_size=200.[0m
[01/10 18:05:24]  --------------------------------------------------------------------------------
[01/10 18:05:24]  Iteration: 23 (0 solution, 22 counterexamples)
[01/10 18:05:58]  Generator returned sat in 31.606277 secs.
[01/10 18:05:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:06:04]  Improved number of small numbers from 127 to 164 out of a max of 164
[01/10 18:06:04]  Verifer returned sat in 5.848195 secs.
[01/10 18:06:04]  sf_get_cex returned in 5.970101 secs.
[01/10 18:06:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0      -340118.217529      -340314.271240    -340118.217529       0.107422       0.107178    -340314.271240        0.000000                0.000000            89.0      101.811768                1.0                3.0                  1.0             2.053467   81670.044922                  89.0            209.067084  196.053711          -1.0      196.053711 -340314.27124       2.0
1      -340014.271240      -340214.271240    -340014.271240  104142.342773     103.946289    -340214.271240        0.000000                0.000000            89.0      101.811768                0.0                2.0                  1.0             2.053467   81670.044922                  89.0            209.067084  200.000000           0.0      200.000000 -340214.27124       1.0
2      -339910.324951      -340118.163818    -339910.324951  104146.289062     103.946289    -340118.163818        3.946289                0.000000            89.0      101.811768                0.0                2.0                  1.0             2.053467   81670.044922                  89.0            209.067084  203.892578           0.0      200.000000 -340114.27124       1.0
3      -339806.378662      -340016.083252    -339806.378662  104154.127930     103.946289    -340016.083252        7.892578                3.946289            89.0      101.811768                1.0                3.0                  1.0             2.053467   81670.044922                  89.0            209.067084  201.812012           1.0      200.000000 -340014.27124       2.0
4      -339702.432373      -339914.271240    -339702.432373  104155.993652     103.946289    -339914.271240       11.838867                7.892578            89.0      101.811768                1.0                3.0                  1.0             2.053467   81670.044922                  89.0            209.067084  200.000000           1.0      200.000000 -339914.27124       2.0
5      -339598.486084      -339914.217529    -339598.486084  104158.127930     103.946289    -339914.217529       15.785156               11.838867            89.0      101.811768                1.0                3.0                  1.0             2.053467   81670.044922                  89.0            209.067084  299.946289           1.0      200.000000 -339814.27124       2.0
6      -339494.539795      -339812.459229    -339494.539795  104262.020508     103.946289    -339812.459229       19.731445               15.785156            89.0      101.811768                1.0                3.0                  1.0             2.053467   81670.044922                  89.0            209.067084  298.187988           1.0      200.000000 -339714.27124       2.0
7      -339390.593506      -339710.647217    -339390.593506  104264.208496     103.946289    -339710.647217       23.677734               19.731445            89.0      101.811768                1.0                3.0                  1.0             2.053467   81670.044922                  89.0            209.067084  296.375977           1.0      200.000000 -339614.27124       2.0
8      -339286.647217      -339608.835449    -339286.647217  104266.342773     103.946289    -339608.835449       27.624023               23.677734            89.0      101.811768                1.0                3.0                  1.0             2.053467   81670.044922                  89.0            209.067084  294.564209           1.0      200.000000 -339514.27124       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=28287/1024, beliefs_improve=False, alpha=15305/1024, buf_size=200.[0m
[01/10 18:06:05]  --------------------------------------------------------------------------------
[01/10 18:06:05]  Iteration: 24 (0 solution, 23 counterexamples)
[01/10 18:06:47]  Generator returned sat in 40.024688 secs.
[01/10 18:06:47]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 18:06:53]  Improved number of small numbers from 135 to 139 out of a max of 164
[01/10 18:06:53]  Verifer returned sat in 5.661672 secs.
[01/10 18:06:53]  sf_get_cex returned in 5.785275 secs.
[01/10 18:06:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -339402.295654      -339598.253988    -339402.295654       0.107178       0.107178    -339598.253988        0.020996                0.000000           100.0           100.5                1.0                3.0                  1.0                  2.0   81670.044922                 100.0                 201.0  195.937337          -1.0      195.937337 -339598.253988       2.0
1      -339298.253988      -339498.274821    -339298.253988  104237.625000     104.041667    -339498.274821        0.020996                0.020996           100.0           100.5                0.0                2.0                  1.0                  2.0   81670.044922                 100.0                 201.0  199.999837           1.0      199.979004 -339498.253988       1.0
2      -339194.212321      -339497.733154    -339194.212321  104241.687500     104.041667    -339497.733154        4.041667                0.020996           100.0           100.5                1.0                3.0                  1.0                  2.0   81670.044922                 100.0                 201.0  299.479167           1.0      200.000000 -339398.253988       2.0
3      -339090.170654      -339298.253988    -339090.170654  104345.187500     104.041667    -339298.253988        8.083333                4.041667           100.0           100.5                0.0                2.0                  1.0                  2.0   81670.044922                 100.0                 201.0  200.000000           1.0      200.000000 -339298.253988       1.0
4      -338986.128988      -339296.691488    -338986.128988  104249.750000     104.041667    -339296.691488       12.125000                8.083333           100.0           100.5                1.0                3.0                  1.0                  2.0   81670.044922                 100.0                 201.0  298.437500           1.0      200.000000 -339198.253988       2.0
5      -338882.087321      -339098.254150    -338882.087321  104352.229167     104.041667    -339098.254150       16.166667               12.125000           100.0           100.5                1.0                3.0                  1.0                  2.0   81670.044922                 100.0                 201.0  200.000163           1.0      200.000000 -339098.253988       2.0
6      -338778.045654      -338998.253988    -338778.045654  104257.833496     104.041667    -338998.253988       20.208333               16.166667           100.0           100.5                1.0                3.0                  1.0                  2.0   81670.044922                 100.0                 201.0  200.000000           1.0      200.000000 -338998.253988       2.0
7      -338674.003988      -338898.253988    -338674.003988  104261.875000     104.041667    -338898.253988       24.250000               20.208333           100.0           100.5                1.0                3.0                  1.0                  2.0   81670.044922                 100.0                 201.0  200.000000           1.0      200.000000 -338898.253988       2.0
8      -338569.962321      -338798.254150    -338569.962321  104265.916667     104.041667    -338798.254150       28.291667               24.250000           100.0           100.5                1.0                3.0                  1.0                  2.0   81670.044922                 100.0                 201.0  200.000163           1.0      200.000000 -338798.253988       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=173695/6144, beliefs_improve=False, alpha=97/24, buf_size=200.[0m
[01/10 18:06:53]  --------------------------------------------------------------------------------
[01/10 18:06:53]  Iteration: 25 (0 solution, 24 counterexamples)
[01/10 18:07:25]  Generator returned sat in 28.788916 secs.
[01/10 18:07:25]  Candidate solution: 
[1m[94mif (+ 3/2min_c + -1max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -3/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:07:34]  Improved number of small numbers from 60 to 81 out of a max of 164
[01/10 18:07:34]  Verifer returned sat in 8.969642 secs.
[01/10 18:07:34]  sf_get_cex returned in 9.093089 secs.
[01/10 18:07:34]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -339818.169383      -339818.169383    -339818.169383       0.107178       0.107178    -339818.169383        0.000000                0.000000       99.997767      157.996582                1.0                3.0                  1.0             2.013184   81789.960317             99.997767            318.076127    0.000000          -1.0     -100.000000 -339718.169383       2.0
1      -339618.173848      -339618.200643    -339618.173848  199995.534261     199.995534    -339618.200643        0.000000                0.000000       99.997767      157.996582                0.0                1.0                  1.0             2.013184   81789.960317             99.997767            318.076127    0.026794           0.0       -0.004466 -339618.169383       0.0
2      -339418.178314      -339518.216273    -339418.178314  199995.561056     199.995534    -339518.216273        0.000000                0.000000       99.997767      157.996582                0.0                1.0                  1.0             2.013184   81789.960317             99.997767            318.076127  100.037959           0.0       99.991069 -339518.169383       0.0
3      -339218.182780      -339418.231903    -339218.182780  200095.572220     199.995534    -339418.231903        0.000000                0.000000       99.997767      157.996582                0.0                2.0                  1.0             2.013184   81789.960317             99.997767            318.076127  200.049123           0.0      199.986603 -339418.169383       1.0
4      -339018.187246      -339392.300006    -339018.187246  200195.583384     199.995534    -339392.300006       99.982137                0.000000       99.997767      157.996582                0.0                2.0                  1.0             2.013184   81789.960317             99.997767            318.076127  274.130623           0.0      200.000000 -339318.169383       1.0
5      -338818.191711      -339234.303355    -338818.191711  200369.647021     199.995534    -339234.303355      199.977671               99.982137       99.997767      157.996582                1.0                3.0                  1.0             2.013184   81789.960317             99.997767            318.076127  216.133972           1.0      200.000000 -339218.169383       2.0
6      -338618.196177      -339218.169383    -338618.196177  200411.645905     199.995534    -339218.169383      299.973206              199.977671       99.997767      157.996582                1.0                3.0                  1.0             2.013184   81789.960317             99.997767            318.076127  300.000000           1.0      200.000000 -339118.169383       2.0
7      -338418.200643      -339076.306704    -338418.200643  200595.507467     199.995534    -339076.306704      399.968740              299.973206       99.997767      157.996582                1.0                3.0                  1.0             2.013184   81789.960317             99.997767            318.076127  258.137321           1.0      200.000000 -339018.169383       2.0
8      -338218.205109      -338918.309814    -338218.205109  200653.640322     199.995534    -338918.309814      499.964274              399.968740       99.997767      157.996582                1.0                3.0                  1.0             2.013184   81789.960317             99.997767            318.076127  200.140432           1.0      200.000000 -338918.169383       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=6143561/12288, beliefs_improve=False, alpha=55/4096, buf_size=200.[0m
[01/10 18:07:34]  --------------------------------------------------------------------------------
[01/10 18:07:34]  Iteration: 26 (0 solution, 25 counterexamples)
[01/10 18:08:07]  Generator returned sat in 30.602962 secs.
[01/10 18:08:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:08:17]  Verifer returned unsat in 9.614708 secs.
[01/10 18:08:17]  sf_get_cex returned in 9.770786 secs.
[01/10 18:08:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:08:17]  --------------------------------------------------------------------------------
[01/10 18:08:17]  Iteration: 27 (1 solution, 25 counterexamples)
[01/10 18:08:24]  Generator returned sat in 4.386559 secs.
[01/10 18:08:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:08:32]  Improved gap from 0.0 to 48.4375
[01/10 18:08:33]  Improved number of small numbers from 130 to 165 out of a max of 165
[01/10 18:08:33]  Verifer returned sat in 8.053986 secs.
[01/10 18:08:33]  sf_get_cex returned in 8.178160 secs.
[01/10 18:08:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -412269.230957      -412270.016357    -412269.230957       0.107178       0.106934    -412270.016357             0.0                     0.0       99.714355      197.428711                1.0                3.0                  1.0             2.892578  154341.807373             99.714355            571.077971   0.785400          -1.0        0.785400 -412270.016357       2.0
1      -412219.373779      -412269.123779    -412219.373779   49857.963135      49.857178    -412269.123779             0.0                     0.0       99.714355      197.428711                0.0                1.0                  1.0             2.892578  154391.164795             99.714355            571.077971  49.750000           0.0        0.000000 -412219.373779       0.0
2      -412169.516602      -412219.266602    -412169.516602   49906.927734      49.857178    -412219.266602             0.0                     0.0       99.714355      197.428711                0.0                1.0                  1.0             2.892578  154441.307617             99.714355            571.077971  49.750000           0.0        0.000000 -412169.516602       0.0
3      -412119.659424      -412169.516602    -412119.659424   49906.927734      49.857178    -412169.516602             0.0                     0.0       99.714355      197.428711                0.0                2.0                  1.0             2.892578  154491.450439             99.714355            571.077971  49.857178           0.0        0.000000 -412119.659424       1.0
4      -412069.802246      -412119.445068    -412069.802246   49907.034912      49.857178    -412119.445068             0.0                     0.0       99.714355      197.428711                0.0                1.0                  1.0             2.892578  154541.486084             99.714355            571.077971  49.642822           0.0       -0.107178 -412069.695068       0.0
5      -412019.945068      -412069.695068    -412019.945068   49906.820557      49.857178    -412069.695068             0.0                     0.0       99.714355      197.428711                0.0                1.0                  1.0             2.892578  154591.736084             99.714355            571.077971  49.750000           0.0        0.000000 -412019.945068       0.0
6      -411970.087891      -412019.945068    -411970.087891   49906.927734      49.857178    -412019.945068             0.0                     0.0       99.714355      197.428711                0.0                2.0                  1.0             2.892578  154641.878906             99.714355            571.077971  49.857178           0.0        0.000000 -411970.087891       1.0
7      -411920.230713      -411970.087891    -411920.230713   49907.034912      49.857178    -411970.087891             0.0                     0.0       99.714355      197.428711                0.0                2.0                  1.0             2.892578  154692.021729             99.714355            571.077971  49.857178           0.0        0.000000 -411920.230713       1.0
8      -411870.373535      -411920.123535    -411870.373535   49907.034912      49.857178    -411920.123535             0.0                     0.0       99.714355      197.428711                0.0                1.0                  1.0             2.892578  154692.021729             99.714355            571.077971  49.750000           0.0      -50.142822 -411820.230713       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=10185/512, buf_size=200.[0m
[01/10 18:08:33]  --------------------------------------------------------------------------------
[01/10 18:08:33]  Iteration: 28 (1 solution, 26 counterexamples)
[01/10 18:09:26]  Generator returned sat in 50.553837 secs.
[01/10 18:09:26]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1/2min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:09:50]  Improved number of small numbers from 108 to 111 out of a max of 164
[01/10 18:09:50]  Verifer returned sat in 23.619395 secs.
[01/10 18:09:50]  sf_get_cex returned in 23.745484 secs.
[01/10 18:09:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -507259.364868      -507459.364868    -507259.364868       0.107178       0.106689    -507459.364868        0.000000                0.000000           100.0      149.999756                2.0                4.0                  2.0                  3.0  249531.155884                 200.0            449.999268  200.000000          -1.0      200.000000 -507459.364868       3.0
1      -507174.338135      -507359.364868    -507174.338135   85226.733398      85.026733    -507359.364868        0.000000                0.000000           100.0      149.999756                0.0                2.0                  2.0                  3.0  249531.155884                 200.0            449.999268  185.026733           0.0      185.026733 -507359.364868       1.0
2      -507059.364868      -507359.364868    -507059.364868  115158.293335     114.973267    -507359.364868        0.000000                0.000000           100.0      149.999756                0.0                2.0                  2.0                  3.0  249531.155884                 200.0            449.999268  300.000000           0.0      200.000000 -507259.364868       1.0
3      -506944.391602      -507259.231201    -506944.391602  115273.266602     114.973267    -507259.231201       14.973267                0.000000           100.0      149.999756                1.0                3.0                  2.0                  3.0  249531.155884                 200.0            449.999268  299.866333           1.0      200.000000 -507159.364868       2.0
4      -506829.418335      -507159.257935    -506829.418335  115288.106201     114.973267    -507159.257935       29.946533               14.973267           100.0      149.999756                1.0                3.0                  2.0                  3.0  249531.155884                 200.0            449.999268  299.893066           1.0      200.000000 -507059.364868       2.0
5      -506714.445068      -507059.364868    -506714.445068  115303.106201     114.973267    -507059.364868       44.919800               29.946533           100.0      149.999756                2.0                4.0                  2.0                  3.0  249531.155884                 200.0            449.999268  300.000000           1.0      200.000000 -506959.364868       3.0
6      -506629.418335      -506909.284668    -506629.418335   85371.653198      85.026733    -506909.284668       44.919800               44.919800           100.0      149.999756                1.0                3.0                  2.0                  3.0  249531.155884                 200.0            449.999268  234.946533           1.0      185.026733 -506859.364868       2.0
7      -506514.445068      -506759.364990    -506514.445068  115253.132935     114.973267    -506759.364990       44.919800               44.919800           100.0      149.999756                1.0                3.0                  2.0                  3.0  249531.155884                 200.0            449.999268  200.000122           1.0      200.000000 -506759.364868       2.0
8      -506399.471802      -506659.552246    -506399.471802  115218.186523     114.973267    -506659.552246       59.893066               44.919800           100.0      149.999756                0.0                2.0                  2.0                  3.0  249531.155884                 200.0            449.999268  200.187378           0.0      200.000000 -506659.364868       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=122661/2048, beliefs_improve=False, alpha=122661/8192, buf_size=200.[0m
[01/10 18:09:50]  --------------------------------------------------------------------------------
[01/10 18:09:50]  Iteration: 29 (1 solution, 27 counterexamples)
[01/10 18:11:14]  Generator returned sat in 81.119655 secs.
[01/10 18:11:15]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:11:22]  Improved gap from 0.02667236328125 to 100
[01/10 18:11:23]  Improved number of small numbers from 85 to 165 out of a max of 165
[01/10 18:11:23]  Verifer returned sat in 8.496223 secs.
[01/10 18:11:23]  sf_get_cex returned in 8.616975 secs.
[01/10 18:11:23]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -491100.802979      -491290.723145    -491100.802979       0.106934       0.106689    -491290.723145        0.000000                0.000000           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  189.920166          -1.0      189.813477 -491290.616455       2.0
1      -490990.696289      -491290.616211    -490990.696289  110296.609619     110.106689    -491290.616211        0.000000                0.000000           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  299.919922           1.0      199.920166 -491190.616455       2.0
2      -490880.589600      -491190.616211    -490880.589600  110406.609375     110.106689    -491190.616211       10.026855                0.000000           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  299.999756           1.0      200.000000 -491090.616455       2.0
3      -490770.482910      -490990.696289    -490770.482910  110416.716064     110.106689    -490990.696289       20.133545               10.026855           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  200.079834           1.0      200.000000 -490990.616455       2.0
4      -490660.376221      -490890.616455    -490660.376221  110326.902832     110.106689    -490890.616455       30.240234               20.133545           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  200.000000           1.0      200.000000 -490890.616455       2.0
5      -490550.269531      -490890.616211    -490550.269531  110336.929688     110.106689    -490890.616211       40.346924               30.240234           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  299.999756           1.0      200.000000 -490790.616455       2.0
6      -490440.162842      -490790.589600    -490440.162842  110447.036133     110.106689    -490790.589600       50.453613               40.346924           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  299.973145           1.0      200.000000 -490690.616455       2.0
7      -490330.056152      -490690.562988    -490330.056152  110457.116211     110.106689    -490690.562988       60.560303               50.453613           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  299.946533           1.0      200.000000 -490590.616455       2.0
8      -490219.949463      -490590.536377    -490219.949463  110467.196289     110.106689    -490590.536377       70.666992               60.560303           100.0           100.0                1.0                3.0                  1.0             2.026611  233362.407227                 100.0            202.661133  299.919922           1.0      200.000000 -490490.616455       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=72363/1024, beliefs_improve=False, alpha=41397/4096, buf_size=200.[0m
[01/10 18:11:23]  --------------------------------------------------------------------------------
[01/10 18:11:23]  Iteration: 30 (1 solution, 28 counterexamples)
[01/10 18:12:01]  Generator returned sat in 34.510666 secs.
[01/10 18:12:01]  Candidate solution: 
[1m[94mif (+ 1/2min_c + -1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:12:27]  Improved gap from 0.533447265625 to 100
[01/10 18:12:29]  Improved number of small numbers from 125 to 125 out of a max of 165
[01/10 18:12:29]  Verifer returned sat in 27.560283 secs.
[01/10 18:12:29]  sf_get_cex returned in 27.679080 secs.
[01/10 18:12:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t    upper_S_t  qdelay_t
0      -491107.696289      -491271.589600    -491107.696289       0.106934       0.106689    -491271.589600        0.000000                0.000000            99.0           119.0                1.0                3.0                  1.0                  2.0  233362.407227                  99.0                 238.0  163.893311          -1.0      163.893311 -491271.5896       2.0
1      -490990.722961      -491233.722961    -490990.722961  117137.220947     116.973328    -491233.722961        0.000000                0.000000            99.0           119.0                1.0                3.0                  1.0                  2.0  233362.407227                  99.0                 238.0  243.000000           1.0      180.866638 -491171.5896       2.0
2      -490873.749634      -491152.589600    -490873.749634  117216.327637     116.973328    -491152.589600        0.000000                0.000000            99.0           119.0                1.0                3.0                  1.0                  2.0  233362.407227                  99.0                 238.0  278.839966           1.0      197.839966 -491071.5896       2.0
3      -490756.776306      -490990.696289    -490756.776306  117252.167603     116.973328    -490990.696289       14.813293                0.000000            99.0           119.0                0.0                2.0                  1.0                  2.0  233362.407227                  99.0                 238.0  219.106689           0.0      200.000000 -490971.5896       1.0
4      -490639.802979      -490871.589600    -490639.802979  117207.247620     116.973328    -490871.589600       31.786621               14.813293            99.0           119.0                0.0                2.0                  1.0                  2.0  233362.407227                  99.0                 238.0  200.000000           1.0      200.000000 -490871.5896       1.0
5      -490522.829651      -490871.589600    -490522.829651  117205.114258     116.973328    -490871.589600       48.759949               31.786621            99.0           119.0                0.0                2.0                  1.0                  2.0  233362.407227                  99.0                 238.0  300.000000           1.0      200.000000 -490771.5896       1.0
6      -490405.856323      -490752.589600    -490405.856323  117322.087585     116.973328    -490752.589600       65.733276               48.759949            99.0           119.0                1.0                3.0                  1.0                  2.0  233362.407227                  99.0                 238.0  281.000000           1.0      200.000000 -490671.5896       2.0
7      -490288.882996      -490633.589600    -490288.882996  117320.060913     116.973328    -490633.589600       82.706604               65.733276            99.0           119.0                1.0                3.0                  1.0                  2.0  233362.407227                  99.0                 238.0  262.000000           1.0      200.000000 -490571.5896       2.0
8      -490171.909668      -490514.589600    -490171.909668  117318.034241     116.973328    -490514.589600       99.679932               82.706604            99.0           119.0                1.0                3.0                  1.0                  2.0  233362.407227                  99.0                 238.0  243.000000           1.0      200.000000 -490471.5896       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=6, 
, large_loss_count=0, loss_amount=408289/4096, beliefs_improve=False, alpha=294475/16384, buf_size=200.[0m
[01/10 18:12:29]  --------------------------------------------------------------------------------
[01/10 18:12:29]  Iteration: 31 (1 solution, 29 counterexamples)
[01/10 18:12:50]  Generator returned sat in 18.248599 secs.
[01/10 18:12:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:13:01]  Improved gap from 0.0 to 48.4375
[01/10 18:13:02]  Improved number of small numbers from 95 to 108 out of a max of 165
[01/10 18:13:02]  Verifer returned sat in 12.107312 secs.
[01/10 18:13:02]  sf_get_cex returned in 12.224009 secs.
[01/10 18:13:02]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -491082.936340      -491082.989685    -491082.936340       0.106689       0.106689    -491082.989685             0.0                     0.0       49.053345           100.0                2.0                4.0                  2.0             4.053467  233312.076416             98.106689             405.34668   0.053345          -1.0        0.000000 -491082.936340       3.0
1      -491033.882996      -491082.936340    -491033.882996   49053.398071      49.053345    -491082.936340             0.0                     0.0       49.053345           100.0                0.0                2.0                  2.0             4.053467  233362.407227             98.106689             405.34668  49.053345           0.0       -0.615845 -491033.267151       1.0
2      -490984.829651      -491033.267151    -490984.829651   49102.398071      49.053345    -491033.267151             0.0                     0.0       49.053345           100.0                0.0                1.0                  2.0             4.053467  233413.969482             98.106689             405.34668  48.437500           0.0       -0.000244 -490984.829407       0.0
3      -490935.776306      -490984.776306    -490935.776306   49101.782227      49.053345    -490984.776306             0.0                     0.0       49.053345           100.0                0.0                1.0                  2.0             4.053467  233464.916382             98.106689             405.34668  49.000000           0.0        0.000000 -490935.776306       0.0
4      -490886.722961      -490935.776306    -490886.722961   49102.344727      49.053345    -490935.776306             0.0                     0.0       49.053345           100.0                0.0                2.0                  2.0             4.053467  233515.863037             98.106689             405.34668  49.053345           0.0        0.000000 -490886.722961       1.0
5      -490837.669617      -490886.669617    -490837.669617   49102.398071      49.053345    -490886.669617             0.0                     0.0       49.053345           100.0                0.0                1.0                  2.0             4.053467  233566.809570             98.106689             405.34668  49.000000           0.0       -0.000122 -490837.669495       0.0
6      -490788.616272      -490829.918030    -490788.616272   49102.344727      49.053345    -490829.918030             0.0                     0.0       49.053345           100.0                0.0                1.0                  2.0             4.053467  233610.620605             98.106689             405.34668  41.301758           0.0       -7.135742 -490781.480530       0.0
7      -490739.562927      -490781.480530    -490739.562927   49094.646484      49.053345    -490781.480530             0.0                     0.0       49.053345           100.0                0.0                1.0                  2.0             4.053467  233662.183105             98.106689             405.34668  41.917603           0.0       -6.519897 -490733.043030       0.0
8      -490690.509583      -490733.042969    -490690.509583   49095.262329      49.053345    -490733.042969             0.0                     0.0       49.053345           100.0                0.0                1.0                  2.0             4.053467  233713.745361             98.106689             405.34668  42.533386           0.0       -5.904297 -490684.605286       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40851/2048, buf_size=200.[0m
[01/10 18:13:02]  --------------------------------------------------------------------------------
[01/10 18:13:02]  Iteration: 32 (1 solution, 30 counterexamples)
[01/10 18:14:48]  Generator returned sat in 102.820821 secs.
[01/10 18:14:49]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 1/2min_c + -1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 18:15:04]  Improved number of small numbers from 65 to 85 out of a max of 164
[01/10 18:15:04]  Verifer returned sat in 15.517194 secs.
[01/10 18:15:04]  sf_get_cex returned in 15.640912 secs.
[01/10 18:15:04]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -491199.912929      -491407.455933    -491199.912929       0.106689       0.106689    -491407.455933        0.000000                0.000000       97.203823      101.203857                2.0                4.0                  2.0             2.053223  233566.969727            194.407645            207.794053  207.543004          -1.0      200.000000 -491399.912929       3.0
1      -491082.762451      -491306.198765    -491082.762451  117358.020822     117.150478    -491306.198765       17.150478                0.000000       97.203823      101.203857                2.0                4.0                  2.0             2.053223  233566.969727            194.407645            207.794053  206.285836           1.0      200.000000 -491299.912929       3.0
2      -490965.611973      -491204.941598    -490965.611973  117373.914132     117.150478    -491204.941598       34.300956               17.150478       97.203823      101.203857                2.0                4.0                  2.0             2.053223  233566.969727            194.407645            207.794053  205.028669           1.0      200.000000 -491199.912929       3.0
3      -490848.461496      -491199.912929    -490848.461496  117389.807443     117.150478    -491199.912929       51.451433               34.300956       97.203823      101.203857                2.0                4.0                  2.0             2.053223  233566.969727            194.407645            207.794053  300.000000           1.0      200.000000 -491099.912929       3.0
4      -490731.311018      -491099.859584    -490731.311018  117501.929252     117.150478    -491099.859584       68.601911               51.451433       97.203823      101.203857                1.0                3.0                  2.0             2.053223  233566.969727            194.407645            207.794053  299.946655           1.0      200.000000 -490999.912929       2.0
5      -490682.709106      -490999.912929    -490682.709106   48970.459839      48.601911    -490999.912929       68.601911               68.601911       97.203823      101.203857                2.0                4.0                  2.0             2.053223  233566.969727            194.407645            207.794053  248.601911           1.0      148.601911 -490899.912929       3.0
6      -490565.558629      -490899.912929    -490565.558629  117467.681641     117.150478    -490899.912929       68.601911               68.601911       97.203823      101.203857                2.0                4.0                  2.0             2.053223  233566.969727            194.407645            207.794053  265.752389           1.0      165.752389 -490799.912929       3.0
7      -490448.408151      -490799.912929    -490448.408151  117484.832118     117.150478    -490799.912929       68.601911               68.601911       97.203823      101.203857                2.0                4.0                  2.0             2.053223  233566.969727            194.407645            207.794053  282.902867           1.0      182.902867 -490699.912929       3.0
8      -490331.257673      -490617.010254    -490331.257673  117501.982596     117.150478    -490617.010254       68.655256               68.601911       97.203823      101.203857                0.0                2.0                  2.0             2.053223  233566.969727            194.407645            207.794053  217.097325           0.0      200.000000 -490599.912929       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=1476745/28672, beliefs_improve=False, alpha=163403/8192, buf_size=200.[0m
[01/10 18:15:04]  --------------------------------------------------------------------------------
[01/10 18:15:04]  Iteration: 33 (1 solution, 31 counterexamples)
[01/10 18:16:09]  Generator returned sat in 61.631352 secs.
[01/10 18:16:09]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_qdel + 1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:16:17]  Improved gap from 0.0 to 100
[01/10 18:16:18]  Improved number of small numbers from 110 to 165 out of a max of 165
[01/10 18:16:18]  Verifer returned sat in 8.308481 secs.
[01/10 18:16:18]  sf_get_cex returned in 8.429455 secs.
[01/10 18:16:18]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -491257.126465      -491457.752930    -491257.126465       0.106689       0.106445    -491457.752930        0.000000                0.000000            86.0      209.999756                1.0                3.0                  1.0                  2.0  233566.969727                  86.0            419.999512  200.626465          -1.0      184.946533 -491442.072998       2.0
1      -491214.126465      -491371.806152    -491214.126465   43200.626465      43.000000    -491371.806152        0.000000                0.000000            86.0      209.999756                0.0                2.0                  1.0                  2.0  233566.969727                  86.0            419.999512  157.679688           0.0      127.946533 -491342.072998       1.0
2      -491042.126465      -491257.126465    -491042.126465  172157.679688     172.000000    -491257.126465        0.000000                0.000000            86.0      209.999756                1.0                3.0                  1.0                  2.0  233566.969727                  86.0            419.999512  215.000000           1.0      199.946533 -491242.072998       2.0
3      -490999.126465      -491199.912842    -490999.126465   43215.000000      43.000000    -491199.912842        0.000000                0.000000            86.0      209.999756                0.0                2.0                  1.0                  2.0  233566.969727                  86.0            419.999512  200.786377           0.0      142.946533 -491142.072998       1.0
4      -490827.126465      -491113.966309    -490827.126465  172200.786377     172.000000    -491113.966309       14.946533                0.000000            86.0      209.999756                1.0                3.0                  1.0                  2.0  233566.969727                  86.0            419.999512  271.893311           1.0      200.000000 -491042.072998       2.0
5      -490784.126465      -490942.072998    -490784.126465   43286.839844      43.000000    -490942.072998       14.946533               14.946533            86.0      209.999756                0.0                2.0                  1.0                  2.0  233566.969727                  86.0            419.999512  143.000000           1.0      143.000000 -490942.072998       1.0
6      -490612.126465      -490942.072998    -490612.126465  172157.946533     172.000000    -490942.072998       29.946533               14.946533            86.0      209.999756                0.0                2.0                  1.0                  2.0  233566.969727                  86.0            419.999512  300.000000           0.0      200.000000 -490842.072998       1.0
7      -490440.126465      -490799.019531    -490440.126465  172329.946533     172.000000    -490799.019531      101.946533               29.946533            86.0      209.999756                0.0                2.0                  1.0                  2.0  233566.969727                  86.0            419.999512  256.946533           1.0      200.000000 -490742.072998       1.0
8      -490268.126465      -490732.019775    -490268.126465  172358.893066     172.000000    -490732.019775      173.946533              101.946533            86.0      209.999756                1.0                3.0                  1.0                  2.0  233566.969727                  86.0            419.999512  289.946777           1.0      200.000000 -490642.072998       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=712485/4096, beliefs_improve=False, alpha=219/4096, buf_size=200.[0m
[01/10 18:16:18]  --------------------------------------------------------------------------------
[01/10 18:16:18]  Iteration: 34 (1 solution, 32 counterexamples)
[01/10 18:17:11]  Generator returned sat in 49.628052 secs.
[01/10 18:17:11]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -3/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 18:17:32]  Improved gap from 2.313720703125 to 48.4375
[01/10 18:17:33]  Improved number of small numbers from 138 to 165 out of a max of 165
[01/10 18:17:33]  Verifer returned sat in 21.385161 secs.
[01/10 18:17:33]  sf_get_cex returned in 21.522936 secs.
[01/10 18:17:33]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       815681.595459       815681.542236     815681.595459       0.106445       0.106445     815681.542236             0.0                     0.0       49.526611           100.0                1.0                3.0                  1.0             3.052979  233415.602783             49.526611            305.297852   0.053223          -1.0        0.053223  815681.542236       2.0
1       815731.122070       815681.595459     815731.122070   49526.664551      49.526611     815681.595459             0.0                     0.0       49.526611           100.0                0.0                2.0                  1.0             3.052979  233466.022949             49.526611            305.297852  49.526611           0.0        0.000000  815731.122070       1.0
2       815780.648682       815732.211182     815780.648682   49576.137939      49.526611     815732.211182             0.0                     0.0       49.526611           100.0                0.0                1.0                  1.0             3.052979  233516.496338             49.526611            305.297852  48.437500           0.0        0.000000  815780.648682       0.0
3       815830.175293       815780.648682     815830.175293   49575.048828      49.526611     815780.648682             0.0                     0.0       49.526611           100.0                0.0                2.0                  1.0             3.052979  233566.969482             49.526611            305.297852  49.526611           0.0       -0.000244  815830.175537       1.0
4       815879.701904       815830.228516     815879.701904   49576.137939      49.526611     815830.228516             0.0                     0.0       49.526611           100.0                0.0                1.0                  1.0             3.052979  233617.442871             49.526611            305.297852  49.473389           0.0       -0.000244  815879.702148       0.0
5       815929.228516       815880.791016     815929.228516   49576.084717      49.526611     815880.791016             0.0                     0.0       49.526611           100.0                0.0                1.0                  1.0             3.052979  233667.916260             49.526611            305.297852  48.437500           0.0       -0.000244  815929.228760       0.0
6       815978.755127       815929.281738     815978.755127   49575.048828      49.526611     815929.281738             0.0                     0.0       49.526611           100.0                0.0                1.0                  1.0             3.052979  233718.389893             49.526611            305.297852  49.473389           0.0        0.000000  815978.755127       0.0
7       816028.281738       815978.755127     816028.281738   49576.084717      49.526611     815978.755127             0.0                     0.0       49.526611           100.0                0.0                2.0                  1.0             3.052979  233765.656006             49.526611            305.297852  49.526611           0.0       -3.207275  816031.489014       1.0
8       816077.808350       816031.489014     816077.808350   49576.137939      49.526611     816031.489014             0.0                     0.0       49.526611           100.0                0.0                1.0                  1.0             3.052979  233765.656006             49.526611            305.297852  46.319336           0.0      -53.680664  816131.489014       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=109/2048, buf_size=200.[0m
[01/10 18:17:33]  --------------------------------------------------------------------------------
[01/10 18:17:33]  Iteration: 35 (1 solution, 33 counterexamples)
[01/10 18:18:53]  Generator returned sat in 76.419154 secs.
[01/10 18:18:53]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 1/2min_c + 3/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:19:01]  Improved number of small numbers from 164 to 164 out of a max of 164
[01/10 18:19:01]  Verifer returned sat in 7.500360 secs.
[01/10 18:19:01]  sf_get_cex returned in 7.627085 secs.
[01/10 18:19:01]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       815840.334961       815540.547852     815840.334961       0.106445       0.106445     815540.547852        0.000000                0.000000           100.0      109.745117                2.0                4.0                  2.0                  2.0   233667.91626                 200.0            219.490234  299.787109          -1.0      199.787109  815640.547852       3.0
1       815931.068848       815640.867188     815931.068848   91033.673828      90.733887     815640.867188        0.000000                0.000000           100.0      109.745117                0.0                2.0                  2.0                  2.0   233667.91626                 200.0            219.490234  290.201660           0.0      190.520996  815740.547852       1.0
2       816040.334961       815840.388184     816040.334961  109556.314941     109.266113     815840.388184        0.000000                0.000000           100.0      109.745117                0.0                2.0                  2.0                  2.0   233667.91626                 200.0            219.490234  199.946777           0.0      199.787109  815840.547852       1.0
3       816149.601074       815931.068848     816149.601074  109466.060059     109.266113     815931.068848        9.053223                0.000000           100.0      109.745117                1.0                3.0                  2.0                  2.0   233667.91626                 200.0            219.490234  209.479004           1.0      200.000000  815940.547852       2.0
4       816240.334961       816040.547852     816240.334961   90952.418945      90.733887     816040.547852        9.053223                9.053223           100.0      109.745117                0.0                2.0                  2.0                  2.0   233667.91626                 200.0            219.490234  190.733887           1.0      190.733887  816040.547852       1.0
5       816349.601074       816040.547852     816349.601074  109465.900391     109.266113     816040.547852        9.053223                9.053223           100.0      109.745117                0.0                2.0                  2.0                  2.0   233667.91626                 200.0            219.490234  300.000000           0.0      200.000000  816140.547852       1.0
6       816458.867188       816240.547852     816458.867188  109575.166504     109.266113     816240.547852       18.319336                9.053223           100.0      109.745117                0.0                2.0                  2.0                  2.0   233667.91626                 200.0            219.490234  200.000000           0.0      200.000000  816240.547852       1.0
7       816568.133301       816240.547852     816568.133301  109484.432617     109.266113     816240.547852       27.585449               18.319336           100.0      109.745117                0.0                2.0                  2.0                  2.0   233667.91626                 200.0            219.490234  300.000000           1.0      200.000000  816340.547852       1.0
8       816677.399414       816350.346191     816677.399414  109593.698730     109.266113     816350.346191       36.851562               27.585449           100.0      109.745117                1.0                3.0                  2.0                  2.0   233667.91626                 200.0            219.490234  290.201660           1.0      200.000000  816440.547852       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=4717/128, beliefs_improve=False, alpha=18977/2048, buf_size=200.[0m
[01/10 18:19:01]  --------------------------------------------------------------------------------
[01/10 18:19:01]  Iteration: 36 (1 solution, 34 counterexamples)
[01/10 18:20:14]  Generator returned sat in 69.459502 secs.
[01/10 18:20:14]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 3/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 18:20:26]  Improved gap from 0.0531005859375 to 48.4375
[01/10 18:20:28]  Improved number of small numbers from 104 to 109 out of a max of 165
[01/10 18:20:28]  Verifer returned sat in 13.883498 secs.
[01/10 18:20:28]  sf_get_cex returned in 14.012695 secs.
[01/10 18:20:28]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        1.191999e+06        1.191999e+06      1.191999e+06       0.106445       0.106201      1.191999e+06             0.0                     0.0       98.796456    94672.999756                2.0                4.0                  2.0                  2.0  233414.801270            197.592913         189345.999512   0.000000          -1.0       -0.106131  1.191999e+06       3.0
1        1.192048e+06        1.191999e+06      1.192048e+06   49398.228237      49.398228      1.191999e+06             0.0                     0.0       98.796456    94672.999756                0.0                1.0                  2.0                  2.0  233465.509173            197.592913         189345.999512  49.292027           0.0        0.000000  1.192048e+06       0.0
2        1.192097e+06        1.192048e+06      1.192097e+06   49447.520264      49.398228      1.192048e+06             0.0                     0.0       98.796456    94672.999756                0.0                2.0                  2.0                  2.0  233516.004883            197.592913         189345.999512  49.398228           0.0       -0.106062  1.192097e+06       1.0
3        1.192147e+06        1.192097e+06      1.192147e+06   49447.626465      49.398228      1.192097e+06             0.0                     0.0       98.796456    94672.999756                0.0                1.0                  2.0                  2.0  233566.712716            197.592913         189345.999512  49.292027           0.0        0.000000  1.192147e+06       0.0
4        1.192196e+06        1.192147e+06      1.192196e+06   49447.520264      49.398228      1.192147e+06             0.0                     0.0       98.796456    94672.999756                0.0                2.0                  2.0                  2.0  233617.314488            197.592913         189345.999512  49.398228           0.0        0.000000  1.192196e+06       1.0
5        1.192246e+06        1.192196e+06      1.192246e+06   49447.626465      49.398228      1.192196e+06             0.0                     0.0       98.796456    94672.999756                0.0                2.0                  2.0                  2.0  233667.916260            197.592913         189345.999512  49.398228           0.0        0.000000  1.192246e+06       1.0
6        1.192295e+06        1.192246e+06      1.192295e+06   49447.626465      49.398228      1.192246e+06             0.0                     0.0       98.796456    94672.999756                0.0                2.0                  2.0                  2.0  233718.518032            197.592913         189345.999512  49.398228           0.0        0.000000  1.192295e+06       1.0
7        1.192344e+06        1.192295e+06      1.192344e+06   49447.626465      49.398228      1.192295e+06             0.0                     0.0       98.796456    94672.999756                0.0                2.0                  2.0                  2.0  233765.013672            197.592913         189345.999512  49.398228           0.0       -4.106131  1.192348e+06       1.0
8        1.192394e+06        1.192348e+06      1.192394e+06   49447.626465      49.398228      1.192348e+06             0.0                     0.0       98.796456    94672.999756                0.0                1.0                  2.0                  2.0  233765.013672            197.592913         189345.999512  45.291860           0.0      -54.707903  1.192448e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81485/4096, buf_size=200.[0m
[01/10 18:20:28]  --------------------------------------------------------------------------------
[01/10 18:20:28]  Iteration: 37 (1 solution, 35 counterexamples)
[01/10 18:22:20]  Generator returned sat in 107.407333 secs.
[01/10 18:22:20]  Candidate solution: 
[1m[94mif (+ -1/2min_c + 1/2max_c + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 18:22:29]  Improved gap from 0.0464630126953125 to 100
[01/10 18:22:32]  Improved number of small numbers from 64 to 84 out of a max of 165
[01/10 18:22:32]  Verifer returned sat in 12.296485 secs.
[01/10 18:22:32]  sf_get_cex returned in 12.420262 secs.
[01/10 18:22:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        1.191007e+06        1.190755e+06      1.191007e+06       0.106445       0.105957      1.190755e+06        0.000000                0.000000       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  251.743335          -1.0      177.628333  1.190829e+06       2.0
1        1.191123e+06        1.190858e+06      1.191123e+06  115950.852222     115.699109      1.190858e+06        0.000000                0.000000       95.725659      117.778564                0.0                2.0                  1.0             2.026611   233065.75708             95.725659            238.691373  264.442480           0.0      193.327441  1.190929e+06       1.0
2        1.191238e+06        1.190976e+06      1.191238e+06  115963.551367     115.699109      1.190976e+06        9.026550                0.000000       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  253.469031           1.0      200.000000  1.191029e+06       2.0
3        1.191354e+06        1.191042e+06      1.191354e+06  115961.604468     115.699109      1.191042e+06       24.725659                9.026550       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  287.017676           1.0      200.000000  1.191129e+06       2.0
4        1.191470e+06        1.191138e+06      1.191470e+06  116010.852222     115.699109      1.191138e+06       40.424768               24.725659       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  291.398218           1.0      200.000000  1.191229e+06       2.0
5        1.191586e+06        1.191329e+06      1.191586e+06  116030.931873     115.699109      1.191329e+06       56.123877               40.424768       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  200.000000           1.0      200.000000  1.191329e+06       2.0
6        1.191701e+06        1.191425e+06      1.191701e+06  115955.232764     115.699109      1.191425e+06       71.822986               56.123877       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  204.221240           1.0      200.000000  1.191429e+06       2.0
7        1.191817e+06        1.191447e+06      1.191817e+06  115975.153113     115.699109      1.191447e+06       87.522095               71.822986       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  282.221240           1.0      200.000000  1.191529e+06       2.0
8        1.191933e+06        1.191565e+06      1.191933e+06  116068.852222     115.699109      1.191565e+06      103.221204               87.522095       95.725659      117.778564                1.0                3.0                  1.0             2.026611   233065.75708             95.725659            238.691373  264.442512           1.0      200.000000  1.191629e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=8455881/81920, beliefs_improve=False, alpha=327245/16384, buf_size=200.[0m
[01/10 18:22:32]  --------------------------------------------------------------------------------
[01/10 18:22:32]  Iteration: 38 (1 solution, 36 counterexamples)
[01/10 18:24:22]  Generator returned sat in 105.493820 secs.
[01/10 18:24:22]  Candidate solution: 
[1m[94mif (+ 2min_c + -3/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1/2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 18:24:29]  Improved gap from 3.3443603515625 to 100
[01/10 18:24:30]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/10 18:24:30]  Verifer returned sat in 7.242835 secs.
[01/10 18:24:30]  sf_get_cex returned in 7.414067 secs.
[01/10 18:24:30]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        1.136584e+06        1.136299e+06      1.136584e+06       0.106445       0.105713      1.136299e+06        0.000000                0.000000            95.0      132.666667                2.0                4.0                  2.0                  2.0  287505.860107                 190.0            265.333333  284.893799          -1.0      194.999756  1.136389e+06       3.0
1        1.136689e+06        1.136489e+06      1.136689e+06  105231.915283     104.947021      1.136489e+06        0.000000                0.000000            95.0      132.666667                0.0                2.0                  2.0                  2.0  287505.860107                 190.0            265.333333  199.946777           0.0      199.946777  1.136489e+06       1.0
2        1.136794e+06        1.136489e+06      1.136794e+06  105146.968262     104.947021      1.136489e+06        4.893799                0.000000            95.0      132.666667                0.0                2.0                  2.0                  2.0  287505.860107                 190.0            265.333333  300.000000           0.0      200.000000  1.136589e+06       1.0
3        1.136899e+06        1.136589e+06      1.136899e+06  105251.915283     104.947021      1.136589e+06        9.840820                4.893799            95.0      132.666667                1.0                3.0                  2.0                  2.0  287505.860107                 190.0            265.333333  300.000000           1.0      200.000000  1.136689e+06       2.0
4        1.137004e+06        1.136756e+06      1.137004e+06  105256.862305     104.947021      1.136756e+06       14.787842                9.840820            95.0      132.666667                1.0                3.0                  2.0                  2.0  287505.860107                 190.0            265.333333  233.530029           1.0      200.000000  1.136789e+06       2.0
5        1.137109e+06        1.136789e+06      1.137109e+06  105195.339355     104.947021      1.136789e+06       19.734863               14.787842            95.0      132.666667                1.0                3.0                  2.0                  2.0  287505.860107                 190.0            265.333333  299.947021           1.0      200.000000  1.136889e+06       2.0
6        1.137214e+06        1.136964e+06      1.137214e+06  105266.703369     104.947021      1.136964e+06       24.681885               19.734863            95.0      132.666667                1.0                3.0                  2.0                  2.0  287505.860107                 190.0            265.333333  225.264893           1.0      200.000000  1.136989e+06       2.0
7        1.137319e+06        1.137059e+06      1.137319e+06  105196.968262     104.947021      1.137059e+06       29.628906               24.681885            95.0      132.666667                1.0                3.0                  2.0                  2.0  287505.860107                 190.0            265.333333  230.317871           1.0      200.000000  1.137089e+06       2.0
8        1.137424e+06        1.137154e+06      1.137424e+06  105206.968262     104.947021      1.137154e+06       34.575928               29.628906            95.0      132.666667                1.0                3.0                  2.0                  2.0  287505.860107                 190.0            265.333333  235.371094           1.0      200.000000  1.137189e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=7, 
, large_loss_count=0, loss_amount=141623/4096, beliefs_improve=False, alpha=40743/4096, buf_size=200.[0m
[01/10 18:24:30]  --------------------------------------------------------------------------------
[01/10 18:24:30]  Iteration: 39 (1 solution, 37 counterexamples)
[01/10 18:27:53]  Generator returned sat in 199.027917 secs.
[01/10 18:27:53]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:28:09]  Improved gap from 87.85904947916667 to 100
[01/10 18:28:10]  Improved number of small numbers from 117 to 165 out of a max of 165
[01/10 18:28:10]  Verifer returned sat in 16.600571 secs.
[01/10 18:28:10]  sf_get_cex returned in 16.755677 secs.
[01/10 18:28:10]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       989894.498779       989894.498779     989894.498779       0.106445       0.105469     989894.498779        0.000000                0.000000       94.596191      149.947021                2.0                4.0                  2.0                  2.0  287505.859863            189.192383            299.894043    0.000000          -1.0      -89.192383  989983.691162       3.0
1       990083.691162       989983.691162     990083.691162  189192.382812     189.192383     989983.691162        0.000000                0.000000       94.596191      149.947021                0.0                1.0                  2.0                  2.0  287505.859863            189.192383            299.894043  100.000000           0.0        0.000000  990083.691162       0.0
2       990272.883545       990172.777832     990272.883545  189292.382812     189.192383     990172.777832        0.000000                0.000000       94.596191      149.947021                0.0                1.0                  2.0                  2.0  287505.859863            189.192383            299.894043  100.105713           0.0       89.192383  990183.691162       0.0
3       990462.075928       990267.321289     990462.075928  189292.488525     189.192383     990267.321289        0.000000                0.000000       94.596191      149.947021                0.0                2.0                  2.0                  2.0  287505.859863            189.192383            299.894043  194.754639           0.0      178.384766  990283.691162       1.0
4       990651.268311       990283.691162     990651.268311  189387.137451     189.192383     990283.691162       67.577148                0.000000       94.596191      149.947021                0.0                2.0                  2.0                  2.0  287505.859863            189.192383            299.894043  300.000000           0.0      200.000000  990383.691162       1.0
5       990840.460693       990383.691162     990840.460693  189559.959961     189.192383     990383.691162      156.769531               67.577148       94.596191      149.947021                1.0                3.0                  2.0                  2.0  287505.859863            189.192383            299.894043  300.000000           1.0      200.000000  990483.691162       2.0
6       991029.653076       990550.951172     991029.653076  189649.152344     189.192383     990550.951172      245.961914              156.769531       94.596191      149.947021                1.0                3.0                  2.0                  2.0  287505.859863            189.192383            299.894043  232.739990           1.0      200.000000  990583.691162       2.0
7       991218.845459       990583.691162     991218.845459  189671.084717     189.192383     990583.691162      335.154297              245.961914       94.596191      149.947021                2.0                4.0                  2.0                  2.0  287505.859863            189.192383            299.894043  300.000000           1.0      200.000000  990683.691162       3.0
8       991408.037842       990740.037598     991408.037842  189827.537109     189.192383     990740.037598      424.346680              335.154297       94.596191      149.947021                1.0                3.0                  2.0                  2.0  287505.859863            189.192383            299.894043  243.653564           1.0      200.000000  990783.691162       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=434531/1024, beliefs_improve=False, alpha=27/512, buf_size=200.[0m
[01/10 18:28:10]  --------------------------------------------------------------------------------
[01/10 18:28:10]  Iteration: 40 (1 solution, 38 counterexamples)
[01/10 18:29:45]  Generator returned sat in 90.002373 secs.
[01/10 18:29:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:30:24]  Verifer returned unsat in 39.267333 secs.
[01/10 18:30:24]  sf_get_cex returned in 39.413884 secs.
[01/10 18:30:24]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:30:24]  --------------------------------------------------------------------------------
[01/10 18:30:24]  Iteration: 41 (2 solution, 38 counterexamples)
[01/10 18:31:03]  Generator returned sat in 34.375305 secs.
[01/10 18:31:03]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:31:09]  Verifer returned unsat in 5.932019 secs.
[01/10 18:31:09]  sf_get_cex returned in 6.062917 secs.
[01/10 18:31:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:31:09]  --------------------------------------------------------------------------------
[01/10 18:31:09]  Iteration: 42 (3 solution, 38 counterexamples)
[01/10 18:31:48]  Generator returned sat in 34.486530 secs.
[01/10 18:31:48]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:32:03]  Verifer returned unsat in 14.885546 secs.
[01/10 18:32:03]  sf_get_cex returned in 15.015923 secs.
[01/10 18:32:03]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:32:03]  --------------------------------------------------------------------------------
[01/10 18:32:03]  Iteration: 43 (4 solution, 38 counterexamples)
[01/10 18:32:42]  Generator returned sat in 34.474857 secs.
[01/10 18:32:42]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:32:50]  Verifer returned unsat in 7.621305 secs.
[01/10 18:32:50]  sf_get_cex returned in 7.745307 secs.
[01/10 18:32:50]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:32:50]  --------------------------------------------------------------------------------
[01/10 18:32:50]  Iteration: 44 (5 solution, 38 counterexamples)
[01/10 18:33:29]  Generator returned sat in 34.444417 secs.
[01/10 18:33:29]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:33:44]  Verifer returned unsat in 14.594274 secs.
[01/10 18:33:44]  sf_get_cex returned in 14.733153 secs.
[01/10 18:33:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:33:44]  --------------------------------------------------------------------------------
[01/10 18:33:44]  Iteration: 45 (6 solution, 38 counterexamples)
[01/10 18:34:23]  Generator returned sat in 34.772980 secs.
[01/10 18:34:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:34:27]  Verifer returned unsat in 3.825924 secs.
[01/10 18:34:27]  sf_get_cex returned in 3.950647 secs.
[01/10 18:34:27]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:34:27]  --------------------------------------------------------------------------------
[01/10 18:34:27]  Iteration: 46 (7 solution, 38 counterexamples)
[01/10 18:35:06]  Generator returned sat in 34.554636 secs.
[01/10 18:35:06]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:35:11]  Verifer returned unsat in 4.839137 secs.
[01/10 18:35:11]  sf_get_cex returned in 4.972818 secs.
[01/10 18:35:11]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:35:12]  --------------------------------------------------------------------------------
[01/10 18:35:12]  Iteration: 47 (8 solution, 38 counterexamples)
[01/10 18:35:50]  Generator returned sat in 34.331811 secs.
[01/10 18:35:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:36:09]  Verifer returned unsat in 18.846313 secs.
[01/10 18:36:09]  sf_get_cex returned in 18.997406 secs.
[01/10 18:36:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:36:09]  --------------------------------------------------------------------------------
[01/10 18:36:09]  Iteration: 48 (9 solution, 38 counterexamples)
[01/10 18:36:48]  Generator returned sat in 34.274418 secs.
[01/10 18:36:48]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:36:51]  Verifer returned unsat in 2.965347 secs.
[01/10 18:36:51]  sf_get_cex returned in 3.121636 secs.
[01/10 18:36:51]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 18:36:51]  --------------------------------------------------------------------------------
[01/10 18:36:51]  Iteration: 49 (10 solution, 38 counterexamples)
[01/10 18:37:53]  Generator returned sat in 56.772036 secs.
[01/10 18:37:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:38:04]  Verifer returned unsat in 10.892947 secs.
[01/10 18:38:04]  sf_get_cex returned in 11.033934 secs.
[01/10 18:38:04]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:38:04]  --------------------------------------------------------------------------------
[01/10 18:38:04]  Iteration: 50 (11 solution, 38 counterexamples)
[01/10 18:38:29]  Generator returned sat in 20.499983 secs.
[01/10 18:38:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:38:36]  Verifer returned unsat in 6.691523 secs.
[01/10 18:38:36]  sf_get_cex returned in 6.827508 secs.
[01/10 18:38:36]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:38:36]  --------------------------------------------------------------------------------
[01/10 18:38:36]  Iteration: 51 (12 solution, 38 counterexamples)
[01/10 18:39:01]  Generator returned sat in 20.620732 secs.
[01/10 18:39:01]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:39:05]  Verifer returned unsat in 3.550911 secs.
[01/10 18:39:05]  sf_get_cex returned in 3.674565 secs.
[01/10 18:39:05]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:39:05]  --------------------------------------------------------------------------------
[01/10 18:39:05]  Iteration: 52 (13 solution, 38 counterexamples)
[01/10 18:39:30]  Generator returned sat in 20.635404 secs.
[01/10 18:39:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:40:02]  Verifer returned unsat in 32.190140 secs.
[01/10 18:40:02]  sf_get_cex returned in 32.334139 secs.
[01/10 18:40:02]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:40:02]  --------------------------------------------------------------------------------
[01/10 18:40:02]  Iteration: 53 (14 solution, 38 counterexamples)
[01/10 18:40:27]  Generator returned sat in 20.871335 secs.
[01/10 18:40:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:40:34]  Verifer returned unsat in 5.754797 secs.
[01/10 18:40:34]  sf_get_cex returned in 5.895852 secs.
[01/10 18:40:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:40:34]  --------------------------------------------------------------------------------
[01/10 18:40:34]  Iteration: 54 (15 solution, 38 counterexamples)
[01/10 18:40:59]  Generator returned sat in 21.025711 secs.
[01/10 18:40:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:41:58]  Verifer returned unsat in 58.252503 secs.
[01/10 18:41:58]  sf_get_cex returned in 58.408441 secs.
[01/10 18:41:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:41:58]  --------------------------------------------------------------------------------
[01/10 18:41:58]  Iteration: 55 (16 solution, 38 counterexamples)
[01/10 18:42:24]  Generator returned sat in 22.216820 secs.
[01/10 18:42:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:42:30]  Verifer returned unsat in 5.055180 secs.
[01/10 18:42:30]  sf_get_cex returned in 5.196309 secs.
[01/10 18:42:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:42:30]  --------------------------------------------------------------------------------
[01/10 18:42:30]  Iteration: 56 (17 solution, 38 counterexamples)
[01/10 18:42:56]  Generator returned sat in 21.294701 secs.
[01/10 18:42:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:43:15]  Verifer returned unsat in 19.118756 secs.
[01/10 18:43:15]  sf_get_cex returned in 19.251864 secs.
[01/10 18:43:15]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:43:15]  --------------------------------------------------------------------------------
[01/10 18:43:15]  Iteration: 57 (18 solution, 38 counterexamples)
[01/10 18:43:41]  Generator returned sat in 21.199701 secs.
[01/10 18:43:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:43:52]  Verifer returned unsat in 11.519842 secs.
[01/10 18:43:53]  sf_get_cex returned in 11.649653 secs.
[01/10 18:43:53]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:43:53]  --------------------------------------------------------------------------------
[01/10 18:43:53]  Iteration: 58 (19 solution, 38 counterexamples)
[01/10 18:44:18]  Generator returned sat in 21.106627 secs.
[01/10 18:44:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:45:10]  Verifer returned unsat in 51.664388 secs.
[01/10 18:45:10]  sf_get_cex returned in 51.799003 secs.
[01/10 18:45:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:45:10]  --------------------------------------------------------------------------------
[01/10 18:45:10]  Iteration: 59 (20 solution, 38 counterexamples)
[01/10 18:45:36]  Generator returned sat in 21.286891 secs.
[01/10 18:45:36]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:45:43]  Verifer returned unsat in 6.873200 secs.
[01/10 18:45:43]  sf_get_cex returned in 6.999423 secs.
[01/10 18:45:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:45:43]  --------------------------------------------------------------------------------
[01/10 18:45:43]  Iteration: 60 (21 solution, 38 counterexamples)
[01/10 18:46:09]  Generator returned sat in 21.123409 secs.
[01/10 18:46:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:46:24]  Verifer returned unsat in 14.614805 secs.
[01/10 18:46:24]  sf_get_cex returned in 14.749477 secs.
[01/10 18:46:24]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:46:24]  --------------------------------------------------------------------------------
[01/10 18:46:24]  Iteration: 61 (22 solution, 38 counterexamples)
[01/10 18:46:49]  Generator returned sat in 21.248989 secs.
[01/10 18:46:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:46:54]  Verifer returned unsat in 4.440115 secs.
[01/10 18:46:54]  sf_get_cex returned in 4.583153 secs.
[01/10 18:46:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:46:54]  --------------------------------------------------------------------------------
[01/10 18:46:54]  Iteration: 62 (23 solution, 38 counterexamples)
[01/10 18:47:20]  Generator returned sat in 20.892565 secs.
[01/10 18:47:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:47:30]  Verifer returned unsat in 10.216251 secs.
[01/10 18:47:30]  sf_get_cex returned in 10.355429 secs.
[01/10 18:47:30]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:47:30]  --------------------------------------------------------------------------------
[01/10 18:47:30]  Iteration: 63 (24 solution, 38 counterexamples)
[01/10 18:47:55]  Generator returned sat in 20.780237 secs.
[01/10 18:47:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:48:01]  Verifer returned unsat in 5.081998 secs.
[01/10 18:48:01]  sf_get_cex returned in 5.209696 secs.
[01/10 18:48:01]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:48:01]  --------------------------------------------------------------------------------
[01/10 18:48:01]  Iteration: 64 (25 solution, 38 counterexamples)
[01/10 18:48:26]  Generator returned sat in 20.744517 secs.
[01/10 18:48:26]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:48:33]  Verifer returned unsat in 6.934814 secs.
[01/10 18:48:33]  sf_get_cex returned in 7.062646 secs.
[01/10 18:48:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:48:33]  --------------------------------------------------------------------------------
[01/10 18:48:33]  Iteration: 65 (26 solution, 38 counterexamples)
[01/10 18:48:58]  Generator returned sat in 20.681655 secs.
[01/10 18:48:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:49:07]  Verifer returned unsat in 7.806997 secs.
[01/10 18:49:07]  sf_get_cex returned in 7.942367 secs.
[01/10 18:49:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:49:07]  --------------------------------------------------------------------------------
[01/10 18:49:07]  Iteration: 66 (27 solution, 38 counterexamples)
[01/10 18:49:32]  Generator returned sat in 20.884243 secs.
[01/10 18:49:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:49:37]  Verifer returned unsat in 4.377933 secs.
[01/10 18:49:37]  sf_get_cex returned in 4.514006 secs.
[01/10 18:49:37]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:49:37]  --------------------------------------------------------------------------------
[01/10 18:49:37]  Iteration: 67 (28 solution, 38 counterexamples)
[01/10 18:50:02]  Generator returned sat in 20.838158 secs.
[01/10 18:50:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:50:17]  Verifer returned unsat in 14.859346 secs.
[01/10 18:50:17]  sf_get_cex returned in 14.986710 secs.
[01/10 18:50:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:50:17]  --------------------------------------------------------------------------------
[01/10 18:50:17]  Iteration: 68 (29 solution, 38 counterexamples)
[01/10 18:50:42]  Generator returned sat in 20.565410 secs.
[01/10 18:50:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:50:49]  Verifer returned unsat in 6.357803 secs.
[01/10 18:50:49]  sf_get_cex returned in 6.490592 secs.
[01/10 18:50:49]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:50:49]  --------------------------------------------------------------------------------
[01/10 18:50:49]  Iteration: 69 (30 solution, 38 counterexamples)
[01/10 18:51:14]  Generator returned sat in 20.744275 secs.
[01/10 18:51:14]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:53:03]  Verifer returned unsat in 108.566122 secs.
[01/10 18:53:03]  sf_get_cex returned in 108.711612 secs.
[01/10 18:53:03]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:53:03]  --------------------------------------------------------------------------------
[01/10 18:53:03]  Iteration: 70 (31 solution, 38 counterexamples)
[01/10 18:53:28]  Generator returned sat in 20.880909 secs.
[01/10 18:53:29]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:53:34]  Verifer returned unsat in 4.881550 secs.
[01/10 18:53:34]  sf_get_cex returned in 5.017993 secs.
[01/10 18:53:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:53:34]  --------------------------------------------------------------------------------
[01/10 18:53:34]  Iteration: 71 (32 solution, 38 counterexamples)
[01/10 18:53:59]  Generator returned sat in 21.029746 secs.
[01/10 18:53:59]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:54:25]  Verifer returned unsat in 25.387001 secs.
[01/10 18:54:25]  sf_get_cex returned in 25.514863 secs.
[01/10 18:54:25]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:54:25]  --------------------------------------------------------------------------------
[01/10 18:54:25]  Iteration: 72 (33 solution, 38 counterexamples)
[01/10 18:54:50]  Generator returned sat in 20.734344 secs.
[01/10 18:54:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:54:59]  Verifer returned unsat in 8.235750 secs.
[01/10 18:54:59]  sf_get_cex returned in 8.362958 secs.
[01/10 18:54:59]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:54:59]  --------------------------------------------------------------------------------
[01/10 18:54:59]  Iteration: 73 (34 solution, 38 counterexamples)
[01/10 18:55:24]  Generator returned sat in 20.853784 secs.
[01/10 18:55:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:55:32]  Verifer returned unsat in 7.573712 secs.
[01/10 18:55:32]  sf_get_cex returned in 7.698270 secs.
[01/10 18:55:32]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:55:32]  --------------------------------------------------------------------------------
[01/10 18:55:32]  Iteration: 74 (35 solution, 38 counterexamples)
[01/10 18:55:57]  Generator returned sat in 20.783628 secs.
[01/10 18:55:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:56:17]  Verifer returned unsat in 20.160726 secs.
[01/10 18:56:17]  sf_get_cex returned in 20.297673 secs.
[01/10 18:56:17]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:56:18]  --------------------------------------------------------------------------------
[01/10 18:56:18]  Iteration: 75 (36 solution, 38 counterexamples)
[01/10 18:56:55]  Generator returned sat in 30.531770 secs.
[01/10 18:56:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:57:07]  Verifer returned unsat in 11.653677 secs.
[01/10 18:57:07]  sf_get_cex returned in 11.876004 secs.
[01/10 18:57:07]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:57:07]  --------------------------------------------------------------------------------
[01/10 18:57:07]  Iteration: 76 (37 solution, 38 counterexamples)
[01/10 18:57:45]  Generator returned sat in 30.430494 secs.
[01/10 18:57:45]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:59:41]  Verifer returned unsat in 115.436565 secs.
[01/10 18:59:41]  sf_get_cex returned in 115.656487 secs.
[01/10 18:59:41]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 18:59:41]  --------------------------------------------------------------------------------
[01/10 18:59:41]  Iteration: 77 (38 solution, 38 counterexamples)
[01/10 19:00:06]  Generator returned sat in 20.319182 secs.
[01/10 19:00:06]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:00:13]  Verifer returned unsat in 6.524435 secs.
[01/10 19:00:13]  sf_get_cex returned in 6.647191 secs.
[01/10 19:00:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:00:13]  --------------------------------------------------------------------------------
[01/10 19:00:13]  Iteration: 78 (39 solution, 38 counterexamples)
[01/10 19:00:37]  Generator returned sat in 20.349893 secs.
[01/10 19:00:38]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:00:52]  Verifer returned unsat in 14.493839 secs.
[01/10 19:00:52]  sf_get_cex returned in 14.620171 secs.
[01/10 19:00:52]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:00:52]  --------------------------------------------------------------------------------
[01/10 19:00:52]  Iteration: 79 (40 solution, 38 counterexamples)
[01/10 19:01:17]  Generator returned sat in 20.367225 secs.
[01/10 19:01:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:01:23]  Verifer returned unsat in 5.500969 secs.
[01/10 19:01:23]  sf_get_cex returned in 5.628101 secs.
[01/10 19:01:23]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -1max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:01:23]  --------------------------------------------------------------------------------
[01/10 19:01:23]  Iteration: 80 (41 solution, 38 counterexamples)
[01/10 19:01:48]  Generator returned sat in 20.350545 secs.
[01/10 19:01:48]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:01:55]  Verifer returned unsat in 6.551134 secs.
[01/10 19:01:55]  sf_get_cex returned in 6.691591 secs.
[01/10 19:01:55]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:01:55]  --------------------------------------------------------------------------------
[01/10 19:01:55]  Iteration: 81 (42 solution, 38 counterexamples)
[01/10 19:02:19]  Generator returned sat in 20.437661 secs.
[01/10 19:02:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:02:27]  Verifer returned unsat in 7.273960 secs.
[01/10 19:02:27]  sf_get_cex returned in 7.407750 secs.
[01/10 19:02:27]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:02:27]  --------------------------------------------------------------------------------
[01/10 19:02:27]  Iteration: 82 (43 solution, 38 counterexamples)
[01/10 19:02:52]  Generator returned sat in 20.458829 secs.
[01/10 19:02:52]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:03:01]  Verifer returned unsat in 8.319105 secs.
[01/10 19:03:01]  sf_get_cex returned in 8.486473 secs.
[01/10 19:03:01]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:03:01]  --------------------------------------------------------------------------------
[01/10 19:03:01]  Iteration: 83 (44 solution, 38 counterexamples)
[01/10 19:03:25]  Generator returned sat in 20.391540 secs.
[01/10 19:03:26]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:03:31]  Verifer returned unsat in 5.262561 secs.
[01/10 19:03:31]  sf_get_cex returned in 5.435560 secs.
[01/10 19:03:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:03:31]  --------------------------------------------------------------------------------
[01/10 19:03:31]  Iteration: 84 (45 solution, 38 counterexamples)
[01/10 19:03:56]  Generator returned sat in 20.436640 secs.
[01/10 19:03:56]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:04:06]  Verifer returned unsat in 10.109155 secs.
[01/10 19:04:06]  sf_get_cex returned in 10.277370 secs.
[01/10 19:04:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:04:07]  --------------------------------------------------------------------------------
[01/10 19:04:07]  Iteration: 85 (46 solution, 38 counterexamples)
[01/10 19:04:31]  Generator returned sat in 20.454273 secs.
[01/10 19:04:32]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:04:39]  Verifer returned unsat in 7.748516 secs.
[01/10 19:04:39]  sf_get_cex returned in 7.872743 secs.
[01/10 19:04:39]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:04:40]  --------------------------------------------------------------------------------
[01/10 19:04:40]  Iteration: 86 (47 solution, 38 counterexamples)
[01/10 19:05:05]  Generator returned sat in 20.638773 secs.
[01/10 19:05:05]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:05:13]  Verifer returned unsat in 7.734997 secs.
[01/10 19:05:13]  sf_get_cex returned in 7.868883 secs.
[01/10 19:05:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:05:13]  --------------------------------------------------------------------------------
[01/10 19:05:13]  Iteration: 87 (48 solution, 38 counterexamples)
[01/10 19:05:37]  Generator returned sat in 20.366096 secs.
[01/10 19:05:38]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:05:54]  Verifer returned unsat in 16.077991 secs.
[01/10 19:05:54]  sf_get_cex returned in 16.211265 secs.
[01/10 19:05:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:05:54]  --------------------------------------------------------------------------------
[01/10 19:05:54]  Iteration: 88 (49 solution, 38 counterexamples)
[01/10 19:06:19]  Generator returned sat in 20.672969 secs.
[01/10 19:06:19]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:06:28]  Verifer returned unsat in 8.836082 secs.
[01/10 19:06:28]  sf_get_cex returned in 8.962063 secs.
[01/10 19:06:28]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:06:28]  --------------------------------------------------------------------------------
[01/10 19:06:28]  Iteration: 89 (50 solution, 38 counterexamples)
[01/10 19:06:53]  Generator returned sat in 20.327809 secs.
[01/10 19:06:53]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:07:03]  Verifer returned unsat in 9.585883 secs.
[01/10 19:07:03]  sf_get_cex returned in 9.718058 secs.
[01/10 19:07:03]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:07:03]  --------------------------------------------------------------------------------
[01/10 19:07:03]  Iteration: 90 (51 solution, 38 counterexamples)
[01/10 19:07:28]  Generator returned sat in 20.357656 secs.
[01/10 19:07:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:07:33]  Verifer returned unsat in 5.092486 secs.
[01/10 19:07:33]  sf_get_cex returned in 5.220117 secs.
[01/10 19:07:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:07:33]  --------------------------------------------------------------------------------
[01/10 19:07:33]  Iteration: 91 (52 solution, 38 counterexamples)
[01/10 19:07:58]  Generator returned sat in 20.571323 secs.
[01/10 19:07:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:08:25]  Verifer returned unsat in 26.602199 secs.
[01/10 19:08:25]  sf_get_cex returned in 26.727810 secs.
[01/10 19:08:25]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:08:25]  --------------------------------------------------------------------------------
[01/10 19:08:25]  Iteration: 92 (53 solution, 38 counterexamples)
[01/10 19:08:50]  Generator returned sat in 20.584854 secs.
[01/10 19:08:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:08:56]  Verifer returned unsat in 5.882914 secs.
[01/10 19:08:56]  sf_get_cex returned in 6.025681 secs.
[01/10 19:08:56]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:08:56]  --------------------------------------------------------------------------------
[01/10 19:08:56]  Iteration: 93 (54 solution, 38 counterexamples)
[01/10 19:09:21]  Generator returned sat in 20.486877 secs.
[01/10 19:09:21]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:09:33]  Verifer returned unsat in 11.866777 secs.
[01/10 19:09:33]  sf_get_cex returned in 11.997819 secs.
[01/10 19:09:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:09:33]  --------------------------------------------------------------------------------
[01/10 19:09:33]  Iteration: 94 (55 solution, 38 counterexamples)
[01/10 19:10:18]  Generator returned sat in 40.001615 secs.
[01/10 19:10:18]  Candidate solution: 
[1m[94mif (+ -1/2min_c + -1/2max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 3/2min_c + -1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:10:27]  Improved number of small numbers from 103 to 104 out of a max of 164
[01/10 19:10:27]  Verifer returned sat in 8.776098 secs.
[01/10 19:10:27]  sf_get_cex returned in 8.910167 secs.
[01/10 19:10:27]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       936770.635009       936759.481906     936770.635009       0.106445       0.105225     936759.481906        0.000000                0.000000       78.310113      126.465332                2.0                4.0                  2.0              2.05249  402632.472168            156.620226            259.568859   11.153103          -1.0        7.153103  936763.481906       3.0
1       936927.255235       936837.422878     936927.255235  156631.378798     156.620226     936837.422878        0.000000                0.000000       78.310113      126.465332                0.0                1.0                  2.0              2.05249  402632.472168            156.620226            259.568859   89.832357           0.0       63.773329  936863.481906       0.0
2       937083.875461       936963.481906     937083.875461  156710.058051     156.620226     936963.481906        0.000000                0.000000       78.310113      126.465332                0.0                1.0                  2.0              2.05249  402632.472168            156.620226            259.568859  120.393555           0.0      120.393555  936963.481906       0.0
3       937240.495686       937063.481906     937240.495686  156740.619249     156.620226     937063.481906        0.000000                0.000000       78.310113      126.465332                0.0                2.0                  2.0              2.05249  402632.472168            156.620226            259.568859  177.013780           0.0      177.013780  937063.481906       1.0
4       937397.115912       937083.928195     937397.115912  156797.239475     156.620226     937083.928195       33.634006                0.000000       78.310113      126.465332                0.0                2.0                  2.0              2.05249  402632.472168            156.620226            259.568859  279.553711           0.0      200.000000  937163.481906       1.0
5       937553.736138       937210.446099     937553.736138  156933.413411     156.620226     937210.446099       90.254232               33.634006       78.310113      126.465332                1.0                3.0                  2.0              2.05249  402632.472168            156.620226            259.568859  253.035807           1.0      200.000000  937263.481906       2.0
6       937710.356363       937307.283555     937710.356363  156963.515734     156.620226     937307.283555      146.874457               90.254232       78.310113      126.465332                1.0                3.0                  2.0              2.05249  402632.472168            156.620226            259.568859  256.198351           1.0      200.000000  937363.481906       2.0
7       937866.976589       937363.534640     937866.976589  157023.298503     156.620226     937363.534640      203.494683              146.874457       78.310113      126.465332                1.0                3.0                  2.0              2.05249  402632.472168            156.620226            259.568859  299.947266           1.0      200.000000  937463.481906       2.0
8       938023.596815       937463.481906     938023.596815  157123.667643     156.620226     937463.481906      260.114909              203.494683       78.310113      126.465332                2.0                4.0                  2.0              2.05249  402632.472168            156.620226            259.568859  300.000000           1.0      200.000000  937563.481906       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=799073/3072, beliefs_improve=False, alpha=38617/2048, buf_size=200.[0m
[01/10 19:10:27]  --------------------------------------------------------------------------------
[01/10 19:10:27]  Iteration: 95 (55 solution, 39 counterexamples)
[01/10 19:11:59]  Generator returned sat in 87.964406 secs.
[01/10 19:12:00]  Candidate solution: 
[1m[94mif (+ -2min_c + 3/2max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:12:21]  Improved number of small numbers from 88 to 99 out of a max of 164
[01/10 19:12:21]  Verifer returned sat in 20.844203 secs.
[01/10 19:12:21]  sf_get_cex returned in 20.971000 secs.
[01/10 19:12:21]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       791794.272972       791514.614952     791794.272972       0.106445       0.104980     791514.614952        0.000000                0.000000           100.0       143.35083                1.0                3.0                  1.0                  2.0  402632.472168                 100.0             286.70166  279.658020          -1.0      179.815857  791614.457115       2.0
1       791899.325585       791686.079939     791899.325585  105332.270325     105.052612     791686.079939        0.000000                0.000000           100.0       143.35083                0.0                2.0                  1.0                  2.0  402632.472168                 100.0             286.70166  213.245646           0.0      184.868469  791714.457115       1.0
2       792004.378197       791814.457115     792004.378197  105265.857951     105.052612     791814.457115        0.000000                0.000000           100.0       143.35083                0.0                2.0                  1.0                  2.0  402632.472168                 100.0             286.70166  189.921082           0.0      189.921082  791814.457115       1.0
3       792109.430809       791814.457115     792109.430809  105242.533386     105.052612     791814.457115        0.000000                0.000000           100.0       143.35083                0.0                2.0                  1.0                  2.0  402632.472168                 100.0             286.70166  294.973694           0.0      194.973694  791914.457115       1.0
4       792214.483422       791914.457115     792214.483422  105347.585999     105.052612     791914.457115        0.026306                0.000000           100.0       143.35083                1.0                3.0                  1.0                  2.0  402632.472168                 100.0             286.70166  300.000000           1.0      200.000000  792014.457115       2.0
5       792319.536034       792114.457115     792319.536034  105352.638611     105.052612     792114.457115        5.078918                0.026306           100.0       143.35083                0.0                2.0                  1.0                  2.0  402632.472168                 100.0             286.70166  200.000000           1.0      200.000000  792114.457115       1.0
6       792424.588646       792114.457115     792424.588646  105257.691223     105.052612     792114.457115       10.131531                5.078918           100.0       143.35083                0.0                2.0                  1.0                  2.0  402632.472168                 100.0             286.70166  300.000000           1.0      200.000000  792214.457115       1.0
7       792529.641259       792314.325585     792529.641259  105362.743835     105.052612     792314.325585       15.184143               10.131531           100.0       143.35083                1.0                3.0                  1.0                  2.0  402632.472168                 100.0             286.70166  200.131531           1.0      200.000000  792314.457115       2.0
8       792634.693871       792401.211426     792634.693871  105267.927979     105.052612     792401.211426       20.236755               15.184143           100.0       143.35083                1.0                3.0                  1.0                  2.0  402632.472168                 100.0             286.70166  213.245690           1.0      200.000000  792414.457115       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=331559/16384, beliefs_improve=False, alpha=41391/8192, buf_size=200.[0m
[01/10 19:12:21]  --------------------------------------------------------------------------------
[01/10 19:12:21]  Iteration: 96 (55 solution, 40 counterexamples)
[01/10 19:14:49]  Generator returned sat in 143.973025 secs.
[01/10 19:14:50]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 2min_c + 2max_c + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:14:56]  Improved gap from 39.61328125 to 100
[01/10 19:14:58]  Improved number of small numbers from 91 to 102 out of a max of 165
[01/10 19:14:58]  Verifer returned sat in 8.525715 secs.
[01/10 19:14:58]  sf_get_cex returned in 8.652771 secs.
[01/10 19:14:58]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       791777.361684       791600.975165     791777.361684       0.106201       0.104736     791600.975165        0.000000                0.000000       87.923651      133.937988                2.0                4.0                  2.0                  2.0  402632.472168            175.847301            267.875977  176.386519          -1.0      176.386519  791600.975165       3.0
1       791885.232845       791637.204214     791885.232845  108047.546853     107.871160     791637.204214        0.000000                0.000000       87.923651      133.937988                2.0                4.0                  2.0                  2.0  402632.472168            175.847301            267.875977  248.028631           1.0      184.257679  791700.975165       3.0
2       791993.104005       791800.975165     791993.104005  108119.188965     107.871160     791800.975165        0.000000                0.000000       87.923651      133.937988                0.0                2.0                  2.0                  2.0  402632.472168            175.847301            267.875977  192.128840           0.0      192.128840  791800.975165       1.0
3       792100.975165       791900.975165     792100.975165  108063.289173     107.871160     791900.975165        0.000000                0.000000       87.923651      133.937988                0.0                2.0                  2.0                  2.0  402632.472168            175.847301            267.875977  200.000000           0.0      200.000000  791900.975165       1.0
4       792208.846326       791900.975165     792208.846326  108071.160334     107.871160     791900.975165        7.871160                0.000000       87.923651      133.937988                0.0                2.0                  2.0                  2.0  402632.472168            175.847301            267.875977  300.000000           0.0      200.000000  792000.975165       1.0
5       792316.717486       792000.975165     792316.717486  108179.031494     107.871160     792000.975165       15.742321                7.871160       87.923651      133.937988                1.0                3.0                  2.0                  2.0  402632.472168            175.847301            267.875977  300.000000           1.0      200.000000  792100.975165       2.0
6       792424.588646       792100.975165     792424.588646  108186.902654     107.871160     792100.975165       23.613481               15.742321       87.923651      133.937988                2.0                4.0                  2.0                  2.0  402632.472168            175.847301            267.875977  300.000000           1.0      200.000000  792200.975165       3.0
7       792532.459807       792201.027655     792532.459807  108194.773815     107.871160     792201.027655       31.484641               23.613481       87.923651      133.937988                1.0                3.0                  2.0                  2.0  402632.472168            175.847301            267.875977  299.947510           1.0      200.000000  792300.975165       2.0
8       792640.330967       792302.946777     792640.330967  108202.592485     107.871160     792302.946777       39.355802               31.484641       87.923651      133.937988                1.0                3.0                  2.0                  2.0  402632.472168            175.847301            267.875977  298.028388           1.0      200.000000  792400.975165       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=1773215/45056, beliefs_improve=False, alpha=81705/4096, buf_size=200.[0m
[01/10 19:14:58]  --------------------------------------------------------------------------------
[01/10 19:14:58]  Iteration: 97 (55 solution, 41 counterexamples)
[01/10 19:18:22]  Generator returned sat in 198.843839 secs.
[01/10 19:18:22]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:18:32]  Improved number of small numbers from 82 to 102 out of a max of 164
[01/10 19:18:32]  Verifer returned sat in 9.364368 secs.
[01/10 19:18:32]  sf_get_cex returned in 9.488364 secs.
[01/10 19:18:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        1.401776e+06        1.401476e+06      1.401776e+06       0.105957       0.104736      1.401476e+06        0.000000                0.000000           100.0      197.921387                2.0                4.0                  2.0             2.012939  402632.472168                 200.0            398.403768  299.882172          -1.0      199.947632  1.401576e+06       3.0
1        1.401876e+06        1.401676e+06      1.401876e+06  100312.974213     100.013092      1.401676e+06        0.000000                0.000000           100.0      197.921387                2.0                4.0                  2.0             2.012939  402632.472168                 200.0            398.403768  199.960724           1.0      199.960724  1.401676e+06       3.0
2        1.401976e+06        1.401676e+06      1.401976e+06  100213.052765     100.013092      1.401676e+06        0.000000                0.000000           100.0      197.921387                2.0                4.0                  2.0             2.012939  402632.472168                 200.0            398.403768  299.973816           1.0      199.973816  1.401776e+06       3.0
3        1.402076e+06        1.401874e+06      1.402076e+06  100313.065857     100.013092      1.401874e+06        0.000000                0.000000           100.0      197.921387                1.0                3.0                  2.0             2.012939  402632.472168                 200.0            398.403768  202.052368           1.0      199.986908  1.401876e+06       2.0
4        1.402176e+06        1.401976e+06      1.402176e+06  100215.144409     100.013092      1.401976e+06        0.000000                0.000000           100.0      197.921387                0.0                2.0                  2.0             2.012939  402632.472168                 200.0            398.403768  200.000000           0.0      200.000000  1.401976e+06       1.0
5        1.402276e+06        1.401976e+06      1.402276e+06  100213.092041     100.013092      1.401976e+06        0.013092                0.000000           100.0      197.921387                0.0                2.0                  2.0             2.012939  402632.472168                 200.0            398.403768  300.000000           0.0      200.000000  1.402076e+06       1.0
6        1.402376e+06        1.402176e+06      1.402376e+06  100313.105133     100.013092      1.402176e+06        0.026184                0.013092           100.0      197.921387                1.0                3.0                  2.0             2.012939  402632.472168                 200.0            398.403768  200.065460           1.0      200.000000  1.402176e+06       2.0
7        1.402476e+06        1.402176e+06      1.402476e+06  100213.183685     100.013092      1.402176e+06        0.039276                0.026184           100.0      197.921387                1.0                3.0                  2.0             2.012939  402632.472168                 200.0            398.403768  299.986908           1.0      200.000000  1.402276e+06       2.0
8        1.402576e+06        1.402376e+06      1.402576e+06  100313.118225     100.013092      1.402376e+06        0.052368                0.039276           100.0      197.921387                1.0                3.0                  2.0             2.012939  402632.472168                 200.0            398.403768  200.091683           1.0      200.000000  1.402376e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=429/8192, beliefs_improve=False, alpha=429/32768, buf_size=200.[0m
[01/10 19:18:32]  --------------------------------------------------------------------------------
[01/10 19:18:32]  Iteration: 98 (55 solution, 42 counterexamples)
[01/10 19:29:21]  Generator returned sat in 644.785181 secs.
[01/10 19:29:22]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1/2max_c + -5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 19:29:40]  Improved gap from 19.895263671875 to 48.4375
[01/10 19:29:43]  Improved number of small numbers from 104 to 112 out of a max of 165
[01/10 19:29:43]  Verifer returned sat in 21.117781 secs.
[01/10 19:29:43]  sf_get_cex returned in 21.247311 secs.
[01/10 19:29:43]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        1.402489e+06        1.402489e+06      1.402489e+06       0.105713       0.104736      1.402489e+06             0.0                     0.0       96.979736      397.918701                2.0                4.0                  2.0                  2.0  401720.168457            193.959473            795.837402   0.052368          -1.0        0.052329  1.402489e+06       3.0
1        1.402537e+06        1.402489e+06      1.402537e+06   48489.920532      48.489868      1.402489e+06             0.0                     0.0       96.979736      397.918701                1.0                3.0                  2.0                  2.0  401771.626260            193.959473            795.837402  48.489868           1.0        0.000000  1.402537e+06       2.0
2        1.402586e+06        1.402537e+06      1.402586e+06   48538.358032      48.489868      1.402537e+06             0.0                     0.0       96.979736      397.918701                0.0                2.0                  2.0                  2.0  401823.136392            193.959473            795.837402  48.489868           0.0        0.000000  1.402586e+06       1.0
3        1.402634e+06        1.402586e+06      1.402634e+06   48538.358032      48.489868      1.402586e+06             0.0                     0.0       96.979736      397.918701                0.0                2.0                  2.0                  2.0  401874.646524            193.959473            795.837402  48.489868           0.0        0.000000  1.402634e+06       1.0
4        1.402683e+06        1.402634e+06      1.402683e+06   48538.358032      48.489868      1.402634e+06             0.0                     0.0       96.979736      397.918701                0.0                2.0                  2.0                  2.0  401926.156494            193.959473            795.837402  48.489868           0.0       -0.000161  1.402683e+06       1.0
5        1.402731e+06        1.402683e+06      1.402731e+06   48538.358032      48.489868      1.402683e+06             0.0                     0.0       96.979736      397.918701                0.0                1.0                  2.0                  2.0  401977.666748            193.959473            795.837402  48.437500           0.0       -0.000039  1.402731e+06       0.0
6        1.402780e+06        1.402731e+06      1.402780e+06   48538.305664      48.489868      1.402731e+06             0.0                     0.0       96.979736      397.918701                0.0                1.0                  2.0                  2.0  402029.176919            193.959473            795.837402  48.437500           0.0        0.000000  1.402780e+06       0.0
7        1.402828e+06        1.402780e+06      1.402828e+06   48538.305664      48.489868      1.402780e+06             0.0                     0.0       96.979736      397.918701                0.0                2.0                  2.0                  2.0  402080.687012            193.959473            795.837402  48.489868           0.0       -0.000039  1.402828e+06       1.0
8        1.402877e+06        1.402828e+06      1.402877e+06   48538.358032      48.489868      1.402828e+06             0.0                     0.0       96.979736      397.918701                0.0                1.0                  2.0                  2.0  402080.687256            193.959473            795.837402  48.437469           0.0      -51.509927  1.402928e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40853/2048, buf_size=200.[0m
[01/10 19:29:43]  --------------------------------------------------------------------------------
[01/10 19:29:43]  Iteration: 99 (55 solution, 43 counterexamples)
[01/10 19:34:02]  Generator returned sat in 253.898703 secs.
[01/10 19:34:02]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:34:12]  Verifer returned unsat in 9.205216 secs.
[01/10 19:34:12]  sf_get_cex returned in 9.424425 secs.
[01/10 19:34:12]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:34:12]  --------------------------------------------------------------------------------
[01/10 19:34:12]  Iteration: 100 (56 solution, 43 counterexamples)
[01/10 19:35:27]  Generator returned sat in 67.468000 secs.
[01/10 19:35:28]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:35:43]  Verifer returned unsat in 15.632105 secs.
[01/10 19:35:43]  sf_get_cex returned in 15.832196 secs.
[01/10 19:35:43]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:35:43]  --------------------------------------------------------------------------------
[01/10 19:35:43]  Iteration: 101 (57 solution, 43 counterexamples)
[01/10 19:36:38]  Generator returned sat in 49.894608 secs.
[01/10 19:36:39]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:36:50]  Verifer returned unsat in 11.674974 secs.
[01/10 19:36:50]  sf_get_cex returned in 11.802074 secs.
[01/10 19:36:50]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:36:50]  --------------------------------------------------------------------------------
[01/10 19:36:50]  Iteration: 102 (58 solution, 43 counterexamples)
[01/10 19:37:59]  Generator returned sat in 63.469296 secs.
[01/10 19:37:59]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:38:15]  Verifer returned unsat in 15.262114 secs.
[01/10 19:38:15]  sf_get_cex returned in 15.450179 secs.
[01/10 19:38:15]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:38:15]  --------------------------------------------------------------------------------
[01/10 19:38:15]  Iteration: 103 (59 solution, 43 counterexamples)
[01/10 19:39:35]  Generator returned sat in 73.192734 secs.
[01/10 19:39:36]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:39:57]  Verifer returned unsat in 21.232710 secs.
[01/10 19:39:57]  sf_get_cex returned in 21.423723 secs.
[01/10 19:39:57]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:39:57]  --------------------------------------------------------------------------------
[01/10 19:39:57]  Iteration: 104 (60 solution, 43 counterexamples)
[01/10 19:41:41]  Generator returned sat in 95.494365 secs.
[01/10 19:41:41]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:41:54]  Verifer returned unsat in 12.862889 secs.
[01/10 19:41:54]  sf_get_cex returned in 13.065549 secs.
[01/10 19:41:54]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:41:54]  --------------------------------------------------------------------------------
[01/10 19:41:54]  Iteration: 105 (61 solution, 43 counterexamples)
[01/10 19:43:18]  Generator returned sat in 76.462980 secs.
[01/10 19:43:19]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:43:52]  Verifer returned unsat in 33.529155 secs.
[01/10 19:43:52]  sf_get_cex returned in 33.722739 secs.
[01/10 19:43:52]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:43:52]  --------------------------------------------------------------------------------
[01/10 19:43:52]  Iteration: 106 (62 solution, 43 counterexamples)
[01/10 19:45:15]  Generator returned sat in 74.207289 secs.
[01/10 19:45:15]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:45:22]  Verifer returned unsat in 5.920173 secs.
[01/10 19:45:22]  sf_get_cex returned in 6.117017 secs.
[01/10 19:45:22]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:45:22]  --------------------------------------------------------------------------------
[01/10 19:45:22]  Iteration: 107 (63 solution, 43 counterexamples)
[01/10 19:46:36]  Generator returned sat in 66.361506 secs.
[01/10 19:46:36]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 19:46:57]  Improved number of small numbers from 95 to 95 out of a max of 164
[01/10 19:46:57]  Verifer returned sat in 20.421274 secs.
[01/10 19:46:57]  sf_get_cex returned in 20.612591 secs.
[01/10 19:46:57]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        1.663127e+06        1.662913e+06      1.663127e+06       0.105713       0.104736      1.662913e+06        0.000000                0.000000           100.0           102.0                2.0                4.0                  2.0                  4.0  320295.180866                 200.0                 408.0  214.366577          -1.0           200.0  1.662927e+06       3.0
1        1.663246e+06        1.663015e+06      1.663246e+06  119266.734741     119.052368      1.663015e+06       19.052368                0.000000           100.0           102.0                1.0                3.0                  2.0                  4.0  320295.180866                 200.0                 408.0  212.314209           1.0           200.0  1.663027e+06       2.0
2        1.663346e+06        1.663117e+06      1.663346e+06  100231.366577     100.000000      1.663117e+06       19.052368               19.052368           100.0           102.0                2.0                4.0                  2.0                  4.0  320295.180866                 200.0                 408.0  210.261841           1.0           200.0  1.663127e+06       3.0
3        1.663465e+06        1.663219e+06      1.663465e+06  119281.682373     119.052368      1.663219e+06       38.104736               19.052368           100.0           102.0                1.0                3.0                  2.0                  4.0  320295.180866                 200.0                 408.0  208.209473           1.0           200.0  1.663227e+06       2.0
4        1.663565e+06        1.663227e+06      1.663565e+06  100246.314209     100.000000      1.663227e+06       38.104736               38.104736           100.0           102.0                2.0                4.0                  2.0                  4.0  320295.180866                 200.0                 408.0  300.000000           1.0           200.0  1.663327e+06       3.0
5        1.663684e+06        1.663327e+06      1.663684e+06  119390.472900     119.052368      1.663327e+06       57.157104               38.104736           100.0           102.0                1.0                3.0                  2.0                  4.0  320295.180866                 200.0                 408.0  299.947632           1.0           200.0  1.663427e+06       2.0
6        1.663784e+06        1.663427e+06      1.663784e+06  100357.104736     100.000000      1.663427e+06       57.157104               57.157104           100.0           102.0                2.0                4.0                  2.0                  4.0  320295.180866                 200.0                 408.0  300.000000           1.0           200.0  1.663527e+06       3.0
7        1.663903e+06        1.663527e+06      1.663903e+06  119409.525269     119.052368      1.663527e+06       76.209473               57.157104           100.0           102.0                2.0                4.0                  2.0                  4.0  320295.180866                 200.0                 408.0  300.000000           1.0           200.0  1.663627e+06       3.0
8        1.664022e+06        1.663627e+06      1.664022e+06  119428.577637     119.052368      1.663627e+06       95.261841               76.209473           100.0           102.0                2.0                4.0                  2.0                  4.0  320295.180866                 200.0                 408.0  300.000000           1.0           200.0  1.663727e+06       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=156077/2048, beliefs_improve=False, alpha=156077/8192, buf_size=200.[0m
[01/10 19:46:57]  --------------------------------------------------------------------------------
[01/10 19:46:57]  Iteration: 108 (63 solution, 44 counterexamples)
[01/10 19:51:11]  Generator returned sat in 246.063543 secs.
[01/10 19:51:11]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 19:51:31]  Improved gap from 0.0 to 48.4375
[01/10 19:51:32]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/10 19:51:32]  Verifer returned sat in 20.925635 secs.
[01/10 19:51:32]  sf_get_cex returned in 21.139126 secs.
[01/10 19:51:32]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        1.663350e+06        1.663348e+06      1.663350e+06       0.105713       0.104492      1.663348e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  319994.691162                   0.0            502.478994   2.467285          -1.0        2.467285  1.663348e+06       0.0
1        1.663400e+06        1.663350e+06      1.663400e+06   49492.213379      49.489746      1.663350e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  320042.734131                   0.0            502.478994  49.437500           0.0        0.000000  1.663400e+06       0.0
2        1.663449e+06        1.663400e+06      1.663449e+06   49539.183594      49.489746      1.663400e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  320093.244385                   0.0            502.478994  49.437256           0.0        0.000000  1.663449e+06       0.0
3        1.663499e+06        1.663449e+06      1.663499e+06   49539.183350      49.489746      1.663449e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  320143.754639                   0.0            502.478994  49.437500           0.0        0.000000  1.663499e+06       0.0
4        1.663548e+06        1.663499e+06      1.663548e+06   49539.183594      49.489746      1.663499e+06             0.0                     0.0       49.541992      164.625977                0.0                2.0                  0.0             3.052246  320194.264893                   0.0            502.478994  49.489746           0.0        0.000000  1.663548e+06       1.0
5        1.663598e+06        1.663548e+06      1.663598e+06   49539.235840      49.489746      1.663548e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  320244.775146                   0.0            502.478994  49.437256           0.0        0.000000  1.663598e+06       0.0
6        1.663647e+06        1.663598e+06      1.663647e+06   49539.183350      49.489746      1.663598e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  320295.180908                   0.0            502.478994  49.437256           0.0       -0.104492  1.663647e+06       0.0
7        1.663697e+06        1.663647e+06      1.663697e+06   49539.183350      49.489746      1.663647e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  320345.743408                   0.0            502.478994  49.385254           0.0       -0.052246  1.663697e+06       0.0
8        1.663746e+06        1.663697e+06      1.663746e+06   49539.131348      49.489746      1.663697e+06             0.0                     0.0       49.541992      164.625977                0.0                1.0                  0.0             3.052246  320396.305908                   0.0            502.478994  49.437500           0.0        0.000000  1.663746e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=107/2048, buf_size=200.[0m
[01/10 19:51:32]  --------------------------------------------------------------------------------
[01/10 19:51:32]  Iteration: 109 (63 solution, 45 counterexamples)
[01/10 19:52:57]  Generator returned sat in 76.370579 secs.
[01/10 19:52:58]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:53:15]  Verifer returned unsat in 17.310767 secs.
[01/10 19:53:15]  sf_get_cex returned in 17.515644 secs.
[01/10 19:53:15]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:53:15]  --------------------------------------------------------------------------------
[01/10 19:53:15]  Iteration: 110 (64 solution, 45 counterexamples)
[01/10 19:54:17]  Generator returned sat in 54.377701 secs.
[01/10 19:54:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:54:31]  Verifer returned unsat in 12.747720 secs.
[01/10 19:54:31]  sf_get_cex returned in 12.949462 secs.
[01/10 19:54:31]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:54:31]  --------------------------------------------------------------------------------
[01/10 19:54:31]  Iteration: 111 (65 solution, 45 counterexamples)
[01/10 19:55:32]  Generator returned sat in 53.435207 secs.
[01/10 19:55:33]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:55:47]  Verifer returned unsat in 14.045690 secs.
[01/10 19:55:47]  sf_get_cex returned in 14.240193 secs.
[01/10 19:55:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:55:47]  --------------------------------------------------------------------------------
[01/10 19:55:47]  Iteration: 112 (66 solution, 45 counterexamples)
[01/10 19:56:42]  Generator returned sat in 47.732358 secs.
[01/10 19:56:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:57:06]  Verifer returned unsat in 23.082569 secs.
[01/10 19:57:06]  sf_get_cex returned in 23.301103 secs.
[01/10 19:57:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:57:06]  --------------------------------------------------------------------------------
[01/10 19:57:06]  Iteration: 113 (67 solution, 45 counterexamples)
[01/10 19:58:19]  Generator returned sat in 64.560912 secs.
[01/10 19:58:20]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:58:34]  Verifer returned unsat in 13.935112 secs.
[01/10 19:58:34]  sf_get_cex returned in 14.144500 secs.
[01/10 19:58:34]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:58:34]  --------------------------------------------------------------------------------
[01/10 19:58:34]  Iteration: 114 (68 solution, 45 counterexamples)
[01/10 19:59:27]  Generator returned sat in 47.449098 secs.
[01/10 19:59:27]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:59:43]  Verifer returned unsat in 16.115978 secs.
[01/10 19:59:43]  sf_get_cex returned in 16.329962 secs.
[01/10 19:59:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 19:59:44]  --------------------------------------------------------------------------------
[01/10 19:59:44]  Iteration: 115 (69 solution, 45 counterexamples)
[01/10 20:00:50]  Generator returned sat in 58.610281 secs.
[01/10 20:00:51]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:01:10]  Verifer returned unsat in 18.737989 secs.
[01/10 20:01:10]  sf_get_cex returned in 18.947311 secs.
[01/10 20:01:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:01:10]  --------------------------------------------------------------------------------
[01/10 20:01:10]  Iteration: 116 (70 solution, 45 counterexamples)
[01/10 20:02:09]  Generator returned sat in 51.033600 secs.
[01/10 20:02:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:02:20]  Verifer returned unsat in 10.730792 secs.
[01/10 20:02:21]  sf_get_cex returned in 10.942551 secs.
[01/10 20:02:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:02:21]  --------------------------------------------------------------------------------
[01/10 20:02:21]  Iteration: 117 (71 solution, 45 counterexamples)
[01/10 20:03:12]  Generator returned sat in 43.608406 secs.
[01/10 20:03:13]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:03:53]  Verifer returned unsat in 39.754456 secs.
[01/10 20:03:53]  sf_get_cex returned in 39.991802 secs.
[01/10 20:03:53]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:03:53]  --------------------------------------------------------------------------------
[01/10 20:03:53]  Iteration: 118 (72 solution, 45 counterexamples)
[01/10 20:05:00]  Generator returned sat in 58.842418 secs.
[01/10 20:05:01]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:05:15]  Verifer returned unsat in 13.754683 secs.
[01/10 20:05:15]  sf_get_cex returned in 13.981041 secs.
[01/10 20:05:15]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:05:15]  --------------------------------------------------------------------------------
[01/10 20:05:15]  Iteration: 119 (73 solution, 45 counterexamples)
[01/10 20:06:07]  Generator returned sat in 43.650224 secs.
[01/10 20:06:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:06:38]  Verifer returned unsat in 30.573030 secs.
[01/10 20:06:38]  sf_get_cex returned in 30.780205 secs.
[01/10 20:06:38]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:06:38]  --------------------------------------------------------------------------------
[01/10 20:06:38]  Iteration: 120 (74 solution, 45 counterexamples)
[01/10 20:07:34]  Generator returned sat in 47.552057 secs.
[01/10 20:07:34]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:07:47]  Verifer returned unsat in 13.031711 secs.
[01/10 20:07:47]  sf_get_cex returned in 13.233527 secs.
[01/10 20:07:47]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:07:47]  --------------------------------------------------------------------------------
[01/10 20:07:47]  Iteration: 121 (75 solution, 45 counterexamples)
[01/10 20:08:40]  Generator returned sat in 44.053720 secs.
[01/10 20:08:40]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:09:00]  Verifer returned unsat in 19.334122 secs.
[01/10 20:09:00]  sf_get_cex returned in 19.602487 secs.
[01/10 20:09:00]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:09:00]  --------------------------------------------------------------------------------
[01/10 20:09:00]  Iteration: 122 (76 solution, 45 counterexamples)
[01/10 20:10:01]  Generator returned sat in 52.327817 secs.
[01/10 20:10:01]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:10:13]  Verifer returned unsat in 11.489734 secs.
[01/10 20:10:13]  sf_get_cex returned in 11.700346 secs.
[01/10 20:10:13]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:10:13]  --------------------------------------------------------------------------------
[01/10 20:10:13]  Iteration: 123 (77 solution, 45 counterexamples)
[01/10 20:11:09]  Generator returned sat in 47.628820 secs.
[01/10 20:11:09]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:11:22]  Verifer returned unsat in 13.078038 secs.
[01/10 20:11:22]  sf_get_cex returned in 13.281561 secs.
[01/10 20:11:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:11:23]  --------------------------------------------------------------------------------
[01/10 20:11:23]  Iteration: 124 (78 solution, 45 counterexamples)
[01/10 20:12:22]  Generator returned sat in 50.986503 secs.
[01/10 20:12:22]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:12:35]  Verifer returned unsat in 12.189313 secs.
[01/10 20:12:35]  sf_get_cex returned in 12.400043 secs.
[01/10 20:12:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:12:35]  --------------------------------------------------------------------------------
[01/10 20:12:35]  Iteration: 125 (79 solution, 45 counterexamples)
[01/10 20:13:30]  Generator returned sat in 46.807996 secs.
[01/10 20:13:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:13:43]  Verifer returned unsat in 12.768825 secs.
[01/10 20:13:43]  sf_get_cex returned in 13.018209 secs.
[01/10 20:13:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:13:44]  --------------------------------------------------------------------------------
[01/10 20:13:44]  Iteration: 126 (80 solution, 45 counterexamples)
[01/10 20:14:38]  Generator returned sat in 46.387292 secs.
[01/10 20:14:39]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:14:50]  Verifer returned unsat in 11.193158 secs.
[01/10 20:14:50]  sf_get_cex returned in 11.408501 secs.
[01/10 20:14:50]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:14:50]  --------------------------------------------------------------------------------
[01/10 20:14:50]  Iteration: 127 (81 solution, 45 counterexamples)
[01/10 20:15:42]  Generator returned sat in 43.789919 secs.
[01/10 20:15:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:15:59]  Verifer returned unsat in 15.633134 secs.
[01/10 20:15:59]  sf_get_cex returned in 15.864386 secs.
[01/10 20:15:59]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:15:59]  --------------------------------------------------------------------------------
[01/10 20:15:59]  Iteration: 128 (82 solution, 45 counterexamples)
[01/10 20:16:57]  Generator returned sat in 49.633284 secs.
[01/10 20:16:57]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:18:06]  Verifer returned unsat in 68.723775 secs.
[01/10 20:18:06]  sf_get_cex returned in 68.933456 secs.
[01/10 20:18:06]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:18:06]  --------------------------------------------------------------------------------
[01/10 20:18:06]  Iteration: 129 (83 solution, 45 counterexamples)
[01/10 20:19:03]  Generator returned sat in 48.509287 secs.
[01/10 20:19:03]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:19:16]  Verifer returned unsat in 12.324408 secs.
[01/10 20:19:16]  sf_get_cex returned in 12.528432 secs.
[01/10 20:19:16]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:19:16]  --------------------------------------------------------------------------------
[01/10 20:19:16]  Iteration: 130 (84 solution, 45 counterexamples)
[01/10 20:20:11]  Generator returned sat in 46.674587 secs.
[01/10 20:20:12]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:20:21]  Verifer returned unsat in 9.713481 secs.
[01/10 20:20:21]  sf_get_cex returned in 9.921920 secs.
[01/10 20:20:21]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:20:22]  --------------------------------------------------------------------------------
[01/10 20:20:22]  Iteration: 131 (85 solution, 45 counterexamples)
[01/10 20:21:18]  Generator returned sat in 47.702935 secs.
[01/10 20:21:18]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:21:39]  Verifer returned unsat in 20.825996 secs.
[01/10 20:21:39]  sf_get_cex returned in 21.028428 secs.
[01/10 20:21:39]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:21:39]  --------------------------------------------------------------------------------
[01/10 20:21:39]  Iteration: 132 (86 solution, 45 counterexamples)
[01/10 20:22:37]  Generator returned sat in 49.375124 secs.
[01/10 20:22:37]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:22:49]  Verifer returned unsat in 11.651567 secs.
[01/10 20:22:49]  sf_get_cex returned in 11.857459 secs.
[01/10 20:22:49]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:22:49]  --------------------------------------------------------------------------------
[01/10 20:22:49]  Iteration: 133 (87 solution, 45 counterexamples)
[01/10 20:23:43]  Generator returned sat in 45.100229 secs.
[01/10 20:23:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:28:42]  Verifer returned unsat in 298.791440 secs.
[01/10 20:28:42]  sf_get_cex returned in 299.034722 secs.
[01/10 20:28:42]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:28:42]  --------------------------------------------------------------------------------
[01/10 20:28:42]  Iteration: 134 (88 solution, 45 counterexamples)
[01/10 20:29:39]  Generator returned sat in 48.353703 secs.
[01/10 20:29:40]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:29:58]  Verifer returned unsat in 17.660908 secs.
[01/10 20:29:58]  sf_get_cex returned in 17.871037 secs.
[01/10 20:29:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:29:58]  --------------------------------------------------------------------------------
[01/10 20:29:58]  Iteration: 135 (89 solution, 45 counterexamples)
[01/10 20:30:55]  Generator returned sat in 48.750225 secs.
[01/10 20:30:55]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:31:28]  Verifer returned unsat in 32.103739 secs.
[01/10 20:31:28]  sf_get_cex returned in 32.309721 secs.
[01/10 20:31:28]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:31:28]  --------------------------------------------------------------------------------
[01/10 20:31:28]  Iteration: 136 (90 solution, 45 counterexamples)
[01/10 20:32:42]  Generator returned sat in 65.581280 secs.
[01/10 20:32:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:34:10]  Verifer returned unsat in 87.114601 secs.
[01/10 20:34:10]  sf_get_cex returned in 87.334208 secs.
[01/10 20:34:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:34:10]  --------------------------------------------------------------------------------
[01/10 20:34:10]  Iteration: 137 (91 solution, 45 counterexamples)
[01/10 20:35:25]  Generator returned sat in 66.611293 secs.
[01/10 20:35:25]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:35:43]  Verifer returned unsat in 17.138362 secs.
[01/10 20:35:43]  sf_get_cex returned in 17.368566 secs.
[01/10 20:35:43]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:35:43]  --------------------------------------------------------------------------------
[01/10 20:35:43]  Iteration: 138 (92 solution, 45 counterexamples)
[01/10 20:36:42]  Generator returned sat in 51.469402 secs.
[01/10 20:36:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + 1/2max_c + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:36:56]  Improved gap from 0.0 to 48.4375
[01/10 20:36:57]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/10 20:36:57]  Verifer returned sat in 13.542289 secs.
[01/10 20:36:57]  sf_get_cex returned in 13.757405 secs.
[01/10 20:36:57]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        4.419508e+06        4.419508e+06      4.419508e+06       0.105713       0.104248      4.419508e+06             0.0                     0.0         68.4375      221.416992                2.0                4.0                  2.0                  2.0  -1.026366e+06               136.875            442.833984   0.000000          -1.0        0.000000  4.419508e+06       3.0
1        4.419557e+06        4.419508e+06      4.419557e+06   48489.746094      48.489746      4.419508e+06             0.0                     0.0         68.4375      221.416992                0.0                1.0                  2.0                  2.0  -1.026315e+06               136.875            442.833984  48.437500           0.0       -0.104248  4.419557e+06       0.0
2        4.419605e+06        4.419557e+06      4.419605e+06   48538.183594      48.489746      4.419557e+06             0.0                     0.0         68.4375      221.416992                0.0                1.0                  2.0                  2.0  -1.026263e+06               136.875            442.833984  48.385254           0.0       -0.052246  4.419605e+06       0.0
3        4.419654e+06        4.419605e+06      4.419654e+06   48538.131348      48.489746      4.419605e+06             0.0                     0.0         68.4375      221.416992                0.0                1.0                  2.0                  2.0  -1.026212e+06               136.875            442.833984  48.437500           0.0        0.000000  4.419654e+06       0.0
4        4.419702e+06        4.419654e+06      4.419702e+06   48538.183594      48.489746      4.419654e+06             0.0                     0.0         68.4375      221.416992                0.0                2.0                  2.0                  2.0  -1.026160e+06               136.875            442.833984  48.489746           0.0        0.000000  4.419702e+06       1.0
5        4.419751e+06        4.419702e+06      4.419751e+06   48538.235840      48.489746      4.419702e+06             0.0                     0.0         68.4375      221.416992                0.0                1.0                  2.0                  2.0  -1.026108e+06               136.875            442.833984  48.437500           0.0        0.000000  4.419751e+06       0.0
6        4.419799e+06        4.419751e+06      4.419799e+06   48538.183594      48.489746      4.419751e+06             0.0                     0.0         68.4375      221.416992                0.0                2.0                  2.0                  2.0  -1.026057e+06               136.875            442.833984  48.489746           0.0        0.000000  4.419799e+06       1.0
7        4.419848e+06        4.419799e+06      4.419848e+06   48538.235840      48.489746      4.419799e+06             0.0                     0.0         68.4375      221.416992                0.0                1.0                  2.0                  2.0  -1.026005e+06               136.875            442.833984  48.437500           0.0        0.000000  4.419848e+06       0.0
8        4.419896e+06        4.419848e+06      4.419896e+06   48538.183594      48.489746      4.419848e+06             0.0                     0.0         68.4375      221.416992                0.0                1.0                  2.0                  2.0  -1.025954e+06               136.875            442.833984  48.437500           0.0       -0.104248  4.419896e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=40853/2048, buf_size=200.[0m
[01/10 20:36:57]  --------------------------------------------------------------------------------
[01/10 20:36:57]  Iteration: 139 (92 solution, 46 counterexamples)
[01/10 20:43:19]  Generator returned sat in 373.728637 secs.
[01/10 20:43:20]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 3/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:43:59]  Improved gap from 4.1563720703125 to 100
[01/10 20:44:06]  Improved number of small numbers from 61 to 72 out of a max of 165
[01/10 20:44:06]  Verifer returned sat in 45.679773 secs.
[01/10 20:44:06]  sf_get_cex returned in 45.879098 secs.
[01/10 20:44:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        3.686085e+06        3.685885e+06      3.686085e+06       0.105713       0.104248      3.685885e+06        0.000000                0.000000       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  200.000000          -1.0           200.0  3.685885e+06       2.0
1        3.686185e+06        3.685975e+06      3.686185e+06  100206.515503     100.006516      3.685975e+06        0.006516                0.000000       82.570036      108.764404                0.0                2.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  209.622172           0.0           200.0  3.685985e+06       1.0
2        3.686285e+06        3.686084e+06      3.686285e+06  100216.144190     100.006516      3.686084e+06        0.013031                0.006516       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  200.825203           1.0           200.0  3.686085e+06       2.0
3        3.686385e+06        3.686185e+06      3.686385e+06  100207.353737     100.006516      3.686185e+06        0.019547                0.013031       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  200.000000           1.0           200.0  3.686185e+06       2.0
4        3.686485e+06        3.686215e+06      3.686485e+06  100206.535049     100.006516      3.686215e+06        0.026062                0.019547       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  269.745919           1.0           200.0  3.686285e+06       2.0
5        3.686585e+06        3.686380e+06      3.686585e+06  100276.287484     100.006516      3.686380e+06        0.032578                0.026062       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  204.618878           1.0           200.0  3.686385e+06       2.0
6        3.686685e+06        3.686463e+06      3.686685e+06  100211.166959     100.006516      3.686463e+06        0.039093                0.032578       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  222.055358           1.0           200.0  3.686485e+06       2.0
7        3.686785e+06        3.686545e+06      3.686785e+06  100228.609954     100.006516      3.686545e+06        0.045609                0.039093       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  239.495096           1.0           200.0  3.686585e+06       2.0
8        3.686885e+06        3.686628e+06      3.686885e+06  100246.056207     100.006516      3.686628e+06        0.052124                0.045609       82.570036      108.764404                1.0                3.0                  1.0                  3.0  -1.026257e+06             82.570036            326.293213  256.970711           1.0           200.0  3.686685e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=2989/65536, beliefs_improve=False, alpha=25139777/1441792, buf_size=200.[0m
[01/10 20:44:06]  --------------------------------------------------------------------------------
[01/10 20:44:06]  Iteration: 140 (92 solution, 47 counterexamples)
[01/10 20:53:17]  Generator returned sat in 541.745148 secs.
[01/10 20:53:17]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:53:32]  Verifer returned unsat in 15.042166 secs.
[01/10 20:53:33]  sf_get_cex returned in 15.256417 secs.
[01/10 20:53:33]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 20:53:33]  --------------------------------------------------------------------------------
[01/10 20:53:33]  Iteration: 141 (93 solution, 47 counterexamples)
[01/10 20:54:41]  Generator returned sat in 59.200919 secs.
[01/10 20:54:41]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:55:12]  Verifer returned unsat in 30.401879 secs.
[01/10 20:55:12]  sf_get_cex returned in 30.625439 secs.
[01/10 20:55:12]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 20:55:12]  --------------------------------------------------------------------------------
[01/10 20:55:12]  Iteration: 142 (94 solution, 47 counterexamples)
[01/10 20:56:10]  Generator returned sat in 49.352102 secs.
[01/10 20:56:10]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 20:56:22]  Verifer returned unsat in 11.794992 secs.
[01/10 20:56:22]  sf_get_cex returned in 12.011729 secs.
[01/10 20:56:22]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 20:56:23]  --------------------------------------------------------------------------------
[01/10 20:56:23]  Iteration: 143 (95 solution, 47 counterexamples)
[01/10 20:57:42]  Generator returned sat in 70.187048 secs.
[01/10 20:57:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 20:58:14]  Verifer returned unsat in 31.939261 secs.
[01/10 20:58:14]  sf_get_cex returned in 32.193024 secs.
[01/10 20:58:14]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 20:58:15]  --------------------------------------------------------------------------------
[01/10 20:58:15]  Iteration: 144 (96 solution, 47 counterexamples)
[01/10 20:59:28]  Generator returned sat in 64.533937 secs.
[01/10 20:59:28]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:59:38]  Verifer returned unsat in 9.123878 secs.
[01/10 20:59:38]  sf_get_cex returned in 9.344297 secs.
[01/10 20:59:38]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 20:59:38]  --------------------------------------------------------------------------------
[01/10 20:59:38]  Iteration: 145 (97 solution, 47 counterexamples)
[01/10 21:00:47]  Generator returned sat in 59.937570 secs.
[01/10 21:00:47]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:01:00]  Improved gap from 36.379984537760414 to 100
[01/10 21:01:05]  Improved number of small numbers from 77 to 77 out of a max of 165
[01/10 21:01:05]  Verifer returned sat in 17.801749 secs.
[01/10 21:01:05]  sf_get_cex returned in 18.022304 secs.
[01/10 21:01:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        3.278626e+06        3.278379e+06      3.278626e+06       0.105713       0.104248      3.278379e+06        0.000000                0.000000       99.995656      199.991313                2.0                4.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  247.205109          -1.0      147.461385  3.278479e+06       3.0
1        3.278739e+06        3.278539e+06      3.278739e+06  113360.140493     113.112935      3.278539e+06        0.000000                0.000000       99.995656      199.991313                0.0                2.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  200.017375           0.0      160.574320  3.278579e+06       1.0
2        3.278852e+06        3.278579e+06      3.278852e+06  113312.952759     113.112935      3.278579e+06        0.000000                0.000000       99.995656      199.991313                1.0                3.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  273.491791           1.0      173.687256  3.278679e+06       2.0
3        3.278965e+06        3.278739e+06      3.278965e+06  113386.427175     113.112935      3.278739e+06        0.000000                0.000000       99.995656      199.991313                1.0                3.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  226.225871           1.0      186.800191  3.278779e+06       2.0
4        3.279079e+06        3.278879e+06      3.279079e+06  113339.161255     113.112935      3.278879e+06        0.000000                0.000000       99.995656      199.991313                0.0                2.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  199.913127           0.0      199.913127  3.278879e+06       1.0
5        3.279192e+06        3.278879e+06      3.279192e+06  113312.848511     113.112935      3.278879e+06       13.026062                0.000000       99.995656      199.991313                0.0                2.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  300.000000           0.0      200.000000  3.278979e+06       1.0
6        3.279305e+06        3.279079e+06      3.279305e+06  113425.961446     113.112935      3.279079e+06       26.138997               13.026062       99.995656      199.991313                0.0                2.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  200.060811           1.0      200.000000  3.279079e+06       1.0
7        3.279418e+06        3.279079e+06      3.279418e+06  113339.135193     113.112935      3.279079e+06       39.251933               26.138997       99.995656      199.991313                1.0                3.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  299.956563           1.0      200.000000  3.279179e+06       2.0
8        3.279531e+06        3.279279e+06      3.279531e+06  113452.143880     113.112935      3.279279e+06       52.364868               39.251933       99.995656      199.991313                1.0                3.0                  2.0                  2.0  -1.026091e+06            199.991313            399.982625  200.017375           1.0      200.000000  3.279279e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=428973/8192, beliefs_improve=False, alpha=429827/32768, buf_size=200.[0m
[01/10 21:01:05]  --------------------------------------------------------------------------------
[01/10 21:01:05]  Iteration: 146 (97 solution, 48 counterexamples)
[01/10 21:08:14]  Generator returned sat in 419.109040 secs.
[01/10 21:08:14]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1max_c + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:08:19]  Improved gap from 86.59716796875 to 100
[01/10 21:08:21]  Improved number of small numbers from 69 to 90 out of a max of 165
[01/10 21:08:21]  Verifer returned sat in 7.439642 secs.
[01/10 21:08:21]  sf_get_cex returned in 7.575114 secs.
[01/10 21:08:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        3.147620e+06        3.147620e+06      3.147620e+06       0.105225       0.104248      3.147620e+06        0.000000                0.000000       98.509103      157.815674                2.0                4.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766    0.000000          -1.0      -97.018206  3.147717e+06       3.0
1        3.147817e+06        3.147717e+06      3.147817e+06  197018.205915     197.018206      3.147717e+06        0.000000                0.000000       98.509103      157.815674                0.0                1.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  100.000000           0.0        0.000000  3.147817e+06       0.0
2        3.148014e+06        3.147914e+06      3.148014e+06  197118.205915     197.018206      3.147914e+06        0.000000                0.000000       98.509103      157.815674                0.0                1.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  100.104248           0.0       97.018206  3.147917e+06       0.0
3        3.148211e+06        3.147917e+06      3.148211e+06  197118.310163     197.018206      3.147917e+06        0.000000                0.000000       98.509103      157.815674                0.0                2.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  294.036412           0.0      194.036412  3.148017e+06       1.0
4        3.148408e+06        3.148031e+06      3.148408e+06  197312.242327     197.018206      3.148031e+06       91.054618                0.000000       98.509103      157.815674                0.0                2.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  286.000000           0.0      200.000000  3.148117e+06       1.0
5        3.148605e+06        3.148189e+06      3.148605e+06  197395.260533     197.018206      3.148189e+06      188.072824               91.054618       98.509103      157.815674                1.0                3.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  228.079973           1.0      200.000000  3.148217e+06       2.0
6        3.148802e+06        3.148217e+06      3.148802e+06  197434.358712     197.018206      3.148217e+06      285.091030              188.072824       98.509103      157.815674                1.0                3.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  300.000000           1.0      200.000000  3.148317e+06       2.0
7        3.148999e+06        3.148347e+06      3.148999e+06  197603.296945     197.018206      3.148347e+06      382.109235              285.091030       98.509103      157.815674                1.0                3.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  270.264195           1.0      200.000000  3.148417e+06       2.0
8        3.149196e+06        3.148505e+06      3.149196e+06  197670.579346     197.018206      3.148505e+06      479.127441              382.109235       98.509103      157.815674                1.0                3.0                  2.0             2.052246  -1.026091e+06            197.018206              323.8766  212.344106           1.0      200.000000  3.148517e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=5, loss_amount=981253/2048, beliefs_improve=False, alpha=107/2048, buf_size=200.[0m
[01/10 21:08:22]  --------------------------------------------------------------------------------
[01/10 21:08:22]  Iteration: 147 (97 solution, 49 counterexamples)
[01/10 21:15:39]  Generator returned sat in 431.654918 secs.
[01/10 21:15:39]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 1min_qdel + -1min_buffer + -1max_buffer + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:16:05]  Improved gap from 36.363362630208336 to 48.4375
[01/10 21:16:09]  Improved number of small numbers from 106 to 113 out of a max of 165
[01/10 21:16:09]  Verifer returned sat in 29.288577 secs.
[01/10 21:16:09]  sf_get_cex returned in 29.500984 secs.
[01/10 21:16:09]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        3.148155e+06        3.148155e+06      3.148155e+06       0.105225       0.104248      3.148155e+06             0.0                     0.0          48.875   147087.999756                2.0                4.0                  2.0                  2.0  -1.026043e+06                 97.75         294175.999512   0.000000          -1.0       -0.051987  3.148155e+06       3.0
1        3.148204e+06        3.148155e+06      3.148204e+06   48927.124023      48.927124      3.148155e+06             0.0                     0.0          48.875   147087.999756                0.0                1.0                  2.0                  2.0  -1.025992e+06                 97.75         294175.999512  48.875000           0.0        0.000000  3.148204e+06       0.0
2        3.148253e+06        3.148204e+06      3.148253e+06   48975.999023      48.927124      3.148204e+06             0.0                     0.0          48.875   147087.999756                0.0                2.0                  2.0                  2.0  -1.025941e+06                 97.75         294175.999512  48.927124           0.0       -0.051987  3.148253e+06       1.0
3        3.148301e+06        3.148253e+06      3.148301e+06   48976.051147      48.927124      3.148253e+06             0.0                     0.0          48.875   147087.999756                0.0                1.0                  2.0                  2.0  -1.025890e+06                 97.75         294175.999512  48.875000           0.0        0.000000  3.148301e+06       0.0
4        3.148350e+06        3.148301e+06      3.148350e+06   48975.999023      48.927124      3.148301e+06             0.0                     0.0          48.875   147087.999756                0.0                2.0                  2.0                  2.0  -1.025839e+06                 97.75         294175.999512  48.927124           0.0        0.000000  3.148350e+06       1.0
5        3.148399e+06        3.148350e+06      3.148399e+06   48976.051147      48.927124      3.148350e+06             0.0                     0.0          48.875   147087.999756                0.0                2.0                  2.0                  2.0  -1.025788e+06                 97.75         294175.999512  48.927124           0.0       -0.000107  3.148399e+06       1.0
6        3.148448e+06        3.148399e+06      3.148448e+06   48976.051147      48.927124      3.148399e+06             0.0                     0.0          48.875   147087.999756                0.0                1.0                  2.0                  2.0  -1.025737e+06                 97.75         294175.999512  48.875000           0.0        0.000000  3.148448e+06       0.0
7        3.148497e+06        3.148448e+06      3.148497e+06   48975.999023      48.927124      3.148448e+06             0.0                     0.0          48.875   147087.999756                0.0                2.0                  2.0                  2.0  -1.025686e+06                 97.75         294175.999512  48.927124           0.0       -0.000107  3.148497e+06       1.0
8        3.148546e+06        3.148505e+06      3.148546e+06   48976.051147      48.927124      3.148505e+06             0.0                     0.0          48.875   147087.999756                0.0                1.0                  2.0                  2.0  -1.025686e+06                 97.75         294175.999512  41.469297           0.0      -51.072983  3.148597e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=427/8192, buf_size=200.[0m
[01/10 21:16:09]  --------------------------------------------------------------------------------
[01/10 21:16:09]  Iteration: 148 (97 solution, 50 counterexamples)
[01/10 21:23:49]  Generator returned sat in 450.110222 secs.
[01/10 21:23:49]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:24:07]  Improved gap from 21.478759765625 to 48.4375
[01/10 21:24:08]  Improved number of small numbers from 108 to 165 out of a max of 165
[01/10 21:24:08]  Verifer returned sat in 18.750097 secs.
[01/10 21:24:08]  sf_get_cex returned in 18.960952 secs.
[01/10 21:24:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        3.148305e+06        3.148305e+06      3.148305e+06       0.105225       0.104248      3.148305e+06             0.0                     0.0       48.489746           100.0                0.0                1.0                  0.0                  2.0  -1.026044e+06                   0.0                 200.0   0.052246          -1.0        0.051758  3.148305e+06       0.0
1        3.148353e+06        3.148305e+06      3.148353e+06   48437.552246      48.437500      3.148305e+06             0.0                     0.0       48.489746           100.0                0.0                2.0                  0.0                  2.0  -1.025992e+06                   0.0                 200.0  48.437500           0.0        0.000000  3.148353e+06       1.0
2        3.148402e+06        3.148353e+06      3.148402e+06   48485.937500      48.437500      3.148353e+06             0.0                     0.0       48.489746           100.0                0.0                2.0                  0.0                  2.0  -1.025940e+06                   0.0                 200.0  48.437500           0.0        0.000000  3.148402e+06       1.0
3        3.148450e+06        3.148402e+06      3.148450e+06   48485.937500      48.437500      3.148402e+06             0.0                     0.0       48.489746           100.0                0.0                2.0                  0.0                  2.0  -1.025889e+06                   0.0                 200.0  48.437500           0.0        0.000000  3.148450e+06       1.0
4        3.148498e+06        3.148450e+06      3.148498e+06   48485.937500      48.437500      3.148450e+06             0.0                     0.0       48.489746           100.0                0.0                2.0                  0.0                  2.0  -1.025837e+06                   0.0                 200.0  48.437500           0.0        0.000000  3.148498e+06       1.0
5        3.148547e+06        3.148498e+06      3.148547e+06   48485.937500      48.437500      3.148498e+06             0.0                     0.0       48.489746           100.0                0.0                2.0                  0.0                  2.0  -1.025786e+06                   0.0                 200.0  48.437500           0.0        0.000000  3.148547e+06       1.0
6        3.148595e+06        3.148547e+06      3.148595e+06   48485.937500      48.437500      3.148547e+06             0.0                     0.0       48.489746           100.0                0.0                2.0                  0.0                  2.0  -1.025734e+06                   0.0                 200.0  48.437500           0.0        0.000000  3.148595e+06       1.0
7        3.148644e+06        3.148595e+06      3.148644e+06   48485.937500      48.437500      3.148595e+06             0.0                     0.0       48.489746           100.0                0.0                2.0                  0.0                  2.0  -1.025683e+06                   0.0                 200.0  48.437500           0.0        0.000000  3.148644e+06       1.0
8        3.148692e+06        3.148644e+06      3.148692e+06   48485.937500      48.437500      3.148644e+06             0.0                     0.0       48.489746           100.0                0.0                1.0                  0.0                  2.0  -1.025631e+06                   0.0                 200.0  48.385498           0.0       -0.052246  3.148692e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=107/2048, buf_size=200.[0m
[01/10 21:24:08]  --------------------------------------------------------------------------------
[01/10 21:24:08]  Iteration: 149 (97 solution, 51 counterexamples)
[01/10 21:35:22]  Generator returned sat in 664.539131 secs.
[01/10 21:35:23]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 21:35:32]  Verifer returned unsat in 8.409781 secs.
[01/10 21:35:32]  sf_get_cex returned in 8.622581 secs.
[01/10 21:35:32]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 21:35:32]  --------------------------------------------------------------------------------
[01/10 21:35:32]  Iteration: 150 (98 solution, 51 counterexamples)
[01/10 21:37:24]  Generator returned sat in 102.239706 secs.
[01/10 21:37:24]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 21:37:35]  Verifer returned unsat in 9.900745 secs.
[01/10 21:37:35]  sf_get_cex returned in 10.107040 secs.
[01/10 21:37:35]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 21:37:35]  --------------------------------------------------------------------------------
[01/10 21:37:35]  Iteration: 151 (99 solution, 51 counterexamples)
[01/10 21:38:42]  Generator returned sat in 57.409336 secs.
[01/10 21:38:42]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 21:39:00]  Verifer returned unsat in 18.225441 secs.
[01/10 21:39:00]  sf_get_cex returned in 18.371572 secs.
[01/10 21:39:00]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 21:39:00]  --------------------------------------------------------------------------------
[01/10 21:39:00]  Iteration: 152 (100 solution, 51 counterexamples)
[01/10 21:44:28]  Generator returned sat in 320.784646 secs.
[01/10 21:44:28]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:44:44]  Verifer returned unsat in 15.242770 secs.
[01/10 21:44:44]  sf_get_cex returned in 15.454939 secs.
[01/10 21:44:44]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:44:44]  --------------------------------------------------------------------------------
[01/10 21:44:44]  Iteration: 153 (101 solution, 51 counterexamples)
[01/10 21:46:48]  Generator returned sat in 114.657665 secs.
[01/10 21:46:49]  Candidate solution: 
[1m[94mif (+ -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:47:13]  Verifer returned unsat in 24.116448 secs.
[01/10 21:47:13]  sf_get_cex returned in 24.327151 secs.
[01/10 21:47:13]  Proved solution: 
[1m[92mif (+ -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:47:13]  --------------------------------------------------------------------------------
[01/10 21:47:13]  Iteration: 154 (102 solution, 51 counterexamples)
[01/10 21:49:19]  Generator returned sat in 116.567943 secs.
[01/10 21:49:20]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:49:29]  Verifer returned unsat in 9.657828 secs.
[01/10 21:49:29]  sf_get_cex returned in 9.884456 secs.
[01/10 21:49:29]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:49:30]  --------------------------------------------------------------------------------
[01/10 21:49:30]  Iteration: 155 (103 solution, 51 counterexamples)
[01/10 21:54:39]  Generator returned sat in 299.815598 secs.
[01/10 21:54:40]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 21:55:04]  Improved gap from 0.02978515625 to 48.4375
[01/10 21:55:08]  Improved number of small numbers from 122 to 128 out of a max of 165
[01/10 21:55:08]  Verifer returned sat in 27.910003 secs.
[01/10 21:55:08]  sf_get_cex returned in 28.119976 secs.
[01/10 21:55:08]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        2.756136e+06        2.756135e+06      2.756136e+06       0.104980       0.104004      2.756135e+06             0.0                     0.0        99.79375           100.0                0.0                1.0                  0.0                  2.0  -1.026040e+06                   0.0                 200.0   0.678125          -1.0        0.678027  2.756135e+06       0.0
1        2.756185e+06        2.756135e+06      2.756185e+06   49897.553125      49.896875      2.756135e+06             0.0                     0.0        99.79375           100.0                0.0                2.0                  0.0                  2.0  -1.025991e+06                   0.0                 200.0  50.553125           0.0       -0.043750  2.756186e+06       1.0
2        2.756235e+06        2.756186e+06      2.756235e+06   49947.428125      49.896875      2.756186e+06             0.0                     0.0        99.79375           100.0                0.0                1.0                  0.0                  2.0  -1.025940e+06                   0.0                 200.0  49.853125           0.0       -0.021875  2.756235e+06       0.0
3        2.756285e+06        2.756235e+06      2.756285e+06   49946.728125      49.896875      2.756235e+06             0.0                     0.0        99.79375           100.0                0.0                1.0                  0.0                  2.0  -1.025890e+06                   0.0                 200.0  49.875000           0.0        0.000000  2.756285e+06       0.0
4        2.756335e+06        2.756285e+06      2.756335e+06   49946.750000      49.896875      2.756285e+06             0.0                     0.0        99.79375           100.0                0.0                2.0                  0.0                  2.0  -1.025840e+06                   0.0                 200.0  49.896875           0.0        0.000000  2.756335e+06       1.0
5        2.756385e+06        2.756335e+06      2.756385e+06   49946.771875      49.896875      2.756335e+06             0.0                     0.0        99.79375           100.0                0.0                2.0                  0.0                  2.0  -1.025790e+06                   0.0                 200.0  49.896875           0.0        0.000000  2.756385e+06       1.0
6        2.756435e+06        2.756385e+06      2.756435e+06   49946.771875      49.896875      2.756385e+06             0.0                     0.0        99.79375           100.0                0.0                2.0                  0.0                  2.0  -1.025740e+06                   0.0                 200.0  49.896875           0.0       -0.000049  2.756435e+06       1.0
7        2.756485e+06        2.756435e+06      2.756485e+06   49946.771875      49.896875      2.756435e+06             0.0                     0.0        99.79375           100.0                0.0                1.0                  0.0                  2.0  -1.025690e+06                   0.0                 200.0  49.875000           0.0       -0.000146  2.756485e+06       0.0
8        2.756535e+06        2.756485e+06      2.756535e+06   49946.750000      49.896875      2.756485e+06             0.0                     0.0        99.79375           100.0                0.0                1.0                  0.0                  2.0  -1.025690e+06                   0.0                 200.0  49.874954           0.0      -50.103271  2.756585e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=6393/320, buf_size=200.[0m
[01/10 21:55:08]  --------------------------------------------------------------------------------
[01/10 21:55:08]  Iteration: 156 (103 solution, 52 counterexamples)
[01/10 21:58:43]  Generator returned sat in 204.614956 secs.
[01/10 21:58:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:59:45]  Verifer returned unsat in 61.919093 secs.
[01/10 21:59:46]  sf_get_cex returned in 62.133407 secs.
[01/10 21:59:46]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 21:59:46]  --------------------------------------------------------------------------------
[01/10 21:59:46]  Iteration: 157 (104 solution, 52 counterexamples)
[01/10 22:00:54]  Generator returned sat in 58.824483 secs.
[01/10 22:00:55]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:01:15]  Verifer returned unsat in 20.656495 secs.
[01/10 22:01:16]  sf_get_cex returned in 20.790953 secs.
[01/10 22:01:16]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:01:16]  --------------------------------------------------------------------------------
[01/10 22:01:16]  Iteration: 158 (105 solution, 52 counterexamples)
[01/10 22:03:14]  Generator returned sat in 108.386149 secs.
[01/10 22:03:15]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:03:23]  Verifer returned unsat in 8.231456 secs.
[01/10 22:03:23]  sf_get_cex returned in 8.463020 secs.
[01/10 22:03:23]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:03:23]  --------------------------------------------------------------------------------
[01/10 22:03:23]  Iteration: 159 (106 solution, 52 counterexamples)
[01/10 22:04:26]  Generator returned sat in 52.548364 secs.
[01/10 22:04:27]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:04:41]  Improved gap from 0.156005859375 to 48.4375
[01/10 22:04:42]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/10 22:04:42]  Verifer returned sat in 14.962603 secs.
[01/10 22:04:42]  sf_get_cex returned in 15.102688 secs.
[01/10 22:04:42]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        2.708076e+06        2.708076e+06      2.708076e+06       0.104980       0.104004      2.708076e+06             0.0                     0.0       49.489502           100.0                2.0                4.0                  2.0             9.051758  -1.026039e+06             98.979004            905.175781   0.000000          -1.0        0.000000  2.708076e+06       3.0
1        2.708125e+06        2.708076e+06      2.708125e+06   49489.501953      49.489502      2.708076e+06             0.0                     0.0       49.489502           100.0                0.0                1.0                  2.0             9.051758  -1.025988e+06             98.979004            905.175781  49.437500           0.0       -0.052002  2.708126e+06       0.0
2        2.708175e+06        2.708126e+06      2.708175e+06   49538.939453      49.489502      2.708126e+06             0.0                     0.0       49.489502           100.0                0.0                1.0                  2.0             9.051758  -1.025937e+06             98.979004            905.175781  49.437500           0.0        0.000000  2.708175e+06       0.0
3        2.708224e+06        2.708175e+06      2.708224e+06   49538.939453      49.489502      2.708175e+06             0.0                     0.0       49.489502           100.0                0.0                2.0                  2.0             9.051758  -1.025887e+06             98.979004            905.175781  49.489502           0.0        0.000000  2.708224e+06       1.0
4        2.708274e+06        2.708224e+06      2.708274e+06   49538.991455      49.489502      2.708224e+06             0.0                     0.0       49.489502           100.0                0.0                2.0                  2.0             9.051758  -1.025836e+06             98.979004            905.175781  49.489502           0.0        0.000000  2.708274e+06       1.0
5        2.708323e+06        2.708274e+06      2.708323e+06   49538.991455      49.489502      2.708274e+06             0.0                     0.0       49.489502           100.0                0.0                2.0                  2.0             9.051758  -1.025786e+06             98.979004            905.175781  49.489502           0.0        0.000000  2.708323e+06       1.0
6        2.708373e+06        2.708323e+06      2.708373e+06   49538.991455      49.489502      2.708323e+06             0.0                     0.0       49.489502           100.0                0.0                2.0                  2.0             9.051758  -1.025740e+06             98.979004            905.175781  49.489502           0.0       -4.573486  2.708378e+06       1.0
7        2.708422e+06        2.708378e+06      2.708422e+06   49538.991455      49.489502      2.708378e+06             0.0                     0.0       49.489502           100.0                0.0                1.0                  2.0             9.051758  -1.025688e+06             98.979004            905.175781  44.916016           0.0       -3.521484  2.708426e+06       0.0
8        2.708472e+06        2.708426e+06      2.708472e+06   49534.417969      49.489502      2.708426e+06             0.0                     0.0       49.489502           100.0                0.0                1.0                  2.0             9.051758  -1.025637e+06             98.979004            905.175781  45.968018           0.0       -2.469482  2.708474e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81707/4096, buf_size=200.[0m
[01/10 22:04:42]  --------------------------------------------------------------------------------
[01/10 22:04:42]  Iteration: 160 (106 solution, 53 counterexamples)
[01/10 22:09:06]  Generator returned sat in 257.890239 secs.
[01/10 22:09:07]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:09:15]  Verifer returned unsat in 7.626652 secs.
[01/10 22:09:15]  sf_get_cex returned in 7.774776 secs.
[01/10 22:09:15]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:09:15]  --------------------------------------------------------------------------------
[01/10 22:09:15]  Iteration: 161 (107 solution, 53 counterexamples)
[01/10 22:10:00]  Generator returned sat in 39.514908 secs.
[01/10 22:10:01]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:10:08]  Verifer returned unsat in 7.354409 secs.
[01/10 22:10:08]  sf_get_cex returned in 7.488633 secs.
[01/10 22:10:08]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:10:08]  --------------------------------------------------------------------------------
[01/10 22:10:08]  Iteration: 162 (108 solution, 53 counterexamples)
[01/10 22:10:54]  Generator returned sat in 39.438121 secs.
[01/10 22:10:55]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:11:03]  Verifer returned unsat in 8.738906 secs.
[01/10 22:11:03]  sf_get_cex returned in 8.870679 secs.
[01/10 22:11:03]  Proved solution: 
[1m[92mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:11:03]  --------------------------------------------------------------------------------
[01/10 22:11:03]  Iteration: 163 (109 solution, 53 counterexamples)
[01/10 22:11:52]  Generator returned sat in 42.546732 secs.
[01/10 22:11:53]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:12:06]  Verifer returned unsat in 12.981173 secs.
[01/10 22:12:06]  sf_get_cex returned in 13.118865 secs.
[01/10 22:12:06]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:12:06]  --------------------------------------------------------------------------------
[01/10 22:12:06]  Iteration: 164 (110 solution, 53 counterexamples)
[01/10 22:13:31]  Generator returned sat in 78.152104 secs.
[01/10 22:13:31]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:13:36]  Verifer returned unsat in 4.563306 secs.
[01/10 22:13:36]  sf_get_cex returned in 4.699197 secs.
[01/10 22:13:36]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:13:36]  --------------------------------------------------------------------------------
[01/10 22:13:36]  Iteration: 165 (111 solution, 53 counterexamples)
[01/10 22:14:56]  Generator returned sat in 74.483689 secs.
[01/10 22:14:57]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:15:20]  Verifer returned unsat in 22.667602 secs.
[01/10 22:15:20]  sf_get_cex returned in 22.810422 secs.
[01/10 22:15:20]  Proved solution: 
[1m[92mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:15:20]  --------------------------------------------------------------------------------
[01/10 22:15:20]  Iteration: 166 (112 solution, 53 counterexamples)
[01/10 22:16:47]  Generator returned sat in 80.856560 secs.
[01/10 22:16:48]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:16:54]  Verifer returned unsat in 6.198590 secs.
[01/10 22:16:54]  sf_get_cex returned in 6.329749 secs.
[01/10 22:16:54]  Proved solution: 
[1m[92mif (+ -1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:16:54]  --------------------------------------------------------------------------------
[01/10 22:16:54]  Iteration: 167 (113 solution, 53 counterexamples)
[01/10 22:18:16]  Generator returned sat in 76.240713 secs.
[01/10 22:18:17]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:18:25]  Verifer returned unsat in 8.301834 secs.
[01/10 22:18:25]  sf_get_cex returned in 8.437625 secs.
[01/10 22:18:25]  Proved solution: 
[1m[92mif (+ -1min_qdel + 1min_buffer + -1max_buffer + -3 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:18:25]  --------------------------------------------------------------------------------
[01/10 22:18:25]  Iteration: 168 (114 solution, 53 counterexamples)
[01/10 22:22:43]  Generator returned sat in 251.547435 secs.
[01/10 22:22:44]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:22:50]  Improved number of small numbers from 110 to 112 out of a max of 164
[01/10 22:22:50]  Verifer returned sat in 6.157759 secs.
[01/10 22:22:50]  sf_get_cex returned in 6.291808 secs.
[01/10 22:22:50]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        2.579584e+06        2.579300e+06      2.579584e+06       0.104736       0.103760      2.579300e+06        0.000000                0.000000           100.0      142.052002                2.0                4.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  284.104004          -1.0      200.000000  2.579384e+06       3.0
1        2.579634e+06        2.579442e+06      2.579634e+06   50284.104004      50.000000      2.579442e+06        0.000000                0.000000           100.0      142.052002                0.0                2.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  192.104004           0.0      150.000000  2.579484e+06       1.0
2        2.579750e+06        2.579584e+06      2.579750e+06  116841.436686     116.649333      2.579584e+06        0.000000                0.000000           100.0      142.052002                1.0                3.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  166.649333           1.0      166.649333  2.579584e+06       2.0
3        2.579867e+06        2.579584e+06      2.579867e+06  116815.982015     116.649333      2.579584e+06        0.000000                0.000000           100.0      142.052002                1.0                3.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  283.298665           1.0      183.298665  2.579684e+06       2.0
4        2.579984e+06        2.579726e+06      2.579984e+06  116932.631348     116.649333      2.579726e+06        0.000000                0.000000           100.0      142.052002                1.0                3.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  257.843994           1.0      199.947998  2.579784e+06       2.0
5        2.580100e+06        2.579867e+06      2.580100e+06  116907.176676     116.649333      2.579867e+06       16.597331                0.000000           100.0      142.052002                0.0                2.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  216.649333           0.0      200.000000  2.579884e+06       1.0
6        2.580217e+06        2.579983e+06      2.580217e+06  116882.579346     116.649333      2.579983e+06       33.246663               16.597331           100.0      142.052002                1.0                3.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  200.208008           1.0      200.000000  2.579984e+06       2.0
7        2.580334e+06        2.580083e+06      2.580334e+06  116882.787354     116.649333      2.580083e+06       49.895996               33.246663           100.0      142.052002                1.0                3.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  200.260010           1.0      200.000000  2.580084e+06       2.0
8        2.580450e+06        2.580183e+06      2.580450e+06  116899.488688     116.649333      2.580183e+06       66.545329               49.895996           100.0      142.052002                1.0                3.0                  2.0                  3.0  -1.025688e+06                 200.0            426.156006  200.311931           1.0      200.000000  2.580184e+06       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=817709/12288, beliefs_improve=False, alpha=204587/12288, buf_size=200.[0m
[01/10 22:22:50]  --------------------------------------------------------------------------------
[01/10 22:22:50]  Iteration: 169 (114 solution, 54 counterexamples)
[01/10 22:26:39]  Generator returned sat in 221.877005 secs.
[01/10 22:26:39]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:26:53]  Verifer returned unsat in 14.213885 secs.
[01/10 22:26:53]  sf_get_cex returned in 14.352485 secs.
[01/10 22:26:53]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:26:53]  --------------------------------------------------------------------------------
[01/10 22:26:53]  Iteration: 170 (115 solution, 54 counterexamples)
[01/10 22:28:20]  Generator returned sat in 80.253854 secs.
[01/10 22:28:21]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:29:44]  Verifer returned unsat in 83.414350 secs.
[01/10 22:29:44]  sf_get_cex returned in 83.564044 secs.
[01/10 22:29:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 22:29:44]  --------------------------------------------------------------------------------
[01/10 22:29:44]  Iteration: 171 (116 solution, 54 counterexamples)
[01/10 22:31:08]  Generator returned sat in 77.018497 secs.
[01/10 22:31:08]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 22:31:17]  Verifer returned unsat in 8.214306 secs.
[01/10 22:31:17]  sf_get_cex returned in 8.360047 secs.
[01/10 22:31:17]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 22:31:17]  --------------------------------------------------------------------------------
[01/10 22:31:17]  Iteration: 172 (117 solution, 54 counterexamples)
[01/10 22:32:41]  Generator returned sat in 77.451032 secs.
[01/10 22:32:41]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:32:55]  Verifer returned unsat in 13.498115 secs.
[01/10 22:32:55]  sf_get_cex returned in 13.632210 secs.
[01/10 22:32:55]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:32:55]  --------------------------------------------------------------------------------
[01/10 22:32:55]  Iteration: 173 (118 solution, 54 counterexamples)
[01/10 22:34:18]  Generator returned sat in 76.292381 secs.
[01/10 22:34:18]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 22:34:27]  Verifer returned unsat in 9.175485 secs.
[01/10 22:34:27]  sf_get_cex returned in 9.313567 secs.
[01/10 22:34:27]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 22:34:27]  --------------------------------------------------------------------------------
[01/10 22:34:27]  Iteration: 174 (119 solution, 54 counterexamples)
[01/10 22:36:29]  Generator returned sat in 115.289610 secs.
[01/10 22:36:30]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:36:45]  Verifer returned unsat in 14.960557 secs.
[01/10 22:36:45]  sf_get_cex returned in 15.100610 secs.
[01/10 22:36:45]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:36:45]  --------------------------------------------------------------------------------
[01/10 22:36:45]  Iteration: 175 (120 solution, 54 counterexamples)
[01/10 22:37:42]  Generator returned sat in 51.085846 secs.
[01/10 22:37:43]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:37:54]  Verifer returned unsat in 10.858981 secs.
[01/10 22:37:54]  sf_get_cex returned in 10.993400 secs.
[01/10 22:37:54]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:37:54]  --------------------------------------------------------------------------------
[01/10 22:37:54]  Iteration: 176 (121 solution, 54 counterexamples)
[01/10 22:38:50]  Generator returned sat in 49.686556 secs.
[01/10 22:38:51]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:38:58]  Verifer returned unsat in 6.759220 secs.
[01/10 22:38:58]  sf_get_cex returned in 6.892252 secs.
[01/10 22:38:58]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:38:58]  --------------------------------------------------------------------------------
[01/10 22:38:58]  Iteration: 177 (122 solution, 54 counterexamples)
[01/10 22:39:53]  Generator returned sat in 49.520504 secs.
[01/10 22:39:54]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:40:05]  Verifer returned unsat in 11.286695 secs.
[01/10 22:40:05]  sf_get_cex returned in 11.426273 secs.
[01/10 22:40:05]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:40:05]  --------------------------------------------------------------------------------
[01/10 22:40:05]  Iteration: 178 (123 solution, 54 counterexamples)
[01/10 22:41:02]  Generator returned sat in 49.992525 secs.
[01/10 22:41:02]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:41:10]  Verifer returned unsat in 7.487764 secs.
[01/10 22:41:10]  sf_get_cex returned in 7.625055 secs.
[01/10 22:41:10]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:41:10]  --------------------------------------------------------------------------------
[01/10 22:41:10]  Iteration: 179 (124 solution, 54 counterexamples)
[01/10 22:42:06]  Generator returned sat in 50.233349 secs.
[01/10 22:42:07]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:42:51]  Verifer returned unsat in 43.919835 secs.
[01/10 22:42:51]  sf_get_cex returned in 44.071444 secs.
[01/10 22:42:51]  Proved solution: 
[1m[92mif (+ 1min_c + -1/2max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:42:51]  --------------------------------------------------------------------------------
[01/10 22:42:51]  Iteration: 180 (125 solution, 54 counterexamples)
[01/10 22:43:51]  Generator returned sat in 53.088488 secs.
[01/10 22:43:51]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + 3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:44:03]  Verifer returned unsat in 12.068695 secs.
[01/10 22:44:03]  sf_get_cex returned in 12.204095 secs.
[01/10 22:44:03]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + 3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:44:03]  --------------------------------------------------------------------------------
[01/10 22:44:03]  Iteration: 181 (126 solution, 54 counterexamples)
[01/10 22:44:59]  Generator returned sat in 49.229604 secs.
[01/10 22:45:00]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:45:12]  Verifer returned unsat in 12.084484 secs.
[01/10 22:45:12]  sf_get_cex returned in 12.224604 secs.
[01/10 22:45:12]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:45:12]  --------------------------------------------------------------------------------
[01/10 22:45:12]  Iteration: 182 (127 solution, 54 counterexamples)
[01/10 22:46:09]  Generator returned sat in 49.966138 secs.
[01/10 22:46:09]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 22:46:20]  Improved gap from 27.9481201171875 to 48.4375
[01/10 22:46:22]  Improved number of small numbers from 105 to 113 out of a max of 165
[01/10 22:46:22]  Verifer returned sat in 13.036534 secs.
[01/10 22:46:22]  sf_get_cex returned in 13.166638 secs.
[01/10 22:46:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        2.258145e+06        2.258135e+06      2.258145e+06       0.104736       0.103516      2.258135e+06             0.0                     0.0        96.97876       194.95752                2.0                4.0                  2.0                  2.0 -704439.554932             193.95752            389.915039  10.470581          -1.0       10.470367  2.258135e+06       3.0
1        2.258194e+06        2.258135e+06      2.258194e+06   48499.850464      48.489380      2.258135e+06             0.0                     0.0        96.97876       194.95752                0.0                2.0                  2.0                  2.0 -704398.670166             193.95752            389.915039  58.908081           0.0       -0.155488  2.258194e+06       1.0
2        2.258242e+06        2.258194e+06      2.258242e+06   48548.287964      48.489380      2.258194e+06             0.0                     0.0        96.97876       194.95752                0.0                1.0                  2.0                  2.0 -704347.107818             193.95752            389.915039  48.333740           0.0       -0.103760  2.258242e+06       0.0
3        2.258291e+06        2.258242e+06      2.258291e+06   48537.713623      48.489380      2.258242e+06             0.0                     0.0        96.97876       194.95752                0.0                1.0                  2.0                  2.0 -704295.545318             193.95752            389.915039  48.385620           0.0       -0.051880  2.258291e+06       0.0
4        2.258339e+06        2.258291e+06      2.258339e+06   48537.765503      48.489380      2.258291e+06             0.0                     0.0        96.97876       194.95752                0.0                1.0                  2.0                  2.0 -704243.982818             193.95752            389.915039  48.437500           0.0        0.000000  2.258339e+06       0.0
5        2.258388e+06        2.258339e+06      2.258388e+06   48537.817383      48.489380      2.258339e+06             0.0                     0.0        96.97876       194.95752                0.0                2.0                  2.0                  2.0 -704192.523926             193.95752            389.915039  48.489380           0.0       -0.051728  2.258388e+06       1.0
6        2.258436e+06        2.258388e+06      2.258436e+06   48537.869263      48.489380      2.258388e+06             0.0                     0.0        96.97876       194.95752                0.0                1.0                  2.0                  2.0 -704140.961578             193.95752            389.915039  48.437500           0.0        0.000000  2.258436e+06       0.0
7        2.258485e+06        2.258436e+06      2.258485e+06   48537.817383      48.489380      2.258436e+06             0.0                     0.0        96.97876       194.95752                0.0                2.0                  2.0                  2.0 -704089.451172             193.95752            389.915039  48.489380           0.0       -0.000214  2.258485e+06       1.0
8        2.258533e+06        2.258485e+06      2.258533e+06   48537.869263      48.489380      2.258485e+06             0.0                     0.0        96.97876       194.95752                0.0                1.0                  2.0                  2.0 -704038.096191             193.95752            389.915039  48.437327           0.0       -0.155854  2.258533e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81707/4096, buf_size=200.[0m
[01/10 22:46:23]  --------------------------------------------------------------------------------
[01/10 22:46:23]  Iteration: 183 (127 solution, 55 counterexamples)
[01/10 22:47:48]  Generator returned sat in 78.991192 secs.
[01/10 22:47:48]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:47:54]  Verifer returned unsat in 5.422014 secs.
[01/10 22:47:54]  sf_get_cex returned in 5.553729 secs.
[01/10 22:47:54]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:47:54]  --------------------------------------------------------------------------------
[01/10 22:47:54]  Iteration: 184 (128 solution, 55 counterexamples)
[01/10 22:49:23]  Generator returned sat in 81.743062 secs.
[01/10 22:49:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:49:35]  Verifer returned unsat in 11.617972 secs.
[01/10 22:49:35]  sf_get_cex returned in 11.748170 secs.
[01/10 22:49:35]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:49:35]  --------------------------------------------------------------------------------
[01/10 22:49:35]  Iteration: 185 (129 solution, 55 counterexamples)
[01/10 22:51:02]  Generator returned sat in 81.047165 secs.
[01/10 22:51:03]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:11]  Verifer returned unsat in 7.666660 secs.
[01/10 22:51:11]  sf_get_cex returned in 7.805132 secs.
[01/10 22:51:11]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:51:11]  --------------------------------------------------------------------------------
[01/10 22:51:11]  Iteration: 186 (130 solution, 55 counterexamples)
[01/10 22:52:41]  Generator returned sat in 83.793750 secs.
[01/10 22:52:41]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:52:59]  Verifer returned unsat in 17.926644 secs.
[01/10 22:52:59]  sf_get_cex returned in 18.063891 secs.
[01/10 22:52:59]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:53:00]  --------------------------------------------------------------------------------
[01/10 22:53:00]  Iteration: 187 (131 solution, 55 counterexamples)
[01/10 22:54:38]  Generator returned sat in 92.153272 secs.
[01/10 22:54:39]  Candidate solution: 
[1m[94mif (+ -3/2min_c + 1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 22:54:50]  Improved gap from 17.382062639508927 to 48.4375
[01/10 22:54:53]  Improved number of small numbers from 118 to 125 out of a max of 165
[01/10 22:54:53]  Verifer returned sat in 13.719688 secs.
[01/10 22:54:53]  sf_get_cex returned in 13.846211 secs.
[01/10 22:54:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        2.378326e+06        2.378326e+06      2.378326e+06       0.104492       0.103271      2.378326e+06             0.0                     0.0       43.788818      111.366455                2.0                4.0                  2.0             2.051758 -704444.041992             87.577637            228.496994   0.000000          -1.0       -0.000022  2.378326e+06       3.0
1        2.378376e+06        2.378326e+06      2.378376e+06   49985.212054      49.985212      2.378326e+06             0.0                     0.0       43.788818      111.366455                0.0                1.0                  2.0             2.051758 -704394.027182             87.577637            228.496994  49.933454           0.0        0.000000  2.378376e+06       0.0
2        2.378426e+06        2.378376e+06      2.378426e+06   50035.145508      49.985212      2.378376e+06             0.0                     0.0       43.788818      111.366455                0.0                2.0                  2.0             2.051758 -704345.560059             87.577637            228.496994  49.985212           0.0       -1.547665  2.378427e+06       1.0
3        2.378476e+06        2.378427e+06      2.378476e+06   50035.197266      49.985212      2.378427e+06             0.0                     0.0       43.788818      111.366455                0.0                1.0                  2.0             2.051758 -704293.997606             87.577637            228.496994  48.437500           0.0        0.000000  2.378476e+06       0.0
4        2.378526e+06        2.378476e+06      2.378526e+06   50033.649554      49.985212      2.378476e+06             0.0                     0.0       43.788818      111.366455                0.0                2.0                  2.0             2.051758 -704243.982910             87.577637            228.496994  49.985212           0.0       -0.000092  2.378526e+06       1.0
5        2.378576e+06        2.378529e+06      2.378576e+06   50035.197266      49.985212      2.378529e+06             0.0                     0.0       43.788818      111.366455                0.0                1.0                  2.0             2.051758 -704195.515742             87.577637            228.496994  46.889788           0.0       -1.547712  2.378577e+06       0.0
6        2.378626e+06        2.378577e+06      2.378626e+06   50032.101842      49.985212      2.378577e+06             0.0                     0.0       43.788818      111.366455                0.0                1.0                  2.0             2.051758 -704143.953242             87.577637            228.496994  48.437500           0.0        0.000000  2.378626e+06       0.0
7        2.378676e+06        2.378626e+06      2.378676e+06   50033.649554      49.985212      2.378626e+06             0.0                     0.0       43.788818      111.366455                0.0                2.0                  2.0             2.051758 -704093.938477             87.577637            228.496994  49.985212           0.0       -0.000022  2.378676e+06       1.0
8        2.378726e+06        2.378676e+06      2.378726e+06   50035.197266      49.985212      2.378676e+06             0.0                     0.0       43.788818      111.366455                0.0                1.0                  2.0             2.051758 -704043.923828             87.577637            228.496994  49.933447           0.0       -0.000162  2.378726e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=177663/28672, buf_size=200.[0m
[01/10 22:54:53]  --------------------------------------------------------------------------------
[01/10 22:54:53]  Iteration: 188 (131 solution, 56 counterexamples)
[01/10 23:01:05]  Generator returned sat in 365.262526 secs.
[01/10 23:01:05]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 23:01:10]  Verifer returned unsat in 5.108569 secs.
[01/10 23:01:10]  sf_get_cex returned in 5.234118 secs.
[01/10 23:01:10]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 23:01:10]  --------------------------------------------------------------------------------
[01/10 23:01:10]  Iteration: 189 (132 solution, 56 counterexamples)
[01/10 23:02:40]  Generator returned sat in 82.807198 secs.
[01/10 23:02:40]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:03:11]  Verifer returned unsat in 30.884147 secs.
[01/10 23:03:11]  sf_get_cex returned in 31.017260 secs.
[01/10 23:03:11]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:03:11]  --------------------------------------------------------------------------------
[01/10 23:03:11]  Iteration: 190 (133 solution, 56 counterexamples)
[01/10 23:04:36]  Generator returned sat in 78.107413 secs.
[01/10 23:04:36]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:04:45]  Verifer returned unsat in 8.730124 secs.
[01/10 23:04:45]  sf_get_cex returned in 8.853910 secs.
[01/10 23:04:45]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:04:45]  --------------------------------------------------------------------------------
[01/10 23:04:45]  Iteration: 191 (134 solution, 56 counterexamples)
[01/10 23:06:10]  Generator returned sat in 78.619277 secs.
[01/10 23:06:10]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:06:16]  Verifer returned unsat in 5.148282 secs.
[01/10 23:06:16]  sf_get_cex returned in 5.288448 secs.
[01/10 23:06:16]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:06:16]  --------------------------------------------------------------------------------
[01/10 23:06:16]  Iteration: 192 (135 solution, 56 counterexamples)
[01/10 23:07:43]  Generator returned sat in 80.495476 secs.
[01/10 23:07:43]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:07:56]  Verifer returned unsat in 13.258263 secs.
[01/10 23:07:56]  sf_get_cex returned in 13.391024 secs.
[01/10 23:07:56]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:07:57]  --------------------------------------------------------------------------------
[01/10 23:07:57]  Iteration: 193 (136 solution, 56 counterexamples)
[01/10 23:09:26]  Generator returned sat in 83.312632 secs.
[01/10 23:09:27]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:09:34]  Verifer returned unsat in 7.308098 secs.
[01/10 23:09:34]  sf_get_cex returned in 7.441346 secs.
[01/10 23:09:34]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:09:34]  --------------------------------------------------------------------------------
[01/10 23:09:34]  Iteration: 194 (137 solution, 56 counterexamples)
[01/10 23:11:02]  Generator returned sat in 80.961162 secs.
[01/10 23:11:02]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:11:25]  Verifer returned unsat in 23.240840 secs.
[01/10 23:11:25]  sf_get_cex returned in 23.367967 secs.
[01/10 23:11:25]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:11:25]  --------------------------------------------------------------------------------
[01/10 23:11:25]  Iteration: 195 (138 solution, 56 counterexamples)
[01/10 23:12:50]  Generator returned sat in 77.843625 secs.
[01/10 23:12:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:13:01]  Verifer returned unsat in 10.959697 secs.
[01/10 23:13:01]  sf_get_cex returned in 11.080414 secs.
[01/10 23:13:01]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:13:01]  --------------------------------------------------------------------------------
[01/10 23:13:01]  Iteration: 196 (139 solution, 56 counterexamples)
[01/10 23:14:25]  Generator returned sat in 77.835614 secs.
[01/10 23:14:26]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:14:44]  Verifer returned unsat in 18.597395 secs.
[01/10 23:14:44]  sf_get_cex returned in 18.724595 secs.
[01/10 23:14:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:14:45]  --------------------------------------------------------------------------------
[01/10 23:14:45]  Iteration: 197 (140 solution, 56 counterexamples)
[01/10 23:16:15]  Generator returned sat in 83.534372 secs.
[01/10 23:16:15]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:16:20]  Verifer returned unsat in 5.216245 secs.
[01/10 23:16:20]  sf_get_cex returned in 5.352504 secs.
[01/10 23:16:20]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:16:20]  --------------------------------------------------------------------------------
[01/10 23:16:20]  Iteration: 198 (141 solution, 56 counterexamples)
[01/10 23:17:53]  Generator returned sat in 86.326955 secs.
[01/10 23:17:54]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:18:09]  Verifer returned unsat in 15.435159 secs.
[01/10 23:18:09]  sf_get_cex returned in 15.561869 secs.
[01/10 23:18:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:18:09]  --------------------------------------------------------------------------------
[01/10 23:18:09]  Iteration: 199 (142 solution, 56 counterexamples)
[01/10 23:20:34]  Generator returned sat in 138.392305 secs.
[01/10 23:20:34]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 23:20:44]  Verifer returned unsat in 9.434257 secs.
[01/10 23:20:44]  sf_get_cex returned in 9.567544 secs.
[01/10 23:20:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 23:20:44]  --------------------------------------------------------------------------------
[01/10 23:20:44]  Iteration: 200 (143 solution, 56 counterexamples)
[01/10 23:22:15]  Generator returned sat in 83.868086 secs.
[01/10 23:22:15]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:22:27]  Verifer returned unsat in 11.479236 secs.
[01/10 23:22:27]  sf_get_cex returned in 11.607143 secs.
[01/10 23:22:27]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:22:27]  --------------------------------------------------------------------------------
[01/10 23:22:27]  Iteration: 201 (144 solution, 56 counterexamples)
[01/10 23:23:55]  Generator returned sat in 81.320801 secs.
[01/10 23:23:55]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:24:02]  Verifer returned unsat in 7.058900 secs.
[01/10 23:24:02]  sf_get_cex returned in 7.186079 secs.
[01/10 23:24:02]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:24:02]  --------------------------------------------------------------------------------
[01/10 23:24:02]  Iteration: 202 (145 solution, 56 counterexamples)
[01/10 23:25:27]  Generator returned sat in 78.296026 secs.
[01/10 23:25:27]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:25:34]  Verifer returned unsat in 6.679417 secs.
[01/10 23:25:34]  sf_get_cex returned in 6.803586 secs.
[01/10 23:25:34]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:25:34]  --------------------------------------------------------------------------------
[01/10 23:25:34]  Iteration: 203 (146 solution, 56 counterexamples)
[01/10 23:26:59]  Generator returned sat in 78.906561 secs.
[01/10 23:27:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:27:06]  Verifer returned unsat in 6.494723 secs.
[01/10 23:27:06]  sf_get_cex returned in 6.625982 secs.
[01/10 23:27:06]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:27:06]  --------------------------------------------------------------------------------
[01/10 23:27:06]  Iteration: 204 (147 solution, 56 counterexamples)
[01/10 23:28:33]  Generator returned sat in 79.791192 secs.
[01/10 23:28:33]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:28:50]  Verifer returned unsat in 17.040114 secs.
[01/10 23:28:50]  sf_get_cex returned in 17.171084 secs.
[01/10 23:28:50]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:28:50]  --------------------------------------------------------------------------------
[01/10 23:28:50]  Iteration: 205 (148 solution, 56 counterexamples)
[01/10 23:30:19]  Generator returned sat in 82.473063 secs.
[01/10 23:30:20]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:30:28]  Verifer returned unsat in 8.348970 secs.
[01/10 23:30:28]  sf_get_cex returned in 8.473575 secs.
[01/10 23:30:28]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:30:28]  --------------------------------------------------------------------------------
[01/10 23:30:28]  Iteration: 206 (149 solution, 56 counterexamples)
[01/10 23:31:58]  Generator returned sat in 83.353187 secs.
[01/10 23:31:59]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 23:32:09]  Verifer returned unsat in 10.452173 secs.
[01/10 23:32:09]  sf_get_cex returned in 10.591575 secs.
[01/10 23:32:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/10 23:32:09]  --------------------------------------------------------------------------------
[01/10 23:32:09]  Iteration: 207 (150 solution, 56 counterexamples)
[01/10 23:33:39]  Generator returned sat in 83.054371 secs.
[01/10 23:33:39]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:33:52]  Improved gap from 0.0516357421875 to 48.4375
[01/10 23:33:52]  Improved number of small numbers from 117 to 165 out of a max of 165
[01/10 23:33:52]  Verifer returned sat in 13.129666 secs.
[01/10 23:33:53]  sf_get_cex returned in 13.275702 secs.
[01/10 23:33:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        2.196976e+06        2.196969e+06      2.196976e+06       0.104248       0.103271      2.196969e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468579.996338                   0.0            366.999512   7.771729          -1.0        7.771729  2.196969e+06       1.0
1        2.197025e+06        2.196969e+06      2.197025e+06   48882.771729      48.875000      2.196969e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468536.643066                   0.0            366.999512  56.595215           0.0        0.000000  2.197025e+06       1.0
2        2.197074e+06        2.197025e+06      2.197074e+06   48931.595215      48.875000      2.197025e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468485.518066                   0.0            366.999512  48.875000           0.0        0.000000  2.197074e+06       1.0
3        2.197123e+06        2.197074e+06      2.197123e+06   48923.875000      48.875000      2.197074e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468434.393066                   0.0            366.999512  48.875000           0.0        0.000000  2.197123e+06       1.0
4        2.197172e+06        2.197123e+06      2.197172e+06   48923.875000      48.875000      2.197123e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468383.268066                   0.0            366.999512  48.875000           0.0        0.000000  2.197172e+06       1.0
5        2.197221e+06        2.197172e+06      2.197221e+06   48923.875000      48.875000      2.197172e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468332.143066                   0.0            366.999512  48.875000           0.0        0.000000  2.197221e+06       1.0
6        2.197270e+06        2.197221e+06      2.197270e+06   48923.875000      48.875000      2.197221e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468281.018066                   0.0            366.999512  48.875000           0.0        0.000000  2.197270e+06       1.0
7        2.197318e+06        2.197270e+06      2.197318e+06   48923.875000      48.875000      2.197270e+06             0.0                     0.0           97.75      183.499756                0.0                2.0                  0.0                  2.0 -468229.893066                   0.0            366.999512  48.875000           0.0        0.000000  2.197318e+06       1.0
8        2.197367e+06        2.197318e+06      2.197367e+06   48923.875000      48.875000      2.197318e+06             0.0                     0.0           97.75      183.499756                0.0                1.0                  0.0                  2.0 -468229.893066                   0.0            366.999512  48.823486           0.0      -51.125000  2.197418e+06       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=20427/1024, buf_size=200.[0m
[01/10 23:33:53]  --------------------------------------------------------------------------------
[01/10 23:33:53]  Iteration: 208 (150 solution, 57 counterexamples)
[01/10 23:36:15]  Generator returned sat in 135.189342 secs.
[01/10 23:36:15]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:36:27]  Verifer returned unsat in 12.350778 secs.
[01/10 23:36:27]  sf_get_cex returned in 12.485056 secs.
[01/10 23:36:27]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:36:28]  --------------------------------------------------------------------------------
[01/10 23:36:28]  Iteration: 209 (151 solution, 57 counterexamples)
[01/10 23:38:03]  Generator returned sat in 88.281034 secs.
[01/10 23:38:03]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:38:32]  Verifer returned unsat in 28.906541 secs.
[01/10 23:38:32]  sf_get_cex returned in 29.043508 secs.
[01/10 23:38:32]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:38:32]  --------------------------------------------------------------------------------
[01/10 23:38:32]  Iteration: 210 (152 solution, 57 counterexamples)
[01/10 23:40:05]  Generator returned sat in 86.036185 secs.
[01/10 23:40:05]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:40:12]  Verifer returned unsat in 6.501423 secs.
[01/10 23:40:12]  sf_get_cex returned in 6.628354 secs.
[01/10 23:40:12]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -3/2max_c > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:40:12]  --------------------------------------------------------------------------------
[01/10 23:40:12]  Iteration: 211 (153 solution, 57 counterexamples)
[01/10 23:43:35]  Generator returned sat in 196.609761 secs.
[01/10 23:43:36]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:43:53]  Verifer returned unsat in 17.586344 secs.
[01/10 23:43:53]  sf_get_cex returned in 17.724412 secs.
[01/10 23:43:53]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:43:53]  --------------------------------------------------------------------------------
[01/10 23:43:53]  Iteration: 212 (154 solution, 57 counterexamples)
[01/10 23:45:25]  Generator returned sat in 85.369844 secs.
[01/10 23:45:26]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:45:36]  Verifer returned unsat in 9.893331 secs.
[01/10 23:45:36]  sf_get_cex returned in 10.032462 secs.
[01/10 23:45:36]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:45:36]  --------------------------------------------------------------------------------
[01/10 23:45:36]  Iteration: 213 (155 solution, 57 counterexamples)
[01/10 23:47:08]  Generator returned sat in 85.572489 secs.
[01/10 23:47:08]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:47:17]  Verifer returned unsat in 8.385010 secs.
[01/10 23:47:17]  sf_get_cex returned in 8.511998 secs.
[01/10 23:47:17]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/10 23:47:17]  --------------------------------------------------------------------------------
[01/10 23:47:17]  Iteration: 214 (156 solution, 57 counterexamples)
[01/10 23:48:49]  Generator returned sat in 85.798957 secs.
[01/10 23:48:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:49:03]  Verifer returned unsat in 12.816336 secs.
[01/10 23:49:03]  sf_get_cex returned in 12.942521 secs.
[01/10 23:49:03]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:49:03]  --------------------------------------------------------------------------------
[01/10 23:49:03]  Iteration: 215 (157 solution, 57 counterexamples)
[01/10 23:50:35]  Generator returned sat in 85.727998 secs.
[01/10 23:50:35]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:50:41]  Verifer returned unsat in 5.722843 secs.
[01/10 23:50:41]  sf_get_cex returned in 5.856768 secs.
[01/10 23:50:41]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:50:41]  --------------------------------------------------------------------------------
[01/10 23:50:41]  Iteration: 216 (158 solution, 57 counterexamples)
[01/10 23:52:13]  Generator returned sat in 84.686104 secs.
[01/10 23:52:13]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:52:24]  Verifer returned unsat in 10.860727 secs.
[01/10 23:52:24]  sf_get_cex returned in 10.995170 secs.
[01/10 23:52:24]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/10 23:52:24]  --------------------------------------------------------------------------------
[01/10 23:52:24]  Iteration: 217 (159 solution, 57 counterexamples)
[01/10 23:53:58]  Generator returned sat in 87.032446 secs.
[01/10 23:53:58]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:54:08]  Verifer returned unsat in 9.490501 secs.
[01/10 23:54:08]  sf_get_cex returned in 9.621725 secs.
[01/10 23:54:08]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:54:08]  --------------------------------------------------------------------------------
[01/10 23:54:08]  Iteration: 218 (160 solution, 57 counterexamples)
[01/10 23:55:44]  Generator returned sat in 89.727346 secs.
[01/10 23:55:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:56:03]  Verifer returned unsat in 18.305130 secs.
[01/10 23:56:03]  sf_get_cex returned in 18.439069 secs.
[01/10 23:56:03]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:56:03]  --------------------------------------------------------------------------------
[01/10 23:56:03]  Iteration: 219 (161 solution, 57 counterexamples)
[01/10 23:57:35]  Generator returned sat in 85.256979 secs.
[01/10 23:57:35]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:57:45]  Verifer returned unsat in 9.332829 secs.
[01/10 23:57:45]  sf_get_cex returned in 9.477696 secs.
[01/10 23:57:45]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/10 23:57:45]  --------------------------------------------------------------------------------
[01/10 23:57:45]  Iteration: 220 (162 solution, 57 counterexamples)
[01/10 23:59:22]  Generator returned sat in 90.620603 secs.
[01/10 23:59:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:59:30]  Verifer returned unsat in 7.686399 secs.
[01/10 23:59:30]  sf_get_cex returned in 7.820443 secs.
[01/10 23:59:30]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/10 23:59:30]  --------------------------------------------------------------------------------
[01/10 23:59:30]  Iteration: 221 (163 solution, 57 counterexamples)
[01/11 00:01:06]  Generator returned sat in 88.484895 secs.
[01/11 00:01:06]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:01:12]  Verifer returned unsat in 6.243041 secs.
[01/11 00:01:12]  sf_get_cex returned in 6.370674 secs.
[01/11 00:01:12]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:01:12]  --------------------------------------------------------------------------------
[01/11 00:01:12]  Iteration: 222 (164 solution, 57 counterexamples)
[01/11 00:02:44]  Generator returned sat in 85.129794 secs.
[01/11 00:02:44]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:03:00]  Verifer returned unsat in 15.504117 secs.
[01/11 00:03:00]  sf_get_cex returned in 15.650036 secs.
[01/11 00:03:00]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:03:00]  --------------------------------------------------------------------------------
[01/11 00:03:00]  Iteration: 223 (165 solution, 57 counterexamples)
[01/11 00:04:35]  Generator returned sat in 88.390071 secs.
[01/11 00:04:35]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:04:41]  Verifer returned unsat in 5.381836 secs.
[01/11 00:04:41]  sf_get_cex returned in 5.509275 secs.
[01/11 00:04:41]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:04:41]  --------------------------------------------------------------------------------
[01/11 00:04:41]  Iteration: 224 (166 solution, 57 counterexamples)
[01/11 00:06:17]  Generator returned sat in 88.953173 secs.
[01/11 00:06:17]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:06:24]  Verifer returned unsat in 7.204235 secs.
[01/11 00:06:24]  sf_get_cex returned in 7.331556 secs.
[01/11 00:06:24]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:06:25]  --------------------------------------------------------------------------------
[01/11 00:06:25]  Iteration: 225 (167 solution, 57 counterexamples)
[01/11 00:08:00]  Generator returned sat in 88.485480 secs.
[01/11 00:08:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:08:07]  Verifer returned unsat in 6.645173 secs.
[01/11 00:08:07]  sf_get_cex returned in 6.770834 secs.
[01/11 00:08:07]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:08:07]  --------------------------------------------------------------------------------
[01/11 00:08:07]  Iteration: 226 (168 solution, 57 counterexamples)
[01/11 00:09:19]  Generator returned sat in 66.027314 secs.
[01/11 00:09:20]  Candidate solution: 
[1m[94mif (+ 1min_qdel > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -3/2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:09:29]  Improved number of small numbers from 106 to 117 out of a max of 164
[01/11 00:09:29]  Verifer returned sat in 9.041962 secs.
[01/11 00:09:29]  sf_get_cex returned in 9.171398 secs.
[01/11 00:09:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       967093.434853       966992.434853     967093.434853       0.104004       0.103027     966992.434853        0.000000                0.000000           100.0      140.051514                1.0                3.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  101.000000          -1.0      101.000000  966992.434853       2.0
1       967192.486489       967092.434853     967192.486489   99152.635742      99.051636     967092.434853        0.000000                0.000000           100.0      140.051514                0.0                2.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  100.051636           0.0      100.051636  967092.434853       1.0
2       967392.486489       967093.434853     967392.486489  200100.051636     200.000000     967093.434853        0.051636                0.000000           100.0      140.051514                1.0                3.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  299.000000           1.0      200.000000  967192.434853       2.0
3       967491.538125       967292.434853     967491.538125   99350.687378      99.051636     967292.434853        0.051636                0.051636           100.0      140.051514                0.0                2.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  199.051636           1.0      199.051636  967292.434853       1.0
4       967691.538125       967292.434853     967691.538125  200199.103271     200.000000     967292.434853       99.103271                0.051636           100.0      140.051514                0.0                2.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  300.000000           0.0      200.000000  967392.434853       1.0
5       967891.538125       967492.434853     967891.538125  200399.103271     200.000000     967492.434853      199.103271               99.103271           100.0      140.051514                0.0                2.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  200.000000           1.0      200.000000  967492.434853       1.0
6       968091.538125       967492.434853     968091.538125  200399.103271     200.000000     967492.434853      299.103271              199.103271           100.0      140.051514                0.0                2.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  300.000000           1.0      200.000000  967592.434853       1.0
7       968291.538125       967632.538125     968291.538125  200599.103271     200.000000     967632.538125      399.103271              299.103271           100.0      140.051514                1.0                3.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  259.896729           1.0      200.000000  967692.434853       2.0
8       968390.589761       967772.641357     968390.589761   99710.635742      99.051636     967772.641357      399.103271              399.103271           100.0      140.051514                1.0                3.0                  1.0                  2.0 -468489.953451                 100.0            280.103027  218.845132           1.0      199.051636  967792.434853       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=1634727/4096, beliefs_improve=False, alpha=7769/8192, buf_size=200.[0m
[01/11 00:09:29]  --------------------------------------------------------------------------------
[01/11 00:09:29]  Iteration: 227 (168 solution, 58 counterexamples)
[01/11 00:16:43]  Generator returned sat in 427.009122 secs.
[01/11 00:16:44]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:16:51]  Verifer returned unsat in 6.901849 secs.
[01/11 00:16:51]  sf_get_cex returned in 7.035330 secs.
[01/11 00:16:51]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:16:51]  --------------------------------------------------------------------------------
[01/11 00:16:51]  Iteration: 228 (169 solution, 58 counterexamples)
[01/11 00:18:32]  Generator returned sat in 95.070346 secs.
[01/11 00:18:33]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:18:40]  Verifer returned unsat in 6.874685 secs.
[01/11 00:18:40]  sf_get_cex returned in 7.007033 secs.
[01/11 00:18:40]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:18:40]  --------------------------------------------------------------------------------
[01/11 00:18:40]  Iteration: 229 (170 solution, 58 counterexamples)
[01/11 00:20:26]  Generator returned sat in 99.275489 secs.
[01/11 00:20:26]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:20:37]  Verifer returned unsat in 10.587317 secs.
[01/11 00:20:37]  sf_get_cex returned in 10.719330 secs.
[01/11 00:20:37]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:20:37]  --------------------------------------------------------------------------------
[01/11 00:20:37]  Iteration: 230 (171 solution, 58 counterexamples)
[01/11 00:22:23]  Generator returned sat in 98.984963 secs.
[01/11 00:22:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:23:25]  Verifer returned unsat in 61.396420 secs.
[01/11 00:23:25]  sf_get_cex returned in 61.528512 secs.
[01/11 00:23:25]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:23:25]  --------------------------------------------------------------------------------
[01/11 00:23:25]  Iteration: 231 (172 solution, 58 counterexamples)
[01/11 00:25:06]  Generator returned sat in 94.421880 secs.
[01/11 00:25:07]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:25:14]  Verifer returned unsat in 7.494298 secs.
[01/11 00:25:14]  sf_get_cex returned in 7.632450 secs.
[01/11 00:25:14]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:25:14]  --------------------------------------------------------------------------------
[01/11 00:25:14]  Iteration: 232 (173 solution, 58 counterexamples)
[01/11 00:26:59]  Generator returned sat in 98.306194 secs.
[01/11 00:27:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:27:10]  Verifer returned unsat in 9.802124 secs.
[01/11 00:27:10]  sf_get_cex returned in 9.928074 secs.
[01/11 00:27:10]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:27:10]  --------------------------------------------------------------------------------
[01/11 00:27:10]  Iteration: 233 (174 solution, 58 counterexamples)
[01/11 00:28:56]  Generator returned sat in 99.003602 secs.
[01/11 00:28:56]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:29:02]  Verifer returned unsat in 5.814619 secs.
[01/11 00:29:02]  sf_get_cex returned in 5.947680 secs.
[01/11 00:29:02]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:29:02]  --------------------------------------------------------------------------------
[01/11 00:29:02]  Iteration: 234 (175 solution, 58 counterexamples)
[01/11 00:30:44]  Generator returned sat in 95.273206 secs.
[01/11 00:30:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:31:09]  Verifer returned unsat in 24.601779 secs.
[01/11 00:31:09]  sf_get_cex returned in 24.733882 secs.
[01/11 00:31:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:31:09]  --------------------------------------------------------------------------------
[01/11 00:31:09]  Iteration: 235 (176 solution, 58 counterexamples)
[01/11 00:32:53]  Generator returned sat in 96.774224 secs.
[01/11 00:32:53]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:33:07]  Verifer returned unsat in 13.675735 secs.
[01/11 00:33:07]  sf_get_cex returned in 13.802384 secs.
[01/11 00:33:07]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:33:07]  --------------------------------------------------------------------------------
[01/11 00:33:07]  Iteration: 236 (177 solution, 58 counterexamples)
[01/11 00:34:51]  Generator returned sat in 97.702109 secs.
[01/11 00:34:52]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:34:56]  Verifer returned unsat in 4.241796 secs.
[01/11 00:34:56]  sf_get_cex returned in 4.363486 secs.
[01/11 00:34:56]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:34:56]  --------------------------------------------------------------------------------
[01/11 00:34:56]  Iteration: 237 (178 solution, 58 counterexamples)
[01/11 00:36:37]  Generator returned sat in 94.167502 secs.
[01/11 00:36:37]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:37:00]  Verifer returned unsat in 22.332580 secs.
[01/11 00:37:00]  sf_get_cex returned in 22.459218 secs.
[01/11 00:37:00]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:37:00]  --------------------------------------------------------------------------------
[01/11 00:37:00]  Iteration: 238 (179 solution, 58 counterexamples)
[01/11 00:38:45]  Generator returned sat in 98.847387 secs.
[01/11 00:38:46]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:38:57]  Verifer returned unsat in 10.798388 secs.
[01/11 00:38:57]  sf_get_cex returned in 10.925387 secs.
[01/11 00:38:57]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:38:57]  --------------------------------------------------------------------------------
[01/11 00:38:57]  Iteration: 239 (180 solution, 58 counterexamples)
[01/11 00:40:42]  Generator returned sat in 98.600725 secs.
[01/11 00:40:43]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:40:54]  Verifer returned unsat in 11.159781 secs.
[01/11 00:40:54]  sf_get_cex returned in 11.299016 secs.
[01/11 00:40:54]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:40:54]  --------------------------------------------------------------------------------
[01/11 00:40:54]  Iteration: 240 (181 solution, 58 counterexamples)
[01/11 00:42:37]  Generator returned sat in 95.899735 secs.
[01/11 00:42:37]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:42:42]  Verifer returned unsat in 4.878587 secs.
[01/11 00:42:42]  sf_get_cex returned in 5.008167 secs.
[01/11 00:42:42]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:42:42]  --------------------------------------------------------------------------------
[01/11 00:42:42]  Iteration: 241 (182 solution, 58 counterexamples)
[01/11 00:44:22]  Generator returned sat in 93.739421 secs.
[01/11 00:44:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:44:34]  Verifer returned unsat in 10.954711 secs.
[01/11 00:44:34]  sf_get_cex returned in 11.102997 secs.
[01/11 00:44:34]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 00:44:34]  --------------------------------------------------------------------------------
[01/11 00:44:34]  Iteration: 242 (183 solution, 58 counterexamples)
[01/11 00:46:20]  Generator returned sat in 98.680794 secs.
[01/11 00:46:20]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:46:28]  Verifer returned unsat in 8.270676 secs.
[01/11 00:46:28]  sf_get_cex returned in 8.405446 secs.
[01/11 00:46:28]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:46:29]  --------------------------------------------------------------------------------
[01/11 00:46:29]  Iteration: 243 (184 solution, 58 counterexamples)
[01/11 00:48:10]  Generator returned sat in 95.094085 secs.
[01/11 00:48:11]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:48:23]  Verifer returned unsat in 12.288860 secs.
[01/11 00:48:23]  sf_get_cex returned in 12.437781 secs.
[01/11 00:48:23]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:48:23]  --------------------------------------------------------------------------------
[01/11 00:48:23]  Iteration: 244 (185 solution, 58 counterexamples)
[01/11 00:50:07]  Generator returned sat in 96.966956 secs.
[01/11 00:50:08]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:50:13]  Verifer returned unsat in 4.837213 secs.
[01/11 00:50:13]  sf_get_cex returned in 4.971931 secs.
[01/11 00:50:13]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:50:13]  --------------------------------------------------------------------------------
[01/11 00:50:13]  Iteration: 245 (186 solution, 58 counterexamples)
[01/11 00:51:54]  Generator returned sat in 94.365006 secs.
[01/11 00:51:54]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:52:00]  Verifer returned unsat in 5.401273 secs.
[01/11 00:52:00]  sf_get_cex returned in 5.531384 secs.
[01/11 00:52:00]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:52:00]  --------------------------------------------------------------------------------
[01/11 00:52:00]  Iteration: 246 (187 solution, 58 counterexamples)
[01/11 00:53:44]  Generator returned sat in 96.823786 secs.
[01/11 00:53:44]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:54:23]  Verifer returned unsat in 39.013735 secs.
[01/11 00:54:23]  sf_get_cex returned in 39.173686 secs.
[01/11 00:54:23]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 00:54:23]  --------------------------------------------------------------------------------
[01/11 00:54:23]  Iteration: 247 (188 solution, 58 counterexamples)
[01/11 00:56:04]  Generator returned sat in 93.873057 secs.
[01/11 00:56:04]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:56:10]  Verifer returned unsat in 5.872170 secs.
[01/11 00:56:10]  sf_get_cex returned in 6.010475 secs.
[01/11 00:56:10]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:56:10]  --------------------------------------------------------------------------------
[01/11 00:56:10]  Iteration: 248 (189 solution, 58 counterexamples)
[01/11 00:57:54]  Generator returned sat in 96.752847 secs.
[01/11 00:57:54]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:58:03]  Verifer returned unsat in 8.056704 secs.
[01/11 00:58:03]  sf_get_cex returned in 8.192528 secs.
[01/11 00:58:03]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 00:58:03]  --------------------------------------------------------------------------------
[01/11 00:58:03]  Iteration: 249 (190 solution, 58 counterexamples)
[01/11 00:59:45]  Generator returned sat in 95.059241 secs.
[01/11 00:59:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 00:59:51]  Verifer returned unsat in 5.746554 secs.
[01/11 00:59:51]  sf_get_cex returned in 5.895856 secs.
[01/11 00:59:51]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 00:59:51]  --------------------------------------------------------------------------------
[01/11 00:59:51]  Iteration: 250 (191 solution, 58 counterexamples)
[01/11 01:01:29]  Generator returned sat in 91.331730 secs.
[01/11 01:01:30]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:01:53]  Verifer returned unsat in 23.492354 secs.
[01/11 01:01:53]  sf_get_cex returned in 23.619477 secs.
[01/11 01:01:53]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:01:53]  --------------------------------------------------------------------------------
[01/11 01:01:53]  Iteration: 251 (192 solution, 58 counterexamples)
[01/11 01:03:28]  Generator returned sat in 88.485243 secs.
[01/11 01:03:29]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:03:34]  Verifer returned unsat in 5.317375 secs.
[01/11 01:03:34]  sf_get_cex returned in 5.449322 secs.
[01/11 01:03:34]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:03:34]  --------------------------------------------------------------------------------
[01/11 01:03:34]  Iteration: 252 (193 solution, 58 counterexamples)
[01/11 01:05:10]  Generator returned sat in 88.817937 secs.
[01/11 01:05:10]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:05:25]  Verifer returned unsat in 14.389275 secs.
[01/11 01:05:25]  sf_get_cex returned in 14.523002 secs.
[01/11 01:05:25]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:05:25]  --------------------------------------------------------------------------------
[01/11 01:05:25]  Iteration: 253 (194 solution, 58 counterexamples)
[01/11 01:07:03]  Generator returned sat in 91.494250 secs.
[01/11 01:07:04]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:07:11]  Verifer returned unsat in 6.877680 secs.
[01/11 01:07:11]  sf_get_cex returned in 7.021309 secs.
[01/11 01:07:11]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:07:11]  --------------------------------------------------------------------------------
[01/11 01:07:11]  Iteration: 254 (195 solution, 58 counterexamples)
[01/11 01:08:49]  Generator returned sat in 91.432887 secs.
[01/11 01:08:49]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:09:21]  Verifer returned unsat in 31.386776 secs.
[01/11 01:09:21]  sf_get_cex returned in 31.520845 secs.
[01/11 01:09:21]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:09:21]  --------------------------------------------------------------------------------
[01/11 01:09:21]  Iteration: 255 (196 solution, 58 counterexamples)
[01/11 01:10:56]  Generator returned sat in 88.685759 secs.
[01/11 01:10:57]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:11:55]  Verifer returned unsat in 57.957672 secs.
[01/11 01:11:55]  sf_get_cex returned in 58.094364 secs.
[01/11 01:11:55]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:11:55]  --------------------------------------------------------------------------------
[01/11 01:11:55]  Iteration: 256 (197 solution, 58 counterexamples)
[01/11 01:13:33]  Generator returned sat in 91.254703 secs.
[01/11 01:13:34]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:13:43]  Verifer returned unsat in 8.922752 secs.
[01/11 01:13:43]  sf_get_cex returned in 9.052393 secs.
[01/11 01:13:43]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:13:43]  --------------------------------------------------------------------------------
[01/11 01:13:43]  Iteration: 257 (198 solution, 58 counterexamples)
[01/11 01:15:21]  Generator returned sat in 91.280770 secs.
[01/11 01:15:21]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:15:54]  Verifer returned unsat in 32.592362 secs.
[01/11 01:15:54]  sf_get_cex returned in 32.726846 secs.
[01/11 01:15:54]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:15:54]  --------------------------------------------------------------------------------
[01/11 01:15:54]  Iteration: 258 (199 solution, 58 counterexamples)
[01/11 01:17:32]  Generator returned sat in 91.029579 secs.
[01/11 01:17:33]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:17:44]  Verifer returned unsat in 11.080800 secs.
[01/11 01:17:44]  sf_get_cex returned in 11.216837 secs.
[01/11 01:17:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:17:44]  --------------------------------------------------------------------------------
[01/11 01:17:44]  Iteration: 259 (200 solution, 58 counterexamples)
[01/11 01:19:16]  Generator returned sat in 85.970526 secs.
[01/11 01:19:17]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:20:03]  Verifer returned unsat in 45.542074 secs.
[01/11 01:20:03]  sf_get_cex returned in 45.681277 secs.
[01/11 01:20:03]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:20:03]  --------------------------------------------------------------------------------
[01/11 01:20:03]  Iteration: 260 (201 solution, 58 counterexamples)
[01/11 01:21:35]  Generator returned sat in 86.178159 secs.
[01/11 01:21:36]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:21:40]  Verifer returned unsat in 3.955034 secs.
[01/11 01:21:40]  sf_get_cex returned in 4.090743 secs.
[01/11 01:21:40]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:21:40]  --------------------------------------------------------------------------------
[01/11 01:21:40]  Iteration: 261 (202 solution, 58 counterexamples)
[01/11 01:23:13]  Generator returned sat in 86.454087 secs.
[01/11 01:23:14]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:23:20]  Verifer returned unsat in 6.022143 secs.
[01/11 01:23:20]  sf_get_cex returned in 6.155198 secs.
[01/11 01:23:20]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:23:20]  --------------------------------------------------------------------------------
[01/11 01:23:20]  Iteration: 262 (203 solution, 58 counterexamples)
[01/11 01:24:53]  Generator returned sat in 86.201619 secs.
[01/11 01:24:53]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:25:00]  Verifer returned unsat in 7.289323 secs.
[01/11 01:25:01]  sf_get_cex returned in 7.417094 secs.
[01/11 01:25:01]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 01:25:01]  --------------------------------------------------------------------------------
[01/11 01:25:01]  Iteration: 263 (204 solution, 58 counterexamples)
[01/11 01:26:40]  Generator returned sat in 92.512110 secs.
[01/11 01:26:40]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:26:49]  Verifer returned unsat in 8.701805 secs.
[01/11 01:26:49]  sf_get_cex returned in 8.828852 secs.
[01/11 01:26:49]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:26:49]  --------------------------------------------------------------------------------
[01/11 01:26:49]  Iteration: 264 (205 solution, 58 counterexamples)
[01/11 01:29:42]  Generator returned sat in 165.770534 secs.
[01/11 01:29:42]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 3/2min_c + -3/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:30:26]  Improved gap from 6.360595703125 to 100
[01/11 01:30:26]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/11 01:30:26]  Verifer returned sat in 43.869030 secs.
[01/11 01:30:26]  sf_get_cex returned in 44.015753 secs.
[01/11 01:30:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       279186.282471       278988.282471     279186.282471       0.103760       0.103027     278988.282471        0.000000                0.000000            98.0           100.0                2.0                4.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  198.000000          -1.0      198.000000  278988.282471       3.0
1       279284.282471       279088.282471     279284.282471   98198.000000      98.000000     279088.282471        0.000000                0.000000            98.0           100.0                0.0                2.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  196.000000           0.0      196.000000  279088.282471       1.0
2       279388.230957       279188.282471     279388.230957  104144.486328     103.948486     279188.282471        0.000000                0.000000            98.0           100.0                0.0                2.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  199.948486           0.0      199.948486  279188.282471       1.0
3       279492.179443       279288.282471     279492.179443  104148.434814     103.948486     279288.282471        3.896973                0.000000            98.0           100.0                0.0                2.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  200.000000           0.0      200.000000  279288.282471       1.0
4       279596.127930       279388.282471     279596.127930  104152.383301     103.948486     279388.282471        7.845459                3.896973            98.0           100.0                0.0                2.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  200.000000           1.0      200.000000  279388.282471       1.0
5       279700.076416       279388.282471     279700.076416  104156.331787     103.948486     279388.282471       11.793945                7.845459            98.0           100.0                0.0                2.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  300.000000           1.0      200.000000  279488.282471       1.0
6       279804.024902       279584.179443     279804.024902  104260.280273     103.948486     279584.179443       15.742432               11.793945            98.0           100.0                1.0                3.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  204.103027           1.0      200.000000  279588.282471       2.0
7       279902.024902       279588.282471     279902.024902   98219.845459      98.000000     279588.282471       15.742432               15.742432            98.0           100.0                2.0                4.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  298.000000           1.0      198.000000  279688.282471       3.0
8       280000.024902       279688.488281     280000.024902   98313.742432      98.000000     279688.488281       15.742432               15.742432            98.0           100.0                1.0                3.0                  2.0                  2.0 -468489.953369                 196.0                 200.0  295.794189           1.0      196.000000  279788.282471       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=0, loss_amount=64481/4096, beliefs_improve=False, alpha=24365/4096, buf_size=200.[0m
[01/11 01:30:26]  --------------------------------------------------------------------------------
[01/11 01:30:26]  Iteration: 265 (205 solution, 59 counterexamples)
[01/11 01:35:30]  Generator returned sat in 297.223745 secs.
[01/11 01:35:31]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:35:45]  Improved number of small numbers from 164 to 164 out of a max of 164
[01/11 01:35:45]  Verifer returned sat in 13.908912 secs.
[01/11 01:35:45]  sf_get_cex returned in 14.049687 secs.
[01/11 01:35:45]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       280491.373291       280221.012695     280491.373291       0.103760       0.103027     280221.012695             0.0                     0.0           100.0           110.0                2.0                4.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  270.360596          -1.0           200.0  280291.373291       3.0
1       280591.373291       280331.064209     280591.373291  100270.360596     100.000000     280331.064209             0.0                     0.0           100.0           110.0                2.0                4.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  260.309082           1.0           200.0  280391.373291       3.0
2       280691.373291       280441.115723     280691.373291  100260.309082     100.000000     280441.115723             0.0                     0.0           100.0           110.0                1.0                3.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  250.257568           1.0           200.0  280491.373291       2.0
3       280891.373291       280491.424805     280891.373291  200250.257568     200.000000     280491.424805           100.0                     0.0           100.0           110.0                1.0                3.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  299.948486           1.0           200.0  280591.373291       2.0
4       281091.373291       280591.373291     281091.373291  200399.948486     200.000000     280591.373291           200.0                   100.0           100.0           110.0                2.0                4.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  300.000000           1.0           200.0  280691.373291       3.0
5       281191.373291       280691.373291     281191.373291  100500.000000     100.000000     280691.373291           200.0                   200.0           100.0           110.0                2.0                4.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  300.000000           1.0           200.0  280791.373291       3.0
6       281291.373291       280791.424805     281291.373291  100500.000000     100.000000     280791.424805           200.0                   200.0           100.0           110.0                1.0                3.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  299.948486           1.0           200.0  280891.373291       2.0
7       281491.373291       280891.424805     281491.373291  200499.948486     200.000000     280891.424805           300.0                   200.0           100.0           110.0                1.0                3.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  299.948486           1.0           200.0  280991.373291       2.0
8       281691.373291       280991.373291     281691.373291  200599.948486     200.000000     280991.373291           400.0                   300.0           100.0           110.0                2.0                4.0                  2.0             3.051514 -469793.044189                 200.0            335.666504  300.000000           1.0           200.0  281091.373291       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=400, beliefs_improve=False, alpha=211/4096, buf_size=200.[0m
[01/11 01:35:45]  --------------------------------------------------------------------------------
[01/11 01:35:45]  Iteration: 266 (205 solution, 60 counterexamples)
[01/11 01:37:45]  Generator returned sat in 113.972905 secs.
[01/11 01:37:46]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 01:38:05]  Improved gap from 0.0 to 48.4375
[01/11 01:38:05]  Improved number of small numbers from 155 to 165 out of a max of 165
[01/11 01:38:05]  Verifer returned sat in 19.293748 secs.
[01/11 01:38:05]  sf_get_cex returned in 19.436560 secs.
[01/11 01:38:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       331258.025635       331257.974121     331258.025635       0.103271       0.102783     331257.974121             0.0                     0.0       43.354248           100.0                0.0                1.0                  0.0             2.051514 -470096.058594                   0.0            205.151367   0.051514          -1.0        0.000244  331258.025391       0.0
1       331307.514648       331258.025635     331307.514648   49489.065186      49.489014     331258.025635             0.0                     0.0       43.354248           100.0                0.0                2.0                  0.0             2.051514 -470045.547852                   0.0            205.151367  49.489014           0.0        0.000000  331307.514648       1.0
2       331357.003662       331307.617676     331357.003662   49538.502686      49.489014     331307.617676             0.0                     0.0       43.354248           100.0                0.0                1.0                  0.0             2.051514 -469995.088135                   0.0            205.151367  49.385986           0.0       -0.051270  331357.054932       0.0
3       331406.492676       331357.055176     331406.492676   49538.399658      49.489014     331357.055176             0.0                     0.0       43.354248           100.0                0.0                1.0                  0.0             2.051514 -469944.525879                   0.0            205.151367  49.437500           0.0        0.000000  331406.492676       0.0
4       331455.981689       331406.492676     331455.981689   49538.451172      49.489014     331406.492676             0.0                     0.0       43.354248           100.0                0.0                2.0                  0.0             2.051514 -469894.014893                   0.0            205.151367  49.489014           0.0        0.000000  331455.981689       1.0
5       331505.470703       331455.981689     331505.470703   49538.502686      49.489014     331455.981689             0.0                     0.0       43.354248           100.0                0.0                2.0                  0.0             2.051514 -469843.503906                   0.0            205.151367  49.489014           0.0        0.000000  331505.470703       1.0
6       331554.959717       331505.470703     331554.959717   49538.502686      49.489014     331505.470703             0.0                     0.0       43.354248           100.0                0.0                2.0                  0.0             2.051514 -469793.044434                   0.0            205.151367  49.489014           0.0       -0.051514  331555.011230       1.0
7       331604.448730       331555.011230     331604.448730   49538.502686      49.489014     331555.011230             0.0                     0.0       43.354248           100.0                0.0                1.0                  0.0             2.051514 -469742.481934                   0.0            205.151367  49.437500           0.0        0.000000  331604.448730       0.0
8       331653.937744       331604.448730     331653.937744   49538.451172      49.489014     331604.448730             0.0                     0.0       43.354248           100.0                0.0                2.0                  0.0             2.051514 -469691.970947                   0.0            205.151367  49.489014           0.0        0.000000  331653.937744       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=3141/512, buf_size=200.[0m
[01/11 01:38:05]  --------------------------------------------------------------------------------
[01/11 01:38:05]  Iteration: 267 (205 solution, 61 counterexamples)
[01/11 01:40:54]  Generator returned sat in 161.668352 secs.
[01/11 01:40:55]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -3/2min_c + 1max_c + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:41:20]  Improved number of small numbers from 89 to 101 out of a max of 164
[01/11 01:41:20]  Verifer returned sat in 24.808952 secs.
[01/11 01:41:20]  sf_get_cex returned in 24.930593 secs.
[01/11 01:41:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       237890.199504       237626.816203     237890.199504       0.103271       0.102539     237626.816203        0.000000                0.000000       93.948608      156.444092                2.0                4.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  263.383301          -1.0      200.000000  237690.199504       3.0
1       237984.148112       237720.713420     237984.148112   94211.991699      93.948608     237720.713420        0.000000                0.000000       93.948608      156.444092                0.0                2.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  263.434692           0.0      193.948608  237790.199504       1.0
2       238172.045329       237814.610636     238172.045329  188160.651489     187.897217     237814.610636       81.845825                0.000000       93.948608      156.444092                1.0                3.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  275.588867           1.0      200.000000  237890.199504       2.0
3       238265.993937       237990.199504     238265.993937   94306.043091      93.948608     237990.199504       81.845825               81.845825       93.948608      156.444092                0.0                2.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  193.948608           1.0      193.948608  237990.199504       1.0
4       238453.891154       238090.199504     238453.891154  188173.011230     187.897217     238090.199504      163.691650               81.845825       93.948608      156.444092                1.0                3.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  200.000000           1.0      200.000000  238090.199504       2.0
5       238547.839762       238190.199504     238547.839762   94312.300049      93.948608     238190.199504      163.691650              163.691650       93.948608      156.444092                0.0                2.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  193.948608           1.0      193.948608  238190.199504       1.0
6       238735.736979       238190.199504     238735.736979  188254.857056     187.897217     238190.199504      245.537476              163.691650       93.948608      156.444092                0.0                2.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  300.000000           0.0      200.000000  238290.199504       1.0
7       238923.634196       238377.993937     238923.634196  188442.754272     187.897217     238377.993937      333.434692              245.537476       93.948608      156.444092                1.0                3.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  212.205566           1.0      200.000000  238390.199504       2.0
8       239017.582804       238390.199707     239017.582804   94494.248657      93.948608     238390.199707      333.434692              333.434692       93.948608      156.444092                1.0                3.0                  2.0                  2.0 -470096.058594            187.897217            312.888184  293.948405           1.0      193.948608  238490.199504       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=2731497/8192, beliefs_improve=False, alpha=40855/2048, buf_size=200.[0m
[01/11 01:41:20]  --------------------------------------------------------------------------------
[01/11 01:41:20]  Iteration: 268 (205 solution, 62 counterexamples)
[01/11 01:46:37]  Generator returned sat in 310.561909 secs.
[01/11 01:46:38]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:46:59]  Improved number of small numbers from 127 to 164 out of a max of 164
[01/11 01:46:59]  Verifer returned sat in 21.584851 secs.
[01/11 01:47:00]  sf_get_cex returned in 21.716805 secs.
[01/11 01:47:00]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       237953.250244       237653.558105     237953.250244       0.103027       0.102539     237653.558105             0.0                     0.0           100.0           100.0                2.0                4.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  299.692139          -1.0           200.0  237753.250244       3.0
1       238053.250244       237753.506836     238053.250244  100299.692139     100.000000     237753.506836             0.0                     0.0           100.0           100.0                1.0                3.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  299.743408           1.0           200.0  237853.250244       2.0
2       238253.250244       237853.455566     238253.250244  200299.743408     200.000000     237853.455566           100.0                     0.0           100.0           100.0                1.0                3.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  299.794678           1.0           200.0  237953.250244       2.0
3       238453.250244       237953.250244     238453.250244  200399.794678     200.000000     237953.250244           200.0                   100.0           100.0           100.0                2.0                4.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  300.000000           1.0           200.0  238053.250244       3.0
4       238553.250244       238053.250244     238553.250244  100500.000000     100.000000     238053.250244           200.0                   200.0           100.0           100.0                2.0                4.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  300.000000           1.0           200.0  238153.250244       3.0
5       238653.250244       238253.250244     238653.250244  100500.000000     100.000000     238253.250244           200.0                   200.0           100.0           100.0                1.0                3.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  200.000000           1.0           200.0  238253.250244       2.0
6       238853.250244       238253.250244     238853.250244  200400.000000     200.000000     238253.250244           300.0                   200.0           100.0           100.0                1.0                3.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  300.000000           1.0           200.0  238353.250244       2.0
7       239053.250244       238353.250244     239053.250244  200600.000000     200.000000     238353.250244           400.0                   300.0           100.0           100.0                2.0                4.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  300.000000           1.0           200.0  238453.250244       3.0
8       239153.250244       238453.250244     239153.250244  100700.000000     100.000000     238453.250244           400.0                   400.0           100.0           100.0                2.0                4.0                  2.0                  4.0 -470096.058594                 200.0                 400.0  300.000000           1.0           200.0  238553.250244       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=400, beliefs_improve=False, alpha=105/2048, buf_size=200.[0m
[01/11 01:47:00]  --------------------------------------------------------------------------------
[01/11 01:47:00]  Iteration: 269 (205 solution, 63 counterexamples)
[01/11 01:50:55]  Generator returned sat in 227.987513 secs.
[01/11 01:50:56]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (0 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:51:00]  Verifer returned unsat in 3.954409 secs.
[01/11 01:51:00]  sf_get_cex returned in 4.085954 secs.
[01/11 01:51:00]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (0 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:51:00]  --------------------------------------------------------------------------------
[01/11 01:51:00]  Iteration: 270 (206 solution, 63 counterexamples)
[01/11 01:53:10]  Generator returned sat in 122.618425 secs.
[01/11 01:53:10]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (0 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:53:17]  Verifer returned unsat in 6.809119 secs.
[01/11 01:53:17]  sf_get_cex returned in 6.953506 secs.
[01/11 01:53:17]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (0 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:53:17]  --------------------------------------------------------------------------------
[01/11 01:53:17]  Iteration: 271 (207 solution, 63 counterexamples)
[01/11 01:55:27]  Generator returned sat in 121.597918 secs.
[01/11 01:55:27]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (0 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:55:33]  Verifer returned unsat in 5.691731 secs.
[01/11 01:55:33]  sf_get_cex returned in 5.817497 secs.
[01/11 01:55:33]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (0 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:55:33]  --------------------------------------------------------------------------------
[01/11 01:55:33]  Iteration: 272 (208 solution, 63 counterexamples)
[01/11 01:57:37]  Generator returned sat in 116.813791 secs.
[01/11 01:57:38]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:58:09]  Verifer returned unsat in 31.188007 secs.
[01/11 01:58:09]  sf_get_cex returned in 31.328244 secs.
[01/11 01:58:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 01:58:09]  --------------------------------------------------------------------------------
[01/11 01:58:09]  Iteration: 273 (209 solution, 63 counterexamples)
[01/11 02:00:13]  Generator returned sat in 116.807920 secs.
[01/11 02:00:14]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:00:18]  Verifer returned unsat in 4.517029 secs.
[01/11 02:00:18]  sf_get_cex returned in 4.648452 secs.
[01/11 02:00:18]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:00:18]  --------------------------------------------------------------------------------
[01/11 02:00:18]  Iteration: 274 (210 solution, 63 counterexamples)
[01/11 02:02:29]  Generator returned sat in 123.138602 secs.
[01/11 02:02:29]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:02:57]  Verifer returned unsat in 26.931420 secs.
[01/11 02:02:57]  sf_get_cex returned in 27.061410 secs.
[01/11 02:02:57]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:02:57]  --------------------------------------------------------------------------------
[01/11 02:02:57]  Iteration: 275 (211 solution, 63 counterexamples)
[01/11 02:05:07]  Generator returned sat in 122.745350 secs.
[01/11 02:05:07]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:05:13]  Verifer returned unsat in 4.992473 secs.
[01/11 02:05:13]  sf_get_cex returned in 5.133112 secs.
[01/11 02:05:13]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:05:13]  --------------------------------------------------------------------------------
[01/11 02:05:13]  Iteration: 276 (212 solution, 63 counterexamples)
[01/11 02:07:11]  Generator returned sat in 111.243469 secs.
[01/11 02:07:12]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:07:29]  Verifer returned unsat in 17.445067 secs.
[01/11 02:07:29]  sf_get_cex returned in 17.575655 secs.
[01/11 02:07:29]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer + 1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:07:30]  --------------------------------------------------------------------------------
[01/11 02:07:30]  Iteration: 277 (213 solution, 63 counterexamples)
[01/11 02:09:32]  Generator returned sat in 115.011129 secs.
[01/11 02:09:33]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:09:42]  Verifer returned unsat in 9.015338 secs.
[01/11 02:09:42]  sf_get_cex returned in 9.146707 secs.
[01/11 02:09:42]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:09:42]  --------------------------------------------------------------------------------
[01/11 02:09:42]  Iteration: 278 (214 solution, 63 counterexamples)
[01/11 02:11:44]  Generator returned sat in 114.723958 secs.
[01/11 02:11:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:12:02]  Verifer returned unsat in 17.223481 secs.
[01/11 02:12:02]  sf_get_cex returned in 17.354460 secs.
[01/11 02:12:02]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:12:02]  --------------------------------------------------------------------------------
[01/11 02:12:02]  Iteration: 279 (215 solution, 63 counterexamples)
[01/11 02:14:04]  Generator returned sat in 114.515296 secs.
[01/11 02:14:05]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:14:12]  Verifer returned unsat in 7.417031 secs.
[01/11 02:14:12]  sf_get_cex returned in 7.567501 secs.
[01/11 02:14:12]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:14:12]  --------------------------------------------------------------------------------
[01/11 02:14:12]  Iteration: 280 (216 solution, 63 counterexamples)
[01/11 02:16:11]  Generator returned sat in 112.047181 secs.
[01/11 02:16:12]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:16:20]  Verifer returned unsat in 8.182769 secs.
[01/11 02:16:20]  sf_get_cex returned in 8.317303 secs.
[01/11 02:16:20]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:16:20]  --------------------------------------------------------------------------------
[01/11 02:16:20]  Iteration: 281 (217 solution, 63 counterexamples)
[01/11 02:18:19]  Generator returned sat in 111.718780 secs.
[01/11 02:18:20]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:18:26]  Verifer returned unsat in 5.940525 secs.
[01/11 02:18:26]  sf_get_cex returned in 6.064752 secs.
[01/11 02:18:26]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1max_buffer + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:18:26]  --------------------------------------------------------------------------------
[01/11 02:18:26]  Iteration: 282 (218 solution, 63 counterexamples)
[01/11 02:20:24]  Generator returned sat in 111.367012 secs.
[01/11 02:20:25]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:21:11]  Verifer returned unsat in 46.254944 secs.
[01/11 02:21:11]  sf_get_cex returned in 46.388952 secs.
[01/11 02:21:11]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:21:11]  --------------------------------------------------------------------------------
[01/11 02:21:11]  Iteration: 283 (219 solution, 63 counterexamples)
[01/11 02:23:16]  Generator returned sat in 117.481051 secs.
[01/11 02:23:17]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:23:26]  Verifer returned unsat in 8.959950 secs.
[01/11 02:23:26]  sf_get_cex returned in 9.101287 secs.
[01/11 02:23:26]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:23:26]  --------------------------------------------------------------------------------
[01/11 02:23:26]  Iteration: 284 (220 solution, 63 counterexamples)
[01/11 02:25:25]  Generator returned sat in 111.435014 secs.
[01/11 02:25:25]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:25:36]  Verifer returned unsat in 10.896191 secs.
[01/11 02:25:36]  sf_get_cex returned in 11.022166 secs.
[01/11 02:25:36]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:25:36]  --------------------------------------------------------------------------------
[01/11 02:25:36]  Iteration: 285 (221 solution, 63 counterexamples)
[01/11 02:27:38]  Generator returned sat in 114.428675 secs.
[01/11 02:27:38]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:27:45]  Verifer returned unsat in 6.817754 secs.
[01/11 02:27:45]  sf_get_cex returned in 6.944616 secs.
[01/11 02:27:45]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:27:46]  --------------------------------------------------------------------------------
[01/11 02:27:46]  Iteration: 286 (222 solution, 63 counterexamples)
[01/11 02:29:44]  Generator returned sat in 111.139941 secs.
[01/11 02:29:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:30:01]  Verifer returned unsat in 16.169256 secs.
[01/11 02:30:01]  sf_get_cex returned in 16.301130 secs.
[01/11 02:30:01]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:30:01]  --------------------------------------------------------------------------------
[01/11 02:30:01]  Iteration: 287 (223 solution, 63 counterexamples)
[01/11 02:32:02]  Generator returned sat in 113.181974 secs.
[01/11 02:32:02]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:32:08]  Verifer returned unsat in 5.560178 secs.
[01/11 02:32:08]  sf_get_cex returned in 5.691617 secs.
[01/11 02:32:08]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:32:08]  --------------------------------------------------------------------------------
[01/11 02:32:08]  Iteration: 288 (224 solution, 63 counterexamples)
[01/11 02:34:08]  Generator returned sat in 112.928749 secs.
[01/11 02:34:09]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:34:14]  Verifer returned unsat in 4.627033 secs.
[01/11 02:34:14]  sf_get_cex returned in 4.788831 secs.
[01/11 02:34:14]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:34:14]  --------------------------------------------------------------------------------
[01/11 02:34:14]  Iteration: 289 (225 solution, 63 counterexamples)
[01/11 02:36:12]  Generator returned sat in 111.204596 secs.
[01/11 02:36:13]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:36:20]  Verifer returned unsat in 6.849565 secs.
[01/11 02:36:20]  sf_get_cex returned in 6.977979 secs.
[01/11 02:36:20]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:36:20]  --------------------------------------------------------------------------------
[01/11 02:36:20]  Iteration: 290 (226 solution, 63 counterexamples)
[01/11 02:38:20]  Generator returned sat in 112.955067 secs.
[01/11 02:38:21]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:38:33]  Verifer returned unsat in 11.788956 secs.
[01/11 02:38:33]  sf_get_cex returned in 11.919054 secs.
[01/11 02:38:33]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:38:33]  --------------------------------------------------------------------------------
[01/11 02:38:33]  Iteration: 291 (227 solution, 63 counterexamples)
[01/11 02:40:30]  Generator returned sat in 109.448452 secs.
[01/11 02:40:30]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:40:39]  Verifer returned unsat in 8.492421 secs.
[01/11 02:40:39]  sf_get_cex returned in 8.620217 secs.
[01/11 02:40:39]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:40:39]  --------------------------------------------------------------------------------
[01/11 02:40:39]  Iteration: 292 (228 solution, 63 counterexamples)
[01/11 02:42:38]  Generator returned sat in 111.437865 secs.
[01/11 02:42:38]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:42:46]  Verifer returned unsat in 7.357505 secs.
[01/11 02:42:46]  sf_get_cex returned in 7.482031 secs.
[01/11 02:42:46]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:42:46]  --------------------------------------------------------------------------------
[01/11 02:42:46]  Iteration: 293 (229 solution, 63 counterexamples)
[01/11 02:44:40]  Generator returned sat in 106.145464 secs.
[01/11 02:44:40]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:45:06]  Verifer returned unsat in 25.965225 secs.
[01/11 02:45:06]  sf_get_cex returned in 26.124054 secs.
[01/11 02:45:06]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:45:06]  --------------------------------------------------------------------------------
[01/11 02:45:06]  Iteration: 294 (230 solution, 63 counterexamples)
[01/11 02:47:05]  Generator returned sat in 110.643190 secs.
[01/11 02:47:05]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:47:12]  Verifer returned unsat in 6.684088 secs.
[01/11 02:47:12]  sf_get_cex returned in 6.817003 secs.
[01/11 02:47:12]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:47:12]  --------------------------------------------------------------------------------
[01/11 02:47:12]  Iteration: 295 (231 solution, 63 counterexamples)
[01/11 02:49:10]  Generator returned sat in 110.484618 secs.
[01/11 02:49:10]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:49:25]  Verifer returned unsat in 14.451857 secs.
[01/11 02:49:25]  sf_get_cex returned in 14.585154 secs.
[01/11 02:49:25]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:49:25]  --------------------------------------------------------------------------------
[01/11 02:49:25]  Iteration: 296 (232 solution, 63 counterexamples)
[01/11 02:51:23]  Generator returned sat in 110.069998 secs.
[01/11 02:51:23]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:51:31]  Verifer returned unsat in 7.784117 secs.
[01/11 02:51:31]  sf_get_cex returned in 7.912352 secs.
[01/11 02:51:31]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:51:31]  --------------------------------------------------------------------------------
[01/11 02:51:31]  Iteration: 297 (233 solution, 63 counterexamples)
[01/11 02:53:28]  Generator returned sat in 110.117351 secs.
[01/11 02:53:29]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:53:38]  Verifer returned unsat in 9.379162 secs.
[01/11 02:53:38]  sf_get_cex returned in 9.511608 secs.
[01/11 02:53:38]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:53:38]  --------------------------------------------------------------------------------
[01/11 02:53:38]  Iteration: 298 (234 solution, 63 counterexamples)
[01/11 02:55:39]  Generator returned sat in 112.739942 secs.
[01/11 02:55:39]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:55:46]  Verifer returned unsat in 6.555165 secs.
[01/11 02:55:46]  sf_get_cex returned in 6.676482 secs.
[01/11 02:55:46]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:55:46]  --------------------------------------------------------------------------------
[01/11 02:55:46]  Iteration: 299 (235 solution, 63 counterexamples)
[01/11 02:57:38]  Generator returned sat in 104.966585 secs.
[01/11 02:57:38]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:57:46]  Verifer returned unsat in 7.429168 secs.
[01/11 02:57:46]  sf_get_cex returned in 7.553220 secs.
[01/11 02:57:46]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -3/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 02:57:46]  --------------------------------------------------------------------------------
[01/11 02:57:46]  Iteration: 300 (236 solution, 63 counterexamples)
[01/11 02:59:08]  Generator returned sat in 75.388256 secs.
[01/11 02:59:09]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 02:59:22]  Verifer returned unsat in 12.757765 secs.
[01/11 02:59:22]  sf_get_cex returned in 12.897525 secs.
[01/11 02:59:22]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 02:59:22]  --------------------------------------------------------------------------------
[01/11 02:59:22]  Iteration: 301 (237 solution, 63 counterexamples)
[01/11 03:00:22]  Generator returned sat in 53.606611 secs.
[01/11 03:00:23]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 03:00:32]  Verifer returned unsat in 9.245370 secs.
[01/11 03:00:32]  sf_get_cex returned in 9.373732 secs.
[01/11 03:00:32]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 03:00:32]  --------------------------------------------------------------------------------
[01/11 03:00:32]  Iteration: 302 (238 solution, 63 counterexamples)
[01/11 03:01:33]  Generator returned sat in 54.386251 secs.
[01/11 03:01:34]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 03:01:46]  Verifer returned unsat in 11.788568 secs.
[01/11 03:01:46]  sf_get_cex returned in 11.915095 secs.
[01/11 03:01:46]  Proved solution: 
[1m[92mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 03:01:46]  --------------------------------------------------------------------------------
[01/11 03:01:46]  Iteration: 303 (239 solution, 63 counterexamples)
[01/11 03:02:56]  Generator returned sat in 63.230137 secs.
[01/11 03:02:57]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 03:03:23]  Improved gap from 0.0 to 100
[01/11 03:03:26]  Improved number of small numbers from 90 to 92 out of a max of 165
[01/11 03:03:26]  Verifer returned sat in 29.092897 secs.
[01/11 03:03:26]  sf_get_cex returned in 29.222598 secs.
[01/11 03:03:26]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       206515.342402       206345.991979     206515.342402       0.103027       0.102295     206345.991979        0.000000                0.000000       84.726481      138.700684                2.0                4.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  169.350423          -1.0      169.350423  206345.991979       3.0
1       206600.017613       206445.991979     206600.017613   84844.562012      84.675212     206445.991979        0.000000                0.000000       84.726481      138.700684                0.0                2.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  154.025635           0.0      154.025635  206445.991979       1.0
2       206769.470576       206545.991979     206769.470576  169606.987874     169.452962     206545.991979       23.478597                0.000000       84.726481      138.700684                0.0                2.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  200.000000           0.0      200.000000  206545.991979       1.0
3       206938.923538       206600.017613     206938.923538  169676.440837     169.452962     206600.017613       92.931559               23.478597       84.726481      138.700684                1.0                3.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  245.974365           1.0      200.000000  206645.991979       2.0
4       207023.598749       206684.692825     207023.598749   85014.117513      84.675212     206684.692825       92.931559               92.931559       84.726481      138.700684                1.0                3.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  245.974365           1.0      184.675212  206745.991979       2.0
5       207108.273961       206823.393671     207108.273961   85014.117513      84.675212     206823.393671       92.931559               92.931559       84.726481      138.700684                1.0                3.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  191.948730           1.0      169.350423  206845.991979       2.0
6       207192.949173       206938.718460     207192.949173   84960.091878      84.675212     206938.718460       92.931559               92.931559       84.726481      138.700684                0.0                2.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  161.299154           0.0      154.025635  206945.991979       1.0
7       207362.402135       207015.393671     207362.402135  169707.192952     169.452962     207015.393671      116.410156               92.931559       84.726481      138.700684                0.0                2.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  230.598307           0.0      200.000000  207045.991979       1.0
8       207531.855097       207100.017578     207531.855097  169799.970703     169.452962     207100.017578      185.863118              116.410156       84.726481      138.700684                1.0                3.0                  2.0             2.948486 -470036.109863            169.452962            408.957069  245.974401           1.0      200.000000  207145.991979       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=1141943/6144, beliefs_improve=False, alpha=105/2048, buf_size=200.[0m
[01/11 03:03:26]  --------------------------------------------------------------------------------
[01/11 03:03:26]  Iteration: 304 (239 solution, 64 counterexamples)
[01/11 03:05:34]  Generator returned sat in 121.292565 secs.
[01/11 03:05:35]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 03:05:50]  Improved gap from 0.0511474609375 to 48.4375
[01/11 03:05:53]  Improved number of small numbers from 113 to 116 out of a max of 165
[01/11 03:05:53]  Verifer returned sat in 18.166883 secs.
[01/11 03:05:53]  sf_get_cex returned in 18.286183 secs.
[01/11 03:05:53]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       206672.493281       206661.964960     206672.493281       0.103027       0.102295     206661.964960             0.0                     0.0       96.977295           100.0                1.0                3.0                  1.0                  2.0 -470036.110107             96.977295                 200.0  10.528320          -1.0       10.528320  206661.964960       2.0
1       206720.981928       206662.016108     206720.981928   48499.175781      48.488647     206662.016108             0.0                     0.0       96.977295           100.0                1.0                3.0                  1.0                  2.0 -469995.127197             96.977295                 200.0  58.965820           1.0       -0.000122  206720.982050       2.0
2       206769.470576       206721.033076     206769.470576   48547.613281      48.488647     206721.033076             0.0                     0.0       96.977295           100.0                0.0                1.0                  1.0                  2.0 -469943.615723             96.977295                 200.0  48.437500           0.0        0.000000  206769.470576       0.0
3       206817.959223       206769.470576     206817.959223   48537.084961      48.488647     206769.470576             0.0                     0.0       96.977295           100.0                0.0                2.0                  1.0                  2.0 -469892.104370             96.977295                 200.0  48.488647           0.0        0.000000  206817.959223       1.0
4       206866.447871       206817.959223     206866.447871   48537.136108      48.488647     206817.959223             0.0                     0.0       96.977295           100.0                0.0                2.0                  1.0                  2.0 -469840.593018             96.977295                 200.0  48.488647           0.0        0.000000  206866.447871       1.0
5       206914.936518       206866.499018     206914.936518   48537.136108      48.488647     206866.499018             0.0                     0.0       96.977295           100.0                0.0                1.0                  1.0                  2.0 -469789.081787             96.977295                 200.0  48.437500           0.0       -0.000122  206914.936640       0.0
6       206963.425166       206914.987666     206963.425166   48537.084961      48.488647     206914.987666             0.0                     0.0       96.977295           100.0                0.0                1.0                  1.0                  2.0 -469737.570557             96.977295                 200.0  48.437500           0.0       -0.000244  206963.425410       0.0
7       207011.913813       206963.476313     207011.913813   48537.084961      48.488647     206963.476313             0.0                     0.0       96.977295           100.0                0.0                1.0                  1.0                  2.0 -469686.058960             96.977295                 200.0  48.437500           0.0        0.000000  207011.913813       0.0
8       207060.402460       207011.913813     207060.402460   48537.084961      48.488647     207011.913813             0.0                     0.0       96.977295           100.0                0.0                2.0                  1.0                  2.0 -469634.547852             96.977295                 200.0  48.488647           0.0       -0.000244  207060.402705       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=105/2048, buf_size=200.[0m
[01/11 03:05:53]  --------------------------------------------------------------------------------
[01/11 03:05:53]  Iteration: 305 (239 solution, 65 counterexamples)
[01/11 03:09:11]  Generator returned sat in 190.579960 secs.
[01/11 03:09:11]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:09:24]  Verifer returned unsat in 12.563112 secs.
[01/11 03:09:24]  sf_get_cex returned in 12.699447 secs.
[01/11 03:09:24]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:09:24]  --------------------------------------------------------------------------------
[01/11 03:09:24]  Iteration: 306 (240 solution, 65 counterexamples)
[01/11 03:10:08]  Generator returned sat in 36.598862 secs.
[01/11 03:10:08]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:10:16]  Verifer returned unsat in 7.485042 secs.
[01/11 03:10:16]  sf_get_cex returned in 7.615167 secs.
[01/11 03:10:16]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:10:16]  --------------------------------------------------------------------------------
[01/11 03:10:16]  Iteration: 307 (241 solution, 65 counterexamples)
[01/11 03:11:00]  Generator returned sat in 36.625091 secs.
[01/11 03:11:00]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:11:23]  Verifer returned unsat in 22.879756 secs.
[01/11 03:11:23]  sf_get_cex returned in 23.011385 secs.
[01/11 03:11:23]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:11:23]  --------------------------------------------------------------------------------
[01/11 03:11:23]  Iteration: 308 (242 solution, 65 counterexamples)
[01/11 03:12:07]  Generator returned sat in 36.413598 secs.
[01/11 03:12:07]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:12:19]  Verifer returned unsat in 11.180556 secs.
[01/11 03:12:19]  sf_get_cex returned in 11.301585 secs.
[01/11 03:12:19]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:12:19]  --------------------------------------------------------------------------------
[01/11 03:12:19]  Iteration: 309 (243 solution, 65 counterexamples)
[01/11 03:13:02]  Generator returned sat in 36.378955 secs.
[01/11 03:13:03]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:13:18]  Verifer returned unsat in 14.900686 secs.
[01/11 03:13:18]  sf_get_cex returned in 15.027842 secs.
[01/11 03:13:18]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 1/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:13:18]  --------------------------------------------------------------------------------
[01/11 03:13:18]  Iteration: 310 (244 solution, 65 counterexamples)
[01/11 03:14:02]  Generator returned sat in 36.504461 secs.
[01/11 03:14:02]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:14:09]  Verifer returned unsat in 7.311635 secs.
[01/11 03:14:09]  sf_get_cex returned in 7.436259 secs.
[01/11 03:14:09]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 3/2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:14:09]  --------------------------------------------------------------------------------
[01/11 03:14:09]  Iteration: 311 (245 solution, 65 counterexamples)
[01/11 03:14:53]  Generator returned sat in 36.114137 secs.
[01/11 03:14:53]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:15:37]  Verifer returned unsat in 44.330378 secs.
[01/11 03:15:37]  sf_get_cex returned in 44.455391 secs.
[01/11 03:15:37]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + 1/2max_c + -7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:15:38]  --------------------------------------------------------------------------------
[01/11 03:15:38]  Iteration: 312 (246 solution, 65 counterexamples)
[01/11 03:16:21]  Generator returned sat in 36.654691 secs.
[01/11 03:16:22]  Candidate solution: 
[1m[94mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:16:29]  Verifer returned unsat in 7.216922 secs.
[01/11 03:16:29]  sf_get_cex returned in 7.359847 secs.
[01/11 03:16:29]  Proved solution: 
[1m[92mif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 03:16:29]  --------------------------------------------------------------------------------
[01/11 03:16:29]  Iteration: 313 (247 solution, 65 counterexamples)
[01/11 03:18:17]  Generator returned sat in 100.603130 secs.
[01/11 03:18:17]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 03:18:33]  Improved gap from 17.306884765625 to 100
[01/11 03:18:36]  Improved number of small numbers from 88 to 100 out of a max of 165
[01/11 03:18:36]  Verifer returned sat in 19.012192 secs.
[01/11 03:18:36]  sf_get_cex returned in 19.130613 secs.
[01/11 03:18:36]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       160062.369521       159862.420668     160062.369521       0.103027       0.102051     159862.420668        0.000000                0.000000       99.948853           100.0                1.0                3.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  199.948853          -1.0      199.948853  159862.420668       2.0
1       160162.318373       159863.085585     160162.318373  100148.801392      99.948853     159863.085585        0.000000                0.000000       99.948853           100.0                0.0                2.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  299.232788           0.0      199.897705  159962.420668       1.0
2       160362.216078       160062.420668     160362.216078  200196.937866     199.897705     160062.420668       99.795410                0.000000       99.948853           100.0                0.0                2.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  200.000000           0.0      200.000000  160062.420668       1.0
3       160562.113783       160162.318373     160562.113783  200197.500488     199.897705     160162.318373      199.693115               99.795410       99.948853           100.0                1.0                3.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  200.102295           1.0      200.000000  160162.420668       2.0
4       160662.062636       160162.778700     160662.062636  100348.647949      99.948853     160162.778700      199.693115              199.693115       99.948853           100.0                1.0                3.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  299.590820           1.0      199.948853  160262.420668       2.0
5       160762.011488       160362.420668     160762.011488  100448.136475      99.948853     160362.420668      199.693115              199.693115       99.948853           100.0                1.0                3.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  199.897705           1.0      199.897705  160362.420668       2.0
6       160861.960341       160462.420668     160861.960341  100348.443359      99.948853     160462.420668      199.693115              199.693115       99.948853           100.0                0.0                2.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  199.846558           0.0      199.846558  160462.420668       1.0
7       161061.858046       160562.369521     161061.858046  200297.244751     199.897705     160562.369521      299.437378              199.693115       99.948853           100.0                0.0                2.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  200.051147           0.0      200.000000  160562.420668       1.0
8       161261.755751       160562.420898     161261.755751  200397.193604     199.897705     160562.420898      399.335083              299.437378       99.948853           100.0                1.0                3.0                  1.0             2.948975 -468760.978597             99.948853            294.897461  299.999770           1.0      200.000000  160662.420668       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=3271353/8192, beliefs_improve=False, alpha=209/4096, buf_size=200.[0m
[01/11 03:18:37]  --------------------------------------------------------------------------------
[01/11 03:18:37]  Iteration: 314 (247 solution, 66 counterexamples)
[01/11 03:25:30]  Generator returned sat in 406.436026 secs.
[01/11 03:25:31]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:25:40]  Verifer returned unsat in 9.605005 secs.
[01/11 03:25:40]  sf_get_cex returned in 9.728473 secs.
[01/11 03:25:40]  Proved solution: 
[1m[92mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:25:41]  --------------------------------------------------------------------------------
[01/11 03:25:41]  Iteration: 315 (248 solution, 66 counterexamples)
[01/11 03:26:47]  Generator returned sat in 59.598027 secs.
[01/11 03:26:48]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:27:05]  Verifer returned unsat in 16.887143 secs.
[01/11 03:27:05]  sf_get_cex returned in 17.013491 secs.
[01/11 03:27:05]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:27:05]  --------------------------------------------------------------------------------
[01/11 03:27:05]  Iteration: 316 (249 solution, 66 counterexamples)
[01/11 03:28:15]  Generator returned sat in 63.109475 secs.
[01/11 03:28:16]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:28:23]  Verifer returned unsat in 7.414616 secs.
[01/11 03:28:23]  sf_get_cex returned in 7.541229 secs.
[01/11 03:28:23]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:28:23]  --------------------------------------------------------------------------------
[01/11 03:28:23]  Iteration: 317 (250 solution, 66 counterexamples)
[01/11 03:29:33]  Generator returned sat in 62.945194 secs.
[01/11 03:29:34]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:29:42]  Verifer returned unsat in 7.735339 secs.
[01/11 03:29:42]  sf_get_cex returned in 7.857973 secs.
[01/11 03:29:42]  Proved solution: 
[1m[92mif (+ -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:29:42]  --------------------------------------------------------------------------------
[01/11 03:29:42]  Iteration: 318 (251 solution, 66 counterexamples)
[01/11 03:30:52]  Generator returned sat in 62.712651 secs.
[01/11 03:30:52]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:31:00]  Verifer returned unsat in 7.131005 secs.
[01/11 03:31:00]  sf_get_cex returned in 7.270461 secs.
[01/11 03:31:00]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:31:00]  --------------------------------------------------------------------------------
[01/11 03:31:00]  Iteration: 319 (252 solution, 66 counterexamples)
[01/11 03:32:10]  Generator returned sat in 63.361205 secs.
[01/11 03:32:11]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:32:24]  Verifer returned unsat in 13.020031 secs.
[01/11 03:32:24]  sf_get_cex returned in 13.147615 secs.
[01/11 03:32:24]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer + -6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:32:24]  --------------------------------------------------------------------------------
[01/11 03:32:24]  Iteration: 320 (253 solution, 66 counterexamples)
[01/11 03:33:32]  Generator returned sat in 60.705711 secs.
[01/11 03:33:33]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:33:55]  Verifer returned unsat in 22.472344 secs.
[01/11 03:33:55]  sf_get_cex returned in 22.602396 secs.
[01/11 03:33:55]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:33:55]  --------------------------------------------------------------------------------
[01/11 03:33:55]  Iteration: 321 (254 solution, 66 counterexamples)
[01/11 03:35:07]  Generator returned sat in 63.992514 secs.
[01/11 03:35:07]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:35:12]  Verifer returned unsat in 4.751975 secs.
[01/11 03:35:12]  sf_get_cex returned in 4.880270 secs.
[01/11 03:35:12]  Proved solution: 
[1m[92mif (+ -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:35:12]  --------------------------------------------------------------------------------
[01/11 03:35:12]  Iteration: 322 (255 solution, 66 counterexamples)
[01/11 03:36:23]  Generator returned sat in 63.021819 secs.
[01/11 03:36:23]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:36:44]  Verifer returned unsat in 20.765203 secs.
[01/11 03:36:44]  sf_get_cex returned in 20.960830 secs.
[01/11 03:36:44]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:36:44]  --------------------------------------------------------------------------------
[01/11 03:36:44]  Iteration: 323 (256 solution, 66 counterexamples)
[01/11 03:37:56]  Generator returned sat in 64.869084 secs.
[01/11 03:37:57]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:38:25]  Verifer returned unsat in 28.611567 secs.
[01/11 03:38:25]  sf_get_cex returned in 28.738110 secs.
[01/11 03:38:25]  Proved solution: 
[1m[92mif (+ -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:38:26]  --------------------------------------------------------------------------------
[01/11 03:38:26]  Iteration: 324 (257 solution, 66 counterexamples)
[01/11 03:39:36]  Generator returned sat in 62.803926 secs.
[01/11 03:39:36]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:39:45]  Verifer returned unsat in 8.380675 secs.
[01/11 03:39:45]  sf_get_cex returned in 8.502756 secs.
[01/11 03:39:45]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:39:45]  --------------------------------------------------------------------------------
[01/11 03:39:45]  Iteration: 325 (258 solution, 66 counterexamples)
[01/11 03:40:56]  Generator returned sat in 63.644162 secs.
[01/11 03:40:56]  Candidate solution: 
[1m[94mif (+ 1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:41:17]  Improved gap from 0.01275634765625 to 48.4375
[01/11 03:41:17]  Improved number of small numbers from 121 to 165 out of a max of 165
[01/11 03:41:17]  Verifer returned sat in 20.756526 secs.
[01/11 03:41:17]  sf_get_cex returned in 20.877585 secs.
[01/11 03:41:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       183512.987061       183507.987061     183512.987061       0.102783       0.101807     183507.987061             0.0                     0.0       48.926025           100.0                2.0                4.0                  2.0            10.050781  -1.067232e+06             97.852051           1005.078125   5.000000          -1.0        5.000000  183507.987061       3.0
1       183561.913086       183513.038086     183561.913086   48931.025391      48.926025     183513.038086             0.0                     0.0       48.926025           100.0                0.0                1.0                  2.0            10.050781  -1.067186e+06             97.852051           1005.078125  48.875000           0.0        0.000000  183561.913086       0.0
2       183610.839111       183561.913086     183610.839111   48974.900391      48.926025     183561.913086             0.0                     0.0       48.926025           100.0                0.0                2.0                  2.0            10.050781  -1.067135e+06             97.852051           1005.078125  48.926025           0.0        0.000000  183610.839111       1.0
3       183659.765137       183610.839111     183659.765137   48974.951416      48.926025     183610.839111             0.0                     0.0       48.926025           100.0                0.0                2.0                  2.0            10.050781  -1.067084e+06             97.852051           1005.078125  48.926025           0.0        0.000000  183659.765137       1.0
4       183708.691162       183659.816162     183708.691162   48974.951416      48.926025     183659.816162             0.0                     0.0       48.926025           100.0                0.0                1.0                  2.0            10.050781  -1.067033e+06             97.852051           1005.078125  48.875000           0.0        0.000000  183708.691162       0.0
5       183757.617188       183708.742188     183757.617188   48974.900391      48.926025     183708.742188             0.0                     0.0       48.926025           100.0                0.0                1.0                  2.0            10.050781  -1.066982e+06             97.852051           1005.078125  48.875000           0.0        0.000000  183757.617188       0.0
6       183806.543213       183757.617188     183806.543213   48974.900391      48.926025     183757.617188             0.0                     0.0       48.926025           100.0                0.0                2.0                  2.0            10.050781  -1.066930e+06             97.852051           1005.078125  48.926025           0.0        0.000000  183806.543213       1.0
7       183855.469238       183806.543213     183855.469238   48974.951416      48.926025     183806.543213             0.0                     0.0       48.926025           100.0                0.0                2.0                  2.0            10.050781  -1.066882e+06             97.852051           1005.078125  48.926025           0.0       -2.466553  183857.935791       1.0
8       183904.395264       183857.936035     183904.395264   48974.951416      48.926025     183857.936035             0.0                     0.0       48.926025           100.0                0.0                1.0                  2.0            10.050781  -1.066882e+06             97.852051           1005.078125  46.459229           0.0      -53.540527  183957.935791       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81711/4096, buf_size=200.[0m
[01/11 03:41:17]  --------------------------------------------------------------------------------
[01/11 03:41:17]  Iteration: 326 (258 solution, 67 counterexamples)
[01/11 03:43:49]  Generator returned sat in 144.629520 secs.
[01/11 03:43:50]  Candidate solution: 
[1m[94mif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 03:44:28]  Improved gap from 0.0 to 48.4375
[01/11 03:44:29]  Improved number of small numbers from 118 to 133 out of a max of 165
[01/11 03:44:29]  Verifer returned sat in 39.641596 secs.
[01/11 03:44:29]  sf_get_cex returned in 39.761339 secs.
[01/11 03:44:29]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       283468.366089       283468.315186     283468.366089       0.102783       0.101807     283468.315186             0.0                     0.0       99.601807        102068.0                2.0                4.0                  2.0             4.050781  -1.167192e+06            199.203613         413455.140625   0.050903          -1.0        0.000122  283468.365967       3.0
1       283518.166992       283468.365967     283518.166992   49800.954224      49.800903     283468.365967             0.0                     0.0       99.601807        102068.0                1.0                3.0                  2.0             4.050781  -1.167142e+06            199.203613         413455.140625  49.801025           1.0        0.000000  283518.166992       2.0
2       283567.967896       283518.166992     283567.967896   49850.704346      49.800903     283518.166992             0.0                     0.0       99.601807        102068.0                0.0                2.0                  2.0             4.050781  -1.167092e+06            199.203613         413455.140625  49.800903           0.0       -0.000122  283567.968018       1.0
3       283617.768799       283568.018799     283617.768799   49850.704224      49.800903     283568.018799             0.0                     0.0       99.601807        102068.0                0.0                1.0                  2.0             4.050781  -1.167042e+06            199.203613         413455.140625  49.750000           0.0        0.000000  283617.768799       0.0
4       283667.569702       283617.819702     283667.569702   49850.653320      49.800903     283617.819702             0.0                     0.0       99.601807        102068.0                0.0                1.0                  2.0             4.050781  -1.166992e+06            199.203613         413455.140625  49.750000           0.0        0.000000  283667.569702       0.0
5       283717.370605       283667.569702     283717.370605   49850.653320      49.800903     283667.569702             0.0                     0.0       99.601807        102068.0                0.0                2.0                  2.0             4.050781  -1.166941e+06            199.203613         413455.140625  49.800903           0.0       -0.000244  283717.370850       1.0
6       283767.171509       283717.421509     283767.171509   49850.704224      49.800903     283717.421509             0.0                     0.0       99.601807        102068.0                0.0                1.0                  2.0             4.050781  -1.166891e+06            199.203613         413455.140625  49.750000           0.0        0.000000  283767.171509       0.0
7       283816.972412       283767.171509     283816.972412   49850.653320      49.800903     283767.171509             0.0                     0.0       99.601807        102068.0                0.0                2.0                  2.0             4.050781  -1.166841e+06            199.203613         413455.140625  49.800903           0.0        0.000000  283816.972412       1.0
8       283866.773315       283816.972412     283866.773315   49850.704224      49.800903     283816.972412             0.0                     0.0       99.601807        102068.0                0.0                2.0                  2.0             4.050781  -1.166841e+06            199.203613         413455.140625  49.800903           0.0      -50.199097  283916.972412       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81711/4096, buf_size=200.[0m
[01/11 03:44:29]  --------------------------------------------------------------------------------
[01/11 03:44:29]  Iteration: 327 (258 solution, 68 counterexamples)
[01/11 03:46:43]  Generator returned sat in 126.090159 secs.
[01/11 03:46:44]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 03:47:06]  Improved gap from 33.401204427083336 to 48.4375
[01/11 03:47:06]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/11 03:47:06]  Verifer returned sat in 22.613614 secs.
[01/11 03:47:06]  sf_get_cex returned in 22.740338 secs.
[01/11 03:47:06]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       384782.318848       384782.318848     384782.318848       0.102783       0.101807     384782.318848             0.0                     0.0       49.539307           100.0                0.0                1.0                  0.0             3.101807  -1.167193e+06                   0.0            310.180664   0.000000          -1.0        0.000000  384782.318848       0.0
1       384831.858154       384782.318848     384831.858154   49539.306641      49.539307     384782.318848             0.0                     0.0       49.539307           100.0                0.0                1.0                  0.0             3.101807  -1.167142e+06                   0.0            310.180664  49.539307           0.0        0.000000  384831.858154       0.0
2       384881.397461       384831.959961     384881.397461   49588.845947      49.539307     384831.959961             0.0                     0.0       49.539307           100.0                0.0                1.0                  0.0             3.101807  -1.167092e+06                   0.0            310.180664  49.437500           0.0       -0.101562  384881.499023       0.0
3       384930.936768       384881.499268     384930.936768   49588.744141      49.539307     384881.499268             0.0                     0.0       49.539307           100.0                0.0                1.0                  0.0             3.101807  -1.167041e+06                   0.0            310.180664  49.437500           0.0        0.000000  384930.936768       0.0
4       384980.476074       384930.936768     384980.476074   49588.744141      49.539307     384930.936768             0.0                     0.0       49.539307           100.0                0.0                2.0                  0.0             3.101807  -1.166991e+06                   0.0            310.180664  49.539307           0.0        0.000000  384980.476074       1.0
5       385030.015381       384980.476074     385030.015381   49588.845947      49.539307     384980.476074             0.0                     0.0       49.539307           100.0                0.0                2.0                  0.0             3.101807  -1.166940e+06                   0.0            310.180664  49.539307           0.0        0.000000  385030.015381       1.0
6       385079.554688       385030.015381     385079.554688   49588.845947      49.539307     385030.015381             0.0                     0.0       49.539307           100.0                0.0                2.0                  0.0             3.101807  -1.166890e+06                   0.0            310.180664  49.539307           0.0        0.000000  385079.554688       1.0
7       385129.093994       385079.656494     385129.093994   49588.845947      49.539307     385079.656494             0.0                     0.0       49.539307           100.0                0.0                1.0                  0.0             3.101807  -1.166839e+06                   0.0            310.180664  49.437500           0.0        0.000000  385129.093994       0.0
8       385178.633301       385129.093994     385178.633301   49588.744141      49.539307     385129.093994             0.0                     0.0       49.539307           100.0                0.0                2.0                  0.0             3.101807  -1.166839e+06                   0.0            310.180664  49.539307           0.0      -50.460693  385229.093994       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81503/4096, buf_size=200.[0m
[01/11 03:47:06]  --------------------------------------------------------------------------------
[01/11 03:47:06]  Iteration: 328 (258 solution, 69 counterexamples)
[01/11 03:51:28]  Generator returned sat in 253.836869 secs.
[01/11 03:51:28]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 03:51:43]  Improved gap from 0.4072265625 to 48.4375
[01/11 03:51:44]  Improved number of small numbers from 123 to 125 out of a max of 165
[01/11 03:51:44]  Verifer returned sat in 15.505851 secs.
[01/11 03:51:44]  sf_get_cex returned in 15.626036 secs.
[01/11 03:51:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       360212.237671       360208.707397     360212.237671       0.102783       0.101562     360208.707397             0.0                     0.0       49.488403           100.0                0.0                1.0                  0.0                  2.0  -1.167189e+06                   0.0                 200.0   3.530273          -1.0        3.530151  360208.707520       0.0
1       360261.726074       360208.758301     360261.726074   49491.933594      49.488403     360208.758301             0.0                     0.0       49.488403           100.0                0.0                2.0                  0.0                  2.0  -1.167142e+06                   0.0                 200.0  52.967773           0.0        0.000000  360261.726074       1.0
2       360311.214478       360261.726074     360311.214478   49541.371094      49.488403     360261.726074             0.0                     0.0       49.488403           100.0                0.0                2.0                  0.0                  2.0  -1.167092e+06                   0.0                 200.0  49.488403           0.0        0.000000  360311.214478       1.0
3       360360.702881       360311.214478     360360.702881   49537.891724      49.488403     360311.214478             0.0                     0.0       49.488403           100.0                0.0                2.0                  0.0                  2.0  -1.167041e+06                   0.0                 200.0  49.488403           0.0        0.000000  360360.702881       1.0
4       360410.191284       360360.702881     360410.191284   49537.891724      49.488403     360360.702881             0.0                     0.0       49.488403           100.0                0.0                2.0                  0.0                  2.0  -1.166991e+06                   0.0                 200.0  49.488403           0.0        0.000000  360410.191284       1.0
5       360459.679688       360410.191284     360459.679688   49537.891724      49.488403     360410.191284             0.0                     0.0       49.488403           100.0                0.0                2.0                  0.0                  2.0  -1.166940e+06                   0.0                 200.0  49.488403           0.0       -0.101807  360459.781494       1.0
6       360509.168091       360459.781494     360509.168091   49537.891724      49.488403     360459.781494             0.0                     0.0       49.488403           100.0                0.0                1.0                  0.0                  2.0  -1.166890e+06                   0.0                 200.0  49.386597           0.0       -0.050903  360509.218994       0.0
7       360558.656494       360509.218994     360558.656494   49537.789917      49.488403     360509.218994             0.0                     0.0       49.488403           100.0                0.0                1.0                  0.0                  2.0  -1.166839e+06                   0.0                 200.0  49.437500           0.0        0.000000  360558.656494       0.0
8       360608.144897       360558.656494     360608.144897   49537.840820      49.488403     360558.656494             0.0                     0.0       49.488403           100.0                0.0                2.0                  0.0                  2.0  -1.166839e+06                   0.0                 200.0  49.488403           0.0      -50.511597  360658.656494       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=209/4096, buf_size=200.[0m
[01/11 03:51:44]  --------------------------------------------------------------------------------
[01/11 03:51:44]  Iteration: 329 (258 solution, 70 counterexamples)
[01/11 03:55:29]  Generator returned sat in 217.286556 secs.
[01/11 03:55:30]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 03:55:41]  Verifer returned unsat in 11.576258 secs.
[01/11 03:55:41]  sf_get_cex returned in 11.699850 secs.
[01/11 03:55:41]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 03:55:42]  --------------------------------------------------------------------------------
[01/11 03:55:42]  Iteration: 330 (259 solution, 70 counterexamples)
[01/11 03:58:04]  Generator returned sat in 134.578115 secs.
[01/11 03:58:04]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 03:58:12]  Verifer returned unsat in 7.412709 secs.
[01/11 03:58:12]  sf_get_cex returned in 7.533200 secs.
[01/11 03:58:12]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 03:58:12]  --------------------------------------------------------------------------------
[01/11 03:58:12]  Iteration: 331 (260 solution, 70 counterexamples)
[01/11 04:00:39]  Generator returned sat in 139.006284 secs.
[01/11 04:00:39]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:01:20]  Verifer returned unsat in 40.252628 secs.
[01/11 04:01:20]  sf_get_cex returned in 40.379265 secs.
[01/11 04:01:20]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:01:20]  --------------------------------------------------------------------------------
[01/11 04:01:20]  Iteration: 332 (261 solution, 70 counterexamples)
[01/11 04:03:42]  Generator returned sat in 134.721056 secs.
[01/11 04:03:43]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:03:50]  Verifer returned unsat in 7.042197 secs.
[01/11 04:03:50]  sf_get_cex returned in 7.182922 secs.
[01/11 04:03:50]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:03:50]  --------------------------------------------------------------------------------
[01/11 04:03:50]  Iteration: 333 (262 solution, 70 counterexamples)
[01/11 04:06:12]  Generator returned sat in 134.532284 secs.
[01/11 04:06:13]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:06:40]  Verifer returned unsat in 27.443995 secs.
[01/11 04:06:40]  sf_get_cex returned in 27.581551 secs.
[01/11 04:06:40]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:06:40]  --------------------------------------------------------------------------------
[01/11 04:06:40]  Iteration: 334 (263 solution, 70 counterexamples)
[01/11 04:09:03]  Generator returned sat in 134.967854 secs.
[01/11 04:09:04]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:09:11]  Verifer returned unsat in 6.859807 secs.
[01/11 04:09:11]  sf_get_cex returned in 6.990118 secs.
[01/11 04:09:11]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:09:11]  --------------------------------------------------------------------------------
[01/11 04:09:11]  Iteration: 335 (264 solution, 70 counterexamples)
[01/11 04:11:33]  Generator returned sat in 134.247270 secs.
[01/11 04:11:33]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:11:41]  Verifer returned unsat in 7.596064 secs.
[01/11 04:11:41]  sf_get_cex returned in 7.725066 secs.
[01/11 04:11:41]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:11:41]  --------------------------------------------------------------------------------
[01/11 04:11:41]  Iteration: 336 (265 solution, 70 counterexamples)
[01/11 04:14:02]  Generator returned sat in 133.105341 secs.
[01/11 04:14:02]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:14:14]  Verifer returned unsat in 11.218469 secs.
[01/11 04:14:14]  sf_get_cex returned in 11.350568 secs.
[01/11 04:14:14]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 04:14:14]  --------------------------------------------------------------------------------
[01/11 04:14:14]  Iteration: 337 (266 solution, 70 counterexamples)
[01/11 04:16:35]  Generator returned sat in 133.412028 secs.
[01/11 04:16:35]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:16:46]  Verifer returned unsat in 11.032584 secs.
[01/11 04:16:46]  sf_get_cex returned in 11.150599 secs.
[01/11 04:16:46]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:16:47]  --------------------------------------------------------------------------------
[01/11 04:16:47]  Iteration: 338 (267 solution, 70 counterexamples)
[01/11 04:19:10]  Generator returned sat in 135.489026 secs.
[01/11 04:19:10]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:19:26]  Verifer returned unsat in 15.235463 secs.
[01/11 04:19:26]  sf_get_cex returned in 15.362536 secs.
[01/11 04:19:26]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:19:26]  --------------------------------------------------------------------------------
[01/11 04:19:26]  Iteration: 339 (268 solution, 70 counterexamples)
[01/11 04:21:49]  Generator returned sat in 135.612528 secs.
[01/11 04:21:50]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:22:30]  Verifer returned unsat in 40.621119 secs.
[01/11 04:22:30]  sf_get_cex returned in 40.745123 secs.
[01/11 04:22:30]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:22:31]  --------------------------------------------------------------------------------
[01/11 04:22:31]  Iteration: 340 (269 solution, 70 counterexamples)
[01/11 04:24:52]  Generator returned sat in 133.924913 secs.
[01/11 04:24:53]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:25:00]  Verifer returned unsat in 6.943929 secs.
[01/11 04:25:00]  sf_get_cex returned in 7.075779 secs.
[01/11 04:25:00]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:25:00]  --------------------------------------------------------------------------------
[01/11 04:25:00]  Iteration: 341 (270 solution, 70 counterexamples)
[01/11 04:27:22]  Generator returned sat in 133.822197 secs.
[01/11 04:27:22]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:27:39]  Verifer returned unsat in 16.384145 secs.
[01/11 04:27:39]  sf_get_cex returned in 16.513864 secs.
[01/11 04:27:39]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 04:27:39]  --------------------------------------------------------------------------------
[01/11 04:27:39]  Iteration: 342 (271 solution, 70 counterexamples)
[01/11 04:30:00]  Generator returned sat in 133.537557 secs.
[01/11 04:30:01]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:30:06]  Verifer returned unsat in 5.051044 secs.
[01/11 04:30:06]  sf_get_cex returned in 5.182990 secs.
[01/11 04:30:06]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:30:06]  --------------------------------------------------------------------------------
[01/11 04:30:06]  Iteration: 343 (272 solution, 70 counterexamples)
[01/11 04:32:28]  Generator returned sat in 134.631339 secs.
[01/11 04:32:29]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:33:15]  Verifer returned unsat in 46.199748 secs.
[01/11 04:33:15]  sf_get_cex returned in 46.329778 secs.
[01/11 04:33:15]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:33:15]  --------------------------------------------------------------------------------
[01/11 04:33:15]  Iteration: 344 (273 solution, 70 counterexamples)
[01/11 04:35:38]  Generator returned sat in 134.654592 secs.
[01/11 04:35:38]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:35:47]  Verifer returned unsat in 8.228165 secs.
[01/11 04:35:47]  sf_get_cex returned in 8.355581 secs.
[01/11 04:35:47]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:35:47]  --------------------------------------------------------------------------------
[01/11 04:35:47]  Iteration: 345 (274 solution, 70 counterexamples)
[01/11 04:38:09]  Generator returned sat in 134.195498 secs.
[01/11 04:38:09]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:38:21]  Verifer returned unsat in 11.870979 secs.
[01/11 04:38:21]  sf_get_cex returned in 12.005467 secs.
[01/11 04:38:21]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:38:21]  --------------------------------------------------------------------------------
[01/11 04:38:21]  Iteration: 346 (275 solution, 70 counterexamples)
[01/11 04:40:45]  Generator returned sat in 136.024448 secs.
[01/11 04:40:46]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:40:53]  Verifer returned unsat in 7.685606 secs.
[01/11 04:40:54]  sf_get_cex returned in 7.821115 secs.
[01/11 04:40:54]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:40:54]  --------------------------------------------------------------------------------
[01/11 04:40:54]  Iteration: 347 (276 solution, 70 counterexamples)
[01/11 04:43:22]  Generator returned sat in 139.906943 secs.
[01/11 04:43:22]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:43:33]  Verifer returned unsat in 11.010366 secs.
[01/11 04:43:33]  sf_get_cex returned in 11.142896 secs.
[01/11 04:43:33]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:43:33]  --------------------------------------------------------------------------------
[01/11 04:43:33]  Iteration: 348 (277 solution, 70 counterexamples)
[01/11 04:46:02]  Generator returned sat in 140.552337 secs.
[01/11 04:46:03]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:46:11]  Verifer returned unsat in 7.772406 secs.
[01/11 04:46:11]  sf_get_cex returned in 7.906063 secs.
[01/11 04:46:11]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:46:11]  --------------------------------------------------------------------------------
[01/11 04:46:11]  Iteration: 349 (278 solution, 70 counterexamples)
[01/11 04:48:40]  Generator returned sat in 140.767867 secs.
[01/11 04:48:40]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:48:53]  Verifer returned unsat in 12.227387 secs.
[01/11 04:48:53]  sf_get_cex returned in 12.379395 secs.
[01/11 04:48:53]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:48:53]  --------------------------------------------------------------------------------
[01/11 04:48:53]  Iteration: 350 (279 solution, 70 counterexamples)
[01/11 04:51:21]  Generator returned sat in 139.777508 secs.
[01/11 04:51:21]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:51:27]  Verifer returned unsat in 5.397979 secs.
[01/11 04:51:27]  sf_get_cex returned in 5.523989 secs.
[01/11 04:51:27]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:51:27]  --------------------------------------------------------------------------------
[01/11 04:51:27]  Iteration: 351 (280 solution, 70 counterexamples)
[01/11 04:53:54]  Generator returned sat in 139.030474 secs.
[01/11 04:53:55]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:53:59]  Verifer returned unsat in 4.674485 secs.
[01/11 04:53:59]  sf_get_cex returned in 4.798943 secs.
[01/11 04:53:59]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:54:00]  --------------------------------------------------------------------------------
[01/11 04:54:00]  Iteration: 352 (281 solution, 70 counterexamples)
[01/11 04:56:24]  Generator returned sat in 136.635910 secs.
[01/11 04:56:25]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:56:36]  Verifer returned unsat in 11.251902 secs.
[01/11 04:56:36]  sf_get_cex returned in 11.405844 secs.
[01/11 04:56:36]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 04:56:36]  --------------------------------------------------------------------------------
[01/11 04:56:36]  Iteration: 353 (282 solution, 70 counterexamples)
[01/11 04:59:02]  Generator returned sat in 137.680320 secs.
[01/11 04:59:03]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:59:08]  Verifer returned unsat in 5.493029 secs.
[01/11 04:59:08]  sf_get_cex returned in 5.634502 secs.
[01/11 04:59:08]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 04:59:09]  --------------------------------------------------------------------------------
[01/11 04:59:09]  Iteration: 354 (283 solution, 70 counterexamples)
[01/11 05:01:34]  Generator returned sat in 137.161883 secs.
[01/11 05:01:34]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 05:02:12]  Verifer returned unsat in 37.378829 secs.
[01/11 05:02:12]  sf_get_cex returned in 37.556951 secs.
[01/11 05:02:12]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 05:02:12]  --------------------------------------------------------------------------------
[01/11 05:02:12]  Iteration: 355 (284 solution, 70 counterexamples)
[01/11 05:04:35]  Generator returned sat in 135.291819 secs.
[01/11 05:04:36]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 05:04:41]  Verifer returned unsat in 5.188915 secs.
[01/11 05:04:41]  sf_get_cex returned in 5.313703 secs.
[01/11 05:04:41]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 05:04:41]  --------------------------------------------------------------------------------
[01/11 05:04:41]  Iteration: 356 (285 solution, 70 counterexamples)
[01/11 05:07:05]  Generator returned sat in 135.540026 secs.
[01/11 05:07:05]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 05:07:14]  Verifer returned unsat in 8.934570 secs.
[01/11 05:07:14]  sf_get_cex returned in 9.055128 secs.
[01/11 05:07:14]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 05:07:14]  --------------------------------------------------------------------------------
[01/11 05:07:14]  Iteration: 357 (286 solution, 70 counterexamples)
[01/11 05:09:37]  Generator returned sat in 135.135478 secs.
[01/11 05:09:38]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 05:09:44]  Verifer returned unsat in 5.709823 secs.
[01/11 05:09:44]  sf_get_cex returned in 5.847066 secs.
[01/11 05:09:44]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 05:09:44]  --------------------------------------------------------------------------------
[01/11 05:09:44]  Iteration: 358 (287 solution, 70 counterexamples)
[01/11 05:12:03]  Generator returned sat in 131.653891 secs.
[01/11 05:12:04]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 05:12:22]  Verifer returned unsat in 18.267759 secs.
[01/11 05:12:22]  sf_get_cex returned in 18.391635 secs.
[01/11 05:12:22]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 05:12:22]  --------------------------------------------------------------------------------
[01/11 05:12:22]  Iteration: 359 (288 solution, 70 counterexamples)
[01/11 05:14:42]  Generator returned sat in 132.260907 secs.
[01/11 05:14:43]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:14:48]  Verifer returned unsat in 5.598067 secs.
[01/11 05:14:48]  sf_get_cex returned in 5.716228 secs.
[01/11 05:14:48]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:14:49]  --------------------------------------------------------------------------------
[01/11 05:14:49]  Iteration: 360 (289 solution, 70 counterexamples)
[01/11 05:17:09]  Generator returned sat in 132.707384 secs.
[01/11 05:17:09]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:17:28]  Verifer returned unsat in 18.802159 secs.
[01/11 05:17:28]  sf_get_cex returned in 18.921314 secs.
[01/11 05:17:28]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:17:28]  --------------------------------------------------------------------------------
[01/11 05:17:28]  Iteration: 361 (290 solution, 70 counterexamples)
[01/11 05:19:49]  Generator returned sat in 132.485470 secs.
[01/11 05:19:49]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:20:03]  Verifer returned unsat in 13.342324 secs.
[01/11 05:20:03]  sf_get_cex returned in 13.465263 secs.
[01/11 05:20:03]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:20:03]  --------------------------------------------------------------------------------
[01/11 05:20:03]  Iteration: 362 (291 solution, 70 counterexamples)
[01/11 05:22:25]  Generator returned sat in 134.467413 secs.
[01/11 05:22:26]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:22:32]  Verifer returned unsat in 5.818716 secs.
[01/11 05:22:32]  sf_get_cex returned in 5.941167 secs.
[01/11 05:22:32]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:22:32]  --------------------------------------------------------------------------------
[01/11 05:22:32]  Iteration: 363 (292 solution, 70 counterexamples)
[01/11 05:24:53]  Generator returned sat in 133.090855 secs.
[01/11 05:24:53]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:26:19]  Verifer returned unsat in 85.865411 secs.
[01/11 05:26:19]  sf_get_cex returned in 85.993636 secs.
[01/11 05:26:19]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:26:19]  --------------------------------------------------------------------------------
[01/11 05:26:19]  Iteration: 364 (293 solution, 70 counterexamples)
[01/11 05:28:41]  Generator returned sat in 133.601833 secs.
[01/11 05:28:42]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:28:50]  Verifer returned unsat in 8.308720 secs.
[01/11 05:28:50]  sf_get_cex returned in 8.436007 secs.
[01/11 05:28:50]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:28:50]  --------------------------------------------------------------------------------
[01/11 05:28:50]  Iteration: 365 (294 solution, 70 counterexamples)
[01/11 05:31:11]  Generator returned sat in 132.507352 secs.
[01/11 05:31:11]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:31:26]  Verifer returned unsat in 14.335265 secs.
[01/11 05:31:26]  sf_get_cex returned in 14.458377 secs.
[01/11 05:31:26]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:31:26]  --------------------------------------------------------------------------------
[01/11 05:31:26]  Iteration: 366 (295 solution, 70 counterexamples)
[01/11 05:33:45]  Generator returned sat in 131.697611 secs.
[01/11 05:33:46]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:33:53]  Verifer returned unsat in 7.060884 secs.
[01/11 05:33:53]  sf_get_cex returned in 7.184225 secs.
[01/11 05:33:53]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:33:53]  --------------------------------------------------------------------------------
[01/11 05:33:53]  Iteration: 367 (296 solution, 70 counterexamples)
[01/11 05:36:13]  Generator returned sat in 131.788138 secs.
[01/11 05:36:13]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:36:22]  Verifer returned unsat in 8.410342 secs.
[01/11 05:36:22]  sf_get_cex returned in 8.538436 secs.
[01/11 05:36:22]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:36:22]  --------------------------------------------------------------------------------
[01/11 05:36:22]  Iteration: 368 (297 solution, 70 counterexamples)
[01/11 05:38:46]  Generator returned sat in 136.751003 secs.
[01/11 05:38:47]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 05:38:51]  Verifer returned unsat in 4.556004 secs.
[01/11 05:38:51]  sf_get_cex returned in 4.679845 secs.
[01/11 05:38:51]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 05:38:52]  --------------------------------------------------------------------------------
[01/11 05:38:52]  Iteration: 369 (298 solution, 70 counterexamples)
[01/11 05:41:14]  Generator returned sat in 134.262532 secs.
[01/11 05:41:14]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 05:41:23]  Verifer returned unsat in 8.439356 secs.
[01/11 05:41:23]  sf_get_cex returned in 8.565995 secs.
[01/11 05:41:23]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 05:41:23]  --------------------------------------------------------------------------------
[01/11 05:41:23]  Iteration: 370 (299 solution, 70 counterexamples)
[01/11 05:47:54]  Generator returned sat in 382.659005 secs.
[01/11 05:47:54]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:48:02]  Verifer returned unsat in 8.028221 secs.
[01/11 05:48:02]  sf_get_cex returned in 8.159736 secs.
[01/11 05:48:02]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:48:03]  --------------------------------------------------------------------------------
[01/11 05:48:03]  Iteration: 371 (300 solution, 70 counterexamples)
[01/11 05:50:25]  Generator returned sat in 134.074563 secs.
[01/11 05:50:25]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:50:37]  Verifer returned unsat in 11.415514 secs.
[01/11 05:50:37]  sf_get_cex returned in 11.542068 secs.
[01/11 05:50:37]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:50:37]  --------------------------------------------------------------------------------
[01/11 05:50:37]  Iteration: 372 (301 solution, 70 counterexamples)
[01/11 05:52:54]  Generator returned sat in 129.608805 secs.
[01/11 05:52:55]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:53:09]  Verifer returned unsat in 13.984608 secs.
[01/11 05:53:09]  sf_get_cex returned in 14.114432 secs.
[01/11 05:53:09]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:53:09]  --------------------------------------------------------------------------------
[01/11 05:53:09]  Iteration: 373 (302 solution, 70 counterexamples)
[01/11 05:55:27]  Generator returned sat in 130.159222 secs.
[01/11 05:55:27]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:55:37]  Verifer returned unsat in 9.021365 secs.
[01/11 05:55:37]  sf_get_cex returned in 9.144538 secs.
[01/11 05:55:37]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:55:37]  --------------------------------------------------------------------------------
[01/11 05:55:37]  Iteration: 374 (303 solution, 70 counterexamples)
[01/11 05:56:57]  Generator returned sat in 72.864487 secs.
[01/11 05:56:58]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + -9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:57:03]  Verifer returned unsat in 5.386723 secs.
[01/11 05:57:03]  sf_get_cex returned in 5.507762 secs.
[01/11 05:57:03]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + -9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:57:03]  --------------------------------------------------------------------------------
[01/11 05:57:03]  Iteration: 375 (304 solution, 70 counterexamples)
[01/11 05:58:18]  Generator returned sat in 66.712470 secs.
[01/11 05:58:18]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 05:58:24]  Improved gap from 0.0 to 48.4375
[01/11 05:58:24]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/11 05:58:24]  Verifer returned sat in 5.898763 secs.
[01/11 05:58:24]  sf_get_cex returned in 6.023030 secs.
[01/11 05:58:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       941503.923096       941503.923096     941503.923096       0.102539       0.101562     941503.923096             0.0                     0.0       54.999756           100.0                0.0                2.0                  0.0                  2.0 -411090.018555                   0.0                 200.0   0.000000          -1.0       -0.000244  941503.923340       1.0
1       941547.937256       941503.974121     941547.937256   44014.160156      44.014160     941503.974121             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -411038.506836                   0.0                 200.0  43.963135           0.0       -4.474365  941552.411621       0.0
2       941591.951416       941552.411621     941591.951416   44058.123291      44.014160     941552.411621             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -410986.944336                   0.0                 200.0  39.539795           0.0       -8.897705  941600.849121       0.0
3       941635.965576       941600.849121     941635.965576   44053.699951      44.014160     941600.849121             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -410935.381836                   0.0                 200.0  35.116455           0.0      -13.321045  941649.286621       0.0
4       941679.979736       941649.286621     941679.979736   44049.276611      44.014160     941649.286621             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -410883.819336                   0.0                 200.0  30.693115           0.0      -17.744385  941697.724121       0.0
5       941723.993896       941697.724121     941723.993896   44044.853271      44.014160     941697.724121             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -410832.256836                   0.0                 200.0  26.269775           0.0      -22.167725  941746.161621       0.0
6       941768.008057       941746.161621     941768.008057   44040.429932      44.014160     941746.161621             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -410780.694336                   0.0                 200.0  21.846436           0.0      -26.591064  941794.599121       0.0
7       941812.022217       941794.599121     941812.022217   44036.006592      44.014160     941794.599121             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -410729.131836                   0.0                 200.0  17.423096           0.0      -31.014404  941843.036621       0.0
8       941856.036377       941843.036621     941856.036377   44031.583252      44.014160     941843.036621             0.0                     0.0       54.999756           100.0                0.0                1.0                  0.0                  2.0 -410677.569336                   0.0                 200.0  12.999756           0.0      -35.437744  941891.474121       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=44997/4096, buf_size=200.[0m
[01/11 05:58:24]  --------------------------------------------------------------------------------
[01/11 05:58:24]  Iteration: 376 (304 solution, 71 counterexamples)
[01/11 06:04:43]  Generator returned sat in 370.949164 secs.
[01/11 06:04:44]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:05:19]  Verifer returned unsat in 35.390024 secs.
[01/11 06:05:19]  sf_get_cex returned in 35.524968 secs.
[01/11 06:05:19]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:05:19]  --------------------------------------------------------------------------------
[01/11 06:05:19]  Iteration: 377 (305 solution, 71 counterexamples)
[01/11 06:07:56]  Generator returned sat in 148.477865 secs.
[01/11 06:07:56]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:08:01]  Verifer returned unsat in 4.774793 secs.
[01/11 06:08:01]  sf_get_cex returned in 4.902551 secs.
[01/11 06:08:01]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:08:01]  --------------------------------------------------------------------------------
[01/11 06:08:01]  Iteration: 378 (306 solution, 71 counterexamples)
[01/11 06:10:39]  Generator returned sat in 149.229015 secs.
[01/11 06:10:39]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:10:55]  Verifer returned unsat in 15.789531 secs.
[01/11 06:10:55]  sf_get_cex returned in 15.916963 secs.
[01/11 06:10:55]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:10:55]  --------------------------------------------------------------------------------
[01/11 06:10:55]  Iteration: 379 (307 solution, 71 counterexamples)
[01/11 06:13:35]  Generator returned sat in 151.889920 secs.
[01/11 06:13:36]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:13:41]  Verifer returned unsat in 4.441065 secs.
[01/11 06:13:41]  sf_get_cex returned in 4.572682 secs.
[01/11 06:13:41]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:13:41]  --------------------------------------------------------------------------------
[01/11 06:13:41]  Iteration: 380 (308 solution, 71 counterexamples)
[01/11 06:16:21]  Generator returned sat in 151.710467 secs.
[01/11 06:16:21]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:17:15]  Verifer returned unsat in 53.930402 secs.
[01/11 06:17:15]  sf_get_cex returned in 54.067870 secs.
[01/11 06:17:15]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:17:15]  --------------------------------------------------------------------------------
[01/11 06:17:15]  Iteration: 381 (309 solution, 71 counterexamples)
[01/11 06:19:53]  Generator returned sat in 149.311152 secs.
[01/11 06:19:54]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:20:00]  Verifer returned unsat in 6.299716 secs.
[01/11 06:20:00]  sf_get_cex returned in 6.427262 secs.
[01/11 06:20:00]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -3/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:20:00]  --------------------------------------------------------------------------------
[01/11 06:20:00]  Iteration: 382 (310 solution, 71 counterexamples)
[01/11 06:22:04]  Generator returned sat in 115.862484 secs.
[01/11 06:22:05]  Candidate solution: 
[1m[94mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:22:10]  Verifer returned unsat in 4.965011 secs.
[01/11 06:22:10]  sf_get_cex returned in 5.103361 secs.
[01/11 06:22:10]  Proved solution: 
[1m[92mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:22:10]  --------------------------------------------------------------------------------
[01/11 06:22:10]  Iteration: 383 (311 solution, 71 counterexamples)
[01/11 06:23:39]  Generator returned sat in 80.693079 secs.
[01/11 06:23:39]  Candidate solution: 
[1m[94mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:23:43]  Verifer returned unsat in 3.526896 secs.
[01/11 06:23:43]  sf_get_cex returned in 3.658908 secs.
[01/11 06:23:43]  Proved solution: 
[1m[92mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:23:43]  --------------------------------------------------------------------------------
[01/11 06:23:43]  Iteration: 384 (312 solution, 71 counterexamples)
[01/11 06:25:13]  Generator returned sat in 82.006309 secs.
[01/11 06:25:14]  Candidate solution: 
[1m[94mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:25:58]  Verifer returned unsat in 44.236741 secs.
[01/11 06:25:58]  sf_get_cex returned in 44.376428 secs.
[01/11 06:25:58]  Proved solution: 
[1m[92mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:25:58]  --------------------------------------------------------------------------------
[01/11 06:25:58]  Iteration: 385 (313 solution, 71 counterexamples)
[01/11 06:27:27]  Generator returned sat in 80.882221 secs.
[01/11 06:27:28]  Candidate solution: 
[1m[94mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:27:34]  Verifer returned unsat in 5.548473 secs.
[01/11 06:27:34]  sf_get_cex returned in 5.690953 secs.
[01/11 06:27:34]  Proved solution: 
[1m[92mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:27:34]  --------------------------------------------------------------------------------
[01/11 06:27:34]  Iteration: 386 (314 solution, 71 counterexamples)
[01/11 06:29:03]  Generator returned sat in 80.879128 secs.
[01/11 06:29:03]  Candidate solution: 
[1m[94mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:29:07]  Verifer returned unsat in 3.120549 secs.
[01/11 06:29:07]  sf_get_cex returned in 3.252253 secs.
[01/11 06:29:07]  Proved solution: 
[1m[92mif (+ -1max_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:29:07]  --------------------------------------------------------------------------------
[01/11 06:29:07]  Iteration: 387 (315 solution, 71 counterexamples)
[01/11 06:31:49]  Generator returned sat in 154.528381 secs.
[01/11 06:31:50]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:32:05]  Verifer returned unsat in 14.663850 secs.
[01/11 06:32:05]  sf_get_cex returned in 14.802357 secs.
[01/11 06:32:05]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:32:05]  --------------------------------------------------------------------------------
[01/11 06:32:05]  Iteration: 388 (316 solution, 71 counterexamples)
[01/11 06:34:43]  Generator returned sat in 149.437311 secs.
[01/11 06:34:43]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 06:34:50]  Verifer returned unsat in 6.956433 secs.
[01/11 06:34:50]  sf_get_cex returned in 7.086036 secs.
[01/11 06:34:50]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 06:34:50]  --------------------------------------------------------------------------------
[01/11 06:34:50]  Iteration: 389 (317 solution, 71 counterexamples)
[01/11 06:37:31]  Generator returned sat in 152.154570 secs.
[01/11 06:37:31]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:37:48]  Verifer returned unsat in 16.616446 secs.
[01/11 06:37:48]  sf_get_cex returned in 16.746558 secs.
[01/11 06:37:48]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_buffer > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:37:48]  --------------------------------------------------------------------------------
[01/11 06:37:48]  Iteration: 390 (318 solution, 71 counterexamples)
[01/11 06:40:30]  Generator returned sat in 153.807914 secs.
[01/11 06:40:31]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:40:39]  Verifer returned unsat in 7.643949 secs.
[01/11 06:40:39]  sf_get_cex returned in 7.764881 secs.
[01/11 06:40:39]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:40:39]  --------------------------------------------------------------------------------
[01/11 06:40:39]  Iteration: 391 (319 solution, 71 counterexamples)
[01/11 06:43:06]  Generator returned sat in 139.178613 secs.
[01/11 06:43:06]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:43:17]  Verifer returned unsat in 10.100770 secs.
[01/11 06:43:17]  sf_get_cex returned in 10.236861 secs.
[01/11 06:43:17]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:43:17]  --------------------------------------------------------------------------------
[01/11 06:43:17]  Iteration: 392 (320 solution, 71 counterexamples)
[01/11 06:45:44]  Generator returned sat in 139.298289 secs.
[01/11 06:45:44]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:45:50]  Verifer returned unsat in 5.807027 secs.
[01/11 06:45:50]  sf_get_cex returned in 5.930660 secs.
[01/11 06:45:50]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:45:50]  --------------------------------------------------------------------------------
[01/11 06:45:50]  Iteration: 393 (321 solution, 71 counterexamples)
[01/11 06:48:19]  Generator returned sat in 140.788989 secs.
[01/11 06:48:20]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:48:27]  Verifer returned unsat in 7.303427 secs.
[01/11 06:48:27]  sf_get_cex returned in 7.433186 secs.
[01/11 06:48:27]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1/2min_c + -1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 06:48:27]  --------------------------------------------------------------------------------
[01/11 06:48:27]  Iteration: 394 (322 solution, 71 counterexamples)
[01/11 06:50:14]  Generator returned sat in 98.464131 secs.
[01/11 06:50:14]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 06:50:23]  Improved gap from 0.025390625 to 100
[01/11 06:50:24]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/11 06:50:24]  Verifer returned sat in 9.325444 secs.
[01/11 06:50:24]  sf_get_cex returned in 9.447520 secs.
[01/11 06:50:24]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0       574011.963379       573811.963623     574011.963379       0.102295       0.101318     573811.963623        0.000000                0.000000           100.0      127.999756                1.0                3.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  199.999756          -1.0      199.949219  573812.01416       2.0
1       574099.805176       573812.014404     574099.805176   88041.796631      87.841797     573812.014404        0.000000                0.000000           100.0      127.999756                0.0                2.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  287.790771           0.0      187.791016  573912.01416       1.0
2       574299.805176       574012.014160     574299.805176  200287.790771     200.000000     574012.014160       87.791016                0.000000           100.0      127.999756                0.0                2.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  200.000000           0.0      200.000000  574012.01416       1.0
3       574499.805176       574099.805176     574499.805176  200287.791016     200.000000     574099.805176      187.791016               87.791016           100.0      127.999756                1.0                3.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  212.208984           1.0      200.000000  574112.01416       2.0
4       574587.646973       574140.065186     574587.646973   88241.796875      87.841797     574140.065186      187.791016              187.791016           100.0      127.999756                1.0                3.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  259.790771           1.0      187.841797  574212.01416       2.0
5       574675.488770       574311.760254     574675.488770   88289.378662      87.841797     574311.760254      187.791016              187.791016           100.0      127.999756                1.0                3.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  175.937500           1.0      175.683594  574312.01416       2.0
6       574763.330566       574399.906738     574763.330566   88205.525391      87.841797     574399.906738      187.791016              187.791016           100.0      127.999756                0.0                2.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  175.632812           0.0      163.525391  574412.01416       1.0
7       574963.330566       574487.748535     574963.330566  200363.423828     200.000000     574487.748535      251.316406              187.791016           100.0      127.999756                0.0                2.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  224.265625           0.0      200.000000  574512.01416       1.0
8       575163.330566       574512.014404     575163.330566  200475.582031     200.000000     574512.014404      351.316406              251.316406           100.0      127.999756                1.0                3.0                  1.0             2.949219 -406789.093994                 100.0             377.49928  299.999756           1.0      200.000000  574612.01416       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=89937/256, beliefs_improve=False, alpha=6225/512, buf_size=200.[0m
[01/11 06:50:24]  --------------------------------------------------------------------------------
[01/11 06:50:24]  Iteration: 395 (322 solution, 72 counterexamples)
[01/11 06:53:49]  Generator returned sat in 197.708451 secs.
[01/11 06:53:50]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 2min_c + -1max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:53:57]  Verifer returned unsat in 6.630448 secs.
[01/11 06:53:57]  sf_get_cex returned in 6.752148 secs.
[01/11 06:53:57]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 2min_c + -1max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:53:57]  --------------------------------------------------------------------------------
[01/11 06:53:57]  Iteration: 396 (323 solution, 72 counterexamples)
[01/11 06:55:21]  Generator returned sat in 76.023163 secs.
[01/11 06:55:21]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 2min_c + -1max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:55:41]  Verifer returned unsat in 19.307642 secs.
[01/11 06:55:41]  sf_get_cex returned in 19.434894 secs.
[01/11 06:55:41]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ 2min_c + -1max_c + -9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:55:41]  --------------------------------------------------------------------------------
[01/11 06:55:41]  Iteration: 397 (324 solution, 72 counterexamples)
[01/11 06:58:36]  Generator returned sat in 167.466584 secs.
[01/11 06:58:37]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 06:58:52]  Improved gap from 0.012664794921875 to 48.4375
[01/11 06:58:54]  Improved number of small numbers from 98 to 118 out of a max of 165
[01/11 06:58:54]  Verifer returned sat in 16.680840 secs.
[01/11 06:58:54]  sf_get_cex returned in 16.802595 secs.
[01/11 06:58:54]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       588544.057983       588544.057983     588544.057983       0.102295       0.101074     588544.057983             0.0                     0.0        49.52533           100.0                1.0                3.0                  1.0             2.949463 -421521.137817              49.52533            294.946289   0.000000          -1.0        0.000000  588544.057983       2.0
1       588593.583313       588544.057983     588593.583313   49525.329590      49.525330     588544.057983             0.0                     0.0        49.52533           100.0                1.0                3.0                  1.0             2.949463 -421470.663330              49.52533            294.946289  49.525330           1.0       -0.000183  588593.583496       2.0
2       588643.108643       588593.633789     588643.108643   49574.854919      49.525330     588593.633789             0.0                     0.0        49.52533           100.0                0.0                1.0                  1.0             2.949463 -421420.188721              49.52533            294.946289  49.474854           0.0       -0.000244  588643.108887       0.0
3       588692.633972       588643.159302     588692.633972   49574.804443      49.525330     588643.159302             0.0                     0.0        49.52533           100.0                0.0                1.0                  1.0             2.949463 -421369.713867              49.52533            294.946289  49.474670           0.0       -0.000061  588692.634033       0.0
4       588742.159302       588692.684631     588742.159302   49574.804260      49.525330     588692.684631             0.0                     0.0        49.52533           100.0                0.0                1.0                  1.0             2.949463 -421319.239258              49.52533            294.946289  49.474670           0.0       -0.000122  588742.159424       0.0
5       588791.684631       588742.209961     588791.684631   49574.804260      49.525330     588742.209961             0.0                     0.0        49.52533           100.0                0.0                1.0                  1.0             2.949463 -421268.764648              49.52533            294.946289  49.474670           0.0       -0.000183  588791.684814       0.0
6       588841.209961       588791.735107     588841.209961   49574.804260      49.525330     588791.735107             0.0                     0.0        49.52533           100.0                0.0                1.0                  1.0             2.949463 -421218.290039              49.52533            294.946289  49.474854           0.0       -0.000244  588841.210205       0.0
7       588890.735291       588841.260620     588890.735291   49574.804443      49.525330     588841.260620             0.0                     0.0        49.52533           100.0                0.0                1.0                  1.0             2.949463 -421171.087158              49.52533            294.946289  49.474670           0.0       -3.272034  588894.007324       0.0
8       588940.260620       588894.007324     588940.260620   49574.804260      49.525330     588894.007324             0.0                     0.0        49.52533           100.0                0.0                1.0                  1.0             2.949463 -421119.524902              49.52533            294.946289  46.253296           0.0       -2.184448  588942.445068       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=207/4096, buf_size=200.[0m
[01/11 06:58:54]  --------------------------------------------------------------------------------
[01/11 06:58:54]  Iteration: 398 (324 solution, 73 counterexamples)
[01/11 07:05:45]  Generator returned sat in 402.658634 secs.
[01/11 07:05:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 07:06:02]  Verifer returned unsat in 16.770671 secs.
[01/11 07:06:02]  sf_get_cex returned in 16.908798 secs.
[01/11 07:06:02]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 07:06:02]  --------------------------------------------------------------------------------
[01/11 07:06:02]  Iteration: 399 (325 solution, 73 counterexamples)
[01/11 07:08:45]  Generator returned sat in 154.566863 secs.
[01/11 07:08:46]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:08:56]  Verifer returned unsat in 9.631107 secs.
[01/11 07:08:56]  sf_get_cex returned in 9.755370 secs.
[01/11 07:08:56]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:08:56]  --------------------------------------------------------------------------------
[01/11 07:08:56]  Iteration: 400 (326 solution, 73 counterexamples)
[01/11 07:11:34]  Generator returned sat in 150.186822 secs.
[01/11 07:11:35]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:11:46]  Verifer returned unsat in 10.895084 secs.
[01/11 07:11:46]  sf_get_cex returned in 11.020404 secs.
[01/11 07:11:46]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:11:46]  --------------------------------------------------------------------------------
[01/11 07:11:46]  Iteration: 401 (327 solution, 73 counterexamples)
[01/11 07:14:23]  Generator returned sat in 148.735198 secs.
[01/11 07:14:24]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:14:30]  Verifer returned unsat in 6.609762 secs.
[01/11 07:14:30]  sf_get_cex returned in 6.734752 secs.
[01/11 07:14:30]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:14:30]  --------------------------------------------------------------------------------
[01/11 07:14:30]  Iteration: 402 (328 solution, 73 counterexamples)
[01/11 07:17:08]  Generator returned sat in 148.903182 secs.
[01/11 07:17:08]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:17:23]  Verifer returned unsat in 14.660614 secs.
[01/11 07:17:23]  sf_get_cex returned in 14.799486 secs.
[01/11 07:17:23]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:17:23]  --------------------------------------------------------------------------------
[01/11 07:17:23]  Iteration: 403 (329 solution, 73 counterexamples)
[01/11 07:20:00]  Generator returned sat in 149.029377 secs.
[01/11 07:20:01]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:20:06]  Verifer returned unsat in 5.386497 secs.
[01/11 07:20:06]  sf_get_cex returned in 5.516794 secs.
[01/11 07:20:06]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:20:07]  --------------------------------------------------------------------------------
[01/11 07:20:07]  Iteration: 404 (330 solution, 73 counterexamples)
[01/11 07:22:46]  Generator returned sat in 151.054364 secs.
[01/11 07:22:47]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:22:55]  Verifer returned unsat in 8.434454 secs.
[01/11 07:22:55]  sf_get_cex returned in 8.561174 secs.
[01/11 07:22:55]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:22:55]  --------------------------------------------------------------------------------
[01/11 07:22:55]  Iteration: 405 (331 solution, 73 counterexamples)
[01/11 07:25:35]  Generator returned sat in 151.482318 secs.
[01/11 07:25:36]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:25:44]  Verifer returned unsat in 7.961360 secs.
[01/11 07:25:44]  sf_get_cex returned in 8.091005 secs.
[01/11 07:25:44]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:25:44]  --------------------------------------------------------------------------------
[01/11 07:25:44]  Iteration: 406 (332 solution, 73 counterexamples)
[01/11 07:28:24]  Generator returned sat in 151.797243 secs.
[01/11 07:28:25]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:28:29]  Verifer returned unsat in 4.556174 secs.
[01/11 07:28:29]  sf_get_cex returned in 4.683762 secs.
[01/11 07:28:29]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + -1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:28:30]  --------------------------------------------------------------------------------
[01/11 07:28:30]  Iteration: 407 (333 solution, 73 counterexamples)
[01/11 07:31:09]  Generator returned sat in 151.149217 secs.
[01/11 07:31:10]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 07:31:26]  Verifer returned unsat in 15.690585 secs.
[01/11 07:31:26]  sf_get_cex returned in 15.817457 secs.
[01/11 07:31:26]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1max_buffer + 4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 07:31:26]  --------------------------------------------------------------------------------
[01/11 07:31:26]  Iteration: 408 (334 solution, 73 counterexamples)
[01/11 07:34:09]  Generator returned sat in 154.692880 secs.
[01/11 07:34:09]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 07:34:16]  Verifer returned unsat in 6.590959 secs.
[01/11 07:34:16]  sf_get_cex returned in 6.717537 secs.
[01/11 07:34:16]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1max_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 07:34:16]  --------------------------------------------------------------------------------
[01/11 07:34:16]  Iteration: 409 (335 solution, 73 counterexamples)
[01/11 07:37:01]  Generator returned sat in 156.519683 secs.
[01/11 07:37:01]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 07:37:17]  Improved gap from 37.5 to 48.4375
[01/11 07:37:17]  Improved number of small numbers from 128 to 165 out of a max of 165
[01/11 07:37:17]  Verifer returned sat in 15.452764 secs.
[01/11 07:37:17]  sf_get_cex returned in 15.577835 secs.
[01/11 07:37:17]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0       182194.074219       182183.541016     182194.074219       0.102295       0.101074     182183.541016             0.0                     0.0            54.5      102.999756                0.0                1.0                  0.0                  3.0 -375214.459473                   0.0            308.999268  10.533203          -1.0       10.532959  182183.541260       0.0
1       182242.562256       182183.591797     182242.562256   48498.570312      48.488037     182183.591797             0.0                     0.0            54.5      102.999756                0.0                2.0                  0.0                  3.0 -375173.632080                   0.0            308.999268  58.970459           0.0       -0.151611  182242.713867       1.0
2       182291.050293       182242.713867     182291.050293   48547.007568      48.488037     182242.713867             0.0                     0.0            54.5      102.999756                0.0                1.0                  0.0                  3.0 -375122.069580                   0.0            308.999268  48.336426           0.0       -0.101074  182291.151367       0.0
3       182339.538330       182291.151367     182339.538330   48536.373535      48.488037     182291.151367             0.0                     0.0            54.5      102.999756                0.0                1.0                  0.0                  3.0 -375070.507080                   0.0            308.999268  48.386963           0.0       -0.050537  182339.588867       0.0
4       182388.026367       182339.588867     182388.026367   48536.424072      48.488037     182339.588867             0.0                     0.0            54.5      102.999756                0.0                1.0                  0.0                  3.0 -375018.944580                   0.0            308.999268  48.437500           0.0        0.000000  182388.026367       0.0
5       182436.514404       182388.026367     182436.514404   48536.474609      48.488037     182388.026367             0.0                     0.0            54.5      102.999756                0.0                2.0                  0.0                  3.0 -374967.432617                   0.0            308.999268  48.488037           0.0        0.000000  182436.514404       1.0
6       182485.002441       182436.514404     182485.002441   48536.525146      48.488037     182436.514404             0.0                     0.0            54.5      102.999756                0.0                2.0                  0.0                  3.0 -374915.920654                   0.0            308.999268  48.488037           0.0        0.000000  182485.002441       1.0
7       182533.490479       182485.002441     182533.490479   48536.525146      48.488037     182485.002441             0.0                     0.0            54.5      102.999756                0.0                2.0                  0.0                  3.0 -374864.408691                   0.0            308.999268  48.488037           0.0        0.000000  182533.490479       1.0
8       182581.978516       182533.490479     182581.978516   48536.525146      48.488037     182533.490479             0.0                     0.0            54.5      102.999756                0.0                2.0                  0.0                  3.0 -374864.408691                   0.0            308.999268  48.488037           0.0      -51.511963  182633.490479       1.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=24625/4096, buf_size=200.[0m
[01/11 07:37:17]  --------------------------------------------------------------------------------
[01/11 07:37:17]  Iteration: 410 (335 solution, 74 counterexamples)
[01/11 07:39:13]  Generator returned sat in 106.918100 secs.
[01/11 07:39:13]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ 2min_c + -1max_c + -5 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 07:39:20]  Improved gap from 99.06317138671875 to 100
[01/11 07:39:22]  Improved number of small numbers from 86 to 97 out of a max of 165
[01/11 07:39:22]  Verifer returned sat in 8.450088 secs.
[01/11 07:39:22]  sf_get_cex returned in 8.574488 secs.
[01/11 07:39:22]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t    upper_S_t  qdelay_t
0        -5661.429165        -5761.328091      -5661.429165       0.102295       0.101074      -5761.328091        0.000000                0.000000       96.818278      188.636719                2.0                4.0                  2.0                  3.0 -375224.840871            193.636556            565.910156   99.898926          -1.0        6.363444 -5667.792609       3.0
1        -5564.610887        -5661.429165      -5564.610887   96918.176921      96.818278      -5661.429165        0.000000                0.000000       96.818278      188.636719                2.0                4.0                  2.0                  3.0 -375224.840871            193.636556            565.910156   96.818278           1.0        3.181722 -5567.792609       3.0
2        -5467.792609        -5567.792609      -5467.792609   96915.096273      96.818278      -5567.792609        0.000000                0.000000       96.818278      188.636719                0.0                2.0                  2.0                  3.0 -375224.840871            193.636556            565.910156  100.000000           0.0        0.000000 -5467.792609       1.0
3        -5274.156053        -5467.792609      -5274.156053  193736.555990     193.636556      -5467.792609        0.000000                0.000000       96.818278      188.636719                0.0                2.0                  2.0                  3.0 -375224.840871            193.636556            565.910156  193.636556           0.0       93.636556 -5367.792609       1.0
4        -5080.519497        -5277.489386      -5080.519497  193830.192546     193.636556      -5277.489386        0.000000                0.000000       96.818278      188.636719                0.0                2.0                  2.0                  3.0 -375224.840871            193.636556            565.910156  196.969889           0.0      187.273112 -5267.792609       1.0
5        -4886.882941        -5267.792609      -4886.882941  193833.525879     193.636556      -5267.792609       80.909668                0.000000       96.818278      188.636719                0.0                2.0                  2.0                  3.0 -375224.840871            193.636556            565.910156  300.000000           0.0      200.000000 -5167.792609       1.0
6        -4693.246385        -5167.792609      -4693.246385  194017.465658     193.636556      -5167.792609      174.546224               80.909668       96.818278      188.636719                1.0                3.0                  2.0                  3.0 -375224.840871            193.636556            565.910156  300.000000           1.0      200.000000 -5067.792609       2.0
7        -4499.609829        -5067.792609      -4499.609829  194111.102214     193.636556      -5067.792609      268.182780              174.546224       96.818278      188.636719                1.0                3.0                  2.0                  3.0 -375224.840871            193.636556            565.910156  300.000000           1.0      200.000000 -4967.792609       2.0
8        -4305.973273        -4890.418457      -4305.973273  194204.738770     193.636556      -4890.418457      361.819336              268.182780       96.818278      188.636719                1.0                3.0                  2.0                  3.0 -375224.840871            193.636556            565.910156  222.625848           1.0      200.000000 -4867.792609       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, 
, large_loss_count=4, loss_amount=370503/1024, beliefs_improve=False, alpha=5107/256, buf_size=200.[0m
[01/11 07:39:22]  --------------------------------------------------------------------------------
[01/11 07:39:22]  Iteration: 411 (335 solution, 75 counterexamples)
[01/11 07:43:25]  Generator returned sat in 234.708580 secs.
[01/11 07:43:26]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:43:33]  Verifer returned unsat in 7.530738 secs.
[01/11 07:43:33]  sf_get_cex returned in 7.656718 secs.
[01/11 07:43:33]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:43:33]  --------------------------------------------------------------------------------
[01/11 07:43:33]  Iteration: 412 (336 solution, 75 counterexamples)
[01/11 07:46:15]  Generator returned sat in 153.113335 secs.
[01/11 07:46:15]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:46:24]  Verifer returned unsat in 8.336840 secs.
[01/11 07:46:24]  sf_get_cex returned in 8.459780 secs.
[01/11 07:46:24]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:46:24]  --------------------------------------------------------------------------------
[01/11 07:46:24]  Iteration: 413 (337 solution, 75 counterexamples)
[01/11 07:49:04]  Generator returned sat in 151.402665 secs.
[01/11 07:49:04]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:49:24]  Verifer returned unsat in 19.223598 secs.
[01/11 07:49:24]  sf_get_cex returned in 19.355250 secs.
[01/11 07:49:24]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:49:24]  --------------------------------------------------------------------------------
[01/11 07:49:24]  Iteration: 414 (338 solution, 75 counterexamples)
[01/11 07:52:08]  Generator returned sat in 155.983169 secs.
[01/11 07:52:09]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:52:14]  Verifer returned unsat in 5.781327 secs.
[01/11 07:52:14]  sf_get_cex returned in 5.906039 secs.
[01/11 07:52:14]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:52:15]  --------------------------------------------------------------------------------
[01/11 07:52:15]  Iteration: 415 (339 solution, 75 counterexamples)
[01/11 07:54:59]  Generator returned sat in 156.118510 secs.
[01/11 07:55:00]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:55:17]  Verifer returned unsat in 17.280531 secs.
[01/11 07:55:17]  sf_get_cex returned in 17.423022 secs.
[01/11 07:55:17]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:55:17]  --------------------------------------------------------------------------------
[01/11 07:55:17]  Iteration: 416 (340 solution, 75 counterexamples)
[01/11 07:58:02]  Generator returned sat in 155.580527 secs.
[01/11 07:58:02]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:58:05]  Verifer returned unsat in 3.154212 secs.
[01/11 07:58:05]  sf_get_cex returned in 3.282070 secs.
[01/11 07:58:05]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 07:58:06]  --------------------------------------------------------------------------------
[01/11 07:58:06]  Iteration: 417 (341 solution, 75 counterexamples)
[01/11 08:00:48]  Generator returned sat in 154.086182 secs.
[01/11 08:00:49]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:00:58]  Verifer returned unsat in 9.163860 secs.
[01/11 08:00:58]  sf_get_cex returned in 9.290076 secs.
[01/11 08:00:58]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:00:58]  --------------------------------------------------------------------------------
[01/11 08:00:58]  Iteration: 418 (342 solution, 75 counterexamples)
[01/11 08:03:38]  Generator returned sat in 151.529808 secs.
[01/11 08:03:38]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:03:46]  Verifer returned unsat in 6.999609 secs.
[01/11 08:03:46]  sf_get_cex returned in 7.119290 secs.
[01/11 08:03:46]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:03:46]  --------------------------------------------------------------------------------
[01/11 08:03:46]  Iteration: 419 (343 solution, 75 counterexamples)
[01/11 08:06:27]  Generator returned sat in 153.396358 secs.
[01/11 08:06:28]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:06:34]  Verifer returned unsat in 6.171558 secs.
[01/11 08:06:34]  sf_get_cex returned in 6.290150 secs.
[01/11 08:06:34]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 3/2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:06:34]  --------------------------------------------------------------------------------
[01/11 08:06:34]  Iteration: 420 (344 solution, 75 counterexamples)
[01/11 08:09:17]  Generator returned sat in 154.506011 secs.
[01/11 08:09:18]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:09:31]  Verifer returned unsat in 13.059401 secs.
[01/11 08:09:31]  sf_get_cex returned in 13.181318 secs.
[01/11 08:09:31]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 7 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:09:31]  --------------------------------------------------------------------------------
[01/11 08:09:31]  Iteration: 421 (345 solution, 75 counterexamples)
[01/11 08:12:26]  Generator returned sat in 167.133020 secs.
[01/11 08:12:27]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:12:33]  Verifer returned unsat in 5.851729 secs.
[01/11 08:12:33]  sf_get_cex returned in 5.972428 secs.
[01/11 08:12:33]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:12:33]  --------------------------------------------------------------------------------
[01/11 08:12:33]  Iteration: 422 (346 solution, 75 counterexamples)
[01/11 08:13:58]  Generator returned sat in 76.812670 secs.
[01/11 08:13:58]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:14:07]  Verifer returned unsat in 8.342144 secs.
[01/11 08:14:07]  sf_get_cex returned in 8.463734 secs.
[01/11 08:14:07]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:14:07]  --------------------------------------------------------------------------------
[01/11 08:14:07]  Iteration: 423 (347 solution, 75 counterexamples)
[01/11 08:15:32]  Generator returned sat in 76.415536 secs.
[01/11 08:15:32]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:15:40]  Verifer returned unsat in 7.689827 secs.
[01/11 08:15:40]  sf_get_cex returned in 7.811031 secs.
[01/11 08:15:40]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:15:40]  --------------------------------------------------------------------------------
[01/11 08:15:40]  Iteration: 424 (348 solution, 75 counterexamples)
[01/11 08:17:05]  Generator returned sat in 77.012028 secs.
[01/11 08:17:06]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:17:13]  Verifer returned unsat in 7.130569 secs.
[01/11 08:17:13]  sf_get_cex returned in 7.252136 secs.
[01/11 08:17:13]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:17:13]  --------------------------------------------------------------------------------
[01/11 08:17:13]  Iteration: 425 (349 solution, 75 counterexamples)
[01/11 08:18:41]  Generator returned sat in 79.561563 secs.
[01/11 08:18:41]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:18:49]  Verifer returned unsat in 6.988307 secs.
[01/11 08:18:49]  sf_get_cex returned in 7.109418 secs.
[01/11 08:18:49]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 7 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:18:49]  --------------------------------------------------------------------------------
[01/11 08:18:49]  Iteration: 426 (350 solution, 75 counterexamples)
[01/11 08:20:13]  Generator returned sat in 75.823422 secs.
[01/11 08:20:13]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:20:25]  Verifer returned unsat in 11.711766 secs.
[01/11 08:20:25]  sf_get_cex returned in 11.836212 secs.
[01/11 08:20:25]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + -1min_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:20:25]  --------------------------------------------------------------------------------
[01/11 08:20:25]  Iteration: 427 (351 solution, 75 counterexamples)
[01/11 08:21:50]  Generator returned sat in 76.348337 secs.
[01/11 08:21:50]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:21:56]  Verifer returned unsat in 5.837680 secs.
[01/11 08:21:56]  sf_get_cex returned in 5.972347 secs.
[01/11 08:21:56]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 8 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:21:56]  --------------------------------------------------------------------------------
[01/11 08:21:56]  Iteration: 428 (352 solution, 75 counterexamples)
[01/11 08:23:21]  Generator returned sat in 75.962966 secs.
[01/11 08:23:21]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + -1max_buffer + 9 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 08:23:38]  Improved gap from 0.050537109375 to 48.4375
[01/11 08:23:39]  Improved number of small numbers from 119 to 165 out of a max of 165
[01/11 08:23:39]  Verifer returned sat in 17.620630 secs.
[01/11 08:23:39]  sf_get_cex returned in 17.742755 secs.
[01/11 08:23:39]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t      upper_S_t  qdelay_t
0      -138249.595703      -138257.941406    -138249.595703       0.102051       0.101074    -138257.941406        0.050537                0.000000       97.601074      185.201904                1.0                3.0                  1.0                  8.0 -504953.722656             97.601074           1481.615234   8.295166          -1.0        8.294922 -138257.941162       2.0
1      -138200.795166      -138257.890625    -138200.795166   48808.882812      48.800537    -138257.890625        0.050537                0.050537       97.601074      185.201904                1.0                3.0                  1.0                  8.0 -504910.818115             97.601074           1481.615234  57.044922           1.0        0.000000 -138200.845703       2.0
2      -138151.994629      -138200.845703    -138151.994629   48857.632568      48.800537    -138200.845703        0.050537                0.050537       97.601074      185.201904                0.0                2.0                  1.0                  8.0 -504859.669189             97.601074           1481.615234  48.800537           0.0       -0.050537 -138151.994629       1.0
3      -138103.194092      -138151.994385    -138103.194092   48849.388184      48.800537    -138151.994385        0.050537                0.050537       97.601074      185.201904                0.0                1.0                  1.0                  8.0 -504808.419189             97.601074           1481.615234  48.749756           0.0        0.000000 -138103.244629       0.0
4      -138054.393555      -138103.244629    -138054.393555   48849.337402      48.800537    -138103.244629        0.050537                0.050537       97.601074      185.201904                0.0                2.0                  1.0                  8.0 -504757.270264             97.601074           1481.615234  48.800537           0.0       -0.050537 -138054.393555       1.0
5      -138005.593018      -138054.393555    -138005.593018   48849.388184      48.800537    -138054.393555        0.050537                0.050537       97.601074      185.201904                0.0                1.0                  1.0                  8.0 -504706.020264             97.601074           1481.615234  48.750000           0.0        0.000000 -138005.643555       0.0
6      -137956.792480      -138005.643555    -137956.792480   48849.337646      48.800537    -138005.643555        0.050537                0.050537       97.601074      185.201904                0.0                2.0                  1.0                  8.0 -504654.820801             97.601074           1481.615234  48.800537           0.0        0.000000 -137956.843018       1.0
7      -137907.991943      -137956.843018    -137907.991943   48849.388184      48.800537    -137956.843018        0.050537                0.050537       97.601074      185.201904                0.0                2.0                  1.0                  8.0 -504603.621582             97.601074           1481.615234  48.800537           0.0       -0.000244 -137908.042236       1.0
8      -137859.191406      -137907.991699    -137859.191406   48849.388184      48.800537    -137907.991699        0.050537                0.050537       97.601074      185.201904                0.0                1.0                  1.0                  8.0 -504603.621338             97.601074           1481.615234  48.749756           0.0      -51.199463 -137808.042480       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=103/2048, buf_size=200.[0m
[01/11 08:23:39]  --------------------------------------------------------------------------------
[01/11 08:23:39]  Iteration: 429 (352 solution, 76 counterexamples)
[01/11 08:27:24]  Generator returned sat in 216.142405 secs.
[01/11 08:27:24]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:27:46]  Improved gap from 0.0758056640625 to 21.875
[01/11 08:27:46]  Improved number of small numbers from 150 to 165 out of a max of 165
[01/11 08:27:46]  Verifer returned sat in 21.879931 secs.
[01/11 08:27:46]  sf_get_cex returned in 22.001551 secs.
[01/11 08:27:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t    queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        37705.488770        37705.438232      37705.488770       0.102051       0.101074      37705.438232             0.0                     0.0       19.898682           100.0                1.0                3.0                  1.0                  2.0 -505222.959229             19.898682                 200.0   0.050537          -1.0        0.000000  37705.488770       2.0
1        37725.438232        37705.488770      37725.438232   19949.513428      19.949463      37705.488770             0.0                     0.0       19.898682           100.0                0.0                2.0                  1.0                  2.0 -505150.496338             19.898682                 200.0  19.949463           0.0       -7.587646  37733.025879       1.0
2        37745.387695        37733.025879      37745.387695   19969.412354      19.949463      37733.025879             0.0                     0.0       19.898682           100.0                0.0                1.0                  1.0                  2.0 -505072.371338             19.898682                 200.0  12.361816           0.0       -9.513184  37754.900879       0.0
3        37765.337158        37754.900879      37765.337158   19961.824707      19.949463      37754.900879             0.0                     0.0       19.898682           100.0                0.0                1.0                  1.0                  2.0 -504994.246338             19.898682                 200.0  10.436279           0.0      -11.438721  37776.775879       0.0
4        37785.286621        37776.775879      37785.286621   19959.899170      19.949463      37776.775879             0.0                     0.0       19.898682           100.0                0.0                1.0                  1.0                  2.0 -504916.121338             19.898682                 200.0   8.510742           0.0      -13.364258  37798.650879       0.0
5        37805.236084        37798.650879      37805.236084   19957.973633      19.949463      37798.650879             0.0                     0.0       19.898682           100.0                0.0                1.0                  1.0                  2.0 -504837.996338             19.898682                 200.0   6.585205           0.0      -15.289795  37820.525879       0.0
6        37825.185547        37820.525879      37825.185547   19956.048096      19.949463      37820.525879             0.0                     0.0       19.898682           100.0                0.0                1.0                  1.0                  2.0 -504759.871338             19.898682                 200.0   4.659668           0.0      -17.215332  37842.400879       0.0
7        37845.135010        37842.400879      37845.135010   19954.122559      19.949463      37842.400879             0.0                     0.0       19.898682           100.0                0.0                1.0                  1.0                  2.0 -504681.746338             19.898682                 200.0   2.734131           0.0      -19.140869  37864.275879       0.0
8        37865.084473        37864.275879      37865.084473   19952.197021      19.949463      37864.275879             0.0                     0.0       19.898682           100.0                0.0                1.0                  1.0                  2.0 -504603.621582             19.898682                 200.0   0.808594           0.0      -21.066650  37886.151123       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_improve=False, alpha=81713/4096, buf_size=200.[0m
[01/11 08:27:46]  --------------------------------------------------------------------------------
[01/11 08:27:46]  Iteration: 430 (352 solution, 77 counterexamples)
[01/11 08:32:08]  Generator returned sat in 253.649857 secs.
[01/11 08:32:09]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_qdel + 1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + 1alpha)[0m
[01/11 08:32:18]  Improved number of small numbers from 117 to 164 out of a max of 164
[01/11 08:32:18]  Verifer returned sat in 9.486504 secs.
[01/11 08:32:19]  sf_get_cex returned in 9.608881 secs.
[01/11 08:32:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0      -234944.942627      -235244.992920    -234944.942627       0.101807       0.101074    -235244.992920        0.050293                0.000000           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  300.000000          -1.0           200.0 -235144.99292       3.0
1      -234826.993164      -235082.707275    -234826.993164  118249.513184     117.949463    -235082.707275       17.999756                0.050293           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  237.714355           1.0           200.0 -235044.99292       3.0
2      -234709.043701      -234976.421631    -234709.043701  118205.177002     117.949463    -234976.421631       35.949219               17.999756           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  231.428711           1.0           200.0 -234944.99292       3.0
3      -234591.094238      -234944.992920    -234591.094238  118216.840820     117.949463    -234944.992920       53.898682               35.949219           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  300.000000           1.0           200.0 -234844.99292       3.0
4      -234473.144775      -234844.992920    -234473.144775  118303.361572     117.949463    -234844.992920       71.848145               53.898682           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  300.000000           1.0           200.0 -234744.99292       3.0
5      -234355.195312      -234744.992920    -234355.195312  118321.311035     117.949463    -234744.992920       89.797607               71.848145           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  300.000000           1.0           200.0 -234644.99292       3.0
6      -234237.245850      -234644.992920    -234237.245850  118339.260498     117.949463    -234644.992920      107.747070               89.797607           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  300.000000           1.0           200.0 -234544.99292       3.0
7      -234119.296387      -234544.992920    -234119.296387  118357.209961     117.949463    -234544.992920      125.696533              107.747070           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  300.000000           1.0           200.0 -234444.99292       3.0
8      -234001.346924      -234444.992920    -234001.346924  118375.159424     117.949463    -234444.992920      143.645996              125.696533           100.0      106.235107                2.0                4.0                  2.0                  2.0 -505072.371582                 200.0            212.470215  300.000000           1.0           200.0 -234344.99292       3.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=514647/4096, beliefs_improve=False, alpha=73521/4096, buf_size=200.[0m
[01/11 08:32:19]  --------------------------------------------------------------------------------
[01/11 08:32:19]  Iteration: 431 (352 solution, 78 counterexamples)
[01/11 08:38:51]  Generator returned sat in 384.136082 secs.
[01/11 08:38:52]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:38:57]  Verifer returned unsat in 4.979755 secs.
[01/11 08:38:57]  sf_get_cex returned in 5.101750 secs.
[01/11 08:38:57]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:38:57]  --------------------------------------------------------------------------------
[01/11 08:38:57]  Iteration: 432 (353 solution, 78 counterexamples)
[01/11 08:42:13]  Generator returned sat in 186.934118 secs.
[01/11 08:42:13]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:42:25]  Verifer returned unsat in 11.816015 secs.
[01/11 08:42:25]  sf_get_cex returned in 11.955392 secs.
[01/11 08:42:25]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:42:26]  --------------------------------------------------------------------------------
[01/11 08:42:26]  Iteration: 433 (354 solution, 78 counterexamples)
[01/11 08:44:09]  Generator returned sat in 94.630840 secs.
[01/11 08:44:10]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:44:43]  Verifer returned unsat in 32.983104 secs.
[01/11 08:44:43]  sf_get_cex returned in 33.113775 secs.
[01/11 08:44:43]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 2min_c + -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:44:43]  --------------------------------------------------------------------------------
[01/11 08:44:43]  Iteration: 434 (355 solution, 78 counterexamples)
[01/11 08:48:09]  Generator returned sat in 197.532660 secs.
[01/11 08:48:10]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:48:20]  Verifer returned unsat in 10.376292 secs.
[01/11 08:48:20]  sf_get_cex returned in 10.502932 secs.
[01/11 08:48:20]  Proved solution: 
[1m[92mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:48:20]  --------------------------------------------------------------------------------
[01/11 08:48:20]  Iteration: 435 (356 solution, 78 counterexamples)
[01/11 08:51:34]  Generator returned sat in 184.752337 secs.
[01/11 08:51:35]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:51:51]  Verifer returned unsat in 15.725514 secs.
[01/11 08:51:51]  sf_get_cex returned in 15.864166 secs.
[01/11 08:51:51]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + -1/2max_c + -2 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 2min_c)[0m
[01/11 08:51:51]  --------------------------------------------------------------------------------
[01/11 08:51:51]  Iteration: 436 (357 solution, 78 counterexamples)
[01/11 08:54:40]  Generator returned sat in 160.477726 secs.
[01/11 08:54:41]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 08:54:58]  Verifer returned unsat in 17.656148 secs.
[01/11 08:54:58]  sf_get_cex returned in 17.783387 secs.
[01/11 08:54:58]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + 6 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c + -1alpha)[0m
[01/11 08:54:59]  --------------------------------------------------------------------------------
[01/11 08:54:59]  Iteration: 437 (358 solution, 78 counterexamples)
[01/11 08:58:07]  Generator returned sat in 179.500357 secs.
[01/11 08:58:08]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 6 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -3/2min_c + 1max_c + -8 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 08:58:14]  Improved number of small numbers from 118 to 164 out of a max of 164
[01/11 08:58:14]  Verifer returned sat in 6.204351 secs.
[01/11 08:58:14]  sf_get_cex returned in 6.342994 secs.
[01/11 08:58:14]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  adv__max_qdel_0,t  adv__min_buffer_0,t  adv__max_buffer_0,t  adv__wasted_t  min_buffer_bytes_0,t  max_buffer_bytes_0,t     queue_t  utilized_0,t  bottle_queue_t     upper_S_t  qdelay_t
0        98590.253418        98399.405029      98590.253418       0.101562       0.101074      98399.405029        0.000000                0.000000            97.0      153.550537                2.0                4.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  190.848389          -1.0      190.848389  98399.405029       3.0
1        98693.303955        98499.405029      98693.303955  103241.385498     103.050537      98499.405029        0.000000                0.000000            97.0      153.550537                1.0                3.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  193.898926           1.0      193.898926  98499.405029       2.0
2        98796.354492        98599.405029      98796.354492  103244.436035     103.050537      98599.405029        0.000000                0.000000            97.0      153.550537                0.0                2.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  196.949463           0.0      196.949463  98599.405029       1.0
3        98899.405029        98699.405029      98899.405029  103247.486572     103.050537      98699.405029        0.000000                0.000000            97.0      153.550537                0.0                2.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  200.000000           0.0      200.000000  98699.405029       1.0
4        99002.455566        98699.405029      99002.455566  103250.537109     103.050537      98699.405029        3.050537                0.000000            97.0      153.550537                0.0                2.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  300.000000           0.0      200.000000  98799.405029       1.0
5        99105.506104        98852.955566      99105.506104  103353.587646     103.050537      98852.955566        6.101074                3.050537            97.0      153.550537                1.0                3.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  246.449463           1.0      200.000000  98899.405029       2.0
6        99208.556641        98990.253418      99208.556641  103303.087646     103.050537      98990.253418        9.151611                6.101074            97.0      153.550537                1.0                3.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  209.151611           1.0      200.000000  98999.405029       2.0
7        99311.607178        99006.506104      99311.607178  103268.840332     103.050537      99006.506104       12.202148                9.151611            97.0      153.550537                1.0                3.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  292.898926           1.0      200.000000  99099.405029       2.0
8        99414.657715        99160.056641      99414.657715  103355.638184     103.050537      99160.056641       15.252686               12.202148            97.0      153.550537                1.0                3.0                  2.0             2.050537 -505029.514404                 194.0            314.861075  239.348389           1.0      200.000000  99199.405029       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=62475/4096, beliefs_improve=False, alpha=24783/4096, buf_size=200.[0m
[01/11 08:58:14]  --------------------------------------------------------------------------------
[01/11 08:58:14]  Iteration: 438 (358 solution, 79 counterexamples)
[01/11 09:02:51]  Generator returned sat in 267.429087 secs.
[01/11 09:02:51]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:02:58]  Verifer returned unsat in 6.501431 secs.
[01/11 09:02:58]  sf_get_cex returned in 6.618689 secs.
[01/11 09:02:58]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -2min_c + 1max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:02:58]  --------------------------------------------------------------------------------
[01/11 09:02:58]  Iteration: 439 (359 solution, 79 counterexamples)
[01/11 09:06:04]  Generator returned sat in 177.755041 secs.
[01/11 09:06:05]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:06:12]  Verifer returned unsat in 7.534032 secs.
[01/11 09:06:12]  sf_get_cex returned in 7.663586 secs.
[01/11 09:06:12]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:06:13]  --------------------------------------------------------------------------------
[01/11 09:06:13]  Iteration: 440 (360 solution, 79 counterexamples)
[01/11 09:09:47]  Generator returned sat in 205.732460 secs.
[01/11 09:09:48]  Candidate solution: 
[1m[94mif (+ -1/2min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:10:10]  Verifer returned unsat in 22.548937 secs.
[01/11 09:10:10]  sf_get_cex returned in 22.675346 secs.
[01/11 09:10:10]  Proved solution: 
[1m[92mif (+ -1/2min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:10:10]  --------------------------------------------------------------------------------
[01/11 09:10:10]  Iteration: 441 (361 solution, 79 counterexamples)
[01/11 09:13:51]  Generator returned sat in 211.157529 secs.
[01/11 09:13:51]  Candidate solution: 
[1m[94mif (+ -1min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:13:57]  Verifer returned unsat in 5.694047 secs.
[01/11 09:13:57]  sf_get_cex returned in 5.821926 secs.
[01/11 09:13:57]  Proved solution: 
[1m[92mif (+ -1min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:13:57]  --------------------------------------------------------------------------------
[01/11 09:13:57]  Iteration: 442 (362 solution, 79 counterexamples)
[01/11 09:17:37]  Generator returned sat in 211.297823 secs.
[01/11 09:17:38]  Candidate solution: 
[1m[94mif (+ -3/2min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:18:04]  Verifer returned unsat in 25.621294 secs.
[01/11 09:18:04]  sf_get_cex returned in 25.745595 secs.
[01/11 09:18:04]  Proved solution: 
[1m[92mif (+ -3/2min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:18:04]  --------------------------------------------------------------------------------
[01/11 09:18:04]  Iteration: 443 (363 solution, 79 counterexamples)
[01/11 09:21:42]  Generator returned sat in 208.931398 secs.
[01/11 09:21:42]  Candidate solution: 
[1m[94mif (+ -2min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:21:47]  Verifer returned unsat in 4.731723 secs.
[01/11 09:21:47]  sf_get_cex returned in 4.869912 secs.
[01/11 09:21:47]  Proved solution: 
[1m[92mif (+ -2min_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:21:47]  --------------------------------------------------------------------------------
[01/11 09:21:47]  Iteration: 444 (364 solution, 79 counterexamples)
[01/11 09:25:20]  Generator returned sat in 204.296575 secs.
[01/11 09:25:21]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:25:31]  Verifer returned unsat in 9.838519 secs.
[01/11 09:25:31]  sf_get_cex returned in 9.958445 secs.
[01/11 09:25:31]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:25:31]  --------------------------------------------------------------------------------
[01/11 09:25:31]  Iteration: 445 (365 solution, 79 counterexamples)
[01/11 09:29:04]  Generator returned sat in 204.490859 secs.
[01/11 09:29:05]  Candidate solution: 
[1m[94mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:29:10]  Verifer returned unsat in 4.892242 secs.
[01/11 09:29:10]  sf_get_cex returned in 5.013377 secs.
[01/11 09:29:10]  Proved solution: 
[1m[92mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:29:10]  --------------------------------------------------------------------------------
[01/11 09:29:10]  Iteration: 446 (366 solution, 79 counterexamples)
[01/11 09:32:40]  Generator returned sat in 201.854132 secs.
[01/11 09:32:41]  Candidate solution: 
[1m[94mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:32:49]  Verifer returned unsat in 7.983499 secs.
[01/11 09:32:49]  sf_get_cex returned in 8.107993 secs.
[01/11 09:32:49]  Proved solution: 
[1m[92mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:32:49]  --------------------------------------------------------------------------------
[01/11 09:32:49]  Iteration: 447 (367 solution, 79 counterexamples)
[01/11 09:36:21]  Generator returned sat in 203.092954 secs.
[01/11 09:36:22]  Candidate solution: 
[1m[94mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:36:29]  Verifer returned unsat in 6.916534 secs.
[01/11 09:36:29]  sf_get_cex returned in 7.042044 secs.
[01/11 09:36:29]  Proved solution: 
[1m[92mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:36:29]  --------------------------------------------------------------------------------
[01/11 09:36:29]  Iteration: 448 (368 solution, 79 counterexamples)
[01/11 09:40:00]  Generator returned sat in 202.612905 secs.
[01/11 09:40:01]  Candidate solution: 
[1m[94mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:40:23]  Verifer returned unsat in 21.875118 secs.
[01/11 09:40:23]  sf_get_cex returned in 22.012559 secs.
[01/11 09:40:23]  Proved solution: 
[1m[92mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:40:23]  --------------------------------------------------------------------------------
[01/11 09:40:23]  Iteration: 449 (369 solution, 79 counterexamples)
[01/11 09:43:54]  Generator returned sat in 202.433579 secs.
[01/11 09:43:55]  Candidate solution: 
[1m[94mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:44:04]  Verifer returned unsat in 9.013485 secs.
[01/11 09:44:04]  sf_get_cex returned in 9.153437 secs.
[01/11 09:44:04]  Proved solution: 
[1m[92mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:44:04]  --------------------------------------------------------------------------------
[01/11 09:44:04]  Iteration: 450 (370 solution, 79 counterexamples)
[01/11 09:47:35]  Generator returned sat in 202.578907 secs.
[01/11 09:47:36]  Candidate solution: 
[1m[94mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:47:43]  Verifer returned unsat in 6.652181 secs.
[01/11 09:47:43]  sf_get_cex returned in 6.777739 secs.
[01/11 09:47:43]  Proved solution: 
[1m[92mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:47:43]  --------------------------------------------------------------------------------
[01/11 09:47:43]  Iteration: 451 (371 solution, 79 counterexamples)
[01/11 09:51:15]  Generator returned sat in 203.557815 secs.
[01/11 09:51:16]  Candidate solution: 
[1m[94mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:51:27]  Verifer returned unsat in 10.867087 secs.
[01/11 09:51:27]  sf_get_cex returned in 10.996017 secs.
[01/11 09:51:27]  Proved solution: 
[1m[92mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:51:27]  --------------------------------------------------------------------------------
[01/11 09:51:27]  Iteration: 452 (372 solution, 79 counterexamples)
[01/11 09:55:05]  Generator returned sat in 209.270743 secs.
[01/11 09:55:06]  Candidate solution: 
[1m[94mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:55:10]  Verifer returned unsat in 3.913756 secs.
[01/11 09:55:10]  sf_get_cex returned in 4.036578 secs.
[01/11 09:55:10]  Proved solution: 
[1m[92mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:55:10]  --------------------------------------------------------------------------------
[01/11 09:55:10]  Iteration: 453 (373 solution, 79 counterexamples)
[01/11 09:58:47]  Generator returned sat in 207.990442 secs.
[01/11 09:58:47]  Candidate solution: 
[1m[94mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:58:56]  Verifer returned unsat in 8.653195 secs.
[01/11 09:58:56]  sf_get_cex returned in 8.779529 secs.
[01/11 09:58:56]  Proved solution: 
[1m[92mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 09:58:56]  --------------------------------------------------------------------------------
[01/11 09:58:56]  Iteration: 454 (374 solution, 79 counterexamples)
[01/11 10:02:29]  Generator returned sat in 203.408920 secs.
[01/11 10:02:29]  Candidate solution: 
[1m[94mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:02:42]  Verifer returned unsat in 12.587513 secs.
[01/11 10:02:42]  sf_get_cex returned in 12.714291 secs.
[01/11 10:02:42]  Proved solution: 
[1m[92mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:02:42]  --------------------------------------------------------------------------------
[01/11 10:02:42]  Iteration: 455 (375 solution, 79 counterexamples)
[01/11 10:06:11]  Generator returned sat in 200.596126 secs.
[01/11 10:06:12]  Candidate solution: 
[1m[94mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:06:17]  Verifer returned unsat in 4.740129 secs.
[01/11 10:06:17]  sf_get_cex returned in 4.862119 secs.
[01/11 10:06:17]  Proved solution: 
[1m[92mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:06:17]  --------------------------------------------------------------------------------
[01/11 10:06:17]  Iteration: 456 (376 solution, 79 counterexamples)
[01/11 10:09:47]  Generator returned sat in 201.359403 secs.
[01/11 10:09:47]  Candidate solution: 
[1m[94mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:09:55]  Verifer returned unsat in 7.564084 secs.
[01/11 10:09:55]  sf_get_cex returned in 7.685426 secs.
[01/11 10:09:55]  Proved solution: 
[1m[92mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:09:55]  --------------------------------------------------------------------------------
[01/11 10:09:55]  Iteration: 457 (377 solution, 79 counterexamples)
[01/11 10:13:23]  Generator returned sat in 199.239950 secs.
[01/11 10:13:24]  Candidate solution: 
[1m[94mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:13:28]  Verifer returned unsat in 4.337388 secs.
[01/11 10:13:28]  sf_get_cex returned in 4.458103 secs.
[01/11 10:13:28]  Proved solution: 
[1m[92mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:13:28]  --------------------------------------------------------------------------------
[01/11 10:13:28]  Iteration: 458 (378 solution, 79 counterexamples)
[01/11 10:17:01]  Generator returned sat in 203.918270 secs.
[01/11 10:17:01]  Candidate solution: 
[1m[94mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:17:13]  Verifer returned unsat in 11.226749 secs.
[01/11 10:17:13]  sf_get_cex returned in 11.347605 secs.
[01/11 10:17:13]  Proved solution: 
[1m[92mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:17:13]  --------------------------------------------------------------------------------
[01/11 10:17:13]  Iteration: 459 (379 solution, 79 counterexamples)
[01/11 10:20:46]  Generator returned sat in 204.674671 secs.
[01/11 10:20:47]  Candidate solution: 
[1m[94mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:20:52]  Verifer returned unsat in 5.162265 secs.
[01/11 10:20:52]  sf_get_cex returned in 5.288243 secs.
[01/11 10:20:52]  Proved solution: 
[1m[92mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:20:52]  --------------------------------------------------------------------------------
[01/11 10:20:52]  Iteration: 460 (380 solution, 79 counterexamples)
[01/11 10:24:28]  Generator returned sat in 207.252494 secs.
[01/11 10:24:29]  Candidate solution: 
[1m[94mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:24:38]  Verifer returned unsat in 9.032689 secs.
[01/11 10:24:38]  sf_get_cex returned in 9.183168 secs.
[01/11 10:24:38]  Proved solution: 
[1m[92mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:24:38]  --------------------------------------------------------------------------------
[01/11 10:24:38]  Iteration: 461 (381 solution, 79 counterexamples)
[01/11 10:28:14]  Generator returned sat in 206.699391 secs.
[01/11 10:28:15]  Candidate solution: 
[1m[94mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:28:21]  Verifer returned unsat in 5.844440 secs.
[01/11 10:28:21]  sf_get_cex returned in 5.970363 secs.
[01/11 10:28:21]  Proved solution: 
[1m[92mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:28:21]  --------------------------------------------------------------------------------
[01/11 10:28:21]  Iteration: 462 (382 solution, 79 counterexamples)
[01/11 10:31:59]  Generator returned sat in 208.813737 secs.
[01/11 10:31:59]  Candidate solution: 
[1m[94mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:32:24]  Verifer returned unsat in 24.904122 secs.
[01/11 10:32:24]  sf_get_cex returned in 25.032720 secs.
[01/11 10:32:24]  Proved solution: 
[1m[92mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:32:24]  --------------------------------------------------------------------------------
[01/11 10:32:24]  Iteration: 463 (383 solution, 79 counterexamples)
[01/11 10:36:04]  Generator returned sat in 210.318173 secs.
[01/11 10:36:04]  Candidate solution: 
[1m[94mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:36:12]  Verifer returned unsat in 7.713477 secs.
[01/11 10:36:12]  sf_get_cex returned in 7.843274 secs.
[01/11 10:36:12]  Proved solution: 
[1m[92mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:36:12]  --------------------------------------------------------------------------------
[01/11 10:36:12]  Iteration: 464 (384 solution, 79 counterexamples)
[01/11 10:39:58]  Generator returned sat in 216.921968 secs.
[01/11 10:39:59]  Candidate solution: 
[1m[94mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:40:07]  Verifer returned unsat in 7.776327 secs.
[01/11 10:40:07]  sf_get_cex returned in 7.909965 secs.
[01/11 10:40:07]  Proved solution: 
[1m[92mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:40:07]  --------------------------------------------------------------------------------
[01/11 10:40:07]  Iteration: 465 (385 solution, 79 counterexamples)
[01/11 10:43:51]  Generator returned sat in 214.797000 secs.
[01/11 10:43:52]  Candidate solution: 
[1m[94mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:43:58]  Verifer returned unsat in 6.309447 secs.
[01/11 10:43:58]  sf_get_cex returned in 6.436400 secs.
[01/11 10:43:58]  Proved solution: 
[1m[92mif (+ -1/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:43:58]  --------------------------------------------------------------------------------
[01/11 10:43:58]  Iteration: 466 (386 solution, 79 counterexamples)
[01/11 10:47:44]  Generator returned sat in 216.419705 secs.
[01/11 10:47:44]  Candidate solution: 
[1m[94mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:48:03]  Verifer returned unsat in 19.023892 secs.
[01/11 10:48:03]  sf_get_cex returned in 19.156096 secs.
[01/11 10:48:03]  Proved solution: 
[1m[92mif (+ -1max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:48:04]  --------------------------------------------------------------------------------
[01/11 10:48:04]  Iteration: 467 (387 solution, 79 counterexamples)
[01/11 10:51:44]  Generator returned sat in 211.338934 secs.
[01/11 10:51:45]  Candidate solution: 
[1m[94mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:51:50]  Verifer returned unsat in 5.052476 secs.
[01/11 10:51:50]  sf_get_cex returned in 5.175279 secs.
[01/11 10:51:50]  Proved solution: 
[1m[92mif (+ -2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:51:50]  --------------------------------------------------------------------------------
[01/11 10:51:50]  Iteration: 468 (388 solution, 79 counterexamples)
[01/11 10:55:31]  Generator returned sat in 212.006003 secs.
[01/11 10:55:31]  Candidate solution: 
[1m[94mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:55:43]  Verifer returned unsat in 11.591758 secs.
[01/11 10:55:43]  sf_get_cex returned in 11.714599 secs.
[01/11 10:55:43]  Proved solution: 
[1m[92mif (+ -3/2max_c + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:55:43]  --------------------------------------------------------------------------------
[01/11 10:55:43]  Iteration: 469 (389 solution, 79 counterexamples)
[01/11 10:59:24]  Generator returned sat in 211.796238 secs.
[01/11 10:59:24]  Candidate solution: 
[1m[94mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:59:31]  Verifer returned unsat in 6.784154 secs.
[01/11 10:59:31]  sf_get_cex returned in 6.908929 secs.
[01/11 10:59:31]  Proved solution: 
[1m[92mif (+ -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 10:59:32]  --------------------------------------------------------------------------------
[01/11 10:59:32]  Iteration: 470 (390 solution, 79 counterexamples)
[01/11 11:03:18]  Generator returned sat in 217.104914 secs.
[01/11 11:03:18]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:03:42]  Verifer returned unsat in 23.909185 secs.
[01/11 11:03:42]  sf_get_cex returned in 24.038130 secs.
[01/11 11:03:42]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:03:42]  --------------------------------------------------------------------------------
[01/11 11:03:42]  Iteration: 471 (391 solution, 79 counterexamples)
[01/11 11:07:45]  Generator returned sat in 233.395992 secs.
[01/11 11:07:46]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:07:52]  Verifer returned unsat in 6.273587 secs.
[01/11 11:07:52]  sf_get_cex returned in 6.404013 secs.
[01/11 11:07:52]  Proved solution: 
[1m[92mif (+ 1min_qdel + -5 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:07:52]  --------------------------------------------------------------------------------
[01/11 11:07:52]  Iteration: 472 (392 solution, 79 counterexamples)
[01/11 11:09:57]  Generator returned sat in 115.694112 secs.
[01/11 11:09:58]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:10:26]  Verifer returned unsat in 27.781099 secs.
[01/11 11:10:26]  sf_get_cex returned in 27.910221 secs.
[01/11 11:10:26]  Proved solution: 
[1m[92mif (+ 1min_qdel + -4 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:10:26]  --------------------------------------------------------------------------------
[01/11 11:10:26]  Iteration: 473 (393 solution, 79 counterexamples)
[01/11 11:14:27]  Generator returned sat in 231.821422 secs.
[01/11 11:14:27]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:14:34]  Verifer returned unsat in 6.606980 secs.
[01/11 11:14:34]  sf_get_cex returned in 6.732000 secs.
[01/11 11:14:34]  Proved solution: 
[1m[92mif (+ -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:14:34]  --------------------------------------------------------------------------------
[01/11 11:14:34]  Iteration: 474 (394 solution, 79 counterexamples)
[01/11 11:18:03]  Generator returned sat in 199.728218 secs.
[01/11 11:18:03]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:18:09]  Verifer returned unsat in 5.817264 secs.
[01/11 11:18:09]  sf_get_cex returned in 5.947886 secs.
[01/11 11:18:09]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1max_buffer + -1 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:18:09]  --------------------------------------------------------------------------------
[01/11 11:18:09]  Iteration: 475 (395 solution, 79 counterexamples)
[01/11 11:22:52]  Generator returned sat in 274.179425 secs.
[01/11 11:22:53]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:22:58]  Verifer returned unsat in 5.137511 secs.
[01/11 11:22:58]  sf_get_cex returned in 5.265873 secs.
[01/11 11:22:58]  Proved solution: 
[1m[92mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:22:58]  --------------------------------------------------------------------------------
[01/11 11:22:58]  Iteration: 476 (396 solution, 79 counterexamples)
[01/11 11:26:24]  Generator returned sat in 196.847445 secs.
[01/11 11:26:24]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:26:39]  Verifer returned unsat in 14.070746 secs.
[01/11 11:26:39]  sf_get_cex returned in 14.194288 secs.
[01/11 11:26:39]  Proved solution: 
[1m[92mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:26:39]  --------------------------------------------------------------------------------
[01/11 11:26:39]  Iteration: 477 (397 solution, 79 counterexamples)
[01/11 11:30:01]  Generator returned sat in 193.871138 secs.
[01/11 11:30:02]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:30:14]  Verifer returned unsat in 12.069465 secs.
[01/11 11:30:14]  sf_get_cex returned in 12.198309 secs.
[01/11 11:30:14]  Proved solution: 
[1m[92mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:30:14]  --------------------------------------------------------------------------------
[01/11 11:30:14]  Iteration: 478 (398 solution, 79 counterexamples)
[01/11 11:33:41]  Generator returned sat in 197.334656 secs.
[01/11 11:33:41]  Candidate solution: 
[1m[94mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:33:46]  Verifer returned unsat in 4.552620 secs.
[01/11 11:33:46]  sf_get_cex returned in 4.672859 secs.
[01/11 11:33:46]  Proved solution: 
[1m[92mif (+ -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:33:46]  --------------------------------------------------------------------------------
[01/11 11:33:46]  Iteration: 479 (399 solution, 79 counterexamples)
[01/11 11:37:06]  Generator returned sat in 190.971869 secs.
[01/11 11:37:06]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:37:22]  Verifer returned unsat in 15.944834 secs.
[01/11 11:37:22]  sf_get_cex returned in 16.069813 secs.
[01/11 11:37:22]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:37:22]  --------------------------------------------------------------------------------
[01/11 11:37:22]  Iteration: 480 (400 solution, 79 counterexamples)
[01/11 11:40:43]  Generator returned sat in 191.307690 secs.
[01/11 11:40:43]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:40:50]  Verifer returned unsat in 6.547411 secs.
[01/11 11:40:50]  sf_get_cex returned in 6.670702 secs.
[01/11 11:40:50]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1max_buffer + -10 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:40:50]  --------------------------------------------------------------------------------
[01/11 11:40:50]  Iteration: 481 (401 solution, 79 counterexamples)
[01/11 11:44:08]  Generator returned sat in 189.251606 secs.
[01/11 11:44:09]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:44:17]  Verifer returned unsat in 8.654343 secs.
[01/11 11:44:17]  sf_get_cex returned in 8.788036 secs.
[01/11 11:44:17]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:44:18]  --------------------------------------------------------------------------------
[01/11 11:44:18]  Iteration: 482 (402 solution, 79 counterexamples)
[01/11 11:47:30]  Generator returned sat in 183.767881 secs.
[01/11 11:47:31]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:47:47]  Verifer returned unsat in 16.206745 secs.
[01/11 11:47:47]  sf_get_cex returned in 16.332591 secs.
[01/11 11:47:47]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:47:47]  --------------------------------------------------------------------------------
[01/11 11:47:47]  Iteration: 483 (403 solution, 79 counterexamples)
[01/11 11:51:12]  Generator returned sat in 195.963936 secs.
[01/11 11:51:13]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:51:19]  Verifer returned unsat in 6.578603 secs.
[01/11 11:51:19]  sf_get_cex returned in 6.703329 secs.
[01/11 11:51:19]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:51:19]  --------------------------------------------------------------------------------
[01/11 11:51:19]  Iteration: 484 (404 solution, 79 counterexamples)
[01/11 11:54:43]  Generator returned sat in 194.430696 secs.
[01/11 11:54:44]  Candidate solution: 
[1m[94mif (+ -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:55:06]  Verifer returned unsat in 22.072109 secs.
[01/11 11:55:06]  sf_get_cex returned in 22.204794 secs.
[01/11 11:55:06]  Proved solution: 
[1m[92mif (+ -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:55:06]  --------------------------------------------------------------------------------
[01/11 11:55:06]  Iteration: 485 (405 solution, 79 counterexamples)
[01/11 11:58:24]  Generator returned sat in 188.666615 secs.
[01/11 11:58:24]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:58:30]  Verifer returned unsat in 5.667920 secs.
[01/11 11:58:30]  sf_get_cex returned in 5.795062 secs.
[01/11 11:58:30]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 1/2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 11:58:30]  --------------------------------------------------------------------------------
[01/11 11:58:30]  Iteration: 486 (406 solution, 79 counterexamples)
[01/11 12:01:55]  Generator returned sat in 196.084830 secs.
[01/11 12:01:56]  Candidate solution: 
[1m[94mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:02:04]  Verifer returned unsat in 8.512189 secs.
[01/11 12:02:04]  sf_get_cex returned in 8.636043 secs.
[01/11 12:02:04]  Proved solution: 
[1m[92mif (+ 1min_qdel + -1min_buffer + -1max_buffer + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:02:05]  --------------------------------------------------------------------------------
[01/11 12:02:05]  Iteration: 487 (407 solution, 79 counterexamples)
[01/11 12:05:22]  Generator returned sat in 188.864323 secs.
[01/11 12:05:23]  Candidate solution: 
[1m[94mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:05:42]  Verifer returned unsat in 19.058318 secs.
[01/11 12:05:42]  sf_get_cex returned in 19.188763 secs.
[01/11 12:05:42]  Proved solution: 
[1m[92mif (+ 1min_qdel + 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:05:42]  --------------------------------------------------------------------------------
[01/11 12:05:42]  Iteration: 488 (408 solution, 79 counterexamples)
[01/11 12:09:07]  Generator returned sat in 195.199126 secs.
[01/11 12:09:07]  Candidate solution: 
[1m[94mif (+ 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:09:21]  Verifer returned unsat in 13.772071 secs.
[01/11 12:09:21]  sf_get_cex returned in 13.925326 secs.
[01/11 12:09:21]  Proved solution: 
[1m[92mif (+ 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:09:21]  --------------------------------------------------------------------------------
[01/11 12:09:21]  Iteration: 489 (409 solution, 79 counterexamples)
[01/11 12:12:55]  Generator returned sat in 204.944666 secs.
[01/11 12:12:56]  Candidate solution: 
[1m[94mif (+ -1min_qdel + 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:13:03]  Verifer returned unsat in 7.013852 secs.
[01/11 12:13:03]  sf_get_cex returned in 7.139666 secs.
[01/11 12:13:03]  Proved solution: 
[1m[92mif (+ -1min_qdel + 1min_buffer + -1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:13:03]  --------------------------------------------------------------------------------
[01/11 12:13:03]  Iteration: 490 (410 solution, 79 counterexamples)
[01/11 12:17:01]  Generator returned sat in 228.356597 secs.
[01/11 12:17:02]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:17:10]  Verifer returned unsat in 8.217824 secs.
[01/11 12:17:10]  sf_get_cex returned in 8.354817 secs.
[01/11 12:17:10]  Proved solution: 
[1m[92mif (+ -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:17:10]  --------------------------------------------------------------------------------
[01/11 12:17:10]  Iteration: 491 (411 solution, 79 counterexamples)
[01/11 12:20:38]  Generator returned sat in 198.432617 secs.
[01/11 12:20:38]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:22:58]  Verifer returned unsat in 139.209389 secs.
[01/11 12:22:58]  sf_get_cex returned in 139.343257 secs.
[01/11 12:22:58]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + 1max_buffer + -2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:22:58]  --------------------------------------------------------------------------------
[01/11 12:22:58]  Iteration: 492 (412 solution, 79 counterexamples)
[01/11 12:24:45]  Generator returned sat in 97.756793 secs.
[01/11 12:24:45]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:24:53]  Verifer returned unsat in 7.806333 secs.
[01/11 12:24:53]  sf_get_cex returned in 7.930889 secs.
[01/11 12:24:53]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + -1max_buffer + 3 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:24:53]  --------------------------------------------------------------------------------
[01/11 12:24:53]  Iteration: 493 (413 solution, 79 counterexamples)
[01/11 12:29:21]  Generator returned sat in 259.012602 secs.
[01/11 12:29:22]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:29:30]  Verifer returned unsat in 7.582792 secs.
[01/11 12:29:30]  sf_get_cex returned in 7.715101 secs.
[01/11 12:29:30]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:29:30]  --------------------------------------------------------------------------------
[01/11 12:29:30]  Iteration: 494 (414 solution, 79 counterexamples)
[01/11 12:32:44]  Generator returned sat in 185.377535 secs.
[01/11 12:32:45]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:32:51]  Verifer returned unsat in 6.090775 secs.
[01/11 12:32:51]  sf_get_cex returned in 6.217060 secs.
[01/11 12:32:51]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:32:51]  --------------------------------------------------------------------------------
[01/11 12:32:51]  Iteration: 495 (415 solution, 79 counterexamples)
[01/11 12:36:03]  Generator returned sat in 182.560350 secs.
[01/11 12:36:03]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:36:21]  Verifer returned unsat in 16.938113 secs.
[01/11 12:36:21]  sf_get_cex returned in 17.067289 secs.
[01/11 12:36:21]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:36:21]  --------------------------------------------------------------------------------
[01/11 12:36:21]  Iteration: 496 (416 solution, 79 counterexamples)
[01/11 12:39:31]  Generator returned sat in 181.708999 secs.
[01/11 12:39:32]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:39:39]  Verifer returned unsat in 6.887847 secs.
[01/11 12:39:39]  sf_get_cex returned in 7.016042 secs.
[01/11 12:39:39]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 8 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:39:39]  --------------------------------------------------------------------------------
[01/11 12:39:39]  Iteration: 497 (417 solution, 79 counterexamples)
[01/11 12:41:21]  Generator returned sat in 93.256272 secs.
[01/11 12:41:22]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:41:29]  Verifer returned unsat in 7.140694 secs.
[01/11 12:41:29]  sf_get_cex returned in 7.264264 secs.
[01/11 12:41:29]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:41:29]  --------------------------------------------------------------------------------
[01/11 12:41:29]  Iteration: 498 (418 solution, 79 counterexamples)
[01/11 12:43:09]  Generator returned sat in 90.367526 secs.
[01/11 12:43:09]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:43:14]  Verifer returned unsat in 4.817227 secs.
[01/11 12:43:14]  sf_get_cex returned in 4.938214 secs.
[01/11 12:43:14]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + -1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:43:14]  --------------------------------------------------------------------------------
[01/11 12:43:14]  Iteration: 499 (419 solution, 79 counterexamples)
[01/11 12:44:54]  Generator returned sat in 90.563182 secs.
[01/11 12:44:54]  Candidate solution: 
[1m[94mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:45:11]  Verifer returned unsat in 16.089601 secs.
[01/11 12:45:11]  sf_get_cex returned in 16.217886 secs.
[01/11 12:45:11]  Proved solution: 
[1m[92mif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -1min_c + 1 > 0):
    r_f[n][t] = max(alpha, 1min_c + 1alpha)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:45:11]  --------------------------------------------------------------------------------
[01/11 12:45:11]  Iteration: 500 (420 solution, 79 counterexamples)
[01/11 12:47:05]  Generator returned sat in 104.976562 secs.
[01/11 12:47:05]  Candidate solution: 
[1m[94mif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:47:11]  Verifer returned unsat in 5.495602 secs.
[01/11 12:47:11]  sf_get_cex returned in 5.626744 secs.
[01/11 12:47:11]  Proved solution: 
[1m[92mif (+ -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:47:11]  --------------------------------------------------------------------------------
[01/11 12:47:11]  Iteration: 501 (421 solution, 79 counterexamples)
[01/11 12:48:55]  Generator returned sat in 94.728611 secs.
[01/11 12:48:55]  Candidate solution: 
[1m[94mif (+ -1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:49:16]  Verifer returned unsat in 20.962558 secs.
[01/11 12:49:16]  sf_get_cex returned in 21.093667 secs.
[01/11 12:49:16]  Proved solution: 
[1m[92mif (+ -1min_qdel + -1min_buffer + 1 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ -2min_c + 1max_c + 9 > 0):
    r_f[n][t] = max(alpha, 2min_c)
else:
    r_f[n][t] = max(alpha, 1min_c)[0m
[01/11 12:49:16]  --------------------------------------------------------------------------------
[01/11 12:49:16]  Iteration: 502 (422 solution, 79 counterexamples)
[01/11 12:52:39]  Generator returned sat in 194.184892 secs.
[01/11 12:52:40]  Candidate solution: 
[1m[94mif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 12:52:49]  Verifer returned unsat in 8.710431 secs.
[01/11 12:52:49]  sf_get_cex returned in 8.848716 secs.
[01/11 12:52:49]  Proved solution: 
[1m[92mif (+ -1min_c + 1/2max_c + 2 > 0):
    r_f[n][t] = max(alpha, 2min_c)
elif (+ 1min_c + 1max_c + -4 > 0):
    r_f[n][t] = max(alpha, 1min_c)
else:
    r_f[n][t] = max(alpha, 1/2min_c)[0m
[01/11 12:52:49]  --------------------------------------------------------------------------------
[01/11 12:52:49]  Iteration: 503 (423 solution, 79 counterexamples)
